                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdkafka_queue.obj ../asg/asm/rdkafka_queue.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdkafka_queue.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
@@ZARCH#  WX 00000001                              00
@RDKAFKA_QUEUE
          SD 00000002 00000000 00007BF0            07  @CODE
write     ER 00000003                                  WRITE
@@ASSERT  ER 00000004                                  __ASSERT
rd_kafka_op2str
          ER 00000005                                  RD_KAFKA_OP2STR
rd_kafka_op_destroy
          ER 00000006                                  RD_KAFKA_OP_DESTROY
_tthread_timespec_get
          ER 00000007                                  _TTHREAD_TIMESPEC_GET
mtx_init  ER 00000008                                  MTX_INIT
mtx_destroy
          ER 00000009                                  MTX_DESTROY
mtx_lock  ER 0000000A                                  MTX_LOCK
rd_kafka_op_reply
          ER 0000000B                                  RD_KAFKA_OP_REPLY
fprintf   ER 0000000C                                  FPRINTF
rd_kafka_poll_cb
          ER 0000000D                                  RD_KAFKA_POLL_CB
mtx_unlock
          ER 0000000E                                  MTX_UNLOCK
cnd_init  ER 0000000F                                  CND_INIT
cnd_destroy
          ER 00000010                                  CND_DESTROY
cnd_signal
          ER 00000011                                  CND_SIGNAL
cnd_broadcast
          ER 00000012                                  CND_BROADCAST
rd_kafka_toppar_destroy_final
          ER 00000013                                  RD_KAFKA_TOPPAR_DESTROY_FINAL
rd_kafka_op_handle
          ER 00000014                                  RD_KAFKA_OP_HANDLE
rd_kafka_op_offset_store
          ER 00000015                                  RD_KAFKA_OP_OFFSET_STORE
rd_kafka_toppar_get2
          ER 00000016                                  RD_KAFKA_TOPPAR_GET2
cnd_timedwait_abs
          ER 00000017                                  CND_TIMEDWAIT_ABS
calloc    ER 00000018                                  CALLOC
free      ER 00000019                                  FREE
malloc    ER 0000001A                                  MALLOC
rd_kafka_message_get
          ER 0000001B                                  RD_KAFKA_MESSAGE_GET
GETTFD@Y  ER 0000001C                                  GETTIMEOFDAY
@@PT3ML   ER 0000001D                                  PTHREAD_MUTEX_LOCK
@@PT3MU   ER 0000001E                                  PTHREAD_MUTEX_UNLOCK
rd_kafka_crash
          ER 0000001F                                  RD_KAFKA_CRASH
rd_kafka_yield_thread
          XD 00000020 00000003 00000004                RD_KAFKA_YIELD_THREAD
@rdkafka_queue&
          XD 00000021 00000007 000006D8                @@STATIC
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
@rdkafka_queue
          SD 00000022 00007BF0 00000964            07  @DATA
rdkafka_queue:
          SD 00000023 00008558 00001040            07  @@INIT@
rd_kafka_yield
          LD          00003788          00000002   00  RD_KAFKA_YIELD
rd_kafka_q_destroy_final
          LD          00003940          00000002   00  RD_KAFKA_Q_DESTROY_FINAL
rd_kafka_q_init0
          LD          00003BB0          00000002   00  RD_KAFKA_Q_INIT0
rd_kafka_q_new0
          LD          00003D40          00000002   00  RD_KAFKA_Q_NEW0
rd_kafka_q_fwd_set0
          LD          00003EB0          00000002   00  RD_KAFKA_Q_FWD_SET0
rd_kafka_q_purge0
          LD          00004098          00000002   00  RD_KAFKA_Q_PURGE0
rd_kafka_q_purge_toppar_version
          LD          00004358          00000002   00  RD_KAFKA_Q_PURGE_TOPPAR_VERSION
rd_kafka_q_move_cnt
          LD          00004648          00000002   00  RD_KAFKA_Q_MOVE_CNT
rd_kafka_q_pop_serve
          LD          00004C00          00000002   00  RD_KAFKA_Q_POP_SERVE
rd_kafka_q_pop
          LD          00005000          00000002   00  RD_KAFKA_Q_POP
rd_kafka_q_serve
          LD          00005138          00000002   00  RD_KAFKA_Q_SERVE
rd_kafka_q_serve_rkmessages
          LD          000057C0          00000002   00  RD_KAFKA_Q_SERVE_RKMESSAGES
rd_kafka_queue_destroy
          LD          00005D08          00000002   00  RD_KAFKA_QUEUE_DESTROY
rd_kafka_queue_new0
          LD          00005E70          00000002   00  RD_KAFKA_QUEUE_NEW0
rd_kafka_queue_new
          LD          00005FC0          00000002   00  RD_KAFKA_QUEUE_NEW
rd_kafka_queue_get_main
          LD          00006150          00000002   00  RD_KAFKA_QUEUE_GET_MAIN
rd_kafka_queue_get_consumer
          LD          00006278          00000002   00  RD_KAFKA_QUEUE_GET_CONSUMER
rd_kafka_queue_get_partition
          LD          000063B8          00000002   00  RD_KAFKA_QUEUE_GET_PARTITION
rd_kafka_queue_get_background
          LD          00006588          00000002   00  RD_KAFKA_QUEUE_GET_BACKGROUND
rd_kafka_set_log_queue
          LD          000066C0          00000002   00  RD_KAFKA_SET_LOG_QUEUE
rd_kafka_queue_forward
          LD          00006818          00000002   00  RD_KAFKA_QUEUE_FORWARD
rd_kafka_queue_length
          LD          00006960          00000002   00  RD_KAFKA_QUEUE_LENGTH
rd_kafka_q_io_event_enable
          LD          00006A80          00000002   00  RD_KAFKA_Q_IO_EVENT_ENABLE
rd_kafka_queue_io_event_enable
          LD          00006CA8          00000002   00  RD_KAFKA_QUEUE_IO_EVENT_ENABLE
rd_kafka_queue_yield
                                              External Symbol Dictionary                                                   Page    5 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
          LD          00006DE8          00000002   00  RD_KAFKA_QUEUE_YIELD
rd_kafka_q_cb_event_enable
          LD          00006F08          00000002   00  RD_KAFKA_Q_CB_EVENT_ENABLE
rd_kafka_queue_cb_event_enable
          LD          000070D8          00000002   00  RD_KAFKA_QUEUE_CB_EVENT_ENABLE
rd_kafka_q_wait_result
          LD          00007210          00000002   00  RD_KAFKA_Q_WAIT_RESULT
rd_kafka_q_apply
          LD          00007380          00000002   00  RD_KAFKA_Q_APPLY
rd_kafka_q_fix_offsets
          LD          000075B0          00000002   00  RD_KAFKA_Q_FIX_OFFSETS
rd_kafka_q_dump
          LD          000077E0          00000002   00  RD_KAFKA_Q_DUMP
rd_kafka_enq_once_trigger_destroy
          LD          00007B20          00000002   00  RD_KAFKA_ENQ_ONCE_TRIGGER_DESTROY
rd_kafka_yield_thread
          LD          00008554          00000022   00  @DRD_KAFKA_YIELD_THREAD
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Fri Apr 30 15:35:54 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS X'7CD9C4D2C1C6D2C16DD8E4C5E4C5'
00000000                00000000 00007BF0     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS X'7C998492818692816D98A485A485'
                                              18 write    ALIAS C'write'
                                              19          EXTRN write
                                              20 __assert ALIAS C'@@ASSERT'
                                              21          EXTRN __assert
                                              22 rd_kafka_op2str ALIAS X'99846D92818692816D9697F2A2A399'
                                              23          EXTRN rd_kafka_op2str
                                              24 rd_kafka_op_destroy ALIAS X'99846D92818692816D96976D8485A2A39996A8'
                                              25          EXTRN rd_kafka_op_destroy
                                              26 _tthread_timespec_get ALIAS X'6DA3A388998581846DA3899485A29785836D8785A*
                                                                3'
                                              27          EXTRN _tthread_timespec_get
                                              28 mtx_init ALIAS X'94A3A76D899589A3'
                                              29          EXTRN mtx_init
                                              30 mtx_destroy ALIAS X'94A3A76D8485A2A39996A8'
                                              31          EXTRN mtx_destroy
                                              32 mtx_lock ALIAS X'94A3A76D93968392'
                                              33          EXTRN mtx_lock
                                              34 rd_kafka_op_reply ALIAS X'99846D92818692816D96976D99859793A8'
                                              35          EXTRN rd_kafka_op_reply
                                              36 fprintf  ALIAS C'fprintf'
                                              37          EXTRN fprintf
                                              38 rd_kafka_poll_cb ALIAS X'99846D92818692816D979693936D8382'
                                              39          EXTRN rd_kafka_poll_cb
                                              40 mtx_unlock ALIAS X'94A3A76DA49593968392'
                                              41          EXTRN mtx_unlock
                                              42 cnd_init ALIAS X'8395846D899589A3'
                                              43          EXTRN cnd_init
                                              44 cnd_destroy ALIAS X'8395846D8485A2A39996A8'
                                              45          EXTRN cnd_destroy
                                              46 cnd_signal ALIAS X'8395846DA28987958193'
                                              47          EXTRN cnd_signal
                                              48 cnd_broadcast ALIAS X'8395846D82999681848381A2A3'
                                              49          EXTRN cnd_broadcast
                                              50 rd_kafka_toppar_destroy_final ALIAS X'99846D92818692816DA396979781996D8*
                                                                485A2A39996A86D8689958193'
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                              51          EXTRN rd_kafka_toppar_destroy_final
                                              52 rd_kafka_op_handle ALIAS X'99846D92818692816D96976D888195849385'
                                              53          EXTRN rd_kafka_op_handle
                                              54 rd_kafka_op_offset_store ALIAS X'99846D92818692816D96976D968686A285A36D*
                                                                A2A3969985'
                                              55          EXTRN rd_kafka_op_offset_store
                                              56 rd_kafka_toppar_get2 ALIAS X'99846D92818692816DA396979781996D8785A3F2'
                                              57          EXTRN rd_kafka_toppar_get2
                                              58 cnd_timedwait_abs ALIAS X'8395846DA389948584A68189A36D8182A2'
                                              59          EXTRN cnd_timedwait_abs
                                              60 calloc   ALIAS C'calloc'
                                              61          EXTRN calloc
                                              62 free     ALIAS C'free'
                                              63          EXTRN free
                                              64 malloc   ALIAS C'malloc'
                                              65          EXTRN malloc
                                              66 rd_kafka_message_get ALIAS X'99846D92818692816D9485A2A28187856D8785A3'
                                              67          EXTRN rd_kafka_message_get
                                              68 gettimeofday ALIAS C'GETTFD@Y'
                                              69          EXTRN gettimeofday
                                              70 pthread_mutex_lock ALIAS C'@@PT3ML'
                                              71          EXTRN pthread_mutex_lock
                                              72 pthread_mutex_unlock ALIAS C'@@PT3MU'
                                              73          EXTRN pthread_mutex_unlock
                                              74 rd_kafka_crash ALIAS X'99846D92818692816D839981A288'
                                              75          EXTRN rd_kafka_crash
                                              76 *
                                              77 *
                                              78 *
                                              79 * ....... start of rd_atomic32_sub
00000000                                      80 @LNAME1060 DS  0H
00000000 0000000F                             81          DC    X'0000000F'
00000004 99846D81A3969489                     82          DC    C'rd_atomic32_sub'
00000013 00                                   83          DC    X'00'
                                              84 rd_atomic32_sub DCCPRLG CINDEX=1060,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1060
                                              85          macro
                                              86          dccextrn &m
                                              87          gblc    &$dccext(1000)
                                              88          gbla    &$dccexti
                                              89          lcla    &i
                                              90 &$dccext(&$dccexti+1) setc    '&m'
                                              91 &i       seta    1
                                              92 .loop    aif    (&i gt &$dccexti).around
                                              93          aif    ('&$dccext(&i)' eq '&m').getout
                                              94 &i       seta    &i+1
                                              95          ago     .loop
                                              96 .around  anop
                                              97 &$dccexti seta &$dccexti+1
                                              98          extrn  &m
                                              99 .getout  anop
                                             100          mend
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000018                                     101+$eye0002    ds    0d                                                    02-DCCCA
00000018 C4C3C3                              102+         dc cl3'DCC'                                                    02-DCCCA
0000001B 01                                  103+         dc xl1'01' format one                                          02-DCCCA
0000001C 00000000                            104+         dc a(0)                                                        02-DCCCA
00000020 000000000000008A                    105+         dc ad(@PER_1060)                                               02-DCCCA
00000028 00000000000000B8                    106+         dc ad(184)                                                     02-DCCCA
00000030 0000000000000000                    107+         dc ad(0)                                                       02-DCCCA
00000038 0000000000001000                    108+         dc ad(4096)                                                    02-DCCCA
00000040 20                                  109+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000041 03                                  110+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000042 03                                  111+         dc al1(3)                                                      02-DCCCA
00000043 08                                  112+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000044 00                                  113+         dc bl.8'00000000'                                              02-DCCCA
00000045 000000                              114+         dc al3(0)                                                      02-DCCCA
00000048 0000000000000000                    115+         dc ad(@LNAME1060)                                              02-DCCCA
00000050                                     116+         ds 0d                                                          02-DCCCA
00000050 0000000000000018                    117+         dc ad($eye0002)                                                02-DCCCA
00000058 0000000000000000                    118+         dc ad(0)                                                       02-DCCCA
00000060                                     119+         ds    0d                                                       01-DCCPR
00000060                                     120+rd_atomic32_sub ds 0d                                                   01-DCCPR
00000060                                     121+@REGION_1060_1 ds 0h                                                    01-DCCPR
00000060 EBEC D008 0024          00000008    122+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000066 E3E0 D088 0004          00000088    123+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000006C E3C0 D090 0004          00000090    124+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000072 B904 002E                           125+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000076 E3B0 C018 0004          00000018    126+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000007C A7EB 00B8               000000B8    127+         aghi  14,184              increase by frame size               01-DCCPR
00000080 E3E0 C020 0021          00000020    128+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000086 4720 B020               00000020    129+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000008A                                     130+@PER_1060 ds   0h                                                       01-DCCPR
0000008A EBDE 2080 0024          00000080    131+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000090 E3C0 2090 0024          00000090    132+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000096 B904 00D2                           133+         lgr   13,2                set real frame pointer               01-DCCPR
0000009A B904 00CF                           134+         lgr   12,15               set base reg                         01-DCCPR
                        00000060             135+         using @REGION_1060_1,12                                        01-DCCPR
0000009E B904 0031                           136          LGR   3,1         ; ptr to parm area
                                             137 * ******* End of Prologue
                                             138 * *
000000A2 E320 3000 0004          00000000    139          LG    2,0(0,3)    ; ra
                                             140 * ***
                                             141 * ***      int32_t r;
                                             142 * ***      pthread_mutex_lock(&ra->lock);
000000A8 41F0 2008               00000008    143          LA    15,8(0,2)
000000AC E3F0 D0B0 0024          000000B0    144          STG   15,176(0,13)
000000B2 4110 D0B0               000000B0    145          LA    1,176(0,13)
000000B6 E3F0 C0D8 0004          00000138    146          LG    15,@lit_1060_0 ; pthread_mutex_lock
000000BC                                     147 @@gen_label0 DS    0H
000000BC 05EF                                148          BALR  14,15
000000BE                                     149 @@gen_label1 DS    0H
                                             150 * ***      ra->val -= v;
000000BE 58F0 2000               00000000    151          L     15,0(0,2)
000000C2 5BF0 300C               0000000C    152          S     15,12(0,3)
                                                                                                                           Page    9 
  Active Usings: @REGION_1060_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000C6 50F0 2000               00000000    153          ST    15,0(0,2)
                                             154 * ***      r = ra->val;
000000CA 183F                                155          LR    3,15        ; ra
                                             156 * ***      pthread_mutex_unlock(&ra->lock);
000000CC 41F0 2008               00000008    157          LA    15,8(0,2)
000000D0 E3F0 D0B0 0024          000000B0    158          STG   15,176(0,13)
000000D6 4110 D0B0               000000B0    159          LA    1,176(0,13)
000000DA E3F0 C0E0 0004          00000140    160          LG    15,@lit_1060_1 ; pthread_mutex_unlock
000000E0                                     161 @@gen_label2 DS    0H
000000E0 05EF                                162          BALR  14,15
000000E2                                     163 @@gen_label3 DS    0H
                                             164 * ***      return r;
000000E2 B914 00F3                           165          LGFR  15,3
                                             166 * ***   # 128 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             167 * ***      return __atomic_sub_fetch(&ra->val, v, 6);
                                             168 * ***
                                             169 * ***   }
                                             170 * * **** Start of Epilogue
                                             171          DCCEPIL
000000E6                                     172+         ds 0h                                                          01-DCCEP
                                             173+* Epilog
000000E6 D707 D088 D088 00000088 00000088    174+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000000EC E3D0 D080 0004          00000080    175+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000000F2 E3C0 D090 0004          00000090    176+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000000F8 E3B0 C018 0004          00000018    177+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000000FE E3C0 B010 0021          00000010    178+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000104 E3E0 D008 0004          00000008    179+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000010A EB1C D020 0004          00000020    180+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000110 078E                                181+         bcr 8,14                if same dsab, just return              01-DCCEP
00000112 E3F0 D010 0024          00000010    182+         stg 15,16(0,13)         save return code                       01-DCCEP
00000118 E300 D018 0024          00000018    183+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000011E E3F0 D090 0004          00000090    184+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000124 E3F0 F018 0004          00000018    185+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000012A 47F0 F040               00000040    186+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             187+* End of Epilog
                                             188 * * **** End of Epilogue
00000130                                     189          DS    0D
00000130 000000B8                            190 @FRAMESIZE_1060 DC F'184'
00000134 00000000
00000138 0000000000000000                    191 @lit_1060_0 DC AD(pthread_mutex_lock)
00000140 0000000000000000                    192 @lit_1060_1 DC AD(pthread_mutex_unlock)
                                             193          DROP  12
                                             194 *
                                             195 *   DSECT for automatic variables in "rd_atomic32_sub"
                                             196 *      (FUNCTION #1060)
                                             197 *
00000000                00000000 000000AC    198 @AUTO#rd_atomic32_sub DSECT
00000000                                     199          DS    XL168
000000A8                                     200 rd_atomic32_sub#r#0 DS 1F  ; r
                                             201 *
00000148                00000000 00007BF0    202 @CODE    CSECT
                                             203 *
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             204 *
                                             205 *
                                             206 * ....... start of rd_atomic32_get
00000148                                     207 @LNAME1061 DS  0H
00000148 0000000F                            208          DC    X'0000000F'
0000014C 99846D81A3969489                    209          DC    C'rd_atomic32_get'
0000015B 00                                  210          DC    X'00'
                                             211 rd_atomic32_get DCCPRLG CINDEX=1061,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1061
                                             212          macro
                                             213          dccextrn &m
                                             214          gblc    &$dccext(1000)
                                             215          gbla    &$dccexti
                                             216          lcla    &i
                                             217 &$dccext(&$dccexti+1) setc    '&m'
                                             218 &i       seta    1
                                             219 .loop    aif    (&i gt &$dccexti).around
                                             220          aif    ('&$dccext(&i)' eq '&m').getout
                                             221 &i       seta    &i+1
                                             222          ago     .loop
                                             223 .around  anop
                                             224 &$dccexti seta &$dccexti+1
                                             225          extrn  &m
                                             226 .getout  anop
                                             227          mend
00000160                                     228+$eye0005    ds    0d                                                    02-DCCCA
00000160 C4C3C3                              229+         dc cl3'DCC'                                                    02-DCCCA
00000163 01                                  230+         dc xl1'01' format one                                          02-DCCCA
00000164 00000000                            231+         dc a(0)                                                        02-DCCCA
00000168 00000000000001D2                    232+         dc ad(@PER_1061)                                               02-DCCCA
00000170 00000000000000B8                    233+         dc ad(184)                                                     02-DCCCA
00000178 0000000000000000                    234+         dc ad(0)                                                       02-DCCCA
00000180 0000000000001000                    235+         dc ad(4096)                                                    02-DCCCA
00000188 20                                  236+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000189 03                                  237+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000018A 03                                  238+         dc al1(3)                                                      02-DCCCA
0000018B 08                                  239+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000018C 00                                  240+         dc bl.8'00000000'                                              02-DCCCA
0000018D 000000                              241+         dc al3(0)                                                      02-DCCCA
00000190 0000000000000148                    242+         dc ad(@LNAME1061)                                              02-DCCCA
00000198                                     243+         ds 0d                                                          02-DCCCA
00000198 0000000000000160                    244+         dc ad($eye0005)                                                02-DCCCA
000001A0 0000000000000000                    245+         dc ad(0)                                                       02-DCCCA
000001A8                                     246+         ds    0d                                                       01-DCCPR
000001A8                                     247+rd_atomic32_get ds 0d                                                   01-DCCPR
000001A8                                     248+@REGION_1061_1 ds 0h                                                    01-DCCPR
000001A8 EBEC D008 0024          00000008    249+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001AE E3E0 D088 0004          00000088    250+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001B4 E3C0 D090 0004          00000090    251+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001BA B904 002E                           252+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001BE E3B0 C018 0004          00000018    253+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001C4 A7EB 00B8               000000B8    254+         aghi  14,184              increase by frame size               01-DCCPR
                                                                                                                           Page   11 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000001C8 E3E0 C020 0021          00000020    255+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001CE 4720 B020               00000020    256+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001D2                                     257+@PER_1061 ds   0h                                                       01-DCCPR
000001D2 EBDE 2080 0024          00000080    258+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001D8 E3C0 2090 0024          00000090    259+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001DE B904 00D2                           260+         lgr   13,2                set real frame pointer               01-DCCPR
000001E2 B904 00CF                           261+         lgr   12,15               set base reg                         01-DCCPR
                        000001A8             262+         using @REGION_1061_1,12                                        01-DCCPR
                                             263 * ******* End of Prologue
                                             264 * *
000001E6 E320 1000 0004          00000000    265          LG    2,0(0,1)    ; ra
                                             266 * ***
                                             267 * ***      int32_t r;
                                             268 * ***      pthread_mutex_lock(&ra->lock);
000001EC 41F0 2008               00000008    269          LA    15,8(0,2)
000001F0 E3F0 D0B0 0024          000000B0    270          STG   15,176(0,13)
000001F6 4110 D0B0               000000B0    271          LA    1,176(0,13)
000001FA E3F0 C0C8 0004          00000270    272          LG    15,@lit_1061_3 ; pthread_mutex_lock
00000200                                     273 @@gen_label4 DS    0H
00000200 05EF                                274          BALR  14,15
00000202                                     275 @@gen_label5 DS    0H
                                             276 * ***      r = ra->val;
00000202 5830 2000               00000000    277          L     3,0(0,2)    ; ra
                                             278 * ***      pthread_mutex_unlock(&ra->lock);
00000206 41F0 2008               00000008    279          LA    15,8(0,2)
0000020A E3F0 D0B0 0024          000000B0    280          STG   15,176(0,13)
00000210 4110 D0B0               000000B0    281          LA    1,176(0,13)
00000214 E3F0 C0D0 0004          00000278    282          LG    15,@lit_1061_4 ; pthread_mutex_unlock
0000021A                                     283 @@gen_label6 DS    0H
0000021A 05EF                                284          BALR  14,15
0000021C                                     285 @@gen_label7 DS    0H
                                             286 * ***      return r;
0000021C B914 00F3                           287          LGFR  15,3
                                             288 * ***   # 157 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             289 * ***      return __atomic_fetch_add(&ra->val, 0, 6);
                                             290 * ***
                                             291 * ***   }
                                             292 * * **** Start of Epilogue
                                             293          DCCEPIL
00000220                                     294+         ds 0h                                                          01-DCCEP
                                             295+* Epilog
00000220 D707 D088 D088 00000088 00000088    296+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000226 E3D0 D080 0004          00000080    297+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000022C E3C0 D090 0004          00000090    298+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000232 E3B0 C018 0004          00000018    299+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000238 E3C0 B010 0021          00000010    300+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000023E E3E0 D008 0004          00000008    301+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000244 EB1C D020 0004          00000020    302+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000024A 078E                                303+         bcr 8,14                if same dsab, just return              01-DCCEP
0000024C E3F0 D010 0024          00000010    304+         stg 15,16(0,13)         save return code                       01-DCCEP
00000252 E300 D018 0024          00000018    305+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000258 E3F0 D090 0004          00000090    306+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
                                                                                                                           Page   12 
  Active Usings: @REGION_1061_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000025E E3F0 F018 0004          00000018    307+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000264 47F0 F040               00000040    308+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             309+* End of Epilog
                                             310 * * **** End of Epilogue
00000268                                     311          DS    0D
00000268 000000B8                            312 @FRAMESIZE_1061 DC F'184'
0000026C 00000000
00000270 0000000000000000                    313 @lit_1061_3 DC AD(pthread_mutex_lock)
00000278 0000000000000000                    314 @lit_1061_4 DC AD(pthread_mutex_unlock)
                                             315          DROP  12
                                             316 *
                                             317 *   DSECT for automatic variables in "rd_atomic32_get"
                                             318 *      (FUNCTION #1061)
                                             319 *
00000000                00000000 000000AC    320 @AUTO#rd_atomic32_get DSECT
00000000                                     321          DS    XL168
000000A8                                     322 rd_atomic32_get#r#0 DS 1F  ; r
                                             323 *
00000280                00000000 00007BF0    324 @CODE    CSECT
                                             325 *
                                             326 *
                                             327 *
                                             328 * ....... start of rd_atomic64_set
00000280                                     329 @LNAME1067 DS  0H
00000280 0000000F                            330          DC    X'0000000F'
00000284 99846D81A3969489                    331          DC    C'rd_atomic64_set'
00000293 00                                  332          DC    X'00'
                                             333 rd_atomic64_set DCCPRLG CINDEX=1067,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1067
                                             334          macro
                                             335          dccextrn &m
                                             336          gblc    &$dccext(1000)
                                             337          gbla    &$dccexti
                                             338          lcla    &i
                                             339 &$dccext(&$dccexti+1) setc    '&m'
                                             340 &i       seta    1
                                             341 .loop    aif    (&i gt &$dccexti).around
                                             342          aif    ('&$dccext(&i)' eq '&m').getout
                                             343 &i       seta    &i+1
                                             344          ago     .loop
                                             345 .around  anop
                                             346 &$dccexti seta &$dccexti+1
                                             347          extrn  &m
                                             348 .getout  anop
                                             349          mend
00000298                                     350+$eye0008    ds    0d                                                    02-DCCCA
00000298 C4C3C3                              351+         dc cl3'DCC'                                                    02-DCCCA
0000029B 01                                  352+         dc xl1'01' format one                                          02-DCCCA
0000029C 00000000                            353+         dc a(0)                                                        02-DCCCA
000002A0 000000000000030A                    354+         dc ad(@PER_1067)                                               02-DCCCA
000002A8 00000000000000B8                    355+         dc ad(184)                                                     02-DCCCA
000002B0 0000000000000000                    356+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000002B8 0000000000001000                    357+         dc ad(4096)                                                    02-DCCCA
000002C0 20                                  358+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000002C1 03                                  359+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000002C2 03                                  360+         dc al1(3)                                                      02-DCCCA
000002C3 08                                  361+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000002C4 00                                  362+         dc bl.8'00000000'                                              02-DCCCA
000002C5 000000                              363+         dc al3(0)                                                      02-DCCCA
000002C8 0000000000000280                    364+         dc ad(@LNAME1067)                                              02-DCCCA
000002D0                                     365+         ds 0d                                                          02-DCCCA
000002D0 0000000000000298                    366+         dc ad($eye0008)                                                02-DCCCA
000002D8 0000000000000000                    367+         dc ad(0)                                                       02-DCCCA
000002E0                                     368+         ds    0d                                                       01-DCCPR
000002E0                                     369+rd_atomic64_set ds 0d                                                   01-DCCPR
000002E0                                     370+@REGION_1067_1 ds 0h                                                    01-DCCPR
000002E0 EBEC D008 0024          00000008    371+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000002E6 E3E0 D088 0004          00000088    372+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000002EC E3C0 D090 0004          00000090    373+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000002F2 B904 002E                           374+         lgr   2,14                copy addr of our savearea            01-DCCPR
000002F6 E3B0 C018 0004          00000018    375+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000002FC A7EB 00B8               000000B8    376+         aghi  14,184              increase by frame size               01-DCCPR
00000300 E3E0 C020 0021          00000020    377+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000306 4720 B020               00000020    378+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000030A                                     379+@PER_1067 ds   0h                                                       01-DCCPR
0000030A EBDE 2080 0024          00000080    380+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000310 E3C0 2090 0024          00000090    381+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000316 B904 00D2                           382+         lgr   13,2                set real frame pointer               01-DCCPR
0000031A B904 00CF                           383+         lgr   12,15               set base reg                         01-DCCPR
                        000002E0             384+         using @REGION_1067_1,12                                        01-DCCPR
0000031E B904 0031                           385          LGR   3,1         ; ptr to parm area
                                             386 * ******* End of Prologue
                                             387 * *
00000322 E320 3000 0004          00000000    388          LG    2,0(0,3)    ; ra
                                             389 * ***
                                             390 * ***      int64_t r;
                                             391 * ***      pthread_mutex_lock(&ra->lock);
00000328 41F0 2008               00000008    392          LA    15,8(0,2)
0000032C E3F0 D0B0 0024          000000B0    393          STG   15,176(0,13)
00000332 4110 D0B0               000000B0    394          LA    1,176(0,13)
00000336 E3F0 C0D8 0004          000003B8    395          LG    15,@lit_1067_6 ; pthread_mutex_lock
0000033C                                     396 @@gen_label8 DS    0H
0000033C 05EF                                397          BALR  14,15
0000033E                                     398 @@gen_label9 DS    0H
                                             399 * ***      ra->val = v;
0000033E E3F0 3008 0004          00000008    400          LG    15,8(0,3)   ; v
00000344 E3F0 2000 0024          00000000    401          STG   15,0(0,2)   ; ra
                                             402 * ***      r = ra->val;
0000034A B904 003F                           403          LGR   3,15        ; ra
                                             404 * ***      pthread_mutex_unlock(&ra->lock);
0000034E 41F0 2008               00000008    405          LA    15,8(0,2)
00000352 E3F0 D0B0 0024          000000B0    406          STG   15,176(0,13)
00000358 4110 D0B0               000000B0    407          LA    1,176(0,13)
0000035C E3F0 C0E0 0004          000003C0    408          LG    15,@lit_1067_7 ; pthread_mutex_unlock
                                                                                                                           Page   14 
  Active Usings: @REGION_1067_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000362                                     409 @@gen_label10 DS    0H
00000362 05EF                                410          BALR  14,15
00000364                                     411 @@gen_label11 DS    0H
                                             412 * ***      return r;
00000364 B904 00F3                           413          LGR   15,3
                                             414 * ***   # 301 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             415 * ***           __atomic_store_n(&ra->val, v, 6);
                                             416 * ***           return v;
                                             417 * ***   # 309 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             418 * ***   }
                                             419 * * **** Start of Epilogue
                                             420          DCCEPIL
00000368                                     421+         ds 0h                                                          01-DCCEP
                                             422+* Epilog
00000368 D707 D088 D088 00000088 00000088    423+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000036E E3D0 D080 0004          00000080    424+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000374 E3C0 D090 0004          00000090    425+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000037A E3B0 C018 0004          00000018    426+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000380 E3C0 B010 0021          00000010    427+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000386 E3E0 D008 0004          00000008    428+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000038C EB1C D020 0004          00000020    429+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000392 078E                                430+         bcr 8,14                if same dsab, just return              01-DCCEP
00000394 E3F0 D010 0024          00000010    431+         stg 15,16(0,13)         save return code                       01-DCCEP
0000039A E300 D018 0024          00000018    432+         stg 0,24(0,13)          save more return code                  01-DCCEP
000003A0 E3F0 D090 0004          00000090    433+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000003A6 E3F0 F018 0004          00000018    434+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000003AC 47F0 F040               00000040    435+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             436+* End of Epilog
                                             437 * * **** End of Epilogue
000003B0                                     438          DS    0D
000003B0 000000B8                            439 @FRAMESIZE_1067 DC F'184'
000003B4 00000000
000003B8 0000000000000000                    440 @lit_1067_6 DC AD(pthread_mutex_lock)
000003C0 0000000000000000                    441 @lit_1067_7 DC AD(pthread_mutex_unlock)
                                             442          DROP  12
                                             443 *
                                             444 *   DSECT for automatic variables in "rd_atomic64_set"
                                             445 *      (FUNCTION #1067)
                                             446 *
00000000                00000000 000000B0    447 @AUTO#rd_atomic64_set DSECT
00000000                                     448          DS    XL168
000000A8                                     449 rd_atomic64_set#r#0 DS 8XL1 ; r
                                             450 *
000003C8                00000000 00007BF0    451 @CODE    CSECT
                                             452 *
                                             453 *
                                             454 *
                                             455 * ....... start of rd_calloc
000003C8                                     456 @LNAME1077 DS  0H
000003C8 00000009                            457          DC    X'00000009'
000003CC 99846D8381939396                    458          DC    C'rd_calloc'
000003D5 00                                  459          DC    X'00'
                                                                                                                           Page   15 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             460 rd_calloc DCCPRLG CINDEX=1077,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1077
                                             461          macro
                                             462          dccextrn &m
                                             463          gblc    &$dccext(1000)
                                             464          gbla    &$dccexti
                                             465          lcla    &i
                                             466 &$dccext(&$dccexti+1) setc    '&m'
                                             467 &i       seta    1
                                             468 .loop    aif    (&i gt &$dccexti).around
                                             469          aif    ('&$dccext(&i)' eq '&m').getout
                                             470 &i       seta    &i+1
                                             471          ago     .loop
                                             472 .around  anop
                                             473 &$dccexti seta &$dccexti+1
                                             474          extrn  &m
                                             475 .getout  anop
                                             476          mend
000003D8                                     477+$eye0011    ds    0d                                                    02-DCCCA
000003D8 C4C3C3                              478+         dc cl3'DCC'                                                    02-DCCCA
000003DB 01                                  479+         dc xl1'01' format one                                          02-DCCCA
000003DC 00000000                            480+         dc a(0)                                                        02-DCCCA
000003E0 000000000000044A                    481+         dc ad(@PER_1077)                                               02-DCCCA
000003E8 00000000000000D0                    482+         dc ad(208)                                                     02-DCCCA
000003F0 0000000000000000                    483+         dc ad(0)                                                       02-DCCCA
000003F8 0000000000001000                    484+         dc ad(4096)                                                    02-DCCCA
00000400 20                                  485+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000401 03                                  486+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000402 03                                  487+         dc al1(3)                                                      02-DCCCA
00000403 08                                  488+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000404 00                                  489+         dc bl.8'00000000'                                              02-DCCCA
00000405 000000                              490+         dc al3(0)                                                      02-DCCCA
00000408 00000000000003C8                    491+         dc ad(@LNAME1077)                                              02-DCCCA
00000410                                     492+         ds 0d                                                          02-DCCCA
00000410 00000000000003D8                    493+         dc ad($eye0011)                                                02-DCCCA
00000418 0000000000000000                    494+         dc ad(0)                                                       02-DCCCA
00000420                                     495+         ds    0d                                                       01-DCCPR
00000420                                     496+rd_calloc ds   0d                                                       01-DCCPR
00000420                                     497+@REGION_1077_1 ds 0h                                                    01-DCCPR
00000420 EBEC D008 0024          00000008    498+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000426 E3E0 D088 0004          00000088    499+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000042C E3C0 D090 0004          00000090    500+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000432 B904 002E                           501+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000436 E3B0 C018 0004          00000018    502+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000043C A7EB 00D0               000000D0    503+         aghi  14,208              increase by frame size               01-DCCPR
00000440 E3E0 C020 0021          00000020    504+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000446 4720 B020               00000020    505+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000044A                                     506+@PER_1077 ds   0h                                                       01-DCCPR
0000044A EBDE 2080 0024          00000080    507+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000450 E3C0 2090 0024          00000090    508+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000456 B904 00D2                           509+         lgr   13,2                set real frame pointer               01-DCCPR
0000045A B904 00CF                           510+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   16 
  Active Usings: @REGION_1077_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00000420             511+         using @REGION_1077_1,12                                        01-DCCPR
                                             512 * ******* End of Prologue
                                             513 * *
                                             514 * ***      void *p = calloc(num, sz);
0000045E E3F0 1000 0004          00000000    515          LG    15,0(0,1)   ; num
00000464 E3F0 D0B0 0024          000000B0    516          STG   15,176(0,13)
0000046A E3F0 1008 0004          00000008    517          LG    15,8(0,1)   ; sz
00000470 E3F0 D0B8 0024          000000B8    518          STG   15,184(0,13)
00000476 4110 D0B0               000000B0    519          LA    1,176(0,13)
0000047A E3F0 C0F8 0004          00000518    520          LG    15,@lit_1077_9 ; calloc
00000480                                     521 @@gen_label12 DS    0H
00000480 05EF                                522          BALR  14,15
00000482                                     523 @@gen_label13 DS    0H
00000482 B904 002F                           524          LGR   2,15
                                             525 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             526 * ka\\src\\rd.h", 122, "p"));
00000486 B902 00F2                           527          LTGR  15,2
0000048A 4770 C0A2               000004C2    528          BNZ   @L32
0000048E                                     529 @L31     DS    0H
0000048E E3F0 C110 0004          00000530    530          LG    15,@lit_1077_10
00000494 E3F0 D0B0 0024          000000B0    531          STG   15,176(0,13)
0000049A E3F0 C108 0004          00000528    532          LG    15,@lit_1077_11
000004A0 E3F0 D0B8 0024          000000B8    533          STG   15,184(0,13)
000004A6 E548 D0C0 007A          000000C0    534          MVGHI 192(13),122
000004AC 41F0 F020               00000020    535          LA    15,32(0,15)
000004B0 E3F0 D0C8 0024          000000C8    536          STG   15,200(0,13)
000004B6 4110 D0B0               000000B0    537          LA    1,176(0,13)
000004BA E3F0 C100 0004          00000520    538          LG    15,@lit_1077_12 ; __assert
000004C0                                     539 @@gen_label15 DS    0H
000004C0 05EF                                540          BALR  14,15
000004C2                                     541 @@gen_label16 DS    0H
000004C2                                     542 @L32     DS    0H
                                             543 * ***      return p;
000004C2 B904 00F2                           544          LGR   15,2
                                             545 * ***   }
                                             546 * * **** Start of Epilogue
                                             547          DCCEPIL
000004C6                                     548+         ds 0h                                                          01-DCCEP
                                             549+* Epilog
000004C6 D707 D088 D088 00000088 00000088    550+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000004CC E3D0 D080 0004          00000080    551+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000004D2 E3C0 D090 0004          00000090    552+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000004D8 E3B0 C018 0004          00000018    553+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000004DE E3C0 B010 0021          00000010    554+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000004E4 E3E0 D008 0004          00000008    555+         lg  14,8(0,13)          load up return address                 01-DCCEP
000004EA EB1C D020 0004          00000020    556+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000004F0 078E                                557+         bcr 8,14                if same dsab, just return              01-DCCEP
000004F2 E3F0 D010 0024          00000010    558+         stg 15,16(0,13)         save return code                       01-DCCEP
000004F8 E300 D018 0024          00000018    559+         stg 0,24(0,13)          save more return code                  01-DCCEP
000004FE E3F0 D090 0004          00000090    560+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000504 E3F0 F018 0004          00000018    561+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000050A 47F0 F040               00000040    562+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page   17 
  Active Usings: @REGION_1077_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             563+* End of Epilog
                                             564 * * **** End of Epilogue
00000510                                     565          DS    0D
00000510 000000D0                            566 @FRAMESIZE_1077 DC F'208'
00000514 00000000
00000518 0000000000000000                    567 @lit_1077_9 DC AD(calloc)
00000520 0000000000000000                    568 @lit_1077_12 DC AD(__assert)
00000528 0000000000007DFE                    569 @lit_1077_11 DC AD(@strings@)
00000530 0000000000007BF0                    570 @lit_1077_10 DC AD(@DATA)
                                             571          DROP  12
                                             572 *
                                             573 *   DSECT for automatic variables in "rd_calloc"
                                             574 *      (FUNCTION #1077)
                                             575 *
00000000                00000000 000000A8    576 @AUTO#rd_calloc DSECT
00000000                                     577          DS    XL168
                                             578 *
00000538                00000000 00007BF0    579 @CODE    CSECT
                                             580 *
                                             581 *
                                             582 *
                                             583 * ....... start of rd_malloc
00000538                                     584 @LNAME1078 DS  0H
00000538 00000009                            585          DC    X'00000009'
0000053C 99846D9481939396                    586          DC    C'rd_malloc'
00000545 00                                  587          DC    X'00'
                                             588 rd_malloc DCCPRLG CINDEX=1078,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1078
                                             589          macro
                                             590          dccextrn &m
                                             591          gblc    &$dccext(1000)
                                             592          gbla    &$dccexti
                                             593          lcla    &i
                                             594 &$dccext(&$dccexti+1) setc    '&m'
                                             595 &i       seta    1
                                             596 .loop    aif    (&i gt &$dccexti).around
                                             597          aif    ('&$dccext(&i)' eq '&m').getout
                                             598 &i       seta    &i+1
                                             599          ago     .loop
                                             600 .around  anop
                                             601 &$dccexti seta &$dccexti+1
                                             602          extrn  &m
                                             603 .getout  anop
                                             604          mend
00000548                                     605+$eye0014    ds    0d                                                    02-DCCCA
00000548 C4C3C3                              606+         dc cl3'DCC'                                                    02-DCCCA
0000054B 01                                  607+         dc xl1'01' format one                                          02-DCCCA
0000054C 00000000                            608+         dc a(0)                                                        02-DCCCA
00000550 00000000000005BA                    609+         dc ad(@PER_1078)                                               02-DCCCA
00000558 00000000000000D0                    610+         dc ad(208)                                                     02-DCCCA
00000560 0000000000000000                    611+         dc ad(0)                                                       02-DCCCA
00000568 0000000000001000                    612+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   18 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000570 20                                  613+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000571 03                                  614+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000572 03                                  615+         dc al1(3)                                                      02-DCCCA
00000573 08                                  616+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000574 00                                  617+         dc bl.8'00000000'                                              02-DCCCA
00000575 000000                              618+         dc al3(0)                                                      02-DCCCA
00000578 0000000000000538                    619+         dc ad(@LNAME1078)                                              02-DCCCA
00000580                                     620+         ds 0d                                                          02-DCCCA
00000580 0000000000000548                    621+         dc ad($eye0014)                                                02-DCCCA
00000588 0000000000000000                    622+         dc ad(0)                                                       02-DCCCA
00000590                                     623+         ds    0d                                                       01-DCCPR
00000590                                     624+rd_malloc ds   0d                                                       01-DCCPR
00000590                                     625+@REGION_1078_1 ds 0h                                                    01-DCCPR
00000590 EBEC D008 0024          00000008    626+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000596 E3E0 D088 0004          00000088    627+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000059C E3C0 D090 0004          00000090    628+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000005A2 B904 002E                           629+         lgr   2,14                copy addr of our savearea            01-DCCPR
000005A6 E3B0 C018 0004          00000018    630+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000005AC A7EB 00D0               000000D0    631+         aghi  14,208              increase by frame size               01-DCCPR
000005B0 E3E0 C020 0021          00000020    632+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000005B6 4720 B020               00000020    633+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000005BA                                     634+@PER_1078 ds   0h                                                       01-DCCPR
000005BA EBDE 2080 0024          00000080    635+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000005C0 E3C0 2090 0024          00000090    636+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000005C6 B904 00D2                           637+         lgr   13,2                set real frame pointer               01-DCCPR
000005CA B904 00CF                           638+         lgr   12,15               set base reg                         01-DCCPR
                        00000590             639+         using @REGION_1078_1,12                                        01-DCCPR
                                             640 * ******* End of Prologue
                                             641 * *
                                             642 * ***      void *p = malloc(sz);
000005CE E3F0 1000 0004          00000000    643          LG    15,0(0,1)   ; sz
000005D4 E3F0 D0B0 0024          000000B0    644          STG   15,176(0,13)
000005DA 4110 D0B0               000000B0    645          LA    1,176(0,13)
000005DE E3F0 C0F0 0004          00000680    646          LG    15,@lit_1078_14 ; malloc
000005E4                                     647 @@gen_label17 DS    0H
000005E4 05EF                                648          BALR  14,15
000005E6                                     649 @@gen_label18 DS    0H
000005E6 B904 002F                           650          LGR   2,15
                                             651 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             652 * ka\\src\\rd.h", 128, "p"));
000005EA B902 00F2                           653          LTGR  15,2
000005EE 4770 C09A               0000062A    654          BNZ   @L34
000005F2                                     655 @L33     DS    0H
000005F2 E3F0 C108 0004          00000698    656          LG    15,@lit_1078_15
000005F8 41F0 F00A               0000000A    657          LA    15,10(0,15)
000005FC E3F0 D0B0 0024          000000B0    658          STG   15,176(0,13)
00000602 E3F0 C100 0004          00000690    659          LG    15,@lit_1078_16
00000608 E3F0 D0B8 0024          000000B8    660          STG   15,184(0,13)
0000060E E548 D0C0 0080          000000C0    661          MVGHI 192(13),128
00000614 41F0 F020               00000020    662          LA    15,32(0,15)
00000618 E3F0 D0C8 0024          000000C8    663          STG   15,200(0,13)
0000061E 4110 D0B0               000000B0    664          LA    1,176(0,13)
                                                                                                                           Page   19 
  Active Usings: @REGION_1078_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000622 E3F0 C0F8 0004          00000688    665          LG    15,@lit_1078_17 ; __assert
00000628                                     666 @@gen_label20 DS    0H
00000628 05EF                                667          BALR  14,15
0000062A                                     668 @@gen_label21 DS    0H
0000062A                                     669 @L34     DS    0H
                                             670 * ***      return p;
0000062A B904 00F2                           671          LGR   15,2
                                             672 * ***   }
                                             673 * * **** Start of Epilogue
                                             674          DCCEPIL
0000062E                                     675+         ds 0h                                                          01-DCCEP
                                             676+* Epilog
0000062E D707 D088 D088 00000088 00000088    677+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000634 E3D0 D080 0004          00000080    678+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000063A E3C0 D090 0004          00000090    679+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000640 E3B0 C018 0004          00000018    680+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000646 E3C0 B010 0021          00000010    681+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000064C E3E0 D008 0004          00000008    682+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000652 EB1C D020 0004          00000020    683+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000658 078E                                684+         bcr 8,14                if same dsab, just return              01-DCCEP
0000065A E3F0 D010 0024          00000010    685+         stg 15,16(0,13)         save return code                       01-DCCEP
00000660 E300 D018 0024          00000018    686+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000666 E3F0 D090 0004          00000090    687+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000066C E3F0 F018 0004          00000018    688+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000672 47F0 F040               00000040    689+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             690+* End of Epilog
                                             691 * * **** End of Epilogue
00000678                                     692          DS    0D
00000678 000000D0                            693 @FRAMESIZE_1078 DC F'208'
0000067C 00000000
00000680 0000000000000000                    694 @lit_1078_14 DC AD(malloc)
00000688 0000000000000000                    695 @lit_1078_17 DC AD(__assert)
00000690 0000000000007DFE                    696 @lit_1078_16 DC AD(@strings@)
00000698 0000000000007BF0                    697 @lit_1078_15 DC AD(@DATA)
                                             698          DROP  12
                                             699 *
                                             700 *   DSECT for automatic variables in "rd_malloc"
                                             701 *      (FUNCTION #1078)
                                             702 *
00000000                00000000 000000A8    703 @AUTO#rd_malloc DSECT
00000000                                     704          DS    XL168
                                             705 *
000006A0                00000000 00007BF0    706 @CODE    CSECT
                                             707 *
                                             708 *
                                             709 *
                                             710 * ....... start of rd_free
000006A0                                     711 @LNAME1080 DS  0H
000006A0 00000007                            712          DC    X'00000007'
000006A4 99846D86998585                      713          DC    C'rd_free'
000006AB 00                                  714          DC    X'00'
                                             715 rd_free  DCCPRLG CINDEX=1080,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                                                                           Page   20 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                MEADDR=@LNAME1080
                                             716          macro
                                             717          dccextrn &m
                                             718          gblc    &$dccext(1000)
                                             719          gbla    &$dccexti
                                             720          lcla    &i
                                             721 &$dccext(&$dccexti+1) setc    '&m'
                                             722 &i       seta    1
                                             723 .loop    aif    (&i gt &$dccexti).around
                                             724          aif    ('&$dccext(&i)' eq '&m').getout
                                             725 &i       seta    &i+1
                                             726          ago     .loop
                                             727 .around  anop
                                             728 &$dccexti seta &$dccexti+1
                                             729          extrn  &m
                                             730 .getout  anop
                                             731          mend
000006B0                                     732+$eye0017    ds    0d                                                    02-DCCCA
000006B0 C4C3C3                              733+         dc cl3'DCC'                                                    02-DCCCA
000006B3 01                                  734+         dc xl1'01' format one                                          02-DCCCA
000006B4 00000000                            735+         dc a(0)                                                        02-DCCCA
000006B8 0000000000000722                    736+         dc ad(@PER_1080)                                               02-DCCCA
000006C0 00000000000000B0                    737+         dc ad(176)                                                     02-DCCCA
000006C8 0000000000000000                    738+         dc ad(0)                                                       02-DCCCA
000006D0 0000000000001000                    739+         dc ad(4096)                                                    02-DCCCA
000006D8 20                                  740+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000006D9 03                                  741+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000006DA 03                                  742+         dc al1(3)                                                      02-DCCCA
000006DB 08                                  743+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000006DC 00                                  744+         dc bl.8'00000000'                                              02-DCCCA
000006DD 000000                              745+         dc al3(0)                                                      02-DCCCA
000006E0 00000000000006A0                    746+         dc ad(@LNAME1080)                                              02-DCCCA
000006E8                                     747+         ds 0d                                                          02-DCCCA
000006E8 00000000000006B0                    748+         dc ad($eye0017)                                                02-DCCCA
000006F0 0000000000000000                    749+         dc ad(0)                                                       02-DCCCA
000006F8                                     750+         ds    0d                                                       01-DCCPR
000006F8                                     751+rd_free  ds    0d                                                       01-DCCPR
000006F8                                     752+@REGION_1080_1 ds 0h                                                    01-DCCPR
000006F8 EBEC D008 0024          00000008    753+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000006FE E3E0 D088 0004          00000088    754+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000704 E3C0 D090 0004          00000090    755+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000070A B904 002E                           756+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000070E E3B0 C018 0004          00000018    757+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000714 A7EB 00B0               000000B0    758+         aghi  14,176              increase by frame size               01-DCCPR
00000718 E3E0 C020 0021          00000020    759+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000071E 4720 B020               00000020    760+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000722                                     761+@PER_1080 ds   0h                                                       01-DCCPR
00000722 EBDE 2080 0024          00000080    762+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000728 E3C0 2090 0024          00000090    763+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000072E B904 00D2                           764+         lgr   13,2                set real frame pointer               01-DCCPR
00000732 B904 00CF                           765+         lgr   12,15               set base reg                         01-DCCPR
                        000006F8             766+         using @REGION_1080_1,12                                        01-DCCPR
                                                                                                                           Page   21 
  Active Usings: @REGION_1080_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             767 * ******* End of Prologue
                                             768 * *
                                             769 * ***      free(ptr);
00000736 E3F0 1000 0004          00000000    770          LG    15,0(0,1)   ; ptr
0000073C E3F0 D0A8 0024          000000A8    771          STG   15,168(0,13)
00000742 4110 D0A8               000000A8    772          LA    1,168(0,13)
00000746 E3F0 C0A8 0004          000007A0    773          LG    15,@lit_1080_19 ; free
0000074C                                     774 @@gen_label22 DS    0H
0000074C 05EF                                775          BALR  14,15
0000074E                                     776 @@gen_label23 DS    0H
                                             777 * ***   }
0000074E                                     778 @ret_lab_1080 DS 0H
                                             779 * * **** Start of Epilogue
                                             780          DCCEPIL
0000074E                                     781+         ds 0h                                                          01-DCCEP
                                             782+* Epilog
0000074E D707 D088 D088 00000088 00000088    783+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000754 E3D0 D080 0004          00000080    784+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000075A E3C0 D090 0004          00000090    785+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000760 E3B0 C018 0004          00000018    786+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000766 E3C0 B010 0021          00000010    787+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000076C E3E0 D008 0004          00000008    788+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000772 EB1C D020 0004          00000020    789+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000778 078E                                790+         bcr 8,14                if same dsab, just return              01-DCCEP
0000077A E3F0 D010 0024          00000010    791+         stg 15,16(0,13)         save return code                       01-DCCEP
00000780 E300 D018 0024          00000018    792+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000786 E3F0 D090 0004          00000090    793+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000078C E3F0 F018 0004          00000018    794+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000792 47F0 F040               00000040    795+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             796+* End of Epilog
                                             797 * * **** End of Epilogue
00000798                                     798          DS    0D
00000798 000000B0                            799 @FRAMESIZE_1080 DC F'176'
0000079C 00000000
000007A0 0000000000000000                    800 @lit_1080_19 DC AD(free)
                                             801          DROP  12
                                             802 *
                                             803 *   DSECT for automatic variables in "rd_free"
                                             804 *      (FUNCTION #1080)
                                             805 *
00000000                00000000 000000A8    806 @AUTO#rd_free DSECT
00000000                                     807          DS    XL168
                                             808 *
000007A8                00000000 00007BF0    809 @CODE    CSECT
                                             810 *
                                             811 *
                                             812 *
                                             813 * ....... start of rd_refcnt_sub0
000007A8                                     814 @LNAME1084 DS  0H
000007A8 0000000E                            815          DC    X'0000000E'
000007AC 99846D9985868395                    816          DC    C'rd_refcnt_sub0'
000007BA 00                                  817          DC    X'00'
                                                                                                                           Page   22 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             818 rd_refcnt_sub0 DCCPRLG CINDEX=1084,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1084
                                             819          macro
                                             820          dccextrn &m
                                             821          gblc    &$dccext(1000)
                                             822          gbla    &$dccexti
                                             823          lcla    &i
                                             824 &$dccext(&$dccexti+1) setc    '&m'
                                             825 &i       seta    1
                                             826 .loop    aif    (&i gt &$dccexti).around
                                             827          aif    ('&$dccext(&i)' eq '&m').getout
                                             828 &i       seta    &i+1
                                             829          ago     .loop
                                             830 .around  anop
                                             831 &$dccexti seta &$dccexti+1
                                             832          extrn  &m
                                             833 .getout  anop
                                             834          mend
000007C0                                     835+$eye0020    ds    0d                                                    02-DCCCA
000007C0 C4C3C3                              836+         dc cl3'DCC'                                                    02-DCCCA
000007C3 01                                  837+         dc xl1'01' format one                                          02-DCCCA
000007C4 00000000                            838+         dc a(0)                                                        02-DCCCA
000007C8 0000000000000832                    839+         dc ad(@PER_1084)                                               02-DCCCA
000007D0 00000000000000D0                    840+         dc ad(208)                                                     02-DCCCA
000007D8 0000000000000000                    841+         dc ad(0)                                                       02-DCCCA
000007E0 0000000000001000                    842+         dc ad(4096)                                                    02-DCCCA
000007E8 20                                  843+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000007E9 03                                  844+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000007EA 03                                  845+         dc al1(3)                                                      02-DCCCA
000007EB 08                                  846+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000007EC 00                                  847+         dc bl.8'00000000'                                              02-DCCCA
000007ED 000000                              848+         dc al3(0)                                                      02-DCCCA
000007F0 00000000000007A8                    849+         dc ad(@LNAME1084)                                              02-DCCCA
000007F8                                     850+         ds 0d                                                          02-DCCCA
000007F8 00000000000007C0                    851+         dc ad($eye0020)                                                02-DCCCA
00000800 0000000000000000                    852+         dc ad(0)                                                       02-DCCCA
00000808                                     853+         ds    0d                                                       01-DCCPR
00000808                                     854+rd_refcnt_sub0 ds 0d                                                    01-DCCPR
00000808                                     855+@REGION_1084_1 ds 0h                                                    01-DCCPR
00000808 EBEC D008 0024          00000008    856+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000080E E3E0 D088 0004          00000088    857+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000814 E3C0 D090 0004          00000090    858+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000081A B904 002E                           859+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000081E E3B0 C018 0004          00000018    860+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000824 A7EB 00D0               000000D0    861+         aghi  14,208              increase by frame size               01-DCCPR
00000828 E3E0 C020 0021          00000020    862+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000082E 4720 B020               00000020    863+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000832                                     864+@PER_1084 ds   0h                                                       01-DCCPR
00000832 EBDE 2080 0024          00000080    865+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000838 E3C0 2090 0024          00000090    866+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000083E B904 00D2                           867+         lgr   13,2                set real frame pointer               01-DCCPR
00000842 B904 00CF                           868+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   23 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00000808             869+         using @REGION_1084_1,12                                        01-DCCPR
                                             870 * ******* End of Prologue
                                             871 * *
                                             872 * ***           int r;
                                             873 * ***   # 332 "C:\asgkafka\librdkafka\src\rd.h"
                                             874 * ***           r = rd_atomic32_sub(R, 1);
00000846 E3F0 1000 0004          00000000    875          LG    15,0(0,1)   ; R
0000084C E3F0 D0B0 0024          000000B0    876          STG   15,176(0,13)
00000852 E548 D0B8 0001          000000B8    877          MVGHI 184(13),1
00000858 4110 D0B0               000000B0    878          LA    1,176(0,13)
0000085C E3F0 C100 0004          00000908    879          LG    15,@lit_1084_21 ; rd_atomic32_sub
00000862                                     880 @@gen_label24 DS    0H
00000862 05EF                                881          BALR  14,15
00000864                                     882 @@gen_label25 DS    0H
00000864 122F                                883          LTR   2,15
                                             884 * ***
                                             885 * ***           if (r < 0)
00000866 47B0 C0A6               000008AE    886          BNL   @L41
                                             887 * ***                   ((!*"refcnt sub-zero") ? (void)0 : __assert(__\
                                             888 * func__, "C:\\asgkafka\\librdkafka\\src\\rd.h", 335, "!*\"refcnt sub-\
                                             889 * zero\""));
0000086A E3F0 C108 0004          00000910    890          LG    15,@lit_1084_22
00000870 4110 F022               00000022    891          LA    1,34(0,15)
00000874 9500 1000      00000000 00000000    892          CLI   0(1),0
00000878 4780 C0A6               000008AE    893          BE    @L41
0000087C                                     894 @L42     DS    0H
0000087C E310 C118 0004          00000920    895          LG    1,@lit_1084_23
00000882 4110 1036               00000036    896          LA    1,54(0,1)
00000886 E310 D0B0 0024          000000B0    897          STG   1,176(0,13)
0000088C E3F0 D0B8 0024          000000B8    898          STG   15,184(0,13)
00000892 E548 D0C0 014F          000000C0    899          MVGHI 192(13),335
00000898 41F0 F032               00000032    900          LA    15,50(0,15)
0000089C E3F0 D0C8 0024          000000C8    901          STG   15,200(0,13)
000008A2 4110 D0B0               000000B0    902          LA    1,176(0,13)
000008A6 E3F0 C110 0004          00000918    903          LG    15,@lit_1084_24 ; __assert
000008AC                                     904 @@gen_label28 DS    0H
000008AC 05EF                                905          BALR  14,15
000008AE                                     906 @@gen_label29 DS    0H
000008AE                                     907 @L43     DS    0H
000008AE                                     908 @L41     DS    0H
                                             909 * ***           return r;
000008AE B914 00F2                           910          LGFR  15,2
                                             911 * ***   }
                                             912 * * **** Start of Epilogue
                                             913          DCCEPIL
000008B2                                     914+         ds 0h                                                          01-DCCEP
                                             915+* Epilog
000008B2 D707 D088 D088 00000088 00000088    916+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000008B8 E3D0 D080 0004          00000080    917+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000008BE E3C0 D090 0004          00000090    918+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000008C4 E3B0 C018 0004          00000018    919+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000008CA E3C0 B010 0021          00000010    920+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page   24 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000008D0 E3E0 D008 0004          00000008    921+         lg  14,8(0,13)          load up return address                 01-DCCEP
000008D6 EB1C D020 0004          00000020    922+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000008DC 078E                                923+         bcr 8,14                if same dsab, just return              01-DCCEP
000008DE E3F0 D010 0024          00000010    924+         stg 15,16(0,13)         save return code                       01-DCCEP
000008E4 E300 D018 0024          00000018    925+         stg 0,24(0,13)          save more return code                  01-DCCEP
000008EA E3F0 D090 0004          00000090    926+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000008F0 E3F0 F018 0004          00000018    927+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000008F6 47F0 F040               00000040    928+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             929+* End of Epilog
                                             930 * * **** End of Epilogue
00000900                                     931          DS    0D
00000900 000000D0                            932 @FRAMESIZE_1084 DC F'208'
00000904 00000000
00000908 0000000000000060                    933 @lit_1084_21 DC AD(rd_atomic32_sub)
00000910 0000000000007DFE                    934 @lit_1084_22 DC AD(@strings@)
00000918 0000000000000000                    935 @lit_1084_24 DC AD(__assert)
00000920 0000000000007BF0                    936 @lit_1084_23 DC AD(@DATA)
                                             937          DROP  12
                                             938 *
                                             939 *   DSECT for automatic variables in "rd_refcnt_sub0"
                                             940 *      (FUNCTION #1084)
                                             941 *
00000000                00000000 000000AC    942 @AUTO#rd_refcnt_sub0 DSECT
00000000                                     943          DS    XL168
000000A8                                     944 rd_refcnt_sub0#r#0 DS 1F   ; r
                                             945 *
00000928                00000000 00007BF0    946 @CODE    CSECT
                                             947 *
                                             948 *
                                             949 *
                                             950 * ....... start of rd_clock
00000928                                     951 @LNAME1088 DS  0H
00000928 00000008                            952          DC    X'00000008'
0000092C 99846D8393968392                    953          DC    C'rd_clock'
00000934 00                                  954          DC    X'00'
                                             955 rd_clock DCCPRLG CINDEX=1088,BASER=12,FRAME=200,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1088
                                             956          macro
                                             957          dccextrn &m
                                             958          gblc    &$dccext(1000)
                                             959          gbla    &$dccexti
                                             960          lcla    &i
                                             961 &$dccext(&$dccexti+1) setc    '&m'
                                             962 &i       seta    1
                                             963 .loop    aif    (&i gt &$dccexti).around
                                             964          aif    ('&$dccext(&i)' eq '&m').getout
                                             965 &i       seta    &i+1
                                             966          ago     .loop
                                             967 .around  anop
                                             968 &$dccexti seta &$dccexti+1
                                             969          extrn  &m
                                             970 .getout  anop
                                                                                                                           Page   25 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             971          mend
00000938                                     972+$eye0023    ds    0d                                                    02-DCCCA
00000938 C4C3C3                              973+         dc cl3'DCC'                                                    02-DCCCA
0000093B 01                                  974+         dc xl1'01' format one                                          02-DCCCA
0000093C 00000000                            975+         dc a(0)                                                        02-DCCCA
00000940 00000000000009AA                    976+         dc ad(@PER_1088)                                               02-DCCCA
00000948 00000000000000C8                    977+         dc ad(200)                                                     02-DCCCA
00000950 0000000000000000                    978+         dc ad(0)                                                       02-DCCCA
00000958 0000000000001000                    979+         dc ad(4096)                                                    02-DCCCA
00000960 20                                  980+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000961 03                                  981+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000962 03                                  982+         dc al1(3)                                                      02-DCCCA
00000963 08                                  983+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000964 00                                  984+         dc bl.8'00000000'                                              02-DCCCA
00000965 000000                              985+         dc al3(0)                                                      02-DCCCA
00000968 0000000000000928                    986+         dc ad(@LNAME1088)                                              02-DCCCA
00000970                                     987+         ds 0d                                                          02-DCCCA
00000970 0000000000000938                    988+         dc ad($eye0023)                                                02-DCCCA
00000978 0000000000000000                    989+         dc ad(0)                                                       02-DCCCA
00000980                                     990+         ds    0d                                                       01-DCCPR
00000980                                     991+rd_clock ds    0d                                                       01-DCCPR
00000980                                     992+@REGION_1088_1 ds 0h                                                    01-DCCPR
00000980 EBEC D008 0024          00000008    993+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000986 E3E0 D088 0004          00000088    994+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000098C E3C0 D090 0004          00000090    995+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000992 B904 002E                           996+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000996 E3B0 C018 0004          00000018    997+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000099C A7EB 00C8               000000C8    998+         aghi  14,200              increase by frame size               01-DCCPR
000009A0 E3E0 C020 0021          00000020    999+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000009A6 4720 B020               00000020   1000+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000009AA                                    1001+@PER_1088 ds   0h                                                       01-DCCPR
000009AA EBDE 2080 0024          00000080   1002+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000009B0 E3C0 2090 0024          00000090   1003+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000009B6 B904 00D2                          1004+         lgr   13,2                set real frame pointer               01-DCCPR
000009BA B904 00CF                          1005+         lgr   12,15               set base reg                         01-DCCPR
                        00000980            1006+         using @REGION_1088_1,12                                        01-DCCPR
                                            1007 * ******* End of Prologue
                                            1008 * *
                                            1009 * ***   # 97 "C:\asgkafka\librdkafka\src\rdtime.h"
                                            1010 * ***       struct timeval tv;
                                            1011 * ***       gettimeofday(&tv, ((void *)0));
000009BE 41F0 D0A8               000000A8   1012          LA    15,168(0,13)
000009C2 E3F0 D0B8 0024          000000B8   1013          STG   15,184(0,13)
000009C8 D707 D0C0 D0C0 000000C0 000000C0   1014          XC    192(8,13),192(13)
000009CE 4110 D0B8               000000B8   1015          LA    1,184(0,13)
000009D2 E3F0 C0C0 0004          00000A40   1016          LG    15,@lit_1088_26 ; gettimeofday
000009D8                                    1017 @@gen_label30 DS    0H
000009D8 05EF                               1018          BALR  14,15
000009DA                                    1019 @@gen_label31 DS    0H
                                            1020 * ***       return ((rd_ts_t)tv.tv_sec * 1000000LLU) + (rd_ts_t)tv.tv_\
                                            1021 * usec;
000009DA E3F0 D0A8 0004          000000A8   1022          LG    15,168(0,13)
                                                                                                                           Page   26 
  Active Usings: @REGION_1088_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000009E0 C2F0 000F 4240                     1023          MSGFI 15,X'000F4240'
000009E6 E310 D0B0 0004          000000B0   1024          LG    1,176(0,13) ; offset of tv_usec in timeval
000009EC B90A 00F1                          1025          ALGR  15,1
                                            1026 * ***   # 118 "C:\asgkafka\librdkafka\src\rdtime.h"
                                            1027 * ***   }
                                            1028 * * **** Start of Epilogue
                                            1029          DCCEPIL
000009F0                                    1030+         ds 0h                                                          01-DCCEP
                                            1031+* Epilog
000009F0 D707 D088 D088 00000088 00000088   1032+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000009F6 E3D0 D080 0004          00000080   1033+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000009FC E3C0 D090 0004          00000090   1034+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000A02 E3B0 C018 0004          00000018   1035+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000A08 E3C0 B010 0021          00000010   1036+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000A0E E3E0 D008 0004          00000008   1037+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000A14 EB1C D020 0004          00000020   1038+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000A1A 078E                               1039+         bcr 8,14                if same dsab, just return              01-DCCEP
00000A1C E3F0 D010 0024          00000010   1040+         stg 15,16(0,13)         save return code                       01-DCCEP
00000A22 E300 D018 0024          00000018   1041+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000A28 E3F0 D090 0004          00000090   1042+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000A2E E3F0 F018 0004          00000018   1043+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000A34 47F0 F040               00000040   1044+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1045+* End of Epilog
                                            1046 * * **** End of Epilogue
00000A38                                    1047          DS    0D
00000A38 000000C8                           1048 @FRAMESIZE_1088 DC F'200'
00000A3C 00000000
00000A40 0000000000000000                   1049 @lit_1088_26 DC AD(gettimeofday)
                                            1050          DROP  12
                                            1051 *
                                            1052 *   DSECT for automatic variables in "rd_clock"
                                            1053 *      (FUNCTION #1088)
                                            1054 *
00000000                00000000 000000B8   1055 @AUTO#rd_clock DSECT
00000000                                    1056          DS    XL168
000000A8                                    1057 rd_clock#tv#0 DS 16XL1     ; tv
                                            1058 *
00000A48                00000000 00007BF0   1059 @CODE    CSECT
                                            1060 *
                                            1061 *
                                            1062 *
                                            1063 * ....... start of rd_timeout_us
00000A48                                    1064 @LNAME1091 DS  0H
00000A48 0000000D                           1065          DC    X'0000000D'
00000A4C 99846DA389948596                   1066          DC    C'rd_timeout_us'
00000A59 00                                 1067          DC    X'00'
                                            1068 rd_timeout_us DCCPRLG CINDEX=1091,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1091
                                            1069          macro
                                            1070          dccextrn &m
                                            1071          gblc    &$dccext(1000)
                                            1072          gbla    &$dccexti
                                                                                                                           Page   27 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1073          lcla    &i
                                            1074 &$dccext(&$dccexti+1) setc    '&m'
                                            1075 &i       seta    1
                                            1076 .loop    aif    (&i gt &$dccexti).around
                                            1077          aif    ('&$dccext(&i)' eq '&m').getout
                                            1078 &i       seta    &i+1
                                            1079          ago     .loop
                                            1080 .around  anop
                                            1081 &$dccexti seta &$dccexti+1
                                            1082          extrn  &m
                                            1083 .getout  anop
                                            1084          mend
00000A60                                    1085+$eye0026    ds    0d                                                    02-DCCCA
00000A60 C4C3C3                             1086+         dc cl3'DCC'                                                    02-DCCCA
00000A63 01                                 1087+         dc xl1'01' format one                                          02-DCCCA
00000A64 00000000                           1088+         dc a(0)                                                        02-DCCCA
00000A68 0000000000000000                   1089+         dc ad(0)                                                       02-DCCCA
00000A70 00000000000000A8                   1090+         dc ad(168)                                                     02-DCCCA
00000A78 0000000000000000                   1091+         dc ad(0)                                                       02-DCCCA
00000A80 0000000000001000                   1092+         dc ad(4096)                                                    02-DCCCA
00000A88 20                                 1093+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000A89 03                                 1094+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000A8A 03                                 1095+         dc al1(3)                                                      02-DCCCA
00000A8B 08                                 1096+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000A8C 00                                 1097+         dc bl.8'00000000'                                              02-DCCCA
00000A8D 000000                             1098+         dc al3(0)                                                      02-DCCCA
00000A90 0000000000000A48                   1099+         dc ad(@LNAME1091)                                              02-DCCCA
00000A98                                    1100+         ds 0d                                                          02-DCCCA
00000A98 0000000000000A60                   1101+         dc ad($eye0026)                                                02-DCCCA
00000AA0 0000000000000000                   1102+         dc ad(0)                                                       02-DCCCA
00000AA8                                    1103+         ds    0d                                                       01-DCCPR
00000AA8                                    1104+rd_timeout_us ds 0d                                                     01-DCCPR
00000AA8                                    1105+@REGION_1091_1 ds 0h                                                    01-DCCPR
00000AA8 EBEC D008 0024          00000008   1106+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000AAE B904 00CF                          1107+         lgr   12,15               set base reg                         01-DCCPR
                        00000AA8            1108+         using @REGION_1091_1,12                                        01-DCCPR
                                            1109 * ******* End of Prologue
                                            1110 * *
                                            1111 * ***           if (timeout_ms <= 0)
00000AB2 E3F0 1004 0012          00000004   1112          LT    15,4(0,1)   ; timeout_ms
00000AB8 4720 C01C               00000AC4   1113          BH    @L44
                                            1114 * ***                   return (rd_ts_t)timeout_ms;
00000ABC B914 00FF                          1115          LGFR  15,15
00000AC0 47F0 C024               00000ACC   1116          B     @ret_lab_1091
                                            1117 * ***           else
00000AC4                                    1118 @L44     DS    0H
                                            1119 * ***                   return (rd_ts_t)timeout_ms * 1000;
00000AC4 B914 00FF                          1120          LGFR  15,15
00000AC8 A7FD 03E8               000003E8   1121          MGHI  15,1000
                                            1122 * ***   }
00000ACC                                    1123 @ret_lab_1091 DS 0H
                                            1124 * * **** Start of Epilogue
                                                                                                                           Page   28 
  Active Usings: @REGION_1091_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1125          DCCEPIL
00000ACC                                    1126+         ds 0h                                                          01-DCCEP
                                            1127+* Epilog
                                            1128+* Epilog
00000ACC E3E0 D008 0004          00000008   1129+         lg    14,8(,13) restore the reg                                01-DCCEP
00000AD2 EB1C D020 0004          00000020   1130+         lmg   1,12,32(13)                                              01-DCCEP
00000AD8 07FE                               1131+         br   14                                                        01-DCCEP
                                            1132+* End of Epilog
                                            1133 * * **** End of Epilogue
                                            1134          DROP  12
                                            1135 *
                                            1136 *   DSECT for automatic variables in "rd_timeout_us"
                                            1137 *      (FUNCTION #1091)
                                            1138 *
00000000                00000000 000000A8   1139 @AUTO#rd_timeout_us DSECT
00000000                                    1140          DS    XL168
                                            1141 *
00000ADA                00000000 00007BF0   1142 @CODE    CSECT
                                            1143 *
                                            1144 *
                                            1145 *
                                            1146 * ....... start of rd_timeout_init_timespec_us
00000ADA                                    1147 @LNAME1094 DS  0H
00000ADA 0000001B                           1148          DC    X'0000001B'
00000ADE 99846DA389948596                   1149          DC    C'rd_timeout_init_timespec_us'
00000AF9 00                                 1150          DC    X'00'
                                            1151 rd_timeout_init_timespec_us DCCPRLG CINDEX=1094,BASER=12,FRAME=184,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1094
                                            1152          macro
                                            1153          dccextrn &m
                                            1154          gblc    &$dccext(1000)
                                            1155          gbla    &$dccexti
                                            1156          lcla    &i
                                            1157 &$dccext(&$dccexti+1) setc    '&m'
                                            1158 &i       seta    1
                                            1159 .loop    aif    (&i gt &$dccexti).around
                                            1160          aif    ('&$dccext(&i)' eq '&m').getout
                                            1161 &i       seta    &i+1
                                            1162          ago     .loop
                                            1163 .around  anop
                                            1164 &$dccexti seta &$dccexti+1
                                            1165          extrn  &m
                                            1166 .getout  anop
                                            1167          mend
00000B00                                    1168+$eye0029    ds    0d                                                    02-DCCCA
00000B00 C4C3C3                             1169+         dc cl3'DCC'                                                    02-DCCCA
00000B03 01                                 1170+         dc xl1'01' format one                                          02-DCCCA
00000B04 00000000                           1171+         dc a(0)                                                        02-DCCCA
00000B08 0000000000000B72                   1172+         dc ad(@PER_1094)                                               02-DCCCA
00000B10 00000000000000B8                   1173+         dc ad(184)                                                     02-DCCCA
00000B18 0000000000000000                   1174+         dc ad(0)                                                       02-DCCCA
00000B20 0000000000001000                   1175+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   29 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000B28 20                                 1176+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000B29 03                                 1177+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000B2A 03                                 1178+         dc al1(3)                                                      02-DCCCA
00000B2B 08                                 1179+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000B2C 00                                 1180+         dc bl.8'00000000'                                              02-DCCCA
00000B2D 000000                             1181+         dc al3(0)                                                      02-DCCCA
00000B30 0000000000000ADA                   1182+         dc ad(@LNAME1094)                                              02-DCCCA
00000B38                                    1183+         ds 0d                                                          02-DCCCA
00000B38 0000000000000B00                   1184+         dc ad($eye0029)                                                02-DCCCA
00000B40 0000000000000000                   1185+         dc ad(0)                                                       02-DCCCA
00000B48                                    1186+         ds    0d                                                       01-DCCPR
00000B48                                    1187+rd_timeout_init_timespec_us ds 0d                                       01-DCCPR
00000B48                                    1188+@REGION_1094_1 ds 0h                                                    01-DCCPR
00000B48 EBEC D008 0024          00000008   1189+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000B4E E3E0 D088 0004          00000088   1190+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000B54 E3C0 D090 0004          00000090   1191+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000B5A B904 002E                          1192+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000B5E E3B0 C018 0004          00000018   1193+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000B64 A7EB 00B8               000000B8   1194+         aghi  14,184              increase by frame size               01-DCCPR
00000B68 E3E0 C020 0021          00000020   1195+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000B6E 4720 B020               00000020   1196+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000B72                                    1197+@PER_1094 ds   0h                                                       01-DCCPR
00000B72 EBDE 2080 0024          00000080   1198+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000B78 E3C0 2090 0024          00000090   1199+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000B7E B904 00D2                          1200+         lgr   13,2                set real frame pointer               01-DCCPR
00000B82 B904 00CF                          1201+         lgr   12,15               set base reg                         01-DCCPR
                        00000B48            1202+         using @REGION_1094_1,12                                        01-DCCPR
                                            1203 * ******* End of Prologue
                                            1204 * *
                                            1205 * ***           if (timeout_us == -1 ||
00000B86 EB23 1000 0004          00000000   1206          LMG   2,3,0(1)    ; tspec
00000B8C A73F FFFF               0000FFFF   1207          CGHI  3,-1
00000B90 4780 C054               00000B9C   1208          BE    @L51
                                            1209 * ***               timeout_us == 0) {
00000B94 B902 00F3                          1210          LTGR  15,3
00000B98 4770 C084               00000BCC   1211          BNE   @L50
00000B9C                                    1212 @L51     DS    0H
                                            1213 * ***                   tspec->tv_sec = timeout_us;
00000B9C E330 2000 0024          00000000   1214          STG   3,0(0,2)    ; tspec
                                            1215 * ***                   tspec->tv_nsec = 0;
00000BA2 E548 2008 0000          00000008   1216          MVGHI 8(2),0      ; offset of tv_nsec in timespec
                                            1217 * ***           } else {
00000BA8 47F0 C0FC               00000C44   1218          B     @ret_lab_1094
00000BB0                                    1219          DS    0D
00000BB0 000000B8                           1220 @FRAMESIZE_1094 DC F'184'
00000BB4 00000000
00000BB8 0000000000000000                   1221 @lit_1094_28 DC AD(_tthread_timespec_get)
00000BC0 00000000000F4240                   1222 @lit_1094_30 DC FD'1000000' 0x00000000000f4240
00000BC8 000F4240                           1223 @lit_1094_29 DC F'1000000' 0x000f4240
00000BCC                                    1224 @L50     DS    0H
                                            1225 * ***   # 216 "C:\asgkafka\librdkafka\src\rdtime.h"
                                            1226 * ***                   _tthread_timespec_get(tspec, 1);
                                                                                                                           Page   30 
  Active Usings: @REGION_1094_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000BCC E320 D0A8 0024          000000A8   1227          STG   2,168(0,13)
00000BD2 E548 D0B0 0001          000000B0   1228          MVGHI 176(13),1
00000BD8 4110 D0A8               000000A8   1229          LA    1,168(0,13)
00000BDC E3F0 C070 0004          00000BB8   1230          LG    15,@lit_1094_28 ; _tthread_timespec_get
00000BE2                                    1231 @@gen_label35 DS    0H
00000BE2 05EF                               1232          BALR  14,15
00000BE4                                    1233 @@gen_label36 DS    0H
                                            1234 * ***
                                            1235 * ***                   tspec->tv_sec  += timeout_us / 1000000;
00000BE4 B904 0053                          1236          LGR   5,3
00000BE8 E340 C080 001D          00000BC8   1237          DSGF  4,@lit_1094_29
00000BEE E350 2000 0008          00000000   1238          AG    5,0(0,2)
00000BF4 E350 2000 0024          00000000   1239          STG   5,0(0,2)
                                            1240 * ***                   tspec->tv_nsec += (timeout_us % 1000000) * 100\
                                            1241 * 0;
00000BFA B904 0053                          1242          LGR   5,3
00000BFE E340 C078 000D          00000BC0   1243          DSG   4,@lit_1094_30
00000C04 A74D 03E8               000003E8   1244          MGHI  4,1000
00000C08 E340 2008 0008          00000008   1245          AG    4,8(0,2)
00000C0E E340 2008 0024          00000008   1246          STG   4,8(0,2)
                                            1247 * ***                   if (tspec->tv_nsec >= 1000000000) {
00000C14 B904 00F4                          1248          LGR   15,4
00000C18 C2FC 3B9A CA00                     1249          CGFI  15,X'3B9ACA00'
00000C1E 4740 C0FC               00000C44   1250          BL    @ret_lab_1094
                                            1251 * ***                           tspec->tv_nsec -= 1000000000;
00000C22 E3F0 2008 0004          00000008   1252          LG    15,8(0,2)
00000C28 C2F4 3B9A CA00                     1253          SLGFI 15,X'3B9ACA00'
00000C2E E3F0 2008 0024          00000008   1254          STG   15,8(0,2)
                                            1255 * ***                           tspec->tv_sec++;
00000C34 E3F0 2000 0004          00000000   1256          LG    15,0(0,2)
00000C3A A7FB 0001               00000001   1257          AGHI  15,1
00000C3E E3F0 2000 0024          00000000   1258          STG   15,0(0,2)
                                            1259 * ***                   }
00000C44                                    1260 @L53     DS    0H
                                            1261 * ***           }
00000C44                                    1262 @L52     DS    0H
                                            1263 * ***   }
00000C44                                    1264 @ret_lab_1094 DS 0H
                                            1265 * * **** Start of Epilogue
                                            1266          DCCEPIL
00000C44                                    1267+         ds 0h                                                          01-DCCEP
                                            1268+* Epilog
00000C44 D707 D088 D088 00000088 00000088   1269+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000C4A E3D0 D080 0004          00000080   1270+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000C50 E3C0 D090 0004          00000090   1271+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000C56 E3B0 C018 0004          00000018   1272+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000C5C E3C0 B010 0021          00000010   1273+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000C62 E3E0 D008 0004          00000008   1274+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000C68 EB1C D020 0004          00000020   1275+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000C6E 078E                               1276+         bcr 8,14                if same dsab, just return              01-DCCEP
00000C70 E3F0 D010 0024          00000010   1277+         stg 15,16(0,13)         save return code                       01-DCCEP
00000C76 E300 D018 0024          00000018   1278+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page   31 
  Active Usings: @REGION_1094_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000C7C E3F0 D090 0004          00000090   1279+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000C82 E3F0 F018 0004          00000018   1280+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000C88 47F0 F040               00000040   1281+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1282+* End of Epilog
                                            1283 * * **** End of Epilogue
                                            1284          DROP  12
                                            1285 *
                                            1286 *   DSECT for automatic variables in "rd_timeout_init_timespec_us"
                                            1287 *      (FUNCTION #1094)
                                            1288 *
00000000                00000000 000000A8   1289 @AUTO#rd_timeout_init_timespec_us DSECT
00000000                                    1290          DS    XL168
                                            1291 *
00000C8C                00000000 00007BF0   1292 @CODE    CSECT
                                            1293 *
                                            1294 *
                                            1295 *
                                            1296 * ....... start of rd_timeout_init_timespec
00000C8C                                    1297 @LNAME1095 DS  0H
00000C8C 00000018                           1298          DC    X'00000018'
00000C90 99846DA389948596                   1299          DC    C'rd_timeout_init_timespec'
00000CA8 00                                 1300          DC    X'00'
                                            1301 rd_timeout_init_timespec DCCPRLG CINDEX=1095,BASER=12,FRAME=184,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1095
                                            1302          macro
                                            1303          dccextrn &m
                                            1304          gblc    &$dccext(1000)
                                            1305          gbla    &$dccexti
                                            1306          lcla    &i
                                            1307 &$dccext(&$dccexti+1) setc    '&m'
                                            1308 &i       seta    1
                                            1309 .loop    aif    (&i gt &$dccexti).around
                                            1310          aif    ('&$dccext(&i)' eq '&m').getout
                                            1311 &i       seta    &i+1
                                            1312          ago     .loop
                                            1313 .around  anop
                                            1314 &$dccexti seta &$dccexti+1
                                            1315          extrn  &m
                                            1316 .getout  anop
                                            1317          mend
00000CB0                                    1318+$eye0032    ds    0d                                                    02-DCCCA
00000CB0 C4C3C3                             1319+         dc cl3'DCC'                                                    02-DCCCA
00000CB3 01                                 1320+         dc xl1'01' format one                                          02-DCCCA
00000CB4 00000000                           1321+         dc a(0)                                                        02-DCCCA
00000CB8 0000000000000D22                   1322+         dc ad(@PER_1095)                                               02-DCCCA
00000CC0 00000000000000B8                   1323+         dc ad(184)                                                     02-DCCCA
00000CC8 0000000000000000                   1324+         dc ad(0)                                                       02-DCCCA
00000CD0 0000000000001000                   1325+         dc ad(4096)                                                    02-DCCCA
00000CD8 20                                 1326+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000CD9 03                                 1327+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000CDA 03                                 1328+         dc al1(3)                                                      02-DCCCA
00000CDB 08                                 1329+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   32 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000CDC 00                                 1330+         dc bl.8'00000000'                                              02-DCCCA
00000CDD 000000                             1331+         dc al3(0)                                                      02-DCCCA
00000CE0 0000000000000C8C                   1332+         dc ad(@LNAME1095)                                              02-DCCCA
00000CE8                                    1333+         ds 0d                                                          02-DCCCA
00000CE8 0000000000000CB0                   1334+         dc ad($eye0032)                                                02-DCCCA
00000CF0 0000000000000000                   1335+         dc ad(0)                                                       02-DCCCA
00000CF8                                    1336+         ds    0d                                                       01-DCCPR
00000CF8                                    1337+rd_timeout_init_timespec ds 0d                                          01-DCCPR
00000CF8                                    1338+@REGION_1095_1 ds 0h                                                    01-DCCPR
00000CF8 EBEC D008 0024          00000008   1339+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000CFE E3E0 D088 0004          00000088   1340+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000D04 E3C0 D090 0004          00000090   1341+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000D0A B904 002E                          1342+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000D0E E3B0 C018 0004          00000018   1343+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000D14 A7EB 00B8               000000B8   1344+         aghi  14,184              increase by frame size               01-DCCPR
00000D18 E3E0 C020 0021          00000020   1345+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000D1E 4720 B020               00000020   1346+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000D22                                    1347+@PER_1095 ds   0h                                                       01-DCCPR
00000D22 EBDE 2080 0024          00000080   1348+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000D28 E3C0 2090 0024          00000090   1349+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000D2E B904 00D2                          1350+         lgr   13,2                set real frame pointer               01-DCCPR
00000D32 B904 00CF                          1351+         lgr   12,15               set base reg                         01-DCCPR
                        00000CF8            1352+         using @REGION_1095_1,12                                        01-DCCPR
                                            1353 * ******* End of Prologue
                                            1354 * *
                                            1355 * ***           if (timeout_ms == -1 ||
00000D36 E320 1000 0004          00000000   1356          LG    2,0(0,1)    ; tspec
00000D3C 5830 100C               0000000C   1357          L     3,12(0,1)   ; timeout_ms
00000D40 A73E FFFF               0000FFFF   1358          CHI   3,-1
00000D44 4780 C056               00000D4E   1359          BE    @L55
                                            1360 * ***               timeout_ms == 0) {
00000D48 1233                               1361          LTR   3,3
00000D4A 4770 C088               00000D80   1362          BNE   @L54
00000D4E                                    1363 @L55     DS    0H
                                            1364 * ***                   tspec->tv_sec = timeout_ms;
00000D4E B914 00F3                          1365          LGFR  15,3
00000D52 E3F0 2000 0024          00000000   1366          STG   15,0(0,2)   ; tspec
                                            1367 * ***                   tspec->tv_nsec = 0;
00000D58 E548 2008 0000          00000008   1368          MVGHI 8(2),0      ; offset of tv_nsec in timespec
                                            1369 * ***           } else {
00000D5E 47F0 C11E               00000E16   1370          B     @ret_lab_1095
00000D68                                    1371          DS    0D
00000D68 000000B8                           1372 @FRAMESIZE_1095 DC F'184'
00000D6C 00000000
00000D70 0000000000000000                   1373 @lit_1095_32 DC AD(_tthread_timespec_get)
00000D78 000003E8                           1374 @lit_1095_35 DC F'1000' 0x000003e8
00000D7C 10624DD3                           1375 @lit_1095_34 DC F'274877907' 0x10624dd3
00000D80                                    1376 @L54     DS    0H
                                            1377 * ***   # 247 "C:\asgkafka\librdkafka\src\rdtime.h"
                                            1378 * ***                   _tthread_timespec_get(tspec, 1);
00000D80 E320 D0A8 0024          000000A8   1379          STG   2,168(0,13)
00000D86 E548 D0B0 0001          000000B0   1380          MVGHI 176(13),1
                                                                                                                           Page   33 
  Active Usings: @REGION_1095_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000D8C 4110 D0A8               000000A8   1381          LA    1,168(0,13)
00000D90 E3F0 C078 0004          00000D70   1382          LG    15,@lit_1095_32 ; _tthread_timespec_get
00000D96                                    1383 @@gen_label40 DS    0H
00000D96 05EF                               1384          BALR  14,15
00000D98                                    1385 @@gen_label41 DS    0H
                                            1386 * ***
                                            1387 * ***                   tspec->tv_sec  += timeout_ms / 1000;
00000D98 E3F0 2000 0004          00000000   1388          LG    15,0(0,2)
00000D9E 1813                               1389          LR    1,3         ; /0x3e8
00000DA0 1853                               1390          LR    5,3         ;   .
00000DA2 8810 001F               0000001F   1391          SRL   1,31(0)     ;   .
00000DA6 5C40 C084               00000D7C   1392          M     4,@lit_1095_34 ;   .
00000DAA 8A40 0006               00000006   1393          SRA   4,6(0)      ;   .
00000DAE 1E41                               1394          ALR   4,1         ;   .
00000DB0 B918 00F4                          1395          AGFR  15,4
00000DB4 E3F0 2000 0024          00000000   1396          STG   15,0(0,2)
                                            1397 * ***                   tspec->tv_nsec += (timeout_ms % 1000) * 100000\
                                            1398 * 0;
00000DBA E3F0 2008 0004          00000008   1399          LG    15,8(0,2)
00000DC0 1813                               1400          LR    1,3
00000DC2 8810 001F               0000001F   1401          SRL   1,31(0)
00000DC6 1853                               1402          LR    5,3
00000DC8 5C40 C084               00000D7C   1403          M     4,@lit_1095_34
00000DCC 8A40 0006               00000006   1404          SRA   4,6(0)
00000DD0 1E41                               1405          ALR   4,1
00000DD2 1854                               1406          LR    5,4
00000DD4 5C40 C080               00000D78   1407          M     4,@lit_1095_35
00000DD8 1B35                               1408          SR    3,5
00000DDA C231 000F 4240                     1409          MSFI  3,X'000F4240'
00000DE0 B918 00F3                          1410          AGFR  15,3
00000DE4 E3F0 2008 0024          00000008   1411          STG   15,8(0,2)
                                            1412 * ***                   if (tspec->tv_nsec >= 1000000000) {
00000DEA C2FC 3B9A CA00                     1413          CGFI  15,X'3B9ACA00'
00000DF0 4740 C11E               00000E16   1414          BL    @ret_lab_1095
                                            1415 * ***                           tspec->tv_nsec -= 1000000000;
00000DF4 E3F0 2008 0004          00000008   1416          LG    15,8(0,2)
00000DFA C2F4 3B9A CA00                     1417          SLGFI 15,X'3B9ACA00'
00000E00 E3F0 2008 0024          00000008   1418          STG   15,8(0,2)
                                            1419 * ***                           tspec->tv_sec++;
00000E06 E3F0 2000 0004          00000000   1420          LG    15,0(0,2)
00000E0C A7FB 0001               00000001   1421          AGHI  15,1
00000E10 E3F0 2000 0024          00000000   1422          STG   15,0(0,2)
                                            1423 * ***                   }
00000E16                                    1424 @L57     DS    0H
                                            1425 * ***           }
00000E16                                    1426 @L56     DS    0H
                                            1427 * ***   }
00000E16                                    1428 @ret_lab_1095 DS 0H
                                            1429 * * **** Start of Epilogue
                                            1430          DCCEPIL
00000E16                                    1431+         ds 0h                                                          01-DCCEP
                                            1432+* Epilog
                                                                                                                           Page   34 
  Active Usings: @REGION_1095_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000E16 D707 D088 D088 00000088 00000088   1433+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000E1C E3D0 D080 0004          00000080   1434+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000E22 E3C0 D090 0004          00000090   1435+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000E28 E3B0 C018 0004          00000018   1436+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000E2E E3C0 B010 0021          00000010   1437+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000E34 E3E0 D008 0004          00000008   1438+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000E3A EB1C D020 0004          00000020   1439+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000E40 078E                               1440+         bcr 8,14                if same dsab, just return              01-DCCEP
00000E42 E3F0 D010 0024          00000010   1441+         stg 15,16(0,13)         save return code                       01-DCCEP
00000E48 E300 D018 0024          00000018   1442+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000E4E E3F0 D090 0004          00000090   1443+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000E54 E3F0 F018 0004          00000018   1444+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000E5A 47F0 F040               00000040   1445+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1446+* End of Epilog
                                            1447 * * **** End of Epilogue
                                            1448          DROP  12
                                            1449 *
                                            1450 *   DSECT for automatic variables in "rd_timeout_init_timespec"
                                            1451 *      (FUNCTION #1095)
                                            1452 *
00000000                00000000 000000A8   1453 @AUTO#rd_timeout_init_timespec DSECT
00000000                                    1454          DS    XL168
                                            1455 *
00000E5E                00000000 00007BF0   1456 @CODE    CSECT
                                            1457 *
                                            1458 *
                                            1459 *
                                            1460 * ....... start of rd_kafka_q_keep
00000E5E                                    1461 @LNAME1428 DS  0H
00000E5E 0000000F                           1462          DC    X'0000000F'
00000E62 99846D9281869281                   1463          DC    C'rd_kafka_q_keep'
00000E71 00                                 1464          DC    X'00'
                                            1465 rd_kafka_q_keep DCCPRLG CINDEX=1428,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1428
                                            1466          macro
                                            1467          dccextrn &m
                                            1468          gblc    &$dccext(1000)
                                            1469          gbla    &$dccexti
                                            1470          lcla    &i
                                            1471 &$dccext(&$dccexti+1) setc    '&m'
                                            1472 &i       seta    1
                                            1473 .loop    aif    (&i gt &$dccexti).around
                                            1474          aif    ('&$dccext(&i)' eq '&m').getout
                                            1475 &i       seta    &i+1
                                            1476          ago     .loop
                                            1477 .around  anop
                                            1478 &$dccexti seta &$dccexti+1
                                            1479          extrn  &m
                                            1480 .getout  anop
                                            1481          mend
00000E78                                    1482+$eye0035    ds    0d                                                    02-DCCCA
00000E78 C4C3C3                             1483+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000E7B 01                                 1484+         dc xl1'01' format one                                          02-DCCCA
00000E7C 00000000                           1485+         dc a(0)                                                        02-DCCCA
00000E80 0000000000000EEA                   1486+         dc ad(@PER_1428)                                               02-DCCCA
00000E88 00000000000000B0                   1487+         dc ad(176)                                                     02-DCCCA
00000E90 0000000000000000                   1488+         dc ad(0)                                                       02-DCCCA
00000E98 0000000000001000                   1489+         dc ad(4096)                                                    02-DCCCA
00000EA0 20                                 1490+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000EA1 03                                 1491+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000EA2 03                                 1492+         dc al1(3)                                                      02-DCCCA
00000EA3 08                                 1493+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000EA4 00                                 1494+         dc bl.8'00000000'                                              02-DCCCA
00000EA5 000000                             1495+         dc al3(0)                                                      02-DCCCA
00000EA8 0000000000000E5E                   1496+         dc ad(@LNAME1428)                                              02-DCCCA
00000EB0                                    1497+         ds 0d                                                          02-DCCCA
00000EB0 0000000000000E78                   1498+         dc ad($eye0035)                                                02-DCCCA
00000EB8 0000000000000000                   1499+         dc ad(0)                                                       02-DCCCA
00000EC0                                    1500+         ds    0d                                                       01-DCCPR
00000EC0                                    1501+rd_kafka_q_keep ds 0d                                                   01-DCCPR
00000EC0                                    1502+@REGION_1428_1 ds 0h                                                    01-DCCPR
00000EC0 EBEC D008 0024          00000008   1503+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000EC6 E3E0 D088 0004          00000088   1504+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000ECC E3C0 D090 0004          00000090   1505+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000ED2 B904 002E                          1506+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000ED6 E3B0 C018 0004          00000018   1507+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000EDC A7EB 00B0               000000B0   1508+         aghi  14,176              increase by frame size               01-DCCPR
00000EE0 E3E0 C020 0021          00000020   1509+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000EE6 4720 B020               00000020   1510+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000EEA                                    1511+@PER_1428 ds   0h                                                       01-DCCPR
00000EEA EBDE 2080 0024          00000080   1512+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000EF0 E3C0 2090 0024          00000090   1513+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000EF6 B904 00D2                          1514+         lgr   13,2                set real frame pointer               01-DCCPR
00000EFA B904 00CF                          1515+         lgr   12,15               set base reg                         01-DCCPR
                        00000EC0            1516+         using @REGION_1428_1,12                                        01-DCCPR
                                            1517 * ******* End of Prologue
                                            1518 * *
                                            1519 * ***           mtx_lock(&rkq->rkq_lock);
00000EFE E320 1000 0004          00000000   1520          LG    2,0(0,1)    ; rkq
00000F04 E320 D0A8 0024          000000A8   1521          STG   2,168(0,13)
00000F0A 4110 D0A8               000000A8   1522          LA    1,168(0,13)
00000F0E E3F0 C0C8 0004          00000F88   1523          LG    15,@lit_1428_37 ; mtx_lock
00000F14                                    1524 @@gen_label43 DS    0H
00000F14 05EF                               1525          BALR  14,15
00000F16                                    1526 @@gen_label44 DS    0H
                                            1527 * ***           rkq->rkq_refcnt++;
00000F16 58F0 2080               00000080   1528          L     15,128(0,2)
00000F1A A7FA 0001               00000001   1529          AHI   15,1
00000F1E 50F0 2080               00000080   1530          ST    15,128(0,2)
                                            1531 * ***           mtx_unlock(&rkq->rkq_lock);
00000F22 E320 D0A8 0024          000000A8   1532          STG   2,168(0,13)
00000F28 4110 D0A8               000000A8   1533          LA    1,168(0,13)
00000F2C E3F0 C0D0 0004          00000F90   1534          LG    15,@lit_1428_38 ; mtx_unlock
00000F32                                    1535 @@gen_label45 DS    0H
                                                                                                                           Page   36 
  Active Usings: @REGION_1428_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000F32 05EF                               1536          BALR  14,15
00000F34                                    1537 @@gen_label46 DS    0H
                                            1538 * ***      return rkq;
00000F34 B904 00F2                          1539          LGR   15,2
                                            1540 * ***   }
                                            1541 * * **** Start of Epilogue
                                            1542          DCCEPIL
00000F38                                    1543+         ds 0h                                                          01-DCCEP
                                            1544+* Epilog
00000F38 D707 D088 D088 00000088 00000088   1545+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000F3E E3D0 D080 0004          00000080   1546+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000F44 E3C0 D090 0004          00000090   1547+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000F4A E3B0 C018 0004          00000018   1548+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000F50 E3C0 B010 0021          00000010   1549+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000F56 E3E0 D008 0004          00000008   1550+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000F5C EB1C D020 0004          00000020   1551+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000F62 078E                               1552+         bcr 8,14                if same dsab, just return              01-DCCEP
00000F64 E3F0 D010 0024          00000010   1553+         stg 15,16(0,13)         save return code                       01-DCCEP
00000F6A E300 D018 0024          00000018   1554+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000F70 E3F0 D090 0004          00000090   1555+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000F76 E3F0 F018 0004          00000018   1556+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000F7C 47F0 F040               00000040   1557+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1558+* End of Epilog
                                            1559 * * **** End of Epilogue
00000F80                                    1560          DS    0D
00000F80 000000B0                           1561 @FRAMESIZE_1428 DC F'176'
00000F84 00000000
00000F88 0000000000000000                   1562 @lit_1428_37 DC AD(mtx_lock)
00000F90 0000000000000000                   1563 @lit_1428_38 DC AD(mtx_unlock)
                                            1564          DROP  12
                                            1565 *
                                            1566 *   DSECT for automatic variables in "rd_kafka_q_keep"
                                            1567 *      (FUNCTION #1428)
                                            1568 *
00000000                00000000 000000A8   1569 @AUTO#rd_kafka_q_keep DSECT
00000000                                    1570          DS    XL168
                                            1571 *
00000F98                00000000 00007BF0   1572 @CODE    CSECT
                                            1573 *
                                            1574 *
                                            1575 *
                                            1576 * ....... start of rd_kafka_q_disable0
00000F98                                    1577 @LNAME1432 DS  0H
00000F98 00000013                           1578          DC    X'00000013'
00000F9C 99846D9281869281                   1579          DC    C'rd_kafka_q_disable0'
00000FAF 00                                 1580          DC    X'00'
                                            1581 rd_kafka_q_disable0 DCCPRLG CINDEX=1432,BASER=12,FRAME=176,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1432
                                            1582          macro
                                            1583          dccextrn &m
                                            1584          gblc    &$dccext(1000)
                                            1585          gbla    &$dccexti
                                                                                                                           Page   37 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1586          lcla    &i
                                            1587 &$dccext(&$dccexti+1) setc    '&m'
                                            1588 &i       seta    1
                                            1589 .loop    aif    (&i gt &$dccexti).around
                                            1590          aif    ('&$dccext(&i)' eq '&m').getout
                                            1591 &i       seta    &i+1
                                            1592          ago     .loop
                                            1593 .around  anop
                                            1594 &$dccexti seta &$dccexti+1
                                            1595          extrn  &m
                                            1596 .getout  anop
                                            1597          mend
00000FB0                                    1598+$eye0038    ds    0d                                                    02-DCCCA
00000FB0 C4C3C3                             1599+         dc cl3'DCC'                                                    02-DCCCA
00000FB3 01                                 1600+         dc xl1'01' format one                                          02-DCCCA
00000FB4 00000000                           1601+         dc a(0)                                                        02-DCCCA
00000FB8 0000000000001022                   1602+         dc ad(@PER_1432)                                               02-DCCCA
00000FC0 00000000000000B0                   1603+         dc ad(176)                                                     02-DCCCA
00000FC8 0000000000000000                   1604+         dc ad(0)                                                       02-DCCCA
00000FD0 0000000000001000                   1605+         dc ad(4096)                                                    02-DCCCA
00000FD8 20                                 1606+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000FD9 03                                 1607+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000FDA 03                                 1608+         dc al1(3)                                                      02-DCCCA
00000FDB 08                                 1609+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000FDC 00                                 1610+         dc bl.8'00000000'                                              02-DCCCA
00000FDD 000000                             1611+         dc al3(0)                                                      02-DCCCA
00000FE0 0000000000000F98                   1612+         dc ad(@LNAME1432)                                              02-DCCCA
00000FE8                                    1613+         ds 0d                                                          02-DCCCA
00000FE8 0000000000000FB0                   1614+         dc ad($eye0038)                                                02-DCCCA
00000FF0 0000000000000000                   1615+         dc ad(0)                                                       02-DCCCA
00000FF8                                    1616+         ds    0d                                                       01-DCCPR
00000FF8                                    1617+rd_kafka_q_disable0 ds 0d                                               01-DCCPR
00000FF8                                    1618+@REGION_1432_1 ds 0h                                                    01-DCCPR
00000FF8 EBEC D008 0024          00000008   1619+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000FFE E3E0 D088 0004          00000088   1620+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001004 E3C0 D090 0004          00000090   1621+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000100A B904 002E                          1622+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000100E E3B0 C018 0004          00000018   1623+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001014 A7EB 00B0               000000B0   1624+         aghi  14,176              increase by frame size               01-DCCPR
00001018 E3E0 C020 0021          00000020   1625+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000101E 4720 B020               00000020   1626+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001022                                    1627+@PER_1432 ds   0h                                                       01-DCCPR
00001022 EBDE 2080 0024          00000080   1628+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001028 E3C0 2090 0024          00000090   1629+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000102E B904 00D2                          1630+         lgr   13,2                set real frame pointer               01-DCCPR
00001032 B904 00CF                          1631+         lgr   12,15               set base reg                         01-DCCPR
                        00000FF8            1632+         using @REGION_1432_1,12                                        01-DCCPR
                                            1633 * ******* End of Prologue
                                            1634 * *
                                            1635 * ***           if (do_lock)
00001036 E320 1000 0004          00000000   1636          LG    2,0(0,1)    ; rkq
0000103C E330 100C 0012          0000000C   1637          LT    3,12(0,1)   ; do_lock
                                                                                                                           Page   38 
  Active Usings: @REGION_1432_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001042 4780 C060               00001058   1638          BZ    @L256
                                            1639 * ***                   mtx_lock(&rkq->rkq_lock);
00001046 E320 D0A8 0024          000000A8   1640          STG   2,168(0,13)
0000104C 4110 D0A8               000000A8   1641          LA    1,168(0,13)
00001050 E3F0 C0D8 0004          000010D0   1642          LG    15,@lit_1432_40 ; mtx_lock
00001056                                    1643 @@gen_label48 DS    0H
00001056 05EF                               1644          BALR  14,15
00001058                                    1645 @@gen_label49 DS    0H
00001058                                    1646 @L256    DS    0H
                                            1647 * ***           rkq->rkq_flags &= ~0x2;
00001058 58F0 2084               00000084   1648          L     15,132(0,2)
0000105C A5F7 FFFD               0000FFFD   1649          NILL  15,65533
00001060 50F0 2084               00000084   1650          ST    15,132(0,2)
                                            1651 * ***           if (do_lock)
00001064 1233                               1652          LTR   3,3
00001066 4780 C084               0000107C   1653          BZ    @ret_lab_1432
                                            1654 * ***                   mtx_unlock(&rkq->rkq_lock);
0000106A E320 D0A8 0024          000000A8   1655          STG   2,168(0,13)
00001070 4110 D0A8               000000A8   1656          LA    1,168(0,13)
00001074 E3F0 C0E0 0004          000010D8   1657          LG    15,@lit_1432_41 ; mtx_unlock
0000107A                                    1658 @@gen_label51 DS    0H
0000107A 05EF                               1659          BALR  14,15
0000107C                                    1660 @@gen_label52 DS    0H
0000107C                                    1661 @L257    DS    0H
                                            1662 * ***   }
0000107C                                    1663 @ret_lab_1432 DS 0H
                                            1664 * * **** Start of Epilogue
                                            1665          DCCEPIL
0000107C                                    1666+         ds 0h                                                          01-DCCEP
                                            1667+* Epilog
0000107C D707 D088 D088 00000088 00000088   1668+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001082 E3D0 D080 0004          00000080   1669+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001088 E3C0 D090 0004          00000090   1670+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000108E E3B0 C018 0004          00000018   1671+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001094 E3C0 B010 0021          00000010   1672+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000109A E3E0 D008 0004          00000008   1673+         lg  14,8(0,13)          load up return address                 01-DCCEP
000010A0 EB1C D020 0004          00000020   1674+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000010A6 078E                               1675+         bcr 8,14                if same dsab, just return              01-DCCEP
000010A8 E3F0 D010 0024          00000010   1676+         stg 15,16(0,13)         save return code                       01-DCCEP
000010AE E300 D018 0024          00000018   1677+         stg 0,24(0,13)          save more return code                  01-DCCEP
000010B4 E3F0 D090 0004          00000090   1678+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000010BA E3F0 F018 0004          00000018   1679+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000010C0 47F0 F040               00000040   1680+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1681+* End of Epilog
                                            1682 * * **** End of Epilogue
000010C8                                    1683          DS    0D
000010C8 000000B0                           1684 @FRAMESIZE_1432 DC F'176'
000010CC 00000000
000010D0 0000000000000000                   1685 @lit_1432_40 DC AD(mtx_lock)
000010D8 0000000000000000                   1686 @lit_1432_41 DC AD(mtx_unlock)
                                            1687          DROP  12
                                            1688 *
                                                                                                                           Page   39 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1689 *   DSECT for automatic variables in "rd_kafka_q_disable0"
                                            1690 *      (FUNCTION #1432)
                                            1691 *
00000000                00000000 000000A8   1692 @AUTO#rd_kafka_q_disable0 DSECT
00000000                                    1693          DS    XL168
                                            1694 *
000010E0                00000000 00007BF0   1695 @CODE    CSECT
                                            1696 *
                                            1697 *
                                            1698 *
                                            1699 * ....... start of rd_kafka_q_destroy0
000010E0                                    1700 @LNAME1435 DS  0H
000010E0 00000013                           1701          DC    X'00000013'
000010E4 99846D9281869281                   1702          DC    C'rd_kafka_q_destroy0'
000010F7 00                                 1703          DC    X'00'
                                            1704 rd_kafka_q_destroy0 DCCPRLG CINDEX=1435,BASER=12,FRAME=216,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1435
                                            1705          macro
                                            1706          dccextrn &m
                                            1707          gblc    &$dccext(1000)
                                            1708          gbla    &$dccexti
                                            1709          lcla    &i
                                            1710 &$dccext(&$dccexti+1) setc    '&m'
                                            1711 &i       seta    1
                                            1712 .loop    aif    (&i gt &$dccexti).around
                                            1713          aif    ('&$dccext(&i)' eq '&m').getout
                                            1714 &i       seta    &i+1
                                            1715          ago     .loop
                                            1716 .around  anop
                                            1717 &$dccexti seta &$dccexti+1
                                            1718          extrn  &m
                                            1719 .getout  anop
                                            1720          mend
000010F8                                    1721+$eye0041    ds    0d                                                    02-DCCCA
000010F8 C4C3C3                             1722+         dc cl3'DCC'                                                    02-DCCCA
000010FB 01                                 1723+         dc xl1'01' format one                                          02-DCCCA
000010FC 00000000                           1724+         dc a(0)                                                        02-DCCCA
00001100 000000000000116A                   1725+         dc ad(@PER_1435)                                               02-DCCCA
00001108 00000000000000D8                   1726+         dc ad(216)                                                     02-DCCCA
00001110 0000000000000000                   1727+         dc ad(0)                                                       02-DCCCA
00001118 0000000000001000                   1728+         dc ad(4096)                                                    02-DCCCA
00001120 20                                 1729+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001121 03                                 1730+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001122 03                                 1731+         dc al1(3)                                                      02-DCCCA
00001123 08                                 1732+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001124 00                                 1733+         dc bl.8'00000000'                                              02-DCCCA
00001125 000000                             1734+         dc al3(0)                                                      02-DCCCA
00001128 00000000000010E0                   1735+         dc ad(@LNAME1435)                                              02-DCCCA
00001130                                    1736+         ds 0d                                                          02-DCCCA
00001130 00000000000010F8                   1737+         dc ad($eye0041)                                                02-DCCCA
00001138 0000000000000000                   1738+         dc ad(0)                                                       02-DCCCA
00001140                                    1739+         ds    0d                                                       01-DCCPR
                                                                                                                           Page   40 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001140                                    1740+rd_kafka_q_destroy0 ds 0d                                               01-DCCPR
00001140                                    1741+@REGION_1435_1 ds 0h                                                    01-DCCPR
00001140 EBEC D008 0024          00000008   1742+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001146 E3E0 D088 0004          00000088   1743+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000114C E3C0 D090 0004          00000090   1744+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001152 B904 002E                          1745+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001156 E3B0 C018 0004          00000018   1746+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000115C A7EB 00D8               000000D8   1747+         aghi  14,216              increase by frame size               01-DCCPR
00001160 E3E0 C020 0021          00000020   1748+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001166 4720 B020               00000020   1749+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000116A                                    1750+@PER_1435 ds   0h                                                       01-DCCPR
0000116A EBDE 2080 0024          00000080   1751+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001170 E3C0 2090 0024          00000090   1752+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001176 B904 00D2                          1753+         lgr   13,2                set real frame pointer               01-DCCPR
0000117A B904 00CF                          1754+         lgr   12,15               set base reg                         01-DCCPR
                        00001140            1755+         using @REGION_1435_1,12                                        01-DCCPR
                                            1756 * ******* End of Prologue
                                            1757 * *
                                            1758 * ***           int do_delete = 0;
0000117E E320 1000 0004          00000000   1759          LG    2,0(0,1)    ; rkq
                                            1760 * ***
                                            1761 * ***           if (disable) {
00001184 E3F0 100C 0012          0000000C   1762          LT    15,12(0,1)  ; disable
0000118A 4780 C07E               000011BE   1763          BZ    @L258
                                            1764 * ***
                                            1765 * ***
                                            1766 * ***
                                            1767 * ***
                                            1768 * ***                   rd_kafka_q_disable0(rkq, 1);
0000118E E320 D0B0 0024          000000B0   1769          STG   2,176(0,13)
00001194 E548 D0B8 0001          000000B8   1770          MVGHI 184(13),1
0000119A 4110 D0B0               000000B0   1771          LA    1,176(0,13)
0000119E E3F0 C170 0004          000012B0   1772          LG    15,@lit_1435_44 ; rd_kafka_q_disable0
000011A4                                    1773 @@gen_label54 DS    0H
000011A4 05EF                               1774          BALR  14,15
000011A6                                    1775 @@gen_label55 DS    0H
                                            1776 * ***                   rd_kafka_q_purge0(rkq, 1);
000011A6 E320 D0B0 0024          000000B0   1777          STG   2,176(0,13)
000011AC E548 D0B8 0001          000000B8   1778          MVGHI 184(13),1
000011B2 4110 D0B0               000000B0   1779          LA    1,176(0,13)
000011B6 E3F0 C178 0004          000012B8   1780          LG    15,@lit_1435_45 ; rd_kafka_q_purge0
000011BC                                    1781 @@gen_label56 DS    0H
000011BC 05EF                               1782          BALR  14,15
000011BE                                    1783 @@gen_label57 DS    0H
                                            1784 * ***           }
000011BE                                    1785 @L258    DS    0H
                                            1786 * ***
                                            1787 * ***           mtx_lock(&rkq->rkq_lock);
000011BE E320 D0B0 0024          000000B0   1788          STG   2,176(0,13)
000011C4 4110 D0B0               000000B0   1789          LA    1,176(0,13)
000011C8 E3F0 C180 0004          000012C0   1790          LG    15,@lit_1435_46 ; mtx_lock
000011CE                                    1791 @@gen_label58 DS    0H
                                                                                                                           Page   41 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000011CE 05EF                               1792          BALR  14,15
000011D0                                    1793 @@gen_label59 DS    0H
                                            1794 * ***           do { if (((!(rkq->rkq_refcnt > 0)))) rd_kafka_crash("C\
                                            1795 * :\\asgkafka\\librdkafka\\src\\rdkafka_queue.h",211, __FUNCTION__, ((\
                                            1796 * (void *)0)), "assert: " "rkq->rkq_refcnt > 0"); } while (0);
000011D0                                    1797 @L259    DS    0H
000011D0 E55C 2080 0000          00000080   1798          CHSI  128(2),0
000011D6 4720 C0DC               0000121C   1799          BH    @L262
000011DA E3F0 C198 0004          000012D8   1800          LG    15,@lit_1435_47
000011E0 4110 F046               00000046   1801          LA    1,70(0,15)
000011E4 E310 D0B0 0024          000000B0   1802          STG   1,176(0,13)
000011EA E548 D0B8 00D3          000000B8   1803          MVGHI 184(13),211
000011F0 E310 C190 0004          000012D0   1804          LG    1,@lit_1435_48
000011F6 4110 1072               00000072   1805          LA    1,114(0,1)
000011FA E310 D0C0 0024          000000C0   1806          STG   1,192(0,13)
00001200 D707 D0C8 D0C8 000000C8 000000C8   1807          XC    200(8,13),200(13)
00001206 41F0 F072               00000072   1808          LA    15,114(0,15)
0000120A E3F0 D0D0 0024          000000D0   1809          STG   15,208(0,13)
00001210 4110 D0B0               000000B0   1810          LA    1,176(0,13)
00001214 E3F0 C188 0004          000012C8   1811          LG    15,@lit_1435_49 ; rd_kafka_crash
0000121A                                    1812 @@gen_label61 DS    0H
0000121A 05EF                               1813          BALR  14,15
0000121C                                    1814 @@gen_label62 DS    0H
0000121C                                    1815 @L262    DS    0H
                                            1816 * ***           do_delete = !--rkq->rkq_refcnt;
0000121C 58F0 2080               00000080   1817          L     15,128(0,2)
00001220 A7FA FFFF               0000FFFF   1818          AHI   15,-1
00001224 50F0 2080               00000080   1819          ST    15,128(0,2)
00001228 103F                               1820          LPR   3,15
0000122A A73A FFFF               0000FFFF   1821          AHI   3,-1
0000122E 8830 001F               0000001F   1822          SRL   3,31(0)
                                            1823 * ***           mtx_unlock(&rkq->rkq_lock);
00001232 E320 D0B0 0024          000000B0   1824          STG   2,176(0,13)
00001238 4110 D0B0               000000B0   1825          LA    1,176(0,13)
0000123C E3F0 C1A0 0004          000012E0   1826          LG    15,@lit_1435_50 ; mtx_unlock
00001242                                    1827 @@gen_label63 DS    0H
00001242 05EF                               1828          BALR  14,15
00001244                                    1829 @@gen_label64 DS    0H
                                            1830 * ***
                                            1831 * ***           if (((do_delete)))
00001244 1233                               1832          LTR   3,3
00001246 4780 C11C               0000125C   1833          BZ    @L263
                                            1834 * ***                   rd_kafka_q_destroy_final(rkq);
0000124A E320 D0B0 0024          000000B0   1835          STG   2,176(0,13)
00001250 4110 D0B0               000000B0   1836          LA    1,176(0,13)
00001254 E3F0 C1A8 0004          000012E8   1837          LG    15,@lit_1435_51 ; rd_kafka_q_destroy_final
0000125A                                    1838 @@gen_label66 DS    0H
0000125A 05EF                               1839          BALR  14,15
0000125C                                    1840 @@gen_label67 DS    0H
0000125C                                    1841 @L263    DS    0H
                                            1842 * ***   }
0000125C                                    1843 @ret_lab_1435 DS 0H
                                                                                                                           Page   42 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1844 * * **** Start of Epilogue
                                            1845          DCCEPIL
0000125C                                    1846+         ds 0h                                                          01-DCCEP
                                            1847+* Epilog
0000125C D707 D088 D088 00000088 00000088   1848+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001262 E3D0 D080 0004          00000080   1849+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001268 E3C0 D090 0004          00000090   1850+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000126E E3B0 C018 0004          00000018   1851+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001274 E3C0 B010 0021          00000010   1852+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000127A E3E0 D008 0004          00000008   1853+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001280 EB1C D020 0004          00000020   1854+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001286 078E                               1855+         bcr 8,14                if same dsab, just return              01-DCCEP
00001288 E3F0 D010 0024          00000010   1856+         stg 15,16(0,13)         save return code                       01-DCCEP
0000128E E300 D018 0024          00000018   1857+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001294 E3F0 D090 0004          00000090   1858+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000129A E3F0 F018 0004          00000018   1859+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000012A0 47F0 F040               00000040   1860+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1861+* End of Epilog
                                            1862 * * **** End of Epilogue
000012A8                                    1863          DS    0D
000012A8 000000D8                           1864 @FRAMESIZE_1435 DC F'216'
000012AC 00000000
000012B0 0000000000000FF8                   1865 @lit_1435_44 DC AD(rd_kafka_q_disable0)
000012B8 0000000000004098                   1866 @lit_1435_45 DC AD(rd_kafka_q_purge0)
000012C0 0000000000000000                   1867 @lit_1435_46 DC AD(mtx_lock)
000012C8 0000000000000000                   1868 @lit_1435_49 DC AD(rd_kafka_crash)
000012D0 0000000000007BF0                   1869 @lit_1435_48 DC AD(@DATA)
000012D8 0000000000007DFE                   1870 @lit_1435_47 DC AD(@strings@)
000012E0 0000000000000000                   1871 @lit_1435_50 DC AD(mtx_unlock)
000012E8 0000000000003940                   1872 @lit_1435_51 DC AD(rd_kafka_q_destroy_final)
                                            1873          DROP  12
                                            1874 *
                                            1875 *   DSECT for automatic variables in "rd_kafka_q_destroy0"
                                            1876 *      (FUNCTION #1435)
                                            1877 *
00000000                00000000 000000AC   1878 @AUTO#rd_kafka_q_destroy0 DSECT
00000000                                    1879          DS    XL168
000000A8                                    1880 rd_kafka_q_destroy0#do_delete#0 DS 1F ; do_delete
                                            1881 *
000012F0                00000000 00007BF0   1882 @CODE    CSECT
                                            1883 *
                                            1884 *
                                            1885 *
                                            1886 * ....... start of rd_kafka_q_destroy_owner
000012F0                                    1887 @LNAME1436 DS  0H
000012F0 00000018                           1888          DC    X'00000018'
000012F4 99846D9281869281                   1889          DC    C'rd_kafka_q_destroy_owner'
0000130C 00                                 1890          DC    X'00'
                                            1891 rd_kafka_q_destroy_owner DCCPRLG CINDEX=1436,BASER=12,FRAME=184,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1436
                                            1892          macro
                                            1893          dccextrn &m
                                                                                                                           Page   43 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1894          gblc    &$dccext(1000)
                                            1895          gbla    &$dccexti
                                            1896          lcla    &i
                                            1897 &$dccext(&$dccexti+1) setc    '&m'
                                            1898 &i       seta    1
                                            1899 .loop    aif    (&i gt &$dccexti).around
                                            1900          aif    ('&$dccext(&i)' eq '&m').getout
                                            1901 &i       seta    &i+1
                                            1902          ago     .loop
                                            1903 .around  anop
                                            1904 &$dccexti seta &$dccexti+1
                                            1905          extrn  &m
                                            1906 .getout  anop
                                            1907          mend
00001310                                    1908+$eye0044    ds    0d                                                    02-DCCCA
00001310 C4C3C3                             1909+         dc cl3'DCC'                                                    02-DCCCA
00001313 01                                 1910+         dc xl1'01' format one                                          02-DCCCA
00001314 00000000                           1911+         dc a(0)                                                        02-DCCCA
00001318 0000000000001382                   1912+         dc ad(@PER_1436)                                               02-DCCCA
00001320 00000000000000B8                   1913+         dc ad(184)                                                     02-DCCCA
00001328 0000000000000000                   1914+         dc ad(0)                                                       02-DCCCA
00001330 0000000000001000                   1915+         dc ad(4096)                                                    02-DCCCA
00001338 20                                 1916+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001339 03                                 1917+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000133A 03                                 1918+         dc al1(3)                                                      02-DCCCA
0000133B 08                                 1919+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000133C 00                                 1920+         dc bl.8'00000000'                                              02-DCCCA
0000133D 000000                             1921+         dc al3(0)                                                      02-DCCCA
00001340 00000000000012F0                   1922+         dc ad(@LNAME1436)                                              02-DCCCA
00001348                                    1923+         ds 0d                                                          02-DCCCA
00001348 0000000000001310                   1924+         dc ad($eye0044)                                                02-DCCCA
00001350 0000000000000000                   1925+         dc ad(0)                                                       02-DCCCA
00001358                                    1926+         ds    0d                                                       01-DCCPR
00001358                                    1927+rd_kafka_q_destroy_owner ds 0d                                          01-DCCPR
00001358                                    1928+@REGION_1436_1 ds 0h                                                    01-DCCPR
00001358 EBEC D008 0024          00000008   1929+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000135E E3E0 D088 0004          00000088   1930+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001364 E3C0 D090 0004          00000090   1931+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000136A B904 002E                          1932+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000136E E3B0 C018 0004          00000018   1933+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001374 A7EB 00B8               000000B8   1934+         aghi  14,184              increase by frame size               01-DCCPR
00001378 E3E0 C020 0021          00000020   1935+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000137E 4720 B020               00000020   1936+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001382                                    1937+@PER_1436 ds   0h                                                       01-DCCPR
00001382 EBDE 2080 0024          00000080   1938+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001388 E3C0 2090 0024          00000090   1939+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000138E B904 00D2                          1940+         lgr   13,2                set real frame pointer               01-DCCPR
00001392 B904 00CF                          1941+         lgr   12,15               set base reg                         01-DCCPR
                        00001358            1942+         using @REGION_1436_1,12                                        01-DCCPR
                                            1943 * ******* End of Prologue
                                            1944 * *
                                            1945 * ***           rd_kafka_q_destroy0(rkq, 1);
                                                                                                                           Page   44 
  Active Usings: @REGION_1436_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001396 E3F0 1000 0004          00000000   1946          LG    15,0(0,1)   ; rkq
0000139C E3F0 D0A8 0024          000000A8   1947          STG   15,168(0,13)
000013A2 E548 D0B0 0001          000000B0   1948          MVGHI 176(13),1
000013A8 4110 D0A8               000000A8   1949          LA    1,168(0,13)
000013AC E3F0 C0B0 0004          00001408   1950          LG    15,@lit_1436_53 ; rd_kafka_q_destroy0
000013B2                                    1951 @@gen_label68 DS    0H
000013B2 05EF                               1952          BALR  14,15
000013B4                                    1953 @@gen_label69 DS    0H
                                            1954 * ***   }
000013B4                                    1955 @ret_lab_1436 DS 0H
                                            1956 * * **** Start of Epilogue
                                            1957          DCCEPIL
000013B4                                    1958+         ds 0h                                                          01-DCCEP
                                            1959+* Epilog
000013B4 D707 D088 D088 00000088 00000088   1960+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000013BA E3D0 D080 0004          00000080   1961+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000013C0 E3C0 D090 0004          00000090   1962+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000013C6 E3B0 C018 0004          00000018   1963+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000013CC E3C0 B010 0021          00000010   1964+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000013D2 E3E0 D008 0004          00000008   1965+         lg  14,8(0,13)          load up return address                 01-DCCEP
000013D8 EB1C D020 0004          00000020   1966+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000013DE 078E                               1967+         bcr 8,14                if same dsab, just return              01-DCCEP
000013E0 E3F0 D010 0024          00000010   1968+         stg 15,16(0,13)         save return code                       01-DCCEP
000013E6 E300 D018 0024          00000018   1969+         stg 0,24(0,13)          save more return code                  01-DCCEP
000013EC E3F0 D090 0004          00000090   1970+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000013F2 E3F0 F018 0004          00000018   1971+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000013F8 47F0 F040               00000040   1972+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1973+* End of Epilog
                                            1974 * * **** End of Epilogue
00001400                                    1975          DS    0D
00001400 000000B8                           1976 @FRAMESIZE_1436 DC F'184'
00001404 00000000
00001408 0000000000001140                   1977 @lit_1436_53 DC AD(rd_kafka_q_destroy0)
                                            1978          DROP  12
                                            1979 *
                                            1980 *   DSECT for automatic variables in "rd_kafka_q_destroy_owner"
                                            1981 *      (FUNCTION #1436)
                                            1982 *
00000000                00000000 000000A8   1983 @AUTO#rd_kafka_q_destroy_owner DSECT
00000000                                    1984          DS    XL168
                                            1985 *
00001410                00000000 00007BF0   1986 @CODE    CSECT
                                            1987 *
                                            1988 *
                                            1989 *
                                            1990 * ....... start of rd_kafka_q_reset
00001410                                    1991 @LNAME1437 DS  0H
00001410 00000010                           1992          DC    X'00000010'
00001414 99846D9281869281                   1993          DC    C'rd_kafka_q_reset'
00001424 00                                 1994          DC    X'00'
                                            1995 rd_kafka_q_reset DCCPRLG CINDEX=1437,BASER=0,FRAME=168,SAVEAREA=NO,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1437
                                                                                                                           Page   45 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1996          macro
                                            1997          dccextrn &m
                                            1998          gblc    &$dccext(1000)
                                            1999          gbla    &$dccexti
                                            2000          lcla    &i
                                            2001 &$dccext(&$dccexti+1) setc    '&m'
                                            2002 &i       seta    1
                                            2003 .loop    aif    (&i gt &$dccexti).around
                                            2004          aif    ('&$dccext(&i)' eq '&m').getout
                                            2005 &i       seta    &i+1
                                            2006          ago     .loop
                                            2007 .around  anop
                                            2008 &$dccexti seta &$dccexti+1
                                            2009          extrn  &m
                                            2010 .getout  anop
                                            2011          mend
00001428                                    2012+$eye0047    ds    0d                                                    02-DCCCA
00001428 C4C3C3                             2013+         dc cl3'DCC'                                                    02-DCCCA
0000142B 01                                 2014+         dc xl1'01' format one                                          02-DCCCA
0000142C 00000000                           2015+         dc a(0)                                                        02-DCCCA
00001430 0000000000000000                   2016+         dc ad(0)                                                       02-DCCCA
00001438 00000000000000A8                   2017+         dc ad(168)                                                     02-DCCCA
00001440 0000000000000000                   2018+         dc ad(0)                                                       02-DCCCA
00001448 0000000000001000                   2019+         dc ad(4096)                                                    02-DCCCA
00001450 20                                 2020+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001451 03                                 2021+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001452 03                                 2022+         dc al1(3)                                                      02-DCCCA
00001453 08                                 2023+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001454 00                                 2024+         dc bl.8'00000000'                                              02-DCCCA
00001455 000000                             2025+         dc al3(0)                                                      02-DCCCA
00001458 0000000000001410                   2026+         dc ad(@LNAME1437)                                              02-DCCCA
00001460                                    2027+         ds 0d                                                          02-DCCCA
00001460 0000000000001428                   2028+         dc ad($eye0047)                                                02-DCCCA
00001468 0000000000000000                   2029+         dc ad(0)                                                       02-DCCCA
00001470                                    2030+         ds    0d                                                       01-DCCPR
00001470                                    2031+rd_kafka_q_reset ds 0d                                                  01-DCCPR
00001470                                    2032+@REGION_1437_1 ds 0h                                                    01-DCCPR
00001470 EBEC D008 0024          00000008   2033+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            2034 * ******* End of Prologue
                                            2035 * *
                                            2036 * ***      do { (&rkq->rkq_q)->tqh_first = (((void *)0)); (&rkq->rkq_q\
                                            2037 * )->tqh_last = &(&rkq->rkq_q)->tqh_first; } while ( 0);
00001476 E3F0 1000 0004          00000000   2038          LG    15,0(0,1)   ; rkq
0000147C                                    2039 @L264    DS    0H
0000147C A719 0000               00000000   2040          LGHI  1,0         ; 0
00001480 E310 F060 0024          00000060   2041          STG   1,96(0,15)  ; offset of rkq_q in rd_kafka_q_s
00001486 4110 F060               00000060   2042          LA    1,96(0,15)
0000148A E310 F068 0024          00000068   2043          STG   1,104(0,15) ; offset of tqh_last in rd_kafka_op_tailq
                                            2044 * ***           do {} while (0);
00001490                                    2045 @L267    DS    0H
                                            2046 * ***           rkq->rkq_qlen = 0;
00001490 E54C F070 0000          00000070   2047          MVHI  112(15),0   ; offset of rkq_qlen in rd_kafka_q_s
                                                                                                                           Page   46 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2048 * ***           rkq->rkq_qsize = 0;
00001496 E548 F078 0000          00000078   2049          MVGHI 120(15),0   ; offset of rkq_qsize in rd_kafka_q_s
                                            2050 * ***   }
0000149C                                    2051 @ret_lab_1437 DS 0H
                                            2052 * * **** Start of Epilogue
                                            2053          DCCEPIL
0000149C                                    2054+         ds 0h                                                          01-DCCEP
                                            2055+* Epilog
                                            2056+* Epilog
0000149C E3E0 D008 0004          00000008   2057+         lg    14,8(,13) restore the reg                                01-DCCEP
000014A2 EB1C D020 0004          00000020   2058+         lmg   1,12,32(13)                                              01-DCCEP
000014A8 07FE                               2059+         br   14                                                        01-DCCEP
                                            2060+* End of Epilog
                                            2061 * * **** End of Epilogue
                                            2062 *
                                            2063 *   DSECT for automatic variables in "rd_kafka_q_reset"
                                            2064 *      (FUNCTION #1437)
                                            2065 *
00000000                00000000 000000A8   2066 @AUTO#rd_kafka_q_reset DSECT
00000000                                    2067          DS    XL168
                                            2068 *
000014AA                00000000 00007BF0   2069 @CODE    CSECT
                                            2070 *
                                            2071 *
                                            2072 *
                                            2073 * ....... start of rd_kafka_q_fwd_get
000014AA                                    2074 @LNAME1439 DS  0H
000014AA 00000012                           2075          DC    X'00000012'
000014AE 99846D9281869281                   2076          DC    C'rd_kafka_q_fwd_get'
000014C0 00                                 2077          DC    X'00'
                                            2078 rd_kafka_q_fwd_get DCCPRLG CINDEX=1439,BASER=12,FRAME=184,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1439
                                            2079          macro
                                            2080          dccextrn &m
                                            2081          gblc    &$dccext(1000)
                                            2082          gbla    &$dccexti
                                            2083          lcla    &i
                                            2084 &$dccext(&$dccexti+1) setc    '&m'
                                            2085 &i       seta    1
                                            2086 .loop    aif    (&i gt &$dccexti).around
                                            2087          aif    ('&$dccext(&i)' eq '&m').getout
                                            2088 &i       seta    &i+1
                                            2089          ago     .loop
                                            2090 .around  anop
                                            2091 &$dccexti seta &$dccexti+1
                                            2092          extrn  &m
                                            2093 .getout  anop
                                            2094          mend
000014C8                                    2095+$eye0050    ds    0d                                                    02-DCCCA
000014C8 C4C3C3                             2096+         dc cl3'DCC'                                                    02-DCCCA
000014CB 01                                 2097+         dc xl1'01' format one                                          02-DCCCA
000014CC 00000000                           2098+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   47 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000014D0 000000000000153A                   2099+         dc ad(@PER_1439)                                               02-DCCCA
000014D8 00000000000000B8                   2100+         dc ad(184)                                                     02-DCCCA
000014E0 0000000000000000                   2101+         dc ad(0)                                                       02-DCCCA
000014E8 0000000000001000                   2102+         dc ad(4096)                                                    02-DCCCA
000014F0 20                                 2103+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000014F1 03                                 2104+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000014F2 03                                 2105+         dc al1(3)                                                      02-DCCCA
000014F3 08                                 2106+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000014F4 00                                 2107+         dc bl.8'00000000'                                              02-DCCCA
000014F5 000000                             2108+         dc al3(0)                                                      02-DCCCA
000014F8 00000000000014AA                   2109+         dc ad(@LNAME1439)                                              02-DCCCA
00001500                                    2110+         ds 0d                                                          02-DCCCA
00001500 00000000000014C8                   2111+         dc ad($eye0050)                                                02-DCCCA
00001508 0000000000000000                   2112+         dc ad(0)                                                       02-DCCCA
00001510                                    2113+         ds    0d                                                       01-DCCPR
00001510                                    2114+rd_kafka_q_fwd_get ds 0d                                                01-DCCPR
00001510                                    2115+@REGION_1439_1 ds 0h                                                    01-DCCPR
00001510 EBEC D008 0024          00000008   2116+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001516 E3E0 D088 0004          00000088   2117+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000151C E3C0 D090 0004          00000090   2118+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001522 B904 002E                          2119+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001526 E3B0 C018 0004          00000018   2120+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000152C A7EB 00B8               000000B8   2121+         aghi  14,184              increase by frame size               01-DCCPR
00001530 E3E0 C020 0021          00000020   2122+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001536 4720 B020               00000020   2123+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000153A                                    2124+@PER_1439 ds   0h                                                       01-DCCPR
0000153A EBDE 2080 0024          00000080   2125+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001540 E3C0 2090 0024          00000090   2126+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001546 B904 00D2                          2127+         lgr   13,2                set real frame pointer               01-DCCPR
0000154A B904 00CF                          2128+         lgr   12,15               set base reg                         01-DCCPR
                        00001510            2129+         using @REGION_1439_1,12                                        01-DCCPR
                                            2130 * ******* End of Prologue
                                            2131 * *
0000154E E320 1000 0004          00000000   2132          LG    2,0(0,1)    ; rkq
                                            2133 * ***           rd_kafka_q_t *fwdq;
                                            2134 * ***           if (do_lock)
00001554 E340 100C 0012          0000000C   2135          LT    4,12(0,1)   ; do_lock
0000155A 4780 C060               00001570   2136          BZ    @L270
                                            2137 * ***                   mtx_lock(&rkq->rkq_lock);
0000155E E320 D0B0 0024          000000B0   2138          STG   2,176(0,13)
00001564 4110 D0B0               000000B0   2139          LA    1,176(0,13)
00001568 E3F0 C0F0 0004          00001600   2140          LG    15,@lit_1439_56 ; mtx_lock
0000156E                                    2141 @@gen_label71 DS    0H
0000156E 05EF                               2142          BALR  14,15
00001570                                    2143 @@gen_label72 DS    0H
00001570                                    2144 @L270    DS    0H
                                            2145 * ***
                                            2146 * ***           if ((fwdq = rkq->rkq_fwdq))
00001570 E330 2058 0004          00000058   2147          LG    3,88(0,2)   ; offset of rkq_fwdq in rd_kafka_q_s
00001576 B902 00F3                          2148          LTGR  15,3
0000157A 4780 C080               00001590   2149          BZ    @L271
                                            2150 * ***                   rd_kafka_q_keep(fwdq);
                                                                                                                           Page   48 
  Active Usings: @REGION_1439_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000157E E330 D0B0 0024          000000B0   2151          STG   3,176(0,13)
00001584 4110 D0B0               000000B0   2152          LA    1,176(0,13)
00001588 E3F0 C0F8 0004          00001608   2153          LG    15,@lit_1439_57 ; rd_kafka_q_keep
0000158E                                    2154 @@gen_label74 DS    0H
0000158E 05EF                               2155          BALR  14,15
00001590                                    2156 @@gen_label75 DS    0H
00001590                                    2157 @L271    DS    0H
                                            2158 * ***
                                            2159 * ***           if (do_lock)
00001590 1244                               2160          LTR   4,4
00001592 4780 C098               000015A8   2161          BZ    @L272
                                            2162 * ***                   mtx_unlock(&rkq->rkq_lock);
00001596 E320 D0B0 0024          000000B0   2163          STG   2,176(0,13)
0000159C 4110 D0B0               000000B0   2164          LA    1,176(0,13)
000015A0 E3F0 C100 0004          00001610   2165          LG    15,@lit_1439_58 ; mtx_unlock
000015A6                                    2166 @@gen_label77 DS    0H
000015A6 05EF                               2167          BALR  14,15
000015A8                                    2168 @@gen_label78 DS    0H
000015A8                                    2169 @L272    DS    0H
                                            2170 * ***
                                            2171 * ***           return fwdq;
000015A8 B904 00F3                          2172          LGR   15,3
                                            2173 * ***   }
                                            2174 * * **** Start of Epilogue
                                            2175          DCCEPIL
000015AC                                    2176+         ds 0h                                                          01-DCCEP
                                            2177+* Epilog
000015AC D707 D088 D088 00000088 00000088   2178+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000015B2 E3D0 D080 0004          00000080   2179+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000015B8 E3C0 D090 0004          00000090   2180+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000015BE E3B0 C018 0004          00000018   2181+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000015C4 E3C0 B010 0021          00000010   2182+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000015CA E3E0 D008 0004          00000008   2183+         lg  14,8(0,13)          load up return address                 01-DCCEP
000015D0 EB1C D020 0004          00000020   2184+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000015D6 078E                               2185+         bcr 8,14                if same dsab, just return              01-DCCEP
000015D8 E3F0 D010 0024          00000010   2186+         stg 15,16(0,13)         save return code                       01-DCCEP
000015DE E300 D018 0024          00000018   2187+         stg 0,24(0,13)          save more return code                  01-DCCEP
000015E4 E3F0 D090 0004          00000090   2188+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000015EA E3F0 F018 0004          00000018   2189+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000015F0 47F0 F040               00000040   2190+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2191+* End of Epilog
                                            2192 * * **** End of Epilogue
000015F8                                    2193          DS    0D
000015F8 000000B8                           2194 @FRAMESIZE_1439 DC F'184'
000015FC 00000000
00001600 0000000000000000                   2195 @lit_1439_56 DC AD(mtx_lock)
00001608 0000000000000EC0                   2196 @lit_1439_57 DC AD(rd_kafka_q_keep)
00001610 0000000000000000                   2197 @lit_1439_58 DC AD(mtx_unlock)
                                            2198          DROP  12
                                            2199 *
                                            2200 *   DSECT for automatic variables in "rd_kafka_q_fwd_get"
                                            2201 *      (FUNCTION #1439)
                                                                                                                           Page   49 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2202 *
00000000                00000000 000000A8   2203 @AUTO#rd_kafka_q_fwd_get DSECT
00000000                                    2204          DS    XL168
                                            2205 *
00001618                00000000 00007BF0   2206 @CODE    CSECT
                                            2207 *
                                            2208 *
                                            2209 *
                                            2210 * ....... start of rd_kafka_q_io_event
00001618                                    2211 @LNAME1441 DS  0H
00001618 00000013                           2212          DC    X'00000013'
0000161C 99846D9281869281                   2213          DC    C'rd_kafka_q_io_event'
0000162F 00                                 2214          DC    X'00'
                                            2215 rd_kafka_q_io_event DCCPRLG CINDEX=1441,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1441
                                            2216          macro
                                            2217          dccextrn &m
                                            2218          gblc    &$dccext(1000)
                                            2219          gbla    &$dccexti
                                            2220          lcla    &i
                                            2221 &$dccext(&$dccexti+1) setc    '&m'
                                            2222 &i       seta    1
                                            2223 .loop    aif    (&i gt &$dccexti).around
                                            2224          aif    ('&$dccext(&i)' eq '&m').getout
                                            2225 &i       seta    &i+1
                                            2226          ago     .loop
                                            2227 .around  anop
                                            2228 &$dccexti seta &$dccexti+1
                                            2229          extrn  &m
                                            2230 .getout  anop
                                            2231          mend
00001630                                    2232+$eye0053    ds    0d                                                    02-DCCCA
00001630 C4C3C3                             2233+         dc cl3'DCC'                                                    02-DCCCA
00001633 01                                 2234+         dc xl1'01' format one                                          02-DCCCA
00001634 00000000                           2235+         dc a(0)                                                        02-DCCCA
00001638 00000000000016A2                   2236+         dc ad(@PER_1441)                                               02-DCCCA
00001640 00000000000000C0                   2237+         dc ad(192)                                                     02-DCCCA
00001648 0000000000000000                   2238+         dc ad(0)                                                       02-DCCCA
00001650 0000000000001000                   2239+         dc ad(4096)                                                    02-DCCCA
00001658 20                                 2240+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001659 03                                 2241+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000165A 03                                 2242+         dc al1(3)                                                      02-DCCCA
0000165B 08                                 2243+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000165C 00                                 2244+         dc bl.8'00000000'                                              02-DCCCA
0000165D 000000                             2245+         dc al3(0)                                                      02-DCCCA
00001660 0000000000001618                   2246+         dc ad(@LNAME1441)                                              02-DCCCA
00001668                                    2247+         ds 0d                                                          02-DCCCA
00001668 0000000000001630                   2248+         dc ad($eye0053)                                                02-DCCCA
00001670 0000000000000000                   2249+         dc ad(0)                                                       02-DCCCA
00001678                                    2250+         ds    0d                                                       01-DCCPR
00001678                                    2251+rd_kafka_q_io_event ds 0d                                               01-DCCPR
00001678                                    2252+@REGION_1441_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   50 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001678 EBEC D008 0024          00000008   2253+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000167E E3E0 D088 0004          00000088   2254+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001684 E3C0 D090 0004          00000090   2255+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000168A B904 002E                          2256+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000168E E3B0 C018 0004          00000018   2257+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001694 A7EB 00C0               000000C0   2258+         aghi  14,192              increase by frame size               01-DCCPR
00001698 E3E0 C020 0021          00000020   2259+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000169E 4720 B020               00000020   2260+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000016A2                                    2261+@PER_1441 ds   0h                                                       01-DCCPR
000016A2 EBDE 2080 0024          00000080   2262+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000016A8 E3C0 2090 0024          00000090   2263+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000016AE B904 00D2                          2264+         lgr   13,2                set real frame pointer               01-DCCPR
000016B2 B904 00CF                          2265+         lgr   12,15               set base reg                         01-DCCPR
                        00001678            2266+         using @REGION_1441_1,12                                        01-DCCPR
                                            2267 * ******* End of Prologue
                                            2268 * *
000016B6 E3F0 1000 0004          00000000   2269          LG    15,0(0,1)   ; rkq
                                            2270 * ***
                                            2271 * ***      if (((!rkq->rkq_qio)))
000016BC E310 F090 0002          00000090   2272          LTG   1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000016C2 4780 C102               0000177A   2273          BZ    @ret_lab_1441
                                            2274 * ***         return;
000016C6                                    2275 @L275    DS    0H
                                            2276 * ***
                                            2277 * ***           if (rkq->rkq_qio->event_cb) {
000016C6 E310 F090 0004          00000090   2278          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000016CC E310 1020 0002          00000020   2279          LTG   1,32(0,1)   ; offset of event_cb in rd_kafka_q_io
000016D2 4780 C0A8               00001720   2280          BZ    @L276
                                            2281 * ***                   rkq->rkq_qio->event_cb(rkq->rkq_rk,
                                            2282 * ***                                          rkq->rkq_qio->event_cb_\
                                            2283 * opaque);
000016D6 E310 F088 0004          00000088   2284          LG    1,136(0,15)
000016DC E310 D0A8 0024          000000A8   2285          STG   1,168(0,13)
000016E2 E310 F090 0004          00000090   2286          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000016E8 E310 1028 0004          00000028   2287          LG    1,40(0,1)
000016EE E310 D0B0 0024          000000B0   2288          STG   1,176(0,13)
000016F4 E3F0 F090 0004          00000090   2289          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000016FA E3F0 F020 0004          00000020   2290          LG    15,32(0,15) ; offset of event_cb in rd_kafka_q_io
00001700 4110 D0A8               000000A8   2291          LA    1,168(0,13)
00001704                                    2292 @@gen_label81 DS    0H
00001704 05EF                               2293          BALR  14,15
00001706                                    2294 @@gen_label82 DS    0H
                                            2295 * ***                   return;
00001706 47F0 C102               0000177A   2296          B     @ret_lab_1441
00001710                                    2297          DS    0D
00001710 000000C0                           2298 @FRAMESIZE_1441 DC F'192'
00001714 00000000
00001718 0000000000000000                   2299 @lit_1441_60 DC AD(write)
                                            2300 * ***           }
00001720                                    2301 @L276    DS    0H
                                            2302 * ***
                                            2303 * ***
                                                                                                                           Page   51 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2304 * ***
                                            2305 * ***
                                            2306 * ***
                                            2307 * ***
                                            2308 * ***           if (rkq->rkq_qio->sent)
00001720 E310 F090 0004          00000090   2309          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001726 9500 1018      00000018 00000000   2310          CLI   24(1),0
0000172A 4770 C102               0000177A   2311          BNE   @ret_lab_1441
                                            2312 * ***                   return;
0000172E                                    2313 @L277    DS    0H
                                            2314 * ***
                                            2315 * ***           rkq->rkq_qio->sent = 1;
0000172E E310 F090 0004          00000090   2316          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001734 9201 1018      00000018 00000001   2317          MVI   24(1),1     ; offset of sent in rd_kafka_q_io
                                            2318 * ***
                                            2319 * ***
                                            2320 * ***
                                            2321 * ***           if (write(rkq->rkq_qio->fd,rkq->rkq_qio->payload,(int)\
                                            2322 * rkq->rkq_qio->size) == -1)
00001738 E310 F090 0004          00000090   2323          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000173E E310 1000 0014          00000000   2324          LGF   1,0(0,1)
00001744 E310 D0A8 0024          000000A8   2325          STG   1,168(0,13)
0000174A E310 F090 0004          00000090   2326          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001750 E310 1008 0004          00000008   2327          LG    1,8(0,1)
00001756 E310 D0B0 0024          000000B0   2328          STG   1,176(0,13)
0000175C E3F0 F090 0004          00000090   2329          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001762 E3F0 F014 0014          00000014   2330          LGF   15,20(0,15)
00001768 E3F0 D0B8 0024          000000B8   2331          STG   15,184(0,13)
0000176E 4110 D0A8               000000A8   2332          LA    1,168(0,13)
00001772 E3F0 C0A0 0004          00001718   2333          LG    15,@lit_1441_60 ; write
00001778                                    2334 @@gen_label84 DS    0H
00001778 05EF                               2335          BALR  14,15
0000177A                                    2336 @@gen_label85 DS    0H
                                            2337 * ***
                                            2338 * ***                   ;
0000177A                                    2339 @L278    DS    0H
                                            2340 * ***   }
0000177A                                    2341 @ret_lab_1441 DS 0H
                                            2342 * * **** Start of Epilogue
                                            2343          DCCEPIL
0000177A                                    2344+         ds 0h                                                          01-DCCEP
                                            2345+* Epilog
0000177A D707 D088 D088 00000088 00000088   2346+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001780 E3D0 D080 0004          00000080   2347+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001786 E3C0 D090 0004          00000090   2348+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000178C E3B0 C018 0004          00000018   2349+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001792 E3C0 B010 0021          00000010   2350+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001798 E3E0 D008 0004          00000008   2351+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000179E EB1C D020 0004          00000020   2352+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000017A4 078E                               2353+         bcr 8,14                if same dsab, just return              01-DCCEP
000017A6 E3F0 D010 0024          00000010   2354+         stg 15,16(0,13)         save return code                       01-DCCEP
000017AC E300 D018 0024          00000018   2355+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page   52 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000017B2 E3F0 D090 0004          00000090   2356+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000017B8 E3F0 F018 0004          00000018   2357+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000017BE 47F0 F040               00000040   2358+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2359+* End of Epilog
                                            2360 * * **** End of Epilogue
                                            2361          DROP  12
                                            2362 *
                                            2363 *   DSECT for automatic variables in "rd_kafka_q_io_event"
                                            2364 *      (FUNCTION #1441)
                                            2365 *
00000000                00000000 000000A8   2366 @AUTO#rd_kafka_q_io_event DSECT
00000000                                    2367          DS    XL168
                                            2368 *
000017C2                00000000 00007BF0   2369 @CODE    CSECT
                                            2370 *
                                            2371 *
                                            2372 *
                                            2373 * ....... start of rd_kafka_op_cmp_prio
000017C2                                    2374 @LNAME1442 DS  0H
000017C2 00000014                           2375          DC    X'00000014'
000017C6 99846D9281869281                   2376          DC    C'rd_kafka_op_cmp_prio'
000017DA 00                                 2377          DC    X'00'
                                            2378 rd_kafka_op_cmp_prio DCCPRLG CINDEX=1442,BASER=12,FRAME=176,SAVEAREA=NO*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1442
                                            2379          macro
                                            2380          dccextrn &m
                                            2381          gblc    &$dccext(1000)
                                            2382          gbla    &$dccexti
                                            2383          lcla    &i
                                            2384 &$dccext(&$dccexti+1) setc    '&m'
                                            2385 &i       seta    1
                                            2386 .loop    aif    (&i gt &$dccexti).around
                                            2387          aif    ('&$dccext(&i)' eq '&m').getout
                                            2388 &i       seta    &i+1
                                            2389          ago     .loop
                                            2390 .around  anop
                                            2391 &$dccexti seta &$dccexti+1
                                            2392          extrn  &m
                                            2393 .getout  anop
                                            2394          mend
000017E0                                    2395+$eye0056    ds    0d                                                    02-DCCCA
000017E0 C4C3C3                             2396+         dc cl3'DCC'                                                    02-DCCCA
000017E3 01                                 2397+         dc xl1'01' format one                                          02-DCCCA
000017E4 00000000                           2398+         dc a(0)                                                        02-DCCCA
000017E8 0000000000000000                   2399+         dc ad(0)                                                       02-DCCCA
000017F0 00000000000000B0                   2400+         dc ad(176)                                                     02-DCCCA
000017F8 0000000000000000                   2401+         dc ad(0)                                                       02-DCCCA
00001800 0000000000001000                   2402+         dc ad(4096)                                                    02-DCCCA
00001808 20                                 2403+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001809 03                                 2404+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000180A 03                                 2405+         dc al1(3)                                                      02-DCCCA
0000180B 08                                 2406+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   53 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000180C 00                                 2407+         dc bl.8'00000000'                                              02-DCCCA
0000180D 000000                             2408+         dc al3(0)                                                      02-DCCCA
00001810 00000000000017C2                   2409+         dc ad(@LNAME1442)                                              02-DCCCA
00001818                                    2410+         ds 0d                                                          02-DCCCA
00001818 00000000000017E0                   2411+         dc ad($eye0056)                                                02-DCCCA
00001820 0000000000000000                   2412+         dc ad(0)                                                       02-DCCCA
00001828                                    2413+         ds    0d                                                       01-DCCPR
00001828                                    2414+rd_kafka_op_cmp_prio ds 0d                                              01-DCCPR
00001828                                    2415+@REGION_1442_1 ds 0h                                                    01-DCCPR
00001828 EBEC D008 0024          00000008   2416+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000182E B904 00CF                          2417+         lgr   12,15               set base reg                         01-DCCPR
                        00001828            2418+         using @REGION_1442_1,12                                        01-DCCPR
                                            2419 * ******* End of Prologue
                                            2420 * *
                                            2421 * ***           const rd_kafka_op_t *a = _a, *b = _b;
00001832 E3F0 1000 0004          00000000   2422          LG    15,0(0,1)   ; _a
00001838 E310 1008 0004          00000008   2423          LG    1,8(0,1)    ; _b
                                            2424 * ***
                                            2425 * ***           return (int)((b->rko_prio) < (a->rko_prio) ? -1 : ((b-\
                                            2426 * >rko_prio) > (a->rko_prio)));
0000183E 5820 1034               00000034   2427          L     2,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
00001842 5920 F034               00000034   2428          C     2,52(0,15)
00001846 47B0 C02A               00001852   2429          BNL   @L279
0000184A A7F8 FFFF               0000FFFF   2430          LHI   15,-1       ; -1
0000184E 47F0 C042               0000186A   2431          B     @L280
00001852                                    2432 @L279    DS    0H
00001852 5810 1034               00000034   2433          L     1,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
00001856 5910 F034               00000034   2434          C     1,52(0,15)
0000185A 47D0 C03E               00001866   2435          BNH   @@gen_label87
0000185E A7F8 0001               00000001   2436          LHI   15,1
00001862 47F0 C042               0000186A   2437          B     @@gen_label88
00001866                                    2438 @@gen_label87 DS 0H
00001866 A7F8 0000               00000000   2439          LHI   15,0
0000186A                                    2440 @@gen_label88 DS 0H
0000186A                                    2441 @L280    DS    0H
0000186A B914 00FF                          2442          LGFR  15,15
                                            2443 * ***   }
                                            2444 * * **** Start of Epilogue
                                            2445          DCCEPIL
0000186E                                    2446+         ds 0h                                                          01-DCCEP
                                            2447+* Epilog
                                            2448+* Epilog
0000186E E3E0 D008 0004          00000008   2449+         lg    14,8(,13) restore the reg                                01-DCCEP
00001874 EB1C D020 0004          00000020   2450+         lmg   1,12,32(13)                                              01-DCCEP
0000187A 07FE                               2451+         br   14                                                        01-DCCEP
                                            2452+* End of Epilog
                                            2453 * * **** End of Epilogue
                                            2454          DROP  12
                                            2455 *
                                            2456 *   DSECT for automatic variables in "rd_kafka_op_cmp_prio"
                                            2457 *      (FUNCTION #1442)
                                            2458 *
                                                                                                                           Page   54 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                00000000 000000A8   2459 @AUTO#rd_kafka_op_cmp_prio DSECT
00000000                                    2460          DS    XL168
                                            2461 *
0000187C                00000000 00007BF0   2462 @CODE    CSECT
                                            2463 *
                                            2464 *
                                            2465 *
                                            2466 * ....... start of rd_kafka_q_yield
0000187C                                    2467 @LNAME1443 DS  0H
0000187C 00000010                           2468          DC    X'00000010'
00001880 99846D9281869281                   2469          DC    C'rd_kafka_q_yield'
00001890 00                                 2470          DC    X'00'
                                            2471 rd_kafka_q_yield DCCPRLG CINDEX=1443,BASER=12,FRAME=192,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME1443
                                            2472          macro
                                            2473          dccextrn &m
                                            2474          gblc    &$dccext(1000)
                                            2475          gbla    &$dccexti
                                            2476          lcla    &i
                                            2477 &$dccext(&$dccexti+1) setc    '&m'
                                            2478 &i       seta    1
                                            2479 .loop    aif    (&i gt &$dccexti).around
                                            2480          aif    ('&$dccext(&i)' eq '&m').getout
                                            2481 &i       seta    &i+1
                                            2482          ago     .loop
                                            2483 .around  anop
                                            2484 &$dccexti seta &$dccexti+1
                                            2485          extrn  &m
                                            2486 .getout  anop
                                            2487          mend
00001898                                    2488+$eye0059    ds    0d                                                    02-DCCCA
00001898 C4C3C3                             2489+         dc cl3'DCC'                                                    02-DCCCA
0000189B 01                                 2490+         dc xl1'01' format one                                          02-DCCCA
0000189C 00000000                           2491+         dc a(0)                                                        02-DCCCA
000018A0 000000000000190A                   2492+         dc ad(@PER_1443)                                               02-DCCCA
000018A8 00000000000000C0                   2493+         dc ad(192)                                                     02-DCCCA
000018B0 0000000000000000                   2494+         dc ad(0)                                                       02-DCCCA
000018B8 0000000000001000                   2495+         dc ad(4096)                                                    02-DCCCA
000018C0 20                                 2496+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000018C1 03                                 2497+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000018C2 03                                 2498+         dc al1(3)                                                      02-DCCCA
000018C3 08                                 2499+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000018C4 00                                 2500+         dc bl.8'00000000'                                              02-DCCCA
000018C5 000000                             2501+         dc al3(0)                                                      02-DCCCA
000018C8 000000000000187C                   2502+         dc ad(@LNAME1443)                                              02-DCCCA
000018D0                                    2503+         ds 0d                                                          02-DCCCA
000018D0 0000000000001898                   2504+         dc ad($eye0059)                                                02-DCCCA
000018D8 0000000000000000                   2505+         dc ad(0)                                                       02-DCCCA
000018E0                                    2506+         ds    0d                                                       01-DCCPR
000018E0                                    2507+rd_kafka_q_yield ds 0d                                                  01-DCCPR
000018E0                                    2508+@REGION_1443_1 ds 0h                                                    01-DCCPR
000018E0 EBEC D008 0024          00000008   2509+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page   55 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000018E6 E3E0 D088 0004          00000088   2510+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000018EC E3C0 D090 0004          00000090   2511+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000018F2 B904 002E                          2512+         lgr   2,14                copy addr of our savearea            01-DCCPR
000018F6 E3B0 C018 0004          00000018   2513+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000018FC A7EB 00C0               000000C0   2514+         aghi  14,192              increase by frame size               01-DCCPR
00001900 E3E0 C020 0021          00000020   2515+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001906 4720 B020               00000020   2516+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000190A                                    2517+@PER_1443 ds   0h                                                       01-DCCPR
0000190A EBDE 2080 0024          00000080   2518+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001910 E3C0 2090 0024          00000090   2519+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001916 B904 00D2                          2520+         lgr   13,2                set real frame pointer               01-DCCPR
0000191A B904 00CF                          2521+         lgr   12,15               set base reg                         01-DCCPR
                        000018E0            2522+         using @REGION_1443_1,12                                        01-DCCPR
                                            2523 * ******* End of Prologue
                                            2524 * *
0000191E E320 1000 0004          00000000   2525          LG    2,0(0,1)    ; rkq
                                            2526 * ***           rd_kafka_q_t *fwdq;
                                            2527 * ***
                                            2528 * ***           mtx_lock(&rkq->rkq_lock);
00001924 E320 D0B0 0024          000000B0   2529          STG   2,176(0,13)
0000192A 4110 D0B0               000000B0   2530          LA    1,176(0,13)
0000192E E3F0 C080 0004          00001960   2531          LG    15,@lit_1443_63 ; mtx_lock
00001934                                    2532 @@gen_label89 DS    0H
00001934 05EF                               2533          BALR  14,15
00001936                                    2534 @@gen_label90 DS    0H
                                            2535 * ***
                                            2536 * ***           do {} while (0);
00001936                                    2537 @L281    DS    0H
                                            2538 * ***
                                            2539 * ***           if (((!(rkq->rkq_flags & 0x2)))) {
00001936 9102 2087      00000087 00000002   2540          TM    135(2),2
0000193A 4770 C0B8               00001998   2541          BNZ   @L284
                                            2542 * ***
                                            2543 * ***                   mtx_unlock(&rkq->rkq_lock);
0000193E E320 D0B0 0024          000000B0   2544          STG   2,176(0,13)
00001944 4110 D0B0               000000B0   2545          LA    1,176(0,13)
00001948 E3F0 C088 0004          00001968   2546          LG    15,@lit_1443_64 ; mtx_unlock
0000194E                                    2547 @@gen_label92 DS    0H
0000194E 05EF                               2548          BALR  14,15
00001950                                    2549 @@gen_label93 DS    0H
                                            2550 * ***                   return;
00001950 47F0 C16C               00001A4C   2551          B     @ret_lab_1443
00001958                                    2552          DS    0D
00001958 000000C0                           2553 @FRAMESIZE_1443 DC F'192'
0000195C 00000000
00001960 0000000000000000                   2554 @lit_1443_63 DC AD(mtx_lock)
00001968 0000000000000000                   2555 @lit_1443_64 DC AD(mtx_unlock)
00001970 0000000000001510                   2556 @lit_1443_65 DC AD(rd_kafka_q_fwd_get)
00001978 0000000000000000                   2557 @lit_1443_66 DC AD(cnd_broadcast)
00001980 0000000000001678                   2558 @lit_1443_67 DC AD(rd_kafka_q_io_event)
00001988 00000000000018E0                   2559 @lit_1443_70 DC AD(rd_kafka_q_yield)
00001990 0000000000001140                   2560 @lit_1443_71 DC AD(rd_kafka_q_destroy0)
                                                                                                                           Page   56 
  Active Usings: @REGION_1443_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2561 * ***           }
00001998                                    2562 @L284    DS    0H
                                            2563 * ***
                                            2564 * ***           if (!(fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
00001998 E320 D0B0 0024          000000B0   2565          STG   2,176(0,13)
0000199E D707 D0B8 D0B8 000000B8 000000B8   2566          XC    184(8,13),184(13)
000019A4 4110 D0B0               000000B0   2567          LA    1,176(0,13)
000019A8 E3F0 C090 0004          00001970   2568          LG    15,@lit_1443_65 ; rd_kafka_q_fwd_get
000019AE                                    2569 @@gen_label94 DS    0H
000019AE 05EF                               2570          BALR  14,15
000019B0                                    2571 @@gen_label95 DS    0H
000019B0 B904 003F                          2572          LGR   3,15
000019B4 B902 00F3                          2573          LTGR  15,3
000019B8 4770 C130               00001A10   2574          BNZ   @L285
                                            2575 * ***                   rkq->rkq_flags |= 0x8;
000019BC 58F0 2084               00000084   2576          L     15,132(0,2)
000019C0 A5FB 0008               00000008   2577          OILL  15,8
000019C4 50F0 2084               00000084   2578          ST    15,132(0,2)
                                            2579 * ***                   cnd_broadcast(&rkq->rkq_cond);
000019C8 41F0 2028               00000028   2580          LA    15,40(0,2)
000019CC E3F0 D0B0 0024          000000B0   2581          STG   15,176(0,13)
000019D2 4110 D0B0               000000B0   2582          LA    1,176(0,13)
000019D6 E3F0 C098 0004          00001978   2583          LG    15,@lit_1443_66 ; cnd_broadcast
000019DC                                    2584 @@gen_label97 DS    0H
000019DC 05EF                               2585          BALR  14,15
000019DE                                    2586 @@gen_label98 DS    0H
                                            2587 * ***                   if (rkq->rkq_qlen == 0)
000019DE E55C 2070 0000          00000070   2588          CHSI  112(2),0
000019E4 4770 C11A               000019FA   2589          BNE   @L286
                                            2590 * ***                           rd_kafka_q_io_event(rkq);
000019E8 E320 D0B0 0024          000000B0   2591          STG   2,176(0,13)
000019EE 4110 D0B0               000000B0   2592          LA    1,176(0,13)
000019F2 E3F0 C0A0 0004          00001980   2593          LG    15,@lit_1443_67 ; rd_kafka_q_io_event
000019F8                                    2594 @@gen_label100 DS    0H
000019F8 05EF                               2595          BALR  14,15
000019FA                                    2596 @@gen_label101 DS    0H
000019FA                                    2597 @L286    DS    0H
                                            2598 * ***
                                            2599 * ***                   mtx_unlock(&rkq->rkq_lock);
000019FA E320 D0B0 0024          000000B0   2600          STG   2,176(0,13)
00001A00 4110 D0B0               000000B0   2601          LA    1,176(0,13)
00001A04 E3F0 C088 0004          00001968   2602          LG    15,@lit_1443_64 ; mtx_unlock
00001A0A                                    2603 @@gen_label102 DS    0H
00001A0A 05EF                               2604          BALR  14,15
00001A0C                                    2605 @@gen_label103 DS    0H
                                            2606 * ***           } else {
00001A0C 47F0 C16C               00001A4C   2607          B     @L287
00001A10                                    2608 @L285    DS    0H
                                            2609 * ***                   mtx_unlock(&rkq->rkq_lock);
00001A10 E320 D0B0 0024          000000B0   2610          STG   2,176(0,13)
00001A16 4110 D0B0               000000B0   2611          LA    1,176(0,13)
00001A1A E3F0 C088 0004          00001968   2612          LG    15,@lit_1443_64 ; mtx_unlock
                                                                                                                           Page   57 
  Active Usings: @REGION_1443_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001A20                                    2613 @@gen_label104 DS    0H
00001A20 05EF                               2614          BALR  14,15
00001A22                                    2615 @@gen_label105 DS    0H
                                            2616 * ***                   rd_kafka_q_yield(fwdq);
00001A22 E330 D0B0 0024          000000B0   2617          STG   3,176(0,13)
00001A28 4110 D0B0               000000B0   2618          LA    1,176(0,13)
00001A2C E3F0 C0A8 0004          00001988   2619          LG    15,@lit_1443_70 ; rd_kafka_q_yield
00001A32                                    2620 @@gen_label106 DS    0H
00001A32 05EF                               2621          BALR  14,15
00001A34                                    2622 @@gen_label107 DS    0H
                                            2623 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
00001A34 E330 D0B0 0024          000000B0   2624          STG   3,176(0,13)
00001A3A D707 D0B8 D0B8 000000B8 000000B8   2625          XC    184(8,13),184(13)
00001A40 4110 D0B0               000000B0   2626          LA    1,176(0,13)
00001A44 E3F0 C0B0 0004          00001990   2627          LG    15,@lit_1443_71 ; rd_kafka_q_destroy0
00001A4A                                    2628 @@gen_label108 DS    0H
00001A4A 05EF                               2629          BALR  14,15
00001A4C                                    2630 @@gen_label109 DS    0H
                                            2631 * ***           }
00001A4C                                    2632 @L287    DS    0H
                                            2633 * ***
                                            2634 * ***
                                            2635 * ***   }
00001A4C                                    2636 @ret_lab_1443 DS 0H
                                            2637 * * **** Start of Epilogue
                                            2638          DCCEPIL
00001A4C                                    2639+         ds 0h                                                          01-DCCEP
                                            2640+* Epilog
00001A4C D707 D088 D088 00000088 00000088   2641+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001A52 E3D0 D080 0004          00000080   2642+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001A58 E3C0 D090 0004          00000090   2643+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001A5E E3B0 C018 0004          00000018   2644+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001A64 E3C0 B010 0021          00000010   2645+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001A6A E3E0 D008 0004          00000008   2646+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001A70 EB1C D020 0004          00000020   2647+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001A76 078E                               2648+         bcr 8,14                if same dsab, just return              01-DCCEP
00001A78 E3F0 D010 0024          00000010   2649+         stg 15,16(0,13)         save return code                       01-DCCEP
00001A7E E300 D018 0024          00000018   2650+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001A84 E3F0 D090 0004          00000090   2651+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001A8A E3F0 F018 0004          00000018   2652+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001A90 47F0 F040               00000040   2653+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2654+* End of Epilog
                                            2655 * * **** End of Epilogue
                                            2656          DROP  12
                                            2657 *
                                            2658 *   DSECT for automatic variables in "rd_kafka_q_yield"
                                            2659 *      (FUNCTION #1443)
                                            2660 *
00000000                00000000 000000A8   2661 @AUTO#rd_kafka_q_yield DSECT
00000000                                    2662          DS    XL168
                                            2663 *
00001A94                00000000 00007BF0   2664 @CODE    CSECT
                                                                                                                           Page   58 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2665 *
                                            2666 *
                                            2667 *
                                            2668 * ....... start of rd_kafka_q_enq0
00001A94                                    2669 @LNAME1444 DS  0H
00001A94 0000000F                           2670          DC    X'0000000F'
00001A98 99846D9281869281                   2671          DC    C'rd_kafka_q_enq0'
00001AA7 00                                 2672          DC    X'00'
                                            2673 rd_kafka_q_enq0 DCCPRLG CINDEX=1444,BASER=12,FRAME=192,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1444
                                            2674          macro
                                            2675          dccextrn &m
                                            2676          gblc    &$dccext(1000)
                                            2677          gbla    &$dccexti
                                            2678          lcla    &i
                                            2679 &$dccext(&$dccexti+1) setc    '&m'
                                            2680 &i       seta    1
                                            2681 .loop    aif    (&i gt &$dccexti).around
                                            2682          aif    ('&$dccext(&i)' eq '&m').getout
                                            2683 &i       seta    &i+1
                                            2684          ago     .loop
                                            2685 .around  anop
                                            2686 &$dccexti seta &$dccexti+1
                                            2687          extrn  &m
                                            2688 .getout  anop
                                            2689          mend
00001AA8                                    2690+$eye0062    ds    0d                                                    02-DCCCA
00001AA8 C4C3C3                             2691+         dc cl3'DCC'                                                    02-DCCCA
00001AAB 01                                 2692+         dc xl1'01' format one                                          02-DCCCA
00001AAC 00000000                           2693+         dc a(0)                                                        02-DCCCA
00001AB0 0000000000001B1A                   2694+         dc ad(@PER_1444)                                               02-DCCCA
00001AB8 00000000000000C0                   2695+         dc ad(192)                                                     02-DCCCA
00001AC0 0000000000000000                   2696+         dc ad(0)                                                       02-DCCCA
00001AC8 0000000000001000                   2697+         dc ad(4096)                                                    02-DCCCA
00001AD0 20                                 2698+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001AD1 03                                 2699+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001AD2 03                                 2700+         dc al1(3)                                                      02-DCCCA
00001AD3 08                                 2701+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001AD4 00                                 2702+         dc bl.8'00000000'                                              02-DCCCA
00001AD5 000000                             2703+         dc al3(0)                                                      02-DCCCA
00001AD8 0000000000001A94                   2704+         dc ad(@LNAME1444)                                              02-DCCCA
00001AE0                                    2705+         ds 0d                                                          02-DCCCA
00001AE0 0000000000001AA8                   2706+         dc ad($eye0062)                                                02-DCCCA
00001AE8 0000000000000000                   2707+         dc ad(0)                                                       02-DCCCA
00001AF0                                    2708+         ds    0d                                                       01-DCCPR
00001AF0                                    2709+rd_kafka_q_enq0 ds 0d                                                   01-DCCPR
00001AF0                                    2710+@REGION_1444_1 ds 0h                                                    01-DCCPR
00001AF0 EBEC D008 0024          00000008   2711+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001AF6 E3E0 D088 0004          00000088   2712+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001AFC E3C0 D090 0004          00000090   2713+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001B02 B904 002E                          2714+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001B06 E3B0 C018 0004          00000018   2715+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page   59 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001B0C A7EB 00C0               000000C0   2716+         aghi  14,192              increase by frame size               01-DCCPR
00001B10 E3E0 C020 0021          00000020   2717+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001B16 4720 B020               00000020   2718+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001B1A                                    2719+@PER_1444 ds   0h                                                       01-DCCPR
00001B1A EBDE 2080 0024          00000080   2720+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001B20 E3C0 2090 0024          00000090   2721+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001B26 B904 00D2                          2722+         lgr   13,2                set real frame pointer               01-DCCPR
00001B2A B904 00CF                          2723+         lgr   12,15               set base reg                         01-DCCPR
                        00001AF0            2724+         using @REGION_1444_1,12                                        01-DCCPR
                                            2725 * ******* End of Prologue
                                            2726 * *
                                            2727 * ***       if (((!rko->rko_prio)))
00001B2E EB34 1000 0004          00000000   2728          LMG   3,4,0(1)    ; rkq
00001B34 E3F0 4034 0012          00000034   2729          LT    15,52(0,4)  ; offset of rko_prio in rd_kafka_op_s
00001B3A 4770 C090               00001B80   2730          BNZ   @L288
                                            2731 * ***           do {  (rko)->rko_link .tqe_next = (((void *)0)); (rko)\
                                            2732 * ->rko_link .tqe_prev = (&rkq->rkq_q)->tqh_last; *(&rkq->rkq_q)->tqh_\
                                            2733 * last = (rko); (&rkq->rkq_q)->tqh_last = &(rko)->rko_link .tqe_next; \
                                            2734 * } while ( 0);
00001B3E                                    2735 @L289    DS    0H
00001B3E A7F9 0000               00000000   2736          LGHI  15,0        ; 0
00001B42 E3F0 4000 0024          00000000   2737          STG   15,0(0,4)   ; rko
00001B48 E3F0 3068 0004          00000068   2738          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
00001B4E E3F0 4008 0024          00000008   2739          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
00001B54 E3F0 3068 0004          00000068   2740          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
00001B5A E340 F000 0024          00000000   2741          STG   4,0(0,15)
00001B60 E340 3068 0024          00000068   2742          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
                                            2743 * ***       else if (at_head)
00001B66 47F0 C1C2               00001CB2   2744          B     @L292
00001B70                                    2745          DS    0D
00001B70 000000C0                           2746 @FRAMESIZE_1444 DC F'192'
00001B74 00000000
00001B78 0000000000001828                   2747 @lit_1444_74 DC AD(rd_kafka_op_cmp_prio)
00001B80                                    2748 @L288    DS    0H
00001B80 E3F0 1014 0012          00000014   2749          LT    15,20(0,1)  ; at_head
00001B86 4780 C0D8               00001BC8   2750          BZ    @L300
                                            2751 * ***               do {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_\
                                            2752 * q)->tqh_first) != (((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link \
                                            2753 * .tqe_prev = &(rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last\
                                            2754 *  = &(rko)->rko_link .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rk\
                                            2755 * o)->rko_link .tqe_prev = &(&rkq->rkq_q)->tqh_first; } while ( 0);
00001B8A                                    2756 @L294    DS    0H
00001B8A E3F0 3060 0004          00000060   2757          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001B90 E3F0 4000 0024          00000000   2758          STG   15,0(0,4)
00001B96 B902 00FF                          2759          LTGR  15,15
00001B9A 4780 C0BE               00001BAE   2760          BE    @L297
00001B9E E3F0 3060 0004          00000060   2761          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001BA4 E340 F008 0024          00000008   2762          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
00001BAA 47F0 C0C4               00001BB4   2763          B     @L298
00001BAE                                    2764 @L297    DS    0H
00001BAE E340 3068 0024          00000068   2765          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00001BB4                                    2766 @L298    DS    0H
                                                                                                                           Page   60 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001BB4 E340 3060 0024          00000060   2767          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
00001BBA 41F0 3060               00000060   2768          LA    15,96(0,3)
00001BBE E3F0 4008 0024          00000008   2769          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
                                            2770 * ***       else
00001BC4 47F0 C1C2               00001CB2   2771          B     @L292
                                            2772 * ***           do { if(((&rkq->rkq_q)->tqh_first) == ((void *)0)) { d\
                                            2773 * o {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_q)->tqh_first) != (\
                                            2774 * ((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link .tqe_prev = &(rko)-\
                                            2775 * >rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rko_link\
                                            2776 *  .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rko)->rko_link .tqe_p\
                                            2777 * rev = &(&rkq->rkq_q)->tqh_first; } while ( 0); } else { rd_kafka_op_\
                                            2778 * t * _tmp; for ((_tmp) = ((&rkq->rkq_q)->tqh_first); (_tmp) != (((voi\
                                            2779 * d *)0)); (_tmp) = ((_tmp)->rko_link .tqe_next)) { if(rd_kafka_op_cmp\
                                            2780 * _prio(rko,_tmp) < 0) { do {  (rko)->rko_link .tqe_prev = (_tmp)->rko\
                                            2781 * _link .tqe_prev; (rko)->rko_link .tqe_next = (_tmp); *(_tmp)->rko_li\
                                            2782 * nk .tqe_prev = (rko); (_tmp)->rko_link .tqe_prev = &(rko)->rko_link \
                                            2783 * .tqe_next; } while ( 0); break; } if(!((_tmp)->rko_link .tqe_next)) \
                                            2784 * { do {  if (((rko)->rko_link .tqe_next = (_tmp)->rko_link .tqe_next)\
                                            2785 *  != (((void *)0))) (rko)->rko_link .tqe_next->rko_link .tqe_prev = &\
                                            2786 * (rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rk\
                                            2787 * o_link .tqe_next; (_tmp)->rko_link .tqe_next = (rko); (rko)->rko_lin\
                                            2788 * k .tqe_prev = &(_tmp)->rko_link .tqe_next; } while ( 0); break; } } \
                                            2789 * } } while(0);
00001BC8                                    2790 @L300    DS    0H
00001BC8 E3F0 3060 0002          00000060   2791          LTG   15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001BCE 4770 C120               00001C10   2792          BNE   @L303
00001BD2                                    2793 @L304    DS    0H
00001BD2 E3F0 3060 0004          00000060   2794          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001BD8 E3F0 4000 0024          00000000   2795          STG   15,0(0,4)
00001BDE B902 00FF                          2796          LTGR  15,15
00001BE2 4780 C106               00001BF6   2797          BE    @L307
00001BE6 E3F0 3060 0004          00000060   2798          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001BEC E340 F008 0024          00000008   2799          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
00001BF2 47F0 C10C               00001BFC   2800          B     @L308
00001BF6                                    2801 @L307    DS    0H
00001BF6 E340 3068 0024          00000068   2802          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00001BFC                                    2803 @L308    DS    0H
00001BFC E340 3060 0024          00000060   2804          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
00001C02 41F0 3060               00000060   2805          LA    15,96(0,3)
00001C06 E3F0 4008 0024          00000008   2806          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
00001C0C 47F0 C1C2               00001CB2   2807          B     @L309
00001C10                                    2808 @L303    DS    0H
00001C10 E320 3060 0004          00000060   2809          LG    2,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
00001C16 47F0 C1BA               00001CAA   2810          B     @L311
00001C1A                                    2811 @L310    DS    0H
00001C1A E340 D0B0 0024          000000B0   2812          STG   4,176(0,13)
00001C20 E320 D0B8 0024          000000B8   2813          STG   2,184(0,13)
00001C26 4110 D0B0               000000B0   2814          LA    1,176(0,13)
00001C2A E3F0 C088 0004          00001B78   2815          LG    15,@lit_1444_74 ; rd_kafka_op_cmp_prio
00001C30                                    2816 @@gen_label115 DS    0H
00001C30 05EF                               2817          BALR  14,15
00001C32                                    2818 @@gen_label116 DS    0H
                                                                                                                           Page   61 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001C32 12FF                               2819          LTR   15,15
00001C34 47B0 C170               00001C60   2820          BNL   @L314
00001C38                                    2821 @L315    DS    0H
00001C38 E3F0 2008 0004          00000008   2822          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
00001C3E E3F0 4008 0024          00000008   2823          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
00001C44 E320 4000 0024          00000000   2824          STG   2,0(0,4)    ; rko
00001C4A E3F0 2008 0004          00000008   2825          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
00001C50 E340 F000 0024          00000000   2826          STG   4,0(0,15)
00001C56 E340 2008 0024          00000008   2827          STG   4,8(0,2)    ; offset of tqe_prev in 0000055
00001C5C 47F0 C1C2               00001CB2   2828          B     @L312
00001C60                                    2829 @L314    DS    0H
00001C60 E3F0 2000 0002          00000000   2830          LTG   15,0(0,2)   ; _tmp
00001C66 4770 C1B4               00001CA4   2831          BNZ   @L318
00001C6A                                    2832 @L319    DS    0H
00001C6A E3F0 2000 0004          00000000   2833          LG    15,0(0,2)   ; _tmp
00001C70 E3F0 4000 0024          00000000   2834          STG   15,0(0,4)
00001C76 B902 00FF                          2835          LTGR  15,15
00001C7A 4780 C19E               00001C8E   2836          BE    @L322
00001C7E E3F0 4000 0004          00000000   2837          LG    15,0(0,4)   ; rko
00001C84 E340 F008 0024          00000008   2838          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
00001C8A 47F0 C1A4               00001C94   2839          B     @L323
00001C8E                                    2840 @L322    DS    0H
00001C8E E340 3068 0024          00000068   2841          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00001C94                                    2842 @L323    DS    0H
00001C94 E340 2000 0024          00000000   2843          STG   4,0(0,2)    ; _tmp
00001C9A E320 4008 0024          00000008   2844          STG   2,8(0,4)    ; offset of tqe_prev in 0000055
00001CA0 47F0 C1C2               00001CB2   2845          B     @L312
00001CA4                                    2846 @L318    DS    0H
00001CA4 E320 2000 0004          00000000   2847          LG    2,0(0,2)    ; _tmp
00001CAA                                    2848 @L311    DS    0H
00001CAA B902 00F2                          2849          LTGR  15,2
00001CAE 4770 C12A               00001C1A   2850          BNE   @L310
00001CB2                                    2851 @L312    DS    0H
00001CB2                                    2852 @L309    DS    0H
                                            2853 * ***
                                            2854 * ***       rkq->rkq_qlen++;
00001CB2                                    2855 @L299    DS    0H
00001CB2                                    2856 @L292    DS    0H
00001CB2 58F0 3070               00000070   2857          L     15,112(0,3)
00001CB6 A7FA 0001               00000001   2858          AHI   15,1
00001CBA 50F0 3070               00000070   2859          ST    15,112(0,3)
                                            2860 * ***       rkq->rkq_qsize += rko->rko_len;
00001CBE E3F0 3078 0004          00000078   2861          LG    15,120(0,3)
00001CC4 E3F0 4030 0018          00000030   2862          AGF   15,48(0,4)
00001CCA E3F0 3078 0024          00000078   2863          STG   15,120(0,3)
                                            2864 * ***   }
00001CD0                                    2865 @ret_lab_1444 DS 0H
                                            2866 * * **** Start of Epilogue
                                            2867          DCCEPIL
00001CD0                                    2868+         ds 0h                                                          01-DCCEP
                                            2869+* Epilog
00001CD0 D707 D088 D088 00000088 00000088   2870+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
                                                                                                                           Page   62 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001CD6 E3D0 D080 0004          00000080   2871+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001CDC E3C0 D090 0004          00000090   2872+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001CE2 E3B0 C018 0004          00000018   2873+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001CE8 E3C0 B010 0021          00000010   2874+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001CEE E3E0 D008 0004          00000008   2875+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001CF4 EB1C D020 0004          00000020   2876+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001CFA 078E                               2877+         bcr 8,14                if same dsab, just return              01-DCCEP
00001CFC E3F0 D010 0024          00000010   2878+         stg 15,16(0,13)         save return code                       01-DCCEP
00001D02 E300 D018 0024          00000018   2879+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001D08 E3F0 D090 0004          00000090   2880+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001D0E E3F0 F018 0004          00000018   2881+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001D14 47F0 F040               00000040   2882+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2883+* End of Epilog
                                            2884 * * **** End of Epilogue
                                            2885          DROP  12
                                            2886 *
                                            2887 *   DSECT for automatic variables in "rd_kafka_q_enq0"
                                            2888 *      (FUNCTION #1444)
                                            2889 *
00000000                00000000 000000A8   2890 @AUTO#rd_kafka_q_enq0 DSECT
00000000                                    2891          DS    XL168
                                            2892 *
00001D18                00000000 00007BF0   2893 @CODE    CSECT
                                            2894 *
                                            2895 *
                                            2896 *
                                            2897 * ....... start of rd_kafka_q_enq1
00001D18                                    2898 @LNAME1445 DS  0H
00001D18 0000000F                           2899          DC    X'0000000F'
00001D1C 99846D9281869281                   2900          DC    C'rd_kafka_q_enq1'
00001D2B 00                                 2901          DC    X'00'
                                            2902 rd_kafka_q_enq1 DCCPRLG CINDEX=1445,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1445
                                            2903          macro
                                            2904          dccextrn &m
                                            2905          gblc    &$dccext(1000)
                                            2906          gbla    &$dccexti
                                            2907          lcla    &i
                                            2908 &$dccext(&$dccexti+1) setc    '&m'
                                            2909 &i       seta    1
                                            2910 .loop    aif    (&i gt &$dccexti).around
                                            2911          aif    ('&$dccext(&i)' eq '&m').getout
                                            2912 &i       seta    &i+1
                                            2913          ago     .loop
                                            2914 .around  anop
                                            2915 &$dccexti seta &$dccexti+1
                                            2916          extrn  &m
                                            2917 .getout  anop
                                            2918          mend
00001D30                                    2919+$eye0065    ds    0d                                                    02-DCCCA
00001D30 C4C3C3                             2920+         dc cl3'DCC'                                                    02-DCCCA
00001D33 01                                 2921+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page   63 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001D34 00000000                           2922+         dc a(0)                                                        02-DCCCA
00001D38 0000000000001DA2                   2923+         dc ad(@PER_1445)                                               02-DCCCA
00001D40 00000000000000D8                   2924+         dc ad(216)                                                     02-DCCCA
00001D48 0000000000000000                   2925+         dc ad(0)                                                       02-DCCCA
00001D50 0000000000001000                   2926+         dc ad(4096)                                                    02-DCCCA
00001D58 20                                 2927+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001D59 03                                 2928+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001D5A 03                                 2929+         dc al1(3)                                                      02-DCCCA
00001D5B 08                                 2930+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001D5C 00                                 2931+         dc bl.8'00000000'                                              02-DCCCA
00001D5D 000000                             2932+         dc al3(0)                                                      02-DCCCA
00001D60 0000000000001D18                   2933+         dc ad(@LNAME1445)                                              02-DCCCA
00001D68                                    2934+         ds 0d                                                          02-DCCCA
00001D68 0000000000001D30                   2935+         dc ad($eye0065)                                                02-DCCCA
00001D70 0000000000000000                   2936+         dc ad(0)                                                       02-DCCCA
00001D78                                    2937+         ds    0d                                                       01-DCCPR
00001D78                                    2938+rd_kafka_q_enq1 ds 0d                                                   01-DCCPR
00001D78                                    2939+@REGION_1445_1 ds 0h                                                    01-DCCPR
00001D78 EBEC D008 0024          00000008   2940+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001D7E E3E0 D088 0004          00000088   2941+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001D84 E3C0 D090 0004          00000090   2942+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001D8A B904 002E                          2943+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001D8E E3B0 C018 0004          00000018   2944+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001D94 A7EB 00D8               000000D8   2945+         aghi  14,216              increase by frame size               01-DCCPR
00001D98 E3E0 C020 0021          00000020   2946+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001D9E 4720 B020               00000020   2947+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001DA2                                    2948+@PER_1445 ds   0h                                                       01-DCCPR
00001DA2 EBDE 2080 0024          00000080   2949+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001DA8 E3C0 2090 0024          00000090   2950+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001DAE B904 00D2                          2951+         lgr   13,2                set real frame pointer               01-DCCPR
00001DB2 B904 00CF                          2952+         lgr   12,15               set base reg                         01-DCCPR
                        00001D78            2953+         using @REGION_1445_1,12                                        01-DCCPR
00001DB6 B904 0071                          2954          LGR   7,1         ; ptr to parm area
                                            2955 * ******* End of Prologue
                                            2956 * *
00001DBA EB24 7000 0004          00000000   2957          LMG   2,4,0(7)    ; rkq
00001DC0 E350 7024 0012          00000024   2958          LT    5,36(0,7)   ; do_lock
                                            2959 * ***           rd_kafka_q_t *fwdq;
                                            2960 * ***
                                            2961 * ***           if (do_lock)
00001DC6 4780 C064               00001DDC   2962          BZ    @L325
                                            2963 * ***                   mtx_lock(&rkq->rkq_lock);
00001DCA E320 D0B0 0024          000000B0   2964          STG   2,176(0,13)
00001DD0 4110 D0B0               000000B0   2965          LA    1,176(0,13)
00001DD4 E3F0 C0B0 0004          00001E28   2966          LG    15,@lit_1445_76 ; mtx_lock
00001DDA                                    2967 @@gen_label122 DS    0H
00001DDA 05EF                               2968          BALR  14,15
00001DDC                                    2969 @@gen_label123 DS    0H
00001DDC                                    2970 @L324    DS    0H
                                            2971 * ***
                                            2972 * ***           do {} while (0);
00001DDC                                    2973 @L325    DS    0H
                                                                                                                           Page   64 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2974 * ***
                                            2975 * ***           if (((!(rkq->rkq_flags & 0x2)))) {
00001DDC 9102 2087      00000087 00000002   2976          TM    135(2),2
00001DE0 4770 C0F8               00001E70   2977          BNZ   @L328
                                            2978 * ***
                                            2979 * ***                   if (do_lock)
00001DE4 1255                               2980          LTR   5,5
00001DE6 4780 C084               00001DFC   2981          BZ    @L329
                                            2982 * ***                           mtx_unlock(&rkq->rkq_lock);
00001DEA E320 D0B0 0024          000000B0   2983          STG   2,176(0,13)
00001DF0 4110 D0B0               000000B0   2984          LA    1,176(0,13)
00001DF4 E3F0 C0B8 0004          00001E30   2985          LG    15,@lit_1445_77 ; mtx_unlock
00001DFA                                    2986 @@gen_label126 DS    0H
00001DFA 05EF                               2987          BALR  14,15
00001DFC                                    2988 @@gen_label127 DS    0H
00001DFC                                    2989 @L329    DS    0H
                                            2990 * ***
                                            2991 * ***                   return rd_kafka_op_reply(rko, RD_KAFKA_RESP_ER\
                                            2992 * R__DESTROY);
00001DFC E330 D0B0 0024          000000B0   2993          STG   3,176(0,13)
00001E02 E548 D0B8 FF3B          000000B8   2994          MVGHI 184(13),-197
00001E08 4110 D0B0               000000B0   2995          LA    1,176(0,13)
00001E0C E3F0 C0C0 0004          00001E38   2996          LG    15,@lit_1445_78 ; rd_kafka_op_reply
00001E12                                    2997 @@gen_label128 DS    0H
00001E12 05EF                               2998          BALR  14,15
00001E14                                    2999 @@gen_label129 DS    0H
00001E14 B914 00FF                          3000          LGFR  15,15
00001E18 47F0 C212               00001F8A   3001          B     @ret_lab_1445
00001E20                                    3002          DS    0D
00001E20 000000D8                           3003 @FRAMESIZE_1445 DC F'216'
00001E24 00000000
00001E28 0000000000000000                   3004 @lit_1445_76 DC AD(mtx_lock)
00001E30 0000000000000000                   3005 @lit_1445_77 DC AD(mtx_unlock)
00001E38 0000000000000000                   3006 @lit_1445_78 DC AD(rd_kafka_op_reply)
00001E40 0000000000001510                   3007 @lit_1445_79 DC AD(rd_kafka_q_fwd_get)
00001E48 0000000000001AF0                   3008 @lit_1445_80 DC AD(rd_kafka_q_enq0)
00001E50 0000000000000000                   3009 @lit_1445_81 DC AD(cnd_signal)
00001E58 0000000000001678                   3010 @lit_1445_82 DC AD(rd_kafka_q_io_event)
00001E60 0000000000001D78                   3011 @lit_1445_85 DC AD(rd_kafka_q_enq1)
00001E68 0000000000001140                   3012 @lit_1445_86 DC AD(rd_kafka_q_destroy0)
                                            3013 * ***           }
00001E70                                    3014 @L328    DS    0H
                                            3015 * ***
                                            3016 * ***           if (!(fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
00001E70 E320 D0B0 0024          000000B0   3017          STG   2,176(0,13)
00001E76 D707 D0B8 D0B8 000000B8 000000B8   3018          XC    184(8,13),184(13)
00001E7C 4110 D0B0               000000B0   3019          LA    1,176(0,13)
00001E80 E3F0 C0C8 0004          00001E40   3020          LG    15,@lit_1445_79 ; rd_kafka_q_fwd_get
00001E86                                    3021 @@gen_label130 DS    0H
00001E86 05EF                               3022          BALR  14,15
00001E88                                    3023 @@gen_label131 DS    0H
00001E88 B904 006F                          3024          LGR   6,15
                                                                                                                           Page   65 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001E8C B902 00F6                          3025          LTGR  15,6
00001E90 4770 C1B4               00001F2C   3026          BNZ   @L330
                                            3027 * ***                   if (!rko->rko_serve && orig_destq->rkq_serve) \
                                            3028 * {
00001E94 E3F0 3050 0002          00000050   3029          LTG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
00001E9A 4770 C148               00001EC0   3030          BNZ   @L331
00001E9E E3F0 4098 0002          00000098   3031          LTG   15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
00001EA4 4780 C148               00001EC0   3032          BZ    @L331
                                            3033 * ***
                                            3034 * ***
                                            3035 * ***                           rko->rko_serve = orig_destq->rkq_serve\
                                            3036 * ;
00001EA8 E3F0 4098 0004          00000098   3037          LG    15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
00001EAE E3F0 3050 0024          00000050   3038          STG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
                                            3039 * ***                           rko->rko_serve_opaque = orig_destq->rk\
                                            3040 * q_opaque;
00001EB4 E3F0 40A0 0004          000000A0   3041          LG    15,160(0,4) ; offset of rkq_opaque in rd_kafka_q_s
00001EBA E3F0 3058 0024          00000058   3042          STG   15,88(0,3)  ; offset of rko_serve_opaque in rd_kafka_op_*
                                                                s
                                            3043 * ***                   }
00001EC0                                    3044 @L331    DS    0H
                                            3045 * ***
                                            3046 * ***                   rd_kafka_q_enq0(rkq, rko, at_head);
00001EC0 EB23 D0B0 0024          000000B0   3047          STMG  2,3,176(13)
00001EC6 E3F0 701C 0014          0000001C   3048          LGF   15,28(0,7)  ; at_head
00001ECC E3F0 D0C0 0024          000000C0   3049          STG   15,192(0,13)
00001ED2 4110 D0B0               000000B0   3050          LA    1,176(0,13)
00001ED6 E3F0 C0D0 0004          00001E48   3051          LG    15,@lit_1445_80 ; rd_kafka_q_enq0
00001EDC                                    3052 @@gen_label135 DS    0H
00001EDC 05EF                               3053          BALR  14,15
00001EDE                                    3054 @@gen_label136 DS    0H
                                            3055 * ***                   cnd_signal(&rkq->rkq_cond);
00001EDE 41F0 2028               00000028   3056          LA    15,40(0,2)
00001EE2 E3F0 D0B0 0024          000000B0   3057          STG   15,176(0,13)
00001EE8 4110 D0B0               000000B0   3058          LA    1,176(0,13)
00001EEC E3F0 C0D8 0004          00001E50   3059          LG    15,@lit_1445_81 ; cnd_signal
00001EF2                                    3060 @@gen_label137 DS    0H
00001EF2 05EF                               3061          BALR  14,15
00001EF4                                    3062 @@gen_label138 DS    0H
                                            3063 * ***                   if (rkq->rkq_qlen == 1)
00001EF4 E55C 2070 0001          00000070   3064          CHSI  112(2),1
00001EFA 4770 C198               00001F10   3065          BNE   @L332
                                            3066 * ***                           rd_kafka_q_io_event(rkq);
00001EFE E320 D0B0 0024          000000B0   3067          STG   2,176(0,13)
00001F04 4110 D0B0               000000B0   3068          LA    1,176(0,13)
00001F08 E3F0 C0E0 0004          00001E58   3069          LG    15,@lit_1445_82 ; rd_kafka_q_io_event
00001F0E                                    3070 @@gen_label140 DS    0H
00001F0E 05EF                               3071          BALR  14,15
00001F10                                    3072 @@gen_label141 DS    0H
00001F10                                    3073 @L332    DS    0H
                                            3074 * ***
                                            3075 * ***                   if (do_lock)
                                                                                                                           Page   66 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001F10 1255                               3076          LTR   5,5
00001F12 4780 C20E               00001F86   3077          BZ    @L334
                                            3078 * ***                           mtx_unlock(&rkq->rkq_lock);
00001F16 E320 D0B0 0024          000000B0   3079          STG   2,176(0,13)
00001F1C 4110 D0B0               000000B0   3080          LA    1,176(0,13)
00001F20 E3F0 C0B8 0004          00001E30   3081          LG    15,@lit_1445_77 ; mtx_unlock
00001F26                                    3082 @@gen_label143 DS    0H
00001F26 05EF                               3083          BALR  14,15
00001F28                                    3084 @@gen_label144 DS    0H
00001F28                                    3085 @L333    DS    0H
                                            3086 * ***           } else {
00001F28 47F0 C20E               00001F86   3087          B     @L334
00001F2C                                    3088 @L330    DS    0H
                                            3089 * ***                   if (do_lock)
00001F2C 1255                               3090          LTR   5,5
00001F2E 4780 C1CC               00001F44   3091          BZ    @L335
                                            3092 * ***                           mtx_unlock(&rkq->rkq_lock);
00001F32 E320 D0B0 0024          000000B0   3093          STG   2,176(0,13)
00001F38 4110 D0B0               000000B0   3094          LA    1,176(0,13)
00001F3C E3F0 C0B8 0004          00001E30   3095          LG    15,@lit_1445_77 ; mtx_unlock
00001F42                                    3096 @@gen_label146 DS    0H
00001F42 05EF                               3097          BALR  14,15
00001F44                                    3098 @@gen_label147 DS    0H
00001F44                                    3099 @L335    DS    0H
                                            3100 * ***                   rd_kafka_q_enq1(fwdq, rko, orig_destq, at_head\
                                            3101 * , 1);
00001F44 E360 D0B0 0024          000000B0   3102          STG   6,176(0,13)
00001F4A EB34 D0B8 0024          000000B8   3103          STMG  3,4,184(13)
00001F50 E3F0 701C 0014          0000001C   3104          LGF   15,28(0,7)  ; at_head
00001F56 E3F0 D0C8 0024          000000C8   3105          STG   15,200(0,13)
00001F5C E548 D0D0 0001          000000D0   3106          MVGHI 208(13),1
00001F62 4110 D0B0               000000B0   3107          LA    1,176(0,13)
00001F66 E3F0 C0E8 0004          00001E60   3108          LG    15,@lit_1445_85 ; rd_kafka_q_enq1
00001F6C                                    3109 @@gen_label148 DS    0H
00001F6C 05EF                               3110          BALR  14,15
00001F6E                                    3111 @@gen_label149 DS    0H
                                            3112 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
00001F6E E360 D0B0 0024          000000B0   3113          STG   6,176(0,13)
00001F74 D707 D0B8 D0B8 000000B8 000000B8   3114          XC    184(8,13),184(13)
00001F7A 4110 D0B0               000000B0   3115          LA    1,176(0,13)
00001F7E E3F0 C0F0 0004          00001E68   3116          LG    15,@lit_1445_86 ; rd_kafka_q_destroy0
00001F84                                    3117 @@gen_label150 DS    0H
00001F84 05EF                               3118          BALR  14,15
00001F86                                    3119 @@gen_label151 DS    0H
                                            3120 * ***           }
00001F86                                    3121 @L334    DS    0H
                                            3122 * ***
                                            3123 * ***           return 1;
00001F86 A7F9 0001               00000001   3124          LGHI  15,1        ; 1
                                            3125 * ***   }
00001F8A                                    3126 @ret_lab_1445 DS 0H
                                            3127 * * **** Start of Epilogue
                                                                                                                           Page   67 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3128          DCCEPIL
00001F8A                                    3129+         ds 0h                                                          01-DCCEP
                                            3130+* Epilog
00001F8A D707 D088 D088 00000088 00000088   3131+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001F90 E3D0 D080 0004          00000080   3132+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001F96 E3C0 D090 0004          00000090   3133+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001F9C E3B0 C018 0004          00000018   3134+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001FA2 E3C0 B010 0021          00000010   3135+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001FA8 E3E0 D008 0004          00000008   3136+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001FAE EB1C D020 0004          00000020   3137+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001FB4 078E                               3138+         bcr 8,14                if same dsab, just return              01-DCCEP
00001FB6 E3F0 D010 0024          00000010   3139+         stg 15,16(0,13)         save return code                       01-DCCEP
00001FBC E300 D018 0024          00000018   3140+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001FC2 E3F0 D090 0004          00000090   3141+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001FC8 E3F0 F018 0004          00000018   3142+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001FCE 47F0 F040               00000040   3143+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3144+* End of Epilog
                                            3145 * * **** End of Epilogue
                                            3146          DROP  12
                                            3147 *
                                            3148 *   DSECT for automatic variables in "rd_kafka_q_enq1"
                                            3149 *      (FUNCTION #1445)
                                            3150 *
00000000                00000000 000000A8   3151 @AUTO#rd_kafka_q_enq1 DSECT
00000000                                    3152          DS    XL168
                                            3153 *
00001FD2                00000000 00007BF0   3154 @CODE    CSECT
                                            3155 *
                                            3156 *
                                            3157 *
                                            3158 * ....... start of rd_kafka_q_enq
00001FD2                                    3159 @LNAME1446 DS  0H
00001FD2 0000000E                           3160          DC    X'0000000E'
00001FD6 99846D9281869281                   3161          DC    C'rd_kafka_q_enq'
00001FE4 00                                 3162          DC    X'00'
                                            3163 rd_kafka_q_enq DCCPRLG CINDEX=1446,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1446
                                            3164          macro
                                            3165          dccextrn &m
                                            3166          gblc    &$dccext(1000)
                                            3167          gbla    &$dccexti
                                            3168          lcla    &i
                                            3169 &$dccext(&$dccexti+1) setc    '&m'
                                            3170 &i       seta    1
                                            3171 .loop    aif    (&i gt &$dccexti).around
                                            3172          aif    ('&$dccext(&i)' eq '&m').getout
                                            3173 &i       seta    &i+1
                                            3174          ago     .loop
                                            3175 .around  anop
                                            3176 &$dccexti seta &$dccexti+1
                                            3177          extrn  &m
                                            3178 .getout  anop
                                                                                                                           Page   68 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3179          mend
00001FE8                                    3180+$eye0068    ds    0d                                                    02-DCCCA
00001FE8 C4C3C3                             3181+         dc cl3'DCC'                                                    02-DCCCA
00001FEB 01                                 3182+         dc xl1'01' format one                                          02-DCCCA
00001FEC 00000000                           3183+         dc a(0)                                                        02-DCCCA
00001FF0 000000000000205A                   3184+         dc ad(@PER_1446)                                               02-DCCCA
00001FF8 00000000000000D0                   3185+         dc ad(208)                                                     02-DCCCA
00002000 0000000000000000                   3186+         dc ad(0)                                                       02-DCCCA
00002008 0000000000001000                   3187+         dc ad(4096)                                                    02-DCCCA
00002010 20                                 3188+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002011 03                                 3189+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002012 03                                 3190+         dc al1(3)                                                      02-DCCCA
00002013 08                                 3191+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002014 00                                 3192+         dc bl.8'00000000'                                              02-DCCCA
00002015 000000                             3193+         dc al3(0)                                                      02-DCCCA
00002018 0000000000001FD2                   3194+         dc ad(@LNAME1446)                                              02-DCCCA
00002020                                    3195+         ds 0d                                                          02-DCCCA
00002020 0000000000001FE8                   3196+         dc ad($eye0068)                                                02-DCCCA
00002028 0000000000000000                   3197+         dc ad(0)                                                       02-DCCCA
00002030                                    3198+         ds    0d                                                       01-DCCPR
00002030                                    3199+rd_kafka_q_enq ds 0d                                                    01-DCCPR
00002030                                    3200+@REGION_1446_1 ds 0h                                                    01-DCCPR
00002030 EBEC D008 0024          00000008   3201+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002036 E3E0 D088 0004          00000088   3202+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000203C E3C0 D090 0004          00000090   3203+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002042 B904 002E                          3204+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002046 E3B0 C018 0004          00000018   3205+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000204C A7EB 00D0               000000D0   3206+         aghi  14,208              increase by frame size               01-DCCPR
00002050 E3E0 C020 0021          00000020   3207+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002056 4720 B020               00000020   3208+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000205A                                    3209+@PER_1446 ds   0h                                                       01-DCCPR
0000205A EBDE 2080 0024          00000080   3210+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002060 E3C0 2090 0024          00000090   3211+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002066 B904 00D2                          3212+         lgr   13,2                set real frame pointer               01-DCCPR
0000206A B904 00CF                          3213+         lgr   12,15               set base reg                         01-DCCPR
                        00002030            3214+         using @REGION_1446_1,12                                        01-DCCPR
                                            3215 * ******* End of Prologue
                                            3216 * *
                                            3217 * ***           return rd_kafka_q_enq1(rkq, rko, rkq, 0, 1);
0000206E E3F0 1000 0004          00000000   3218          LG    15,0(0,1)   ; rkq
00002074 E3F0 D0A8 0024          000000A8   3219          STG   15,168(0,13)
0000207A E3F0 1008 0004          00000008   3220          LG    15,8(0,1)   ; rko
00002080 E3F0 D0B0 0024          000000B0   3221          STG   15,176(0,13)
00002086 E3F0 1000 0004          00000000   3222          LG    15,0(0,1)   ; rkq
0000208C E3F0 D0B8 0024          000000B8   3223          STG   15,184(0,13)
00002092 D707 D0C0 D0C0 000000C0 000000C0   3224          XC    192(8,13),192(13)
00002098 E548 D0C8 0001          000000C8   3225          MVGHI 200(13),1
0000209E 4110 D0A8               000000A8   3226          LA    1,168(0,13)
000020A2 E3F0 C0D0 0004          00002100   3227          LG    15,@lit_1446_89 ; rd_kafka_q_enq1
000020A8                                    3228 @@gen_label152 DS    0H
000020A8 05EF                               3229          BALR  14,15
000020AA                                    3230 @@gen_label153 DS    0H
                                                                                                                           Page   69 
  Active Usings: @REGION_1446_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000020AA B914 00FF                          3231          LGFR  15,15
                                            3232 * ***   }
                                            3233 * * **** Start of Epilogue
                                            3234          DCCEPIL
000020AE                                    3235+         ds 0h                                                          01-DCCEP
                                            3236+* Epilog
000020AE D707 D088 D088 00000088 00000088   3237+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000020B4 E3D0 D080 0004          00000080   3238+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000020BA E3C0 D090 0004          00000090   3239+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000020C0 E3B0 C018 0004          00000018   3240+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000020C6 E3C0 B010 0021          00000010   3241+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000020CC E3E0 D008 0004          00000008   3242+         lg  14,8(0,13)          load up return address                 01-DCCEP
000020D2 EB1C D020 0004          00000020   3243+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000020D8 078E                               3244+         bcr 8,14                if same dsab, just return              01-DCCEP
000020DA E3F0 D010 0024          00000010   3245+         stg 15,16(0,13)         save return code                       01-DCCEP
000020E0 E300 D018 0024          00000018   3246+         stg 0,24(0,13)          save more return code                  01-DCCEP
000020E6 E3F0 D090 0004          00000090   3247+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000020EC E3F0 F018 0004          00000018   3248+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000020F2 47F0 F040               00000040   3249+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3250+* End of Epilog
                                            3251 * * **** End of Epilogue
000020F8                                    3252          DS    0D
000020F8 000000D0                           3253 @FRAMESIZE_1446 DC F'208'
000020FC 00000000
00002100 0000000000001D78                   3254 @lit_1446_89 DC AD(rd_kafka_q_enq1)
                                            3255          DROP  12
                                            3256 *
                                            3257 *   DSECT for automatic variables in "rd_kafka_q_enq"
                                            3258 *      (FUNCTION #1446)
                                            3259 *
00000000                00000000 000000A8   3260 @AUTO#rd_kafka_q_enq DSECT
00000000                                    3261          DS    XL168
                                            3262 *
00002108                00000000 00007BF0   3263 @CODE    CSECT
                                            3264 *
                                            3265 *
                                            3266 *
                                            3267 * ....... start of rd_kafka_q_deq0
00002108                                    3268 @LNAME1448 DS  0H
00002108 0000000F                           3269          DC    X'0000000F'
0000210C 99846D9281869281                   3270          DC    C'rd_kafka_q_deq0'
0000211B 00                                 3271          DC    X'00'
                                            3272 rd_kafka_q_deq0 DCCPRLG CINDEX=1448,BASER=12,FRAME=168,SAVEAREA=NO,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1448
                                            3273          macro
                                            3274          dccextrn &m
                                            3275          gblc    &$dccext(1000)
                                            3276          gbla    &$dccexti
                                            3277          lcla    &i
                                            3278 &$dccext(&$dccexti+1) setc    '&m'
                                            3279 &i       seta    1
                                            3280 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   70 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3281          aif    ('&$dccext(&i)' eq '&m').getout
                                            3282 &i       seta    &i+1
                                            3283          ago     .loop
                                            3284 .around  anop
                                            3285 &$dccexti seta &$dccexti+1
                                            3286          extrn  &m
                                            3287 .getout  anop
                                            3288          mend
00002120                                    3289+$eye0071    ds    0d                                                    02-DCCCA
00002120 C4C3C3                             3290+         dc cl3'DCC'                                                    02-DCCCA
00002123 01                                 3291+         dc xl1'01' format one                                          02-DCCCA
00002124 00000000                           3292+         dc a(0)                                                        02-DCCCA
00002128 0000000000000000                   3293+         dc ad(0)                                                       02-DCCCA
00002130 00000000000000A8                   3294+         dc ad(168)                                                     02-DCCCA
00002138 0000000000000000                   3295+         dc ad(0)                                                       02-DCCCA
00002140 0000000000001000                   3296+         dc ad(4096)                                                    02-DCCCA
00002148 20                                 3297+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002149 03                                 3298+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000214A 03                                 3299+         dc al1(3)                                                      02-DCCCA
0000214B 08                                 3300+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000214C 00                                 3301+         dc bl.8'00000000'                                              02-DCCCA
0000214D 000000                             3302+         dc al3(0)                                                      02-DCCCA
00002150 0000000000002108                   3303+         dc ad(@LNAME1448)                                              02-DCCCA
00002158                                    3304+         ds 0d                                                          02-DCCCA
00002158 0000000000002120                   3305+         dc ad($eye0071)                                                02-DCCCA
00002160 0000000000000000                   3306+         dc ad(0)                                                       02-DCCCA
00002168                                    3307+         ds    0d                                                       01-DCCPR
00002168                                    3308+rd_kafka_q_deq0 ds 0d                                                   01-DCCPR
00002168                                    3309+@REGION_1448_1 ds 0h                                                    01-DCCPR
00002168 EBEC D008 0024          00000008   3310+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000216E B904 00CF                          3311+         lgr   12,15               set base reg                         01-DCCPR
                        00002168            3312+         using @REGION_1448_1,12                                        01-DCCPR
                                            3313 * ******* End of Prologue
                                            3314 * *
                                            3315 * ***      do {} while (0);
00002172 E3F0 1000 0004          00000000   3316          LG    15,0(0,1)   ; rkq
00002178 E310 1008 0004          00000008   3317          LG    1,8(0,1)    ; rko
0000217E                                    3318 @L336    DS    0H
                                            3319 * ***
                                            3320 * ***
                                            3321 * ***           do {   if (((rko)->rko_link .tqe_next) != (((void *)0)\
                                            3322 * )) (rko)->rko_link .tqe_next->rko_link .tqe_prev = (rko)->rko_link .\
                                            3323 * tqe_prev; else (&rkq->rkq_q)->tqh_last = (rko)->rko_link .tqe_prev; \
                                            3324 * *(rko)->rko_link .tqe_prev = (rko)->rko_link .tqe_next; ; } while ( \
                                            3325 * 0);
0000217E                                    3326 @L339    DS    0H
0000217E E320 1000 0002          00000000   3327          LTG   2,0(0,1)    ; rko
00002184 4780 C030               00002198   3328          BE    @L342
00002188 EB23 1000 0004          00000000   3329          LMG   2,3,0(1)    ; rko
0000218E E330 2008 0024          00000008   3330          STG   3,8(0,2)    ; offset of tqe_prev in 0000055
00002194 47F0 C03C               000021A4   3331          B     @L343
00002198                                    3332 @L342    DS    0H
                                                                                                                           Page   71 
  Active Usings: @REGION_1448_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002198 E320 1008 0004          00000008   3333          LG    2,8(0,1)    ; offset of tqe_prev in 0000055
0000219E E320 F068 0024          00000068   3334          STG   2,104(0,15) ; offset of tqh_last in rd_kafka_op_tailq
000021A4                                    3335 @L343    DS    0H
000021A4 E320 1008 0004          00000008   3336          LG    2,8(0,1)    ; offset of tqe_prev in 0000055
000021AA E330 1000 0004          00000000   3337          LG    3,0(0,1)    ; rko
000021B0 E330 2000 0024          00000000   3338          STG   3,0(0,2)
                                            3339 * ***           rkq->rkq_qlen--;
000021B6 5820 F070               00000070   3340          L     2,112(0,15)
000021BA A72A FFFF               0000FFFF   3341          AHI   2,-1
000021BE 5020 F070               00000070   3342          ST    2,112(0,15)
                                            3343 * ***           rkq->rkq_qsize -= rko->rko_len;
000021C2 E320 F078 0004          00000078   3344          LG    2,120(0,15)
000021C8 E320 1030 0019          00000030   3345          SGF   2,48(0,1)
000021CE E320 F078 0024          00000078   3346          STG   2,120(0,15)
                                            3347 * ***   }
000021D4                                    3348 @ret_lab_1448 DS 0H
                                            3349 * * **** Start of Epilogue
                                            3350          DCCEPIL
000021D4                                    3351+         ds 0h                                                          01-DCCEP
                                            3352+* Epilog
                                            3353+* Epilog
000021D4 E3E0 D008 0004          00000008   3354+         lg    14,8(,13) restore the reg                                01-DCCEP
000021DA EB1C D020 0004          00000020   3355+         lmg   1,12,32(13)                                              01-DCCEP
000021E0 07FE                               3356+         br   14                                                        01-DCCEP
                                            3357+* End of Epilog
                                            3358 * * **** End of Epilogue
                                            3359          DROP  12
                                            3360 *
                                            3361 *   DSECT for automatic variables in "rd_kafka_q_deq0"
                                            3362 *      (FUNCTION #1448)
                                            3363 *
00000000                00000000 000000A8   3364 @AUTO#rd_kafka_q_deq0 DSECT
00000000                                    3365          DS    XL168
                                            3366 *
000021E2                00000000 00007BF0   3367 @CODE    CSECT
                                            3368 *
                                            3369 *
                                            3370 *
                                            3371 * ....... start of rd_kafka_q_mark_served
000021E2                                    3372 @LNAME1449 DS  0H
000021E2 00000016                           3373          DC    X'00000016'
000021E6 99846D9281869281                   3374          DC    C'rd_kafka_q_mark_served'
000021FC 00                                 3375          DC    X'00'
                                            3376 rd_kafka_q_mark_served DCCPRLG CINDEX=1449,BASER=12,FRAME=168,SAVEAREA=*
                                                                NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1449
                                            3377          macro
                                            3378          dccextrn &m
                                            3379          gblc    &$dccext(1000)
                                            3380          gbla    &$dccexti
                                            3381          lcla    &i
                                            3382 &$dccext(&$dccexti+1) setc    '&m'
                                            3383 &i       seta    1
                                                                                                                           Page   72 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3384 .loop    aif    (&i gt &$dccexti).around
                                            3385          aif    ('&$dccext(&i)' eq '&m').getout
                                            3386 &i       seta    &i+1
                                            3387          ago     .loop
                                            3388 .around  anop
                                            3389 &$dccexti seta &$dccexti+1
                                            3390          extrn  &m
                                            3391 .getout  anop
                                            3392          mend
00002200                                    3393+$eye0074    ds    0d                                                    02-DCCCA
00002200 C4C3C3                             3394+         dc cl3'DCC'                                                    02-DCCCA
00002203 01                                 3395+         dc xl1'01' format one                                          02-DCCCA
00002204 00000000                           3396+         dc a(0)                                                        02-DCCCA
00002208 0000000000000000                   3397+         dc ad(0)                                                       02-DCCCA
00002210 00000000000000A8                   3398+         dc ad(168)                                                     02-DCCCA
00002218 0000000000000000                   3399+         dc ad(0)                                                       02-DCCCA
00002220 0000000000001000                   3400+         dc ad(4096)                                                    02-DCCCA
00002228 20                                 3401+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002229 03                                 3402+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000222A 03                                 3403+         dc al1(3)                                                      02-DCCCA
0000222B 08                                 3404+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000222C 00                                 3405+         dc bl.8'00000000'                                              02-DCCCA
0000222D 000000                             3406+         dc al3(0)                                                      02-DCCCA
00002230 00000000000021E2                   3407+         dc ad(@LNAME1449)                                              02-DCCCA
00002238                                    3408+         ds 0d                                                          02-DCCCA
00002238 0000000000002200                   3409+         dc ad($eye0074)                                                02-DCCCA
00002240 0000000000000000                   3410+         dc ad(0)                                                       02-DCCCA
00002248                                    3411+         ds    0d                                                       01-DCCPR
00002248                                    3412+rd_kafka_q_mark_served ds 0d                                            01-DCCPR
00002248                                    3413+@REGION_1449_1 ds 0h                                                    01-DCCPR
00002248 EBEC D008 0024          00000008   3414+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000224E B904 00CF                          3415+         lgr   12,15               set base reg                         01-DCCPR
                        00002248            3416+         using @REGION_1449_1,12                                        01-DCCPR
                                            3417 * ******* End of Prologue
                                            3418 * *
                                            3419 * ***           if (rkq->rkq_qio)
00002252 E3F0 1000 0004          00000000   3420          LG    15,0(0,1)   ; rkq
00002258 E310 F090 0002          00000090   3421          LTG   1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000225E 4780 C024               0000226C   3422          BZ    @ret_lab_1449
                                            3423 * ***                   rkq->rkq_qio->sent = 0;
00002262 E3F0 F090 0004          00000090   3424          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00002268 9200 F018      00000018 00000000   3425          MVI   24(15),0    ; offset of sent in rd_kafka_q_io
0000226C                                    3426 @L344    DS    0H
                                            3427 * ***   }
0000226C                                    3428 @ret_lab_1449 DS 0H
                                            3429 * * **** Start of Epilogue
                                            3430          DCCEPIL
0000226C                                    3431+         ds 0h                                                          01-DCCEP
                                            3432+* Epilog
                                            3433+* Epilog
0000226C E3E0 D008 0004          00000008   3434+         lg    14,8(,13) restore the reg                                01-DCCEP
00002272 EB1C D020 0004          00000020   3435+         lmg   1,12,32(13)                                              01-DCCEP
                                                                                                                           Page   73 
  Active Usings: @REGION_1449_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002278 07FE                               3436+         br   14                                                        01-DCCEP
                                            3437+* End of Epilog
                                            3438 * * **** End of Epilogue
                                            3439          DROP  12
                                            3440 *
                                            3441 *   DSECT for automatic variables in "rd_kafka_q_mark_served"
                                            3442 *      (FUNCTION #1449)
                                            3443 *
00000000                00000000 000000A8   3444 @AUTO#rd_kafka_q_mark_served DSECT
00000000                                    3445          DS    XL168
                                            3446 *
0000227A                00000000 00007BF0   3447 @CODE    CSECT
                                            3448 *
                                            3449 *
                                            3450 *
                                            3451 * ....... start of rd_kafka_q_concat0
0000227A                                    3452 @LNAME1450 DS  0H
0000227A 00000012                           3453          DC    X'00000012'
0000227E 99846D9281869281                   3454          DC    C'rd_kafka_q_concat0'
00002290 00                                 3455          DC    X'00'
                                            3456 rd_kafka_q_concat0 DCCPRLG CINDEX=1450,BASER=12,FRAME=200,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1450
                                            3457          macro
                                            3458          dccextrn &m
                                            3459          gblc    &$dccext(1000)
                                            3460          gbla    &$dccexti
                                            3461          lcla    &i
                                            3462 &$dccext(&$dccexti+1) setc    '&m'
                                            3463 &i       seta    1
                                            3464 .loop    aif    (&i gt &$dccexti).around
                                            3465          aif    ('&$dccext(&i)' eq '&m').getout
                                            3466 &i       seta    &i+1
                                            3467          ago     .loop
                                            3468 .around  anop
                                            3469 &$dccexti seta &$dccexti+1
                                            3470          extrn  &m
                                            3471 .getout  anop
                                            3472          mend
00002298                                    3473+$eye0077    ds    0d                                                    02-DCCCA
00002298 C4C3C3                             3474+         dc cl3'DCC'                                                    02-DCCCA
0000229B 01                                 3475+         dc xl1'01' format one                                          02-DCCCA
0000229C 00000000                           3476+         dc a(0)                                                        02-DCCCA
000022A0 000000000000230A                   3477+         dc ad(@PER_1450)                                               02-DCCCA
000022A8 00000000000000C8                   3478+         dc ad(200)                                                     02-DCCCA
000022B0 0000000000000000                   3479+         dc ad(0)                                                       02-DCCCA
000022B8 0000000000001000                   3480+         dc ad(4096)                                                    02-DCCCA
000022C0 20                                 3481+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000022C1 03                                 3482+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000022C2 03                                 3483+         dc al1(3)                                                      02-DCCCA
000022C3 08                                 3484+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000022C4 00                                 3485+         dc bl.8'00000000'                                              02-DCCCA
000022C5 000000                             3486+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   74 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000022C8 000000000000227A                   3487+         dc ad(@LNAME1450)                                              02-DCCCA
000022D0                                    3488+         ds 0d                                                          02-DCCCA
000022D0 0000000000002298                   3489+         dc ad($eye0077)                                                02-DCCCA
000022D8 0000000000000000                   3490+         dc ad(0)                                                       02-DCCCA
000022E0                                    3491+         ds    0d                                                       01-DCCPR
000022E0                                    3492+rd_kafka_q_concat0 ds 0d                                                01-DCCPR
000022E0                                    3493+@REGION_1450_1 ds 0h                                                    01-DCCPR
000022E0 EBEC D008 0024          00000008   3494+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000022E6 E3E0 D088 0004          00000088   3495+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000022EC E3C0 D090 0004          00000090   3496+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000022F2 B904 002E                          3497+         lgr   2,14                copy addr of our savearea            01-DCCPR
000022F6 E3B0 C018 0004          00000018   3498+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000022FC A7EB 00C8               000000C8   3499+         aghi  14,200              increase by frame size               01-DCCPR
00002300 E3E0 C020 0021          00000020   3500+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002306 4720 B020               00000020   3501+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000230A                                    3502+@PER_1450 ds   0h                                                       01-DCCPR
0000230A EBDE 2080 0024          00000080   3503+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002310 E3C0 2090 0024          00000090   3504+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002316 B904 00D2                          3505+         lgr   13,2                set real frame pointer               01-DCCPR
0000231A B904 00CF                          3506+         lgr   12,15               set base reg                         01-DCCPR
                        000022E0            3507+         using @REGION_1450_1,12                                        01-DCCPR
                                            3508 * ******* End of Prologue
                                            3509 * *
                                            3510 * ***      int r = 0;
0000231E E350 1000 0004          00000000   3511          LG    5,0(0,1)    ; rkq
00002324 E320 1008 0004          00000008   3512          LG    2,8(0,1)    ; srcq
0000232A 5860 1014               00000014   3513          L     6,20(0,1)   ; do_lock
0000232E A748 0000               00000000   3514          LHI   4,0         ; 0
                                            3515 * ***
                                            3516 * ***      while (srcq->rkq_fwdq)
00002332 47F0 C0A6               00002386   3517          B     @L348
00002338                                    3518          DS    0D
00002338 000000C8                           3519 @FRAMESIZE_1450 DC F'200'
0000233C 00000000
00002340 0000000000000000                   3520 @lit_1450_93 DC AD(mtx_lock)
00002348 0000000000000000                   3521 @lit_1450_94 DC AD(mtx_unlock)
00002350 0000000000001828                   3522 @lit_1450_96 DC AD(rd_kafka_op_cmp_prio)
00002358 0000000000001678                   3523 @lit_1450_98 DC AD(rd_kafka_q_io_event)
00002360 0000000000000000                   3524 @lit_1450_99 DC AD(cnd_signal)
00002368 0000000000002248                   3525 @lit_1450_100 DC AD(rd_kafka_q_mark_served)
00002370 0000000000001470                   3526 @lit_1450_101 DC AD(rd_kafka_q_reset)
00002378 00000000000022E0                   3527 @lit_1450_103 DC AD(rd_kafka_q_concat0)
00002380                                    3528 @L347    DS    0H
                                            3529 * ***         srcq = srcq->rkq_fwdq;
00002380 E320 2058 0004          00000058   3530          LG    2,88(0,2)   ; offset of rkq_fwdq in rd_kafka_q_s
00002386                                    3531 @L348    DS    0H
00002386 E3F0 2058 0002          00000058   3532          LTG   15,88(0,2)  ; offset of rkq_fwdq in rd_kafka_q_s
0000238C 4770 C0A0               00002380   3533          BNZ   @L347
                                            3534 * ***      if (((srcq->rkq_qlen == 0)))
00002390 E55C 2070 0000          00000070   3535          CHSI  112(2),0
00002396 4770 C0C2               000023A2   3536          BNE   @L349
                                            3537 * ***         return 0;
                                                                                                                           Page   75 
  Active Usings: @REGION_1450_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000239A A7F9 0000               00000000   3538          LGHI  15,0        ; 0
0000239E 47F0 C382               00002662   3539          B     @ret_lab_1450
000023A2                                    3540 @L349    DS    0H
                                            3541 * ***
                                            3542 * ***      if (do_lock)
000023A2 1266                               3543          LTR   6,6
000023A4 4780 C0DA               000023BA   3544          BZ    @L350
                                            3545 * ***         mtx_lock(&rkq->rkq_lock);
000023A8 E350 D0B0 0024          000000B0   3546          STG   5,176(0,13)
000023AE 4110 D0B0               000000B0   3547          LA    1,176(0,13)
000023B2 E3F0 C060 0004          00002340   3548          LG    15,@lit_1450_93 ; mtx_lock
000023B8                                    3549 @@gen_label159 DS    0H
000023B8 05EF                               3550          BALR  14,15
000023BA                                    3551 @@gen_label160 DS    0H
000023BA                                    3552 @L350    DS    0H
                                            3553 * ***      if (!rkq->rkq_fwdq) {
000023BA E3F0 5058 0002          00000058   3554          LTG   15,88(0,5)  ; offset of rkq_fwdq in rd_kafka_q_s
000023C0 4770 C316               000025F6   3555          BNZ   @L351
                                            3556 * ***                   rd_kafka_op_t *rko;
                                            3557 * ***
                                            3558 * ***                   do {} while (0);
000023C4                                    3559 @L352    DS    0H
                                            3560 * ***
                                            3561 * ***         if (((!(rkq->rkq_flags & 0x2)))) {
000023C4 9102 5087      00000087 00000002   3562          TM    135(5),2
000023C8 4770 C234               00002514   3563          BNZ   @L360
                                            3564 * ***                           if (do_lock)
000023CC 1266                               3565          LTR   6,6
000023CE 4780 C104               000023E4   3566          BZ    @L356
                                            3567 * ***                                   mtx_unlock(&rkq->rkq_lock);
000023D2 E350 D0B0 0024          000000B0   3568          STG   5,176(0,13)
000023D8 4110 D0B0               000000B0   3569          LA    1,176(0,13)
000023DC E3F0 C068 0004          00002348   3570          LG    15,@lit_1450_94 ; mtx_unlock
000023E2                                    3571 @@gen_label164 DS    0H
000023E2 05EF                               3572          BALR  14,15
000023E4                                    3573 @@gen_label165 DS    0H
000023E4                                    3574 @L356    DS    0H
                                            3575 * ***            return -1;
000023E4 A7F9 FFFF               0000FFFF   3576          LGHI  15,-1       ; -1
000023E8 47F0 C382               00002662   3577          B     @ret_lab_1450
                                            3578 * ***         }
                                            3579 * ***
                                            3580 * ***
                                            3581 * ***                   while ((rko = ((&srcq->rkq_q)->tqh_first)) && \
                                            3582 * rko->rko_prio > 0) {
                                            3583 * ***                           do {   if (((rko)->rko_link .tqe_next)\
                                            3584 *  != (((void *)0))) (rko)->rko_link .tqe_next->rko_link .tqe_prev = (\
                                            3585 * rko)->rko_link .tqe_prev; else (&srcq->rkq_q)->tqh_last = (rko)->rko\
                                            3586 * _link .tqe_prev; *(rko)->rko_link .tqe_prev = (rko)->rko_link .tqe_n\
                                            3587 * ext; ; } while ( 0);
000023EC                                    3588 @L362    DS    0H
000023EC E3F0 7000 0002          00000000   3589          LTG   15,0(0,7)   ; rko
                                                                                                                           Page   76 
  Active Usings: @REGION_1450_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000023F2 4780 C12C               0000240C   3590          BE    @L365
000023F6 E3F0 7000 0004          00000000   3591          LG    15,0(0,7)   ; rko
000023FC E310 7008 0004          00000008   3592          LG    1,8(0,7)    ; offset of tqe_prev in 0000055
00002402 E310 F008 0024          00000008   3593          STG   1,8(0,15)   ; offset of tqe_prev in 0000055
00002408 47F0 C138               00002418   3594          B     @L366
0000240C                                    3595 @L365    DS    0H
0000240C E3F0 7008 0004          00000008   3596          LG    15,8(0,7)   ; offset of tqe_prev in 0000055
00002412 E3F0 2068 0024          00000068   3597          STG   15,104(0,2) ; offset of tqh_last in rd_kafka_op_tailq
00002418                                    3598 @L366    DS    0H
00002418 E3F0 7008 0004          00000008   3599          LG    15,8(0,7)   ; offset of tqe_prev in 0000055
0000241E E310 7000 0004          00000000   3600          LG    1,0(0,7)    ; rko
00002424 E310 F000 0024          00000000   3601          STG   1,0(0,15)
                                            3602 * ***                           do { if(((&rkq->rkq_q)->tqh_first) == \
                                            3603 * ((void *)0)) { do {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_q)-\
                                            3604 * >tqh_first) != (((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link .tq\
                                            3605 * e_prev = &(rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = \
                                            3606 * &(rko)->rko_link .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rko)-\
                                            3607 * >rko_link .tqe_prev = &(&rkq->rkq_q)->tqh_first; } while ( 0); } els\
                                            3608 * e { rd_kafka_op_t * _tmp; for ((_tmp) = ((&rkq->rkq_q)->tqh_first); \
                                            3609 * (_tmp) != (((void *)0)); (_tmp) = ((_tmp)->rko_link .tqe_next)) { if\
                                            3610 * (rd_kafka_op_cmp_prio(rko,_tmp) < 0) { do {  (rko)->rko_link .tqe_pr\
                                            3611 * ev = (_tmp)->rko_link .tqe_prev; (rko)->rko_link .tqe_next = (_tmp);\
                                            3612 *  *(_tmp)->rko_link .tqe_prev = (rko); (_tmp)->rko_link .tqe_prev = &\
                                            3613 * (rko)->rko_link .tqe_next; } while ( 0); break; } if(!((_tmp)->rko_l\
                                            3614 * ink .tqe_next)) { do {  if (((rko)->rko_link .tqe_next = (_tmp)->rko\
                                            3615 * _link .tqe_next) != (((void *)0))) (rko)->rko_link .tqe_next->rko_li\
                                            3616 * nk .tqe_prev = &(rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_l\
                                            3617 * ast = &(rko)->rko_link .tqe_next; (_tmp)->rko_link .tqe_next = (rko)\
                                            3618 * ; (rko)->rko_link .tqe_prev = &(_tmp)->rko_link .tqe_next; } while (\
                                            3619 *  0); break; } } } } while(0);
0000242A                                    3620 @L367    DS    0H
0000242A E3F0 5060 0002          00000060   3621          LTG   15,96(0,5)  ; offset of rkq_q in rd_kafka_q_s
00002430 4770 C192               00002472   3622          BNE   @L370
00002434                                    3623 @L371    DS    0H
00002434 E3F0 5060 0004          00000060   3624          LG    15,96(0,5)  ; offset of rkq_q in rd_kafka_q_s
0000243A E3F0 7000 0024          00000000   3625          STG   15,0(0,7)
00002440 B902 00FF                          3626          LTGR  15,15
00002444 4780 C178               00002458   3627          BE    @L374
00002448 E3F0 5060 0004          00000060   3628          LG    15,96(0,5)  ; offset of rkq_q in rd_kafka_q_s
0000244E E370 F008 0024          00000008   3629          STG   7,8(0,15)   ; offset of tqe_prev in 0000055
00002454 47F0 C17E               0000245E   3630          B     @L375
00002458                                    3631 @L374    DS    0H
00002458 E370 5068 0024          00000068   3632          STG   7,104(0,5)  ; offset of tqh_last in rd_kafka_op_tailq
0000245E                                    3633 @L375    DS    0H
0000245E E370 5060 0024          00000060   3634          STG   7,96(0,5)   ; offset of rkq_q in rd_kafka_q_s
00002464 41F0 5060               00000060   3635          LA    15,96(0,5)
00002468 E3F0 7008 0024          00000008   3636          STG   15,8(0,7)   ; offset of tqe_prev in 0000055
0000246E 47F0 C234               00002514   3637          B     @L376
00002472                                    3638 @L370    DS    0H
00002472 E330 5060 0004          00000060   3639          LG    3,96(0,5)   ; offset of rkq_q in rd_kafka_q_s
00002478 47F0 C22C               0000250C   3640          B     @L378
0000247C                                    3641 @L377    DS    0H
                                                                                                                           Page   77 
  Active Usings: @REGION_1450_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000247C E370 D0B0 0024          000000B0   3642          STG   7,176(0,13)
00002482 E330 D0B8 0024          000000B8   3643          STG   3,184(0,13)
00002488 4110 D0B0               000000B0   3644          LA    1,176(0,13)
0000248C E3F0 C070 0004          00002350   3645          LG    15,@lit_1450_96 ; rd_kafka_op_cmp_prio
00002492                                    3646 @@gen_label169 DS    0H
00002492 05EF                               3647          BALR  14,15
00002494                                    3648 @@gen_label170 DS    0H
00002494 12FF                               3649          LTR   15,15
00002496 47B0 C1E2               000024C2   3650          BNL   @L381
0000249A                                    3651 @L382    DS    0H
0000249A E3F0 3008 0004          00000008   3652          LG    15,8(0,3)   ; offset of tqe_prev in 0000055
000024A0 E3F0 7008 0024          00000008   3653          STG   15,8(0,7)   ; offset of tqe_prev in 0000055
000024A6 E330 7000 0024          00000000   3654          STG   3,0(0,7)    ; rko
000024AC E3F0 3008 0004          00000008   3655          LG    15,8(0,3)   ; offset of tqe_prev in 0000055
000024B2 E370 F000 0024          00000000   3656          STG   7,0(0,15)
000024B8 E370 3008 0024          00000008   3657          STG   7,8(0,3)    ; offset of tqe_prev in 0000055
000024BE 47F0 C234               00002514   3658          B     @L379
000024C2                                    3659 @L381    DS    0H
000024C2 E3F0 3000 0002          00000000   3660          LTG   15,0(0,3)   ; _tmp
000024C8 4770 C226               00002506   3661          BNZ   @L385
000024CC                                    3662 @L386    DS    0H
000024CC E3F0 3000 0004          00000000   3663          LG    15,0(0,3)   ; _tmp
000024D2 E3F0 7000 0024          00000000   3664          STG   15,0(0,7)
000024D8 B902 00FF                          3665          LTGR  15,15
000024DC 4780 C210               000024F0   3666          BE    @L389
000024E0 E3F0 7000 0004          00000000   3667          LG    15,0(0,7)   ; rko
000024E6 E370 F008 0024          00000008   3668          STG   7,8(0,15)   ; offset of tqe_prev in 0000055
000024EC 47F0 C216               000024F6   3669          B     @L390
000024F0                                    3670 @L389    DS    0H
000024F0 E370 5068 0024          00000068   3671          STG   7,104(0,5)  ; offset of tqh_last in rd_kafka_op_tailq
000024F6                                    3672 @L390    DS    0H
000024F6 E370 3000 0024          00000000   3673          STG   7,0(0,3)    ; _tmp
000024FC E330 7008 0024          00000008   3674          STG   3,8(0,7)    ; offset of tqe_prev in 0000055
00002502 47F0 C234               00002514   3675          B     @L379
00002506                                    3676 @L385    DS    0H
00002506 E330 3000 0004          00000000   3677          LG    3,0(0,3)    ; _tmp
0000250C                                    3678 @L378    DS    0H
0000250C B902 00F3                          3679          LTGR  15,3
00002510 4770 C19C               0000247C   3680          BNE   @L377
00002514                                    3681 @L379    DS    0H
00002514                                    3682 @L376    DS    0H
                                            3683 * ***
                                            3684 * ***
                                            3685 * ***                   }
00002514                                    3686 @L360    DS    0H
00002514 E370 2060 0004          00000060   3687          LG    7,96(0,2)   ; offset of rkq_q in rd_kafka_q_s
0000251A B902 00F7                          3688          LTGR  15,7
0000251E 4780 C250               00002530   3689          BZ    @L391
00002522 E55C 7034 0000          00000034   3690          CHSI  52(7),0
00002528 47D0 C250               00002530   3691          BNH   @L391
0000252C 47F0 C10C               000023EC   3692          B     @L362
                                            3693 * ***
                                                                                                                           Page   78 
  Active Usings: @REGION_1450_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3694 * ***         do { if (!(((&srcq->rkq_q)->tqh_first) == (((void *)0)))\
                                            3695 * ) { *(&rkq->rkq_q)->tqh_last = (&srcq->rkq_q)->tqh_first; (&srcq->rk\
                                            3696 * q_q)->tqh_first->rko_link .tqe_prev = (&rkq->rkq_q)->tqh_last; (&rkq\
                                            3697 * ->rkq_q)->tqh_last = (&srcq->rkq_q)->tqh_last; do { ((&srcq->rkq_q))\
                                            3698 * ->tqh_first = (((void *)0)); ((&srcq->rkq_q))->tqh_last = &((&srcq->\
                                            3699 * rkq_q))->tqh_first; } while ( 0); } } while ( 0);
00002530                                    3700 @L391    DS    0H
00002530 E3F0 2060 0002          00000060   3701          LTG   15,96(0,2)  ; offset of rkq_q in rd_kafka_q_s
00002536 4780 C29E               0000257E   3702          BE    @L394
0000253A E3F0 5068 0004          00000068   3703          LG    15,104(0,5) ; offset of tqh_last in rd_kafka_op_tailq
00002540 E310 2060 0004          00000060   3704          LG    1,96(0,2)   ; offset of rkq_q in rd_kafka_q_s
00002546 E310 F000 0024          00000000   3705          STG   1,0(0,15)
0000254C E3F0 2060 0004          00000060   3706          LG    15,96(0,2)  ; offset of rkq_q in rd_kafka_q_s
00002552 E310 5068 0004          00000068   3707          LG    1,104(0,5)  ; offset of tqh_last in rd_kafka_op_tailq
00002558 E310 F008 0024          00000008   3708          STG   1,8(0,15)   ; offset of tqe_prev in 0000055
0000255E E3F0 2068 0004          00000068   3709          LG    15,104(0,2) ; offset of tqh_last in rd_kafka_op_tailq
00002564 E3F0 5068 0024          00000068   3710          STG   15,104(0,5) ; offset of tqh_last in rd_kafka_op_tailq
0000256A                                    3711 @L395    DS    0H
0000256A A7F9 0000               00000000   3712          LGHI  15,0        ; 0
0000256E E3F0 2060 0024          00000060   3713          STG   15,96(0,2)  ; offset of rkq_q in rd_kafka_q_s
00002574 41F0 2060               00000060   3714          LA    15,96(0,2)
00002578 E3F0 2068 0024          00000068   3715          STG   15,104(0,2) ; offset of tqh_last in rd_kafka_op_tailq
0000257E                                    3716 @L394    DS    0H
                                            3717 * ***         if (rkq->rkq_qlen == 0)
0000257E E55C 5070 0000          00000070   3718          CHSI  112(5),0
00002584 4770 C2BA               0000259A   3719          BNE   @L398
                                            3720 * ***            rd_kafka_q_io_event(rkq);
00002588 E350 D0B0 0024          000000B0   3721          STG   5,176(0,13)
0000258E 4110 D0B0               000000B0   3722          LA    1,176(0,13)
00002592 E3F0 C078 0004          00002358   3723          LG    15,@lit_1450_98 ; rd_kafka_q_io_event
00002598                                    3724 @@gen_label179 DS    0H
00002598 05EF                               3725          BALR  14,15
0000259A                                    3726 @@gen_label180 DS    0H
0000259A                                    3727 @L398    DS    0H
                                            3728 * ***                   rkq->rkq_qlen += srcq->rkq_qlen;
0000259A 58F0 5070               00000070   3729          L     15,112(0,5)
0000259E 5AF0 2070               00000070   3730          A     15,112(0,2)
000025A2 50F0 5070               00000070   3731          ST    15,112(0,5)
                                            3732 * ***                   rkq->rkq_qsize += srcq->rkq_qsize;
000025A6 E3F0 5078 0004          00000078   3733          LG    15,120(0,5)
000025AC E3F0 2078 0008          00000078   3734          AG    15,120(0,2)
000025B2 E3F0 5078 0024          00000078   3735          STG   15,120(0,5)
                                            3736 * ***         cnd_signal(&rkq->rkq_cond);
000025B8 41F0 5028               00000028   3737          LA    15,40(0,5)
000025BC E3F0 D0B0 0024          000000B0   3738          STG   15,176(0,13)
000025C2 4110 D0B0               000000B0   3739          LA    1,176(0,13)
000025C6 E3F0 C080 0004          00002360   3740          LG    15,@lit_1450_99 ; cnd_signal
000025CC                                    3741 @@gen_label181 DS    0H
000025CC 05EF                               3742          BALR  14,15
000025CE                                    3743 @@gen_label182 DS    0H
                                            3744 * ***
                                            3745 * ***                   rd_kafka_q_mark_served(srcq);
                                                                                                                           Page   79 
  Active Usings: @REGION_1450_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000025CE E320 D0B0 0024          000000B0   3746          STG   2,176(0,13)
000025D4 4110 D0B0               000000B0   3747          LA    1,176(0,13)
000025D8 E3F0 C088 0004          00002368   3748          LG    15,@lit_1450_100 ; rd_kafka_q_mark_served
000025DE                                    3749 @@gen_label183 DS    0H
000025DE 05EF                               3750          BALR  14,15
000025E0                                    3751 @@gen_label184 DS    0H
                                            3752 * ***                   rd_kafka_q_reset(srcq);
000025E0 E320 D0B0 0024          000000B0   3753          STG   2,176(0,13)
000025E6 4110 D0B0               000000B0   3754          LA    1,176(0,13)
000025EA E3F0 C090 0004          00002370   3755          LG    15,@lit_1450_101 ; rd_kafka_q_reset
000025F0                                    3756 @@gen_label185 DS    0H
000025F0 05EF                               3757          BALR  14,15
000025F2                                    3758 @@gen_label186 DS    0H
                                            3759 * ***      } else
000025F2 47F0 C366               00002646   3760          B     @L399
000025F6                                    3761 @L351    DS    0H
                                            3762 * ***         r = rd_kafka_q_concat0(rkq->rkq_fwdq ? rkq->rkq_fwdq : r\
                                            3763 * kq,
                                            3764 * ***                      srcq,
                                            3765 * ***                      rkq->rkq_fwdq ? do_lock : 0);
000025F6 E3F0 5058 0002          00000058   3766          LTG   15,88(0,5)  ; offset of rkq_fwdq in rd_kafka_q_s
000025FC 4780 C32A               0000260A   3767          BZ    @L400
00002600 E3F0 5058 0004          00000058   3768          LG    15,88(0,5)  ; offset of rkq_fwdq in rd_kafka_q_s
00002606 47F0 C32E               0000260E   3769          B     @L401
0000260A                                    3770 @L400    DS    0H
0000260A B904 00F5                          3771          LGR   15,5
0000260E                                    3772 @L401    DS    0H
0000260E E310 5058 0002          00000058   3773          LTG   1,88(0,5)   ; offset of rkq_fwdq in rd_kafka_q_s
00002614 4780 C33E               0000261E   3774          BZ    @L402
00002618 1816                               3775          LR    1,6
0000261A 47F0 C342               00002622   3776          B     @L403
0000261E                                    3777 @L402    DS    0H
0000261E A718 0000               00000000   3778          LHI   1,0         ; 0
00002622                                    3779 @L403    DS    0H
00002622 E3F0 D0B0 0024          000000B0   3780          STG   15,176(0,13)
00002628 E320 D0B8 0024          000000B8   3781          STG   2,184(0,13)
0000262E B914 00F1                          3782          LGFR  15,1
00002632 E3F0 D0C0 0024          000000C0   3783          STG   15,192(0,13)
00002638 4110 D0B0               000000B0   3784          LA    1,176(0,13)
0000263C E3F0 C098 0004          00002378   3785          LG    15,@lit_1450_103 ; rd_kafka_q_concat0
00002642                                    3786 @@gen_label189 DS    0H
00002642 05EF                               3787          BALR  14,15
00002644                                    3788 @@gen_label190 DS    0H
00002644 184F                               3789          LR    4,15        ; r
00002646                                    3790 @L399    DS    0H
                                            3791 * ***      if (do_lock)
00002646 1266                               3792          LTR   6,6
00002648 4780 C37E               0000265E   3793          BZ    @L404
                                            3794 * ***         mtx_unlock(&rkq->rkq_lock);
0000264C E350 D0B0 0024          000000B0   3795          STG   5,176(0,13)
00002652 4110 D0B0               000000B0   3796          LA    1,176(0,13)
00002656 E3F0 C068 0004          00002348   3797          LG    15,@lit_1450_94 ; mtx_unlock
                                                                                                                           Page   80 
  Active Usings: @REGION_1450_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000265C                                    3798 @@gen_label192 DS    0H
0000265C 05EF                               3799          BALR  14,15
0000265E                                    3800 @@gen_label193 DS    0H
0000265E                                    3801 @L404    DS    0H
                                            3802 * ***
                                            3803 * ***      return r;
0000265E B914 00F4                          3804          LGFR  15,4
                                            3805 * ***   }
00002662                                    3806 @ret_lab_1450 DS 0H
                                            3807 * * **** Start of Epilogue
                                            3808          DCCEPIL
00002662                                    3809+         ds 0h                                                          01-DCCEP
                                            3810+* Epilog
00002662 D707 D088 D088 00000088 00000088   3811+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002668 E3D0 D080 0004          00000080   3812+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000266E E3C0 D090 0004          00000090   3813+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002674 E3B0 C018 0004          00000018   3814+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000267A E3C0 B010 0021          00000010   3815+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002680 E3E0 D008 0004          00000008   3816+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002686 EB1C D020 0004          00000020   3817+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000268C 078E                               3818+         bcr 8,14                if same dsab, just return              01-DCCEP
0000268E E3F0 D010 0024          00000010   3819+         stg 15,16(0,13)         save return code                       01-DCCEP
00002694 E300 D018 0024          00000018   3820+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000269A E3F0 D090 0004          00000090   3821+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000026A0 E3F0 F018 0004          00000018   3822+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000026A6 47F0 F040               00000040   3823+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3824+* End of Epilog
                                            3825 * * **** End of Epilogue
                                            3826          DROP  12
                                            3827 *
                                            3828 *   DSECT for automatic variables in "rd_kafka_q_concat0"
                                            3829 *      (FUNCTION #1450)
                                            3830 *
00000000                00000000 000000AC   3831 @AUTO#rd_kafka_q_concat0 DSECT
00000000                                    3832          DS    XL168
000000A8                                    3833 rd_kafka_q_concat0#r#0 DS 1F ; r
                                            3834 *
000026AA                00000000 00007BF0   3835 @CODE    CSECT
                                            3836 *
                                            3837 *
                                            3838 *
                                            3839 * ....... start of rd_kafka_q_prepend0
000026AA                                    3840 @LNAME1451 DS  0H
000026AA 00000013                           3841          DC    X'00000013'
000026AE 99846D9281869281                   3842          DC    C'rd_kafka_q_prepend0'
000026C1 00                                 3843          DC    X'00'
                                            3844 rd_kafka_q_prepend0 DCCPRLG CINDEX=1451,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1451
                                            3845          macro
                                            3846          dccextrn &m
                                            3847          gblc    &$dccext(1000)
                                            3848          gbla    &$dccexti
                                                                                                                           Page   81 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3849          lcla    &i
                                            3850 &$dccext(&$dccexti+1) setc    '&m'
                                            3851 &i       seta    1
                                            3852 .loop    aif    (&i gt &$dccexti).around
                                            3853          aif    ('&$dccext(&i)' eq '&m').getout
                                            3854 &i       seta    &i+1
                                            3855          ago     .loop
                                            3856 .around  anop
                                            3857 &$dccexti seta &$dccexti+1
                                            3858          extrn  &m
                                            3859 .getout  anop
                                            3860          mend
000026C8                                    3861+$eye0080    ds    0d                                                    02-DCCCA
000026C8 C4C3C3                             3862+         dc cl3'DCC'                                                    02-DCCCA
000026CB 01                                 3863+         dc xl1'01' format one                                          02-DCCCA
000026CC 00000000                           3864+         dc a(0)                                                        02-DCCCA
000026D0 000000000000273A                   3865+         dc ad(@PER_1451)                                               02-DCCCA
000026D8 00000000000000C0                   3866+         dc ad(192)                                                     02-DCCCA
000026E0 0000000000000000                   3867+         dc ad(0)                                                       02-DCCCA
000026E8 0000000000001000                   3868+         dc ad(4096)                                                    02-DCCCA
000026F0 20                                 3869+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000026F1 03                                 3870+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000026F2 03                                 3871+         dc al1(3)                                                      02-DCCCA
000026F3 08                                 3872+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000026F4 00                                 3873+         dc bl.8'00000000'                                              02-DCCCA
000026F5 000000                             3874+         dc al3(0)                                                      02-DCCCA
000026F8 00000000000026AA                   3875+         dc ad(@LNAME1451)                                              02-DCCCA
00002700                                    3876+         ds 0d                                                          02-DCCCA
00002700 00000000000026C8                   3877+         dc ad($eye0080)                                                02-DCCCA
00002708 0000000000000000                   3878+         dc ad(0)                                                       02-DCCCA
00002710                                    3879+         ds    0d                                                       01-DCCPR
00002710                                    3880+rd_kafka_q_prepend0 ds 0d                                               01-DCCPR
00002710                                    3881+@REGION_1451_1 ds 0h                                                    01-DCCPR
00002710 EBEC D008 0024          00000008   3882+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002716 E3E0 D088 0004          00000088   3883+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000271C E3C0 D090 0004          00000090   3884+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002722 B904 002E                          3885+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002726 E3B0 C018 0004          00000018   3886+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000272C A7EB 00C0               000000C0   3887+         aghi  14,192              increase by frame size               01-DCCPR
00002730 E3E0 C020 0021          00000020   3888+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002736 4720 B020               00000020   3889+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000273A                                    3890+@PER_1451 ds   0h                                                       01-DCCPR
0000273A EBDE 2080 0024          00000080   3891+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002740 E3C0 2090 0024          00000090   3892+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002746 B904 00D2                          3893+         lgr   13,2                set real frame pointer               01-DCCPR
0000274A B904 00CF                          3894+         lgr   12,15               set base reg                         01-DCCPR
                        00002710            3895+         using @REGION_1451_1,12                                        01-DCCPR
                                            3896 * ******* End of Prologue
                                            3897 * *
                                            3898 * ***      if (do_lock)
0000274E E320 1008 0004          00000008   3899          LG    2,8(0,1)    ; srcq
00002754 5830 1014               00000014   3900          L     3,20(0,1)   ; do_lock
                                                                                                                           Page   82 
  Active Usings: @REGION_1451_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002758 E340 1000 0004          00000000   3901          LG    4,0(0,1)    ; rkq
0000275E 1233                               3902          LTR   3,3
00002760 4780 C066               00002776   3903          BZ    @L405
                                            3904 * ***         mtx_lock(&rkq->rkq_lock);
00002764 E340 D0A8 0024          000000A8   3905          STG   4,168(0,13)
0000276A 4110 D0A8               000000A8   3906          LA    1,168(0,13)
0000276E E3F0 C120 0004          00002830   3907          LG    15,@lit_1451_106 ; mtx_lock
00002774                                    3908 @@gen_label195 DS    0H
00002774 05EF                               3909          BALR  14,15
00002776                                    3910 @@gen_label196 DS    0H
00002776                                    3911 @L405    DS    0H
                                            3912 * ***      if (!rkq->rkq_fwdq && !srcq->rkq_fwdq) {
00002776 E3F0 4058 0002          00000058   3913          LTG   15,88(0,4)  ; offset of rkq_fwdq in rd_kafka_q_s
0000277C 4770 C1D0               000028E0   3914          BNZ   @L406
00002780 E3F0 2058 0002          00000058   3915          LTG   15,88(0,2)  ; offset of rkq_fwdq in rd_kafka_q_s
00002786 4770 C1D0               000028E0   3916          BNZ   @L406
                                            3917 * ***
                                            3918 * ***
                                            3919 * ***                   do { if (!(((&rkq->rkq_q)->tqh_first) == (((vo\
                                            3920 * id *)0)))) { *(&srcq->rkq_q)->tqh_last = (&rkq->rkq_q)->tqh_first; (\
                                            3921 * &rkq->rkq_q)->tqh_first->rko_link .tqe_prev = (&srcq->rkq_q)->tqh_la\
                                            3922 * st; (&srcq->rkq_q)->tqh_last = (&rkq->rkq_q)->tqh_last; do { ((&rkq-\
                                            3923 * >rkq_q))->tqh_first = (((void *)0)); ((&rkq->rkq_q))->tqh_last = &((\
                                            3924 * &rkq->rkq_q))->tqh_first; } while ( 0); } } while ( 0);
0000278A                                    3925 @L407    DS    0H
0000278A E3F0 4060 0002          00000060   3926          LTG   15,96(0,4)  ; offset of rkq_q in rd_kafka_q_s
00002790 4780 C0C8               000027D8   3927          BE    @L410
00002794 E3F0 2068 0004          00000068   3928          LG    15,104(0,2) ; offset of tqh_last in rd_kafka_op_tailq
0000279A E310 4060 0004          00000060   3929          LG    1,96(0,4)   ; offset of rkq_q in rd_kafka_q_s
000027A0 E310 F000 0024          00000000   3930          STG   1,0(0,15)
000027A6 E3F0 4060 0004          00000060   3931          LG    15,96(0,4)  ; offset of rkq_q in rd_kafka_q_s
000027AC E310 2068 0004          00000068   3932          LG    1,104(0,2)  ; offset of tqh_last in rd_kafka_op_tailq
000027B2 E310 F008 0024          00000008   3933          STG   1,8(0,15)   ; offset of tqe_prev in 0000055
000027B8 E3F0 4068 0004          00000068   3934          LG    15,104(0,4) ; offset of tqh_last in rd_kafka_op_tailq
000027BE E3F0 2068 0024          00000068   3935          STG   15,104(0,2) ; offset of tqh_last in rd_kafka_op_tailq
000027C4                                    3936 @L411    DS    0H
000027C4 A7F9 0000               00000000   3937          LGHI  15,0        ; 0
000027C8 E3F0 4060 0024          00000060   3938          STG   15,96(0,4)  ; offset of rkq_q in rd_kafka_q_s
000027CE 41F0 4060               00000060   3939          LA    15,96(0,4)
000027D2 E3F0 4068 0024          00000068   3940          STG   15,104(0,4) ; offset of tqh_last in rd_kafka_op_tailq
000027D8                                    3941 @L410    DS    0H
                                            3942 * ***
                                            3943 * ***                   do { if(((&srcq->rkq_q)->tqh_first)) { ((&srcq\
                                            3944 * ->rkq_q)->tqh_first)->rko_link .tqe_prev = &(&rkq->rkq_q)->tqh_first\
                                            3945 * ; (&rkq->rkq_q)->tqh_first = (&srcq->rkq_q)->tqh_first; (&rkq->rkq_q\
                                            3946 * )->tqh_last = (&srcq->rkq_q)->tqh_last; do { (&srcq->rkq_q)->tqh_fir\
                                            3947 * st = (((void *)0)); (&srcq->rkq_q)->tqh_last = &(&srcq->rkq_q)->tqh_\
                                            3948 * first; } while ( 0); } else do { (&rkq->rkq_q)->tqh_first = (((void \
                                            3949 * *)0)); (&rkq->rkq_q)->tqh_last = &(&rkq->rkq_q)->tqh_first; } while \
                                            3950 * ( 0); } while ( 0);
000027D8                                    3951 @L414    DS    0H
000027D8 E3F0 2060 0002          00000060   3952          LTG   15,96(0,2)  ; offset of rkq_q in rd_kafka_q_s
                                                                                                                           Page   83 
  Active Usings: @REGION_1451_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000027DE 4780 C150               00002860   3953          BZ    @L422
000027E2 E3F0 2060 0004          00000060   3954          LG    15,96(0,2)  ; offset of rkq_q in rd_kafka_q_s
000027E8 4110 4060               00000060   3955          LA    1,96(0,4)
000027EC E310 F008 0024          00000008   3956          STG   1,8(0,15)   ; offset of tqe_prev in 0000055
000027F2 E3F0 2060 0004          00000060   3957          LG    15,96(0,2)  ; offset of rkq_q in rd_kafka_q_s
000027F8 E3F0 4060 0024          00000060   3958          STG   15,96(0,4)  ; offset of rkq_q in rd_kafka_q_s
000027FE E3F0 2068 0004          00000068   3959          LG    15,104(0,2) ; offset of tqh_last in rd_kafka_op_tailq
00002804 E3F0 4068 0024          00000068   3960          STG   15,104(0,4) ; offset of tqh_last in rd_kafka_op_tailq
0000280A                                    3961 @L418    DS    0H
0000280A A7F9 0000               00000000   3962          LGHI  15,0        ; 0
0000280E E3F0 2060 0024          00000060   3963          STG   15,96(0,2)  ; offset of rkq_q in rd_kafka_q_s
00002814 41F0 2060               00000060   3964          LA    15,96(0,2)
00002818 E3F0 2068 0024          00000068   3965          STG   15,104(0,2) ; offset of tqh_last in rd_kafka_op_tailq
0000281E 47F0 C164               00002874   3966          B     @L421
00002828                                    3967          DS    0D
00002828 000000C0                           3968 @FRAMESIZE_1451 DC F'192'
0000282C 00000000
00002830 0000000000000000                   3969 @lit_1451_106 DC AD(mtx_lock)
00002838 0000000000001678                   3970 @lit_1451_110 DC AD(rd_kafka_q_io_event)
00002840 0000000000002248                   3971 @lit_1451_111 DC AD(rd_kafka_q_mark_served)
00002848 0000000000001470                   3972 @lit_1451_112 DC AD(rd_kafka_q_reset)
00002850 0000000000002710                   3973 @lit_1451_114 DC AD(rd_kafka_q_prepend0)
00002858 0000000000000000                   3974 @lit_1451_115 DC AD(mtx_unlock)
00002860                                    3975 @L422    DS    0H
00002860 A7F9 0000               00000000   3976          LGHI  15,0        ; 0
00002864 E3F0 4060 0024          00000060   3977          STG   15,96(0,4)  ; offset of rkq_q in rd_kafka_q_s
0000286A 41F0 4060               00000060   3978          LA    15,96(0,4)
0000286E E3F0 4068 0024          00000068   3979          STG   15,104(0,4) ; offset of tqh_last in rd_kafka_op_tailq
00002874                                    3980 @L421    DS    0H
                                            3981 * ***         if (rkq->rkq_qlen == 0 && srcq->rkq_qlen > 0)
00002874 E55C 4070 0000          00000070   3982          CHSI  112(4),0
0000287A 4770 C18A               0000289A   3983          BNE   @L425
0000287E E55C 2070 0000          00000070   3984          CHSI  112(2),0
00002884 47D0 C18A               0000289A   3985          BNH   @L425
                                            3986 * ***                           rd_kafka_q_io_event(rkq);
00002888 E340 D0A8 0024          000000A8   3987          STG   4,168(0,13)
0000288E 4110 D0A8               000000A8   3988          LA    1,168(0,13)
00002892 E3F0 C128 0004          00002838   3989          LG    15,@lit_1451_110 ; rd_kafka_q_io_event
00002898                                    3990 @@gen_label203 DS    0H
00002898 05EF                               3991          BALR  14,15
0000289A                                    3992 @@gen_label204 DS    0H
0000289A                                    3993 @L425    DS    0H
                                            3994 * ***                   rkq->rkq_qlen += srcq->rkq_qlen;
0000289A 58F0 4070               00000070   3995          L     15,112(0,4)
0000289E 5AF0 2070               00000070   3996          A     15,112(0,2)
000028A2 50F0 4070               00000070   3997          ST    15,112(0,4)
                                            3998 * ***                   rkq->rkq_qsize += srcq->rkq_qsize;
000028A6 E3F0 4078 0004          00000078   3999          LG    15,120(0,4)
000028AC E3F0 2078 0008          00000078   4000          AG    15,120(0,2)
000028B2 E3F0 4078 0024          00000078   4001          STG   15,120(0,4)
                                            4002 * ***
                                            4003 * ***                   rd_kafka_q_mark_served(srcq);
                                                                                                                           Page   84 
  Active Usings: @REGION_1451_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000028B8 E320 D0A8 0024          000000A8   4004          STG   2,168(0,13)
000028BE 4110 D0A8               000000A8   4005          LA    1,168(0,13)
000028C2 E3F0 C130 0004          00002840   4006          LG    15,@lit_1451_111 ; rd_kafka_q_mark_served
000028C8                                    4007 @@gen_label205 DS    0H
000028C8 05EF                               4008          BALR  14,15
000028CA                                    4009 @@gen_label206 DS    0H
                                            4010 * ***                   rd_kafka_q_reset(srcq);
000028CA E320 D0A8 0024          000000A8   4011          STG   2,168(0,13)
000028D0 4110 D0A8               000000A8   4012          LA    1,168(0,13)
000028D4 E3F0 C138 0004          00002848   4013          LG    15,@lit_1451_112 ; rd_kafka_q_reset
000028DA                                    4014 @@gen_label207 DS    0H
000028DA 05EF                               4015          BALR  14,15
000028DC                                    4016 @@gen_label208 DS    0H
                                            4017 * ***      } else
000028DC 47F0 C232               00002942   4018          B     @L426
000028E0                                    4019 @L406    DS    0H
                                            4020 * ***         rd_kafka_q_prepend0(rkq->rkq_fwdq ? rkq->rkq_fwdq : rkq,
                                            4021 * ***                                       srcq->rkq_fwdq ? srcq->rkq\
                                            4022 * _fwdq : srcq,
                                            4023 * ***                                       rkq->rkq_fwdq ? do_lock : \
                                            4024 * 0);
000028E0 E3F0 4058 0002          00000058   4025          LTG   15,88(0,4)  ; offset of rkq_fwdq in rd_kafka_q_s
000028E6 4780 C1E4               000028F4   4026          BZ    @L427
000028EA E3F0 4058 0004          00000058   4027          LG    15,88(0,4)  ; offset of rkq_fwdq in rd_kafka_q_s
000028F0 47F0 C1E8               000028F8   4028          B     @L428
000028F4                                    4029 @L427    DS    0H
000028F4 B904 00F4                          4030          LGR   15,4
000028F8                                    4031 @L428    DS    0H
000028F8 E310 2058 0002          00000058   4032          LTG   1,88(0,2)   ; offset of rkq_fwdq in rd_kafka_q_s
000028FE 4780 C1FC               0000290C   4033          BZ    @L429
00002902 E320 2058 0004          00000058   4034          LG    2,88(0,2)   ; offset of rkq_fwdq in rd_kafka_q_s
00002908 47F0 C1FC               0000290C   4035          B     @L430
0000290C                                    4036 @L429    DS    0H
0000290C                                    4037 @L430    DS    0H
0000290C E310 4058 0002          00000058   4038          LTG   1,88(0,4)   ; offset of rkq_fwdq in rd_kafka_q_s
00002912 4780 C20C               0000291C   4039          BZ    @L431
00002916 1813                               4040          LR    1,3
00002918 47F0 C210               00002920   4041          B     @L432
0000291C                                    4042 @L431    DS    0H
0000291C A718 0000               00000000   4043          LHI   1,0         ; 0
00002920                                    4044 @L432    DS    0H
00002920 E3F0 D0A8 0024          000000A8   4045          STG   15,168(0,13)
00002926 E320 D0B0 0024          000000B0   4046          STG   2,176(0,13)
0000292C B914 00F1                          4047          LGFR  15,1
00002930 E3F0 D0B8 0024          000000B8   4048          STG   15,184(0,13)
00002936 4110 D0A8               000000A8   4049          LA    1,168(0,13)
0000293A E3F0 C140 0004          00002850   4050          LG    15,@lit_1451_114 ; rd_kafka_q_prepend0
00002940                                    4051 @@gen_label212 DS    0H
00002940 05EF                               4052          BALR  14,15
00002942                                    4053 @@gen_label213 DS    0H
00002942                                    4054 @L426    DS    0H
                                            4055 * ***      if (do_lock)
                                                                                                                           Page   85 
  Active Usings: @REGION_1451_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002942 1233                               4056          LTR   3,3
00002944 4780 C24A               0000295A   4057          BZ    @ret_lab_1451
                                            4058 * ***         mtx_unlock(&rkq->rkq_lock);
00002948 E340 D0A8 0024          000000A8   4059          STG   4,168(0,13)
0000294E 4110 D0A8               000000A8   4060          LA    1,168(0,13)
00002952 E3F0 C148 0004          00002858   4061          LG    15,@lit_1451_115 ; mtx_unlock
00002958                                    4062 @@gen_label215 DS    0H
00002958 05EF                               4063          BALR  14,15
0000295A                                    4064 @@gen_label216 DS    0H
0000295A                                    4065 @L433    DS    0H
                                            4066 * ***   }
0000295A                                    4067 @ret_lab_1451 DS 0H
                                            4068 * * **** Start of Epilogue
                                            4069          DCCEPIL
0000295A                                    4070+         ds 0h                                                          01-DCCEP
                                            4071+* Epilog
0000295A D707 D088 D088 00000088 00000088   4072+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002960 E3D0 D080 0004          00000080   4073+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002966 E3C0 D090 0004          00000090   4074+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000296C E3B0 C018 0004          00000018   4075+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002972 E3C0 B010 0021          00000010   4076+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002978 E3E0 D008 0004          00000008   4077+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000297E EB1C D020 0004          00000020   4078+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002984 078E                               4079+         bcr 8,14                if same dsab, just return              01-DCCEP
00002986 E3F0 D010 0024          00000010   4080+         stg 15,16(0,13)         save return code                       01-DCCEP
0000298C E300 D018 0024          00000018   4081+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002992 E3F0 D090 0004          00000090   4082+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002998 E3F0 F018 0004          00000018   4083+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000299E 47F0 F040               00000040   4084+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4085+* End of Epilog
                                            4086 * * **** End of Epilogue
                                            4087          DROP  12
                                            4088 *
                                            4089 *   DSECT for automatic variables in "rd_kafka_q_prepend0"
                                            4090 *      (FUNCTION #1451)
                                            4091 *
00000000                00000000 000000A8   4092 @AUTO#rd_kafka_q_prepend0 DSECT
00000000                                    4093          DS    XL168
                                            4094 *
000029A2                00000000 00007BF0   4095 @CODE    CSECT
                                            4096 *
                                            4097 *
                                            4098 *
                                            4099 * ....... start of rd_kafka_q_len
000029A2                                    4100 @LNAME1452 DS  0H
000029A2 0000000E                           4101          DC    X'0000000E'
000029A6 99846D9281869281                   4102          DC    C'rd_kafka_q_len'
000029B4 00                                 4103          DC    X'00'
                                            4104 rd_kafka_q_len DCCPRLG CINDEX=1452,BASER=12,FRAME=192,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1452
                                            4105          macro
                                            4106          dccextrn &m
                                                                                                                           Page   86 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4107          gblc    &$dccext(1000)
                                            4108          gbla    &$dccexti
                                            4109          lcla    &i
                                            4110 &$dccext(&$dccexti+1) setc    '&m'
                                            4111 &i       seta    1
                                            4112 .loop    aif    (&i gt &$dccexti).around
                                            4113          aif    ('&$dccext(&i)' eq '&m').getout
                                            4114 &i       seta    &i+1
                                            4115          ago     .loop
                                            4116 .around  anop
                                            4117 &$dccexti seta &$dccexti+1
                                            4118          extrn  &m
                                            4119 .getout  anop
                                            4120          mend
000029B8                                    4121+$eye0083    ds    0d                                                    02-DCCCA
000029B8 C4C3C3                             4122+         dc cl3'DCC'                                                    02-DCCCA
000029BB 01                                 4123+         dc xl1'01' format one                                          02-DCCCA
000029BC 00000000                           4124+         dc a(0)                                                        02-DCCCA
000029C0 0000000000002A2A                   4125+         dc ad(@PER_1452)                                               02-DCCCA
000029C8 00000000000000C0                   4126+         dc ad(192)                                                     02-DCCCA
000029D0 0000000000000000                   4127+         dc ad(0)                                                       02-DCCCA
000029D8 0000000000001000                   4128+         dc ad(4096)                                                    02-DCCCA
000029E0 20                                 4129+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000029E1 03                                 4130+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000029E2 03                                 4131+         dc al1(3)                                                      02-DCCCA
000029E3 08                                 4132+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000029E4 00                                 4133+         dc bl.8'00000000'                                              02-DCCCA
000029E5 000000                             4134+         dc al3(0)                                                      02-DCCCA
000029E8 00000000000029A2                   4135+         dc ad(@LNAME1452)                                              02-DCCCA
000029F0                                    4136+         ds 0d                                                          02-DCCCA
000029F0 00000000000029B8                   4137+         dc ad($eye0083)                                                02-DCCCA
000029F8 0000000000000000                   4138+         dc ad(0)                                                       02-DCCCA
00002A00                                    4139+         ds    0d                                                       01-DCCPR
00002A00                                    4140+rd_kafka_q_len ds 0d                                                    01-DCCPR
00002A00                                    4141+@REGION_1452_1 ds 0h                                                    01-DCCPR
00002A00 EBEC D008 0024          00000008   4142+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002A06 E3E0 D088 0004          00000088   4143+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002A0C E3C0 D090 0004          00000090   4144+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002A12 B904 002E                          4145+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002A16 E3B0 C018 0004          00000018   4146+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002A1C A7EB 00C0               000000C0   4147+         aghi  14,192              increase by frame size               01-DCCPR
00002A20 E3E0 C020 0021          00000020   4148+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002A26 4720 B020               00000020   4149+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002A2A                                    4150+@PER_1452 ds   0h                                                       01-DCCPR
00002A2A EBDE 2080 0024          00000080   4151+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002A30 E3C0 2090 0024          00000090   4152+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002A36 B904 00D2                          4153+         lgr   13,2                set real frame pointer               01-DCCPR
00002A3A B904 00CF                          4154+         lgr   12,15               set base reg                         01-DCCPR
                        00002A00            4155+         using @REGION_1452_1,12                                        01-DCCPR
                                            4156 * ******* End of Prologue
                                            4157 * *
00002A3E E330 1000 0004          00000000   4158          LG    3,0(0,1)    ; rkq
                                                                                                                           Page   87 
  Active Usings: @REGION_1452_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4159 * ***           int qlen;
                                            4160 * ***           rd_kafka_q_t *fwdq;
                                            4161 * ***           mtx_lock(&rkq->rkq_lock);
00002A44 E330 D0B0 0024          000000B0   4162          STG   3,176(0,13)
00002A4A 4110 D0B0               000000B0   4163          LA    1,176(0,13)
00002A4E E3F0 C0A0 0004          00002AA0   4164          LG    15,@lit_1452_117 ; mtx_lock
00002A54                                    4165 @@gen_label217 DS    0H
00002A54 05EF                               4166          BALR  14,15
00002A56                                    4167 @@gen_label218 DS    0H
                                            4168 * ***           if (!(fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
00002A56 E330 D0B0 0024          000000B0   4169          STG   3,176(0,13)
00002A5C D707 D0B8 D0B8 000000B8 000000B8   4170          XC    184(8,13),184(13)
00002A62 4110 D0B0               000000B0   4171          LA    1,176(0,13)
00002A66 E3F0 C0A8 0004          00002AA8   4172          LG    15,@lit_1452_118 ; rd_kafka_q_fwd_get
00002A6C                                    4173 @@gen_label219 DS    0H
00002A6C 05EF                               4174          BALR  14,15
00002A6E                                    4175 @@gen_label220 DS    0H
00002A6E B904 004F                          4176          LGR   4,15
00002A72 B902 00F4                          4177          LTGR  15,4
00002A76 4770 C0C8               00002AC8   4178          BNZ   @L434
                                            4179 * ***                   qlen = rkq->rkq_qlen;
00002A7A 5820 3070               00000070   4180          L     2,112(0,3)  ; offset of rkq_qlen in rd_kafka_q_s
                                            4181 * ***                   mtx_unlock(&rkq->rkq_lock);
00002A7E E330 D0B0 0024          000000B0   4182          STG   3,176(0,13)
00002A84 4110 D0B0               000000B0   4183          LA    1,176(0,13)
00002A88 E3F0 C0B0 0004          00002AB0   4184          LG    15,@lit_1452_119 ; mtx_unlock
00002A8E                                    4185 @@gen_label222 DS    0H
00002A8E 05EF                               4186          BALR  14,15
00002A90                                    4187 @@gen_label223 DS    0H
                                            4188 * ***           } else {
00002A90 47F0 C106               00002B06   4189          B     @L435
00002A98                                    4190          DS    0D
00002A98 000000C0                           4191 @FRAMESIZE_1452 DC F'192'
00002A9C 00000000
00002AA0 0000000000000000                   4192 @lit_1452_117 DC AD(mtx_lock)
00002AA8 0000000000001510                   4193 @lit_1452_118 DC AD(rd_kafka_q_fwd_get)
00002AB0 0000000000000000                   4194 @lit_1452_119 DC AD(mtx_unlock)
00002AB8 0000000000002A00                   4195 @lit_1452_121 DC AD(rd_kafka_q_len)
00002AC0 0000000000001140                   4196 @lit_1452_122 DC AD(rd_kafka_q_destroy0)
00002AC8                                    4197 @L434    DS    0H
                                            4198 * ***                   mtx_unlock(&rkq->rkq_lock);
00002AC8 E330 D0B0 0024          000000B0   4199          STG   3,176(0,13)
00002ACE 4110 D0B0               000000B0   4200          LA    1,176(0,13)
00002AD2 E3F0 C0B0 0004          00002AB0   4201          LG    15,@lit_1452_119 ; mtx_unlock
00002AD8                                    4202 @@gen_label224 DS    0H
00002AD8 05EF                               4203          BALR  14,15
00002ADA                                    4204 @@gen_label225 DS    0H
                                            4205 * ***                   qlen = rd_kafka_q_len(fwdq);
00002ADA E340 D0B0 0024          000000B0   4206          STG   4,176(0,13)
00002AE0 4110 D0B0               000000B0   4207          LA    1,176(0,13)
00002AE4 E3F0 C0B8 0004          00002AB8   4208          LG    15,@lit_1452_121 ; rd_kafka_q_len
00002AEA                                    4209 @@gen_label226 DS    0H
                                                                                                                           Page   88 
  Active Usings: @REGION_1452_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002AEA 05EF                               4210          BALR  14,15
00002AEC                                    4211 @@gen_label227 DS    0H
00002AEC 182F                               4212          LR    2,15        ; qlen
                                            4213 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
00002AEE E340 D0B0 0024          000000B0   4214          STG   4,176(0,13)
00002AF4 D707 D0B8 D0B8 000000B8 000000B8   4215          XC    184(8,13),184(13)
00002AFA 4110 D0B0               000000B0   4216          LA    1,176(0,13)
00002AFE E3F0 C0C0 0004          00002AC0   4217          LG    15,@lit_1452_122 ; rd_kafka_q_destroy0
00002B04                                    4218 @@gen_label228 DS    0H
00002B04 05EF                               4219          BALR  14,15
00002B06                                    4220 @@gen_label229 DS    0H
                                            4221 * ***           }
00002B06                                    4222 @L435    DS    0H
                                            4223 * ***           return qlen;
00002B06 B914 00F2                          4224          LGFR  15,2
                                            4225 * ***   }
                                            4226 * * **** Start of Epilogue
                                            4227          DCCEPIL
00002B0A                                    4228+         ds 0h                                                          01-DCCEP
                                            4229+* Epilog
00002B0A D707 D088 D088 00000088 00000088   4230+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002B10 E3D0 D080 0004          00000080   4231+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002B16 E3C0 D090 0004          00000090   4232+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002B1C E3B0 C018 0004          00000018   4233+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002B22 E3C0 B010 0021          00000010   4234+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002B28 E3E0 D008 0004          00000008   4235+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002B2E EB1C D020 0004          00000020   4236+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002B34 078E                               4237+         bcr 8,14                if same dsab, just return              01-DCCEP
00002B36 E3F0 D010 0024          00000010   4238+         stg 15,16(0,13)         save return code                       01-DCCEP
00002B3C E300 D018 0024          00000018   4239+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002B42 E3F0 D090 0004          00000090   4240+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002B48 E3F0 F018 0004          00000018   4241+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002B4E 47F0 F040               00000040   4242+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4243+* End of Epilog
                                            4244 * * **** End of Epilogue
                                            4245          DROP  12
                                            4246 *
                                            4247 *   DSECT for automatic variables in "rd_kafka_q_len"
                                            4248 *      (FUNCTION #1452)
                                            4249 *
00000000                00000000 000000AC   4250 @AUTO#rd_kafka_q_len DSECT
00000000                                    4251          DS    XL168
000000A8                                    4252 rd_kafka_q_len#qlen#0 DS 1F ; qlen
                                            4253 *
00002B52                00000000 00007BF0   4254 @CODE    CSECT
                                            4255 *
                                            4256 *
                                            4257 *
                                            4258 * ....... start of rd_kafka_replyq_clear
00002B52                                    4259 @LNAME1458 DS  0H
00002B52 00000015                           4260          DC    X'00000015'
00002B56 99846D9281869281                   4261          DC    C'rd_kafka_replyq_clear'
                                                                                                                           Page   89 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002B6B 00                                 4262          DC    X'00'
                                            4263 rd_kafka_replyq_clear DCCPRLG CINDEX=1458,BASER=0,FRAME=168,SAVEAREA=NO*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1458
                                            4264          macro
                                            4265          dccextrn &m
                                            4266          gblc    &$dccext(1000)
                                            4267          gbla    &$dccexti
                                            4268          lcla    &i
                                            4269 &$dccext(&$dccexti+1) setc    '&m'
                                            4270 &i       seta    1
                                            4271 .loop    aif    (&i gt &$dccexti).around
                                            4272          aif    ('&$dccext(&i)' eq '&m').getout
                                            4273 &i       seta    &i+1
                                            4274          ago     .loop
                                            4275 .around  anop
                                            4276 &$dccexti seta &$dccexti+1
                                            4277          extrn  &m
                                            4278 .getout  anop
                                            4279          mend
00002B70                                    4280+$eye0086    ds    0d                                                    02-DCCCA
00002B70 C4C3C3                             4281+         dc cl3'DCC'                                                    02-DCCCA
00002B73 01                                 4282+         dc xl1'01' format one                                          02-DCCCA
00002B74 00000000                           4283+         dc a(0)                                                        02-DCCCA
00002B78 0000000000000000                   4284+         dc ad(0)                                                       02-DCCCA
00002B80 00000000000000A8                   4285+         dc ad(168)                                                     02-DCCCA
00002B88 0000000000000000                   4286+         dc ad(0)                                                       02-DCCCA
00002B90 0000000000001000                   4287+         dc ad(4096)                                                    02-DCCCA
00002B98 20                                 4288+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002B99 03                                 4289+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002B9A 03                                 4290+         dc al1(3)                                                      02-DCCCA
00002B9B 08                                 4291+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002B9C 00                                 4292+         dc bl.8'00000000'                                              02-DCCCA
00002B9D 000000                             4293+         dc al3(0)                                                      02-DCCCA
00002BA0 0000000000002B52                   4294+         dc ad(@LNAME1458)                                              02-DCCCA
00002BA8                                    4295+         ds 0d                                                          02-DCCCA
00002BA8 0000000000002B70                   4296+         dc ad($eye0086)                                                02-DCCCA
00002BB0 0000000000000000                   4297+         dc ad(0)                                                       02-DCCCA
00002BB8                                    4298+         ds    0d                                                       01-DCCPR
00002BB8                                    4299+rd_kafka_replyq_clear ds 0d                                             01-DCCPR
00002BB8                                    4300+@REGION_1458_1 ds 0h                                                    01-DCCPR
00002BB8 EBEC D008 0024          00000008   4301+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            4302 * ******* End of Prologue
                                            4303 * *
                                            4304 * ***      __memset(replyq,0,sizeof(*replyq));
00002BBE E3F0 1000 0004          00000000   4305          LG    15,0(0,1)
                                            4306 * setting 16 bytes to 0x00
00002BC4 D70F F000 F000 00000000 00000000   4307          XC    0(16,15),0(15)
                                            4308 * ***   }
00002BCA                                    4309 @ret_lab_1458 DS 0H
                                            4310 * * **** Start of Epilogue
                                            4311          DCCEPIL
00002BCA                                    4312+         ds 0h                                                          01-DCCEP
                                                                                                                           Page   90 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4313+* Epilog
                                            4314+* Epilog
00002BCA E3E0 D008 0004          00000008   4315+         lg    14,8(,13) restore the reg                                01-DCCEP
00002BD0 EB1C D020 0004          00000020   4316+         lmg   1,12,32(13)                                              01-DCCEP
00002BD6 07FE                               4317+         br   14                                                        01-DCCEP
                                            4318+* End of Epilog
                                            4319 * * **** End of Epilogue
                                            4320 *
                                            4321 *   DSECT for automatic variables in "rd_kafka_replyq_clear"
                                            4322 *      (FUNCTION #1458)
                                            4323 *
00000000                00000000 000000A8   4324 @AUTO#rd_kafka_replyq_clear DSECT
00000000                                    4325          DS    XL168
                                            4326 *
00002BD8                00000000 00007BF0   4327 @CODE    CSECT
                                            4328 *
                                            4329 *
                                            4330 *
                                            4331 * ....... start of rd_kafka_replyq_destroy
00002BD8                                    4332 @LNAME1460 DS  0H
00002BD8 00000017                           4333          DC    X'00000017'
00002BDC 99846D9281869281                   4334          DC    C'rd_kafka_replyq_destroy'
00002BF3 00                                 4335          DC    X'00'
                                            4336 rd_kafka_replyq_destroy DCCPRLG CINDEX=1460,BASER=12,FRAME=184,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1460
                                            4337          macro
                                            4338          dccextrn &m
                                            4339          gblc    &$dccext(1000)
                                            4340          gbla    &$dccexti
                                            4341          lcla    &i
                                            4342 &$dccext(&$dccexti+1) setc    '&m'
                                            4343 &i       seta    1
                                            4344 .loop    aif    (&i gt &$dccexti).around
                                            4345          aif    ('&$dccext(&i)' eq '&m').getout
                                            4346 &i       seta    &i+1
                                            4347          ago     .loop
                                            4348 .around  anop
                                            4349 &$dccexti seta &$dccexti+1
                                            4350          extrn  &m
                                            4351 .getout  anop
                                            4352          mend
00002BF8                                    4353+$eye0089    ds    0d                                                    02-DCCCA
00002BF8 C4C3C3                             4354+         dc cl3'DCC'                                                    02-DCCCA
00002BFB 01                                 4355+         dc xl1'01' format one                                          02-DCCCA
00002BFC 00000000                           4356+         dc a(0)                                                        02-DCCCA
00002C00 0000000000002C6A                   4357+         dc ad(@PER_1460)                                               02-DCCCA
00002C08 00000000000000B8                   4358+         dc ad(184)                                                     02-DCCCA
00002C10 0000000000000000                   4359+         dc ad(0)                                                       02-DCCCA
00002C18 0000000000001000                   4360+         dc ad(4096)                                                    02-DCCCA
00002C20 20                                 4361+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002C21 03                                 4362+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002C22 03                                 4363+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page   91 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002C23 08                                 4364+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002C24 00                                 4365+         dc bl.8'00000000'                                              02-DCCCA
00002C25 000000                             4366+         dc al3(0)                                                      02-DCCCA
00002C28 0000000000002BD8                   4367+         dc ad(@LNAME1460)                                              02-DCCCA
00002C30                                    4368+         ds 0d                                                          02-DCCCA
00002C30 0000000000002BF8                   4369+         dc ad($eye0089)                                                02-DCCCA
00002C38 0000000000000000                   4370+         dc ad(0)                                                       02-DCCCA
00002C40                                    4371+         ds    0d                                                       01-DCCPR
00002C40                                    4372+rd_kafka_replyq_destroy ds 0d                                           01-DCCPR
00002C40                                    4373+@REGION_1460_1 ds 0h                                                    01-DCCPR
00002C40 EBEC D008 0024          00000008   4374+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002C46 E3E0 D088 0004          00000088   4375+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002C4C E3C0 D090 0004          00000090   4376+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002C52 B904 002E                          4377+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002C56 E3B0 C018 0004          00000018   4378+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002C5C A7EB 00B8               000000B8   4379+         aghi  14,184              increase by frame size               01-DCCPR
00002C60 E3E0 C020 0021          00000020   4380+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002C66 4720 B020               00000020   4381+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002C6A                                    4382+@PER_1460 ds   0h                                                       01-DCCPR
00002C6A EBDE 2080 0024          00000080   4383+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002C70 E3C0 2090 0024          00000090   4384+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002C76 B904 00D2                          4385+         lgr   13,2                set real frame pointer               01-DCCPR
00002C7A B904 00CF                          4386+         lgr   12,15               set base reg                         01-DCCPR
                        00002C40            4387+         using @REGION_1460_1,12                                        01-DCCPR
                                            4388 * ******* End of Prologue
                                            4389 * *
                                            4390 * ***      if (replyq->q)
00002C7E E320 1000 0004          00000000   4391          LG    2,0(0,1)    ; replyq
00002C84 E3F0 2000 0002          00000000   4392          LTG   15,0(0,2)   ; replyq
00002C8A 4780 C06C               00002CAC   4393          BZ    @L445
                                            4394 * ***         rd_kafka_q_destroy0(replyq->q, 0 );
00002C8E E3F0 2000 0004          00000000   4395          LG    15,0(0,2)
00002C94 E3F0 D0A8 0024          000000A8   4396          STG   15,168(0,13)
00002C9A D707 D0B0 D0B0 000000B0 000000B0   4397          XC    176(8,13),176(13)
00002CA0 4110 D0A8               000000A8   4398          LA    1,168(0,13)
00002CA4 E3F0 C0D0 0004          00002D10   4399          LG    15,@lit_1460_124 ; rd_kafka_q_destroy0
00002CAA                                    4400 @@gen_label231 DS    0H
00002CAA 05EF                               4401          BALR  14,15
00002CAC                                    4402 @@gen_label232 DS    0H
00002CAC                                    4403 @L445    DS    0H
                                            4404 * ***   # 772 "C:\asgkafka\librdkafka\src\rdkafka_queue.h"
                                            4405 * ***      rd_kafka_replyq_clear(replyq);
00002CAC E320 D0A8 0024          000000A8   4406          STG   2,168(0,13)
00002CB2 4110 D0A8               000000A8   4407          LA    1,168(0,13)
00002CB6 E3F0 C0D8 0004          00002D18   4408          LG    15,@lit_1460_125 ; rd_kafka_replyq_clear
00002CBC                                    4409 @@gen_label233 DS    0H
00002CBC 05EF                               4410          BALR  14,15
00002CBE                                    4411 @@gen_label234 DS    0H
                                            4412 * ***   }
00002CBE                                    4413 @ret_lab_1460 DS 0H
                                            4414 * * **** Start of Epilogue
                                            4415          DCCEPIL
                                                                                                                           Page   92 
  Active Usings: @REGION_1460_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002CBE                                    4416+         ds 0h                                                          01-DCCEP
                                            4417+* Epilog
00002CBE D707 D088 D088 00000088 00000088   4418+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002CC4 E3D0 D080 0004          00000080   4419+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002CCA E3C0 D090 0004          00000090   4420+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002CD0 E3B0 C018 0004          00000018   4421+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002CD6 E3C0 B010 0021          00000010   4422+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002CDC E3E0 D008 0004          00000008   4423+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002CE2 EB1C D020 0004          00000020   4424+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002CE8 078E                               4425+         bcr 8,14                if same dsab, just return              01-DCCEP
00002CEA E3F0 D010 0024          00000010   4426+         stg 15,16(0,13)         save return code                       01-DCCEP
00002CF0 E300 D018 0024          00000018   4427+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002CF6 E3F0 D090 0004          00000090   4428+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002CFC E3F0 F018 0004          00000018   4429+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002D02 47F0 F040               00000040   4430+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4431+* End of Epilog
                                            4432 * * **** End of Epilogue
00002D08                                    4433          DS    0D
00002D08 000000B8                           4434 @FRAMESIZE_1460 DC F'184'
00002D0C 00000000
00002D10 0000000000001140                   4435 @lit_1460_124 DC AD(rd_kafka_q_destroy0)
00002D18 0000000000002BB8                   4436 @lit_1460_125 DC AD(rd_kafka_replyq_clear)
                                            4437          DROP  12
                                            4438 *
                                            4439 *   DSECT for automatic variables in "rd_kafka_replyq_destroy"
                                            4440 *      (FUNCTION #1460)
                                            4441 *
00000000                00000000 000000A8   4442 @AUTO#rd_kafka_replyq_destroy DSECT
00000000                                    4443          DS    XL168
                                            4444 *
00002D20                00000000 00007BF0   4445 @CODE    CSECT
                                            4446 *
                                            4447 *
                                            4448 *
                                            4449 * ....... start of rd_kafka_replyq_enq
00002D20                                    4450 @LNAME1461 DS  0H
00002D20 00000013                           4451          DC    X'00000013'
00002D24 99846D9281869281                   4452          DC    C'rd_kafka_replyq_enq'
00002D37 00                                 4453          DC    X'00'
                                            4454 rd_kafka_replyq_enq DCCPRLG CINDEX=1461,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1461
                                            4455          macro
                                            4456          dccextrn &m
                                            4457          gblc    &$dccext(1000)
                                            4458          gbla    &$dccexti
                                            4459          lcla    &i
                                            4460 &$dccext(&$dccexti+1) setc    '&m'
                                            4461 &i       seta    1
                                            4462 .loop    aif    (&i gt &$dccexti).around
                                            4463          aif    ('&$dccext(&i)' eq '&m').getout
                                            4464 &i       seta    &i+1
                                            4465          ago     .loop
                                                                                                                           Page   93 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4466 .around  anop
                                            4467 &$dccexti seta &$dccexti+1
                                            4468          extrn  &m
                                            4469 .getout  anop
                                            4470          mend
00002D38                                    4471+$eye0092    ds    0d                                                    02-DCCCA
00002D38 C4C3C3                             4472+         dc cl3'DCC'                                                    02-DCCCA
00002D3B 01                                 4473+         dc xl1'01' format one                                          02-DCCCA
00002D3C 00000000                           4474+         dc a(0)                                                        02-DCCCA
00002D40 0000000000002DAA                   4475+         dc ad(@PER_1461)                                               02-DCCCA
00002D48 00000000000000C0                   4476+         dc ad(192)                                                     02-DCCCA
00002D50 0000000000000000                   4477+         dc ad(0)                                                       02-DCCCA
00002D58 0000000000001000                   4478+         dc ad(4096)                                                    02-DCCCA
00002D60 20                                 4479+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002D61 03                                 4480+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002D62 03                                 4481+         dc al1(3)                                                      02-DCCCA
00002D63 08                                 4482+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002D64 00                                 4483+         dc bl.8'00000000'                                              02-DCCCA
00002D65 000000                             4484+         dc al3(0)                                                      02-DCCCA
00002D68 0000000000002D20                   4485+         dc ad(@LNAME1461)                                              02-DCCCA
00002D70                                    4486+         ds 0d                                                          02-DCCCA
00002D70 0000000000002D38                   4487+         dc ad($eye0092)                                                02-DCCCA
00002D78 0000000000000000                   4488+         dc ad(0)                                                       02-DCCCA
00002D80                                    4489+         ds    0d                                                       01-DCCPR
00002D80                                    4490+rd_kafka_replyq_enq ds 0d                                               01-DCCPR
00002D80                                    4491+@REGION_1461_1 ds 0h                                                    01-DCCPR
00002D80 EBEC D008 0024          00000008   4492+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002D86 E3E0 D088 0004          00000088   4493+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002D8C E3C0 D090 0004          00000090   4494+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002D92 B904 002E                          4495+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002D96 E3B0 C018 0004          00000018   4496+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002D9C A7EB 00C0               000000C0   4497+         aghi  14,192              increase by frame size               01-DCCPR
00002DA0 E3E0 C020 0021          00000020   4498+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002DA6 4720 B020               00000020   4499+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002DAA                                    4500+@PER_1461 ds   0h                                                       01-DCCPR
00002DAA EBDE 2080 0024          00000080   4501+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002DB0 E3C0 2090 0024          00000090   4502+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002DB6 B904 00D2                          4503+         lgr   13,2                set real frame pointer               01-DCCPR
00002DBA B904 00CF                          4504+         lgr   12,15               set base reg                         01-DCCPR
                        00002D80            4505+         using @REGION_1461_1,12                                        01-DCCPR
00002DBE B904 0031                          4506          LGR   3,1         ; ptr to parm area
                                            4507 * ******* End of Prologue
                                            4508 * *
                                            4509 * ***      rd_kafka_q_t *rkq = replyq->q;
00002DC2 E3F0 3000 0004          00000000   4510          LG    15,0(0,3)   ; replyq
00002DC8 E310 3008 0004          00000008   4511          LG    1,8(0,3)    ; rko
00002DCE E320 F000 0004          00000000   4512          LG    2,0(0,15)   ; replyq
                                            4513 * ***      int r;
                                            4514 * ***
                                            4515 * ***      if (version)
00002DD4 E330 3014 0012          00000014   4516          LT    3,20(0,3)   ; version
00002DDA 4780 C080               00002E00   4517          BZ    @L446
                                                                                                                           Page   94 
  Active Usings: @REGION_1461_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4518 * ***         rko->rko_version = version;
00002DDE 5030 101C               0000001C   4519          ST    3,28(0,1)   ; offset of rko_version in rd_kafka_op_s
00002DE2 47F0 C088               00002E08   4520          B     @L447
00002DE8                                    4521          DS    0D
00002DE8 000000C0                           4522 @FRAMESIZE_1461 DC F'192'
00002DEC 00000000
00002DF0 0000000000002030                   4523 @lit_1461_128 DC AD(rd_kafka_q_enq)
00002DF8 0000000000001140                   4524 @lit_1461_129 DC AD(rd_kafka_q_destroy0)
                                            4525 * ***      else
00002E00                                    4526 @L446    DS    0H
                                            4527 * ***         rko->rko_version = replyq->version;
00002E00 5830 F008               00000008   4528          L     3,8(0,15)   ; offset of version in rd_kafka_replyq_s
00002E04 5030 101C               0000001C   4529          ST    3,28(0,1)   ; offset of rko_version in rd_kafka_op_s
00002E08                                    4530 @L447    DS    0H
                                            4531 * ***
                                            4532 * ***
                                            4533 * ***
                                            4534 * ***           replyq->q = ((void *)0);
00002E08 A739 0000               00000000   4535          LGHI  3,0         ; 0
00002E0C E330 F000 0024          00000000   4536          STG   3,0(0,15)   ; replyq
                                            4537 * ***
                                            4538 * ***
                                            4539 * ***   # 807 "C:\asgkafka\librdkafka\src\rdkafka_queue.h"
                                            4540 * ***
                                            4541 * ***
                                            4542 * ***
                                            4543 * ***      r = rd_kafka_q_enq(rkq, rko);
00002E12 E320 D0B0 0024          000000B0   4544          STG   2,176(0,13)
00002E18 E310 D0B8 0024          000000B8   4545          STG   1,184(0,13)
00002E1E 4110 D0B0               000000B0   4546          LA    1,176(0,13)
00002E22 E3F0 C070 0004          00002DF0   4547          LG    15,@lit_1461_128 ; rd_kafka_q_enq
00002E28                                    4548 @@gen_label236 DS    0H
00002E28 05EF                               4549          BALR  14,15
00002E2A                                    4550 @@gen_label237 DS    0H
00002E2A 183F                               4551          LR    3,15
                                            4552 * ***
                                            4553 * ***      rd_kafka_q_destroy0(rkq, 0 );
00002E2C E320 D0B0 0024          000000B0   4554          STG   2,176(0,13)
00002E32 D707 D0B8 D0B8 000000B8 000000B8   4555          XC    184(8,13),184(13)
00002E38 4110 D0B0               000000B0   4556          LA    1,176(0,13)
00002E3C E3F0 C078 0004          00002DF8   4557          LG    15,@lit_1461_129 ; rd_kafka_q_destroy0
00002E42                                    4558 @@gen_label238 DS    0H
00002E42 05EF                               4559          BALR  14,15
00002E44                                    4560 @@gen_label239 DS    0H
                                            4561 * ***
                                            4562 * ***      return r;
00002E44 B914 00F3                          4563          LGFR  15,3
                                            4564 * ***   }
                                            4565 * * **** Start of Epilogue
                                            4566          DCCEPIL
00002E48                                    4567+         ds 0h                                                          01-DCCEP
                                            4568+* Epilog
                                                                                                                           Page   95 
  Active Usings: @REGION_1461_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002E48 D707 D088 D088 00000088 00000088   4569+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002E4E E3D0 D080 0004          00000080   4570+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002E54 E3C0 D090 0004          00000090   4571+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002E5A E3B0 C018 0004          00000018   4572+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002E60 E3C0 B010 0021          00000010   4573+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002E66 E3E0 D008 0004          00000008   4574+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002E6C EB1C D020 0004          00000020   4575+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002E72 078E                               4576+         bcr 8,14                if same dsab, just return              01-DCCEP
00002E74 E3F0 D010 0024          00000010   4577+         stg 15,16(0,13)         save return code                       01-DCCEP
00002E7A E300 D018 0024          00000018   4578+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002E80 E3F0 D090 0004          00000090   4579+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002E86 E3F0 F018 0004          00000018   4580+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002E8C 47F0 F040               00000040   4581+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4582+* End of Epilog
                                            4583 * * **** End of Epilogue
                                            4584          DROP  12
                                            4585 *
                                            4586 *   DSECT for automatic variables in "rd_kafka_replyq_enq"
                                            4587 *      (FUNCTION #1461)
                                            4588 *
00000000                00000000 000000AC   4589 @AUTO#rd_kafka_replyq_enq DSECT
00000000                                    4590          DS    XL168
000000A8                                    4591 rd_kafka_replyq_enq#r#0 DS 1F ; r
                                            4592 *
00002E90                00000000 00007BF0   4593 @CODE    CSECT
                                            4594 *
                                            4595 *
                                            4596 *
                                            4597 * ....... start of rd_kafka_enq_once_destroy0
00002E90                                    4598 @LNAME1475 DS  0H
00002E90 0000001A                           4599          DC    X'0000001A'
00002E94 99846D9281869281                   4600          DC    C'rd_kafka_enq_once_destroy0'
00002EAE 00                                 4601          DC    X'00'
                                            4602 rd_kafka_enq_once_destroy0 DCCPRLG CINDEX=1475,BASER=12,FRAME=200,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1475
                                            4603          macro
                                            4604          dccextrn &m
                                            4605          gblc    &$dccext(1000)
                                            4606          gbla    &$dccexti
                                            4607          lcla    &i
                                            4608 &$dccext(&$dccexti+1) setc    '&m'
                                            4609 &i       seta    1
                                            4610 .loop    aif    (&i gt &$dccexti).around
                                            4611          aif    ('&$dccext(&i)' eq '&m').getout
                                            4612 &i       seta    &i+1
                                            4613          ago     .loop
                                            4614 .around  anop
                                            4615 &$dccexti seta &$dccexti+1
                                            4616          extrn  &m
                                            4617 .getout  anop
                                            4618          mend
00002EB0                                    4619+$eye0095    ds    0d                                                    02-DCCCA
                                                                                                                           Page   96 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002EB0 C4C3C3                             4620+         dc cl3'DCC'                                                    02-DCCCA
00002EB3 01                                 4621+         dc xl1'01' format one                                          02-DCCCA
00002EB4 00000000                           4622+         dc a(0)                                                        02-DCCCA
00002EB8 0000000000002F22                   4623+         dc ad(@PER_1475)                                               02-DCCCA
00002EC0 00000000000000C8                   4624+         dc ad(200)                                                     02-DCCCA
00002EC8 0000000000000000                   4625+         dc ad(0)                                                       02-DCCCA
00002ED0 0000000000001000                   4626+         dc ad(4096)                                                    02-DCCCA
00002ED8 20                                 4627+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002ED9 03                                 4628+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002EDA 03                                 4629+         dc al1(3)                                                      02-DCCCA
00002EDB 08                                 4630+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002EDC 00                                 4631+         dc bl.8'00000000'                                              02-DCCCA
00002EDD 000000                             4632+         dc al3(0)                                                      02-DCCCA
00002EE0 0000000000002E90                   4633+         dc ad(@LNAME1475)                                              02-DCCCA
00002EE8                                    4634+         ds 0d                                                          02-DCCCA
00002EE8 0000000000002EB0                   4635+         dc ad($eye0095)                                                02-DCCCA
00002EF0 0000000000000000                   4636+         dc ad(0)                                                       02-DCCCA
00002EF8                                    4637+         ds    0d                                                       01-DCCPR
00002EF8                                    4638+rd_kafka_enq_once_destroy0 ds 0d                                        01-DCCPR
00002EF8                                    4639+@REGION_1475_1 ds 0h                                                    01-DCCPR
00002EF8 EBEC D008 0024          00000008   4640+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002EFE E3E0 D088 0004          00000088   4641+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002F04 E3C0 D090 0004          00000090   4642+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002F0A B904 002E                          4643+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002F0E E3B0 C018 0004          00000018   4644+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002F14 A7EB 00C8               000000C8   4645+         aghi  14,200              increase by frame size               01-DCCPR
00002F18 E3E0 C020 0021          00000020   4646+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002F1E 4720 B020               00000020   4647+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002F22                                    4648+@PER_1475 ds   0h                                                       01-DCCPR
00002F22 EBDE 2080 0024          00000080   4649+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002F28 E3C0 2090 0024          00000090   4650+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002F2E B904 00D2                          4651+         lgr   13,2                set real frame pointer               01-DCCPR
00002F32 B904 00CF                          4652+         lgr   12,15               set base reg                         01-DCCPR
                        00002EF8            4653+         using @REGION_1475_1,12                                        01-DCCPR
                                            4654 * ******* End of Prologue
                                            4655 * *
00002F36 E320 1000 0004          00000000   4656          LG    2,0(0,1)    ; eonce
                                            4657 * ***
                                            4658 * ***
                                            4659 * ***
                                            4660 * ***           ((!eonce->rko) ? (void)0 : __assert(__func__, "C:\\asg\
                                            4661 * kafka\\librdkafka\\src\\rdkafka_queue.h", 946, "!eonce->rko"));
00002F3C E3F0 2030 0002          00000030   4662          LTG   15,48(0,2)  ; offset of rko in rd_kafka_enq_once_s
00002F42 4780 C08A               00002F82   4663          BZ    @L455
00002F46                                    4664 @L454    DS    0H
00002F46 E3F0 C1A0 0004          00003098   4665          LG    15,@lit_1475_131
00002F4C 41F0 F086               00000086   4666          LA    15,134(0,15)
00002F50 E3F0 D0A8 0024          000000A8   4667          STG   15,168(0,13)
00002F56 E3F0 C198 0004          00003090   4668          LG    15,@lit_1475_132
00002F5C 4110 F046               00000046   4669          LA    1,70(0,15)
00002F60 E310 D0B0 0024          000000B0   4670          STG   1,176(0,13)
00002F66 E548 D0B8 03B2          000000B8   4671          MVGHI 184(13),946
                                                                                                                           Page   97 
  Active Usings: @REGION_1475_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002F6C 41F0 F08E               0000008E   4672          LA    15,142(0,15)
00002F70 E3F0 D0C0 0024          000000C0   4673          STG   15,192(0,13)
00002F76 4110 D0A8               000000A8   4674          LA    1,168(0,13)
00002F7A E3F0 C190 0004          00003088   4675          LG    15,@lit_1475_133 ; __assert
00002F80                                    4676 @@gen_label241 DS    0H
00002F80 05EF                               4677          BALR  14,15
00002F82                                    4678 @@gen_label242 DS    0H
00002F82                                    4679 @L455    DS    0H
                                            4680 * ***           ((!eonce->replyq.q) ? (void)0 : __assert(__func__, "C:\
                                            4681 * \\asgkafka\\librdkafka\\src\\rdkafka_queue.h", 947, "!eonce->replyq.\
                                            4682 * q"));
00002F82 E3F0 2038 0002          00000038   4683          LTG   15,56(0,2)  ; offset of replyq in rd_kafka_enq_once_s
00002F88 4780 C0D0               00002FC8   4684          BZ    @L457
00002F8C                                    4685 @L456    DS    0H
00002F8C E3F0 C1A0 0004          00003098   4686          LG    15,@lit_1475_131
00002F92 41F0 F086               00000086   4687          LA    15,134(0,15)
00002F96 E3F0 D0A8 0024          000000A8   4688          STG   15,168(0,13)
00002F9C E3F0 C198 0004          00003090   4689          LG    15,@lit_1475_132
00002FA2 4110 F046               00000046   4690          LA    1,70(0,15)
00002FA6 E310 D0B0 0024          000000B0   4691          STG   1,176(0,13)
00002FAC E548 D0B8 03B3          000000B8   4692          MVGHI 184(13),947
00002FB2 41F0 F09A               0000009A   4693          LA    15,154(0,15)
00002FB6 E3F0 D0C0 0024          000000C0   4694          STG   15,192(0,13)
00002FBC 4110 D0A8               000000A8   4695          LA    1,168(0,13)
00002FC0 E3F0 C190 0004          00003088   4696          LG    15,@lit_1475_133 ; __assert
00002FC6                                    4697 @@gen_label244 DS    0H
00002FC6 05EF                               4698          BALR  14,15
00002FC8                                    4699 @@gen_label245 DS    0H
00002FC8                                    4700 @L457    DS    0H
                                            4701 * ***
                                            4702 * ***
                                            4703 * ***
                                            4704 * ***           ((eonce->refcnt == 0) ? (void)0 : __assert(__func__, "\
                                            4705 * C:\\asgkafka\\librdkafka\\src\\rdkafka_queue.h", 951, "eonce->refcnt\
                                            4706 *  == 0"));
00002FC8 E55C 2028 0000          00000028   4707          CHSI  40(2),0
00002FCE 4780 C116               0000300E   4708          BE    @L459
00002FD2                                    4709 @L458    DS    0H
00002FD2 E3F0 C1A0 0004          00003098   4710          LG    15,@lit_1475_131
00002FD8 41F0 F086               00000086   4711          LA    15,134(0,15)
00002FDC E3F0 D0A8 0024          000000A8   4712          STG   15,168(0,13)
00002FE2 E3F0 C198 0004          00003090   4713          LG    15,@lit_1475_132
00002FE8 4110 F046               00000046   4714          LA    1,70(0,15)
00002FEC E310 D0B0 0024          000000B0   4715          STG   1,176(0,13)
00002FF2 E548 D0B8 03B7          000000B8   4716          MVGHI 184(13),951
00002FF8 41F0 F0AC               000000AC   4717          LA    15,172(0,15)
00002FFC E3F0 D0C0 0024          000000C0   4718          STG   15,192(0,13)
00003002 4110 D0A8               000000A8   4719          LA    1,168(0,13)
00003006 E3F0 C190 0004          00003088   4720          LG    15,@lit_1475_133 ; __assert
0000300C                                    4721 @@gen_label247 DS    0H
0000300C 05EF                               4722          BALR  14,15
0000300E                                    4723 @@gen_label248 DS    0H
                                                                                                                           Page   98 
  Active Usings: @REGION_1475_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000300E                                    4724 @L459    DS    0H
                                            4725 * ***
                                            4726 * ***           mtx_destroy(&eonce->lock);
0000300E E320 D0A8 0024          000000A8   4727          STG   2,168(0,13)
00003014 4110 D0A8               000000A8   4728          LA    1,168(0,13)
00003018 E3F0 C1A8 0004          000030A0   4729          LG    15,@lit_1475_140 ; mtx_destroy
0000301E                                    4730 @@gen_label249 DS    0H
0000301E 05EF                               4731          BALR  14,15
00003020                                    4732 @@gen_label250 DS    0H
                                            4733 * ***           rd_free(eonce);
00003020 E320 D0A8 0024          000000A8   4734          STG   2,168(0,13)
00003026 4110 D0A8               000000A8   4735          LA    1,168(0,13)
0000302A E3F0 C1B0 0004          000030A8   4736          LG    15,@lit_1475_141 ; rd_free
00003030                                    4737 @@gen_label251 DS    0H
00003030 05EF                               4738          BALR  14,15
00003032                                    4739 @@gen_label252 DS    0H
                                            4740 * ***   }
00003032                                    4741 @ret_lab_1475 DS 0H
                                            4742 * * **** Start of Epilogue
                                            4743          DCCEPIL
00003032                                    4744+         ds 0h                                                          01-DCCEP
                                            4745+* Epilog
00003032 D707 D088 D088 00000088 00000088   4746+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003038 E3D0 D080 0004          00000080   4747+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000303E E3C0 D090 0004          00000090   4748+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003044 E3B0 C018 0004          00000018   4749+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000304A E3C0 B010 0021          00000010   4750+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003050 E3E0 D008 0004          00000008   4751+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003056 EB1C D020 0004          00000020   4752+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000305C 078E                               4753+         bcr 8,14                if same dsab, just return              01-DCCEP
0000305E E3F0 D010 0024          00000010   4754+         stg 15,16(0,13)         save return code                       01-DCCEP
00003064 E300 D018 0024          00000018   4755+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000306A E3F0 D090 0004          00000090   4756+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003070 E3F0 F018 0004          00000018   4757+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003076 47F0 F040               00000040   4758+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4759+* End of Epilog
                                            4760 * * **** End of Epilogue
00003080                                    4761          DS    0D
00003080 000000C8                           4762 @FRAMESIZE_1475 DC F'200'
00003084 00000000
00003088 0000000000000000                   4763 @lit_1475_133 DC AD(__assert)
00003090 0000000000007DFE                   4764 @lit_1475_132 DC AD(@strings@)
00003098 0000000000007BF0                   4765 @lit_1475_131 DC AD(@DATA)
000030A0 0000000000000000                   4766 @lit_1475_140 DC AD(mtx_destroy)
000030A8 00000000000006F8                   4767 @lit_1475_141 DC AD(rd_free)
                                            4768          DROP  12
                                            4769 *
                                            4770 *   DSECT for automatic variables in "rd_kafka_enq_once_destroy0"
                                            4771 *      (FUNCTION #1475)
                                            4772 *
00000000                00000000 000000A8   4773 @AUTO#rd_kafka_enq_once_destroy0 DSECT
00000000                                    4774          DS    XL168
                                                                                                                           Page   99 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4775 *
000030B0                00000000 00007BF0   4776 @CODE    CSECT
                                            4777 *
                                            4778 *
                                            4779 *
                                            4780 * ....... start of rd_kafka_enq_once_trigger
000030B0                                    4781 @LNAME1480 DS  0H
000030B0 00000019                           4782          DC    X'00000019'
000030B4 99846D9281869281                   4783          DC    C'rd_kafka_enq_once_trigger'
000030CD 00                                 4784          DC    X'00'
                                            4785 rd_kafka_enq_once_trigger DCCPRLG CINDEX=1480,BASER=12,FRAME=216,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1480
                                            4786          macro
                                            4787          dccextrn &m
                                            4788          gblc    &$dccext(1000)
                                            4789          gbla    &$dccexti
                                            4790          lcla    &i
                                            4791 &$dccext(&$dccexti+1) setc    '&m'
                                            4792 &i       seta    1
                                            4793 .loop    aif    (&i gt &$dccexti).around
                                            4794          aif    ('&$dccext(&i)' eq '&m').getout
                                            4795 &i       seta    &i+1
                                            4796          ago     .loop
                                            4797 .around  anop
                                            4798 &$dccexti seta &$dccexti+1
                                            4799          extrn  &m
                                            4800 .getout  anop
                                            4801          mend
000030D0                                    4802+$eye0098    ds    0d                                                    02-DCCCA
000030D0 C4C3C3                             4803+         dc cl3'DCC'                                                    02-DCCCA
000030D3 01                                 4804+         dc xl1'01' format one                                          02-DCCCA
000030D4 00000000                           4805+         dc a(0)                                                        02-DCCCA
000030D8 0000000000003142                   4806+         dc ad(@PER_1480)                                               02-DCCCA
000030E0 00000000000000D8                   4807+         dc ad(216)                                                     02-DCCCA
000030E8 0000000000000000                   4808+         dc ad(0)                                                       02-DCCCA
000030F0 0000000000001000                   4809+         dc ad(4096)                                                    02-DCCCA
000030F8 20                                 4810+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000030F9 03                                 4811+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000030FA 03                                 4812+         dc al1(3)                                                      02-DCCCA
000030FB 08                                 4813+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000030FC 00                                 4814+         dc bl.8'00000000'                                              02-DCCCA
000030FD 000000                             4815+         dc al3(0)                                                      02-DCCCA
00003100 00000000000030B0                   4816+         dc ad(@LNAME1480)                                              02-DCCCA
00003108                                    4817+         ds 0d                                                          02-DCCCA
00003108 00000000000030D0                   4818+         dc ad($eye0098)                                                02-DCCCA
00003110 0000000000000000                   4819+         dc ad(0)                                                       02-DCCCA
00003118                                    4820+         ds    0d                                                       01-DCCPR
00003118                                    4821+rd_kafka_enq_once_trigger ds 0d                                         01-DCCPR
00003118                                    4822+@REGION_1480_1 ds 0h                                                    01-DCCPR
00003118 EBEC D008 0024          00000008   4823+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000311E E3E0 D088 0004          00000088   4824+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003124 E3C0 D090 0004          00000090   4825+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
                                                                                                                           Page  100 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000312A B904 002E                          4826+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000312E E3B0 C018 0004          00000018   4827+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003134 A7EB 00D8               000000D8   4828+         aghi  14,216              increase by frame size               01-DCCPR
00003138 E3E0 C020 0021          00000020   4829+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000313E 4720 B020               00000020   4830+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003142                                    4831+@PER_1480 ds   0h                                                       01-DCCPR
00003142 EBDE 2080 0024          00000080   4832+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003148 E3C0 2090 0024          00000090   4833+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000314E B904 00D2                          4834+         lgr   13,2                set real frame pointer               01-DCCPR
00003152 B904 00CF                          4835+         lgr   12,15               set base reg                         01-DCCPR
                        00003118            4836+         using @REGION_1480_1,12                                        01-DCCPR
00003156 B904 0051                          4837          LGR   5,1         ; ptr to parm area
                                            4838 * ******* End of Prologue
                                            4839 * *
0000315A E330 5000 0004          00000000   4840          LG    3,0(0,5)    ; eonce
                                            4841 * ***           int do_destroy;
                                            4842 * ***           rd_kafka_op_t *rko = ((void *)0);
00003160 A769 0000               00000000   4843          LGHI  6,0         ; 0
00003164 B904 0026                          4844          LGR   2,6         ; rko
                                            4845 * ***           rd_kafka_replyq_t replyq = {};
                                            4846 * setting 16 bytes to 0x00
00003168 D70F D0A8 D0A8 000000A8 000000A8   4847          XC    168(16,13),168(13)
                                            4848 * ***
                                            4849 * ***           mtx_lock(&eonce->lock);
0000316E E330 D0B8 0024          000000B8   4850          STG   3,184(0,13)
00003174 4110 D0B8               000000B8   4851          LA    1,184(0,13)
00003178 E3F0 C1C8 0004          000032E0   4852          LG    15,@lit_1480_144 ; mtx_lock
0000317E                                    4853 @@gen_label253 DS    0H
0000317E 05EF                               4854          BALR  14,15
00003180                                    4855 @@gen_label254 DS    0H
                                            4856 * ***
                                            4857 * ***           ((eonce->refcnt > 0) ? (void)0 : __assert(__func__, "C\
                                            4858 * :\\asgkafka\\librdkafka\\src\\rdkafka_queue.h", 1061, "eonce->refcnt\
                                            4859 *  > 0"));
00003180 E55C 3028 0000          00000028   4860          CHSI  40(3),0
00003186 4720 C0AE               000031C6   4861          BH    @L470
0000318A                                    4862 @L469    DS    0H
0000318A E3F0 C1E0 0004          000032F8   4863          LG    15,@lit_1480_145
00003190 41F0 F0E4               000000E4   4864          LA    15,228(0,15)
00003194 E3F0 D0B8 0024          000000B8   4865          STG   15,184(0,13)
0000319A E3F0 C1D8 0004          000032F0   4866          LG    15,@lit_1480_146
000031A0 4110 F046               00000046   4867          LA    1,70(0,15)
000031A4 E310 D0C0 0024          000000C0   4868          STG   1,192(0,13)
000031AA E548 D0C8 0425          000000C8   4869          MVGHI 200(13),1061
000031B0 41F0 F0C0               000000C0   4870          LA    15,192(0,15)
000031B4 E3F0 D0D0 0024          000000D0   4871          STG   15,208(0,13)
000031BA 4110 D0B8               000000B8   4872          LA    1,184(0,13)
000031BE E3F0 C1D0 0004          000032E8   4873          LG    15,@lit_1480_147 ; __assert
000031C4                                    4874 @@gen_label256 DS    0H
000031C4 05EF                               4875          BALR  14,15
000031C6                                    4876 @@gen_label257 DS    0H
000031C6                                    4877 @L470    DS    0H
                                                                                                                           Page  101 
  Active Usings: @REGION_1480_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4878 * ***           eonce->refcnt--;
000031C6 58F0 3028               00000028   4879          L     15,40(0,3)
000031CA A7FA FFFF               0000FFFF   4880          AHI   15,-1
000031CE 50F0 3028               00000028   4881          ST    15,40(0,3)
                                            4882 * ***           do_destroy = eonce->refcnt == 0;
000031D2 A7F8 0000               00000000   4883          LHI   15,0        ; 0
000031D6 57F0 3028               00000028   4884          X     15,40(0,3)
000031DA 104F                               4885          LPR   4,15
000031DC A74A FFFF               0000FFFF   4886          AHI   4,-1
000031E0 8840 001F               0000001F   4887          SRL   4,31(0)
                                            4888 * ***
                                            4889 * ***           if (eonce->rko) {
000031E4 E3F0 3030 0002          00000030   4890          LTG   15,48(0,3)  ; offset of rko in rd_kafka_enq_once_s
000031EA 4780 C0FE               00003216   4891          BZ    @L471
                                            4892 * ***
                                            4893 * ***   # 1072 "C:\asgkafka\librdkafka\src\rdkafka_queue.h"
                                            4894 * ***                   rko = eonce->rko;
000031EE E320 3030 0004          00000030   4895          LG    2,48(0,3)   ; offset of rko in rd_kafka_enq_once_s
                                            4896 * ***                   replyq = eonce->replyq;
000031F4 D20F D0A8 3038 000000A8 00000038   4897          MVC   168(16,13),56(3)
                                            4898 * ***
                                            4899 * ***                   eonce->rko = ((void *)0);
000031FA E360 3030 0024          00000030   4900          STG   6,48(0,3)   ; offset of rko in rd_kafka_enq_once_s
                                            4901 * ***                   rd_kafka_replyq_clear(&eonce->replyq);
00003200 41F0 3038               00000038   4902          LA    15,56(0,3)
00003204 E3F0 D0B8 0024          000000B8   4903          STG   15,184(0,13)
0000320A 4110 D0B8               000000B8   4904          LA    1,184(0,13)
0000320E E3F0 C1E8 0004          00003300   4905          LG    15,@lit_1480_150 ; rd_kafka_replyq_clear
00003214                                    4906 @@gen_label259 DS    0H
00003214 05EF                               4907          BALR  14,15
00003216                                    4908 @@gen_label260 DS    0H
                                            4909 * ***
                                            4910 * ***
                                            4911 * ***           }
00003216                                    4912 @L471    DS    0H
                                            4913 * ***           mtx_unlock(&eonce->lock);
00003216 E330 D0B8 0024          000000B8   4914          STG   3,184(0,13)
0000321C 4110 D0B8               000000B8   4915          LA    1,184(0,13)
00003220 E3F0 C1F0 0004          00003308   4916          LG    15,@lit_1480_151 ; mtx_unlock
00003226                                    4917 @@gen_label261 DS    0H
00003226 05EF                               4918          BALR  14,15
00003228                                    4919 @@gen_label262 DS    0H
                                            4920 * ***
                                            4921 * ***           if (do_destroy) {
00003228 1244                               4922          LTR   4,4
0000322A 4780 C128               00003240   4923          BZ    @L472
                                            4924 * ***
                                            4925 * ***                   rd_kafka_enq_once_destroy0(eonce);
0000322E E330 D0B8 0024          000000B8   4926          STG   3,184(0,13)
00003234 4110 D0B8               000000B8   4927          LA    1,184(0,13)
00003238 E3F0 C1F8 0004          00003310   4928          LG    15,@lit_1480_152 ; rd_kafka_enq_once_destroy0
0000323E                                    4929 @@gen_label264 DS    0H
                                                                                                                           Page  102 
  Active Usings: @REGION_1480_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000323E 05EF                               4930          BALR  14,15
00003240                                    4931 @@gen_label265 DS    0H
                                            4932 * ***           }
00003240                                    4933 @L472    DS    0H
                                            4934 * ***
                                            4935 * ***           if (rko) {
00003240 B902 00F2                          4936          LTGR  15,2
00003244 4780 C176               0000328E   4937          BZ    @L473
                                            4938 * ***                   rko->rko_err = err;
00003248 58F0 500C               0000000C   4939          L     15,12(0,5)  ; err
0000324C 50F0 2020               00000020   4940          ST    15,32(0,2)  ; offset of rko_err in rd_kafka_op_s
                                            4941 * ***                   rd_kafka_replyq_enq(&replyq, rko, replyq.versi\
                                            4942 * on);
00003250 41F0 D0A8               000000A8   4943          LA    15,168(0,13)
00003254 E3F0 D0B8 0024          000000B8   4944          STG   15,184(0,13)
0000325A E320 D0C0 0024          000000C0   4945          STG   2,192(0,13)
00003260 E3F0 D0B0 0014          000000B0   4946          LGF   15,176(0,13)
00003266 E3F0 D0C8 0024          000000C8   4947          STG   15,200(0,13)
0000326C 4110 D0B8               000000B8   4948          LA    1,184(0,13)
00003270 E3F0 C200 0004          00003318   4949          LG    15,@lit_1480_153 ; rd_kafka_replyq_enq
00003276                                    4950 @@gen_label267 DS    0H
00003276 05EF                               4951          BALR  14,15
00003278                                    4952 @@gen_label268 DS    0H
                                            4953 * ***                   rd_kafka_replyq_destroy(&replyq);
00003278 41F0 D0A8               000000A8   4954          LA    15,168(0,13)
0000327C E3F0 D0B8 0024          000000B8   4955          STG   15,184(0,13)
00003282 4110 D0B8               000000B8   4956          LA    1,184(0,13)
00003286 E3F0 C208 0004          00003320   4957          LG    15,@lit_1480_154 ; rd_kafka_replyq_destroy
0000328C                                    4958 @@gen_label269 DS    0H
0000328C 05EF                               4959          BALR  14,15
0000328E                                    4960 @@gen_label270 DS    0H
                                            4961 * ***           }
0000328E                                    4962 @L473    DS    0H
                                            4963 * ***   }
0000328E                                    4964 @ret_lab_1480 DS 0H
                                            4965 * * **** Start of Epilogue
                                            4966          DCCEPIL
0000328E                                    4967+         ds 0h                                                          01-DCCEP
                                            4968+* Epilog
0000328E D707 D088 D088 00000088 00000088   4969+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003294 E3D0 D080 0004          00000080   4970+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000329A E3C0 D090 0004          00000090   4971+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000032A0 E3B0 C018 0004          00000018   4972+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000032A6 E3C0 B010 0021          00000010   4973+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000032AC E3E0 D008 0004          00000008   4974+         lg  14,8(0,13)          load up return address                 01-DCCEP
000032B2 EB1C D020 0004          00000020   4975+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000032B8 078E                               4976+         bcr 8,14                if same dsab, just return              01-DCCEP
000032BA E3F0 D010 0024          00000010   4977+         stg 15,16(0,13)         save return code                       01-DCCEP
000032C0 E300 D018 0024          00000018   4978+         stg 0,24(0,13)          save more return code                  01-DCCEP
000032C6 E3F0 D090 0004          00000090   4979+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000032CC E3F0 F018 0004          00000018   4980+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000032D2 47F0 F040               00000040   4981+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page  103 
  Active Usings: @REGION_1480_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4982+* End of Epilog
                                            4983 * * **** End of Epilogue
000032D8                                    4984          DS    0D
000032D8 000000D8                           4985 @FRAMESIZE_1480 DC F'216'
000032DC 00000000
000032E0 0000000000000000                   4986 @lit_1480_144 DC AD(mtx_lock)
000032E8 0000000000000000                   4987 @lit_1480_147 DC AD(__assert)
000032F0 0000000000007DFE                   4988 @lit_1480_146 DC AD(@strings@)
000032F8 0000000000007BF0                   4989 @lit_1480_145 DC AD(@DATA)
00003300 0000000000002BB8                   4990 @lit_1480_150 DC AD(rd_kafka_replyq_clear)
00003308 0000000000000000                   4991 @lit_1480_151 DC AD(mtx_unlock)
00003310 0000000000002EF8                   4992 @lit_1480_152 DC AD(rd_kafka_enq_once_destroy0)
00003318 0000000000002D80                   4993 @lit_1480_153 DC AD(rd_kafka_replyq_enq)
00003320 0000000000002C40                   4994 @lit_1480_154 DC AD(rd_kafka_replyq_destroy)
                                            4995          DROP  12
                                            4996 *
                                            4997 *   DSECT for automatic variables in "rd_kafka_enq_once_trigger"
                                            4998 *      (FUNCTION #1480)
                                            4999 *
00000000                00000000 000000B8   5000 @AUTO#rd_kafka_enq_once_trigger DSECT
00000000                                    5001          DS    XL168
000000A8                                    5002 rd_kafka_enq_once_trigger#replyq#0 DS 16XL1 ; replyq
000000B8                000000B8 000000A8   5003          ORG   @AUTO#rd_kafka_enq_once_trigger+168
000000A8                                    5004 rd_kafka_enq_once_trigger#do_destroy#0 DS 1F ; do_destroy
                                            5005 *
00003328                00000000 00007BF0   5006 @CODE    CSECT
                                            5007 *
                                            5008 *
                                            5009 *
                                            5010 * ....... start of rd_kafka_op_version_outdated
00003328                                    5011 @LNAME1863 DS  0H
00003328 0000001C                           5012          DC    X'0000001C'
0000332C 99846D9281869281                   5013          DC    C'rd_kafka_op_version_outdated'
00003348 00                                 5014          DC    X'00'
                                            5015 rd_kafka_op_version_outdated DCCPRLG CINDEX=1863,BASER=12,FRAME=176,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1863
                                            5016          macro
                                            5017          dccextrn &m
                                            5018          gblc    &$dccext(1000)
                                            5019          gbla    &$dccexti
                                            5020          lcla    &i
                                            5021 &$dccext(&$dccexti+1) setc    '&m'
                                            5022 &i       seta    1
                                            5023 .loop    aif    (&i gt &$dccexti).around
                                            5024          aif    ('&$dccext(&i)' eq '&m').getout
                                            5025 &i       seta    &i+1
                                            5026          ago     .loop
                                            5027 .around  anop
                                            5028 &$dccexti seta &$dccexti+1
                                            5029          extrn  &m
                                            5030 .getout  anop
                                            5031          mend
                                                                                                                           Page  104 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003350                                    5032+$eye0101    ds    0d                                                    02-DCCCA
00003350 C4C3C3                             5033+         dc cl3'DCC'                                                    02-DCCCA
00003353 01                                 5034+         dc xl1'01' format one                                          02-DCCCA
00003354 00000000                           5035+         dc a(0)                                                        02-DCCCA
00003358 00000000000033C2                   5036+         dc ad(@PER_1863)                                               02-DCCCA
00003360 00000000000000B0                   5037+         dc ad(176)                                                     02-DCCCA
00003368 0000000000000000                   5038+         dc ad(0)                                                       02-DCCCA
00003370 0000000000001000                   5039+         dc ad(4096)                                                    02-DCCCA
00003378 20                                 5040+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003379 03                                 5041+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000337A 03                                 5042+         dc al1(3)                                                      02-DCCCA
0000337B 08                                 5043+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000337C 00                                 5044+         dc bl.8'00000000'                                              02-DCCCA
0000337D 000000                             5045+         dc al3(0)                                                      02-DCCCA
00003380 0000000000003328                   5046+         dc ad(@LNAME1863)                                              02-DCCCA
00003388                                    5047+         ds 0d                                                          02-DCCCA
00003388 0000000000003350                   5048+         dc ad($eye0101)                                                02-DCCCA
00003390 0000000000000000                   5049+         dc ad(0)                                                       02-DCCCA
00003398                                    5050+         ds    0d                                                       01-DCCPR
00003398                                    5051+rd_kafka_op_version_outdated ds 0d                                      01-DCCPR
00003398                                    5052+@REGION_1863_1 ds 0h                                                    01-DCCPR
00003398 EBEC D008 0024          00000008   5053+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000339E E3E0 D088 0004          00000088   5054+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000033A4 E3C0 D090 0004          00000090   5055+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000033AA B904 002E                          5056+         lgr   2,14                copy addr of our savearea            01-DCCPR
000033AE E3B0 C018 0004          00000018   5057+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000033B4 A7EB 00B0               000000B0   5058+         aghi  14,176              increase by frame size               01-DCCPR
000033B8 E3E0 C020 0021          00000020   5059+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000033BE 4720 B020               00000020   5060+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000033C2                                    5061+@PER_1863 ds   0h                                                       01-DCCPR
000033C2 EBDE 2080 0024          00000080   5062+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000033C8 E3C0 2090 0024          00000090   5063+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000033CE B904 00D2                          5064+         lgr   13,2                set real frame pointer               01-DCCPR
000033D2 B904 00CF                          5065+         lgr   12,15               set base reg                         01-DCCPR
                        00003398            5066+         using @REGION_1863_1,12                                        01-DCCPR
                                            5067 * ******* End of Prologue
                                            5068 * *
                                            5069 * ***      if (!rko->rko_version)
000033D6 E3F0 1000 0004          00000000   5070          LG    15,0(0,1)   ; rko
000033DC E320 F01C 0012          0000001C   5071          LT    2,28(0,15)  ; offset of rko_version in rd_kafka_op_s
000033E2 4770 C068               00003400   5072          BNZ   @L588
                                            5073 * ***         return 0;
000033E6 A7F9 0000               00000000   5074          LGHI  15,0        ; 0
000033EA 47F0 C0D8               00003470   5075          B     @ret_lab_1863
000033F0                                    5076          DS    0D
000033F0 000000B0                           5077 @FRAMESIZE_1863 DC F'176'
000033F4 00000000
000033F8 00000000000001A8                   5078 @lit_1863_157 DC AD(rd_atomic32_get)
00003400                                    5079 @L588    DS    0H
                                            5080 * ***
                                            5081 * ***      if (version)
00003400 E310 100C 0012          0000000C   5082          LT    1,12(0,1)   ; version
                                                                                                                           Page  105 
  Active Usings: @REGION_1863_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003406 4780 C090               00003428   5083          BZ    @L589
                                            5084 * ***         return rko->rko_version < version;
0000340A 58F0 F01C               0000001C   5085          L     15,28(0,15) ; offset of rko_version in rd_kafka_op_s
0000340E 19F1                               5086          CR    15,1
00003410 47B0 C084               0000341C   5087          BNL   @@gen_label273
00003414 A7F8 0001               00000001   5088          LHI   15,1
00003418 47F0 C088               00003420   5089          B     @@gen_label274
0000341C                                    5090 @@gen_label273 DS 0H
0000341C A7F8 0000               00000000   5091          LHI   15,0
00003420                                    5092 @@gen_label274 DS 0H
00003420 B914 00FF                          5093          LGFR  15,15
00003424 47F0 C0D8               00003470   5094          B     @ret_lab_1863
00003428                                    5095 @L589    DS    0H
                                            5096 * ***
                                            5097 * ***      if (rko->rko_rktp)
00003428 E310 F038 0002          00000038   5098          LTG   1,56(0,15)  ; offset of rko_rktp in rd_kafka_op_s
0000342E 4780 C0D4               0000346C   5099          BZ    @L590
                                            5100 * ***         return rko->rko_version <
00003432 5820 F01C               0000001C   5101          L     2,28(0,15)  ; offset of rko_version in rd_kafka_op_s
                                            5102 * ***            rd_atomic32_get(&rko->rko_rktp->rktp_version);
00003436 E3F0 F038 0004          00000038   5103          LG    15,56(0,15) ; offset of rko_rktp in rd_kafka_op_s
0000343C 41F0 F1B0               000001B0   5104          LA    15,432(0,15)
00003440 E3F0 D0A8 0024          000000A8   5105          STG   15,168(0,13)
00003446 4110 D0A8               000000A8   5106          LA    1,168(0,13)
0000344A E3F0 C060 0004          000033F8   5107          LG    15,@lit_1863_157 ; rd_atomic32_get
00003450                                    5108 @@gen_label276 DS    0H
00003450 05EF                               5109          BALR  14,15
00003452                                    5110 @@gen_label277 DS    0H
00003452 192F                               5111          CR    2,15
00003454 47B0 C0C8               00003460   5112          BNL   @@gen_label278
00003458 A7F8 0001               00000001   5113          LHI   15,1
0000345C 47F0 C0CC               00003464   5114          B     @@gen_label279
00003460                                    5115 @@gen_label278 DS 0H
00003460 A7F8 0000               00000000   5116          LHI   15,0
00003464                                    5117 @@gen_label279 DS 0H
00003464 B914 00FF                          5118          LGFR  15,15
00003468 47F0 C0D8               00003470   5119          B     @ret_lab_1863
0000346C                                    5120 @L590    DS    0H
                                            5121 * ***      return 0;
0000346C A7F9 0000               00000000   5122          LGHI  15,0        ; 0
                                            5123 * ***   }
00003470                                    5124 @ret_lab_1863 DS 0H
                                            5125 * * **** Start of Epilogue
                                            5126          DCCEPIL
00003470                                    5127+         ds 0h                                                          01-DCCEP
                                            5128+* Epilog
00003470 D707 D088 D088 00000088 00000088   5129+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003476 E3D0 D080 0004          00000080   5130+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000347C E3C0 D090 0004          00000090   5131+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003482 E3B0 C018 0004          00000018   5132+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003488 E3C0 B010 0021          00000010   5133+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000348E E3E0 D008 0004          00000008   5134+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page  106 
  Active Usings: @REGION_1863_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003494 EB1C D020 0004          00000020   5135+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000349A 078E                               5136+         bcr 8,14                if same dsab, just return              01-DCCEP
0000349C E3F0 D010 0024          00000010   5137+         stg 15,16(0,13)         save return code                       01-DCCEP
000034A2 E300 D018 0024          00000018   5138+         stg 0,24(0,13)          save more return code                  01-DCCEP
000034A8 E3F0 D090 0004          00000090   5139+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000034AE E3F0 F018 0004          00000018   5140+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000034B4 47F0 F040               00000040   5141+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5142+* End of Epilog
                                            5143 * * **** End of Epilogue
                                            5144          DROP  12
                                            5145 *
                                            5146 *   DSECT for automatic variables in "rd_kafka_op_version_outdated"
                                            5147 *      (FUNCTION #1863)
                                            5148 *
00000000                00000000 000000A8   5149 @AUTO#rd_kafka_op_version_outdated DSECT
00000000                                    5150          DS    XL168
                                            5151 *
000034B8                00000000 00007BF0   5152 @CODE    CSECT
                                            5153 *
                                            5154 *
                                            5155 *
                                            5156 * ....... start of rd_kafka_app_poll_blocking
000034B8                                    5157 @LNAME1914 DS  0H
000034B8 0000001A                           5158          DC    X'0000001A'
000034BC 99846D9281869281                   5159          DC    C'rd_kafka_app_poll_blocking'
000034D6 00                                 5160          DC    X'00'
                                            5161 rd_kafka_app_poll_blocking DCCPRLG CINDEX=1914,BASER=12,FRAME=184,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1914
                                            5162          macro
                                            5163          dccextrn &m
                                            5164          gblc    &$dccext(1000)
                                            5165          gbla    &$dccexti
                                            5166          lcla    &i
                                            5167 &$dccext(&$dccexti+1) setc    '&m'
                                            5168 &i       seta    1
                                            5169 .loop    aif    (&i gt &$dccexti).around
                                            5170          aif    ('&$dccext(&i)' eq '&m').getout
                                            5171 &i       seta    &i+1
                                            5172          ago     .loop
                                            5173 .around  anop
                                            5174 &$dccexti seta &$dccexti+1
                                            5175          extrn  &m
                                            5176 .getout  anop
                                            5177          mend
000034D8                                    5178+$eye0104    ds    0d                                                    02-DCCCA
000034D8 C4C3C3                             5179+         dc cl3'DCC'                                                    02-DCCCA
000034DB 01                                 5180+         dc xl1'01' format one                                          02-DCCCA
000034DC 00000000                           5181+         dc a(0)                                                        02-DCCCA
000034E0 000000000000354A                   5182+         dc ad(@PER_1914)                                               02-DCCCA
000034E8 00000000000000B8                   5183+         dc ad(184)                                                     02-DCCCA
000034F0 0000000000000000                   5184+         dc ad(0)                                                       02-DCCCA
000034F8 0000000000001000                   5185+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page  107 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003500 20                                 5186+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003501 03                                 5187+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003502 03                                 5188+         dc al1(3)                                                      02-DCCCA
00003503 08                                 5189+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003504 00                                 5190+         dc bl.8'00000000'                                              02-DCCCA
00003505 000000                             5191+         dc al3(0)                                                      02-DCCCA
00003508 00000000000034B8                   5192+         dc ad(@LNAME1914)                                              02-DCCCA
00003510                                    5193+         ds 0d                                                          02-DCCCA
00003510 00000000000034D8                   5194+         dc ad($eye0104)                                                02-DCCCA
00003518 0000000000000000                   5195+         dc ad(0)                                                       02-DCCCA
00003520                                    5196+         ds    0d                                                       01-DCCPR
00003520                                    5197+rd_kafka_app_poll_blocking ds 0d                                        01-DCCPR
00003520                                    5198+@REGION_1914_1 ds 0h                                                    01-DCCPR
00003520 EBEC D008 0024          00000008   5199+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003526 E3E0 D088 0004          00000088   5200+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000352C E3C0 D090 0004          00000090   5201+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003532 B904 002E                          5202+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003536 E3B0 C018 0004          00000018   5203+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000353C A7EB 00B8               000000B8   5204+         aghi  14,184              increase by frame size               01-DCCPR
00003540 E3E0 C020 0021          00000020   5205+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003546 4720 B020               00000020   5206+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000354A                                    5207+@PER_1914 ds   0h                                                       01-DCCPR
0000354A EBDE 2080 0024          00000080   5208+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003550 E3C0 2090 0024          00000090   5209+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003556 B904 00D2                          5210+         lgr   13,2                set real frame pointer               01-DCCPR
0000355A B904 00CF                          5211+         lgr   12,15               set base reg                         01-DCCPR
                        00003520            5212+         using @REGION_1914_1,12                                        01-DCCPR
                                            5213 * ******* End of Prologue
                                            5214 * *
                                            5215 * ***           if (rk->rk_type == RD_KAFKA_CONSUMER)
0000355E E3F0 1000 0004          00000000   5216          LG    15,0(0,1)   ; rk
00003564 E55C F9D8 0001          000009D8   5217          CHSI  2520(15),1
0000356A 4770 C070               00003590   5218          BNE   @ret_lab_1914
                                            5219 * ***                   rd_atomic64_set(&rk->rk_ts_last_poll, 0x7fffff\
                                            5220 * ffffffffffLL);
0000356E 41F0 F9F0               000009F0   5221          LA    15,2544(0,15)
00003572 E3F0 D0A8 0024          000000A8   5222          STG   15,168(0,13)
00003578 E3F0 C0C8 0004          000035E8   5223          LG    15,@lit_1914_161 ; 9223372036854775807
0000357E E3F0 D0B0 0024          000000B0   5224          STG   15,176(0,13)
00003584 4110 D0A8               000000A8   5225          LA    1,168(0,13)
00003588 E3F0 C0C0 0004          000035E0   5226          LG    15,@lit_1914_162 ; rd_atomic64_set
0000358E                                    5227 @@gen_label281 DS    0H
0000358E 05EF                               5228          BALR  14,15
00003590                                    5229 @@gen_label282 DS    0H
00003590                                    5230 @L628    DS    0H
                                            5231 * ***   }
00003590                                    5232 @ret_lab_1914 DS 0H
                                            5233 * * **** Start of Epilogue
                                            5234          DCCEPIL
00003590                                    5235+         ds 0h                                                          01-DCCEP
                                            5236+* Epilog
00003590 D707 D088 D088 00000088 00000088   5237+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
                                                                                                                           Page  108 
  Active Usings: @REGION_1914_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003596 E3D0 D080 0004          00000080   5238+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000359C E3C0 D090 0004          00000090   5239+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000035A2 E3B0 C018 0004          00000018   5240+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000035A8 E3C0 B010 0021          00000010   5241+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000035AE E3E0 D008 0004          00000008   5242+         lg  14,8(0,13)          load up return address                 01-DCCEP
000035B4 EB1C D020 0004          00000020   5243+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000035BA 078E                               5244+         bcr 8,14                if same dsab, just return              01-DCCEP
000035BC E3F0 D010 0024          00000010   5245+         stg 15,16(0,13)         save return code                       01-DCCEP
000035C2 E300 D018 0024          00000018   5246+         stg 0,24(0,13)          save more return code                  01-DCCEP
000035C8 E3F0 D090 0004          00000090   5247+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000035CE E3F0 F018 0004          00000018   5248+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000035D4 47F0 F040               00000040   5249+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5250+* End of Epilog
                                            5251 * * **** End of Epilogue
000035D8                                    5252          DS    0D
000035D8 000000B8                           5253 @FRAMESIZE_1914 DC F'184'
000035DC 00000000
000035E0 00000000000002E0                   5254 @lit_1914_162 DC AD(rd_atomic64_set)
000035E8 7FFFFFFFFFFFFFFF                   5255 @lit_1914_161 DC FD'9223372036854775807' 0x7fffffffffffffff
                                            5256          DROP  12
                                            5257 *
                                            5258 *   DSECT for automatic variables in "rd_kafka_app_poll_blocking"
                                            5259 *      (FUNCTION #1914)
                                            5260 *
00000000                00000000 000000A8   5261 @AUTO#rd_kafka_app_poll_blocking DSECT
00000000                                    5262          DS    XL168
                                            5263 *
000035F0                00000000 00007BF0   5264 @CODE    CSECT
                                            5265 *
                                            5266 *
                                            5267 *
                                            5268 * ....... start of rd_kafka_app_polled
000035F0                                    5269 @LNAME1915 DS  0H
000035F0 00000013                           5270          DC    X'00000013'
000035F4 99846D9281869281                   5271          DC    C'rd_kafka_app_polled'
00003607 00                                 5272          DC    X'00'
                                            5273 rd_kafka_app_polled DCCPRLG CINDEX=1915,BASER=12,FRAME=184,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1915
                                            5274          macro
                                            5275          dccextrn &m
                                            5276          gblc    &$dccext(1000)
                                            5277          gbla    &$dccexti
                                            5278          lcla    &i
                                            5279 &$dccext(&$dccexti+1) setc    '&m'
                                            5280 &i       seta    1
                                            5281 .loop    aif    (&i gt &$dccexti).around
                                            5282          aif    ('&$dccext(&i)' eq '&m').getout
                                            5283 &i       seta    &i+1
                                            5284          ago     .loop
                                            5285 .around  anop
                                            5286 &$dccexti seta &$dccexti+1
                                            5287          extrn  &m
                                                                                                                           Page  109 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5288 .getout  anop
                                            5289          mend
00003608                                    5290+$eye0107    ds    0d                                                    02-DCCCA
00003608 C4C3C3                             5291+         dc cl3'DCC'                                                    02-DCCCA
0000360B 01                                 5292+         dc xl1'01' format one                                          02-DCCCA
0000360C 00000000                           5293+         dc a(0)                                                        02-DCCCA
00003610 000000000000367A                   5294+         dc ad(@PER_1915)                                               02-DCCCA
00003618 00000000000000B8                   5295+         dc ad(184)                                                     02-DCCCA
00003620 0000000000000000                   5296+         dc ad(0)                                                       02-DCCCA
00003628 0000000000001000                   5297+         dc ad(4096)                                                    02-DCCCA
00003630 20                                 5298+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003631 03                                 5299+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003632 03                                 5300+         dc al1(3)                                                      02-DCCCA
00003633 08                                 5301+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003634 00                                 5302+         dc bl.8'00000000'                                              02-DCCCA
00003635 000000                             5303+         dc al3(0)                                                      02-DCCCA
00003638 00000000000035F0                   5304+         dc ad(@LNAME1915)                                              02-DCCCA
00003640                                    5305+         ds 0d                                                          02-DCCCA
00003640 0000000000003608                   5306+         dc ad($eye0107)                                                02-DCCCA
00003648 0000000000000000                   5307+         dc ad(0)                                                       02-DCCCA
00003650                                    5308+         ds    0d                                                       01-DCCPR
00003650                                    5309+rd_kafka_app_polled ds 0d                                               01-DCCPR
00003650                                    5310+@REGION_1915_1 ds 0h                                                    01-DCCPR
00003650 EBEC D008 0024          00000008   5311+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003656 E3E0 D088 0004          00000088   5312+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000365C E3C0 D090 0004          00000090   5313+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003662 B904 002E                          5314+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003666 E3B0 C018 0004          00000018   5315+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000366C A7EB 00B8               000000B8   5316+         aghi  14,184              increase by frame size               01-DCCPR
00003670 E3E0 C020 0021          00000020   5317+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003676 4720 B020               00000020   5318+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000367A                                    5319+@PER_1915 ds   0h                                                       01-DCCPR
0000367A EBDE 2080 0024          00000080   5320+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003680 E3C0 2090 0024          00000090   5321+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003686 B904 00D2                          5322+         lgr   13,2                set real frame pointer               01-DCCPR
0000368A B904 00CF                          5323+         lgr   12,15               set base reg                         01-DCCPR
                        00003650            5324+         using @REGION_1915_1,12                                        01-DCCPR
                                            5325 * ******* End of Prologue
                                            5326 * *
                                            5327 * ***           if (rk->rk_type == RD_KAFKA_CONSUMER)
0000368E E320 1000 0004          00000000   5328          LG    2,0(0,1)    ; rk
00003694 E55C 29D8 0001          000009D8   5329          CHSI  2520(2),1
0000369A 4770 C072               000036C2   5330          BNE   @ret_lab_1915
                                            5331 * ***                   rd_atomic64_set(&rk->rk_ts_last_poll, rd_clock\
                                            5332 * ());
0000369E E3F0 C0C8 0004          00003718   5333          LG    15,@lit_1915_164 ; rd_clock
000036A4                                    5334 @@gen_label284 DS    0H
000036A4 05EF                               5335          BALR  14,15
000036A6                                    5336 @@gen_label285 DS    0H
000036A6 4110 29F0               000009F0   5337          LA    1,2544(0,2)
000036AA E310 D0A8 0024          000000A8   5338          STG   1,168(0,13)
000036B0 E3F0 D0B0 0024          000000B0   5339          STG   15,176(0,13)
                                                                                                                           Page  110 
  Active Usings: @REGION_1915_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000036B6 4110 D0A8               000000A8   5340          LA    1,168(0,13)
000036BA E3F0 C0D0 0004          00003720   5341          LG    15,@lit_1915_165 ; rd_atomic64_set
000036C0                                    5342 @@gen_label286 DS    0H
000036C0 05EF                               5343          BALR  14,15
000036C2                                    5344 @@gen_label287 DS    0H
000036C2                                    5345 @L629    DS    0H
                                            5346 * ***   }
000036C2                                    5347 @ret_lab_1915 DS 0H
                                            5348 * * **** Start of Epilogue
                                            5349          DCCEPIL
000036C2                                    5350+         ds 0h                                                          01-DCCEP
                                            5351+* Epilog
000036C2 D707 D088 D088 00000088 00000088   5352+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000036C8 E3D0 D080 0004          00000080   5353+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000036CE E3C0 D090 0004          00000090   5354+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000036D4 E3B0 C018 0004          00000018   5355+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000036DA E3C0 B010 0021          00000010   5356+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000036E0 E3E0 D008 0004          00000008   5357+         lg  14,8(0,13)          load up return address                 01-DCCEP
000036E6 EB1C D020 0004          00000020   5358+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000036EC 078E                               5359+         bcr 8,14                if same dsab, just return              01-DCCEP
000036EE E3F0 D010 0024          00000010   5360+         stg 15,16(0,13)         save return code                       01-DCCEP
000036F4 E300 D018 0024          00000018   5361+         stg 0,24(0,13)          save more return code                  01-DCCEP
000036FA E3F0 D090 0004          00000090   5362+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003700 E3F0 F018 0004          00000018   5363+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003706 47F0 F040               00000040   5364+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5365+* End of Epilog
                                            5366 * * **** End of Epilogue
00003710                                    5367          DS    0D
00003710 000000B8                           5368 @FRAMESIZE_1915 DC F'184'
00003714 00000000
00003718 0000000000000980                   5369 @lit_1915_164 DC AD(rd_clock)
00003720 00000000000002E0                   5370 @lit_1915_165 DC AD(rd_atomic64_set)
                                            5371          DROP  12
                                            5372 *
                                            5373 *   DSECT for automatic variables in "rd_kafka_app_polled"
                                            5374 *      (FUNCTION #1915)
                                            5375 *
00000000                00000000 000000A8   5376 @AUTO#rd_kafka_app_polled DSECT
00000000                                    5377          DS    XL168
                                            5378 *
00003728                00000000 00007BF0   5379 @CODE    CSECT
                                            5380 *
                                            5381 *
                                            5382 *
                                            5383 * ....... start of rd_kafka_yield
                                            5384 rd_kafka_yield ALIAS X'99846D92818692816DA889859384'
00003728                                    5385 @LNAME569 DS   0H
00003728 0000000E                           5386          DC    X'0000000E'
0000372C 99846D9281869281                   5387          DC    C'rd_kafka_yield'
0000373A 00                                 5388          DC    X'00'
                                            5389 rd_kafka_yield DCCPRLG CINDEX=569,BASER=12,FRAME=168,ENTRY=YES,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME569
                                                                                                                           Page  111 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5390          macro
                                            5391          dccextrn &m
                                            5392          gblc    &$dccext(1000)
                                            5393          gbla    &$dccexti
                                            5394          lcla    &i
                                            5395 &$dccext(&$dccexti+1) setc    '&m'
                                            5396 &i       seta    1
                                            5397 .loop    aif    (&i gt &$dccexti).around
                                            5398          aif    ('&$dccext(&i)' eq '&m').getout
                                            5399 &i       seta    &i+1
                                            5400          ago     .loop
                                            5401 .around  anop
                                            5402 &$dccexti seta &$dccexti+1
                                            5403          extrn  &m
                                            5404 .getout  anop
                                            5405          mend
00003740                                    5406+$eye0110    ds    0d                                                    02-DCCCA
00003740 C4C3C3                             5407+         dc cl3'DCC'                                                    02-DCCCA
00003743 01                                 5408+         dc xl1'01' format one                                          02-DCCCA
00003744 00000000                           5409+         dc a(0)                                                        02-DCCCA
00003748 00000000000037B2                   5410+         dc ad(@PER_569)                                                02-DCCCA
00003750 00000000000000A8                   5411+         dc ad(168)                                                     02-DCCCA
00003758 0000000000000000                   5412+         dc ad(0)                                                       02-DCCCA
00003760 0000000000001000                   5413+         dc ad(4096)                                                    02-DCCCA
00003768 20                                 5414+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003769 03                                 5415+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000376A 03                                 5416+         dc al1(3)                                                      02-DCCCA
0000376B 08                                 5417+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000376C 00                                 5418+         dc bl.8'00000000'                                              02-DCCCA
0000376D 000000                             5419+         dc al3(0)                                                      02-DCCCA
00003770 0000000000003728                   5420+         dc ad(@LNAME569)                                               02-DCCCA
00003778                                    5421+         ds 0d                                                          02-DCCCA
00003778 0000000000003740                   5422+         dc ad($eye0110)                                                02-DCCCA
00003780 0000000000000000                   5423+         dc ad(0)                                                       02-DCCCA
00003788                                    5424+         ds    0d                                                       01-DCCPR
                                            5425+         entry rd_kafka_yield                                           01-DCCPR
00003788                                    5426+rd_kafka_yield ds 0d                                                    01-DCCPR
00003788                                    5427+@REGION_569_1 ds 0h                                                     01-DCCPR
00003788 EBEC D008 0024          00000008   5428+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000378E E3E0 D088 0004          00000088   5429+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003794 E3C0 D090 0004          00000090   5430+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000379A B904 002E                          5431+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000379E E3B0 C018 0004          00000018   5432+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000037A4 A7EB 00A8               000000A8   5433+         aghi  14,168              increase by frame size               01-DCCPR
000037A8 E3E0 C020 0021          00000020   5434+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000037AE 4720 B020               00000020   5435+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000037B2                                    5436+@PER_569 ds    0h                                                       01-DCCPR
000037B2 EBDE 2080 0024          00000080   5437+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000037B8 E3C0 2090 0024          00000090   5438+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000037BE B904 00D2                          5439+         lgr   13,2                set real frame pointer               01-DCCPR
000037C2 B904 00CF                          5440+         lgr   12,15               set base reg                         01-DCCPR
                        00003788            5441+         using @REGION_569_1,12                                         01-DCCPR
                                                                                                                           Page  112 
  Active Usings: @REGION_569_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5442          DCCPRV REG=15     ; Get PRV from DVT
000037C6 E3F0 B008 0004          00000008   5443+         LG 15,8(0,11)                                                  01-DCCPR
                                            5444 * ******* End of Prologue
                                            5445 * *
                                            5446 * ***           rd_kafka_yield_thread = 1;
000037CC E310 C0A4 0016          0000382C   5447          LLGF  1,@lit_569_167 ; rd_kafka_yield_thread
000037D2 41F1 F000               00000000   5448          LA    15,0(1,15)
000037D6 E54C F000 0001          00000000   5449          MVHI  0(15),1     ; rd_kafka_yield_thread
                                            5450 * ***   }
000037DC                                    5451 @ret_lab_569 DS 0H
                                            5452 * * **** Start of Epilogue
                                            5453          DCCEPIL
000037DC                                    5454+         ds 0h                                                          01-DCCEP
                                            5455+* Epilog
000037DC D707 D088 D088 00000088 00000088   5456+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000037E2 E3D0 D080 0004          00000080   5457+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000037E8 E3C0 D090 0004          00000090   5458+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000037EE E3B0 C018 0004          00000018   5459+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000037F4 E3C0 B010 0021          00000010   5460+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000037FA E3E0 D008 0004          00000008   5461+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003800 EB1C D020 0004          00000020   5462+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003806 078E                               5463+         bcr 8,14                if same dsab, just return              01-DCCEP
00003808 E3F0 D010 0024          00000010   5464+         stg 15,16(0,13)         save return code                       01-DCCEP
0000380E E300 D018 0024          00000018   5465+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003814 E3F0 D090 0004          00000090   5466+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000381A E3F0 F018 0004          00000018   5467+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003820 47F0 F040               00000040   5468+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5469+* End of Epilog
                                            5470 * * **** End of Epilogue
00003828                                    5471          DS    0D
00003828 000000A8                           5472 @FRAMESIZE_569 DC F'168'
0000382C 00000000                           5473 @lit_569_167 DC Q(rd_kafka_yield_thread)
                                            5474          DROP  12
                                            5475 *
                                            5476 *   DSECT for automatic variables in "rd_kafka_yield"
                                            5477 *      (FUNCTION #569)
                                            5478 *
00000000                00000000 000000A8   5479 @AUTO#rd_kafka_yield DSECT
00000000                                    5480          DS    XL168
                                            5481 *
00003830                00000000 00007BF0   5482 @CODE    CSECT
                                            5483 *
                                            5484 *
                                            5485 *
                                            5486 * ....... start of rd_kafka_q_check_yield
00003830                                    5487 @LNAME1943 DS  0H
00003830 00000016                           5488          DC    X'00000016'
00003834 99846D9281869281                   5489          DC    C'rd_kafka_q_check_yield'
0000384A 00                                 5490          DC    X'00'
                                            5491 rd_kafka_q_check_yield DCCPRLG CINDEX=1943,BASER=12,FRAME=168,SAVEAREA=*
                                                                NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1943
                                            5492          macro
                                                                                                                           Page  113 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5493          dccextrn &m
                                            5494          gblc    &$dccext(1000)
                                            5495          gbla    &$dccexti
                                            5496          lcla    &i
                                            5497 &$dccext(&$dccexti+1) setc    '&m'
                                            5498 &i       seta    1
                                            5499 .loop    aif    (&i gt &$dccexti).around
                                            5500          aif    ('&$dccext(&i)' eq '&m').getout
                                            5501 &i       seta    &i+1
                                            5502          ago     .loop
                                            5503 .around  anop
                                            5504 &$dccexti seta &$dccexti+1
                                            5505          extrn  &m
                                            5506 .getout  anop
                                            5507          mend
00003850                                    5508+$eye0114    ds    0d                                                    02-DCCCA
00003850 C4C3C3                             5509+         dc cl3'DCC'                                                    02-DCCCA
00003853 01                                 5510+         dc xl1'01' format one                                          02-DCCCA
00003854 00000000                           5511+         dc a(0)                                                        02-DCCCA
00003858 0000000000000000                   5512+         dc ad(0)                                                       02-DCCCA
00003860 00000000000000A8                   5513+         dc ad(168)                                                     02-DCCCA
00003868 0000000000000000                   5514+         dc ad(0)                                                       02-DCCCA
00003870 0000000000001000                   5515+         dc ad(4096)                                                    02-DCCCA
00003878 20                                 5516+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003879 03                                 5517+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000387A 03                                 5518+         dc al1(3)                                                      02-DCCCA
0000387B 08                                 5519+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000387C 00                                 5520+         dc bl.8'00000000'                                              02-DCCCA
0000387D 000000                             5521+         dc al3(0)                                                      02-DCCCA
00003880 0000000000003830                   5522+         dc ad(@LNAME1943)                                              02-DCCCA
00003888                                    5523+         ds 0d                                                          02-DCCCA
00003888 0000000000003850                   5524+         dc ad($eye0114)                                                02-DCCCA
00003890 0000000000000000                   5525+         dc ad(0)                                                       02-DCCCA
00003898                                    5526+         ds    0d                                                       01-DCCPR
00003898                                    5527+rd_kafka_q_check_yield ds 0d                                            01-DCCPR
00003898                                    5528+@REGION_1943_1 ds 0h                                                    01-DCCPR
00003898 EBEC D008 0024          00000008   5529+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000389E B904 00CF                          5530+         lgr   12,15               set base reg                         01-DCCPR
                        00003898            5531+         using @REGION_1943_1,12                                        01-DCCPR
                                            5532 * ******* End of Prologue
                                            5533 * *
                                            5534 * ***           if (!(rkq->rkq_flags & 0x8))
000038A2 E3F0 1000 0004          00000000   5535          LG    15,0(0,1)   ; rkq
000038A8 9108 F087      00000087 00000008   5536          TM    135(15),8
000038AC 4770 C020               000038B8   5537          BNZ   @L632
                                            5538 * ***                   return 0;
000038B0 A7F9 0000               00000000   5539          LGHI  15,0        ; 0
000038B4 47F0 C030               000038C8   5540          B     @ret_lab_1943
000038B8                                    5541 @L632    DS    0H
                                            5542 * ***
                                            5543 * ***           rkq->rkq_flags &= ~0x8;
000038B8 5810 F084               00000084   5544          L     1,132(0,15)
                                                                                                                           Page  114 
  Active Usings: @REGION_1943_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000038BC A517 FFF7               0000FFF7   5545          NILL  1,65527
000038C0 5010 F084               00000084   5546          ST    1,132(0,15)
                                            5547 * ***           return 1;
000038C4 A7F9 0001               00000001   5548          LGHI  15,1        ; 1
                                            5549 * ***   }
000038C8                                    5550 @ret_lab_1943 DS 0H
                                            5551 * * **** Start of Epilogue
                                            5552          DCCEPIL
000038C8                                    5553+         ds 0h                                                          01-DCCEP
                                            5554+* Epilog
                                            5555+* Epilog
000038C8 E3E0 D008 0004          00000008   5556+         lg    14,8(,13) restore the reg                                01-DCCEP
000038CE EB1C D020 0004          00000020   5557+         lmg   1,12,32(13)                                              01-DCCEP
000038D4 07FE                               5558+         br   14                                                        01-DCCEP
                                            5559+* End of Epilog
                                            5560 * * **** End of Epilogue
                                            5561          DROP  12
                                            5562 *
                                            5563 *   DSECT for automatic variables in "rd_kafka_q_check_yield"
                                            5564 *      (FUNCTION #1943)
                                            5565 *
00000000                00000000 000000A8   5566 @AUTO#rd_kafka_q_check_yield DSECT
00000000                                    5567          DS    XL168
                                            5568 *
000038D6                00000000 00007BF0   5569 @CODE    CSECT
                                            5570 *
                                            5571 *
                                            5572 *
                                            5573 * ....... start of rd_kafka_q_destroy_final
                                            5574 rd_kafka_q_destroy_final ALIAS X'99846D92818692816D986D8485A2A39996A86D*
                                                                8689958193'
000038D6                                    5575 @LNAME1427 DS  0H
000038D6 00000018                           5576          DC    X'00000018'
000038DA 99846D9281869281                   5577          DC    C'rd_kafka_q_destroy_final'
000038F2 00                                 5578          DC    X'00'
                                            5579 rd_kafka_q_destroy_final DCCPRLG CINDEX=1427,BASER=12,FRAME=200,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME1427
                                            5580          macro
                                            5581          dccextrn &m
                                            5582          gblc    &$dccext(1000)
                                            5583          gbla    &$dccexti
                                            5584          lcla    &i
                                            5585 &$dccext(&$dccexti+1) setc    '&m'
                                            5586 &i       seta    1
                                            5587 .loop    aif    (&i gt &$dccexti).around
                                            5588          aif    ('&$dccext(&i)' eq '&m').getout
                                            5589 &i       seta    &i+1
                                            5590          ago     .loop
                                            5591 .around  anop
                                            5592 &$dccexti seta &$dccexti+1
                                            5593          extrn  &m
                                            5594 .getout  anop
                                                                                                                           Page  115 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5595          mend
000038F8                                    5596+$eye0117    ds    0d                                                    02-DCCCA
000038F8 C4C3C3                             5597+         dc cl3'DCC'                                                    02-DCCCA
000038FB 01                                 5598+         dc xl1'01' format one                                          02-DCCCA
000038FC 00000000                           5599+         dc a(0)                                                        02-DCCCA
00003900 000000000000396A                   5600+         dc ad(@PER_1427)                                               02-DCCCA
00003908 00000000000000C8                   5601+         dc ad(200)                                                     02-DCCCA
00003910 0000000000000000                   5602+         dc ad(0)                                                       02-DCCCA
00003918 0000000000001000                   5603+         dc ad(4096)                                                    02-DCCCA
00003920 20                                 5604+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003921 03                                 5605+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003922 03                                 5606+         dc al1(3)                                                      02-DCCCA
00003923 08                                 5607+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003924 00                                 5608+         dc bl.8'00000000'                                              02-DCCCA
00003925 000000                             5609+         dc al3(0)                                                      02-DCCCA
00003928 00000000000038D6                   5610+         dc ad(@LNAME1427)                                              02-DCCCA
00003930                                    5611+         ds 0d                                                          02-DCCCA
00003930 00000000000038F8                   5612+         dc ad($eye0117)                                                02-DCCCA
00003938 0000000000000000                   5613+         dc ad(0)                                                       02-DCCCA
00003940                                    5614+         ds    0d                                                       01-DCCPR
                                            5615+         entry rd_kafka_q_destroy_final                                 01-DCCPR
00003940                                    5616+rd_kafka_q_destroy_final ds 0d                                          01-DCCPR
00003940                                    5617+@REGION_1427_1 ds 0h                                                    01-DCCPR
00003940 EBEC D008 0024          00000008   5618+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003946 E3E0 D088 0004          00000088   5619+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000394C E3C0 D090 0004          00000090   5620+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003952 B904 002E                          5621+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003956 E3B0 C018 0004          00000018   5622+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000395C A7EB 00C8               000000C8   5623+         aghi  14,200              increase by frame size               01-DCCPR
00003960 E3E0 C020 0021          00000020   5624+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003966 4720 B020               00000020   5625+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000396A                                    5626+@PER_1427 ds   0h                                                       01-DCCPR
0000396A EBDE 2080 0024          00000080   5627+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003970 E3C0 2090 0024          00000090   5628+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003976 B904 00D2                          5629+         lgr   13,2                set real frame pointer               01-DCCPR
0000397A B904 00CF                          5630+         lgr   12,15               set base reg                         01-DCCPR
                        00003940            5631+         using @REGION_1427_1,12                                        01-DCCPR
                                            5632 * ******* End of Prologue
                                            5633 * *
0000397E E320 1000 0004          00000000   5634          LG    2,0(0,1)    ; rkq
                                            5635 * ***
                                            5636 * ***           mtx_lock(&rkq->rkq_lock);
00003984 E320 D0A8 0024          000000A8   5637          STG   2,168(0,13)
0000398A 4110 D0A8               000000A8   5638          LA    1,168(0,13)
0000398E E3F0 C1B8 0004          00003AF8   5639          LG    15,@lit_1427_171 ; mtx_lock
00003994                                    5640 @@gen_label289 DS    0H
00003994 05EF                               5641          BALR  14,15
00003996                                    5642 @@gen_label290 DS    0H
                                            5643 * ***      if (((rkq->rkq_qio != ((void *)0)))) {
00003996 E3F0 2090 0002          00000090   5644          LTG   15,144(0,2) ; offset of rkq_qio in rd_kafka_q_s
0000399C 4780 C082               000039C2   5645          BE    @L634
                                            5646 * ***         rd_free(rkq->rkq_qio);
                                                                                                                           Page  116 
  Active Usings: @REGION_1427_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000039A0 E3F0 2090 0004          00000090   5647          LG    15,144(0,2)
000039A6 E3F0 D0A8 0024          000000A8   5648          STG   15,168(0,13)
000039AC 4110 D0A8               000000A8   5649          LA    1,168(0,13)
000039B0 E3F0 C1C0 0004          00003B00   5650          LG    15,@lit_1427_172 ; rd_free
000039B6                                    5651 @@gen_label292 DS    0H
000039B6 05EF                               5652          BALR  14,15
000039B8                                    5653 @@gen_label293 DS    0H
                                            5654 * ***         rkq->rkq_qio = ((void *)0);
000039B8 A7F9 0000               00000000   5655          LGHI  15,0        ; 0
000039BC E3F0 2090 0024          00000090   5656          STG   15,144(0,2) ; offset of rkq_qio in rd_kafka_q_s
                                            5657 * ***      }
000039C2                                    5658 @L633    DS    0H
                                            5659 * ***
                                            5660 * ***
                                            5661 * ***
                                            5662 * ***           do {} while (0);
000039C2                                    5663 @L634    DS    0H
                                            5664 * ***           rd_kafka_q_disable0(rkq, 0);
000039C2 E320 D0A8 0024          000000A8   5665          STG   2,168(0,13)
000039C8 D707 D0B0 D0B0 000000B0 000000B0   5666          XC    176(8,13),176(13)
000039CE 4110 D0A8               000000A8   5667          LA    1,168(0,13)
000039D2 E3F0 C1C8 0004          00003B08   5668          LG    15,@lit_1427_174 ; rd_kafka_q_disable0
000039D8                                    5669 @@gen_label294 DS    0H
000039D8 05EF                               5670          BALR  14,15
000039DA                                    5671 @@gen_label295 DS    0H
                                            5672 * ***           rd_kafka_q_fwd_set0(rkq, ((void *)0), 0, 0 );
000039DA E320 D0A8 0024          000000A8   5673          STG   2,168(0,13)
000039E0 D717 D0B0 D0B0 000000B0 000000B0   5674          XC    176(24,13),176(13)
000039E6 4110 D0A8               000000A8   5675          LA    1,168(0,13)
000039EA E3F0 C1D0 0004          00003B10   5676          LG    15,@lit_1427_175 ; rd_kafka_q_fwd_set0
000039F0                                    5677 @@gen_label296 DS    0H
000039F0 05EF                               5678          BALR  14,15
000039F2                                    5679 @@gen_label297 DS    0H
                                            5680 * ***           rd_kafka_q_purge0(rkq, 0);
000039F2 E320 D0A8 0024          000000A8   5681          STG   2,168(0,13)
000039F8 D707 D0B0 D0B0 000000B0 000000B0   5682          XC    176(8,13),176(13)
000039FE 4110 D0A8               000000A8   5683          LA    1,168(0,13)
00003A02 E3F0 C1D8 0004          00003B18   5684          LG    15,@lit_1427_176 ; rd_kafka_q_purge0
00003A08                                    5685 @@gen_label298 DS    0H
00003A08 05EF                               5686          BALR  14,15
00003A0A                                    5687 @@gen_label299 DS    0H
                                            5688 * ***      ((!rkq->rkq_fwdq) ? (void)0 : __assert(__func__, "C:\\asgka\
                                            5689 * fka\\librdkafka\\src\\rdkafka_queue.c", 70, "!rkq->rkq_fwdq"));
00003A0A E3F0 2058 0002          00000058   5690          LTG   15,88(0,2)  ; offset of rkq_fwdq in rd_kafka_q_s
00003A10 4780 C110               00003A50   5691          BZ    @L638
00003A14                                    5692 @L637    DS    0H
00003A14 E3F0 C1F0 0004          00003B30   5693          LG    15,@lit_1427_177
00003A1A 41F0 F1A6               000001A6   5694          LA    15,422(0,15)
00003A1E E3F0 D0A8 0024          000000A8   5695          STG   15,168(0,13)
00003A24 E3F0 C1E8 0004          00003B28   5696          LG    15,@lit_1427_178
00003A2A 4110 F0D2               000000D2   5697          LA    1,210(0,15)
00003A2E E310 D0B0 0024          000000B0   5698          STG   1,176(0,13)
                                                                                                                           Page  117 
  Active Usings: @REGION_1427_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003A34 E548 D0B8 0046          000000B8   5699          MVGHI 184(13),70
00003A3A 41F0 F0FE               000000FE   5700          LA    15,254(0,15)
00003A3E E3F0 D0C0 0024          000000C0   5701          STG   15,192(0,13)
00003A44 4110 D0A8               000000A8   5702          LA    1,168(0,13)
00003A48 E3F0 C1E0 0004          00003B20   5703          LG    15,@lit_1427_179 ; __assert
00003A4E                                    5704 @@gen_label301 DS    0H
00003A4E 05EF                               5705          BALR  14,15
00003A50                                    5706 @@gen_label302 DS    0H
00003A50                                    5707 @L638    DS    0H
                                            5708 * ***           mtx_unlock(&rkq->rkq_lock);
00003A50 E320 D0A8 0024          000000A8   5709          STG   2,168(0,13)
00003A56 4110 D0A8               000000A8   5710          LA    1,168(0,13)
00003A5A E3F0 C1F8 0004          00003B38   5711          LG    15,@lit_1427_180 ; mtx_unlock
00003A60                                    5712 @@gen_label303 DS    0H
00003A60 05EF                               5713          BALR  14,15
00003A62                                    5714 @@gen_label304 DS    0H
                                            5715 * ***      mtx_destroy(&rkq->rkq_lock);
00003A62 E320 D0A8 0024          000000A8   5716          STG   2,168(0,13)
00003A68 4110 D0A8               000000A8   5717          LA    1,168(0,13)
00003A6C E3F0 C200 0004          00003B40   5718          LG    15,@lit_1427_181 ; mtx_destroy
00003A72                                    5719 @@gen_label305 DS    0H
00003A72 05EF                               5720          BALR  14,15
00003A74                                    5721 @@gen_label306 DS    0H
                                            5722 * ***      cnd_destroy(&rkq->rkq_cond);
00003A74 41F0 2028               00000028   5723          LA    15,40(0,2)
00003A78 E3F0 D0A8 0024          000000A8   5724          STG   15,168(0,13)
00003A7E 4110 D0A8               000000A8   5725          LA    1,168(0,13)
00003A82 E3F0 C208 0004          00003B48   5726          LG    15,@lit_1427_182 ; cnd_destroy
00003A88                                    5727 @@gen_label307 DS    0H
00003A88 05EF                               5728          BALR  14,15
00003A8A                                    5729 @@gen_label308 DS    0H
                                            5730 * ***
                                            5731 * ***           if (rkq->rkq_flags & 0x1)
00003A8A 9101 2087      00000087 00000001   5732          TM    135(2),1
00003A8E 4780 C164               00003AA4   5733          BZ    @ret_lab_1427
                                            5734 * ***                   rd_free(rkq);
00003A92 E320 D0A8 0024          000000A8   5735          STG   2,168(0,13)
00003A98 4110 D0A8               000000A8   5736          LA    1,168(0,13)
00003A9C E3F0 C1C0 0004          00003B00   5737          LG    15,@lit_1427_172 ; rd_free
00003AA2                                    5738 @@gen_label310 DS    0H
00003AA2 05EF                               5739          BALR  14,15
00003AA4                                    5740 @@gen_label311 DS    0H
00003AA4                                    5741 @L639    DS    0H
                                            5742 * ***   }
00003AA4                                    5743 @ret_lab_1427 DS 0H
                                            5744 * * **** Start of Epilogue
                                            5745          DCCEPIL
00003AA4                                    5746+         ds 0h                                                          01-DCCEP
                                            5747+* Epilog
00003AA4 D707 D088 D088 00000088 00000088   5748+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003AAA E3D0 D080 0004          00000080   5749+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003AB0 E3C0 D090 0004          00000090   5750+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
                                                                                                                           Page  118 
  Active Usings: @REGION_1427_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003AB6 E3B0 C018 0004          00000018   5751+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003ABC E3C0 B010 0021          00000010   5752+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003AC2 E3E0 D008 0004          00000008   5753+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003AC8 EB1C D020 0004          00000020   5754+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003ACE 078E                               5755+         bcr 8,14                if same dsab, just return              01-DCCEP
00003AD0 E3F0 D010 0024          00000010   5756+         stg 15,16(0,13)         save return code                       01-DCCEP
00003AD6 E300 D018 0024          00000018   5757+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003ADC E3F0 D090 0004          00000090   5758+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003AE2 E3F0 F018 0004          00000018   5759+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003AE8 47F0 F040               00000040   5760+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5761+* End of Epilog
                                            5762 * * **** End of Epilogue
00003AF0                                    5763          DS    0D
00003AF0 000000C8                           5764 @FRAMESIZE_1427 DC F'200'
00003AF4 00000000
00003AF8 0000000000000000                   5765 @lit_1427_171 DC AD(mtx_lock)
00003B00 00000000000006F8                   5766 @lit_1427_172 DC AD(rd_free)
00003B08 0000000000000FF8                   5767 @lit_1427_174 DC AD(rd_kafka_q_disable0)
00003B10 0000000000003EB0                   5768 @lit_1427_175 DC AD(rd_kafka_q_fwd_set0)
00003B18 0000000000004098                   5769 @lit_1427_176 DC AD(rd_kafka_q_purge0)
00003B20 0000000000000000                   5770 @lit_1427_179 DC AD(__assert)
00003B28 0000000000007DFE                   5771 @lit_1427_178 DC AD(@strings@)
00003B30 0000000000007BF0                   5772 @lit_1427_177 DC AD(@DATA)
00003B38 0000000000000000                   5773 @lit_1427_180 DC AD(mtx_unlock)
00003B40 0000000000000000                   5774 @lit_1427_181 DC AD(mtx_destroy)
00003B48 0000000000000000                   5775 @lit_1427_182 DC AD(cnd_destroy)
                                            5776          DROP  12
                                            5777 *
                                            5778 *   DSECT for automatic variables in "rd_kafka_q_destroy_final"
                                            5779 *      (FUNCTION #1427)
                                            5780 *
00000000                00000000 000000A8   5781 @AUTO#rd_kafka_q_destroy_final DSECT
00000000                                    5782          DS    XL168
                                            5783 *
00003B50                00000000 00007BF0   5784 @CODE    CSECT
                                            5785 *
                                            5786 *
                                            5787 *
                                            5788 * ....... start of rd_kafka_q_init0
                                            5789 rd_kafka_q_init0 ALIAS X'99846D92818692816D986D899589A3F0'
00003B50                                    5790 @LNAME1425 DS  0H
00003B50 00000010                           5791          DC    X'00000010'
00003B54 99846D9281869281                   5792          DC    C'rd_kafka_q_init0'
00003B64 00                                 5793          DC    X'00'
                                            5794 rd_kafka_q_init0 DCCPRLG CINDEX=1425,BASER=12,FRAME=184,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1425
                                            5795          macro
                                            5796          dccextrn &m
                                            5797          gblc    &$dccext(1000)
                                            5798          gbla    &$dccexti
                                            5799          lcla    &i
                                            5800 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page  119 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5801 &i       seta    1
                                            5802 .loop    aif    (&i gt &$dccexti).around
                                            5803          aif    ('&$dccext(&i)' eq '&m').getout
                                            5804 &i       seta    &i+1
                                            5805          ago     .loop
                                            5806 .around  anop
                                            5807 &$dccexti seta &$dccexti+1
                                            5808          extrn  &m
                                            5809 .getout  anop
                                            5810          mend
00003B68                                    5811+$eye0120    ds    0d                                                    02-DCCCA
00003B68 C4C3C3                             5812+         dc cl3'DCC'                                                    02-DCCCA
00003B6B 01                                 5813+         dc xl1'01' format one                                          02-DCCCA
00003B6C 00000000                           5814+         dc a(0)                                                        02-DCCCA
00003B70 0000000000003BDA                   5815+         dc ad(@PER_1425)                                               02-DCCCA
00003B78 00000000000000B8                   5816+         dc ad(184)                                                     02-DCCCA
00003B80 0000000000000000                   5817+         dc ad(0)                                                       02-DCCCA
00003B88 0000000000001000                   5818+         dc ad(4096)                                                    02-DCCCA
00003B90 20                                 5819+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003B91 03                                 5820+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003B92 03                                 5821+         dc al1(3)                                                      02-DCCCA
00003B93 08                                 5822+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003B94 00                                 5823+         dc bl.8'00000000'                                              02-DCCCA
00003B95 000000                             5824+         dc al3(0)                                                      02-DCCCA
00003B98 0000000000003B50                   5825+         dc ad(@LNAME1425)                                              02-DCCCA
00003BA0                                    5826+         ds 0d                                                          02-DCCCA
00003BA0 0000000000003B68                   5827+         dc ad($eye0120)                                                02-DCCCA
00003BA8 0000000000000000                   5828+         dc ad(0)                                                       02-DCCCA
00003BB0                                    5829+         ds    0d                                                       01-DCCPR
                                            5830+         entry rd_kafka_q_init0                                         01-DCCPR
00003BB0                                    5831+rd_kafka_q_init0 ds 0d                                                  01-DCCPR
00003BB0                                    5832+@REGION_1425_1 ds 0h                                                    01-DCCPR
00003BB0 EBEC D008 0024          00000008   5833+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003BB6 E3E0 D088 0004          00000088   5834+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003BBC E3C0 D090 0004          00000090   5835+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003BC2 B904 002E                          5836+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003BC6 E3B0 C018 0004          00000018   5837+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003BCC A7EB 00B8               000000B8   5838+         aghi  14,184              increase by frame size               01-DCCPR
00003BD0 E3E0 C020 0021          00000020   5839+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003BD6 4720 B020               00000020   5840+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003BDA                                    5841+@PER_1425 ds   0h                                                       01-DCCPR
00003BDA EBDE 2080 0024          00000080   5842+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003BE0 E3C0 2090 0024          00000090   5843+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003BE6 B904 00D2                          5844+         lgr   13,2                set real frame pointer               01-DCCPR
00003BEA B904 00CF                          5845+         lgr   12,15               set base reg                         01-DCCPR
                        00003BB0            5846+         using @REGION_1425_1,12                                        01-DCCPR
00003BEE B904 0031                          5847          LGR   3,1         ; ptr to parm area
                                            5848 * ******* End of Prologue
                                            5849 * *
                                            5850 * ***           rd_kafka_q_reset(rkq);
00003BF2 E320 3000 0004          00000000   5851          LG    2,0(0,3)    ; rkq
00003BF8 E320 D0A8 0024          000000A8   5852          STG   2,168(0,13)
                                                                                                                           Page  120 
  Active Usings: @REGION_1425_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003BFE 4110 D0A8               000000A8   5853          LA    1,168(0,13)
00003C02 E3F0 C118 0004          00003CC8   5854          LG    15,@lit_1425_185 ; rd_kafka_q_reset
00003C08                                    5855 @@gen_label312 DS    0H
00003C08 05EF                               5856          BALR  14,15
00003C0A                                    5857 @@gen_label313 DS    0H
                                            5858 * ***      rkq->rkq_fwdq   = ((void *)0);
00003C0A A7F9 0000               00000000   5859          LGHI  15,0        ; 0
00003C0E E3F0 2058 0024          00000058   5860          STG   15,88(0,2)  ; offset of rkq_fwdq in rd_kafka_q_s
                                            5861 * ***           rkq->rkq_refcnt = 1;
00003C14 E54C 2080 0001          00000080   5862          MVHI  128(2),1    ; offset of rkq_refcnt in rd_kafka_q_s
                                            5863 * ***           rkq->rkq_flags  = 0x2;
00003C1A E54C 2084 0002          00000084   5864          MVHI  132(2),2    ; offset of rkq_flags in rd_kafka_q_s
                                            5865 * ***           rkq->rkq_rk     = rk;
00003C20 E310 3008 0004          00000008   5866          LG    1,8(0,3)    ; rk
00003C26 E310 2088 0024          00000088   5867          STG   1,136(0,2)  ; offset of rkq_rk in rd_kafka_q_s
                                            5868 * ***      rkq->rkq_qio    = ((void *)0);
00003C2C E3F0 2090 0024          00000090   5869          STG   15,144(0,2) ; offset of rkq_qio in rd_kafka_q_s
                                            5870 * ***           rkq->rkq_serve  = ((void *)0);
00003C32 E3F0 2098 0024          00000098   5871          STG   15,152(0,2) ; offset of rkq_serve in rd_kafka_q_s
                                            5872 * ***           rkq->rkq_opaque = ((void *)0);
00003C38 E3F0 20A0 0024          000000A0   5873          STG   15,160(0,2) ; offset of rkq_opaque in rd_kafka_q_s
                                            5874 * ***      mtx_init(&rkq->rkq_lock, 0);
00003C3E E320 D0A8 0024          000000A8   5875          STG   2,168(0,13)
00003C44 D707 D0B0 D0B0 000000B0 000000B0   5876          XC    176(8,13),176(13)
00003C4A 4110 D0A8               000000A8   5877          LA    1,168(0,13)
00003C4E E3F0 C120 0004          00003CD0   5878          LG    15,@lit_1425_190 ; mtx_init
00003C54                                    5879 @@gen_label314 DS    0H
00003C54 05EF                               5880          BALR  14,15
00003C56                                    5881 @@gen_label315 DS    0H
                                            5882 * ***      cnd_init(&rkq->rkq_cond);
00003C56 41F0 2028               00000028   5883          LA    15,40(0,2)
00003C5A E3F0 D0A8 0024          000000A8   5884          STG   15,168(0,13)
00003C60 4110 D0A8               000000A8   5885          LA    1,168(0,13)
00003C64 E3F0 C128 0004          00003CD8   5886          LG    15,@lit_1425_191 ; cnd_init
00003C6A                                    5887 @@gen_label316 DS    0H
00003C6A 05EF                               5888          BALR  14,15
00003C6C                                    5889 @@gen_label317 DS    0H
                                            5890 * ***
                                            5891 * ***
                                            5892 * ***
                                            5893 * ***           rkq->rkq_name = func;
00003C6C E3F0 3010 0004          00000010   5894          LG    15,16(0,3)  ; func
00003C72 E3F0 20A8 0024          000000A8   5895          STG   15,168(0,2) ; offset of rkq_name in rd_kafka_q_s
                                            5896 * ***
                                            5897 * ***   }
00003C78                                    5898 @ret_lab_1425 DS 0H
                                            5899 * * **** Start of Epilogue
                                            5900          DCCEPIL
00003C78                                    5901+         ds 0h                                                          01-DCCEP
                                            5902+* Epilog
00003C78 D707 D088 D088 00000088 00000088   5903+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003C7E E3D0 D080 0004          00000080   5904+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page  121 
  Active Usings: @REGION_1425_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003C84 E3C0 D090 0004          00000090   5905+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003C8A E3B0 C018 0004          00000018   5906+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003C90 E3C0 B010 0021          00000010   5907+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003C96 E3E0 D008 0004          00000008   5908+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003C9C EB1C D020 0004          00000020   5909+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003CA2 078E                               5910+         bcr 8,14                if same dsab, just return              01-DCCEP
00003CA4 E3F0 D010 0024          00000010   5911+         stg 15,16(0,13)         save return code                       01-DCCEP
00003CAA E300 D018 0024          00000018   5912+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003CB0 E3F0 D090 0004          00000090   5913+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003CB6 E3F0 F018 0004          00000018   5914+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003CBC 47F0 F040               00000040   5915+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5916+* End of Epilog
                                            5917 * * **** End of Epilogue
00003CC0                                    5918          DS    0D
00003CC0 000000B8                           5919 @FRAMESIZE_1425 DC F'184'
00003CC4 00000000
00003CC8 0000000000001470                   5920 @lit_1425_185 DC AD(rd_kafka_q_reset)
00003CD0 0000000000000000                   5921 @lit_1425_190 DC AD(mtx_init)
00003CD8 0000000000000000                   5922 @lit_1425_191 DC AD(cnd_init)
                                            5923          DROP  12
                                            5924 *
                                            5925 *   DSECT for automatic variables in "rd_kafka_q_init0"
                                            5926 *      (FUNCTION #1425)
                                            5927 *
00000000                00000000 000000A8   5928 @AUTO#rd_kafka_q_init0 DSECT
00000000                                    5929          DS    XL168
                                            5930 *
00003CE0                00000000 00007BF0   5931 @CODE    CSECT
                                            5932 *
                                            5933 *
                                            5934 *
                                            5935 * ....... start of rd_kafka_q_new0
                                            5936 rd_kafka_q_new0 ALIAS X'99846D92818692816D986D9585A6F0'
00003CE0                                    5937 @LNAME1426 DS  0H
00003CE0 0000000F                           5938          DC    X'0000000F'
00003CE4 99846D9281869281                   5939          DC    C'rd_kafka_q_new0'
00003CF3 00                                 5940          DC    X'00'
                                            5941 rd_kafka_q_new0 DCCPRLG CINDEX=1426,BASER=12,FRAME=208,ENTRY=YES,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME1426
                                            5942          macro
                                            5943          dccextrn &m
                                            5944          gblc    &$dccext(1000)
                                            5945          gbla    &$dccexti
                                            5946          lcla    &i
                                            5947 &$dccext(&$dccexti+1) setc    '&m'
                                            5948 &i       seta    1
                                            5949 .loop    aif    (&i gt &$dccexti).around
                                            5950          aif    ('&$dccext(&i)' eq '&m').getout
                                            5951 &i       seta    &i+1
                                            5952          ago     .loop
                                            5953 .around  anop
                                            5954 &$dccexti seta &$dccexti+1
                                                                                                                           Page  122 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5955          extrn  &m
                                            5956 .getout  anop
                                            5957          mend
00003CF8                                    5958+$eye0123    ds    0d                                                    02-DCCCA
00003CF8 C4C3C3                             5959+         dc cl3'DCC'                                                    02-DCCCA
00003CFB 01                                 5960+         dc xl1'01' format one                                          02-DCCCA
00003CFC 00000000                           5961+         dc a(0)                                                        02-DCCCA
00003D00 0000000000003D6A                   5962+         dc ad(@PER_1426)                                               02-DCCCA
00003D08 00000000000000D0                   5963+         dc ad(208)                                                     02-DCCCA
00003D10 0000000000000000                   5964+         dc ad(0)                                                       02-DCCCA
00003D18 0000000000001000                   5965+         dc ad(4096)                                                    02-DCCCA
00003D20 20                                 5966+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003D21 03                                 5967+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003D22 03                                 5968+         dc al1(3)                                                      02-DCCCA
00003D23 08                                 5969+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003D24 00                                 5970+         dc bl.8'00000000'                                              02-DCCCA
00003D25 000000                             5971+         dc al3(0)                                                      02-DCCCA
00003D28 0000000000003CE0                   5972+         dc ad(@LNAME1426)                                              02-DCCCA
00003D30                                    5973+         ds 0d                                                          02-DCCCA
00003D30 0000000000003CF8                   5974+         dc ad($eye0123)                                                02-DCCCA
00003D38 0000000000000000                   5975+         dc ad(0)                                                       02-DCCCA
00003D40                                    5976+         ds    0d                                                       01-DCCPR
                                            5977+         entry rd_kafka_q_new0                                          01-DCCPR
00003D40                                    5978+rd_kafka_q_new0 ds 0d                                                   01-DCCPR
00003D40                                    5979+@REGION_1426_1 ds 0h                                                    01-DCCPR
00003D40 EBEC D008 0024          00000008   5980+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003D46 E3E0 D088 0004          00000088   5981+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003D4C E3C0 D090 0004          00000090   5982+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003D52 B904 002E                          5983+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003D56 E3B0 C018 0004          00000018   5984+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003D5C A7EB 00D0               000000D0   5985+         aghi  14,208              increase by frame size               01-DCCPR
00003D60 E3E0 C020 0021          00000020   5986+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003D66 4720 B020               00000020   5987+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003D6A                                    5988+@PER_1426 ds   0h                                                       01-DCCPR
00003D6A EBDE 2080 0024          00000080   5989+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003D70 E3C0 2090 0024          00000090   5990+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003D76 B904 00D2                          5991+         lgr   13,2                set real frame pointer               01-DCCPR
00003D7A B904 00CF                          5992+         lgr   12,15               set base reg                         01-DCCPR
                        00003D40            5993+         using @REGION_1426_1,12                                        01-DCCPR
00003D7E B904 0031                          5994          LGR   3,1         ; ptr to parm area
                                            5995 * ******* End of Prologue
                                            5996 * *
                                            5997 * ***           rd_kafka_q_t *rkq = rd_malloc(sizeof(*rkq));
00003D82 E548 D0B0 00B0          000000B0   5998          MVGHI 176(13),176
00003D88 4110 D0B0               000000B0   5999          LA    1,176(0,13)
00003D8C E3F0 C0F8 0004          00003E38   6000          LG    15,@lit_1426_193 ; rd_malloc
00003D92                                    6001 @@gen_label318 DS    0H
00003D92 05EF                               6002          BALR  14,15
00003D94                                    6003 @@gen_label319 DS    0H
00003D94 B904 002F                          6004          LGR   2,15
                                            6005 * ***           rd_kafka_q_init0(rkq,rk,__FUNCTION__,109);
00003D98 E320 D0B0 0024          000000B0   6006          STG   2,176(0,13)
                                                                                                                           Page  123 
  Active Usings: @REGION_1426_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003D9E E3F0 3000 0004          00000000   6007          LG    15,0(0,3)   ; rk
00003DA4 E3F0 D0B8 0024          000000B8   6008          STG   15,184(0,13)
00003DAA E3F0 C108 0004          00003E48   6009          LG    15,@lit_1426_194
00003DB0 41F0 F1C0               000001C0   6010          LA    15,448(0,15)
00003DB4 E3F0 D0C0 0024          000000C0   6011          STG   15,192(0,13)
00003DBA E548 D0C8 006D          000000C8   6012          MVGHI 200(13),109
00003DC0 4110 D0B0               000000B0   6013          LA    1,176(0,13)
00003DC4 E3F0 C100 0004          00003E40   6014          LG    15,@lit_1426_195 ; rd_kafka_q_init0
00003DCA                                    6015 @@gen_label320 DS    0H
00003DCA 05EF                               6016          BALR  14,15
00003DCC                                    6017 @@gen_label321 DS    0H
                                            6018 * ***           rkq->rkq_flags |= 0x1;
00003DCC 58F0 2084               00000084   6019          L     15,132(0,2)
00003DD0 A5FB 0001               00000001   6020          OILL  15,1
00003DD4 50F0 2084               00000084   6021          ST    15,132(0,2)
                                            6022 * ***
                                            6023 * ***
                                            6024 * ***
                                            6025 * ***      rkq->rkq_name = func;
00003DD8 E3F0 3008 0004          00000008   6026          LG    15,8(0,3)   ; func
00003DDE E3F0 20A8 0024          000000A8   6027          STG   15,168(0,2) ; offset of rkq_name in rd_kafka_q_s
                                            6028 * ***
                                            6029 * ***           return rkq;
00003DE4 B904 00F2                          6030          LGR   15,2
                                            6031 * ***   }
                                            6032 * * **** Start of Epilogue
                                            6033          DCCEPIL
00003DE8                                    6034+         ds 0h                                                          01-DCCEP
                                            6035+* Epilog
00003DE8 D707 D088 D088 00000088 00000088   6036+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003DEE E3D0 D080 0004          00000080   6037+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003DF4 E3C0 D090 0004          00000090   6038+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003DFA E3B0 C018 0004          00000018   6039+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003E00 E3C0 B010 0021          00000010   6040+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003E06 E3E0 D008 0004          00000008   6041+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003E0C EB1C D020 0004          00000020   6042+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003E12 078E                               6043+         bcr 8,14                if same dsab, just return              01-DCCEP
00003E14 E3F0 D010 0024          00000010   6044+         stg 15,16(0,13)         save return code                       01-DCCEP
00003E1A E300 D018 0024          00000018   6045+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003E20 E3F0 D090 0004          00000090   6046+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003E26 E3F0 F018 0004          00000018   6047+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003E2C 47F0 F040               00000040   6048+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6049+* End of Epilog
                                            6050 * * **** End of Epilogue
00003E30                                    6051          DS    0D
00003E30 000000D0                           6052 @FRAMESIZE_1426 DC F'208'
00003E34 00000000
00003E38 0000000000000590                   6053 @lit_1426_193 DC AD(rd_malloc)
00003E40 0000000000003BB0                   6054 @lit_1426_195 DC AD(rd_kafka_q_init0)
00003E48 0000000000007BF0                   6055 @lit_1426_194 DC AD(@DATA)
                                            6056          DROP  12
                                            6057 *
                                                                                                                           Page  124 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6058 *   DSECT for automatic variables in "rd_kafka_q_new0"
                                            6059 *      (FUNCTION #1426)
                                            6060 *
00000000                00000000 000000A8   6061 @AUTO#rd_kafka_q_new0 DSECT
00000000                                    6062          DS    XL168
                                            6063 *
00003E50                00000000 00007BF0   6064 @CODE    CSECT
                                            6065 *
                                            6066 *
                                            6067 *
                                            6068 * ....... start of rd_kafka_q_fwd_set0
                                            6069 rd_kafka_q_fwd_set0 ALIAS X'99846D92818692816D986D86A6846DA285A3F0'
00003E50                                    6070 @LNAME1438 DS  0H
00003E50 00000013                           6071          DC    X'00000013'
00003E54 99846D9281869281                   6072          DC    C'rd_kafka_q_fwd_set0'
00003E67 00                                 6073          DC    X'00'
                                            6074 rd_kafka_q_fwd_set0 DCCPRLG CINDEX=1438,BASER=12,FRAME=192,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1438
                                            6075          macro
                                            6076          dccextrn &m
                                            6077          gblc    &$dccext(1000)
                                            6078          gbla    &$dccexti
                                            6079          lcla    &i
                                            6080 &$dccext(&$dccexti+1) setc    '&m'
                                            6081 &i       seta    1
                                            6082 .loop    aif    (&i gt &$dccexti).around
                                            6083          aif    ('&$dccext(&i)' eq '&m').getout
                                            6084 &i       seta    &i+1
                                            6085          ago     .loop
                                            6086 .around  anop
                                            6087 &$dccexti seta &$dccexti+1
                                            6088          extrn  &m
                                            6089 .getout  anop
                                            6090          mend
00003E68                                    6091+$eye0126    ds    0d                                                    02-DCCCA
00003E68 C4C3C3                             6092+         dc cl3'DCC'                                                    02-DCCCA
00003E6B 01                                 6093+         dc xl1'01' format one                                          02-DCCCA
00003E6C 00000000                           6094+         dc a(0)                                                        02-DCCCA
00003E70 0000000000003EDA                   6095+         dc ad(@PER_1438)                                               02-DCCCA
00003E78 00000000000000C0                   6096+         dc ad(192)                                                     02-DCCCA
00003E80 0000000000000000                   6097+         dc ad(0)                                                       02-DCCCA
00003E88 0000000000001000                   6098+         dc ad(4096)                                                    02-DCCCA
00003E90 20                                 6099+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003E91 03                                 6100+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003E92 03                                 6101+         dc al1(3)                                                      02-DCCCA
00003E93 08                                 6102+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003E94 00                                 6103+         dc bl.8'00000000'                                              02-DCCCA
00003E95 000000                             6104+         dc al3(0)                                                      02-DCCCA
00003E98 0000000000003E50                   6105+         dc ad(@LNAME1438)                                              02-DCCCA
00003EA0                                    6106+         ds 0d                                                          02-DCCCA
00003EA0 0000000000003E68                   6107+         dc ad($eye0126)                                                02-DCCCA
00003EA8 0000000000000000                   6108+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  125 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003EB0                                    6109+         ds    0d                                                       01-DCCPR
                                            6110+         entry rd_kafka_q_fwd_set0                                      01-DCCPR
00003EB0                                    6111+rd_kafka_q_fwd_set0 ds 0d                                               01-DCCPR
00003EB0                                    6112+@REGION_1438_1 ds 0h                                                    01-DCCPR
00003EB0 EBEC D008 0024          00000008   6113+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003EB6 E3E0 D088 0004          00000088   6114+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003EBC E3C0 D090 0004          00000090   6115+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003EC2 B904 002E                          6116+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003EC6 E3B0 C018 0004          00000018   6117+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003ECC A7EB 00C0               000000C0   6118+         aghi  14,192              increase by frame size               01-DCCPR
00003ED0 E3E0 C020 0021          00000020   6119+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003ED6 4720 B020               00000020   6120+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003EDA                                    6121+@PER_1438 ds   0h                                                       01-DCCPR
00003EDA EBDE 2080 0024          00000080   6122+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003EE0 E3C0 2090 0024          00000090   6123+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003EE6 B904 00D2                          6124+         lgr   13,2                set real frame pointer               01-DCCPR
00003EEA B904 00CF                          6125+         lgr   12,15               set base reg                         01-DCCPR
                        00003EB0            6126+         using @REGION_1438_1,12                                        01-DCCPR
00003EEE B904 0041                          6127          LGR   4,1         ; ptr to parm area
                                            6128 * ******* End of Prologue
                                            6129 * *
00003EF2 EB23 4000 0004          00000000   6130          LMG   2,3,0(4)    ; srcq
                                            6131 * ***
                                            6132 * ***           if (do_lock)
00003EF8 E3F0 4014 0012          00000014   6133          LT    15,20(0,4)  ; do_lock
00003EFE 4780 C064               00003F14   6134          BZ    @L640
                                            6135 * ***                   mtx_lock(&srcq->rkq_lock);
00003F02 E320 D0A8 0024          000000A8   6136          STG   2,168(0,13)
00003F08 4110 D0A8               000000A8   6137          LA    1,168(0,13)
00003F0C E3F0 C160 0004          00004010   6138          LG    15,@lit_1438_197 ; mtx_lock
00003F12                                    6139 @@gen_label323 DS    0H
00003F12 05EF                               6140          BALR  14,15
00003F14                                    6141 @@gen_label324 DS    0H
00003F14                                    6142 @L640    DS    0H
                                            6143 * ***           if (fwd_app)
00003F14 E3F0 401C 0012          0000001C   6144          LT    15,28(0,4)  ; fwd_app
00003F1A 4780 C07A               00003F2A   6145          BZ    @L641
                                            6146 * ***                   srcq->rkq_flags |= 0x4;
00003F1E 58F0 2084               00000084   6147          L     15,132(0,2)
00003F22 A5FB 0004               00000004   6148          OILL  15,4
00003F26 50F0 2084               00000084   6149          ST    15,132(0,2)
00003F2A                                    6150 @L641    DS    0H
                                            6151 * ***      if (srcq->rkq_fwdq) {
00003F2A E3F0 2058 0002          00000058   6152          LTG   15,88(0,2)  ; offset of rkq_fwdq in rd_kafka_q_s
00003F30 4780 C0AC               00003F5C   6153          BZ    @L642
                                            6154 * ***         rd_kafka_q_destroy0(srcq->rkq_fwdq, 0 );
00003F34 E3F0 2058 0004          00000058   6155          LG    15,88(0,2)
00003F3A E3F0 D0A8 0024          000000A8   6156          STG   15,168(0,13)
00003F40 D707 D0B0 D0B0 000000B0 000000B0   6157          XC    176(8,13),176(13)
00003F46 4110 D0A8               000000A8   6158          LA    1,168(0,13)
00003F4A E3F0 C168 0004          00004018   6159          LG    15,@lit_1438_198 ; rd_kafka_q_destroy0
00003F50                                    6160 @@gen_label327 DS    0H
                                                                                                                           Page  126 
  Active Usings: @REGION_1438_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003F50 05EF                               6161          BALR  14,15
00003F52                                    6162 @@gen_label328 DS    0H
                                            6163 * ***         srcq->rkq_fwdq = ((void *)0);
00003F52 A7F9 0000               00000000   6164          LGHI  15,0        ; 0
00003F56 E3F0 2058 0024          00000058   6165          STG   15,88(0,2)  ; offset of rkq_fwdq in rd_kafka_q_s
                                            6166 * ***      }
00003F5C                                    6167 @L642    DS    0H
                                            6168 * ***      if (destq) {
00003F5C B902 00F3                          6169          LTGR  15,3
00003F60 4780 C0F4               00003FA4   6170          BZ    @L643
                                            6171 * ***         rd_kafka_q_keep(destq);
00003F64 E330 D0A8 0024          000000A8   6172          STG   3,168(0,13)
00003F6A 4110 D0A8               000000A8   6173          LA    1,168(0,13)
00003F6E E3F0 C170 0004          00004020   6174          LG    15,@lit_1438_200 ; rd_kafka_q_keep
00003F74                                    6175 @@gen_label330 DS    0H
00003F74 05EF                               6176          BALR  14,15
00003F76                                    6177 @@gen_label331 DS    0H
                                            6178 * ***
                                            6179 * ***
                                            6180 * ***
                                            6181 * ***                   if (srcq->rkq_qlen > 0) {
00003F76 E55C 2070 0000          00000070   6182          CHSI  112(2),0
00003F7C 47D0 C0EE               00003F9E   6183          BNH   @L644
                                            6184 * ***            do {} while (0);
00003F80                                    6185 @L645    DS    0H
                                            6186 * ***            rd_kafka_q_concat0(destq,srcq,1 );
00003F80 E330 D0A8 0024          000000A8   6187          STG   3,168(0,13)
00003F86 E320 D0B0 0024          000000B0   6188          STG   2,176(0,13)
00003F8C E548 D0B8 0001          000000B8   6189          MVGHI 184(13),1
00003F92 4110 D0A8               000000A8   6190          LA    1,168(0,13)
00003F96 E3F0 C178 0004          00004028   6191          LG    15,@lit_1438_201 ; rd_kafka_q_concat0
00003F9C                                    6192 @@gen_label333 DS    0H
00003F9C 05EF                               6193          BALR  14,15
00003F9E                                    6194 @@gen_label334 DS    0H
                                            6195 * ***         }
00003F9E                                    6196 @L644    DS    0H
                                            6197 * ***
                                            6198 * ***         srcq->rkq_fwdq = destq;
00003F9E E330 2058 0024          00000058   6199          STG   3,88(0,2)   ; offset of rkq_fwdq in rd_kafka_q_s
                                            6200 * ***      }
00003FA4                                    6201 @L643    DS    0H
                                            6202 * ***           if (do_lock)
00003FA4 E3F0 4014 0012          00000014   6203          LT    15,20(0,4)  ; do_lock
00003FAA 4780 C110               00003FC0   6204          BZ    @ret_lab_1438
                                            6205 * ***                   mtx_unlock(&srcq->rkq_lock);
00003FAE E320 D0A8 0024          000000A8   6206          STG   2,168(0,13)
00003FB4 4110 D0A8               000000A8   6207          LA    1,168(0,13)
00003FB8 E3F0 C180 0004          00004030   6208          LG    15,@lit_1438_202 ; mtx_unlock
00003FBE                                    6209 @@gen_label336 DS    0H
00003FBE 05EF                               6210          BALR  14,15
00003FC0                                    6211 @@gen_label337 DS    0H
00003FC0                                    6212 @L648    DS    0H
                                                                                                                           Page  127 
  Active Usings: @REGION_1438_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6213 * ***   }
00003FC0                                    6214 @ret_lab_1438 DS 0H
                                            6215 * * **** Start of Epilogue
                                            6216          DCCEPIL
00003FC0                                    6217+         ds 0h                                                          01-DCCEP
                                            6218+* Epilog
00003FC0 D707 D088 D088 00000088 00000088   6219+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003FC6 E3D0 D080 0004          00000080   6220+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003FCC E3C0 D090 0004          00000090   6221+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003FD2 E3B0 C018 0004          00000018   6222+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003FD8 E3C0 B010 0021          00000010   6223+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003FDE E3E0 D008 0004          00000008   6224+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003FE4 EB1C D020 0004          00000020   6225+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003FEA 078E                               6226+         bcr 8,14                if same dsab, just return              01-DCCEP
00003FEC E3F0 D010 0024          00000010   6227+         stg 15,16(0,13)         save return code                       01-DCCEP
00003FF2 E300 D018 0024          00000018   6228+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003FF8 E3F0 D090 0004          00000090   6229+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003FFE E3F0 F018 0004          00000018   6230+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004004 47F0 F040               00000040   6231+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6232+* End of Epilog
                                            6233 * * **** End of Epilogue
00004008                                    6234          DS    0D
00004008 000000C0                           6235 @FRAMESIZE_1438 DC F'192'
0000400C 00000000
00004010 0000000000000000                   6236 @lit_1438_197 DC AD(mtx_lock)
00004018 0000000000001140                   6237 @lit_1438_198 DC AD(rd_kafka_q_destroy0)
00004020 0000000000000EC0                   6238 @lit_1438_200 DC AD(rd_kafka_q_keep)
00004028 00000000000022E0                   6239 @lit_1438_201 DC AD(rd_kafka_q_concat0)
00004030 0000000000000000                   6240 @lit_1438_202 DC AD(mtx_unlock)
                                            6241          DROP  12
                                            6242 *
                                            6243 *   DSECT for automatic variables in "rd_kafka_q_fwd_set0"
                                            6244 *      (FUNCTION #1438)
                                            6245 *
00000000                00000000 000000A8   6246 @AUTO#rd_kafka_q_fwd_set0 DSECT
00000000                                    6247          DS    XL168
                                            6248 *
00004038                00000000 00007BF0   6249 @CODE    CSECT
                                            6250 *
                                            6251 *
                                            6252 *
                                            6253 * ....... start of rd_kafka_q_purge0
                                            6254 rd_kafka_q_purge0 ALIAS X'99846D92818692816D986D97A4998785F0'
00004038                                    6255 @LNAME1433 DS  0H
00004038 00000011                           6256          DC    X'00000011'
0000403C 99846D9281869281                   6257          DC    C'rd_kafka_q_purge0'
0000404D 00                                 6258          DC    X'00'
                                            6259 rd_kafka_q_purge0 DCCPRLG CINDEX=1433,BASER=12,FRAME=200,ENTRY=YES,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1433
                                            6260          macro
                                            6261          dccextrn &m
                                            6262          gblc    &$dccext(1000)
                                                                                                                           Page  128 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6263          gbla    &$dccexti
                                            6264          lcla    &i
                                            6265 &$dccext(&$dccexti+1) setc    '&m'
                                            6266 &i       seta    1
                                            6267 .loop    aif    (&i gt &$dccexti).around
                                            6268          aif    ('&$dccext(&i)' eq '&m').getout
                                            6269 &i       seta    &i+1
                                            6270          ago     .loop
                                            6271 .around  anop
                                            6272 &$dccexti seta &$dccexti+1
                                            6273          extrn  &m
                                            6274 .getout  anop
                                            6275          mend
00004050                                    6276+$eye0129    ds    0d                                                    02-DCCCA
00004050 C4C3C3                             6277+         dc cl3'DCC'                                                    02-DCCCA
00004053 01                                 6278+         dc xl1'01' format one                                          02-DCCCA
00004054 00000000                           6279+         dc a(0)                                                        02-DCCCA
00004058 00000000000040C2                   6280+         dc ad(@PER_1433)                                               02-DCCCA
00004060 00000000000000C8                   6281+         dc ad(200)                                                     02-DCCCA
00004068 0000000000000000                   6282+         dc ad(0)                                                       02-DCCCA
00004070 0000000000001000                   6283+         dc ad(4096)                                                    02-DCCCA
00004078 20                                 6284+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004079 03                                 6285+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000407A 03                                 6286+         dc al1(3)                                                      02-DCCCA
0000407B 08                                 6287+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000407C 00                                 6288+         dc bl.8'00000000'                                              02-DCCCA
0000407D 000000                             6289+         dc al3(0)                                                      02-DCCCA
00004080 0000000000004038                   6290+         dc ad(@LNAME1433)                                              02-DCCCA
00004088                                    6291+         ds 0d                                                          02-DCCCA
00004088 0000000000004050                   6292+         dc ad($eye0129)                                                02-DCCCA
00004090 0000000000000000                   6293+         dc ad(0)                                                       02-DCCCA
00004098                                    6294+         ds    0d                                                       01-DCCPR
                                            6295+         entry rd_kafka_q_purge0                                        01-DCCPR
00004098                                    6296+rd_kafka_q_purge0 ds 0d                                                 01-DCCPR
00004098                                    6297+@REGION_1433_1 ds 0h                                                    01-DCCPR
00004098 EBEC D008 0024          00000008   6298+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000409E E3E0 D088 0004          00000088   6299+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000040A4 E3C0 D090 0004          00000090   6300+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000040AA B904 002E                          6301+         lgr   2,14                copy addr of our savearea            01-DCCPR
000040AE E3B0 C018 0004          00000018   6302+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000040B4 A7EB 00C8               000000C8   6303+         aghi  14,200              increase by frame size               01-DCCPR
000040B8 E3E0 C020 0021          00000020   6304+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000040BE 4720 B020               00000020   6305+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000040C2                                    6306+@PER_1433 ds   0h                                                       01-DCCPR
000040C2 EBDE 2080 0024          00000080   6307+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000040C8 E3C0 2090 0024          00000090   6308+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000040CE B904 00D2                          6309+         lgr   13,2                set real frame pointer               01-DCCPR
000040D2 B904 00CF                          6310+         lgr   12,15               set base reg                         01-DCCPR
                        00004098            6311+         using @REGION_1433_1,12                                        01-DCCPR
                                            6312 * ******* End of Prologue
                                            6313 * *
000040D6 E330 1000 0004          00000000   6314          LG    3,0(0,1)    ; rkq
                                                                                                                           Page  129 
  Active Usings: @REGION_1433_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000040DC 5840 100C               0000000C   6315          L     4,12(0,1)   ; do_lock
                                            6316 * ***      rd_kafka_op_t *rko, *next;
                                            6317 * ***      struct { struct rd_kafka_op_s *tqh_first; struct rd_kafka_o\
                                            6318 * p_s * *tqh_last; } tmpq = { (((void *)0)), &(tmpq).tqh_first };
000040E0 41F0 D0A8               000000A8   6319          LA    15,168(0,13)
000040E4 E3F0 D0B0 0024          000000B0   6320          STG   15,176(0,13)
                                            6321 * setting 8 bytes to 0x00
000040EA D707 D0A8 D0A8 000000A8 000000A8   6322          XC    168(8,13),168(13)
                                            6323 * ***           rd_kafka_q_t *fwdq;
                                            6324 * ***           int cnt = 0;
000040F0 A728 0000               00000000   6325          LHI   2,0         ; 0
                                            6326 * ***
                                            6327 * ***           if (do_lock)
000040F4 1244                               6328          LTR   4,4
000040F6 4780 C074               0000410C   6329          BZ    @L649
                                            6330 * ***                   mtx_lock(&rkq->rkq_lock);
000040FA E330 D0B8 0024          000000B8   6331          STG   3,184(0,13)
00004100 4110 D0B8               000000B8   6332          LA    1,184(0,13)
00004104 E3F0 C0F8 0004          00004190   6333          LG    15,@lit_1433_205 ; mtx_lock
0000410A                                    6334 @@gen_label339 DS    0H
0000410A 05EF                               6335          BALR  14,15
0000410C                                    6336 @@gen_label340 DS    0H
0000410C                                    6337 @L649    DS    0H
                                            6338 * ***
                                            6339 * ***           if ((fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
0000410C E330 D0B8 0024          000000B8   6340          STG   3,184(0,13)
00004112 D707 D0C0 D0C0 000000C0 000000C0   6341          XC    192(8,13),192(13)
00004118 4110 D0B8               000000B8   6342          LA    1,184(0,13)
0000411C E3F0 C100 0004          00004198   6343          LG    15,@lit_1433_206 ; rd_kafka_q_fwd_get
00004122                                    6344 @@gen_label341 DS    0H
00004122 05EF                               6345          BALR  14,15
00004124                                    6346 @@gen_label342 DS    0H
00004124 B904 005F                          6347          LGR   5,15
00004128 B902 00F5                          6348          LTGR  15,5
0000412C 4780 C138               000041D0   6349          BZ    @L652
                                            6350 * ***                   if (do_lock)
00004130 1244                               6351          LTR   4,4
00004132 4780 C0B0               00004148   6352          BZ    @L651
                                            6353 * ***                           mtx_unlock(&rkq->rkq_lock);
00004136 E330 D0B8 0024          000000B8   6354          STG   3,184(0,13)
0000413C 4110 D0B8               000000B8   6355          LA    1,184(0,13)
00004140 E3F0 C108 0004          000041A0   6356          LG    15,@lit_1433_207 ; mtx_unlock
00004146                                    6357 @@gen_label345 DS    0H
00004146 05EF                               6358          BALR  14,15
00004148                                    6359 @@gen_label346 DS    0H
00004148                                    6360 @L651    DS    0H
                                            6361 * ***                   cnt = rd_kafka_q_purge0(fwdq, 1 );
00004148 E350 D0B8 0024          000000B8   6362          STG   5,184(0,13)
0000414E E548 D0C0 0001          000000C0   6363          MVGHI 192(13),1
00004154 4110 D0B8               000000B8   6364          LA    1,184(0,13)
00004158 E3F0 C110 0004          000041A8   6365          LG    15,@lit_1433_208 ; rd_kafka_q_purge0
0000415E                                    6366 @@gen_label347 DS    0H
                                                                                                                           Page  130 
  Active Usings: @REGION_1433_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000415E 05EF                               6367          BALR  14,15
00004160                                    6368 @@gen_label348 DS    0H
00004160 182F                               6369          LR    2,15        ; cnt
                                            6370 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
00004162 E350 D0B8 0024          000000B8   6371          STG   5,184(0,13)
00004168 D707 D0C0 D0C0 000000C0 000000C0   6372          XC    192(8,13),192(13)
0000416E 4110 D0B8               000000B8   6373          LA    1,184(0,13)
00004172 E3F0 C118 0004          000041B0   6374          LG    15,@lit_1433_209 ; rd_kafka_q_destroy0
00004178                                    6375 @@gen_label349 DS    0H
00004178 05EF                               6376          BALR  14,15
0000417A                                    6377 @@gen_label350 DS    0H
                                            6378 * ***                   return cnt;
0000417A B914 00F2                          6379          LGFR  15,2
0000417E 47F0 C208               000042A0   6380          B     @ret_lab_1433
00004188                                    6381          DS    0D
00004188 000000C8                           6382 @FRAMESIZE_1433 DC F'200'
0000418C 00000000
00004190 0000000000000000                   6383 @lit_1433_205 DC AD(mtx_lock)
00004198 0000000000001510                   6384 @lit_1433_206 DC AD(rd_kafka_q_fwd_get)
000041A0 0000000000000000                   6385 @lit_1433_207 DC AD(mtx_unlock)
000041A8 0000000000004098                   6386 @lit_1433_208 DC AD(rd_kafka_q_purge0)
000041B0 0000000000001140                   6387 @lit_1433_209 DC AD(rd_kafka_q_destroy0)
000041B8 0000000000002248                   6388 @lit_1433_212 DC AD(rd_kafka_q_mark_served)
000041C0 0000000000001470                   6389 @lit_1433_213 DC AD(rd_kafka_q_reset)
000041C8 0000000000000000                   6390 @lit_1433_215 DC AD(rd_kafka_op_destroy)
                                            6391 * ***           }
                                            6392 * ***
                                            6393 * ***
                                            6394 * ***
                                            6395 * ***      do { if(((&rkq->rkq_q)->tqh_first)) { ((&rkq->rkq_q)->tqh_f\
                                            6396 * irst)->rko_link .tqe_prev = &(&tmpq)->tqh_first; (&tmpq)->tqh_first \
                                            6397 * = (&rkq->rkq_q)->tqh_first; (&tmpq)->tqh_last = (&rkq->rkq_q)->tqh_l\
                                            6398 * ast; do { (&rkq->rkq_q)->tqh_first = (((void *)0)); (&rkq->rkq_q)->t\
                                            6399 * qh_last = &(&rkq->rkq_q)->tqh_first; } while ( 0); } else do { (&tmp\
                                            6400 * q)->tqh_first = (((void *)0)); (&tmpq)->tqh_last = &(&tmpq)->tqh_fir\
                                            6401 * st; } while ( 0); } while ( 0);
000041D0                                    6402 @L652    DS    0H
000041D0 E3F0 3060 0002          00000060   6403          LTG   15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
000041D6 4780 C182               0000421A   6404          BZ    @L660
000041DA E3F0 3060 0004          00000060   6405          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
000041E0 4110 D0A8               000000A8   6406          LA    1,168(0,13)
000041E4 E310 F008 0024          00000008   6407          STG   1,8(0,15)   ; offset of tqe_prev in 0000055
000041EA E3F0 3060 0004          00000060   6408          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
000041F0 E3F0 D0A8 0024          000000A8   6409          STG   15,168(0,13)
000041F6 E3F0 3068 0004          00000068   6410          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
000041FC E3F0 D0B0 0024          000000B0   6411          STG   15,176(0,13) ; offset of tqh_last in 0000155
00004202                                    6412 @L656    DS    0H
00004202 A7F9 0000               00000000   6413          LGHI  15,0        ; 0
00004206 E3F0 3060 0024          00000060   6414          STG   15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
0000420C 41F0 3060               00000060   6415          LA    15,96(0,3)
00004210 E3F0 3068 0024          00000068   6416          STG   15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
00004216 47F0 C196               0000422E   6417          B     @L659
                                                                                                                           Page  131 
  Active Usings: @REGION_1433_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000421A                                    6418 @L660    DS    0H
0000421A A7F9 0000               00000000   6419          LGHI  15,0        ; 0
0000421E E3F0 D0A8 0024          000000A8   6420          STG   15,168(0,13)
00004224 41F0 D0A8               000000A8   6421          LA    15,168(0,13)
00004228 E3F0 D0B0 0024          000000B0   6422          STG   15,176(0,13) ; offset of tqh_last in 0000155
0000422E                                    6423 @L659    DS    0H
                                            6424 * ***
                                            6425 * ***           rd_kafka_q_mark_served(rkq);
0000422E E330 D0B8 0024          000000B8   6426          STG   3,184(0,13)
00004234 4110 D0B8               000000B8   6427          LA    1,184(0,13)
00004238 E3F0 C120 0004          000041B8   6428          LG    15,@lit_1433_212 ; rd_kafka_q_mark_served
0000423E                                    6429 @@gen_label352 DS    0H
0000423E 05EF                               6430          BALR  14,15
00004240                                    6431 @@gen_label353 DS    0H
                                            6432 * ***
                                            6433 * ***
                                            6434 * ***           rd_kafka_q_reset(rkq);
00004240 E330 D0B8 0024          000000B8   6435          STG   3,184(0,13)
00004246 4110 D0B8               000000B8   6436          LA    1,184(0,13)
0000424A E3F0 C128 0004          000041C0   6437          LG    15,@lit_1433_213 ; rd_kafka_q_reset
00004250                                    6438 @@gen_label354 DS    0H
00004250 05EF                               6439          BALR  14,15
00004252                                    6440 @@gen_label355 DS    0H
                                            6441 * ***
                                            6442 * ***           if (do_lock)
00004252 1244                               6443          LTR   4,4
00004254 4780 C1D2               0000426A   6444          BZ    @L663
                                            6445 * ***                   mtx_unlock(&rkq->rkq_lock);
00004258 E330 D0B8 0024          000000B8   6446          STG   3,184(0,13)
0000425E 4110 D0B8               000000B8   6447          LA    1,184(0,13)
00004262 E3F0 C108 0004          000041A0   6448          LG    15,@lit_1433_207 ; mtx_unlock
00004268                                    6449 @@gen_label357 DS    0H
00004268 05EF                               6450          BALR  14,15
0000426A                                    6451 @@gen_label358 DS    0H
0000426A                                    6452 @L663    DS    0H
                                            6453 * ***
                                            6454 * ***
                                            6455 * ***      next = ((&tmpq)->tqh_first);
0000426A E330 D0A8 0004          000000A8   6456          LG    3,168(0,13)
                                            6457 * ***      while ((rko = next)) {
00004270 47F0 C1F8               00004290   6458          B     @L667
00004274                                    6459 @L666    DS    0H
                                            6460 * ***         next = ((next)->rko_link .tqe_next);
00004274 E330 3000 0004          00000000   6461          LG    3,0(0,3)    ; next
                                            6462 * ***         rd_kafka_op_destroy(rko);
0000427A E3F0 D0B8 0024          000000B8   6463          STG   15,184(0,13)
00004280 4110 D0B8               000000B8   6464          LA    1,184(0,13)
00004284 E3F0 C130 0004          000041C8   6465          LG    15,@lit_1433_215 ; rd_kafka_op_destroy
0000428A                                    6466 @@gen_label359 DS    0H
0000428A 05EF                               6467          BALR  14,15
0000428C                                    6468 @@gen_label360 DS    0H
                                            6469 * ***                   cnt++;
                                                                                                                           Page  132 
  Active Usings: @REGION_1433_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000428C A72A 0001               00000001   6470          AHI   2,1
                                            6471 * ***      }
00004290                                    6472 @L667    DS    0H
00004290 B904 00F3                          6473          LGR   15,3        ; rko
00004294 B902 0013                          6474          LTGR  1,3
00004298 4770 C1DC               00004274   6475          BNZ   @L666
                                            6476 * ***
                                            6477 * ***           return cnt;
0000429C B914 00F2                          6478          LGFR  15,2
                                            6479 * ***   }
000042A0                                    6480 @ret_lab_1433 DS 0H
                                            6481 * * **** Start of Epilogue
                                            6482          DCCEPIL
000042A0                                    6483+         ds 0h                                                          01-DCCEP
                                            6484+* Epilog
000042A0 D707 D088 D088 00000088 00000088   6485+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000042A6 E3D0 D080 0004          00000080   6486+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000042AC E3C0 D090 0004          00000090   6487+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000042B2 E3B0 C018 0004          00000018   6488+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000042B8 E3C0 B010 0021          00000010   6489+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000042BE E3E0 D008 0004          00000008   6490+         lg  14,8(0,13)          load up return address                 01-DCCEP
000042C4 EB1C D020 0004          00000020   6491+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000042CA 078E                               6492+         bcr 8,14                if same dsab, just return              01-DCCEP
000042CC E3F0 D010 0024          00000010   6493+         stg 15,16(0,13)         save return code                       01-DCCEP
000042D2 E300 D018 0024          00000018   6494+         stg 0,24(0,13)          save more return code                  01-DCCEP
000042D8 E3F0 D090 0004          00000090   6495+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000042DE E3F0 F018 0004          00000018   6496+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000042E4 47F0 F040               00000040   6497+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6498+* End of Epilog
                                            6499 * * **** End of Epilogue
                                            6500          DROP  12
                                            6501 *
                                            6502 *   DSECT for automatic variables in "rd_kafka_q_purge0"
                                            6503 *      (FUNCTION #1433)
                                            6504 *
00000000                00000000 000000B8   6505 @AUTO#rd_kafka_q_purge0 DSECT
00000000                                    6506          DS    XL168
000000A8                                    6507 rd_kafka_q_purge0#cnt#0 DS 1F ; cnt
000000AC                000000AC 000000A8   6508          ORG   @AUTO#rd_kafka_q_purge0+168
000000A8                                    6509 rd_kafka_q_purge0#tmpq#0 DS 16XL1 ; tmpq
                                            6510 *
000042E8                00000000 00007BF0   6511 @CODE    CSECT
                                            6512 *
                                            6513 *
                                            6514 *
                                            6515 * ....... start of rd_kafka_q_purge_toppar_version
                                            6516 rd_kafka_q_purge_toppar_version ALIAS X'99846D92818692816D986D97A499878*
                                                                56DA396979781996DA58599A2899695'
000042E8                                    6517 @LNAME1434 DS  0H
000042E8 0000001F                           6518          DC    X'0000001F'
000042EC 99846D9281869281                   6519          DC    C'rd_kafka_q_purge_toppar_version'
0000430B 00                                 6520          DC    X'00'
                                                                                                                           Page  133 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6521 rd_kafka_q_purge_toppar_version DCCPRLG CINDEX=1434,BASER=12,FRAME=208,*
                                                                ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1434
                                            6522          macro
                                            6523          dccextrn &m
                                            6524          gblc    &$dccext(1000)
                                            6525          gbla    &$dccexti
                                            6526          lcla    &i
                                            6527 &$dccext(&$dccexti+1) setc    '&m'
                                            6528 &i       seta    1
                                            6529 .loop    aif    (&i gt &$dccexti).around
                                            6530          aif    ('&$dccext(&i)' eq '&m').getout
                                            6531 &i       seta    &i+1
                                            6532          ago     .loop
                                            6533 .around  anop
                                            6534 &$dccexti seta &$dccexti+1
                                            6535          extrn  &m
                                            6536 .getout  anop
                                            6537          mend
00004310                                    6538+$eye0132    ds    0d                                                    02-DCCCA
00004310 C4C3C3                             6539+         dc cl3'DCC'                                                    02-DCCCA
00004313 01                                 6540+         dc xl1'01' format one                                          02-DCCCA
00004314 00000000                           6541+         dc a(0)                                                        02-DCCCA
00004318 0000000000004382                   6542+         dc ad(@PER_1434)                                               02-DCCCA
00004320 00000000000000D0                   6543+         dc ad(208)                                                     02-DCCCA
00004328 0000000000000000                   6544+         dc ad(0)                                                       02-DCCCA
00004330 0000000000001000                   6545+         dc ad(4096)                                                    02-DCCCA
00004338 20                                 6546+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004339 03                                 6547+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000433A 03                                 6548+         dc al1(3)                                                      02-DCCCA
0000433B 08                                 6549+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000433C 00                                 6550+         dc bl.8'00000000'                                              02-DCCCA
0000433D 000000                             6551+         dc al3(0)                                                      02-DCCCA
00004340 00000000000042E8                   6552+         dc ad(@LNAME1434)                                              02-DCCCA
00004348                                    6553+         ds 0d                                                          02-DCCCA
00004348 0000000000004310                   6554+         dc ad($eye0132)                                                02-DCCCA
00004350 0000000000000000                   6555+         dc ad(0)                                                       02-DCCCA
00004358                                    6556+         ds    0d                                                       01-DCCPR
                                            6557+         entry rd_kafka_q_purge_toppar_version                          01-DCCPR
00004358                                    6558+rd_kafka_q_purge_toppar_version ds 0d                                   01-DCCPR
00004358                                    6559+@REGION_1434_1 ds 0h                                                    01-DCCPR
00004358 EBEC D008 0024          00000008   6560+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000435E E3E0 D088 0004          00000088   6561+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004364 E3C0 D090 0004          00000090   6562+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000436A B904 002E                          6563+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000436E E3B0 C018 0004          00000018   6564+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004374 A7EB 00D0               000000D0   6565+         aghi  14,208              increase by frame size               01-DCCPR
00004378 E3E0 C020 0021          00000020   6566+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000437E 4720 B020               00000020   6567+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004382                                    6568+@PER_1434 ds   0h                                                       01-DCCPR
00004382 EBDE 2080 0024          00000080   6569+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004388 E3C0 2090 0024          00000090   6570+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000438E B904 00D2                          6571+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page  134 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004392 B904 00CF                          6572+         lgr   12,15               set base reg                         01-DCCPR
                        00004358            6573+         using @REGION_1434_1,12                                        01-DCCPR
00004396 B904 0061                          6574          LGR   6,1         ; ptr to parm area
                                            6575 * ******* End of Prologue
                                            6576 * *
0000439A E350 6000 0004          00000000   6577          LG    5,0(0,6)    ; rkq
                                            6578 * ***      rd_kafka_op_t *rko, *next;
                                            6579 * ***      struct { struct rd_kafka_op_s *tqh_first; struct rd_kafka_o\
                                            6580 * p_s * *tqh_last; } tmpq = { (((void *)0)), &(tmpq).tqh_first };
000043A0 41F0 D0A8               000000A8   6581          LA    15,168(0,13)
000043A4 E3F0 D0B0 0024          000000B0   6582          STG   15,176(0,13)
                                            6583 * setting 8 bytes to 0x00
000043AA D707 D0A8 D0A8 000000A8 000000A8   6584          XC    168(8,13),168(13)
                                            6585 * ***           int32_t cnt = 0;
000043B0 A738 0000               00000000   6586          LHI   3,0         ; 0
                                            6587 * ***           int64_t size = 0;
000043B4 A729 0000               00000000   6588          LGHI  2,0         ; 0
                                            6589 * ***           rd_kafka_q_t *fwdq;
                                            6590 * ***
                                            6591 * ***      mtx_lock(&rkq->rkq_lock);
000043B8 E350 D0B8 0024          000000B8   6592          STG   5,184(0,13)
000043BE 4110 D0B8               000000B8   6593          LA    1,184(0,13)
000043C2 E3F0 C0F8 0004          00004450   6594          LG    15,@lit_1434_219 ; mtx_lock
000043C8                                    6595 @@gen_label362 DS    0H
000043C8 05EF                               6596          BALR  14,15
000043CA                                    6597 @@gen_label363 DS    0H
                                            6598 * ***
                                            6599 * ***           if ((fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
000043CA E350 D0B8 0024          000000B8   6600          STG   5,184(0,13)
000043D0 D707 D0C0 D0C0 000000C0 000000C0   6601          XC    192(8,13),192(13)
000043D6 4110 D0B8               000000B8   6602          LA    1,184(0,13)
000043DA E3F0 C100 0004          00004458   6603          LG    15,@lit_1434_220 ; rd_kafka_q_fwd_get
000043E0                                    6604 @@gen_label364 DS    0H
000043E0 05EF                               6605          BALR  14,15
000043E2                                    6606 @@gen_label365 DS    0H
000043E2 B904 004F                          6607          LGR   4,15
000043E6 B902 00F4                          6608          LTGR  15,4
000043EA 4780 C1A0               000044F8   6609          BZ    @L672
                                            6610 * ***                   mtx_unlock(&rkq->rkq_lock);
000043EE E350 D0B8 0024          000000B8   6611          STG   5,184(0,13)
000043F4 4110 D0B8               000000B8   6612          LA    1,184(0,13)
000043F8 E3F0 C108 0004          00004460   6613          LG    15,@lit_1434_221 ; mtx_unlock
000043FE                                    6614 @@gen_label367 DS    0H
000043FE 05EF                               6615          BALR  14,15
00004400                                    6616 @@gen_label368 DS    0H
                                            6617 * ***                   rd_kafka_q_purge_toppar_version(fwdq, rktp, ve\
                                            6618 * rsion);
00004400 E340 D0B8 0024          000000B8   6619          STG   4,184(0,13)
00004406 E3F0 6008 0004          00000008   6620          LG    15,8(0,6)   ; rktp
0000440C E3F0 D0C0 0024          000000C0   6621          STG   15,192(0,13)
00004412 E3F0 6014 0014          00000014   6622          LGF   15,20(0,6)  ; version
00004418 E3F0 D0C8 0024          000000C8   6623          STG   15,200(0,13)
                                                                                                                           Page  135 
  Active Usings: @REGION_1434_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000441E 4110 D0B8               000000B8   6624          LA    1,184(0,13)
00004422 E3F0 C110 0004          00004468   6625          LG    15,@lit_1434_222 ; rd_kafka_q_purge_toppar_version
00004428                                    6626 @@gen_label369 DS    0H
00004428 05EF                               6627          BALR  14,15
0000442A                                    6628 @@gen_label370 DS    0H
                                            6629 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
0000442A E340 D0B8 0024          000000B8   6630          STG   4,184(0,13)
00004430 D707 D0C0 D0C0 000000C0 000000C0   6631          XC    192(8,13),192(13)
00004436 4110 D0B8               000000B8   6632          LA    1,184(0,13)
0000443A E3F0 C118 0004          00004470   6633          LG    15,@lit_1434_223 ; rd_kafka_q_destroy0
00004440                                    6634 @@gen_label371 DS    0H
00004440 05EF                               6635          BALR  14,15
00004442                                    6636 @@gen_label372 DS    0H
                                            6637 * ***                   return;
00004442 47F0 C244               0000459C   6638          B     @ret_lab_1434
00004448                                    6639          DS    0D
00004448 000000D0                           6640 @FRAMESIZE_1434 DC F'208'
0000444C 00000000
00004450 0000000000000000                   6641 @lit_1434_219 DC AD(mtx_lock)
00004458 0000000000001510                   6642 @lit_1434_220 DC AD(rd_kafka_q_fwd_get)
00004460 0000000000000000                   6643 @lit_1434_221 DC AD(mtx_unlock)
00004468 0000000000004358                   6644 @lit_1434_222 DC AD(rd_kafka_q_purge_toppar_version)
00004470 0000000000001140                   6645 @lit_1434_223 DC AD(rd_kafka_q_destroy0)
00004478 0000000000002248                   6646 @lit_1434_225 DC AD(rd_kafka_q_mark_served)
00004480 0000000000000000                   6647 @lit_1434_227 DC AD(rd_kafka_op_destroy)
                                            6648 * ***           }
                                            6649 * ***
                                            6650 * ***
                                            6651 * ***
                                            6652 * ***           while ((rko = ((&rkq->rkq_q)->tqh_first)) && rko->rko_\
                                            6653 * rktp &&
                                            6654 * ***                   do {   if (((rko)->rko_link .tqe_next) != (((v\
                                            6655 * oid *)0))) (rko)->rko_link .tqe_next->rko_link .tqe_prev = (rko)->rk\
                                            6656 * o_link .tqe_prev; else (&rkq->rkq_q)->tqh_last = (rko)->rko_link .tq\
                                            6657 * e_prev; *(rko)->rko_link .tqe_prev = (rko)->rko_link .tqe_next; ; } \
                                            6658 * while ( 0);
00004488                                    6659 @L674    DS    0H
00004488 E310 F000 0002          00000000   6660          LTG   1,0(0,15)   ; rko
0000448E 4780 C150               000044A8   6661          BE    @L677
00004492 E310 F000 0004          00000000   6662          LG    1,0(0,15)   ; rko
00004498 E340 F008 0004          00000008   6663          LG    4,8(0,15)   ; offset of tqe_prev in 0000055
0000449E E340 1008 0024          00000008   6664          STG   4,8(0,1)    ; offset of tqe_prev in 0000055
000044A4 47F0 C15C               000044B4   6665          B     @L678
000044A8                                    6666 @L677    DS    0H
000044A8 E310 F008 0004          00000008   6667          LG    1,8(0,15)   ; offset of tqe_prev in 0000055
000044AE E310 5068 0024          00000068   6668          STG   1,104(0,5)  ; offset of tqh_last in rd_kafka_op_tailq
000044B4                                    6669 @L678    DS    0H
000044B4 E310 F008 0004          00000008   6670          LG    1,8(0,15)   ; offset of tqe_prev in 0000055
000044BA E340 F000 0004          00000000   6671          LG    4,0(0,15)   ; rko
000044C0 E340 1000 0024          00000000   6672          STG   4,0(0,1)
                                            6673 * ***                   do {  (rko)->rko_link .tqe_next = (((void *)0)\
                                            6674 * ); (rko)->rko_link .tqe_prev = (&tmpq)->tqh_last; *(&tmpq)->tqh_last\
                                                                                                                           Page  136 
  Active Usings: @REGION_1434_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6675 *  = (rko); (&tmpq)->tqh_last = &(rko)->rko_link .tqe_next; } while ( \
                                            6676 * 0);
000044C6                                    6677 @L679    DS    0H
000044C6 A719 0000               00000000   6678          LGHI  1,0         ; 0
000044CA E310 F000 0024          00000000   6679          STG   1,0(0,15)   ; rko
000044D0 E310 D0B0 0004          000000B0   6680          LG    1,176(0,13) ; offset of tqh_last in 0000156
000044D6 E310 F008 0024          00000008   6681          STG   1,8(0,15)   ; offset of tqe_prev in 0000055
000044DC E310 D0B0 0004          000000B0   6682          LG    1,176(0,13) ; offset of tqh_last in 0000156
000044E2 E3F0 1000 0024          00000000   6683          STG   15,0(0,1)
000044E8 E3F0 D0B0 0024          000000B0   6684          STG   15,176(0,13) ; offset of tqh_last in 0000156
                                            6685 * ***                   cnt++;
000044EE A73A 0001               00000001   6686          AHI   3,1
                                            6687 * ***                   size += rko->rko_len;
000044F2 E320 F030 0018          00000030   6688          AGF   2,48(0,15)
                                            6689 * ***           }
000044F8                                    6690 @L672    DS    0H
000044F8 E3F0 5060 0004          00000060   6691          LG    15,96(0,5)  ; offset of rkq_q in rd_kafka_q_s
000044FE B902 001F                          6692          LTGR  1,15
00004502 4780 C1D8               00004530   6693          BZ    @L673
00004506 E310 F038 0002          00000038   6694          LTG   1,56(0,15)  ; offset of rko_rktp in rd_kafka_op_s
0000450C 4780 C1D8               00004530   6695          BZ    @L673
                                            6696 * ***                  rko->rko_rktp == rktp &&
00004510 E310 F038 0004          00000038   6697          LG    1,56(0,15)  ; offset of rko_rktp in rd_kafka_op_s
00004516 E340 6008 0004          00000008   6698          LG    4,8(0,6)    ; rktp
0000451C B920 0014                          6699          CGR   1,4
00004520 4770 C1D8               00004530   6700          BNE   @L673
                                            6701 * ***                  rko->rko_version < version) {
00004524 5810 F01C               0000001C   6702          L     1,28(0,15)  ; offset of rko_version in rd_kafka_op_s
00004528 5910 6014               00000014   6703          C     1,20(0,6)
0000452C 4740 C130               00004488   6704          BL    @L674
00004530                                    6705 @L673    DS    0H
                                            6706 * ***
                                            6707 * ***           rd_kafka_q_mark_served(rkq);
00004530 E350 D0B8 0024          000000B8   6708          STG   5,184(0,13)
00004536 4110 D0B8               000000B8   6709          LA    1,184(0,13)
0000453A E3F0 C120 0004          00004478   6710          LG    15,@lit_1434_225 ; rd_kafka_q_mark_served
00004540                                    6711 @@gen_label378 DS    0H
00004540 05EF                               6712          BALR  14,15
00004542                                    6713 @@gen_label379 DS    0H
                                            6714 * ***
                                            6715 * ***           rkq->rkq_qlen -= cnt;
00004542 58F0 5070               00000070   6716          L     15,112(0,5)
00004546 1BF3                               6717          SR    15,3
00004548 50F0 5070               00000070   6718          ST    15,112(0,5)
                                            6719 * ***           rkq->rkq_qsize -= size;
0000454C E3F0 5078 0004          00000078   6720          LG    15,120(0,5)
00004552 B909 00F2                          6721          SGR   15,2
00004556 E3F0 5078 0024          00000078   6722          STG   15,120(0,5)
                                            6723 * ***      mtx_unlock(&rkq->rkq_lock);
0000455C E350 D0B8 0024          000000B8   6724          STG   5,184(0,13)
00004562 4110 D0B8               000000B8   6725          LA    1,184(0,13)
00004566 E3F0 C108 0004          00004460   6726          LG    15,@lit_1434_221 ; mtx_unlock
                                                                                                                           Page  137 
  Active Usings: @REGION_1434_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000456C                                    6727 @@gen_label380 DS    0H
0000456C 05EF                               6728          BALR  14,15
0000456E                                    6729 @@gen_label381 DS    0H
                                            6730 * ***
                                            6731 * ***      next = ((&tmpq)->tqh_first);
0000456E E320 D0A8 0004          000000A8   6732          LG    2,168(0,13)
                                            6733 * ***      while ((rko = next)) {
00004574 47F0 C238               00004590   6734          B     @L685
00004578                                    6735 @L684    DS    0H
                                            6736 * ***         next = ((next)->rko_link .tqe_next);
00004578 E320 2000 0004          00000000   6737          LG    2,0(0,2)    ; next
                                            6738 * ***         rd_kafka_op_destroy(rko);
0000457E E3F0 D0B8 0024          000000B8   6739          STG   15,184(0,13)
00004584 4110 D0B8               000000B8   6740          LA    1,184(0,13)
00004588 E3F0 C128 0004          00004480   6741          LG    15,@lit_1434_227 ; rd_kafka_op_destroy
0000458E                                    6742 @@gen_label382 DS    0H
0000458E 05EF                               6743          BALR  14,15
00004590                                    6744 @@gen_label383 DS    0H
                                            6745 * ***      }
00004590                                    6746 @L685    DS    0H
00004590 B904 00F2                          6747          LGR   15,2        ; rko
00004594 B902 0012                          6748          LTGR  1,2
00004598 4770 C220               00004578   6749          BNZ   @L684
                                            6750 * ***   }
0000459C                                    6751 @ret_lab_1434 DS 0H
                                            6752 * * **** Start of Epilogue
                                            6753          DCCEPIL
0000459C                                    6754+         ds 0h                                                          01-DCCEP
                                            6755+* Epilog
0000459C D707 D088 D088 00000088 00000088   6756+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000045A2 E3D0 D080 0004          00000080   6757+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000045A8 E3C0 D090 0004          00000090   6758+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000045AE E3B0 C018 0004          00000018   6759+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000045B4 E3C0 B010 0021          00000010   6760+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000045BA E3E0 D008 0004          00000008   6761+         lg  14,8(0,13)          load up return address                 01-DCCEP
000045C0 EB1C D020 0004          00000020   6762+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000045C6 078E                               6763+         bcr 8,14                if same dsab, just return              01-DCCEP
000045C8 E3F0 D010 0024          00000010   6764+         stg 15,16(0,13)         save return code                       01-DCCEP
000045CE E300 D018 0024          00000018   6765+         stg 0,24(0,13)          save more return code                  01-DCCEP
000045D4 E3F0 D090 0004          00000090   6766+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000045DA E3F0 F018 0004          00000018   6767+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000045E0 47F0 F040               00000040   6768+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6769+* End of Epilog
                                            6770 * * **** End of Epilogue
                                            6771          DROP  12
                                            6772 *
                                            6773 *   DSECT for automatic variables in "rd_kafka_q_purge_toppar_version"
                                            6774 *      (FUNCTION #1434)
                                            6775 *
00000000                00000000 000000B8   6776 @AUTO#rd_kafka_q_purge_toppar_version DSECT
00000000                                    6777          DS    XL168
000000A8                                    6778 rd_kafka_q_purge_toppar_version#size#0 DS 8XL1 ; size
                                                                                                                           Page  138 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000B0                000000B0 000000A8   6779          ORG   @AUTO#rd_kafka_q_purge_toppar_version+168
000000A8                                    6780 rd_kafka_q_purge_toppar_version#cnt#0 DS 1F ; cnt
000000AC                000000AC 000000A8   6781          ORG   @AUTO#rd_kafka_q_purge_toppar_version+168
000000A8                                    6782 rd_kafka_q_purge_toppar_version#tmpq#0 DS 16XL1 ; tmpq
                                            6783 *
000045E4                00000000 00007BF0   6784 @CODE    CSECT
                                            6785 *
                                            6786 *
                                            6787 *
                                            6788 * ....... start of rd_kafka_q_move_cnt
                                            6789 rd_kafka_q_move_cnt ALIAS X'99846D92818692816D986D9496A5856D8395A3'
000045E4                                    6790 @LNAME1465 DS  0H
000045E4 00000013                           6791          DC    X'00000013'
000045E8 99846D9281869281                   6792          DC    C'rd_kafka_q_move_cnt'
000045FB 00                                 6793          DC    X'00'
                                            6794 rd_kafka_q_move_cnt DCCPRLG CINDEX=1465,BASER=12,FRAME=208,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1465
                                            6795          macro
                                            6796          dccextrn &m
                                            6797          gblc    &$dccext(1000)
                                            6798          gbla    &$dccexti
                                            6799          lcla    &i
                                            6800 &$dccext(&$dccexti+1) setc    '&m'
                                            6801 &i       seta    1
                                            6802 .loop    aif    (&i gt &$dccexti).around
                                            6803          aif    ('&$dccext(&i)' eq '&m').getout
                                            6804 &i       seta    &i+1
                                            6805          ago     .loop
                                            6806 .around  anop
                                            6807 &$dccexti seta &$dccexti+1
                                            6808          extrn  &m
                                            6809 .getout  anop
                                            6810          mend
00004600                                    6811+$eye0135    ds    0d                                                    02-DCCCA
00004600 C4C3C3                             6812+         dc cl3'DCC'                                                    02-DCCCA
00004603 01                                 6813+         dc xl1'01' format one                                          02-DCCCA
00004604 00000000                           6814+         dc a(0)                                                        02-DCCCA
00004608 0000000000004672                   6815+         dc ad(@PER_1465)                                               02-DCCCA
00004610 00000000000000D0                   6816+         dc ad(208)                                                     02-DCCCA
00004618 0000000000000000                   6817+         dc ad(0)                                                       02-DCCCA
00004620 0000000000001000                   6818+         dc ad(4096)                                                    02-DCCCA
00004628 20                                 6819+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004629 03                                 6820+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000462A 03                                 6821+         dc al1(3)                                                      02-DCCCA
0000462B 08                                 6822+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000462C 00                                 6823+         dc bl.8'00000000'                                              02-DCCCA
0000462D 000000                             6824+         dc al3(0)                                                      02-DCCCA
00004630 00000000000045E4                   6825+         dc ad(@LNAME1465)                                              02-DCCCA
00004638                                    6826+         ds 0d                                                          02-DCCCA
00004638 0000000000004600                   6827+         dc ad($eye0135)                                                02-DCCCA
00004640 0000000000000000                   6828+         dc ad(0)                                                       02-DCCCA
00004648                                    6829+         ds    0d                                                       01-DCCPR
                                                                                                                           Page  139 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6830+         entry rd_kafka_q_move_cnt                                      01-DCCPR
00004648                                    6831+rd_kafka_q_move_cnt ds 0d                                               01-DCCPR
00004648                                    6832+@REGION_1465_1 ds 0h                                                    01-DCCPR
00004648 EBEC D008 0024          00000008   6833+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000464E E3E0 D088 0004          00000088   6834+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004654 E3C0 D090 0004          00000090   6835+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000465A B904 002E                          6836+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000465E E3B0 C018 0004          00000018   6837+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004664 A7EB 00D0               000000D0   6838+         aghi  14,208              increase by frame size               01-DCCPR
00004668 E3E0 C020 0021          00000020   6839+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000466E 4720 B020               00000020   6840+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004672                                    6841+@PER_1465 ds   0h                                                       01-DCCPR
00004672 EBDE 2080 0024          00000080   6842+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004678 E3C0 2090 0024          00000090   6843+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000467E B904 00D2                          6844+         lgr   13,2                set real frame pointer               01-DCCPR
00004682 B904 00CF                          6845+         lgr   12,15               set base reg                         01-DCCPR
                        00004648            6846+         using @REGION_1465_1,12                                        01-DCCPR
                                            6847 * ******* End of Prologue
                                            6848 * *
00004686 EB45 1000 0004          00000000   6849          LMG   4,5,0(1)    ; dstq
0000468C 5860 1014               00000014   6850          L     6,20(0,1)   ; cnt
00004690 5870 101C               0000001C   6851          L     7,28(0,1)   ; do_locks
                                            6852 * ***      rd_kafka_op_t *rko;
                                            6853 * ***           int mcnt = 0;
00004694 A738 0000               00000000   6854          LHI   3,0         ; 0
                                            6855 * ***
                                            6856 * ***           if (do_locks) {
00004698 1277                               6857          LTR   7,7
0000469A 4780 C07C               000046C4   6858          BZ    @L686
                                            6859 * ***         mtx_lock(&srcq->rkq_lock);
0000469E E350 D0B0 0024          000000B0   6860          STG   5,176(0,13)
000046A4 4110 D0B0               000000B0   6861          LA    1,176(0,13)
000046A8 E320 C0F0 0004          00004738   6862          LG    2,@lit_1465_230 ; mtx_lock
000046AE B904 00F2                          6863          LGR   15,2
000046B2                                    6864 @@gen_label386 DS    0H
000046B2 05EF                               6865          BALR  14,15
000046B4                                    6866 @@gen_label387 DS    0H
                                            6867 * ***         mtx_lock(&dstq->rkq_lock);
000046B4 E340 D0B0 0024          000000B0   6868          STG   4,176(0,13)
000046BA 4110 D0B0               000000B0   6869          LA    1,176(0,13)
000046BE B904 00F2                          6870          LGR   15,2
000046C2                                    6871 @@gen_label388 DS    0H
000046C2 05EF                               6872          BALR  14,15
000046C4                                    6873 @@gen_label389 DS    0H
                                            6874 * ***      }
000046C4                                    6875 @L686    DS    0H
                                            6876 * ***
                                            6877 * ***      if (!dstq->rkq_fwdq && !srcq->rkq_fwdq) {
000046C4 E3F0 4058 0002          00000058   6878          LTG   15,88(0,4)  ; offset of rkq_fwdq in rd_kafka_q_s
000046CA 4770 C2F4               0000493C   6879          BNZ   @L687
000046CE E3F0 5058 0002          00000058   6880          LTG   15,88(0,5)  ; offset of rkq_fwdq in rd_kafka_q_s
000046D4 4770 C2F4               0000493C   6881          BNZ   @L687
                                                                                                                           Page  140 
  Active Usings: @REGION_1465_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6882 * ***         if (cnt > 0 && dstq->rkq_qlen == 0)
000046D8 1266                               6883          LTR   6,6
000046DA 47D0 C0B2               000046FA   6884          BNH   @L688
000046DE E55C 4070 0000          00000070   6885          CHSI  112(4),0
000046E4 4770 C0B2               000046FA   6886          BNE   @L688
                                            6887 * ***            rd_kafka_q_io_event(dstq);
000046E8 E340 D0B0 0024          000000B0   6888          STG   4,176(0,13)
000046EE 4110 D0B0               000000B0   6889          LA    1,176(0,13)
000046F2 E3F0 C0F8 0004          00004740   6890          LG    15,@lit_1465_232 ; rd_kafka_q_io_event
000046F8                                    6891 @@gen_label394 DS    0H
000046F8 05EF                               6892          BALR  14,15
000046FA                                    6893 @@gen_label395 DS    0H
000046FA                                    6894 @L688    DS    0H
                                            6895 * ***
                                            6896 * ***
                                            6897 * ***
                                            6898 * ***         if (cnt == -1 ||
000046FA A76E FFFF               0000FFFF   6899          CHI   6,-1
000046FE 4780 C0C2               0000470A   6900          BE    @L690
                                            6901 * ***                       cnt >= (int)srcq->rkq_qlen) {
00004702 5960 5070               00000070   6902          C     6,112(0,5)
00004706 4740 C2C6               0000490E   6903          BL    @L695
0000470A                                    6904 @L690    DS    0H
                                            6905 * ***                           mcnt = srcq->rkq_qlen;
0000470A 5830 5070               00000070   6906          L     3,112(0,5)  ; offset of rkq_qlen in rd_kafka_q_s
                                            6907 * ***                           rd_kafka_q_concat0(dstq, srcq, 0);
0000470E EB45 D0B0 0024          000000B0   6908          STMG  4,5,176(13)
00004714 D707 D0C0 D0C0 000000C0 000000C0   6909          XC    192(8,13),192(13)
0000471A 4110 D0B0               000000B0   6910          LA    1,176(0,13)
0000471E E3F0 C100 0004          00004748   6911          LG    15,@lit_1465_233 ; rd_kafka_q_concat0
00004724                                    6912 @@gen_label398 DS    0H
00004724 05EF                               6913          BALR  14,15
00004726                                    6914 @@gen_label399 DS    0H
                                            6915 * ***         } else {
00004726 47F0 C2DE               00004926   6916          B     @L691
00004730                                    6917          DS    0D
00004730 000000D0                           6918 @FRAMESIZE_1465 DC F'208'
00004734 00000000
00004738 0000000000000000                   6919 @lit_1465_230 DC AD(mtx_lock)
00004740 0000000000001678                   6920 @lit_1465_232 DC AD(rd_kafka_q_io_event)
00004748 00000000000022E0                   6921 @lit_1465_233 DC AD(rd_kafka_q_concat0)
00004750 0000000000001828                   6922 @lit_1465_235 DC AD(rd_kafka_op_cmp_prio)
00004758 0000000000002248                   6923 @lit_1465_236 DC AD(rd_kafka_q_mark_served)
00004760 0000000000004648                   6924 @lit_1465_237 DC AD(rd_kafka_q_move_cnt)
00004768 0000000000000000                   6925 @lit_1465_238 DC AD(mtx_unlock)
                                            6926 * ***            while (mcnt < cnt &&
                                            6927 * ***               do {   if (((rko)->rko_link .tqe_next) != (((void \
                                            6928 * *)0))) (rko)->rko_link .tqe_next->rko_link .tqe_prev = (rko)->rko_li\
                                            6929 * nk .tqe_prev; else (&srcq->rkq_q)->tqh_last = (rko)->rko_link .tqe_p\
                                            6930 * rev; *(rko)->rko_link .tqe_prev = (rko)->rko_link .tqe_next; ; } whi\
                                            6931 * le ( 0);
00004770                                    6932 @L697    DS    0H
                                                                                                                           Page  141 
  Active Usings: @REGION_1465_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004770 E3F0 8000 0002          00000000   6933          LTG   15,0(0,8)   ; rko
00004776 4780 C148               00004790   6934          BE    @L700
0000477A E3F0 8000 0004          00000000   6935          LG    15,0(0,8)   ; rko
00004780 E310 8008 0004          00000008   6936          LG    1,8(0,8)    ; offset of tqe_prev in 0000055
00004786 E310 F008 0024          00000008   6937          STG   1,8(0,15)   ; offset of tqe_prev in 0000055
0000478C 47F0 C154               0000479C   6938          B     @L701
00004790                                    6939 @L700    DS    0H
00004790 E3F0 8008 0004          00000008   6940          LG    15,8(0,8)   ; offset of tqe_prev in 0000055
00004796 E3F0 5068 0024          00000068   6941          STG   15,104(0,5) ; offset of tqh_last in rd_kafka_op_tailq
0000479C                                    6942 @L701    DS    0H
0000479C E3F0 8008 0004          00000008   6943          LG    15,8(0,8)   ; offset of tqe_prev in 0000055
000047A2 E310 8000 0004          00000000   6944          LG    1,0(0,8)    ; rko
000047A8 E310 F000 0024          00000000   6945          STG   1,0(0,15)
                                            6946 * ***                                   if (((!rko->rko_prio)))
000047AE E3F0 8034 0012          00000034   6947          LT    15,52(0,8)  ; offset of rko_prio in rd_kafka_op_s
000047B4 4770 C19C               000047E4   6948          BNZ   @L707
                                            6949 * ***                                           do {  (rko)->rko_link \
                                            6950 * .tqe_next = (((void *)0)); (rko)->rko_link .tqe_prev = (&dstq->rkq_q\
                                            6951 * )->tqh_last; *(&dstq->rkq_q)->tqh_last = (rko); (&dstq->rkq_q)->tqh_\
                                            6952 * last = &(rko)->rko_link .tqe_next; } while ( 0);
000047B8                                    6953 @L703    DS    0H
000047B8 A7F9 0000               00000000   6954          LGHI  15,0        ; 0
000047BC E3F0 8000 0024          00000000   6955          STG   15,0(0,8)   ; rko
000047C2 E3F0 4068 0004          00000068   6956          LG    15,104(0,4) ; offset of tqh_last in rd_kafka_op_tailq
000047C8 E3F0 8008 0024          00000008   6957          STG   15,8(0,8)   ; offset of tqe_prev in 0000055
000047CE E3F0 4068 0004          00000068   6958          LG    15,104(0,4) ; offset of tqh_last in rd_kafka_op_tailq
000047D4 E380 F000 0024          00000000   6959          STG   8,0(0,15)
000047DA E380 4068 0024          00000068   6960          STG   8,104(0,4)  ; offset of tqh_last in rd_kafka_op_tailq
                                            6961 * ***
                                            6962 * ***                                   else
000047E0 47F0 C286               000048CE   6963          B     @L706
                                            6964 * ***                                           do { if(((&dstq->rkq_q\
                                            6965 * )->tqh_first) == ((void *)0)) { do {  if (((rko)->rko_link .tqe_next\
                                            6966 *  = (&dstq->rkq_q)->tqh_first) != (((void *)0))) (&dstq->rkq_q)->tqh_\
                                            6967 * first->rko_link .tqe_prev = &(rko)->rko_link .tqe_next; else (&dstq-\
                                            6968 * >rkq_q)->tqh_last = &(rko)->rko_link .tqe_next; (&dstq->rkq_q)->tqh_\
                                            6969 * first = (rko); (rko)->rko_link .tqe_prev = &(&dstq->rkq_q)->tqh_firs\
                                            6970 * t; } while ( 0); } else { rd_kafka_op_t * _tmp; for ((_tmp) = ((&dst\
                                            6971 * q->rkq_q)->tqh_first); (_tmp) != (((void *)0)); (_tmp) = ((_tmp)->rk\
                                            6972 * o_link .tqe_next)) { if(rd_kafka_op_cmp_prio(rko,_tmp) < 0) { do {  \
                                            6973 * (rko)->rko_link .tqe_prev = (_tmp)->rko_link .tqe_prev; (rko)->rko_l\
                                            6974 * ink .tqe_next = (_tmp); *(_tmp)->rko_link .tqe_prev = (rko); (_tmp)-\
                                            6975 * >rko_link .tqe_prev = &(rko)->rko_link .tqe_next; } while ( 0); brea\
                                            6976 * k; } if(!((_tmp)->rko_link .tqe_next)) { do {  if (((rko)->rko_link \
                                            6977 * .tqe_next = (_tmp)->rko_link .tqe_next) != (((void *)0))) (rko)->rko\
                                            6978 * _link .tqe_next->rko_link .tqe_prev = &(rko)->rko_link .tqe_next; el\
                                            6979 * se (&dstq->rkq_q)->tqh_last = &(rko)->rko_link .tqe_next; (_tmp)->rk\
                                            6980 * o_link .tqe_next = (rko); (rko)->rko_link .tqe_prev = &(_tmp)->rko_l\
                                            6981 * ink .tqe_next; } while ( 0); break; } } } } while(0);
000047E4                                    6982 @L707    DS    0H
000047E4 E3F0 4060 0002          00000060   6983          LTG   15,96(0,4)  ; offset of rkq_q in rd_kafka_q_s
000047EA 4770 C1E4               0000482C   6984          BNE   @L710
                                                                                                                           Page  142 
  Active Usings: @REGION_1465_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000047EE                                    6985 @L711    DS    0H
000047EE E3F0 4060 0004          00000060   6986          LG    15,96(0,4)  ; offset of rkq_q in rd_kafka_q_s
000047F4 E3F0 8000 0024          00000000   6987          STG   15,0(0,8)
000047FA B902 00FF                          6988          LTGR  15,15
000047FE 4780 C1CA               00004812   6989          BE    @L714
00004802 E3F0 4060 0004          00000060   6990          LG    15,96(0,4)  ; offset of rkq_q in rd_kafka_q_s
00004808 E380 F008 0024          00000008   6991          STG   8,8(0,15)   ; offset of tqe_prev in 0000055
0000480E 47F0 C1D0               00004818   6992          B     @L715
00004812                                    6993 @L714    DS    0H
00004812 E380 4068 0024          00000068   6994          STG   8,104(0,4)  ; offset of tqh_last in rd_kafka_op_tailq
00004818                                    6995 @L715    DS    0H
00004818 E380 4060 0024          00000060   6996          STG   8,96(0,4)   ; offset of rkq_q in rd_kafka_q_s
0000481E 41F0 4060               00000060   6997          LA    15,96(0,4)
00004822 E3F0 8008 0024          00000008   6998          STG   15,8(0,8)   ; offset of tqe_prev in 0000055
00004828 47F0 C286               000048CE   6999          B     @L716
0000482C                                    7000 @L710    DS    0H
0000482C E320 4060 0004          00000060   7001          LG    2,96(0,4)   ; offset of rkq_q in rd_kafka_q_s
00004832 47F0 C27E               000048C6   7002          B     @L718
00004836                                    7003 @L717    DS    0H
00004836 E380 D0B0 0024          000000B0   7004          STG   8,176(0,13)
0000483C E320 D0B8 0024          000000B8   7005          STG   2,184(0,13)
00004842 4110 D0B0               000000B0   7006          LA    1,176(0,13)
00004846 E3F0 C108 0004          00004750   7007          LG    15,@lit_1465_235 ; rd_kafka_op_cmp_prio
0000484C                                    7008 @@gen_label404 DS    0H
0000484C 05EF                               7009          BALR  14,15
0000484E                                    7010 @@gen_label405 DS    0H
0000484E 12FF                               7011          LTR   15,15
00004850 47B0 C234               0000487C   7012          BNL   @L721
00004854                                    7013 @L722    DS    0H
00004854 E3F0 2008 0004          00000008   7014          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
0000485A E3F0 8008 0024          00000008   7015          STG   15,8(0,8)   ; offset of tqe_prev in 0000055
00004860 E320 8000 0024          00000000   7016          STG   2,0(0,8)    ; rko
00004866 E3F0 2008 0004          00000008   7017          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
0000486C E380 F000 0024          00000000   7018          STG   8,0(0,15)
00004872 E380 2008 0024          00000008   7019          STG   8,8(0,2)    ; offset of tqe_prev in 0000055
00004878 47F0 C286               000048CE   7020          B     @L719
0000487C                                    7021 @L721    DS    0H
0000487C E3F0 2000 0002          00000000   7022          LTG   15,0(0,2)   ; _tmp
00004882 4770 C278               000048C0   7023          BNZ   @L725
00004886                                    7024 @L726    DS    0H
00004886 E3F0 2000 0004          00000000   7025          LG    15,0(0,2)   ; _tmp
0000488C E3F0 8000 0024          00000000   7026          STG   15,0(0,8)
00004892 B902 00FF                          7027          LTGR  15,15
00004896 4780 C262               000048AA   7028          BE    @L729
0000489A E3F0 8000 0004          00000000   7029          LG    15,0(0,8)   ; rko
000048A0 E380 F008 0024          00000008   7030          STG   8,8(0,15)   ; offset of tqe_prev in 0000055
000048A6 47F0 C268               000048B0   7031          B     @L730
000048AA                                    7032 @L729    DS    0H
000048AA E380 4068 0024          00000068   7033          STG   8,104(0,4)  ; offset of tqh_last in rd_kafka_op_tailq
000048B0                                    7034 @L730    DS    0H
000048B0 E380 2000 0024          00000000   7035          STG   8,0(0,2)    ; _tmp
000048B6 E320 8008 0024          00000008   7036          STG   2,8(0,8)    ; offset of tqe_prev in 0000055
                                                                                                                           Page  143 
  Active Usings: @REGION_1465_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000048BC 47F0 C286               000048CE   7037          B     @L719
000048C0                                    7038 @L725    DS    0H
000048C0 E320 2000 0004          00000000   7039          LG    2,0(0,2)    ; _tmp
000048C6                                    7040 @L718    DS    0H
000048C6 B902 00F2                          7041          LTGR  15,2
000048CA 4770 C1EE               00004836   7042          BNE   @L717
000048CE                                    7043 @L719    DS    0H
000048CE                                    7044 @L716    DS    0H
                                            7045 * ***
                                            7046 * ***
                                            7047 * ***
                                            7048 * ***
                                            7049 * ***                                   srcq->rkq_qlen--;
000048CE                                    7050 @L706    DS    0H
000048CE 58F0 5070               00000070   7051          L     15,112(0,5)
000048D2 A7FA FFFF               0000FFFF   7052          AHI   15,-1
000048D6 50F0 5070               00000070   7053          ST    15,112(0,5)
                                            7054 * ***                                   dstq->rkq_qlen++;
000048DA 58F0 4070               00000070   7055          L     15,112(0,4)
000048DE A7FA 0001               00000001   7056          AHI   15,1
000048E2 50F0 4070               00000070   7057          ST    15,112(0,4)
                                            7058 * ***                                   srcq->rkq_qsize -= rko->rko_le\
                                            7059 * n;
000048E6 E3F0 5078 0004          00000078   7060          LG    15,120(0,5)
000048EC E3F0 8030 0019          00000030   7061          SGF   15,48(0,8)
000048F2 E3F0 5078 0024          00000078   7062          STG   15,120(0,5)
                                            7063 * ***                                   dstq->rkq_qsize += rko->rko_le\
                                            7064 * n;
000048F8 E3F0 4078 0004          00000078   7065          LG    15,120(0,4)
000048FE E3F0 8030 0018          00000030   7066          AGF   15,48(0,8)
00004904 E3F0 4078 0024          00000078   7067          STG   15,120(0,4)
                                            7068 * ***               mcnt++;
0000490A A73A 0001               00000001   7069          AHI   3,1
                                            7070 * ***            }
0000490E                                    7071 @L695    DS    0H
0000490E 1936                               7072          CR    3,6
00004910 47B0 C2DE               00004926   7073          BNL   @L691
                                            7074 * ***                   (rko = ((&srcq->rkq_q)->tqh_first))) {
00004914 E380 5060 0004          00000060   7075          LG    8,96(0,5)   ; offset of rkq_q in rd_kafka_q_s
0000491A B902 00F8                          7076          LTGR  15,8
0000491E 4780 C2DE               00004926   7077          BZ    @L691
00004922 47F0 C128               00004770   7078          B     @L697
                                            7079 * ***         }
00004926                                    7080 @L691    DS    0H
                                            7081 * ***
                                            7082 * ***                   rd_kafka_q_mark_served(srcq);
00004926 E350 D0B0 0024          000000B0   7083          STG   5,176(0,13)
0000492C 4110 D0B0               000000B0   7084          LA    1,176(0,13)
00004930 E3F0 C110 0004          00004758   7085          LG    15,@lit_1465_236 ; rd_kafka_q_mark_served
00004936                                    7086 @@gen_label412 DS    0H
00004936 05EF                               7087          BALR  14,15
00004938                                    7088 @@gen_label413 DS    0H
                                                                                                                           Page  144 
  Active Usings: @REGION_1465_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7089 * ***
                                            7090 * ***      } else
00004938 47F0 C352               0000499A   7091          B     @L731
0000493C                                    7092 @L687    DS    0H
                                            7093 * ***         mcnt = rd_kafka_q_move_cnt(dstq->rkq_fwdq ? dstq->rkq_fw\
                                            7094 * dq:dstq,
                                            7095 * ***                     srcq->rkq_fwdq ? srcq->rkq_fwdq:srcq,
                                            7096 * ***                     cnt, do_locks);
0000493C E3F0 4058 0002          00000058   7097          LTG   15,88(0,4)  ; offset of rkq_fwdq in rd_kafka_q_s
00004942 4780 C308               00004950   7098          BZ    @L732
00004946 E3F0 4058 0004          00000058   7099          LG    15,88(0,4)  ; offset of rkq_fwdq in rd_kafka_q_s
0000494C 47F0 C30C               00004954   7100          B     @L733
00004950                                    7101 @L732    DS    0H
00004950 B904 00F4                          7102          LGR   15,4
00004954                                    7103 @L733    DS    0H
00004954 E310 5058 0002          00000058   7104          LTG   1,88(0,5)   ; offset of rkq_fwdq in rd_kafka_q_s
0000495A 4780 C320               00004968   7105          BZ    @L734
0000495E E310 5058 0004          00000058   7106          LG    1,88(0,5)   ; offset of rkq_fwdq in rd_kafka_q_s
00004964 47F0 C324               0000496C   7107          B     @L735
00004968                                    7108 @L734    DS    0H
00004968 B904 0015                          7109          LGR   1,5
0000496C                                    7110 @L735    DS    0H
0000496C E3F0 D0B0 0024          000000B0   7111          STG   15,176(0,13)
00004972 E310 D0B8 0024          000000B8   7112          STG   1,184(0,13)
00004978 B914 00F6                          7113          LGFR  15,6
0000497C E3F0 D0C0 0024          000000C0   7114          STG   15,192(0,13)
00004982 B914 00F7                          7115          LGFR  15,7
00004986 E3F0 D0C8 0024          000000C8   7116          STG   15,200(0,13)
0000498C 4110 D0B0               000000B0   7117          LA    1,176(0,13)
00004990 E3F0 C118 0004          00004760   7118          LG    15,@lit_1465_237 ; rd_kafka_q_move_cnt
00004996                                    7119 @@gen_label416 DS    0H
00004996 05EF                               7120          BALR  14,15
00004998                                    7121 @@gen_label417 DS    0H
00004998 183F                               7122          LR    3,15        ; mcnt
0000499A                                    7123 @L731    DS    0H
                                            7124 * ***
                                            7125 * ***      if (do_locks) {
0000499A 1277                               7126          LTR   7,7
0000499C 4780 C37E               000049C6   7127          BZ    @L736
                                            7128 * ***         mtx_unlock(&dstq->rkq_lock);
000049A0 E340 D0B0 0024          000000B0   7129          STG   4,176(0,13)
000049A6 4110 D0B0               000000B0   7130          LA    1,176(0,13)
000049AA E320 C120 0004          00004768   7131          LG    2,@lit_1465_238 ; mtx_unlock
000049B0 B904 00F2                          7132          LGR   15,2
000049B4                                    7133 @@gen_label419 DS    0H
000049B4 05EF                               7134          BALR  14,15
000049B6                                    7135 @@gen_label420 DS    0H
                                            7136 * ***         mtx_unlock(&srcq->rkq_lock);
000049B6 E350 D0B0 0024          000000B0   7137          STG   5,176(0,13)
000049BC 4110 D0B0               000000B0   7138          LA    1,176(0,13)
000049C0 B904 00F2                          7139          LGR   15,2
000049C4                                    7140 @@gen_label421 DS    0H
                                                                                                                           Page  145 
  Active Usings: @REGION_1465_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000049C4 05EF                               7141          BALR  14,15
000049C6                                    7142 @@gen_label422 DS    0H
                                            7143 * ***      }
000049C6                                    7144 @L736    DS    0H
                                            7145 * ***
                                            7146 * ***      return mcnt;
000049C6 B914 00F3                          7147          LGFR  15,3
                                            7148 * ***   }
                                            7149 * * **** Start of Epilogue
                                            7150          DCCEPIL
000049CA                                    7151+         ds 0h                                                          01-DCCEP
                                            7152+* Epilog
000049CA D707 D088 D088 00000088 00000088   7153+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000049D0 E3D0 D080 0004          00000080   7154+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000049D6 E3C0 D090 0004          00000090   7155+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000049DC E3B0 C018 0004          00000018   7156+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000049E2 E3C0 B010 0021          00000010   7157+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000049E8 E3E0 D008 0004          00000008   7158+         lg  14,8(0,13)          load up return address                 01-DCCEP
000049EE EB1C D020 0004          00000020   7159+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000049F4 078E                               7160+         bcr 8,14                if same dsab, just return              01-DCCEP
000049F6 E3F0 D010 0024          00000010   7161+         stg 15,16(0,13)         save return code                       01-DCCEP
000049FC E300 D018 0024          00000018   7162+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004A02 E3F0 D090 0004          00000090   7163+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004A08 E3F0 F018 0004          00000018   7164+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004A0E 47F0 F040               00000040   7165+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7166+* End of Epilog
                                            7167 * * **** End of Epilogue
                                            7168          DROP  12
                                            7169 *
                                            7170 *   DSECT for automatic variables in "rd_kafka_q_move_cnt"
                                            7171 *      (FUNCTION #1465)
                                            7172 *
00000000                00000000 000000AC   7173 @AUTO#rd_kafka_q_move_cnt DSECT
00000000                                    7174          DS    XL168
000000A8                                    7175 rd_kafka_q_move_cnt#mcnt#0 DS 1F ; mcnt
                                            7176 *
00004A12                00000000 00007BF0   7177 @CODE    CSECT
                                            7178 *
                                            7179 *
                                            7180 *
                                            7181 * ....... start of rd_kafka_op_filter
00004A12                                    7182 @LNAME1944 DS  0H
00004A12 00000012                           7183          DC    X'00000012'
00004A16 99846D9281869281                   7184          DC    C'rd_kafka_op_filter'
00004A28 00                                 7185          DC    X'00'
                                            7186 rd_kafka_op_filter DCCPRLG CINDEX=1944,BASER=12,FRAME=184,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1944
                                            7187          macro
                                            7188          dccextrn &m
                                            7189          gblc    &$dccext(1000)
                                            7190          gbla    &$dccexti
                                            7191          lcla    &i
                                                                                                                           Page  146 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7192 &$dccext(&$dccexti+1) setc    '&m'
                                            7193 &i       seta    1
                                            7194 .loop    aif    (&i gt &$dccexti).around
                                            7195          aif    ('&$dccext(&i)' eq '&m').getout
                                            7196 &i       seta    &i+1
                                            7197          ago     .loop
                                            7198 .around  anop
                                            7199 &$dccexti seta &$dccexti+1
                                            7200          extrn  &m
                                            7201 .getout  anop
                                            7202          mend
00004A30                                    7203+$eye0138    ds    0d                                                    02-DCCCA
00004A30 C4C3C3                             7204+         dc cl3'DCC'                                                    02-DCCCA
00004A33 01                                 7205+         dc xl1'01' format one                                          02-DCCCA
00004A34 00000000                           7206+         dc a(0)                                                        02-DCCCA
00004A38 0000000000004AA2                   7207+         dc ad(@PER_1944)                                               02-DCCCA
00004A40 00000000000000B8                   7208+         dc ad(184)                                                     02-DCCCA
00004A48 0000000000000000                   7209+         dc ad(0)                                                       02-DCCCA
00004A50 0000000000001000                   7210+         dc ad(4096)                                                    02-DCCCA
00004A58 20                                 7211+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004A59 03                                 7212+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004A5A 03                                 7213+         dc al1(3)                                                      02-DCCCA
00004A5B 08                                 7214+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004A5C 00                                 7215+         dc bl.8'00000000'                                              02-DCCCA
00004A5D 000000                             7216+         dc al3(0)                                                      02-DCCCA
00004A60 0000000000004A12                   7217+         dc ad(@LNAME1944)                                              02-DCCCA
00004A68                                    7218+         ds 0d                                                          02-DCCCA
00004A68 0000000000004A30                   7219+         dc ad($eye0138)                                                02-DCCCA
00004A70 0000000000000000                   7220+         dc ad(0)                                                       02-DCCCA
00004A78                                    7221+         ds    0d                                                       01-DCCPR
00004A78                                    7222+rd_kafka_op_filter ds 0d                                                01-DCCPR
00004A78                                    7223+@REGION_1944_1 ds 0h                                                    01-DCCPR
00004A78 EBEC D008 0024          00000008   7224+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004A7E E3E0 D088 0004          00000088   7225+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004A84 E3C0 D090 0004          00000090   7226+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004A8A B904 002E                          7227+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004A8E E3B0 C018 0004          00000018   7228+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004A94 A7EB 00B8               000000B8   7229+         aghi  14,184              increase by frame size               01-DCCPR
00004A98 E3E0 C020 0021          00000020   7230+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004A9E 4720 B020               00000020   7231+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004AA2                                    7232+@PER_1944 ds   0h                                                       01-DCCPR
00004AA2 EBDE 2080 0024          00000080   7233+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004AA8 E3C0 2090 0024          00000090   7234+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004AAE B904 00D2                          7235+         lgr   13,2                set real frame pointer               01-DCCPR
00004AB2 B904 00CF                          7236+         lgr   12,15               set base reg                         01-DCCPR
                        00004A78            7237+         using @REGION_1944_1,12                                        01-DCCPR
00004AB6 B904 0031                          7238          LGR   3,1         ; ptr to parm area
                                            7239 * ******* End of Prologue
                                            7240 * *
                                            7241 * ***           if (((!rko)))
00004ABA E320 3008 0004          00000008   7242          LG    2,8(0,3)    ; rko
00004AC0 B902 00F2                          7243          LTGR  15,2
                                                                                                                           Page  147 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004AC4 4770 C078               00004AF0   7244          BNZ   @L737
                                            7245 * ***                   return ((void *)0);
00004AC8 A7F9 0000               00000000   7246          LGHI  15,0        ; 0
00004ACC 47F0 C0D8               00004B50   7247          B     @ret_lab_1944
00004AD0                                    7248          DS    0D
00004AD0 000000B8                           7249 @FRAMESIZE_1944 DC F'184'
00004AD4 00000000
00004AD8 0000000000003398                   7250 @lit_1944_242 DC AD(rd_kafka_op_version_outdated)
00004AE0 0000000000002168                   7251 @lit_1944_243 DC AD(rd_kafka_q_deq0)
00004AE8 0000000000000000                   7252 @lit_1944_244 DC AD(rd_kafka_op_destroy)
00004AF0                                    7253 @L737    DS    0H
                                            7254 * ***
                                            7255 * ***           if (((rd_kafka_op_version_outdated(rko, version)))) {
00004AF0 E320 D0A8 0024          000000A8   7256          STG   2,168(0,13)
00004AF6 E3F0 3014 0014          00000014   7257          LGF   15,20(0,3)  ; version
00004AFC E3F0 D0B0 0024          000000B0   7258          STG   15,176(0,13)
00004B02 4110 D0A8               000000A8   7259          LA    1,168(0,13)
00004B06 E3F0 C060 0004          00004AD8   7260          LG    15,@lit_1944_242 ; rd_kafka_op_version_outdated
00004B0C                                    7261 @@gen_label424 DS    0H
00004B0C 05EF                               7262          BALR  14,15
00004B0E                                    7263 @@gen_label425 DS    0H
00004B0E 12FF                               7264          LTR   15,15
00004B10 4780 C0D4               00004B4C   7265          BZ    @L738
                                            7266 * ***         rd_kafka_q_deq0(rkq, rko);
00004B14 E3F0 3000 0004          00000000   7267          LG    15,0(0,3)   ; rkq
00004B1A E3F0 D0A8 0024          000000A8   7268          STG   15,168(0,13)
00004B20 E320 D0B0 0024          000000B0   7269          STG   2,176(0,13)
00004B26 4110 D0A8               000000A8   7270          LA    1,168(0,13)
00004B2A E3F0 C068 0004          00004AE0   7271          LG    15,@lit_1944_243 ; rd_kafka_q_deq0
00004B30                                    7272 @@gen_label427 DS    0H
00004B30 05EF                               7273          BALR  14,15
00004B32                                    7274 @@gen_label428 DS    0H
                                            7275 * ***                   rd_kafka_op_destroy(rko);
00004B32 E320 D0A8 0024          000000A8   7276          STG   2,168(0,13)
00004B38 4110 D0A8               000000A8   7277          LA    1,168(0,13)
00004B3C E3F0 C070 0004          00004AE8   7278          LG    15,@lit_1944_244 ; rd_kafka_op_destroy
00004B42                                    7279 @@gen_label429 DS    0H
00004B42 05EF                               7280          BALR  14,15
00004B44                                    7281 @@gen_label430 DS    0H
                                            7282 * ***                   return ((void *)0);
00004B44 A7F9 0000               00000000   7283          LGHI  15,0        ; 0
00004B48 47F0 C0D8               00004B50   7284          B     @ret_lab_1944
                                            7285 * ***           }
00004B4C                                    7286 @L738    DS    0H
                                            7287 * ***
                                            7288 * ***           return rko;
00004B4C B904 00F2                          7289          LGR   15,2
                                            7290 * ***   }
00004B50                                    7291 @ret_lab_1944 DS 0H
                                            7292 * * **** Start of Epilogue
                                            7293          DCCEPIL
00004B50                                    7294+         ds 0h                                                          01-DCCEP
                                                                                                                           Page  148 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7295+* Epilog
00004B50 D707 D088 D088 00000088 00000088   7296+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004B56 E3D0 D080 0004          00000080   7297+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004B5C E3C0 D090 0004          00000090   7298+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004B62 E3B0 C018 0004          00000018   7299+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004B68 E3C0 B010 0021          00000010   7300+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004B6E E3E0 D008 0004          00000008   7301+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004B74 EB1C D020 0004          00000020   7302+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004B7A 078E                               7303+         bcr 8,14                if same dsab, just return              01-DCCEP
00004B7C E3F0 D010 0024          00000010   7304+         stg 15,16(0,13)         save return code                       01-DCCEP
00004B82 E300 D018 0024          00000018   7305+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004B88 E3F0 D090 0004          00000090   7306+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004B8E E3F0 F018 0004          00000018   7307+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004B94 47F0 F040               00000040   7308+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7309+* End of Epilog
                                            7310 * * **** End of Epilogue
                                            7311          DROP  12
                                            7312 *
                                            7313 *   DSECT for automatic variables in "rd_kafka_op_filter"
                                            7314 *      (FUNCTION #1944)
                                            7315 *
00000000                00000000 000000A8   7316 @AUTO#rd_kafka_op_filter DSECT
00000000                                    7317          DS    XL168
                                            7318 *
00004B98                00000000 00007BF0   7319 @CODE    CSECT
                                            7320 *
                                            7321 *
                                            7322 *
                                            7323 * ....... start of rd_kafka_q_pop_serve
                                            7324 rd_kafka_q_pop_serve ALIAS X'99846D92818692816D986D9796976DA28599A585'
00004B98                                    7325 @LNAME1462 DS  0H
00004B98 00000014                           7326          DC    X'00000014'
00004B9C 99846D9281869281                   7327          DC    C'rd_kafka_q_pop_serve'
00004BB0 00                                 7328          DC    X'00'
                                            7329 rd_kafka_q_pop_serve DCCPRLG CINDEX=1462,BASER=12,FRAME=240,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1462
                                            7330          macro
                                            7331          dccextrn &m
                                            7332          gblc    &$dccext(1000)
                                            7333          gbla    &$dccexti
                                            7334          lcla    &i
                                            7335 &$dccext(&$dccexti+1) setc    '&m'
                                            7336 &i       seta    1
                                            7337 .loop    aif    (&i gt &$dccexti).around
                                            7338          aif    ('&$dccext(&i)' eq '&m').getout
                                            7339 &i       seta    &i+1
                                            7340          ago     .loop
                                            7341 .around  anop
                                            7342 &$dccexti seta &$dccexti+1
                                            7343          extrn  &m
                                            7344 .getout  anop
                                            7345          mend
                                                                                                                           Page  149 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004BB8                                    7346+$eye0141    ds    0d                                                    02-DCCCA
00004BB8 C4C3C3                             7347+         dc cl3'DCC'                                                    02-DCCCA
00004BBB 01                                 7348+         dc xl1'01' format one                                          02-DCCCA
00004BBC 00000000                           7349+         dc a(0)                                                        02-DCCCA
00004BC0 0000000000004C2A                   7350+         dc ad(@PER_1462)                                               02-DCCCA
00004BC8 00000000000000F0                   7351+         dc ad(240)                                                     02-DCCCA
00004BD0 0000000000000000                   7352+         dc ad(0)                                                       02-DCCCA
00004BD8 0000000000001000                   7353+         dc ad(4096)                                                    02-DCCCA
00004BE0 20                                 7354+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004BE1 03                                 7355+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004BE2 03                                 7356+         dc al1(3)                                                      02-DCCCA
00004BE3 08                                 7357+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004BE4 00                                 7358+         dc bl.8'00000000'                                              02-DCCCA
00004BE5 000000                             7359+         dc al3(0)                                                      02-DCCCA
00004BE8 0000000000004B98                   7360+         dc ad(@LNAME1462)                                              02-DCCCA
00004BF0                                    7361+         ds 0d                                                          02-DCCCA
00004BF0 0000000000004BB8                   7362+         dc ad($eye0141)                                                02-DCCCA
00004BF8 0000000000000000                   7363+         dc ad(0)                                                       02-DCCCA
00004C00                                    7364+         ds    0d                                                       01-DCCPR
                                            7365+         entry rd_kafka_q_pop_serve                                     01-DCCPR
00004C00                                    7366+rd_kafka_q_pop_serve ds 0d                                              01-DCCPR
00004C00                                    7367+@REGION_1462_1 ds 0h                                                    01-DCCPR
00004C00 EBEC D008 0024          00000008   7368+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004C06 E3E0 D088 0004          00000088   7369+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004C0C E3C0 D090 0004          00000090   7370+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004C12 B904 002E                          7371+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004C16 E3B0 C018 0004          00000018   7372+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004C1C A7EB 00F0               000000F0   7373+         aghi  14,240              increase by frame size               01-DCCPR
00004C20 E3E0 C020 0021          00000020   7374+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004C26 4720 B020               00000020   7375+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004C2A                                    7376+@PER_1462 ds   0h                                                       01-DCCPR
00004C2A EBDE 2080 0024          00000080   7377+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004C30 E3C0 2090 0024          00000090   7378+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004C36 B904 00D2                          7379+         lgr   13,2                set real frame pointer               01-DCCPR
00004C3A B904 00CF                          7380+         lgr   12,15               set base reg                         01-DCCPR
                        00004C00            7381+         using @REGION_1462_1,12                                        01-DCCPR
                                            7382          DCCPRV REG=2      ; Get PRV from DVT
00004C3E E320 B008 0004          00000008   7383+         LG 2,8(0,11)                                                   01-DCCPR
00004C44 B904 0051                          7384          LGR   5,1         ; ptr to parm area
                                            7385 * ******* End of Prologue
                                            7386 * *
00004C48 E330 5000 0004          00000000   7387          LG    3,0(0,5)    ; rkq
                                            7388 * ***      rd_kafka_op_t *rko;
                                            7389 * ***           rd_kafka_q_t *fwdq;
                                            7390 * ***
                                            7391 * ***           do {} while (0);
00004C4E                                    7392 @L739    DS    0H
                                            7393 * ***
                                            7394 * ***      mtx_lock(&rkq->rkq_lock);
00004C4E E330 D0C0 0024          000000C0   7395          STG   3,192(0,13)
00004C54 4110 D0C0               000000C0   7396          LA    1,192(0,13)
00004C58 E3F0 C0C8 0004          00004CC8   7397          LG    15,@lit_1462_247 ; mtx_lock
                                                                                                                           Page  150 
  Active Usings: @REGION_1462_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004C5E                                    7398 @@gen_label431 DS    0H
00004C5E 05EF                               7399          BALR  14,15
00004C60                                    7400 @@gen_label432 DS    0H
                                            7401 * ***
                                            7402 * ***           rd_kafka_yield_thread = 0;
00004C60 E3F0 C0D8 0016          00004CD8   7403          LLGF  15,@lit_1462_248 ; rd_kafka_yield_thread
00004C66 41FF 2000               00000000   7404          LA    15,0(15,2)
00004C6A E54C F000 0000          00000000   7405          MVHI  0(15),0     ; rd_kafka_yield_thread
                                            7406 * ***           if (!(fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
00004C70 E330 D0C0 0024          000000C0   7407          STG   3,192(0,13)
00004C76 D707 D0C8 D0C8 000000C8 000000C8   7408          XC    200(8,13),200(13)
00004C7C 4110 D0C0               000000C0   7409          LA    1,192(0,13)
00004C80 E3F0 C0D0 0004          00004CD0   7410          LG    15,@lit_1462_249 ; rd_kafka_q_fwd_get
00004C86                                    7411 @@gen_label433 DS    0H
00004C86 05EF                               7412          BALR  14,15
00004C88                                    7413 @@gen_label434 DS    0H
00004C88 B904 004F                          7414          LGR   4,15
00004C8C B902 00F4                          7415          LTGR  15,4
00004C90 4770 C2D8               00004ED8   7416          BNZ   @L742
                                            7417 * ***                   struct timespec timeout_tspec;
                                            7418 * ***
                                            7419 * ***                   rd_timeout_init_timespec_us(&timeout_tspec, ti\
                                            7420 * meout_us);
00004C94 41F0 D0A8               000000A8   7421          LA    15,168(0,13)
00004C98 E3F0 D0C0 0024          000000C0   7422          STG   15,192(0,13)
00004C9E E3F0 5008 0004          00000008   7423          LG    15,8(0,5)   ; timeout_us
00004CA4 E3F0 D0C8 0024          000000C8   7424          STG   15,200(0,13)
00004CAA 4110 D0C0               000000C0   7425          LA    1,192(0,13)
00004CAE E3F0 C0E0 0004          00004CE0   7426          LG    15,@lit_1462_250 ; rd_timeout_init_timespec_us
00004CB4                                    7427 @@gen_label436 DS    0H
00004CB4 05EF                               7428          BALR  14,15
00004CB6                                    7429 @@gen_label437 DS    0H
                                            7430 * ***
                                            7431 * ***                   while (1) {
00004CB6                                    7432 @L745    DS    0H
                                            7433 * ***                           rd_kafka_op_res_t res;
                                            7434 * ***
                                            7435 * ***
                                            7436 * ***                           rd_bool_t is_locked = 1;
00004CB6 9201 D0B8      000000B8 00000001   7437          MVI   184(13),1   ; is_locked
                                            7438 * ***
                                            7439 * ***
                                            7440 * ***                   retry:
                                            7441 * ***                           while ((rko = ((&rkq->rkq_q)->tqh_firs\
                                            7442 * t)) &&
00004CBA                                    7443 @_retry@1462@0 DS 0H
00004CBA 47F0 C130               00004D30   7444          B     @L750
00004CC0                                    7445          DS    0D
00004CC0 000000F0                           7446 @FRAMESIZE_1462 DC F'240'
00004CC4 00000000
00004CC8 0000000000000000                   7447 @lit_1462_247 DC AD(mtx_lock)
00004CD0 0000000000001510                   7448 @lit_1462_249 DC AD(rd_kafka_q_fwd_get)
                                                                                                                           Page  151 
  Active Usings: @REGION_1462_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004CD8 00000000                           7449 @lit_1462_248 DC Q(rd_kafka_yield_thread)
00004CDC 00000000
00004CE0 0000000000000B48                   7450 @lit_1462_250 DC AD(rd_timeout_init_timespec_us)
00004CE8 0000000000004A78                   7451 @lit_1462_251 DC AD(rd_kafka_op_filter)
00004CF0 0000000000002248                   7452 @lit_1462_252 DC AD(rd_kafka_q_mark_served)
00004CF8 0000000000002168                   7453 @lit_1462_253 DC AD(rd_kafka_q_deq0)
00004D00 0000000000000000                   7454 @lit_1462_254 DC AD(mtx_unlock)
00004D08 0000000000000000                   7455 @lit_1462_255 DC AD(rd_kafka_op_handle)
00004D10 0000000000003898                   7456 @lit_1462_258 DC AD(rd_kafka_q_check_yield)
00004D18 0000000000000000                   7457 @lit_1462_262 DC AD(cnd_timedwait_abs)
00004D20 0000000000004C00                   7458 @lit_1462_266 DC AD(rd_kafka_q_pop_serve)
00004D28 0000000000001140                   7459 @lit_1462_267 DC AD(rd_kafka_q_destroy0)
                                            7460 * ***                                   ;
00004D30                                    7461 @L750    DS    0H
00004D30 E320 3060 0004          00000060   7462          LG    2,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
00004D36 B902 00F2                          7463          LTGR  15,2
00004D3A 4780 C16A               00004D6A   7464          BZ    @L751
                                            7465 * ***                                  !(rko = rd_kafka_op_filter(rkq,\
                                            7466 *  rko, version)))
00004D3E E330 D0C0 0024          000000C0   7467          STG   3,192(0,13)
00004D44 E320 D0C8 0024          000000C8   7468          STG   2,200(0,13)
00004D4A E3F0 5014 0014          00000014   7469          LGF   15,20(0,5)  ; version
00004D50 E3F0 D0D0 0024          000000D0   7470          STG   15,208(0,13)
00004D56 4110 D0C0               000000C0   7471          LA    1,192(0,13)
00004D5A E3F0 C0E8 0004          00004CE8   7472          LG    15,@lit_1462_251 ; rd_kafka_op_filter
00004D60                                    7473 @@gen_label439 DS    0H
00004D60 05EF                               7474          BALR  14,15
00004D62                                    7475 @@gen_label440 DS    0H
00004D62 B902 002F                          7476          LTGR  2,15        ; rko
00004D66 4780 C130               00004D30   7477          BZ    @L750
00004D6A                                    7478 @L751    DS    0H
                                            7479 * ***
                                            7480 * ***                           rd_kafka_q_mark_served(rkq);
00004D6A E330 D0C0 0024          000000C0   7481          STG   3,192(0,13)
00004D70 4110 D0C0               000000C0   7482          LA    1,192(0,13)
00004D74 E3F0 C0F0 0004          00004CF0   7483          LG    15,@lit_1462_252 ; rd_kafka_q_mark_served
00004D7A                                    7484 @@gen_label442 DS    0H
00004D7A 05EF                               7485          BALR  14,15
00004D7C                                    7486 @@gen_label443 DS    0H
                                            7487 * ***
                                            7488 * ***                           if (rko) {
00004D7C B902 00F2                          7489          LTGR  15,2
00004D80 4780 C234               00004E34   7490          BZ    @L752
                                            7491 * ***
                                            7492 * ***                                   rd_kafka_q_deq0(rkq, rko);
00004D84 E330 D0C0 0024          000000C0   7493          STG   3,192(0,13)
00004D8A E320 D0C8 0024          000000C8   7494          STG   2,200(0,13)
00004D90 4110 D0C0               000000C0   7495          LA    1,192(0,13)
00004D94 E3F0 C0F8 0004          00004CF8   7496          LG    15,@lit_1462_253 ; rd_kafka_q_deq0
00004D9A                                    7497 @@gen_label445 DS    0H
00004D9A 05EF                               7498          BALR  14,15
00004D9C                                    7499 @@gen_label446 DS    0H
                                                                                                                           Page  152 
  Active Usings: @REGION_1462_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7500 * ***
                                            7501 * ***
                                            7502 * ***
                                            7503 * ***                                   mtx_unlock(&rkq->rkq_lock);
00004D9C E330 D0C0 0024          000000C0   7504          STG   3,192(0,13)
00004DA2 4110 D0C0               000000C0   7505          LA    1,192(0,13)
00004DA6 E3F0 C100 0004          00004D00   7506          LG    15,@lit_1462_254 ; mtx_unlock
00004DAC                                    7507 @@gen_label447 DS    0H
00004DAC 05EF                               7508          BALR  14,15
00004DAE                                    7509 @@gen_label448 DS    0H
                                            7510 * ***                                   is_locked = 0;
00004DAE 9200 D0B8      000000B8 00000000   7511          MVI   184(13),0   ; is_locked
                                            7512 * ***
                                            7513 * ***
                                            7514 * ***
                                            7515 * ***
                                            7516 * ***                                   res = rd_kafka_op_handle(rkq->\
                                            7517 * rkq_rk, rkq, rko,
                                            7518 * ***                                                            cb_ty\
                                            7519 * pe, opaque,
                                            7520 * ***                                                            callb\
                                            7521 * ack);
00004DB2 E3F0 3088 0004          00000088   7522          LG    15,136(0,3)
00004DB8 E3F0 D0C0 0024          000000C0   7523          STG   15,192(0,13)
00004DBE E330 D0C8 0024          000000C8   7524          STG   3,200(0,13)
00004DC4 E320 D0D0 0024          000000D0   7525          STG   2,208(0,13)
00004DCA E3F0 501C 0014          0000001C   7526          LGF   15,28(0,5)  ; cb_type
00004DD0 E3F0 D0D8 0024          000000D8   7527          STG   15,216(0,13)
00004DD6 E3F0 5028 0004          00000028   7528          LG    15,40(0,5)  ; opaque
00004DDC E3F0 D0E0 0024          000000E0   7529          STG   15,224(0,13)
00004DE2 E3F0 5020 0004          00000020   7530          LG    15,32(0,5)  ; callback
00004DE8 E3F0 D0E8 0024          000000E8   7531          STG   15,232(0,13)
00004DEE 4110 D0C0               000000C0   7532          LA    1,192(0,13)
00004DF2 E3F0 C108 0004          00004D08   7533          LG    15,@lit_1462_255 ; rd_kafka_op_handle
00004DF8                                    7534 @@gen_label449 DS    0H
00004DF8 05EF                               7535          BALR  14,15
00004DFA                                    7536 @@gen_label450 DS    0H
                                            7537 * ***
                                            7538 * ***                                   if (res == RD_KAFKA_OP_RES_HAN\
                                            7539 * DLED ||
00004DFA A7FE 0001               00000001   7540          CHI   15,1
00004DFE 4780 C20A               00004E0A   7541          BE    @L754
                                            7542 * ***                                       res == RD_KAFKA_OP_RES_KEE\
                                            7543 * P) {
00004E02 A7FE 0002               00000002   7544          CHI   15,2
00004E06 4770 C224               00004E24   7545          BNE   @L753
00004E0A                                    7546 @L754    DS    0H
                                            7547 * ***                                           mtx_lock(&rkq->rkq_loc\
                                            7548 * k);
00004E0A E330 D0C0 0024          000000C0   7549          STG   3,192(0,13)
00004E10 4110 D0C0               000000C0   7550          LA    1,192(0,13)
00004E14 E3F0 C0C8 0004          00004CC8   7551          LG    15,@lit_1462_247 ; mtx_lock
                                                                                                                           Page  153 
  Active Usings: @REGION_1462_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004E1A                                    7552 @@gen_label453 DS    0H
00004E1A 05EF                               7553          BALR  14,15
00004E1C                                    7554 @@gen_label454 DS    0H
                                            7555 * ***                                           is_locked = 1;
00004E1C 9201 D0B8      000000B8 00000001   7556          MVI   184(13),1   ; is_locked
                                            7557 * ***                                           goto retry;
00004E20 47F0 C130               00004D30   7558          B     @L750
                                            7559 * ***                                   } else if (((res == RD_KAFKA_O\
                                            7560 * P_RES_YIELD))) {
00004E24                                    7561 @L753    DS    0H
00004E24 A7FE 0003               00000003   7562          CHI   15,3
00004E28 4770 C354               00004F54   7563          BNE   @L762
                                            7564 * ***
                                            7565 * ***
                                            7566 * ***                                           return ((void *)0);
00004E2C A7F9 0000               00000000   7567          LGHI  15,0        ; 0
00004E30 47F0 C358               00004F58   7568          B     @ret_lab_1462
                                            7569 * ***                                   } else
                                            7570 * ***                                           break;
                                            7571 * ***                           }
00004E34                                    7572 @L752    DS    0H
                                            7573 * ***
                                            7574 * ***                           if (((rd_kafka_q_check_yield(rkq)))) {
00004E34 E330 D0C0 0024          000000C0   7575          STG   3,192(0,13)
00004E3A 4110 D0C0               000000C0   7576          LA    1,192(0,13)
00004E3E E3F0 C110 0004          00004D10   7577          LG    15,@lit_1462_258 ; rd_kafka_q_check_yield
00004E44                                    7578 @@gen_label456 DS    0H
00004E44 05EF                               7579          BALR  14,15
00004E46                                    7580 @@gen_label457 DS    0H
00004E46 C0FB 0000 00FF                     7581          NILF  15,X'000000FF'
00004E4C 12FF                               7582          LTR   15,15
00004E4E 4780 C274               00004E74   7583          BZ    @L758
                                            7584 * ***                                   if (is_locked)
00004E52 9500 D0B8      000000B8 00000000   7585          CLI   184(13),0
00004E56 4780 C26C               00004E6C   7586          BE    @L759
                                            7587 * ***                                           mtx_unlock(&rkq->rkq_l\
                                            7588 * ock);
00004E5A E330 D0C0 0024          000000C0   7589          STG   3,192(0,13)
00004E60 4110 D0C0               000000C0   7590          LA    1,192(0,13)
00004E64 E3F0 C100 0004          00004D00   7591          LG    15,@lit_1462_254 ; mtx_unlock
00004E6A                                    7592 @@gen_label460 DS    0H
00004E6A 05EF                               7593          BALR  14,15
00004E6C                                    7594 @@gen_label461 DS    0H
00004E6C                                    7595 @L759    DS    0H
                                            7596 * ***                                   return ((void *)0);
00004E6C A7F9 0000               00000000   7597          LGHI  15,0        ; 0
00004E70 47F0 C358               00004F58   7598          B     @ret_lab_1462
                                            7599 * ***                           }
00004E74                                    7600 @L758    DS    0H
                                            7601 * ***
                                            7602 * ***                           if (!is_locked)
00004E74 9500 D0B8      000000B8 00000000   7603          CLI   184(13),0
                                                                                                                           Page  154 
  Active Usings: @REGION_1462_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004E78 4770 C28E               00004E8E   7604          BNE   @L760
                                            7605 * ***                                   mtx_lock(&rkq->rkq_lock);
00004E7C E330 D0C0 0024          000000C0   7606          STG   3,192(0,13)
00004E82 4110 D0C0               000000C0   7607          LA    1,192(0,13)
00004E86 E3F0 C0C8 0004          00004CC8   7608          LG    15,@lit_1462_247 ; mtx_lock
00004E8C                                    7609 @@gen_label463 DS    0H
00004E8C 05EF                               7610          BALR  14,15
00004E8E                                    7611 @@gen_label464 DS    0H
00004E8E                                    7612 @L760    DS    0H
                                            7613 * ***
                                            7614 * ***                           if (cnd_timedwait_abs(&rkq->rkq_cond,
                                            7615 * ***                                                 &rkq->rkq_lock,
                                            7616 * ***                                                 &timeout_tspec) \
                                            7617 * !=
00004E8E 41F0 3028               00000028   7618          LA    15,40(0,3)
00004E92 E3F0 D0C0 0024          000000C0   7619          STG   15,192(0,13)
00004E98 E330 D0C8 0024          000000C8   7620          STG   3,200(0,13)
00004E9E 41F0 D0A8               000000A8   7621          LA    15,168(0,13)
00004EA2 E3F0 D0D0 0024          000000D0   7622          STG   15,208(0,13)
00004EA8 4110 D0C0               000000C0   7623          LA    1,192(0,13)
00004EAC E3F0 C118 0004          00004D18   7624          LG    15,@lit_1462_262 ; cnd_timedwait_abs
00004EB2                                    7625 @@gen_label465 DS    0H
00004EB2 05EF                               7626          BALR  14,15
00004EB4                                    7627 @@gen_label466 DS    0H
                                            7628 * ***                               0) {
00004EB4 12FF                               7629          LTR   15,15
00004EB6 4780 C2D4               00004ED4   7630          BE    @L761
                                            7631 * ***               mtx_unlock(&rkq->rkq_lock);
00004EBA E330 D0C0 0024          000000C0   7632          STG   3,192(0,13)
00004EC0 4110 D0C0               000000C0   7633          LA    1,192(0,13)
00004EC4 E3F0 C100 0004          00004D00   7634          LG    15,@lit_1462_254 ; mtx_unlock
00004ECA                                    7635 @@gen_label468 DS    0H
00004ECA 05EF                               7636          BALR  14,15
00004ECC                                    7637 @@gen_label469 DS    0H
                                            7638 * ***               return ((void *)0);
00004ECC A7F9 0000               00000000   7639          LGHI  15,0        ; 0
00004ED0 47F0 C358               00004F58   7640          B     @ret_lab_1462
                                            7641 * ***            }
00004ED4                                    7642 @L761    DS    0H
                                            7643 * ***                   }
00004ED4                                    7644 @L746    DS    0H
00004ED4 47F0 C0B6               00004CB6   7645          B     @L745
00004ED8                                    7646 @L743    DS    0H
                                            7647 * ***
                                            7648 * ***           } else {
00004ED8                                    7649 @L742    DS    0H
                                            7650 * ***
                                            7651 * ***
                                            7652 * ***                   mtx_unlock(&rkq->rkq_lock);
00004ED8 E330 D0C0 0024          000000C0   7653          STG   3,192(0,13)
00004EDE 4110 D0C0               000000C0   7654          LA    1,192(0,13)
00004EE2 E3F0 C100 0004          00004D00   7655          LG    15,@lit_1462_254 ; mtx_unlock
                                                                                                                           Page  155 
  Active Usings: @REGION_1462_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004EE8                                    7656 @@gen_label470 DS    0H
00004EE8 05EF                               7657          BALR  14,15
00004EEA                                    7658 @@gen_label471 DS    0H
                                            7659 * ***         rko = rd_kafka_q_pop_serve(fwdq, timeout_us, version,
                                            7660 * ***                     cb_type, callback, opaque);
00004EEA E340 D0C0 0024          000000C0   7661          STG   4,192(0,13)
00004EF0 E3F0 5008 0004          00000008   7662          LG    15,8(0,5)   ; timeout_us
00004EF6 E3F0 D0C8 0024          000000C8   7663          STG   15,200(0,13)
00004EFC E3F0 5014 0014          00000014   7664          LGF   15,20(0,5)  ; version
00004F02 E3F0 D0D0 0024          000000D0   7665          STG   15,208(0,13)
00004F08 E3F0 501C 0014          0000001C   7666          LGF   15,28(0,5)  ; cb_type
00004F0E E3F0 D0D8 0024          000000D8   7667          STG   15,216(0,13)
00004F14 E3F0 5020 0004          00000020   7668          LG    15,32(0,5)  ; callback
00004F1A E3F0 D0E0 0024          000000E0   7669          STG   15,224(0,13)
00004F20 E3F0 5028 0004          00000028   7670          LG    15,40(0,5)  ; opaque
00004F26 E3F0 D0E8 0024          000000E8   7671          STG   15,232(0,13)
00004F2C 4110 D0C0               000000C0   7672          LA    1,192(0,13)
00004F30 E3F0 C120 0004          00004D20   7673          LG    15,@lit_1462_266 ; rd_kafka_q_pop_serve
00004F36                                    7674 @@gen_label472 DS    0H
00004F36 05EF                               7675          BALR  14,15
00004F38                                    7676 @@gen_label473 DS    0H
00004F38 B904 002F                          7677          LGR   2,15        ; rko
                                            7678 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
00004F3C E340 D0C0 0024          000000C0   7679          STG   4,192(0,13)
00004F42 D707 D0C8 D0C8 000000C8 000000C8   7680          XC    200(8,13),200(13)
00004F48 4110 D0C0               000000C0   7681          LA    1,192(0,13)
00004F4C E3F0 C128 0004          00004D28   7682          LG    15,@lit_1462_267 ; rd_kafka_q_destroy0
00004F52                                    7683 @@gen_label474 DS    0H
00004F52 05EF                               7684          BALR  14,15
00004F54                                    7685 @@gen_label475 DS    0H
                                            7686 * ***           }
00004F54                                    7687 @L762    DS    0H
                                            7688 * ***
                                            7689 * ***
                                            7690 * ***      return rko;
00004F54 B904 00F2                          7691          LGR   15,2
                                            7692 * ***   }
00004F58                                    7693 @ret_lab_1462 DS 0H
                                            7694 * * **** Start of Epilogue
                                            7695          DCCEPIL
00004F58                                    7696+         ds 0h                                                          01-DCCEP
                                            7697+* Epilog
00004F58 D707 D088 D088 00000088 00000088   7698+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004F5E E3D0 D080 0004          00000080   7699+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004F64 E3C0 D090 0004          00000090   7700+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004F6A E3B0 C018 0004          00000018   7701+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004F70 E3C0 B010 0021          00000010   7702+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004F76 E3E0 D008 0004          00000008   7703+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004F7C EB1C D020 0004          00000020   7704+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004F82 078E                               7705+         bcr 8,14                if same dsab, just return              01-DCCEP
00004F84 E3F0 D010 0024          00000010   7706+         stg 15,16(0,13)         save return code                       01-DCCEP
00004F8A E300 D018 0024          00000018   7707+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page  156 
  Active Usings: @REGION_1462_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004F90 E3F0 D090 0004          00000090   7708+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004F96 E3F0 F018 0004          00000018   7709+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004F9C 47F0 F040               00000040   7710+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7711+* End of Epilog
                                            7712 * * **** End of Epilogue
                                            7713          DROP  12
                                            7714 *
                                            7715 *   DSECT for automatic variables in "rd_kafka_q_pop_serve"
                                            7716 *      (FUNCTION #1462)
                                            7717 *
00000000                00000000 000000B9   7718 @AUTO#rd_kafka_q_pop_serve DSECT
00000000                                    7719          DS    XL168
000000A8                                    7720 rd_kafka_q_pop_serve#res#3 DS 1F ; res
000000AC                000000AC 000000A8   7721          ORG   @AUTO#rd_kafka_q_pop_serve+168
000000A8                                    7722 rd_kafka_q_pop_serve#timeout_tspec#2 DS 16XL1 ; timeout_tspec
000000B8                000000B8 000000B8   7723          ORG   @AUTO#rd_kafka_q_pop_serve+184
000000B8                                    7724 rd_kafka_q_pop_serve#is_locked#3 DS 1CL1 ; is_locked
                                            7725 *
00004FA0                00000000 00007BF0   7726 @CODE    CSECT
                                            7727 *
                                            7728 *
                                            7729 *
                                            7730 * ....... start of rd_kafka_q_pop
                                            7731 rd_kafka_q_pop ALIAS X'99846D92818692816D986D979697'
00004FA0                                    7732 @LNAME1463 DS  0H
00004FA0 0000000E                           7733          DC    X'0000000E'
00004FA4 99846D9281869281                   7734          DC    C'rd_kafka_q_pop'
00004FB2 00                                 7735          DC    X'00'
                                            7736 rd_kafka_q_pop DCCPRLG CINDEX=1463,BASER=12,FRAME=216,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1463
                                            7737          macro
                                            7738          dccextrn &m
                                            7739          gblc    &$dccext(1000)
                                            7740          gbla    &$dccexti
                                            7741          lcla    &i
                                            7742 &$dccext(&$dccexti+1) setc    '&m'
                                            7743 &i       seta    1
                                            7744 .loop    aif    (&i gt &$dccexti).around
                                            7745          aif    ('&$dccext(&i)' eq '&m').getout
                                            7746 &i       seta    &i+1
                                            7747          ago     .loop
                                            7748 .around  anop
                                            7749 &$dccexti seta &$dccexti+1
                                            7750          extrn  &m
                                            7751 .getout  anop
                                            7752          mend
00004FB8                                    7753+$eye0145    ds    0d                                                    02-DCCCA
00004FB8 C4C3C3                             7754+         dc cl3'DCC'                                                    02-DCCCA
00004FBB 01                                 7755+         dc xl1'01' format one                                          02-DCCCA
00004FBC 00000000                           7756+         dc a(0)                                                        02-DCCCA
00004FC0 000000000000502A                   7757+         dc ad(@PER_1463)                                               02-DCCCA
00004FC8 00000000000000D8                   7758+         dc ad(216)                                                     02-DCCCA
                                                                                                                           Page  157 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004FD0 0000000000000000                   7759+         dc ad(0)                                                       02-DCCCA
00004FD8 0000000000001000                   7760+         dc ad(4096)                                                    02-DCCCA
00004FE0 20                                 7761+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004FE1 03                                 7762+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004FE2 03                                 7763+         dc al1(3)                                                      02-DCCCA
00004FE3 08                                 7764+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004FE4 00                                 7765+         dc bl.8'00000000'                                              02-DCCCA
00004FE5 000000                             7766+         dc al3(0)                                                      02-DCCCA
00004FE8 0000000000004FA0                   7767+         dc ad(@LNAME1463)                                              02-DCCCA
00004FF0                                    7768+         ds 0d                                                          02-DCCCA
00004FF0 0000000000004FB8                   7769+         dc ad($eye0145)                                                02-DCCCA
00004FF8 0000000000000000                   7770+         dc ad(0)                                                       02-DCCCA
00005000                                    7771+         ds    0d                                                       01-DCCPR
                                            7772+         entry rd_kafka_q_pop                                           01-DCCPR
00005000                                    7773+rd_kafka_q_pop ds 0d                                                    01-DCCPR
00005000                                    7774+@REGION_1463_1 ds 0h                                                    01-DCCPR
00005000 EBEC D008 0024          00000008   7775+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005006 E3E0 D088 0004          00000088   7776+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000500C E3C0 D090 0004          00000090   7777+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005012 B904 002E                          7778+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005016 E3B0 C018 0004          00000018   7779+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000501C A7EB 00D8               000000D8   7780+         aghi  14,216              increase by frame size               01-DCCPR
00005020 E3E0 C020 0021          00000020   7781+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005026 4720 B020               00000020   7782+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000502A                                    7783+@PER_1463 ds   0h                                                       01-DCCPR
0000502A EBDE 2080 0024          00000080   7784+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005030 E3C0 2090 0024          00000090   7785+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005036 B904 00D2                          7786+         lgr   13,2                set real frame pointer               01-DCCPR
0000503A B904 00CF                          7787+         lgr   12,15               set base reg                         01-DCCPR
                        00005000            7788+         using @REGION_1463_1,12                                        01-DCCPR
                                            7789 * ******* End of Prologue
                                            7790 * *
                                            7791 * ***           return rd_kafka_q_pop_serve(rkq, timeout_us, version,
                                            7792 * ***                                       RD_KAFKA_Q_CB_RETURN,
                                            7793 * ***                                       ((void *)0), ((void *)0));
0000503E E3F0 1000 0004          00000000   7794          LG    15,0(0,1)   ; rkq
00005044 E3F0 D0A8 0024          000000A8   7795          STG   15,168(0,13)
0000504A E3F0 1008 0004          00000008   7796          LG    15,8(0,1)   ; timeout_us
00005050 E3F0 D0B0 0024          000000B0   7797          STG   15,176(0,13)
00005056 E3F0 1014 0014          00000014   7798          LGF   15,20(0,1)  ; version
0000505C E3F0 D0B8 0024          000000B8   7799          STG   15,184(0,13)
00005062 E548 D0C0 0002          000000C0   7800          MVGHI 192(13),2
00005068 D70F D0C8 D0C8 000000C8 000000C8   7801          XC    200(16,13),200(13)
0000506E 4110 D0A8               000000A8   7802          LA    1,168(0,13)
00005072 E3F0 C0D0 0004          000050D0   7803          LG    15,@lit_1463_269 ; rd_kafka_q_pop_serve
00005078                                    7804 @@gen_label476 DS    0H
00005078 05EF                               7805          BALR  14,15
0000507A                                    7806 @@gen_label477 DS    0H
                                            7807 * ***   }
                                            7808 * * **** Start of Epilogue
                                            7809          DCCEPIL
0000507A                                    7810+         ds 0h                                                          01-DCCEP
                                                                                                                           Page  158 
  Active Usings: @REGION_1463_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7811+* Epilog
0000507A D707 D088 D088 00000088 00000088   7812+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005080 E3D0 D080 0004          00000080   7813+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005086 E3C0 D090 0004          00000090   7814+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000508C E3B0 C018 0004          00000018   7815+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005092 E3C0 B010 0021          00000010   7816+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005098 E3E0 D008 0004          00000008   7817+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000509E EB1C D020 0004          00000020   7818+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000050A4 078E                               7819+         bcr 8,14                if same dsab, just return              01-DCCEP
000050A6 E3F0 D010 0024          00000010   7820+         stg 15,16(0,13)         save return code                       01-DCCEP
000050AC E300 D018 0024          00000018   7821+         stg 0,24(0,13)          save more return code                  01-DCCEP
000050B2 E3F0 D090 0004          00000090   7822+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000050B8 E3F0 F018 0004          00000018   7823+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000050BE 47F0 F040               00000040   7824+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7825+* End of Epilog
                                            7826 * * **** End of Epilogue
000050C8                                    7827          DS    0D
000050C8 000000D8                           7828 @FRAMESIZE_1463 DC F'216'
000050CC 00000000
000050D0 0000000000004C00                   7829 @lit_1463_269 DC AD(rd_kafka_q_pop_serve)
                                            7830          DROP  12
                                            7831 *
                                            7832 *   DSECT for automatic variables in "rd_kafka_q_pop"
                                            7833 *      (FUNCTION #1463)
                                            7834 *
00000000                00000000 000000A8   7835 @AUTO#rd_kafka_q_pop DSECT
00000000                                    7836          DS    XL168
                                            7837 *
000050D8                00000000 00007BF0   7838 @CODE    CSECT
                                            7839 *
                                            7840 *
                                            7841 *
                                            7842 * ....... start of rd_kafka_q_serve
                                            7843 rd_kafka_q_serve ALIAS X'99846D92818692816D986DA28599A585'
000050D8                                    7844 @LNAME1464 DS  0H
000050D8 00000010                           7845          DC    X'00000010'
000050DC 99846D9281869281                   7846          DC    C'rd_kafka_q_serve'
000050EC 00                                 7847          DC    X'00'
                                            7848 rd_kafka_q_serve DCCPRLG CINDEX=1464,BASER=12,FRAME=408,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1464
                                            7849          macro
                                            7850          dccextrn &m
                                            7851          gblc    &$dccext(1000)
                                            7852          gbla    &$dccexti
                                            7853          lcla    &i
                                            7854 &$dccext(&$dccexti+1) setc    '&m'
                                            7855 &i       seta    1
                                            7856 .loop    aif    (&i gt &$dccexti).around
                                            7857          aif    ('&$dccext(&i)' eq '&m').getout
                                            7858 &i       seta    &i+1
                                            7859          ago     .loop
                                            7860 .around  anop
                                                                                                                           Page  159 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7861 &$dccexti seta &$dccexti+1
                                            7862          extrn  &m
                                            7863 .getout  anop
                                            7864          mend
000050F0                                    7865+$eye0148    ds    0d                                                    02-DCCCA
000050F0 C4C3C3                             7866+         dc cl3'DCC'                                                    02-DCCCA
000050F3 01                                 7867+         dc xl1'01' format one                                          02-DCCCA
000050F4 00000000                           7868+         dc a(0)                                                        02-DCCCA
000050F8 0000000000005162                   7869+         dc ad(@PER_1464)                                               02-DCCCA
00005100 0000000000000198                   7870+         dc ad(408)                                                     02-DCCCA
00005108 0000000000000000                   7871+         dc ad(0)                                                       02-DCCCA
00005110 0000000000001000                   7872+         dc ad(4096)                                                    02-DCCCA
00005118 20                                 7873+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005119 03                                 7874+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000511A 03                                 7875+         dc al1(3)                                                      02-DCCCA
0000511B 08                                 7876+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000511C 00                                 7877+         dc bl.8'00000000'                                              02-DCCCA
0000511D 000000                             7878+         dc al3(0)                                                      02-DCCCA
00005120 00000000000050D8                   7879+         dc ad(@LNAME1464)                                              02-DCCCA
00005128                                    7880+         ds 0d                                                          02-DCCCA
00005128 00000000000050F0                   7881+         dc ad($eye0148)                                                02-DCCCA
00005130 0000000000000000                   7882+         dc ad(0)                                                       02-DCCCA
00005138                                    7883+         ds    0d                                                       01-DCCPR
                                            7884+         entry rd_kafka_q_serve                                         01-DCCPR
00005138                                    7885+rd_kafka_q_serve ds 0d                                                  01-DCCPR
00005138                                    7886+@REGION_1464_1 ds 0h                                                    01-DCCPR
00005138 EBEC D008 0024          00000008   7887+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000513E E3E0 D088 0004          00000088   7888+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005144 E3C0 D090 0004          00000090   7889+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000514A B904 002E                          7890+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000514E E3B0 C018 0004          00000018   7891+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005154 A7EB 0198               00000198   7892+         aghi  14,408              increase by frame size               01-DCCPR
00005158 E3E0 C020 0021          00000020   7893+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000515E 4720 B020               00000020   7894+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005162                                    7895+@PER_1464 ds   0h                                                       01-DCCPR
00005162 EBDE 2080 0024          00000080   7896+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005168 E3C0 2090 0024          00000090   7897+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000516E B904 00D2                          7898+         lgr   13,2                set real frame pointer               01-DCCPR
00005172 B904 00CF                          7899+         lgr   12,15               set base reg                         01-DCCPR
                        00005138            7900+         using @REGION_1464_1,12                                        01-DCCPR
                                            7901          DCCPRV REG=7      ; Get PRV from DVT
00005176 E370 B008 0004          00000008   7902+         LG 7,8(0,11)                                                   01-DCCPR
0000517C B904 0081                          7903          LGR   8,1         ; ptr to parm area
                                            7904 * ******* End of Prologue
                                            7905 * *
                                            7906 * ***           rd_kafka_t *rk = rkq->rkq_rk;
00005180 E340 8000 0004          00000000   7907          LG    4,0(0,8)    ; rkq
00005186 5850 8014               00000014   7908          L     5,20(0,8)   ; max_cnt
0000518A E360 4088 0004          00000088   7909          LG    6,136(0,4)  ; offset of rkq_rk in rd_kafka_q_s
                                            7910 * ***      rd_kafka_op_t *rko;
                                            7911 * ***      rd_kafka_q_t localq;
                                            7912 * ***           rd_kafka_q_t *fwdq;
                                                                                                                           Page  160 
  Active Usings: @REGION_1464_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7913 * ***           int cnt = 0;
00005190 A738 0000               00000000   7914          LHI   3,0         ; 0
                                            7915 * ***           struct timespec timeout_tspec;
                                            7916 * ***
                                            7917 * ***           do {} while (0);
00005194                                    7918 @L763    DS    0H
                                            7919 * ***
                                            7920 * ***      mtx_lock(&rkq->rkq_lock);
00005194 E340 D168 0024          00000168   7921          STG   4,360(0,13)
0000519A 4110 D168               00000168   7922          LA    1,360(0,13)
0000519E E3F0 C120 0004          00005258   7923          LG    15,@lit_1464_272 ; mtx_lock
000051A4                                    7924 @@gen_label478 DS    0H
000051A4 05EF                               7925          BALR  14,15
000051A6                                    7926 @@gen_label479 DS    0H
                                            7927 * ***
                                            7928 * ***           do {} while (0);
000051A6                                    7929 @L766    DS    0H
                                            7930 * ***           if ((fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
000051A6 E340 D168 0024          00000168   7931          STG   4,360(0,13)
000051AC D707 D170 D170 00000170 00000170   7932          XC    368(8,13),368(13)
000051B2 4110 D168               00000168   7933          LA    1,360(0,13)
000051B6 E3F0 C128 0004          00005260   7934          LG    15,@lit_1464_273 ; rd_kafka_q_fwd_get
000051BC                                    7935 @@gen_label480 DS    0H
000051BC 05EF                               7936          BALR  14,15
000051BE                                    7937 @@gen_label481 DS    0H
000051BE B904 002F                          7938          LGR   2,15
000051C2 B902 00F2                          7939          LTGR  15,2
000051C6 4780 C1B8               000052F0   7940          BZ    @L769
                                            7941 * ***                   int ret;
                                            7942 * ***
                                            7943 * ***
                                            7944 * ***                   mtx_unlock(&rkq->rkq_lock);
000051CA E340 D168 0024          00000168   7945          STG   4,360(0,13)
000051D0 4110 D168               00000168   7946          LA    1,360(0,13)
000051D4 E3F0 C130 0004          00005268   7947          LG    15,@lit_1464_274 ; mtx_unlock
000051DA                                    7948 @@gen_label483 DS    0H
000051DA 05EF                               7949          BALR  14,15
000051DC                                    7950 @@gen_label484 DS    0H
                                            7951 * ***         ret = rd_kafka_q_serve(fwdq, timeout_ms, max_cnt,
                                            7952 * ***                                          cb_type, callback, opaq\
                                            7953 * ue);
000051DC E320 D168 0024          00000168   7954          STG   2,360(0,13)
000051E2 E3F0 800C 0014          0000000C   7955          LGF   15,12(0,8)  ; timeout_ms
000051E8 E3F0 D170 0024          00000170   7956          STG   15,368(0,13)
000051EE B914 00F5                          7957          LGFR  15,5
000051F2 E3F0 D178 0024          00000178   7958          STG   15,376(0,13)
000051F8 E3F0 801C 0014          0000001C   7959          LGF   15,28(0,8)  ; cb_type
000051FE E3F0 D180 0024          00000180   7960          STG   15,384(0,13)
00005204 E3F0 8020 0004          00000020   7961          LG    15,32(0,8)  ; callback
0000520A E3F0 D188 0024          00000188   7962          STG   15,392(0,13)
00005210 E3F0 8028 0004          00000028   7963          LG    15,40(0,8)  ; opaque
00005216 E3F0 D190 0024          00000190   7964          STG   15,400(0,13)
                                                                                                                           Page  161 
  Active Usings: @REGION_1464_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000521C 4110 D168               00000168   7965          LA    1,360(0,13)
00005220 E3F0 C138 0004          00005270   7966          LG    15,@lit_1464_275 ; rd_kafka_q_serve
00005226                                    7967 @@gen_label485 DS    0H
00005226 05EF                               7968          BALR  14,15
00005228                                    7969 @@gen_label486 DS    0H
00005228 183F                               7970          LR    3,15
                                            7971 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
0000522A E320 D168 0024          00000168   7972          STG   2,360(0,13)
00005230 D707 D170 D170 00000170 00000170   7973          XC    368(8,13),368(13)
00005236 4110 D168               00000168   7974          LA    1,360(0,13)
0000523A E3F0 C140 0004          00005278   7975          LG    15,@lit_1464_276 ; rd_kafka_q_destroy0
00005240                                    7976 @@gen_label487 DS    0H
00005240 05EF                               7977          BALR  14,15
00005242                                    7978 @@gen_label488 DS    0H
                                            7979 * ***         return ret;
00005242 B914 00F3                          7980          LGFR  15,3
00005246 47F0 C41E               00005556   7981          B     @ret_lab_1464
00005250                                    7982          DS    0D
00005250 00000198                           7983 @FRAMESIZE_1464 DC F'408'
00005254 00000000
00005258 0000000000000000                   7984 @lit_1464_272 DC AD(mtx_lock)
00005260 0000000000001510                   7985 @lit_1464_273 DC AD(rd_kafka_q_fwd_get)
00005268 0000000000000000                   7986 @lit_1464_274 DC AD(mtx_unlock)
00005270 0000000000005138                   7987 @lit_1464_275 DC AD(rd_kafka_q_serve)
00005278 0000000000001140                   7988 @lit_1464_276 DC AD(rd_kafka_q_destroy0)
00005280 0000000000000CF8                   7989 @lit_1464_277 DC AD(rd_timeout_init_timespec)
00005288 0000000000003898                   7990 @lit_1464_278 DC AD(rd_kafka_q_check_yield)
00005290 0000000000000000                   7991 @lit_1464_279 DC AD(cnd_timedwait_abs)
00005298 0000000000002248                   7992 @lit_1464_280 DC AD(rd_kafka_q_mark_served)
000052A0 0000000000003BB0                   7993 @lit_1464_284 DC AD(rd_kafka_q_init0)
000052A8 0000000000007BF0                   7994 @lit_1464_283 DC AD(@DATA)
000052B0 0000000000004648                   7995 @lit_1464_286 DC AD(rd_kafka_q_move_cnt)
000052B8 00000000                           7996 @lit_1464_288 DC Q(rd_kafka_yield_thread)
000052BC 00000000
000052C0 0000000000002168                   7997 @lit_1464_289 DC AD(rd_kafka_q_deq0)
000052C8 0000000000000000                   7998 @lit_1464_290 DC AD(rd_kafka_op_handle)
000052D0 0000000000000000                   7999 @lit_1464_293 DC AD(rd_kafka_crash)
000052D8 0000000000007DFE                   8000 @lit_1464_291 DC AD(@strings@)
000052E0 0000000000002710                   8001 @lit_1464_295 DC AD(rd_kafka_q_prepend0)
000052E8 0000000000001358                   8002 @lit_1464_296 DC AD(rd_kafka_q_destroy_owner)
                                            8003 * ***      }
000052F0                                    8004 @L769    DS    0H
                                            8005 * ***
                                            8006 * ***           rd_timeout_init_timespec(&timeout_tspec, timeout_ms);
000052F0 41F0 D0A8               000000A8   8007          LA    15,168(0,13)
000052F4 E3F0 D168 0024          00000168   8008          STG   15,360(0,13)
000052FA E3F0 800C 0014          0000000C   8009          LGF   15,12(0,8)  ; timeout_ms
00005300 E3F0 D170 0024          00000170   8010          STG   15,368(0,13)
00005306 4110 D168               00000168   8011          LA    1,360(0,13)
0000530A E3F0 C148 0004          00005280   8012          LG    15,@lit_1464_277 ; rd_timeout_init_timespec
00005310                                    8013 @@gen_label489 DS    0H
00005310 05EF                               8014          BALR  14,15
                                                                                                                           Page  162 
  Active Usings: @REGION_1464_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005312                                    8015 @@gen_label490 DS    0H
                                            8016 * ***
                                            8017 * ***
                                            8018 * ***           while (!(rko = ((&rkq->rkq_q)->tqh_first)) &&
                                            8019 * ***                   ;
00005312                                    8020 @L773    DS    0H
00005312 E320 4060 0004          00000060   8021          LG    2,96(0,4)   ; offset of rkq_q in rd_kafka_q_s
00005318 B902 00F2                          8022          LTGR  15,2
0000531C 4770 C232               0000536A   8023          BNZ   @L774
                                            8024 * ***                  !rd_kafka_q_check_yield(rkq) &&
00005320 E340 D168 0024          00000168   8025          STG   4,360(0,13)
00005326 4110 D168               00000168   8026          LA    1,360(0,13)
0000532A E3F0 C150 0004          00005288   8027          LG    15,@lit_1464_278 ; rd_kafka_q_check_yield
00005330                                    8028 @@gen_label492 DS    0H
00005330 05EF                               8029          BALR  14,15
00005332                                    8030 @@gen_label493 DS    0H
00005332 C0FB 0000 00FF                     8031          NILF  15,X'000000FF'
00005338 12FF                               8032          LTR   15,15
0000533A 4770 C232               0000536A   8033          BNZ   @L774
                                            8034 * ***                  cnd_timedwait_abs(&rkq->rkq_cond, &rkq->rkq_loc\
                                            8035 * k,
                                            8036 * ***                                    &timeout_tspec) == 0)
0000533E 41F0 4028               00000028   8037          LA    15,40(0,4)
00005342 E3F0 D168 0024          00000168   8038          STG   15,360(0,13)
00005348 E340 D170 0024          00000170   8039          STG   4,368(0,13)
0000534E 41F0 D0A8               000000A8   8040          LA    15,168(0,13)
00005352 E3F0 D178 0024          00000178   8041          STG   15,376(0,13)
00005358 4110 D168               00000168   8042          LA    1,360(0,13)
0000535C E3F0 C158 0004          00005290   8043          LG    15,@lit_1464_279 ; cnd_timedwait_abs
00005362                                    8044 @@gen_label495 DS    0H
00005362 05EF                               8045          BALR  14,15
00005364                                    8046 @@gen_label496 DS    0H
00005364 12FF                               8047          LTR   15,15
00005366 4780 C1DA               00005312   8048          BE    @L773
0000536A                                    8049 @L774    DS    0H
                                            8050 * ***
                                            8051 * ***           rd_kafka_q_mark_served(rkq);
0000536A E340 D168 0024          00000168   8052          STG   4,360(0,13)
00005370 4110 D168               00000168   8053          LA    1,360(0,13)
00005374 E3F0 C160 0004          00005298   8054          LG    15,@lit_1464_280 ; rd_kafka_q_mark_served
0000537A                                    8055 @@gen_label498 DS    0H
0000537A 05EF                               8056          BALR  14,15
0000537C                                    8057 @@gen_label499 DS    0H
                                            8058 * ***
                                            8059 * ***      if (!rko) {
0000537C B902 00F2                          8060          LTGR  15,2
00005380 4770 C266               0000539E   8061          BNZ   @L775
                                            8062 * ***         mtx_unlock(&rkq->rkq_lock);
00005384 E340 D168 0024          00000168   8063          STG   4,360(0,13)
0000538A 4110 D168               00000168   8064          LA    1,360(0,13)
0000538E E3F0 C130 0004          00005268   8065          LG    15,@lit_1464_274 ; mtx_unlock
00005394                                    8066 @@gen_label501 DS    0H
                                                                                                                           Page  163 
  Active Usings: @REGION_1464_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005394 05EF                               8067          BALR  14,15
00005396                                    8068 @@gen_label502 DS    0H
                                            8069 * ***         return 0;
00005396 A7F9 0000               00000000   8070          LGHI  15,0        ; 0
0000539A 47F0 C41E               00005556   8071          B     @ret_lab_1464
                                            8072 * ***      }
0000539E                                    8073 @L775    DS    0H
                                            8074 * ***
                                            8075 * ***
                                            8076 * ***      rd_kafka_q_init0(&localq,rkq->rkq_rk,__FUNCTION__,494);
0000539E 41F0 D0B8               000000B8   8077          LA    15,184(0,13)
000053A2 E3F0 D168 0024          00000168   8078          STG   15,360(0,13)
000053A8 E3F0 4088 0004          00000088   8079          LG    15,136(0,4)
000053AE E3F0 D170 0024          00000170   8080          STG   15,368(0,13)
000053B4 E3F0 C170 0004          000052A8   8081          LG    15,@lit_1464_283
000053BA 41F0 F1D0               000001D0   8082          LA    15,464(0,15)
000053BE E3F0 D178 0024          00000178   8083          STG   15,376(0,13)
000053C4 E548 D180 01EE          00000180   8084          MVGHI 384(13),494
000053CA 4110 D168               00000168   8085          LA    1,360(0,13)
000053CE E3F0 C168 0004          000052A0   8086          LG    15,@lit_1464_284 ; rd_kafka_q_init0
000053D4                                    8087 @@gen_label503 DS    0H
000053D4 05EF                               8088          BALR  14,15
000053D6                                    8089 @@gen_label504 DS    0H
                                            8090 * ***      rd_kafka_q_move_cnt(&localq, rkq, max_cnt == 0 ? -1 : max_c\
                                            8091 * nt,
                                            8092 * ***                0);
000053D6 1255                               8093          LTR   5,5
000053D8 4770 C2AC               000053E4   8094          BNE   @L776
000053DC A758 FFFF               0000FFFF   8095          LHI   5,-1        ; -1
000053E0 47F0 C2AC               000053E4   8096          B     @L777
000053E4                                    8097 @L776    DS    0H
000053E4                                    8098 @L777    DS    0H
000053E4 41F0 D0B8               000000B8   8099          LA    15,184(0,13)
000053E8 E3F0 D168 0024          00000168   8100          STG   15,360(0,13)
000053EE E340 D170 0024          00000170   8101          STG   4,368(0,13)
000053F4 B914 00F5                          8102          LGFR  15,5
000053F8 E3F0 D178 0024          00000178   8103          STG   15,376(0,13)
000053FE D707 D180 D180 00000180 00000180   8104          XC    384(8,13),384(13)
00005404 4110 D168               00000168   8105          LA    1,360(0,13)
00005408 E3F0 C178 0004          000052B0   8106          LG    15,@lit_1464_286 ; rd_kafka_q_move_cnt
0000540E                                    8107 @@gen_label506 DS    0H
0000540E 05EF                               8108          BALR  14,15
00005410                                    8109 @@gen_label507 DS    0H
                                            8110 * ***
                                            8111 * ***           mtx_unlock(&rkq->rkq_lock);
00005410 E340 D168 0024          00000168   8112          STG   4,360(0,13)
00005416 4110 D168               00000168   8113          LA    1,360(0,13)
0000541A E3F0 C130 0004          00005268   8114          LG    15,@lit_1464_274 ; mtx_unlock
00005420                                    8115 @@gen_label508 DS    0H
00005420 05EF                               8116          BALR  14,15
00005422                                    8117 @@gen_label509 DS    0H
                                            8118 * ***
                                                                                                                           Page  164 
  Active Usings: @REGION_1464_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8119 * ***           rd_kafka_yield_thread = 0;
00005422 E3F0 C180 0016          000052B8   8120          LLGF  15,@lit_1464_288 ; rd_kafka_yield_thread
00005428 41FF 7000               00000000   8121          LA    15,0(15,7)
0000542C E54C F000 0000          00000000   8122          MVHI  0(15),0     ; rd_kafka_yield_thread
                                            8123 * ***
                                            8124 * ***
                                            8125 * ***           while ((rko = ((&localq.rkq_q)->tqh_first))) {
00005432 47F0 C3F6               0000552E   8126          B     @L781
00005436                                    8127 @L780    DS    0H
                                            8128 * ***                   rd_kafka_op_res_t res;
                                            8129 * ***
                                            8130 * ***                   rd_kafka_q_deq0(&localq, rko);
00005436 41F0 D0B8               000000B8   8131          LA    15,184(0,13)
0000543A E3F0 D168 0024          00000168   8132          STG   15,360(0,13)
00005440 E320 D170 0024          00000170   8133          STG   2,368(0,13)
00005446 4110 D168               00000168   8134          LA    1,360(0,13)
0000544A E3F0 C188 0004          000052C0   8135          LG    15,@lit_1464_289 ; rd_kafka_q_deq0
00005450                                    8136 @@gen_label510 DS    0H
00005450 05EF                               8137          BALR  14,15
00005452                                    8138 @@gen_label511 DS    0H
                                            8139 * ***                   res = rd_kafka_op_handle(rk, &localq, rko, cb_\
                                            8140 * type,
                                            8141 * ***                                            opaque, callback);
00005452 E360 D168 0024          00000168   8142          STG   6,360(0,13)
00005458 41F0 D0B8               000000B8   8143          LA    15,184(0,13)
0000545C E3F0 D170 0024          00000170   8144          STG   15,368(0,13)
00005462 E320 D178 0024          00000178   8145          STG   2,376(0,13)
00005468 E3F0 801C 0014          0000001C   8146          LGF   15,28(0,8)  ; cb_type
0000546E E3F0 D180 0024          00000180   8147          STG   15,384(0,13)
00005474 E3F0 8028 0004          00000028   8148          LG    15,40(0,8)  ; opaque
0000547A E3F0 D188 0024          00000188   8149          STG   15,392(0,13)
00005480 E3F0 8020 0004          00000020   8150          LG    15,32(0,8)  ; callback
00005486 E3F0 D190 0024          00000190   8151          STG   15,400(0,13)
0000548C 4110 D168               00000168   8152          LA    1,360(0,13)
00005490 E3F0 C190 0004          000052C8   8153          LG    15,@lit_1464_290 ; rd_kafka_op_handle
00005496                                    8154 @@gen_label512 DS    0H
00005496 05EF                               8155          BALR  14,15
00005498                                    8156 @@gen_label513 DS    0H
00005498 182F                               8157          LR    2,15
                                            8158 * ***
                                            8159 * ***                   do { if (((!(res != RD_KAFKA_OP_RES_PASS)))) r\
                                            8160 * d_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_queue.c",510, \
                                            8161 * __FUNCTION__, (((void *)0)), "assert: " "res != RD_KAFKA_OP_RES_PASS\
                                            8162 * "); } while (0);
0000549A                                    8163 @L782    DS    0H
0000549A 1222                               8164          LTR   2,2
0000549C 4770 C3AA               000054E2   8165          BNE   @L785
000054A0 E3F0 C1A0 0004          000052D8   8166          LG    15,@lit_1464_291
000054A6 4110 F0D2               000000D2   8167          LA    1,210(0,15)
000054AA E310 D168 0024          00000168   8168          STG   1,360(0,13)
000054B0 E548 D170 01FE          00000170   8169          MVGHI 368(13),510
000054B6 E310 C170 0004          000052A8   8170          LG    1,@lit_1464_283
                                                                                                                           Page  165 
  Active Usings: @REGION_1464_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000054BC 4110 11D0               000001D0   8171          LA    1,464(0,1)
000054C0 E310 D178 0024          00000178   8172          STG   1,376(0,13)
000054C6 D707 D180 D180 00000180 00000180   8173          XC    384(8,13),384(13)
000054CC 41F0 F10E               0000010E   8174          LA    15,270(0,15)
000054D0 E3F0 D188 0024          00000188   8175          STG   15,392(0,13)
000054D6 4110 D168               00000168   8176          LA    1,360(0,13)
000054DA E3F0 C198 0004          000052D0   8177          LG    15,@lit_1464_293 ; rd_kafka_crash
000054E0                                    8178 @@gen_label515 DS    0H
000054E0 05EF                               8179          BALR  14,15
000054E2                                    8180 @@gen_label516 DS    0H
000054E2                                    8181 @L785    DS    0H
                                            8182 * ***                   cnt++;
000054E2 A73A 0001               00000001   8183          AHI   3,1
                                            8184 * ***
                                            8185 * ***                   if (((res == RD_KAFKA_OP_RES_YIELD || rd_kafka\
                                            8186 * _yield_thread))) {
000054E6 A72E 0003               00000003   8187          CHI   2,3
000054EA 4780 C3C6               000054FE   8188          BE    @L787
000054EE E3F0 C180 0016          000052B8   8189          LLGF  15,@lit_1464_288 ; rd_kafka_yield_thread
000054F4 E3FF 7000 0012          00000000   8190          LT    15,0(15,7)  ; rd_kafka_yield_thread
000054FA 4780 C3F6               0000552E   8191          BZ    @L786
000054FE                                    8192 @L787    DS    0H
                                            8193 * ***
                                            8194 * ***
                                            8195 * ***
                                            8196 * ***
                                            8197 * ***                           if (!(((&localq.rkq_q)->tqh_first) == \
                                            8198 * (((void *)0))))
000054FE E3F0 D118 0002          00000118   8199          LTG   15,280(0,13) ; offset of rkq_q in rd_kafka_q_s
00005504 4780 C404               0000553C   8200          BE    @L778
                                            8201 * ***                                   rd_kafka_q_prepend0(rkq,&local\
                                            8202 * q,1 );
00005508 E340 D168 0024          00000168   8203          STG   4,360(0,13)
0000550E 41F0 D0B8               000000B8   8204          LA    15,184(0,13)
00005512 E3F0 D170 0024          00000170   8205          STG   15,368(0,13)
00005518 E548 D178 0001          00000178   8206          MVGHI 376(13),1
0000551E 4110 D168               00000168   8207          LA    1,360(0,13)
00005522 E3F0 C1A8 0004          000052E0   8208          LG    15,@lit_1464_295 ; rd_kafka_q_prepend0
00005528                                    8209 @@gen_label520 DS    0H
00005528 05EF                               8210          BALR  14,15
0000552A                                    8211 @@gen_label521 DS    0H
0000552A                                    8212 @L788    DS    0H
                                            8213 * ***                           break;
0000552A 47F0 C404               0000553C   8214          B     @L778
                                            8215 * ***                   }
0000552E                                    8216 @L786    DS    0H
                                            8217 * ***      }
0000552E                                    8218 @L781    DS    0H
0000552E E320 D118 0004          00000118   8219          LG    2,280(0,13) ; offset of rkq_q in rd_kafka_q_s
00005534 B902 00F2                          8220          LTGR  15,2
00005538 4770 C2FE               00005436   8221          BNZ   @L780
0000553C                                    8222 @L778    DS    0H
                                                                                                                           Page  166 
  Active Usings: @REGION_1464_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8223 * ***
                                            8224 * ***      rd_kafka_q_destroy_owner(&localq);
0000553C 41F0 D0B8               000000B8   8225          LA    15,184(0,13)
00005540 E3F0 D168 0024          00000168   8226          STG   15,360(0,13)
00005546 4110 D168               00000168   8227          LA    1,360(0,13)
0000554A E3F0 C1B0 0004          000052E8   8228          LG    15,@lit_1464_296 ; rd_kafka_q_destroy_owner
00005550                                    8229 @@gen_label523 DS    0H
00005550 05EF                               8230          BALR  14,15
00005552                                    8231 @@gen_label524 DS    0H
                                            8232 * ***
                                            8233 * ***      return cnt;
00005552 B914 00F3                          8234          LGFR  15,3
                                            8235 * ***   }
00005556                                    8236 @ret_lab_1464 DS 0H
                                            8237 * * **** Start of Epilogue
                                            8238          DCCEPIL
00005556                                    8239+         ds 0h                                                          01-DCCEP
                                            8240+* Epilog
00005556 D707 D088 D088 00000088 00000088   8241+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000555C E3D0 D080 0004          00000080   8242+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005562 E3C0 D090 0004          00000090   8243+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005568 E3B0 C018 0004          00000018   8244+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000556E E3C0 B010 0021          00000010   8245+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005574 E3E0 D008 0004          00000008   8246+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000557A EB1C D020 0004          00000020   8247+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005580 078E                               8248+         bcr 8,14                if same dsab, just return              01-DCCEP
00005582 E3F0 D010 0024          00000010   8249+         stg 15,16(0,13)         save return code                       01-DCCEP
00005588 E300 D018 0024          00000018   8250+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000558E E3F0 D090 0004          00000090   8251+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005594 E3F0 F018 0004          00000018   8252+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000559A 47F0 F040               00000040   8253+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8254+* End of Epilog
                                            8255 * * **** End of Epilogue
                                            8256          DROP  12
                                            8257 *
                                            8258 *   DSECT for automatic variables in "rd_kafka_q_serve"
                                            8259 *      (FUNCTION #1464)
                                            8260 *
00000000                00000000 00000168   8261 @AUTO#rd_kafka_q_serve DSECT
00000000                                    8262          DS    XL168
000000A8                                    8263 rd_kafka_q_serve#res#5 DS 1F ; res
000000AC                000000AC 000000A8   8264          ORG   @AUTO#rd_kafka_q_serve+168
000000A8                                    8265 rd_kafka_q_serve#ret#3 DS 1F ; ret
000000AC                000000AC 000000A8   8266          ORG   @AUTO#rd_kafka_q_serve+168
000000A8                                    8267 rd_kafka_q_serve#timeout_tspec#0 DS 16XL1 ; timeout_tspec
000000B8                000000B8 000000A8   8268          ORG   @AUTO#rd_kafka_q_serve+168
000000A8                                    8269 rd_kafka_q_serve#cnt#0 DS 1F ; cnt
000000AC                000000AC 000000B8   8270          ORG   @AUTO#rd_kafka_q_serve+184
000000B8                                    8271 rd_kafka_q_serve#localq#0 DS 176XL1 ; localq
                                            8272 *
0000559E                00000000 00007BF0   8273 @CODE    CSECT
                                            8274 *
                                                                                                                           Page  167 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8275 *
                                            8276 *
                                            8277 * ....... start of rd_kafka_purge_outdated_messages
0000559E                                    8278 @LNAME1945 DS  0H
0000559E 00000020                           8279          DC    X'00000020'
000055A2 99846D9281869281                   8280          DC    C'rd_kafka_purge_outdated_messages'
000055C2 00                                 8281          DC    X'00'
                                            8282 rd_kafka_purge_outdated_messages DCCPRLG CINDEX=1945,BASER=12,FRAME=192*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1945
                                            8283          macro
                                            8284          dccextrn &m
                                            8285          gblc    &$dccext(1000)
                                            8286          gbla    &$dccexti
                                            8287          lcla    &i
                                            8288 &$dccext(&$dccexti+1) setc    '&m'
                                            8289 &i       seta    1
                                            8290 .loop    aif    (&i gt &$dccexti).around
                                            8291          aif    ('&$dccext(&i)' eq '&m').getout
                                            8292 &i       seta    &i+1
                                            8293          ago     .loop
                                            8294 .around  anop
                                            8295 &$dccexti seta &$dccexti+1
                                            8296          extrn  &m
                                            8297 .getout  anop
                                            8298          mend
000055C8                                    8299+$eye0152    ds    0d                                                    02-DCCCA
000055C8 C4C3C3                             8300+         dc cl3'DCC'                                                    02-DCCCA
000055CB 01                                 8301+         dc xl1'01' format one                                          02-DCCCA
000055CC 00000000                           8302+         dc a(0)                                                        02-DCCCA
000055D0 000000000000563A                   8303+         dc ad(@PER_1945)                                               02-DCCCA
000055D8 00000000000000C0                   8304+         dc ad(192)                                                     02-DCCCA
000055E0 0000000000000000                   8305+         dc ad(0)                                                       02-DCCCA
000055E8 0000000000001000                   8306+         dc ad(4096)                                                    02-DCCCA
000055F0 20                                 8307+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000055F1 03                                 8308+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000055F2 03                                 8309+         dc al1(3)                                                      02-DCCCA
000055F3 08                                 8310+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000055F4 00                                 8311+         dc bl.8'00000000'                                              02-DCCCA
000055F5 000000                             8312+         dc al3(0)                                                      02-DCCCA
000055F8 000000000000559E                   8313+         dc ad(@LNAME1945)                                              02-DCCCA
00005600                                    8314+         ds 0d                                                          02-DCCCA
00005600 00000000000055C8                   8315+         dc ad($eye0152)                                                02-DCCCA
00005608 0000000000000000                   8316+         dc ad(0)                                                       02-DCCCA
00005610                                    8317+         ds    0d                                                       01-DCCPR
00005610                                    8318+rd_kafka_purge_outdated_messages ds 0d                                  01-DCCPR
00005610                                    8319+@REGION_1945_1 ds 0h                                                    01-DCCPR
00005610 EBEC D008 0024          00000008   8320+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005616 E3E0 D088 0004          00000088   8321+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000561C E3C0 D090 0004          00000090   8322+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005622 B904 002E                          8323+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005626 E3B0 C018 0004          00000018   8324+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000562C A7EB 00C0               000000C0   8325+         aghi  14,192              increase by frame size               01-DCCPR
                                                                                                                           Page  168 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005630 E3E0 C020 0021          00000020   8326+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005636 4720 B020               00000020   8327+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000563A                                    8328+@PER_1945 ds   0h                                                       01-DCCPR
0000563A EBDE 2080 0024          00000080   8329+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005640 E3C0 2090 0024          00000090   8330+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005646 B904 00D2                          8331+         lgr   13,2                set real frame pointer               01-DCCPR
0000564A B904 00CF                          8332+         lgr   12,15               set base reg                         01-DCCPR
                        00005610            8333+         using @REGION_1945_1,12                                        01-DCCPR
0000564E B904 0061                          8334          LGR   6,1         ; ptr to parm area
                                            8335 * ******* End of Prologue
                                            8336 * *
                                            8337 * ***           size_t valid_count = 0;
00005652 E340 6008 0004          00000008   8338          LG    4,8(0,6)    ; rkmessages
00005658 A729 0000               00000000   8339          LGHI  2,0         ; 0
                                            8340 * ***           size_t i;
                                            8341 * ***
                                            8342 * ***           for (i = 0; i < cnt; i++) {
0000565C B904 0032                          8343          LGR   3,2         ; i
00005660 47F0 C0F0               00005700   8344          B     @L790
00005668                                    8345          DS    0D
00005668 000000C0                           8346 @FRAMESIZE_1945 DC F'192'
0000566C 00000000
00005670 0000000000003398                   8347 @lit_1945_300 DC AD(rd_kafka_op_version_outdated)
00005678 0000000000000000                   8348 @lit_1945_301 DC AD(rd_kafka_op_destroy)
00005680                                    8349 @L789    DS    0H
                                            8350 * ***                   rd_kafka_op_t *rko;
                                            8351 * ***                   rko = rkmessages[i]->_private;
00005680 EBF3 0003 000D          00000003   8352          SLLG  15,3,3(0)   ; *0x8
00005686 E3FF 4000 0004          00000000   8353          LG    15,0(15,4)
0000568C E350 F040 0004          00000040   8354          LG    5,64(0,15)  ; offset of _private in rd_kafka_message_s
                                            8355 * ***                   if (rd_kafka_op_version_outdated(rko, version)\
                                            8356 * ) {
00005692 E350 D0B0 0024          000000B0   8357          STG   5,176(0,13)
00005698 E3F0 6004 0014          00000004   8358          LGF   15,4(0,6)   ; version
0000569E E3F0 D0B8 0024          000000B8   8359          STG   15,184(0,13)
000056A4 4110 D0B0               000000B0   8360          LA    1,176(0,13)
000056A8 E3F0 C060 0004          00005670   8361          LG    15,@lit_1945_300 ; rd_kafka_op_version_outdated
000056AE                                    8362 @@gen_label525 DS    0H
000056AE 05EF                               8363          BALR  14,15
000056B0                                    8364 @@gen_label526 DS    0H
000056B0 12FF                               8365          LTR   15,15
000056B2 4780 C0BC               000056CC   8366          BZ    @L793
                                            8367 * ***
                                            8368 * ***                           rd_kafka_op_destroy(rko);
000056B6 E350 D0B0 0024          000000B0   8369          STG   5,176(0,13)
000056BC 4110 D0B0               000000B0   8370          LA    1,176(0,13)
000056C0 E3F0 C068 0004          00005678   8371          LG    15,@lit_1945_301 ; rd_kafka_op_destroy
000056C6                                    8372 @@gen_label528 DS    0H
000056C6 05EF                               8373          BALR  14,15
000056C8                                    8374 @@gen_label529 DS    0H
                                            8375 * ***                   } else if (i > valid_count) {
000056C8 47F0 C0EC               000056FC   8376          B     @L794
                                                                                                                           Page  169 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000056CC                                    8377 @L793    DS    0H
000056CC B921 0032                          8378          CLGR  3,2
000056D0 47D0 C0E8               000056F8   8379          BNH   @L795
                                            8380 * ***                           rkmessages[valid_count++] = rkmessages\
                                            8381 * [i];
000056D4 B904 00F2                          8382          LGR   15,2
000056D8 A72B 0001               00000001   8383          AGHI  2,1
000056DC EBFF 0003 000D          00000003   8384          SLLG  15,15,3(0)  ; *0x8
000056E2 EB13 0003 000D          00000003   8385          SLLG  1,3,3(0)    ; *0x8
000056E8 E311 4000 0004          00000000   8386          LG    1,0(1,4)
000056EE E31F 4000 0024          00000000   8387          STG   1,0(15,4)
                                            8388 * ***                   } else {
000056F4 47F0 C0EC               000056FC   8389          B     @L794
000056F8                                    8390 @L795    DS    0H
                                            8391 * ***                           valid_count++;
000056F8 A72B 0001               00000001   8392          AGHI  2,1
                                            8393 * ***                   }
000056FC                                    8394 @L796    DS    0H
                                            8395 * ***           }
000056FC                                    8396 @L794    DS    0H
000056FC A73B 0001               00000001   8397          AGHI  3,1
00005700                                    8398 @L790    DS    0H
00005700 E330 6010 0021          00000010   8399          CLG   3,16(0,6)
00005706 4740 C070               00005680   8400          BL    @L789
                                            8401 * ***           return valid_count;
0000570A B904 00F2                          8402          LGR   15,2
                                            8403 * ***   }
                                            8404 * * **** Start of Epilogue
                                            8405          DCCEPIL
0000570E                                    8406+         ds 0h                                                          01-DCCEP
                                            8407+* Epilog
0000570E D707 D088 D088 00000088 00000088   8408+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005714 E3D0 D080 0004          00000080   8409+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000571A E3C0 D090 0004          00000090   8410+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005720 E3B0 C018 0004          00000018   8411+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005726 E3C0 B010 0021          00000010   8412+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000572C E3E0 D008 0004          00000008   8413+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005732 EB1C D020 0004          00000020   8414+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005738 078E                               8415+         bcr 8,14                if same dsab, just return              01-DCCEP
0000573A E3F0 D010 0024          00000010   8416+         stg 15,16(0,13)         save return code                       01-DCCEP
00005740 E300 D018 0024          00000018   8417+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005746 E3F0 D090 0004          00000090   8418+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000574C E3F0 F018 0004          00000018   8419+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005752 47F0 F040               00000040   8420+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8421+* End of Epilog
                                            8422 * * **** End of Epilogue
                                            8423          DROP  12
                                            8424 *
                                            8425 *   DSECT for automatic variables in "rd_kafka_purge_outdated_messages"
                                            8426 *      (FUNCTION #1945)
                                            8427 *
00000000                00000000 000000B0   8428 @AUTO#rd_kafka_purge_outdated_messages DSECT
                                                                                                                           Page  170 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                                    8429          DS    XL168
000000A8                                    8430 rd_kafka_purge_outdated_messages#i#0 DS 8XL1 ; i
000000B0                000000B0 000000A8   8431          ORG   @AUTO#rd_kafka_purge_outdated_messages+168
000000A8                                    8432 rd_kafka_purge_outdated_messages#valid_count#0 DS 8XL1 ; valid_count
                                            8433 *
00005756                00000000 00007BF0   8434 @CODE    CSECT
                                            8435 *
                                            8436 *
                                            8437 *
                                            8438 * ....... start of rd_kafka_q_serve_rkmessages
                                            8439 rd_kafka_q_serve_rkmessages ALIAS X'99846D92818692816D986DA28599A5856D9*
                                                                9929485A2A2818785A2'
00005756                                    8440 @LNAME1466 DS  0H
00005756 0000001B                           8441          DC    X'0000001B'
0000575A 99846D9281869281                   8442          DC    C'rd_kafka_q_serve_rkmessages'
00005775 00                                 8443          DC    X'00'
                                            8444 rd_kafka_q_serve_rkmessages DCCPRLG CINDEX=1466,BASER=12,FRAME=240,ENTR*
                                                                Y=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1466
                                            8445          macro
                                            8446          dccextrn &m
                                            8447          gblc    &$dccext(1000)
                                            8448          gbla    &$dccexti
                                            8449          lcla    &i
                                            8450 &$dccext(&$dccexti+1) setc    '&m'
                                            8451 &i       seta    1
                                            8452 .loop    aif    (&i gt &$dccexti).around
                                            8453          aif    ('&$dccext(&i)' eq '&m').getout
                                            8454 &i       seta    &i+1
                                            8455          ago     .loop
                                            8456 .around  anop
                                            8457 &$dccexti seta &$dccexti+1
                                            8458          extrn  &m
                                            8459 .getout  anop
                                            8460          mend
00005778                                    8461+$eye0155    ds    0d                                                    02-DCCCA
00005778 C4C3C3                             8462+         dc cl3'DCC'                                                    02-DCCCA
0000577B 01                                 8463+         dc xl1'01' format one                                          02-DCCCA
0000577C 00000000                           8464+         dc a(0)                                                        02-DCCCA
00005780 00000000000057EA                   8465+         dc ad(@PER_1466)                                               02-DCCCA
00005788 00000000000000F0                   8466+         dc ad(240)                                                     02-DCCCA
00005790 0000000000000000                   8467+         dc ad(0)                                                       02-DCCCA
00005798 0000000000001000                   8468+         dc ad(4096)                                                    02-DCCCA
000057A0 20                                 8469+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000057A1 03                                 8470+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000057A2 03                                 8471+         dc al1(3)                                                      02-DCCCA
000057A3 08                                 8472+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000057A4 00                                 8473+         dc bl.8'00000000'                                              02-DCCCA
000057A5 000000                             8474+         dc al3(0)                                                      02-DCCCA
000057A8 0000000000005756                   8475+         dc ad(@LNAME1466)                                              02-DCCCA
000057B0                                    8476+         ds 0d                                                          02-DCCCA
000057B0 0000000000005778                   8477+         dc ad($eye0155)                                                02-DCCCA
000057B8 0000000000000000                   8478+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  171 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000057C0                                    8479+         ds    0d                                                       01-DCCPR
                                            8480+         entry rd_kafka_q_serve_rkmessages                              01-DCCPR
000057C0                                    8481+rd_kafka_q_serve_rkmessages ds 0d                                       01-DCCPR
000057C0                                    8482+@REGION_1466_1 ds 0h                                                    01-DCCPR
000057C0 EBEC D008 0024          00000008   8483+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000057C6 E3E0 D088 0004          00000088   8484+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000057CC E3C0 D090 0004          00000090   8485+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000057D2 B904 002E                          8486+         lgr   2,14                copy addr of our savearea            01-DCCPR
000057D6 E3B0 C018 0004          00000018   8487+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000057DC A7EB 00F0               000000F0   8488+         aghi  14,240              increase by frame size               01-DCCPR
000057E0 E3E0 C020 0021          00000020   8489+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000057E6 4720 B020               00000020   8490+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000057EA                                    8491+@PER_1466 ds   0h                                                       01-DCCPR
000057EA EBDE 2080 0024          00000080   8492+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000057F0 E3C0 2090 0024          00000090   8493+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000057F6 B904 00D2                          8494+         lgr   13,2                set real frame pointer               01-DCCPR
000057FA B904 00CF                          8495+         lgr   12,15               set base reg                         01-DCCPR
                        000057C0            8496+         using @REGION_1466_1,12                                        01-DCCPR
                                            8497          DCCPRV REG=8      ; Get PRV from DVT
000057FE E380 B008 0004          00000008   8498+         LG 8,8(0,11)                                                   01-DCCPR
00005804 B904 0091                          8499          LGR   9,1         ; ptr to parm area
                                            8500 * ******* End of Prologue
                                            8501 * *
                                            8502 * ***      unsigned int cnt = 0;
00005808 5830 900C               0000000C   8503          L     3,12(0,9)   ; timeout_ms
0000580C E340 9010 0004          00000010   8504          LG    4,16(0,9)   ; rkmessages
00005812 E370 9000 0004          00000000   8505          LG    7,0(0,9)    ; rkq
00005818 A728 0000               00000000   8506          LHI   2,0         ; 0
                                            8507 * ***           struct { struct rd_kafka_op_s *tqh_first; struct rd_ka\
                                            8508 * fka_op_s * *tqh_last; } tmpq = { (((void *)0)), &(tmpq).tqh_first };
0000581C 41F0 D0B8               000000B8   8509          LA    15,184(0,13)
00005820 E3F0 D0C0 0024          000000C0   8510          STG   15,192(0,13)
                                            8511 * setting 8 bytes to 0x00
00005826 D707 D0B8 D0B8 000000B8 000000B8   8512          XC    184(8,13),184(13)
                                            8513 * ***           rd_kafka_op_t *rko, *next;
                                            8514 * ***           rd_kafka_t *rk = rkq->rkq_rk;
0000582C E350 7088 0004          00000088   8515          LG    5,136(0,7)  ; offset of rkq_rk in rd_kafka_q_s
                                            8516 * ***           rd_kafka_q_t *fwdq;
                                            8517 * ***           struct timespec timeout_tspec;
                                            8518 * ***
                                            8519 * ***      mtx_lock(&rkq->rkq_lock);
00005832 E370 D0C8 0024          000000C8   8520          STG   7,200(0,13)
00005838 4110 D0C8               000000C8   8521          LA    1,200(0,13)
0000583C E3F0 C118 0004          000058D8   8522          LG    15,@lit_1466_304 ; mtx_lock
00005842                                    8523 @@gen_label532 DS    0H
00005842 05EF                               8524          BALR  14,15
00005844                                    8525 @@gen_label533 DS    0H
                                            8526 * ***           if ((fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
00005844 E370 D0C8 0024          000000C8   8527          STG   7,200(0,13)
0000584A D707 D0D0 D0D0 000000D0 000000D0   8528          XC    208(8,13),208(13)
00005850 4110 D0C8               000000C8   8529          LA    1,200(0,13)
00005854 E3F0 C120 0004          000058E0   8530          LG    15,@lit_1466_305 ; rd_kafka_q_fwd_get
                                                                                                                           Page  172 
  Active Usings: @REGION_1466_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000585A                                    8531 @@gen_label534 DS    0H
0000585A 05EF                               8532          BALR  14,15
0000585C                                    8533 @@gen_label535 DS    0H
0000585C B904 006F                          8534          LGR   6,15
00005860 B902 00F6                          8535          LTGR  15,6
00005864 4780 C1B0               00005970   8536          BZ    @L797
                                            8537 * ***
                                            8538 * ***
                                            8539 * ***                   mtx_unlock(&rkq->rkq_lock);
00005868 E370 D0C8 0024          000000C8   8540          STG   7,200(0,13)
0000586E 4110 D0C8               000000C8   8541          LA    1,200(0,13)
00005872 E3F0 C128 0004          000058E8   8542          LG    15,@lit_1466_306 ; mtx_unlock
00005878                                    8543 @@gen_label537 DS    0H
00005878 05EF                               8544          BALR  14,15
0000587A                                    8545 @@gen_label538 DS    0H
                                            8546 * ***         cnt = rd_kafka_q_serve_rkmessages(fwdq, timeout_ms,
                                            8547 * ***                       rkmessages, rkmessages_size);
0000587A E360 D0C8 0024          000000C8   8548          STG   6,200(0,13)
00005880 B914 00F3                          8549          LGFR  15,3
00005884 E3F0 D0D0 0024          000000D0   8550          STG   15,208(0,13)
0000588A E340 D0D8 0024          000000D8   8551          STG   4,216(0,13)
00005890 E3F0 9018 0004          00000018   8552          LG    15,24(0,9)  ; rkmessages_size
00005896 E3F0 D0E0 0024          000000E0   8553          STG   15,224(0,13)
0000589C 4110 D0C8               000000C8   8554          LA    1,200(0,13)
000058A0 E3F0 C130 0004          000058F0   8555          LG    15,@lit_1466_307 ; rd_kafka_q_serve_rkmessages
000058A6                                    8556 @@gen_label539 DS    0H
000058A6 05EF                               8557          BALR  14,15
000058A8                                    8558 @@gen_label540 DS    0H
000058A8 182F                               8559          LR    2,15        ; cnt
                                            8560 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
000058AA E360 D0C8 0024          000000C8   8561          STG   6,200(0,13)
000058B0 D707 D0D0 D0D0 000000D0 000000D0   8562          XC    208(8,13),208(13)
000058B6 4110 D0C8               000000C8   8563          LA    1,200(0,13)
000058BA E3F0 C138 0004          000058F8   8564          LG    15,@lit_1466_308 ; rd_kafka_q_destroy0
000058C0                                    8565 @@gen_label541 DS    0H
000058C0 05EF                               8566          BALR  14,15
000058C2                                    8567 @@gen_label542 DS    0H
                                            8568 * ***         return cnt;
000058C2 B914 00F2                          8569          LGFR  15,2
000058C6 47F0 C498               00005C58   8570          B     @ret_lab_1466
000058D0                                    8571          DS    0D
000058D0 000000F0                           8572 @FRAMESIZE_1466 DC F'240'
000058D4 00000000
000058D8 0000000000000000                   8573 @lit_1466_304 DC AD(mtx_lock)
000058E0 0000000000001510                   8574 @lit_1466_305 DC AD(rd_kafka_q_fwd_get)
000058E8 0000000000000000                   8575 @lit_1466_306 DC AD(mtx_unlock)
000058F0 00000000000057C0                   8576 @lit_1466_307 DC AD(rd_kafka_q_serve_rkmessages)
000058F8 0000000000001140                   8577 @lit_1466_308 DC AD(rd_kafka_q_destroy0)
00005900 0000000000003520                   8578 @lit_1466_310 DC AD(rd_kafka_app_poll_blocking)
00005908 0000000000000CF8                   8579 @lit_1466_311 DC AD(rd_timeout_init_timespec)
00005910 00000000                           8580 @lit_1466_312 DC Q(rd_kafka_yield_thread)
00005914 00000000
                                                                                                                           Page  173 
  Active Usings: @REGION_1466_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005918 0000000000003898                   8581 @lit_1466_314 DC AD(rd_kafka_q_check_yield)
00005920 0000000000000000                   8582 @lit_1466_315 DC AD(cnd_timedwait_abs)
00005928 0000000000002248                   8583 @lit_1466_316 DC AD(rd_kafka_q_mark_served)
00005930 0000000000002168                   8584 @lit_1466_318 DC AD(rd_kafka_q_deq0)
00005938 0000000000003398                   8585 @lit_1466_320 DC AD(rd_kafka_op_version_outdated)
00005940 0000000000005610                   8586 @lit_1466_322 DC AD(rd_kafka_purge_outdated_messages)
00005948 0000000000000000                   8587 @lit_1466_323 DC AD(rd_kafka_op_destroy)
00005950 0000000000000000                   8588 @lit_1466_324 DC AD(rd_kafka_poll_cb)
00005958 0000000000000000                   8589 @lit_1466_326 DC AD(rd_kafka_op_offset_store)
00005960 0000000000000000                   8590 @lit_1466_328 DC AD(rd_kafka_message_get)
00005968 0000000000003650                   8591 @lit_1466_330 DC AD(rd_kafka_app_polled)
                                            8592 * ***      }
00005970                                    8593 @L797    DS    0H
                                            8594 * ***           mtx_unlock(&rkq->rkq_lock);
00005970 E370 D0C8 0024          000000C8   8595          STG   7,200(0,13)
00005976 4110 D0C8               000000C8   8596          LA    1,200(0,13)
0000597A E3F0 C128 0004          000058E8   8597          LG    15,@lit_1466_306 ; mtx_unlock
00005980                                    8598 @@gen_label543 DS    0H
00005980 05EF                               8599          BALR  14,15
00005982                                    8600 @@gen_label544 DS    0H
                                            8601 * ***
                                            8602 * ***           if (timeout_ms)
00005982 1233                               8603          LTR   3,3
00005984 4780 C1DA               0000599A   8604          BZ    @L798
                                            8605 * ***                   rd_kafka_app_poll_blocking(rk);
00005988 E350 D0C8 0024          000000C8   8606          STG   5,200(0,13)
0000598E 4110 D0C8               000000C8   8607          LA    1,200(0,13)
00005992 E3F0 C140 0004          00005900   8608          LG    15,@lit_1466_310 ; rd_kafka_app_poll_blocking
00005998                                    8609 @@gen_label546 DS    0H
00005998 05EF                               8610          BALR  14,15
0000599A                                    8611 @@gen_label547 DS    0H
0000599A                                    8612 @L798    DS    0H
                                            8613 * ***
                                            8614 * ***           rd_timeout_init_timespec(&timeout_tspec, timeout_ms);
0000599A 41F0 D0A8               000000A8   8615          LA    15,168(0,13)
0000599E E3F0 D0C8 0024          000000C8   8616          STG   15,200(0,13)
000059A4 B914 00F3                          8617          LGFR  15,3
000059A8 E3F0 D0D0 0024          000000D0   8618          STG   15,208(0,13)
000059AE 4110 D0C8               000000C8   8619          LA    1,200(0,13)
000059B2 E3F0 C148 0004          00005908   8620          LG    15,@lit_1466_311 ; rd_timeout_init_timespec
000059B8                                    8621 @@gen_label548 DS    0H
000059B8 05EF                               8622          BALR  14,15
000059BA                                    8623 @@gen_label549 DS    0H
                                            8624 * ***
                                            8625 * ***           rd_kafka_yield_thread = 0;
000059BA E3F0 C150 0016          00005910   8626          LLGF  15,@lit_1466_312 ; rd_kafka_yield_thread
000059C0 41FF 8000               00000000   8627          LA    15,0(15,8)
000059C4 E54C F000 0000          00000000   8628          MVHI  0(15),0     ; rd_kafka_yield_thread
                                            8629 * ***      while (cnt < rkmessages_size) {
000059CA 47F0 C446               00005C06   8630          B     @L802
000059CE                                    8631 @L801    DS    0H
                                            8632 * ***                   rd_kafka_op_res_t res;
                                                                                                                           Page  174 
  Active Usings: @REGION_1466_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8633 * ***
                                            8634 * ***                   mtx_lock(&rkq->rkq_lock);
000059CE E370 D0C8 0024          000000C8   8635          STG   7,200(0,13)
000059D4 4110 D0C8               000000C8   8636          LA    1,200(0,13)
000059D8 E3F0 C118 0004          000058D8   8637          LG    15,@lit_1466_304 ; mtx_lock
000059DE                                    8638 @@gen_label550 DS    0H
000059DE 05EF                               8639          BALR  14,15
000059E0                                    8640 @@gen_label551 DS    0H
                                            8641 * ***
                                            8642 * ***                   while (!(rko = ((&rkq->rkq_q)->tqh_first)) &&
                                            8643 * ***                           ;
000059E0                                    8644 @L806    DS    0H
000059E0 E330 7060 0004          00000060   8645          LG    3,96(0,7)   ; offset of rkq_q in rd_kafka_q_s
000059E6 B902 00F3                          8646          LTGR  15,3
000059EA 4770 C278               00005A38   8647          BNZ   @L807
                                            8648 * ***                          !rd_kafka_q_check_yield(rkq) &&
000059EE E370 D0C8 0024          000000C8   8649          STG   7,200(0,13)
000059F4 4110 D0C8               000000C8   8650          LA    1,200(0,13)
000059F8 E3F0 C158 0004          00005918   8651          LG    15,@lit_1466_314 ; rd_kafka_q_check_yield
000059FE                                    8652 @@gen_label553 DS    0H
000059FE 05EF                               8653          BALR  14,15
00005A00                                    8654 @@gen_label554 DS    0H
00005A00 C0FB 0000 00FF                     8655          NILF  15,X'000000FF'
00005A06 12FF                               8656          LTR   15,15
00005A08 4770 C278               00005A38   8657          BNZ   @L807
                                            8658 * ***                          cnd_timedwait_abs(&rkq->rkq_cond, &rkq-\
                                            8659 * >rkq_lock,
                                            8660 * ***                                            &timeout_tspec) == 0)
00005A0C 41F0 7028               00000028   8661          LA    15,40(0,7)
00005A10 E3F0 D0C8 0024          000000C8   8662          STG   15,200(0,13)
00005A16 E370 D0D0 0024          000000D0   8663          STG   7,208(0,13)
00005A1C 41F0 D0A8               000000A8   8664          LA    15,168(0,13)
00005A20 E3F0 D0D8 0024          000000D8   8665          STG   15,216(0,13)
00005A26 4110 D0C8               000000C8   8666          LA    1,200(0,13)
00005A2A E3F0 C160 0004          00005920   8667          LG    15,@lit_1466_315 ; cnd_timedwait_abs
00005A30                                    8668 @@gen_label556 DS    0H
00005A30 05EF                               8669          BALR  14,15
00005A32                                    8670 @@gen_label557 DS    0H
00005A32 12FF                               8671          LTR   15,15
00005A34 4780 C220               000059E0   8672          BE    @L806
00005A38                                    8673 @L807    DS    0H
                                            8674 * ***
                                            8675 * ***                   rd_kafka_q_mark_served(rkq);
00005A38 E370 D0C8 0024          000000C8   8676          STG   7,200(0,13)
00005A3E 4110 D0C8               000000C8   8677          LA    1,200(0,13)
00005A42 E3F0 C168 0004          00005928   8678          LG    15,@lit_1466_316 ; rd_kafka_q_mark_served
00005A48                                    8679 @@gen_label559 DS    0H
00005A48 05EF                               8680          BALR  14,15
00005A4A                                    8681 @@gen_label560 DS    0H
                                            8682 * ***
                                            8683 * ***         if (!rko) {
00005A4A B902 00F3                          8684          LTGR  15,3
                                                                                                                           Page  175 
  Active Usings: @REGION_1466_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005A4E 4770 C2A8               00005A68   8685          BNZ   @L808
                                            8686 * ***                           mtx_unlock(&rkq->rkq_lock);
00005A52 E370 D0C8 0024          000000C8   8687          STG   7,200(0,13)
00005A58 4110 D0C8               000000C8   8688          LA    1,200(0,13)
00005A5C E3F0 C128 0004          000058E8   8689          LG    15,@lit_1466_306 ; mtx_unlock
00005A62                                    8690 @@gen_label562 DS    0H
00005A62 05EF                               8691          BALR  14,15
00005A64                                    8692 @@gen_label563 DS    0H
                                            8693 * ***            break;
00005A64 47F0 C454               00005C14   8694          B     @L799
                                            8695 * ***                   }
00005A68                                    8696 @L808    DS    0H
                                            8697 * ***
                                            8698 * ***         rd_kafka_q_deq0(rkq, rko);
00005A68 E370 D0C8 0024          000000C8   8699          STG   7,200(0,13)
00005A6E E330 D0D0 0024          000000D0   8700          STG   3,208(0,13)
00005A74 4110 D0C8               000000C8   8701          LA    1,200(0,13)
00005A78 E3F0 C170 0004          00005930   8702          LG    15,@lit_1466_318 ; rd_kafka_q_deq0
00005A7E                                    8703 @@gen_label564 DS    0H
00005A7E 05EF                               8704          BALR  14,15
00005A80                                    8705 @@gen_label565 DS    0H
                                            8706 * ***
                                            8707 * ***                   mtx_unlock(&rkq->rkq_lock);
00005A80 E370 D0C8 0024          000000C8   8708          STG   7,200(0,13)
00005A86 4110 D0C8               000000C8   8709          LA    1,200(0,13)
00005A8A E3F0 C128 0004          000058E8   8710          LG    15,@lit_1466_306 ; mtx_unlock
00005A90                                    8711 @@gen_label566 DS    0H
00005A90 05EF                               8712          BALR  14,15
00005A92                                    8713 @@gen_label567 DS    0H
                                            8714 * ***
                                            8715 * ***         if (rd_kafka_op_version_outdated(rko, 0)) {
00005A92 E330 D0C8 0024          000000C8   8716          STG   3,200(0,13)
00005A98 D707 D0D0 D0D0 000000D0 000000D0   8717          XC    208(8,13),208(13)
00005A9E 4110 D0C8               000000C8   8718          LA    1,200(0,13)
00005AA2 E3F0 C178 0004          00005938   8719          LG    15,@lit_1466_320 ; rd_kafka_op_version_outdated
00005AA8                                    8720 @@gen_label568 DS    0H
00005AA8 05EF                               8721          BALR  14,15
00005AAA                                    8722 @@gen_label569 DS    0H
00005AAA 12FF                               8723          LTR   15,15
00005AAC 4780 C31C               00005ADC   8724          BZ    @L809
                                            8725 * ***
                                            8726 * ***                           do {  (rko)->rko_link .tqe_next = (((v\
                                            8727 * oid *)0)); (rko)->rko_link .tqe_prev = (&tmpq)->tqh_last; *(&tmpq)->\
                                            8728 * tqh_last = (rko); (&tmpq)->tqh_last = &(rko)->rko_link .tqe_next; } \
                                            8729 * while ( 0);
00005AB0                                    8730 @L810    DS    0H
00005AB0 A7F9 0000               00000000   8731          LGHI  15,0        ; 0
00005AB4 E3F0 3000 0024          00000000   8732          STG   15,0(0,3)   ; rko
00005ABA E3F0 D0C0 0004          000000C0   8733          LG    15,192(0,13) ; offset of tqh_last in 0000157
00005AC0 E3F0 3008 0024          00000008   8734          STG   15,8(0,3)   ; offset of tqe_prev in 0000055
00005AC6 E3F0 D0C0 0004          000000C0   8735          LG    15,192(0,13) ; offset of tqh_last in 0000157
00005ACC E330 F000 0024          00000000   8736          STG   3,0(0,15)
                                                                                                                           Page  176 
  Active Usings: @REGION_1466_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005AD2 E330 D0C0 0024          000000C0   8737          STG   3,192(0,13) ; offset of tqh_last in 0000157
                                            8738 * ***                           continue;
00005AD8 47F0 C446               00005C06   8739          B     @L802
                                            8740 * ***                   }
00005ADC                                    8741 @L809    DS    0H
                                            8742 * ***
                                            8743 * ***                   if (((rko->rko_type == RD_KAFKA_OP_BARRIER))) \
                                            8744 * {
00005ADC E55C 3010 0032          00000010   8745          CHSI  16(3),50
00005AE2 4770 C366               00005B26   8746          BNE   @L813
                                            8747 * ***                           cnt = (unsigned int)rd_kafka_purge_out\
                                            8748 * dated_messages(
                                            8749 * ***                                   rko->rko_version,
                                            8750 * ***                                   rkmessages,
                                            8751 * ***                                   cnt);
00005AE6 E3F0 301C 0014          0000001C   8752          LGF   15,28(0,3)
00005AEC E3F0 D0C8 0024          000000C8   8753          STG   15,200(0,13)
00005AF2 E340 D0D0 0024          000000D0   8754          STG   4,208(0,13)
00005AF8 B916 00F2                          8755          LLGFR 15,2
00005AFC E3F0 D0D8 0024          000000D8   8756          STG   15,216(0,13)
00005B02 4110 D0C8               000000C8   8757          LA    1,200(0,13)
00005B06 E3F0 C180 0004          00005940   8758          LG    15,@lit_1466_322 ; rd_kafka_purge_outdated_messages
00005B0C                                    8759 @@gen_label572 DS    0H
00005B0C 05EF                               8760          BALR  14,15
00005B0E                                    8761 @@gen_label573 DS    0H
00005B0E 182F                               8762          LR    2,15        ; cnt
                                            8763 * ***                           rd_kafka_op_destroy(rko);
00005B10 E330 D0C8 0024          000000C8   8764          STG   3,200(0,13)
00005B16 4110 D0C8               000000C8   8765          LA    1,200(0,13)
00005B1A E3F0 C188 0004          00005948   8766          LG    15,@lit_1466_323 ; rd_kafka_op_destroy
00005B20                                    8767 @@gen_label574 DS    0H
00005B20 05EF                               8768          BALR  14,15
00005B22                                    8769 @@gen_label575 DS    0H
                                            8770 * ***                           continue;
00005B22 47F0 C446               00005C06   8771          B     @L802
                                            8772 * ***                   }
00005B26                                    8773 @L813    DS    0H
                                            8774 * ***
                                            8775 * ***
                                            8776 * ***                   res = rd_kafka_poll_cb(rk, rkq, rko,
                                            8777 * ***                                          RD_KAFKA_Q_CB_RETURN, (\
                                            8778 * (void *)0));
00005B26 E350 D0C8 0024          000000C8   8779          STG   5,200(0,13)
00005B2C E370 D0D0 0024          000000D0   8780          STG   7,208(0,13)
00005B32 E330 D0D8 0024          000000D8   8781          STG   3,216(0,13)
00005B38 E548 D0E0 0002          000000E0   8782          MVGHI 224(13),2
00005B3E D707 D0E8 D0E8 000000E8 000000E8   8783          XC    232(8,13),232(13)
00005B44 4110 D0C8               000000C8   8784          LA    1,200(0,13)
00005B48 E3F0 C190 0004          00005950   8785          LG    15,@lit_1466_324 ; rd_kafka_poll_cb
00005B4E                                    8786 @@gen_label576 DS    0H
00005B4E 05EF                               8787          BALR  14,15
00005B50                                    8788 @@gen_label577 DS    0H
                                                                                                                           Page  177 
  Active Usings: @REGION_1466_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8789 * ***                   if (res == RD_KAFKA_OP_RES_KEEP ||
00005B50 A7FE 0002               00000002   8790          CHI   15,2
00005B54 4780 C446               00005C06   8791          BE    @L802
                                            8792 * ***                       res == RD_KAFKA_OP_RES_HANDLED) {
00005B58 A7FE 0001               00000001   8793          CHI   15,1
00005B5C 4770 C3A4               00005B64   8794          BNE   @L814
00005B60                                    8795 @L815    DS    0H
                                            8796 * ***
                                            8797 * ***                           continue;
00005B60 47F0 C446               00005C06   8798          B     @L802
                                            8799 * ***                   } else if (((res == RD_KAFKA_OP_RES_YIELD || r\
                                            8800 * d_kafka_yield_thread))) {
00005B64                                    8801 @L814    DS    0H
00005B64 A7FE 0003               00000003   8802          CHI   15,3
00005B68 4780 C454               00005C14   8803          BE    @L799
00005B6C E3F0 C150 0016          00005910   8804          LLGF  15,@lit_1466_312 ; rd_kafka_yield_thread
00005B72 E3FF 8000 0012          00000000   8805          LT    15,0(15,8)  ; rd_kafka_yield_thread
00005B78 4780 C3C0               00005B80   8806          BZ    @L819
00005B7C                                    8807 @L818    DS    0H
                                            8808 * ***
                                            8809 * ***
                                            8810 * ***                           break;
00005B7C 47F0 C454               00005C14   8811          B     @L799
                                            8812 * ***                   }
                                            8813 * ***                   do {} while (0);
00005B80                                    8814 @L819    DS    0H
                                            8815 * ***
                                            8816 * ***
                                            8817 * ***         if (!rko->rko_err && rko->rko_type == RD_KAFKA_OP_FETCH)\
                                            8818 *  {
00005B80 E3F0 3020 0012          00000020   8819          LT    15,32(0,3)  ; offset of rko_err in rd_kafka_op_s
00005B86 4770 C41E               00005BDE   8820          BNZ   @L822
00005B8A E55C 3010 0001          00000010   8821          CHSI  16(3),1
00005B90 4770 C41E               00005BDE   8822          BNE   @L822
                                            8823 * ***                           rd_kafka_op_offset_store(rk, rko);
00005B94 E350 D0C8 0024          000000C8   8824          STG   5,200(0,13)
00005B9A E330 D0D0 0024          000000D0   8825          STG   3,208(0,13)
00005BA0 4110 D0C8               000000C8   8826          LA    1,200(0,13)
00005BA4 E3F0 C198 0004          00005958   8827          LG    15,@lit_1466_326 ; rd_kafka_op_offset_store
00005BAA                                    8828 @@gen_label584 DS    0H
00005BAA 05EF                               8829          BALR  14,15
00005BAC                                    8830 @@gen_label585 DS    0H
                                            8831 * ***
                                            8832 * ***
                                            8833 * ***
                                            8834 * ***                           if (((((rko)->rko_type == RD_KAFKA_OP_\
                                            8835 * FETCH && !(rko)->rko_err && ((rko)->rko_u.fetch.rkm.rkm_flags & 0x80\
                                            8836 * 000))))) {
00005BAC E55C 3010 0001          00000010   8837          CHSI  16(3),1
00005BB2 4770 C41E               00005BDE   8838          BNE   @L822
00005BB6 E3F0 3020 0012          00000020   8839          LT    15,32(0,3)  ; offset of rko_err in rd_kafka_op_s
00005BBC 4770 C41E               00005BDE   8840          BNZ   @L822
                                                                                                                           Page  178 
  Active Usings: @REGION_1466_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005BC0 9108 30D1      000000D1 00000008   8841          TM    209(3),8
00005BC4 4780 C41E               00005BDE   8842          BZ    @L822
                                            8843 * ***                                   rd_kafka_op_destroy(rko);
00005BC8 E330 D0C8 0024          000000C8   8844          STG   3,200(0,13)
00005BCE 4110 D0C8               000000C8   8845          LA    1,200(0,13)
00005BD2 E3F0 C188 0004          00005948   8846          LG    15,@lit_1466_323 ; rd_kafka_op_destroy
00005BD8                                    8847 @@gen_label589 DS    0H
00005BD8 05EF                               8848          BALR  14,15
00005BDA                                    8849 @@gen_label590 DS    0H
                                            8850 * ***                                   continue;
00005BDA 47F0 C446               00005C06   8851          B     @L802
                                            8852 * ***                           }
                                            8853 * ***                   }
00005BDE                                    8854 @L822    DS    0H
                                            8855 * ***
                                            8856 * ***
                                            8857 * ***         rkmessages[cnt++] = rd_kafka_message_get(rko);
00005BDE 18F2                               8858          LR    15,2
00005BE0 A72A 0001               00000001   8859          AHI   2,1
00005BE4 B916 00FF                          8860          LLGFR 15,15
00005BE8 EB6F 0003 000D          00000003   8861          SLLG  6,15,3(0)   ; *0x8
00005BEE E330 D0C8 0024          000000C8   8862          STG   3,200(0,13)
00005BF4 4110 D0C8               000000C8   8863          LA    1,200(0,13)
00005BF8 E3F0 C1A0 0004          00005960   8864          LG    15,@lit_1466_328 ; rd_kafka_message_get
00005BFE                                    8865 @@gen_label591 DS    0H
00005BFE 05EF                               8866          BALR  14,15
00005C00                                    8867 @@gen_label592 DS    0H
00005C00 E3F6 4000 0024          00000000   8868          STG   15,0(6,4)
                                            8869 * ***      }
00005C06                                    8870 @L800    DS    0H
00005C06                                    8871 @L802    DS    0H
00005C06 B916 00F2                          8872          LLGFR 15,2
00005C0A E3F0 9018 0021          00000018   8873          CLG   15,24(0,9)
00005C10 4740 C20E               000059CE   8874          BL    @L801
00005C14                                    8875 @L799    DS    0H
                                            8876 * ***
                                            8877 * ***
                                            8878 * ***           next = ((&tmpq)->tqh_first);
00005C14 E330 D0B8 0004          000000B8   8879          LG    3,184(0,13)
                                            8880 * ***           while (next) {
00005C1A 47F0 C47A               00005C3A   8881          B     @L827
00005C1E                                    8882 @L826    DS    0H
                                            8883 * ***                   rko = next;
00005C1E B904 00F3                          8884          LGR   15,3
                                            8885 * ***                   next = ((next)->rko_link .tqe_next);
00005C22 E330 3000 0004          00000000   8886          LG    3,0(0,3)    ; next
                                            8887 * ***                   rd_kafka_op_destroy(rko);
00005C28 E3F0 D0C8 0024          000000C8   8888          STG   15,200(0,13)
00005C2E 4110 D0C8               000000C8   8889          LA    1,200(0,13)
00005C32 E3F0 C188 0004          00005948   8890          LG    15,@lit_1466_323 ; rd_kafka_op_destroy
00005C38                                    8891 @@gen_label594 DS    0H
00005C38 05EF                               8892          BALR  14,15
                                                                                                                           Page  179 
  Active Usings: @REGION_1466_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005C3A                                    8893 @@gen_label595 DS    0H
                                            8894 * ***           }
00005C3A                                    8895 @L827    DS    0H
00005C3A B902 00F3                          8896          LTGR  15,3
00005C3E 4770 C45E               00005C1E   8897          BNZ   @L826
                                            8898 * ***
                                            8899 * ***           rd_kafka_app_polled(rk);
00005C42 E350 D0C8 0024          000000C8   8900          STG   5,200(0,13)
00005C48 4110 D0C8               000000C8   8901          LA    1,200(0,13)
00005C4C E3F0 C1A8 0004          00005968   8902          LG    15,@lit_1466_330 ; rd_kafka_app_polled
00005C52                                    8903 @@gen_label597 DS    0H
00005C52 05EF                               8904          BALR  14,15
00005C54                                    8905 @@gen_label598 DS    0H
                                            8906 * ***
                                            8907 * ***      return cnt;
00005C54 B914 00F2                          8908          LGFR  15,2
                                            8909 * ***   }
00005C58                                    8910 @ret_lab_1466 DS 0H
                                            8911 * * **** Start of Epilogue
                                            8912          DCCEPIL
00005C58                                    8913+         ds 0h                                                          01-DCCEP
                                            8914+* Epilog
00005C58 D707 D088 D088 00000088 00000088   8915+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005C5E E3D0 D080 0004          00000080   8916+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005C64 E3C0 D090 0004          00000090   8917+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005C6A E3B0 C018 0004          00000018   8918+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005C70 E3C0 B010 0021          00000010   8919+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005C76 E3E0 D008 0004          00000008   8920+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005C7C EB1C D020 0004          00000020   8921+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005C82 078E                               8922+         bcr 8,14                if same dsab, just return              01-DCCEP
00005C84 E3F0 D010 0024          00000010   8923+         stg 15,16(0,13)         save return code                       01-DCCEP
00005C8A E300 D018 0024          00000018   8924+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005C90 E3F0 D090 0004          00000090   8925+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005C96 E3F0 F018 0004          00000018   8926+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005C9C 47F0 F040               00000040   8927+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8928+* End of Epilog
                                            8929 * * **** End of Epilogue
                                            8930          DROP  12
                                            8931 *
                                            8932 *   DSECT for automatic variables in "rd_kafka_q_serve_rkmessages"
                                            8933 *      (FUNCTION #1466)
                                            8934 *
00000000                00000000 000000C8   8935 @AUTO#rd_kafka_q_serve_rkmessages DSECT
00000000                                    8936          DS    XL168
000000A8                                    8937 rd_kafka_q_serve_rkmessages#res#2 DS 1F ; res
000000AC                000000AC 000000A8   8938          ORG   @AUTO#rd_kafka_q_serve_rkmessages+168
000000A8                                    8939 rd_kafka_q_serve_rkmessages#timeout_tspec#0 DS 16XL1 ; timeout_tspec
000000B8                000000B8 000000A8   8940          ORG   @AUTO#rd_kafka_q_serve_rkmessages+168
000000A8                                    8941 rd_kafka_q_serve_rkmessages#cnt#0 DS 1F ; cnt
000000AC                000000AC 000000B8   8942          ORG   @AUTO#rd_kafka_q_serve_rkmessages+184
000000B8                                    8943 rd_kafka_q_serve_rkmessages#tmpq#0 DS 16XL1 ; tmpq
                                            8944 *
                                                                                                                           Page  180 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005CA0                00000000 00007BF0   8945 @CODE    CSECT
                                            8946 *
                                            8947 *
                                            8948 *
                                            8949 * ....... start of rd_kafka_queue_destroy
                                            8950 rd_kafka_queue_destroy ALIAS X'99846D92818692816D98A485A4856D8485A2A399*
                                                                96A8'
00005CA0                                    8951 @LNAME577 DS   0H
00005CA0 00000016                           8952          DC    X'00000016'
00005CA4 99846D9281869281                   8953          DC    C'rd_kafka_queue_destroy'
00005CBA 00                                 8954          DC    X'00'
                                            8955 rd_kafka_queue_destroy DCCPRLG CINDEX=577,BASER=12,FRAME=184,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME577
                                            8956          macro
                                            8957          dccextrn &m
                                            8958          gblc    &$dccext(1000)
                                            8959          gbla    &$dccexti
                                            8960          lcla    &i
                                            8961 &$dccext(&$dccexti+1) setc    '&m'
                                            8962 &i       seta    1
                                            8963 .loop    aif    (&i gt &$dccexti).around
                                            8964          aif    ('&$dccext(&i)' eq '&m').getout
                                            8965 &i       seta    &i+1
                                            8966          ago     .loop
                                            8967 .around  anop
                                            8968 &$dccexti seta &$dccexti+1
                                            8969          extrn  &m
                                            8970 .getout  anop
                                            8971          mend
00005CC0                                    8972+$eye0159    ds    0d                                                    02-DCCCA
00005CC0 C4C3C3                             8973+         dc cl3'DCC'                                                    02-DCCCA
00005CC3 01                                 8974+         dc xl1'01' format one                                          02-DCCCA
00005CC4 00000000                           8975+         dc a(0)                                                        02-DCCCA
00005CC8 0000000000005D32                   8976+         dc ad(@PER_577)                                                02-DCCCA
00005CD0 00000000000000B8                   8977+         dc ad(184)                                                     02-DCCCA
00005CD8 0000000000000000                   8978+         dc ad(0)                                                       02-DCCCA
00005CE0 0000000000001000                   8979+         dc ad(4096)                                                    02-DCCCA
00005CE8 20                                 8980+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005CE9 03                                 8981+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005CEA 03                                 8982+         dc al1(3)                                                      02-DCCCA
00005CEB 08                                 8983+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005CEC 00                                 8984+         dc bl.8'00000000'                                              02-DCCCA
00005CED 000000                             8985+         dc al3(0)                                                      02-DCCCA
00005CF0 0000000000005CA0                   8986+         dc ad(@LNAME577)                                               02-DCCCA
00005CF8                                    8987+         ds 0d                                                          02-DCCCA
00005CF8 0000000000005CC0                   8988+         dc ad($eye0159)                                                02-DCCCA
00005D00 0000000000000000                   8989+         dc ad(0)                                                       02-DCCCA
00005D08                                    8990+         ds    0d                                                       01-DCCPR
                                            8991+         entry rd_kafka_queue_destroy                                   01-DCCPR
00005D08                                    8992+rd_kafka_queue_destroy ds 0d                                            01-DCCPR
00005D08                                    8993+@REGION_577_1 ds 0h                                                     01-DCCPR
00005D08 EBEC D008 0024          00000008   8994+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page  181 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005D0E E3E0 D088 0004          00000088   8995+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005D14 E3C0 D090 0004          00000090   8996+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005D1A B904 002E                          8997+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005D1E E3B0 C018 0004          00000018   8998+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005D24 A7EB 00B8               000000B8   8999+         aghi  14,184              increase by frame size               01-DCCPR
00005D28 E3E0 C020 0021          00000020   9000+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005D2E 4720 B020               00000020   9001+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005D32                                    9002+@PER_577 ds    0h                                                       01-DCCPR
00005D32 EBDE 2080 0024          00000080   9003+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005D38 E3C0 2090 0024          00000090   9004+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005D3E B904 00D2                          9005+         lgr   13,2                set real frame pointer               01-DCCPR
00005D42 B904 00CF                          9006+         lgr   12,15               set base reg                         01-DCCPR
                        00005D08            9007+         using @REGION_577_1,12                                         01-DCCPR
                                            9008 * ******* End of Prologue
                                            9009 * *
                                            9010 * ***           if (rkqu->rkqu_is_owner)
00005D46 E320 1000 0004          00000000   9011          LG    2,0(0,1)    ; rkqu
00005D4C E3F0 2010 0012          00000010   9012          LT    15,16(0,2)  ; offset of rkqu_is_owner in rd_kafka_queue_*
                                                                s
00005D52 4780 C090               00005D98   9013          BZ    @L828
                                            9014 * ***                   rd_kafka_q_destroy_owner(rkqu->rkqu_q);
00005D56 E3F0 2000 0004          00000000   9015          LG    15,0(0,2)
00005D5C E3F0 D0A8 0024          000000A8   9016          STG   15,168(0,13)
00005D62 4110 D0A8               000000A8   9017          LA    1,168(0,13)
00005D66 E3F0 C078 0004          00005D80   9018          LG    15,@lit_577_332 ; rd_kafka_q_destroy_owner
00005D6C                                    9019 @@gen_label600 DS    0H
00005D6C 05EF                               9020          BALR  14,15
00005D6E                                    9021 @@gen_label601 DS    0H
00005D6E 47F0 C0AE               00005DB6   9022          B     @L829
00005D78                                    9023          DS    0D
00005D78 000000B8                           9024 @FRAMESIZE_577 DC F'184'
00005D7C 00000000
00005D80 0000000000001358                   9025 @lit_577_332 DC AD(rd_kafka_q_destroy_owner)
00005D88 0000000000001140                   9026 @lit_577_333 DC AD(rd_kafka_q_destroy0)
00005D90 00000000000006F8                   9027 @lit_577_334 DC AD(rd_free)
                                            9028 * ***           else
00005D98                                    9029 @L828    DS    0H
                                            9030 * ***                   rd_kafka_q_destroy0(rkqu->rkqu_q, 0 );
00005D98 E3F0 2000 0004          00000000   9031          LG    15,0(0,2)
00005D9E E3F0 D0A8 0024          000000A8   9032          STG   15,168(0,13)
00005DA4 D707 D0B0 D0B0 000000B0 000000B0   9033          XC    176(8,13),176(13)
00005DAA 4110 D0A8               000000A8   9034          LA    1,168(0,13)
00005DAE E3F0 C080 0004          00005D88   9035          LG    15,@lit_577_333 ; rd_kafka_q_destroy0
00005DB4                                    9036 @@gen_label602 DS    0H
00005DB4 05EF                               9037          BALR  14,15
00005DB6                                    9038 @@gen_label603 DS    0H
00005DB6                                    9039 @L829    DS    0H
                                            9040 * ***           rd_free(rkqu);
00005DB6 E320 D0A8 0024          000000A8   9041          STG   2,168(0,13)
00005DBC 4110 D0A8               000000A8   9042          LA    1,168(0,13)
00005DC0 E3F0 C088 0004          00005D90   9043          LG    15,@lit_577_334 ; rd_free
00005DC6                                    9044 @@gen_label604 DS    0H
                                                                                                                           Page  182 
  Active Usings: @REGION_577_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005DC6 05EF                               9045          BALR  14,15
00005DC8                                    9046 @@gen_label605 DS    0H
                                            9047 * ***   }
00005DC8                                    9048 @ret_lab_577 DS 0H
                                            9049 * * **** Start of Epilogue
                                            9050          DCCEPIL
00005DC8                                    9051+         ds 0h                                                          01-DCCEP
                                            9052+* Epilog
00005DC8 D707 D088 D088 00000088 00000088   9053+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005DCE E3D0 D080 0004          00000080   9054+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005DD4 E3C0 D090 0004          00000090   9055+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005DDA E3B0 C018 0004          00000018   9056+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005DE0 E3C0 B010 0021          00000010   9057+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005DE6 E3E0 D008 0004          00000008   9058+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005DEC EB1C D020 0004          00000020   9059+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005DF2 078E                               9060+         bcr 8,14                if same dsab, just return              01-DCCEP
00005DF4 E3F0 D010 0024          00000010   9061+         stg 15,16(0,13)         save return code                       01-DCCEP
00005DFA E300 D018 0024          00000018   9062+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005E00 E3F0 D090 0004          00000090   9063+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005E06 E3F0 F018 0004          00000018   9064+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005E0C 47F0 F040               00000040   9065+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9066+* End of Epilog
                                            9067 * * **** End of Epilogue
                                            9068          DROP  12
                                            9069 *
                                            9070 *   DSECT for automatic variables in "rd_kafka_queue_destroy"
                                            9071 *      (FUNCTION #577)
                                            9072 *
00000000                00000000 000000A8   9073 @AUTO#rd_kafka_queue_destroy DSECT
00000000                                    9074          DS    XL168
                                            9075 *
00005E10                00000000 00007BF0   9076 @CODE    CSECT
                                            9077 *
                                            9078 *
                                            9079 *
                                            9080 * ....... start of rd_kafka_queue_new0
                                            9081 rd_kafka_queue_new0 ALIAS X'99846D92818692816D98A485A4856D9585A6F0'
00005E10                                    9082 @LNAME1946 DS  0H
00005E10 00000013                           9083          DC    X'00000013'
00005E14 99846D9281869281                   9084          DC    C'rd_kafka_queue_new0'
00005E27 00                                 9085          DC    X'00'
                                            9086 rd_kafka_queue_new0 DCCPRLG CINDEX=1946,BASER=12,FRAME=192,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1946
                                            9087          macro
                                            9088          dccextrn &m
                                            9089          gblc    &$dccext(1000)
                                            9090          gbla    &$dccexti
                                            9091          lcla    &i
                                            9092 &$dccext(&$dccexti+1) setc    '&m'
                                            9093 &i       seta    1
                                            9094 .loop    aif    (&i gt &$dccexti).around
                                            9095          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page  183 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9096 &i       seta    &i+1
                                            9097          ago     .loop
                                            9098 .around  anop
                                            9099 &$dccexti seta &$dccexti+1
                                            9100          extrn  &m
                                            9101 .getout  anop
                                            9102          mend
00005E28                                    9103+$eye0162    ds    0d                                                    02-DCCCA
00005E28 C4C3C3                             9104+         dc cl3'DCC'                                                    02-DCCCA
00005E2B 01                                 9105+         dc xl1'01' format one                                          02-DCCCA
00005E2C 00000000                           9106+         dc a(0)                                                        02-DCCCA
00005E30 0000000000005E9A                   9107+         dc ad(@PER_1946)                                               02-DCCCA
00005E38 00000000000000C0                   9108+         dc ad(192)                                                     02-DCCCA
00005E40 0000000000000000                   9109+         dc ad(0)                                                       02-DCCCA
00005E48 0000000000001000                   9110+         dc ad(4096)                                                    02-DCCCA
00005E50 20                                 9111+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005E51 03                                 9112+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005E52 03                                 9113+         dc al1(3)                                                      02-DCCCA
00005E53 08                                 9114+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005E54 00                                 9115+         dc bl.8'00000000'                                              02-DCCCA
00005E55 000000                             9116+         dc al3(0)                                                      02-DCCCA
00005E58 0000000000005E10                   9117+         dc ad(@LNAME1946)                                              02-DCCCA
00005E60                                    9118+         ds 0d                                                          02-DCCCA
00005E60 0000000000005E28                   9119+         dc ad($eye0162)                                                02-DCCCA
00005E68 0000000000000000                   9120+         dc ad(0)                                                       02-DCCCA
00005E70                                    9121+         ds    0d                                                       01-DCCPR
                                            9122+         entry rd_kafka_queue_new0                                      01-DCCPR
00005E70                                    9123+rd_kafka_queue_new0 ds 0d                                               01-DCCPR
00005E70                                    9124+@REGION_1946_1 ds 0h                                                    01-DCCPR
00005E70 EBEC D008 0024          00000008   9125+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005E76 E3E0 D088 0004          00000088   9126+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005E7C E3C0 D090 0004          00000090   9127+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005E82 B904 002E                          9128+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005E86 E3B0 C018 0004          00000018   9129+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005E8C A7EB 00C0               000000C0   9130+         aghi  14,192              increase by frame size               01-DCCPR
00005E90 E3E0 C020 0021          00000020   9131+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005E96 4720 B020               00000020   9132+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005E9A                                    9133+@PER_1946 ds   0h                                                       01-DCCPR
00005E9A EBDE 2080 0024          00000080   9134+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005EA0 E3C0 2090 0024          00000090   9135+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005EA6 B904 00D2                          9136+         lgr   13,2                set real frame pointer               01-DCCPR
00005EAA B904 00CF                          9137+         lgr   12,15               set base reg                         01-DCCPR
                        00005E70            9138+         using @REGION_1946_1,12                                        01-DCCPR
00005EAE B904 0031                          9139          LGR   3,1         ; ptr to parm area
                                            9140 * ******* End of Prologue
                                            9141 * *
                                            9142 * ***      rd_kafka_queue_t *rkqu;
                                            9143 * ***
                                            9144 * ***      rkqu = rd_calloc(1, sizeof(*rkqu));
00005EB2 E548 D0B0 0001          000000B0   9145          MVGHI 176(13),1
00005EB8 E548 D0B8 0018          000000B8   9146          MVGHI 184(13),24
00005EBE 4110 D0B0               000000B0   9147          LA    1,176(0,13)
                                                                                                                           Page  184 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005EC2 E3F0 C0E0 0004          00005F50   9148          LG    15,@lit_1946_336 ; rd_calloc
00005EC8                                    9149 @@gen_label606 DS    0H
00005EC8 05EF                               9150          BALR  14,15
00005ECA                                    9151 @@gen_label607 DS    0H
00005ECA B904 002F                          9152          LGR   2,15
                                            9153 * ***
                                            9154 * ***      rkqu->rkqu_q = rkq;
00005ECE E310 3008 0004          00000008   9155          LG    1,8(0,3)    ; rkq
00005ED4 E310 2000 0024          00000000   9156          STG   1,0(0,2)    ; rkqu
                                            9157 * ***      rd_kafka_q_keep(rkq);
00005EDA E310 D0B0 0024          000000B0   9158          STG   1,176(0,13)
00005EE0 4110 D0B0               000000B0   9159          LA    1,176(0,13)
00005EE4 E3F0 C0E8 0004          00005F58   9160          LG    15,@lit_1946_337 ; rd_kafka_q_keep
00005EEA                                    9161 @@gen_label608 DS    0H
00005EEA 05EF                               9162          BALR  14,15
00005EEC                                    9163 @@gen_label609 DS    0H
                                            9164 * ***
                                            9165 * ***           rkqu->rkqu_rk = rk;
00005EEC E3F0 3000 0004          00000000   9166          LG    15,0(0,3)   ; rk
00005EF2 E3F0 2008 0024          00000008   9167          STG   15,8(0,2)   ; offset of rkqu_rk in rd_kafka_queue_s
                                            9168 * ***
                                            9169 * ***      return rkqu;
00005EF8 B904 00F2                          9170          LGR   15,2
                                            9171 * ***   }
                                            9172 * * **** Start of Epilogue
                                            9173          DCCEPIL
00005EFC                                    9174+         ds 0h                                                          01-DCCEP
                                            9175+* Epilog
00005EFC D707 D088 D088 00000088 00000088   9176+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005F02 E3D0 D080 0004          00000080   9177+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005F08 E3C0 D090 0004          00000090   9178+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005F0E E3B0 C018 0004          00000018   9179+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005F14 E3C0 B010 0021          00000010   9180+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005F1A E3E0 D008 0004          00000008   9181+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005F20 EB1C D020 0004          00000020   9182+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005F26 078E                               9183+         bcr 8,14                if same dsab, just return              01-DCCEP
00005F28 E3F0 D010 0024          00000010   9184+         stg 15,16(0,13)         save return code                       01-DCCEP
00005F2E E300 D018 0024          00000018   9185+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005F34 E3F0 D090 0004          00000090   9186+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005F3A E3F0 F018 0004          00000018   9187+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005F40 47F0 F040               00000040   9188+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9189+* End of Epilog
                                            9190 * * **** End of Epilogue
00005F48                                    9191          DS    0D
00005F48 000000C0                           9192 @FRAMESIZE_1946 DC F'192'
00005F4C 00000000
00005F50 0000000000000420                   9193 @lit_1946_336 DC AD(rd_calloc)
00005F58 0000000000000EC0                   9194 @lit_1946_337 DC AD(rd_kafka_q_keep)
                                            9195          DROP  12
                                            9196 *
                                            9197 *   DSECT for automatic variables in "rd_kafka_queue_new0"
                                            9198 *      (FUNCTION #1946)
                                                                                                                           Page  185 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9199 *
00000000                00000000 000000A8   9200 @AUTO#rd_kafka_queue_new0 DSECT
00000000                                    9201          DS    XL168
                                            9202 *
00005F60                00000000 00007BF0   9203 @CODE    CSECT
                                            9204 *
                                            9205 *
                                            9206 *
                                            9207 * ....... start of rd_kafka_queue_new
                                            9208 rd_kafka_queue_new ALIAS X'99846D92818692816D98A485A4856D9585A6'
00005F60                                    9209 @LNAME576 DS   0H
00005F60 00000012                           9210          DC    X'00000012'
00005F64 99846D9281869281                   9211          DC    C'rd_kafka_queue_new'
00005F76 00                                 9212          DC    X'00'
                                            9213 rd_kafka_queue_new DCCPRLG CINDEX=576,BASER=12,FRAME=200,ENTRY=YES,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME576
                                            9214          macro
                                            9215          dccextrn &m
                                            9216          gblc    &$dccext(1000)
                                            9217          gbla    &$dccexti
                                            9218          lcla    &i
                                            9219 &$dccext(&$dccexti+1) setc    '&m'
                                            9220 &i       seta    1
                                            9221 .loop    aif    (&i gt &$dccexti).around
                                            9222          aif    ('&$dccext(&i)' eq '&m').getout
                                            9223 &i       seta    &i+1
                                            9224          ago     .loop
                                            9225 .around  anop
                                            9226 &$dccexti seta &$dccexti+1
                                            9227          extrn  &m
                                            9228 .getout  anop
                                            9229          mend
00005F78                                    9230+$eye0165    ds    0d                                                    02-DCCCA
00005F78 C4C3C3                             9231+         dc cl3'DCC'                                                    02-DCCCA
00005F7B 01                                 9232+         dc xl1'01' format one                                          02-DCCCA
00005F7C 00000000                           9233+         dc a(0)                                                        02-DCCCA
00005F80 0000000000005FEA                   9234+         dc ad(@PER_576)                                                02-DCCCA
00005F88 00000000000000C8                   9235+         dc ad(200)                                                     02-DCCCA
00005F90 0000000000000000                   9236+         dc ad(0)                                                       02-DCCCA
00005F98 0000000000001000                   9237+         dc ad(4096)                                                    02-DCCCA
00005FA0 20                                 9238+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005FA1 03                                 9239+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005FA2 03                                 9240+         dc al1(3)                                                      02-DCCCA
00005FA3 08                                 9241+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005FA4 00                                 9242+         dc bl.8'00000000'                                              02-DCCCA
00005FA5 000000                             9243+         dc al3(0)                                                      02-DCCCA
00005FA8 0000000000005F60                   9244+         dc ad(@LNAME576)                                               02-DCCCA
00005FB0                                    9245+         ds 0d                                                          02-DCCCA
00005FB0 0000000000005F78                   9246+         dc ad($eye0165)                                                02-DCCCA
00005FB8 0000000000000000                   9247+         dc ad(0)                                                       02-DCCCA
00005FC0                                    9248+         ds    0d                                                       01-DCCPR
                                            9249+         entry rd_kafka_queue_new                                       01-DCCPR
                                                                                                                           Page  186 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005FC0                                    9250+rd_kafka_queue_new ds 0d                                                01-DCCPR
00005FC0                                    9251+@REGION_576_1 ds 0h                                                     01-DCCPR
00005FC0 EBEC D008 0024          00000008   9252+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005FC6 E3E0 D088 0004          00000088   9253+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005FCC E3C0 D090 0004          00000090   9254+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005FD2 B904 002E                          9255+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005FD6 E3B0 C018 0004          00000018   9256+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005FDC A7EB 00C8               000000C8   9257+         aghi  14,200              increase by frame size               01-DCCPR
00005FE0 E3E0 C020 0021          00000020   9258+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005FE6 4720 B020               00000020   9259+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005FEA                                    9260+@PER_576 ds    0h                                                       01-DCCPR
00005FEA EBDE 2080 0024          00000080   9261+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005FF0 E3C0 2090 0024          00000090   9262+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005FF6 B904 00D2                          9263+         lgr   13,2                set real frame pointer               01-DCCPR
00005FFA B904 00CF                          9264+         lgr   12,15               set base reg                         01-DCCPR
                        00005FC0            9265+         using @REGION_576_1,12                                         01-DCCPR
00005FFE B904 0031                          9266          LGR   3,1         ; ptr to parm area
                                            9267 * ******* End of Prologue
                                            9268 * *
                                            9269 * ***      rd_kafka_q_t *rkq;
                                            9270 * ***      rd_kafka_queue_t *rkqu;
                                            9271 * ***
                                            9272 * ***      rkq = rd_kafka_q_new0(rk,__FUNCTION__,701);
00006002 E3F0 3000 0004          00000000   9273          LG    15,0(0,3)   ; rk
00006008 E3F0 D0B0 0024          000000B0   9274          STG   15,176(0,13)
0000600E E3F0 C110 0004          000060D0   9275          LG    15,@lit_576_339
00006014 41F0 F1E2               000001E2   9276          LA    15,482(0,15)
00006018 E3F0 D0B8 0024          000000B8   9277          STG   15,184(0,13)
0000601E E548 D0C0 02BD          000000C0   9278          MVGHI 192(13),701
00006024 4110 D0B0               000000B0   9279          LA    1,176(0,13)
00006028 E3F0 C108 0004          000060C8   9280          LG    15,@lit_576_340 ; rd_kafka_q_new0
0000602E                                    9281 @@gen_label610 DS    0H
0000602E 05EF                               9282          BALR  14,15
00006030                                    9283 @@gen_label611 DS    0H
00006030 B904 002F                          9284          LGR   2,15
                                            9285 * ***      rkqu = rd_kafka_queue_new0(rk, rkq);
00006034 E310 3000 0004          00000000   9286          LG    1,0(0,3)    ; rk
0000603A EB12 D0B0 0024          000000B0   9287          STMG  1,2,176(13)
00006040 4110 D0B0               000000B0   9288          LA    1,176(0,13)
00006044 E3F0 C118 0004          000060D8   9289          LG    15,@lit_576_341 ; rd_kafka_queue_new0
0000604A                                    9290 @@gen_label612 DS    0H
0000604A 05EF                               9291          BALR  14,15
0000604C                                    9292 @@gen_label613 DS    0H
0000604C B904 003F                          9293          LGR   3,15
                                            9294 * ***      rd_kafka_q_destroy0(rkq, 0 );
00006050 E320 D0B0 0024          000000B0   9295          STG   2,176(0,13)
00006056 D707 D0B8 D0B8 000000B8 000000B8   9296          XC    184(8,13),184(13)
0000605C 4110 D0B0               000000B0   9297          LA    1,176(0,13)
00006060 E3F0 C120 0004          000060E0   9298          LG    15,@lit_576_342 ; rd_kafka_q_destroy0
00006066                                    9299 @@gen_label614 DS    0H
00006066 05EF                               9300          BALR  14,15
00006068                                    9301 @@gen_label615 DS    0H
                                                                                                                           Page  187 
  Active Usings: @REGION_576_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9302 * ***
                                            9303 * ***           rkqu->rkqu_is_owner = 1;
00006068 E54C 3010 0001          00000010   9304          MVHI  16(3),1     ; offset of rkqu_is_owner in rd_kafka_queue_*
                                                                s
                                            9305 * ***      return rkqu;
0000606E B904 00F3                          9306          LGR   15,3
                                            9307 * ***   }
                                            9308 * * **** Start of Epilogue
                                            9309          DCCEPIL
00006072                                    9310+         ds 0h                                                          01-DCCEP
                                            9311+* Epilog
00006072 D707 D088 D088 00000088 00000088   9312+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006078 E3D0 D080 0004          00000080   9313+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000607E E3C0 D090 0004          00000090   9314+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006084 E3B0 C018 0004          00000018   9315+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000608A E3C0 B010 0021          00000010   9316+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006090 E3E0 D008 0004          00000008   9317+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006096 EB1C D020 0004          00000020   9318+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000609C 078E                               9319+         bcr 8,14                if same dsab, just return              01-DCCEP
0000609E E3F0 D010 0024          00000010   9320+         stg 15,16(0,13)         save return code                       01-DCCEP
000060A4 E300 D018 0024          00000018   9321+         stg 0,24(0,13)          save more return code                  01-DCCEP
000060AA E3F0 D090 0004          00000090   9322+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000060B0 E3F0 F018 0004          00000018   9323+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000060B6 47F0 F040               00000040   9324+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9325+* End of Epilog
                                            9326 * * **** End of Epilogue
000060C0                                    9327          DS    0D
000060C0 000000C8                           9328 @FRAMESIZE_576 DC F'200'
000060C4 00000000
000060C8 0000000000003D40                   9329 @lit_576_340 DC AD(rd_kafka_q_new0)
000060D0 0000000000007BF0                   9330 @lit_576_339 DC AD(@DATA)
000060D8 0000000000005E70                   9331 @lit_576_341 DC AD(rd_kafka_queue_new0)
000060E0 0000000000001140                   9332 @lit_576_342 DC AD(rd_kafka_q_destroy0)
                                            9333          DROP  12
                                            9334 *
                                            9335 *   DSECT for automatic variables in "rd_kafka_queue_new"
                                            9336 *      (FUNCTION #576)
                                            9337 *
00000000                00000000 000000A8   9338 @AUTO#rd_kafka_queue_new DSECT
00000000                                    9339          DS    XL168
                                            9340 *
000060E8                00000000 00007BF0   9341 @CODE    CSECT
                                            9342 *
                                            9343 *
                                            9344 *
                                            9345 * ....... start of rd_kafka_queue_get_main
                                            9346 rd_kafka_queue_get_main ALIAS X'99846D92818692816D98A485A4856D8785A36D9*
                                                                4818995'
000060E8                                    9347 @LNAME578 DS   0H
000060E8 00000017                           9348          DC    X'00000017'
000060EC 99846D9281869281                   9349          DC    C'rd_kafka_queue_get_main'
00006103 00                                 9350          DC    X'00'
                                                                                                                           Page  188 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9351 rd_kafka_queue_get_main DCCPRLG CINDEX=578,BASER=12,FRAME=184,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME578
                                            9352          macro
                                            9353          dccextrn &m
                                            9354          gblc    &$dccext(1000)
                                            9355          gbla    &$dccexti
                                            9356          lcla    &i
                                            9357 &$dccext(&$dccexti+1) setc    '&m'
                                            9358 &i       seta    1
                                            9359 .loop    aif    (&i gt &$dccexti).around
                                            9360          aif    ('&$dccext(&i)' eq '&m').getout
                                            9361 &i       seta    &i+1
                                            9362          ago     .loop
                                            9363 .around  anop
                                            9364 &$dccexti seta &$dccexti+1
                                            9365          extrn  &m
                                            9366 .getout  anop
                                            9367          mend
00006108                                    9368+$eye0168    ds    0d                                                    02-DCCCA
00006108 C4C3C3                             9369+         dc cl3'DCC'                                                    02-DCCCA
0000610B 01                                 9370+         dc xl1'01' format one                                          02-DCCCA
0000610C 00000000                           9371+         dc a(0)                                                        02-DCCCA
00006110 000000000000617A                   9372+         dc ad(@PER_578)                                                02-DCCCA
00006118 00000000000000B8                   9373+         dc ad(184)                                                     02-DCCCA
00006120 0000000000000000                   9374+         dc ad(0)                                                       02-DCCCA
00006128 0000000000001000                   9375+         dc ad(4096)                                                    02-DCCCA
00006130 20                                 9376+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006131 03                                 9377+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006132 03                                 9378+         dc al1(3)                                                      02-DCCCA
00006133 08                                 9379+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006134 00                                 9380+         dc bl.8'00000000'                                              02-DCCCA
00006135 000000                             9381+         dc al3(0)                                                      02-DCCCA
00006138 00000000000060E8                   9382+         dc ad(@LNAME578)                                               02-DCCCA
00006140                                    9383+         ds 0d                                                          02-DCCCA
00006140 0000000000006108                   9384+         dc ad($eye0168)                                                02-DCCCA
00006148 0000000000000000                   9385+         dc ad(0)                                                       02-DCCCA
00006150                                    9386+         ds    0d                                                       01-DCCPR
                                            9387+         entry rd_kafka_queue_get_main                                  01-DCCPR
00006150                                    9388+rd_kafka_queue_get_main ds 0d                                           01-DCCPR
00006150                                    9389+@REGION_578_1 ds 0h                                                     01-DCCPR
00006150 EBEC D008 0024          00000008   9390+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006156 E3E0 D088 0004          00000088   9391+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000615C E3C0 D090 0004          00000090   9392+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006162 B904 002E                          9393+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006166 E3B0 C018 0004          00000018   9394+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000616C A7EB 00B8               000000B8   9395+         aghi  14,184              increase by frame size               01-DCCPR
00006170 E3E0 C020 0021          00000020   9396+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006176 4720 B020               00000020   9397+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000617A                                    9398+@PER_578 ds    0h                                                       01-DCCPR
0000617A EBDE 2080 0024          00000080   9399+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006180 E3C0 2090 0024          00000090   9400+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006186 B904 00D2                          9401+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page  189 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000618A B904 00CF                          9402+         lgr   12,15               set base reg                         01-DCCPR
                        00006150            9403+         using @REGION_578_1,12                                         01-DCCPR
                                            9404 * ******* End of Prologue
                                            9405 * *
                                            9406 * ***      return rd_kafka_queue_new0(rk, rk->rk_rep);
0000618E E3F0 1000 0004          00000000   9407          LG    15,0(0,1)   ; rk
00006194 E3F0 D0A8 0024          000000A8   9408          STG   15,168(0,13)
0000619A E3F0 1000 0004          00000000   9409          LG    15,0(0,1)   ; rk
000061A0 E3F0 F000 0004          00000000   9410          LG    15,0(0,15)
000061A6 E3F0 D0B0 0024          000000B0   9411          STG   15,176(0,13)
000061AC 4110 D0A8               000000A8   9412          LA    1,168(0,13)
000061B0 E3F0 C0B8 0004          00006208   9413          LG    15,@lit_578_344 ; rd_kafka_queue_new0
000061B6                                    9414 @@gen_label616 DS    0H
000061B6 05EF                               9415          BALR  14,15
000061B8                                    9416 @@gen_label617 DS    0H
                                            9417 * ***   }
                                            9418 * * **** Start of Epilogue
                                            9419          DCCEPIL
000061B8                                    9420+         ds 0h                                                          01-DCCEP
                                            9421+* Epilog
000061B8 D707 D088 D088 00000088 00000088   9422+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000061BE E3D0 D080 0004          00000080   9423+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000061C4 E3C0 D090 0004          00000090   9424+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000061CA E3B0 C018 0004          00000018   9425+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000061D0 E3C0 B010 0021          00000010   9426+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000061D6 E3E0 D008 0004          00000008   9427+         lg  14,8(0,13)          load up return address                 01-DCCEP
000061DC EB1C D020 0004          00000020   9428+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000061E2 078E                               9429+         bcr 8,14                if same dsab, just return              01-DCCEP
000061E4 E3F0 D010 0024          00000010   9430+         stg 15,16(0,13)         save return code                       01-DCCEP
000061EA E300 D018 0024          00000018   9431+         stg 0,24(0,13)          save more return code                  01-DCCEP
000061F0 E3F0 D090 0004          00000090   9432+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000061F6 E3F0 F018 0004          00000018   9433+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000061FC 47F0 F040               00000040   9434+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9435+* End of Epilog
                                            9436 * * **** End of Epilogue
00006200                                    9437          DS    0D
00006200 000000B8                           9438 @FRAMESIZE_578 DC F'184'
00006204 00000000
00006208 0000000000005E70                   9439 @lit_578_344 DC AD(rd_kafka_queue_new0)
                                            9440          DROP  12
                                            9441 *
                                            9442 *   DSECT for automatic variables in "rd_kafka_queue_get_main"
                                            9443 *      (FUNCTION #578)
                                            9444 *
00000000                00000000 000000A8   9445 @AUTO#rd_kafka_queue_get_main DSECT
00000000                                    9446          DS    XL168
                                            9447 *
00006210                00000000 00007BF0   9448 @CODE    CSECT
                                            9449 *
                                            9450 *
                                            9451 *
                                            9452 * ....... start of rd_kafka_queue_get_consumer
                                                                                                                           Page  190 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9453 rd_kafka_queue_get_consumer ALIAS X'99846D92818692816D98A485A4856D8785A*
                                                                36D839695A2A4948599'
00006210                                    9454 @LNAME579 DS   0H
00006210 0000001B                           9455          DC    X'0000001B'
00006214 99846D9281869281                   9456          DC    C'rd_kafka_queue_get_consumer'
0000622F 00                                 9457          DC    X'00'
                                            9458 rd_kafka_queue_get_consumer DCCPRLG CINDEX=579,BASER=12,FRAME=184,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME579
                                            9459          macro
                                            9460          dccextrn &m
                                            9461          gblc    &$dccext(1000)
                                            9462          gbla    &$dccexti
                                            9463          lcla    &i
                                            9464 &$dccext(&$dccexti+1) setc    '&m'
                                            9465 &i       seta    1
                                            9466 .loop    aif    (&i gt &$dccexti).around
                                            9467          aif    ('&$dccext(&i)' eq '&m').getout
                                            9468 &i       seta    &i+1
                                            9469          ago     .loop
                                            9470 .around  anop
                                            9471 &$dccexti seta &$dccexti+1
                                            9472          extrn  &m
                                            9473 .getout  anop
                                            9474          mend
00006230                                    9475+$eye0171    ds    0d                                                    02-DCCCA
00006230 C4C3C3                             9476+         dc cl3'DCC'                                                    02-DCCCA
00006233 01                                 9477+         dc xl1'01' format one                                          02-DCCCA
00006234 00000000                           9478+         dc a(0)                                                        02-DCCCA
00006238 00000000000062A2                   9479+         dc ad(@PER_579)                                                02-DCCCA
00006240 00000000000000B8                   9480+         dc ad(184)                                                     02-DCCCA
00006248 0000000000000000                   9481+         dc ad(0)                                                       02-DCCCA
00006250 0000000000001000                   9482+         dc ad(4096)                                                    02-DCCCA
00006258 20                                 9483+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006259 03                                 9484+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000625A 03                                 9485+         dc al1(3)                                                      02-DCCCA
0000625B 08                                 9486+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000625C 00                                 9487+         dc bl.8'00000000'                                              02-DCCCA
0000625D 000000                             9488+         dc al3(0)                                                      02-DCCCA
00006260 0000000000006210                   9489+         dc ad(@LNAME579)                                               02-DCCCA
00006268                                    9490+         ds 0d                                                          02-DCCCA
00006268 0000000000006230                   9491+         dc ad($eye0171)                                                02-DCCCA
00006270 0000000000000000                   9492+         dc ad(0)                                                       02-DCCCA
00006278                                    9493+         ds    0d                                                       01-DCCPR
                                            9494+         entry rd_kafka_queue_get_consumer                              01-DCCPR
00006278                                    9495+rd_kafka_queue_get_consumer ds 0d                                       01-DCCPR
00006278                                    9496+@REGION_579_1 ds 0h                                                     01-DCCPR
00006278 EBEC D008 0024          00000008   9497+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000627E E3E0 D088 0004          00000088   9498+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006284 E3C0 D090 0004          00000090   9499+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000628A B904 002E                          9500+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000628E E3B0 C018 0004          00000018   9501+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006294 A7EB 00B8               000000B8   9502+         aghi  14,184              increase by frame size               01-DCCPR
                                                                                                                           Page  191 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006298 E3E0 C020 0021          00000020   9503+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000629E 4720 B020               00000020   9504+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000062A2                                    9505+@PER_579 ds    0h                                                       01-DCCPR
000062A2 EBDE 2080 0024          00000080   9506+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000062A8 E3C0 2090 0024          00000090   9507+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000062AE B904 00D2                          9508+         lgr   13,2                set real frame pointer               01-DCCPR
000062B2 B904 00CF                          9509+         lgr   12,15               set base reg                         01-DCCPR
                        00006278            9510+         using @REGION_579_1,12                                         01-DCCPR
                                            9511 * ******* End of Prologue
                                            9512 * *
                                            9513 * ***      if (!rk->rk_cgrp)
000062B6 E3F0 1000 0004          00000000   9514          LG    15,0(0,1)   ; rk
000062BC E310 F208 0002          00000208   9515          LTG   1,520(0,15) ; offset of rk_cgrp in rd_kafka_s
000062C2 4770 C068               000062E0   9516          BNZ   @L830
                                            9517 * ***         return ((void *)0);
000062C6 A7F9 0000               00000000   9518          LGHI  15,0        ; 0
000062CA 47F0 C08C               00006304   9519          B     @ret_lab_579
000062D0                                    9520          DS    0D
000062D0 000000B8                           9521 @FRAMESIZE_579 DC F'184'
000062D4 00000000
000062D8 0000000000005E70                   9522 @lit_579_347 DC AD(rd_kafka_queue_new0)
000062E0                                    9523 @L830    DS    0H
                                            9524 * ***      return rd_kafka_queue_new0(rk, rk->rk_cgrp->rkcg_q);
000062E0 E3F0 D0A8 0024          000000A8   9525          STG   15,168(0,13)
000062E6 E3F0 F208 0004          00000208   9526          LG    15,520(0,15) ; offset of rk_cgrp in rd_kafka_s
000062EC E3F0 F048 0004          00000048   9527          LG    15,72(0,15)
000062F2 E3F0 D0B0 0024          000000B0   9528          STG   15,176(0,13)
000062F8 4110 D0A8               000000A8   9529          LA    1,168(0,13)
000062FC E3F0 C060 0004          000062D8   9530          LG    15,@lit_579_347 ; rd_kafka_queue_new0
00006302                                    9531 @@gen_label619 DS    0H
00006302 05EF                               9532          BALR  14,15
00006304                                    9533 @@gen_label620 DS    0H
                                            9534 * ***   }
00006304                                    9535 @ret_lab_579 DS 0H
                                            9536 * * **** Start of Epilogue
                                            9537          DCCEPIL
00006304                                    9538+         ds 0h                                                          01-DCCEP
                                            9539+* Epilog
00006304 D707 D088 D088 00000088 00000088   9540+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000630A E3D0 D080 0004          00000080   9541+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006310 E3C0 D090 0004          00000090   9542+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006316 E3B0 C018 0004          00000018   9543+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000631C E3C0 B010 0021          00000010   9544+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006322 E3E0 D008 0004          00000008   9545+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006328 EB1C D020 0004          00000020   9546+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000632E 078E                               9547+         bcr 8,14                if same dsab, just return              01-DCCEP
00006330 E3F0 D010 0024          00000010   9548+         stg 15,16(0,13)         save return code                       01-DCCEP
00006336 E300 D018 0024          00000018   9549+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000633C E3F0 D090 0004          00000090   9550+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006342 E3F0 F018 0004          00000018   9551+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006348 47F0 F040               00000040   9552+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9553+* End of Epilog
                                                                                                                           Page  192 
  Active Usings: @REGION_579_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9554 * * **** End of Epilogue
                                            9555          DROP  12
                                            9556 *
                                            9557 *   DSECT for automatic variables in "rd_kafka_queue_get_consumer"
                                            9558 *      (FUNCTION #579)
                                            9559 *
00000000                00000000 000000A8   9560 @AUTO#rd_kafka_queue_get_consumer DSECT
00000000                                    9561          DS    XL168
                                            9562 *
0000634C                00000000 00007BF0   9563 @CODE    CSECT
                                            9564 *
                                            9565 *
                                            9566 *
                                            9567 * ....... start of rd_kafka_queue_get_partition
                                            9568 rd_kafka_queue_get_partition ALIAS X'99846D92818692816D98A485A4856D8785*
                                                                A36D978199A389A3899695'
0000634C                                    9569 @LNAME580 DS   0H
0000634C 0000001C                           9570          DC    X'0000001C'
00006350 99846D9281869281                   9571          DC    C'rd_kafka_queue_get_partition'
0000636C 00                                 9572          DC    X'00'
                                            9573 rd_kafka_queue_get_partition DCCPRLG CINDEX=580,BASER=12,FRAME=216,ENTR*
                                                                Y=YES,ARCH=ZARCH,LNAMEADDR=@LNAME580
                                            9574          macro
                                            9575          dccextrn &m
                                            9576          gblc    &$dccext(1000)
                                            9577          gbla    &$dccexti
                                            9578          lcla    &i
                                            9579 &$dccext(&$dccexti+1) setc    '&m'
                                            9580 &i       seta    1
                                            9581 .loop    aif    (&i gt &$dccexti).around
                                            9582          aif    ('&$dccext(&i)' eq '&m').getout
                                            9583 &i       seta    &i+1
                                            9584          ago     .loop
                                            9585 .around  anop
                                            9586 &$dccexti seta &$dccexti+1
                                            9587          extrn  &m
                                            9588 .getout  anop
                                            9589          mend
00006370                                    9590+$eye0174    ds    0d                                                    02-DCCCA
00006370 C4C3C3                             9591+         dc cl3'DCC'                                                    02-DCCCA
00006373 01                                 9592+         dc xl1'01' format one                                          02-DCCCA
00006374 00000000                           9593+         dc a(0)                                                        02-DCCCA
00006378 00000000000063E2                   9594+         dc ad(@PER_580)                                                02-DCCCA
00006380 00000000000000D8                   9595+         dc ad(216)                                                     02-DCCCA
00006388 0000000000000000                   9596+         dc ad(0)                                                       02-DCCCA
00006390 0000000000001000                   9597+         dc ad(4096)                                                    02-DCCCA
00006398 20                                 9598+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006399 03                                 9599+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000639A 03                                 9600+         dc al1(3)                                                      02-DCCCA
0000639B 08                                 9601+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000639C 00                                 9602+         dc bl.8'00000000'                                              02-DCCCA
0000639D 000000                             9603+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page  193 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000063A0 000000000000634C                   9604+         dc ad(@LNAME580)                                               02-DCCCA
000063A8                                    9605+         ds 0d                                                          02-DCCCA
000063A8 0000000000006370                   9606+         dc ad($eye0174)                                                02-DCCCA
000063B0 0000000000000000                   9607+         dc ad(0)                                                       02-DCCCA
000063B8                                    9608+         ds    0d                                                       01-DCCPR
                                            9609+         entry rd_kafka_queue_get_partition                             01-DCCPR
000063B8                                    9610+rd_kafka_queue_get_partition ds 0d                                      01-DCCPR
000063B8                                    9611+@REGION_580_1 ds 0h                                                     01-DCCPR
000063B8 EBEC D008 0024          00000008   9612+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000063BE E3E0 D088 0004          00000088   9613+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000063C4 E3C0 D090 0004          00000090   9614+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000063CA B904 002E                          9615+         lgr   2,14                copy addr of our savearea            01-DCCPR
000063CE E3B0 C018 0004          00000018   9616+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000063D4 A7EB 00D8               000000D8   9617+         aghi  14,216              increase by frame size               01-DCCPR
000063D8 E3E0 C020 0021          00000020   9618+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000063DE 4720 B020               00000020   9619+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000063E2                                    9620+@PER_580 ds    0h                                                       01-DCCPR
000063E2 EBDE 2080 0024          00000080   9621+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000063E8 E3C0 2090 0024          00000090   9622+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000063EE B904 00D2                          9623+         lgr   13,2                set real frame pointer               01-DCCPR
000063F2 B904 00CF                          9624+         lgr   12,15               set base reg                         01-DCCPR
                        000063B8            9625+         using @REGION_580_1,12                                         01-DCCPR
                                            9626 * ******* End of Prologue
                                            9627 * *
000063F6 E320 1000 0004          00000000   9628          LG    2,0(0,1)    ; rk
                                            9629 * ***           rd_kafka_toppar_t *rktp;
                                            9630 * ***           rd_kafka_queue_t *result;
                                            9631 * ***
                                            9632 * ***           if (rk->rk_type == RD_KAFKA_PRODUCER)
000063FC E55C 29D8 0000          000009D8   9633          CHSI  2520(2),0
00006402 4770 C080               00006438   9634          BNE   @L831
                                            9635 * ***                   return ((void *)0);
00006406 A7F9 0000               00000000   9636          LGHI  15,0        ; 0
0000640A 47F0 C11E               000064D6   9637          B     @ret_lab_580
00006410                                    9638          DS    0D
00006410 000000D8                           9639 @FRAMESIZE_580 DC F'216'
00006414 00000000
00006418 0000000000000000                   9640 @lit_580_350 DC AD(rd_kafka_toppar_get2)
00006420 0000000000005E70                   9641 @lit_580_352 DC AD(rd_kafka_queue_new0)
00006428 0000000000000808                   9642 @lit_580_353 DC AD(rd_refcnt_sub0)
00006430 0000000000000000                   9643 @lit_580_354 DC AD(rd_kafka_toppar_destroy_final)
00006438                                    9644 @L831    DS    0H
                                            9645 * ***
                                            9646 * ***           rktp = rd_kafka_toppar_get2(rk, topic,
                                            9647 * ***                                       partition,
                                            9648 * ***                                       0,
                                            9649 * ***                                       1 );
00006438 E320 D0B0 0024          000000B0   9650          STG   2,176(0,13)
0000643E E3F0 1008 0004          00000008   9651          LG    15,8(0,1)   ; topic
00006444 E3F0 D0B8 0024          000000B8   9652          STG   15,184(0,13)
0000644A E3F0 1014 0014          00000014   9653          LGF   15,20(0,1)  ; partition
00006450 E3F0 D0C0 0024          000000C0   9654          STG   15,192(0,13)
                                                                                                                           Page  194 
  Active Usings: @REGION_580_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006456 D707 D0C8 D0C8 000000C8 000000C8   9655          XC    200(8,13),200(13)
0000645C E548 D0D0 0001          000000D0   9656          MVGHI 208(13),1
00006462 4110 D0B0               000000B0   9657          LA    1,176(0,13)
00006466 E3F0 C060 0004          00006418   9658          LG    15,@lit_580_350 ; rd_kafka_toppar_get2
0000646C                                    9659 @@gen_label622 DS    0H
0000646C 05EF                               9660          BALR  14,15
0000646E                                    9661 @@gen_label623 DS    0H
0000646E B904 003F                          9662          LGR   3,15
                                            9663 * ***
                                            9664 * ***           if (!rktp)
00006472 B902 00F3                          9665          LTGR  15,3
00006476 4770 C0CA               00006482   9666          BNZ   @L832
                                            9667 * ***                   return ((void *)0);
0000647A A7F9 0000               00000000   9668          LGHI  15,0        ; 0
0000647E 47F0 C11E               000064D6   9669          B     @ret_lab_580
00006482                                    9670 @L832    DS    0H
                                            9671 * ***
                                            9672 * ***           result = rd_kafka_queue_new0(rk, rktp->rktp_fetchq);
00006482 E320 D0B0 0024          000000B0   9673          STG   2,176(0,13)
00006488 E3F0 3138 0004          00000138   9674          LG    15,312(0,3)
0000648E E3F0 D0B8 0024          000000B8   9675          STG   15,184(0,13)
00006494 4110 D0B0               000000B0   9676          LA    1,176(0,13)
00006498 E3F0 C068 0004          00006420   9677          LG    15,@lit_580_352 ; rd_kafka_queue_new0
0000649E                                    9678 @@gen_label625 DS    0H
0000649E 05EF                               9679          BALR  14,15
000064A0                                    9680 @@gen_label626 DS    0H
000064A0 B904 002F                          9681          LGR   2,15
                                            9682 * ***           do { rd_kafka_toppar_t *_RKTP = (rktp); if (((rd_refcn\
                                            9683 * t_sub0(&_RKTP->rktp_refcnt) == 0))) rd_kafka_toppar_destroy_final(_R\
                                            9684 * KTP); } while (0);
000064A4                                    9685 @L833    DS    0H
000064A4 41F0 3090               00000090   9686          LA    15,144(0,3)
000064A8 E3F0 D0B0 0024          000000B0   9687          STG   15,176(0,13)
000064AE 4110 D0B0               000000B0   9688          LA    1,176(0,13)
000064B2 E3F0 C070 0004          00006428   9689          LG    15,@lit_580_353 ; rd_refcnt_sub0
000064B8                                    9690 @@gen_label627 DS    0H
000064B8 05EF                               9691          BALR  14,15
000064BA                                    9692 @@gen_label628 DS    0H
000064BA 12FF                               9693          LTR   15,15
000064BC 4770 C11A               000064D2   9694          BNE   @L836
000064C0 E330 D0B0 0024          000000B0   9695          STG   3,176(0,13)
000064C6 4110 D0B0               000000B0   9696          LA    1,176(0,13)
000064CA E3F0 C078 0004          00006430   9697          LG    15,@lit_580_354 ; rd_kafka_toppar_destroy_final
000064D0                                    9698 @@gen_label630 DS    0H
000064D0 05EF                               9699          BALR  14,15
000064D2                                    9700 @@gen_label631 DS    0H
000064D2                                    9701 @L836    DS    0H
                                            9702 * ***
                                            9703 * ***           return result;
000064D2 B904 00F2                          9704          LGR   15,2
                                            9705 * ***   }
000064D6                                    9706 @ret_lab_580 DS 0H
                                                                                                                           Page  195 
  Active Usings: @REGION_580_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9707 * * **** Start of Epilogue
                                            9708          DCCEPIL
000064D6                                    9709+         ds 0h                                                          01-DCCEP
                                            9710+* Epilog
000064D6 D707 D088 D088 00000088 00000088   9711+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000064DC E3D0 D080 0004          00000080   9712+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000064E2 E3C0 D090 0004          00000090   9713+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000064E8 E3B0 C018 0004          00000018   9714+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000064EE E3C0 B010 0021          00000010   9715+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000064F4 E3E0 D008 0004          00000008   9716+         lg  14,8(0,13)          load up return address                 01-DCCEP
000064FA EB1C D020 0004          00000020   9717+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006500 078E                               9718+         bcr 8,14                if same dsab, just return              01-DCCEP
00006502 E3F0 D010 0024          00000010   9719+         stg 15,16(0,13)         save return code                       01-DCCEP
00006508 E300 D018 0024          00000018   9720+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000650E E3F0 D090 0004          00000090   9721+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006514 E3F0 F018 0004          00000018   9722+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000651A 47F0 F040               00000040   9723+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9724+* End of Epilog
                                            9725 * * **** End of Epilogue
                                            9726          DROP  12
                                            9727 *
                                            9728 *   DSECT for automatic variables in "rd_kafka_queue_get_partition"
                                            9729 *      (FUNCTION #580)
                                            9730 *
00000000                00000000 000000A8   9731 @AUTO#rd_kafka_queue_get_partition DSECT
00000000                                    9732          DS    XL168
                                            9733 *
0000651E                00000000 00007BF0   9734 @CODE    CSECT
                                            9735 *
                                            9736 *
                                            9737 *
                                            9738 * ....... start of rd_kafka_queue_get_background
                                            9739 rd_kafka_queue_get_background ALIAS X'99846D92818692816D98A485A4856D878*
                                                                5A36D82818392879996A49584'
0000651E                                    9740 @LNAME581 DS   0H
0000651E 0000001D                           9741          DC    X'0000001D'
00006522 99846D9281869281                   9742          DC    C'rd_kafka_queue_get_background'
0000653F 00                                 9743          DC    X'00'
                                            9744 rd_kafka_queue_get_background DCCPRLG CINDEX=581,BASER=12,FRAME=184,ENT*
                                                                RY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME581
                                            9745          macro
                                            9746          dccextrn &m
                                            9747          gblc    &$dccext(1000)
                                            9748          gbla    &$dccexti
                                            9749          lcla    &i
                                            9750 &$dccext(&$dccexti+1) setc    '&m'
                                            9751 &i       seta    1
                                            9752 .loop    aif    (&i gt &$dccexti).around
                                            9753          aif    ('&$dccext(&i)' eq '&m').getout
                                            9754 &i       seta    &i+1
                                            9755          ago     .loop
                                            9756 .around  anop
                                                                                                                           Page  196 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9757 &$dccexti seta &$dccexti+1
                                            9758          extrn  &m
                                            9759 .getout  anop
                                            9760          mend
00006540                                    9761+$eye0177    ds    0d                                                    02-DCCCA
00006540 C4C3C3                             9762+         dc cl3'DCC'                                                    02-DCCCA
00006543 01                                 9763+         dc xl1'01' format one                                          02-DCCCA
00006544 00000000                           9764+         dc a(0)                                                        02-DCCCA
00006548 00000000000065B2                   9765+         dc ad(@PER_581)                                                02-DCCCA
00006550 00000000000000B8                   9766+         dc ad(184)                                                     02-DCCCA
00006558 0000000000000000                   9767+         dc ad(0)                                                       02-DCCCA
00006560 0000000000001000                   9768+         dc ad(4096)                                                    02-DCCCA
00006568 20                                 9769+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006569 03                                 9770+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000656A 03                                 9771+         dc al1(3)                                                      02-DCCCA
0000656B 08                                 9772+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000656C 00                                 9773+         dc bl.8'00000000'                                              02-DCCCA
0000656D 000000                             9774+         dc al3(0)                                                      02-DCCCA
00006570 000000000000651E                   9775+         dc ad(@LNAME581)                                               02-DCCCA
00006578                                    9776+         ds 0d                                                          02-DCCCA
00006578 0000000000006540                   9777+         dc ad($eye0177)                                                02-DCCCA
00006580 0000000000000000                   9778+         dc ad(0)                                                       02-DCCCA
00006588                                    9779+         ds    0d                                                       01-DCCPR
                                            9780+         entry rd_kafka_queue_get_background                            01-DCCPR
00006588                                    9781+rd_kafka_queue_get_background ds 0d                                     01-DCCPR
00006588                                    9782+@REGION_581_1 ds 0h                                                     01-DCCPR
00006588 EBEC D008 0024          00000008   9783+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000658E E3E0 D088 0004          00000088   9784+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006594 E3C0 D090 0004          00000090   9785+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000659A B904 002E                          9786+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000659E E3B0 C018 0004          00000018   9787+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000065A4 A7EB 00B8               000000B8   9788+         aghi  14,184              increase by frame size               01-DCCPR
000065A8 E3E0 C020 0021          00000020   9789+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000065AE 4720 B020               00000020   9790+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000065B2                                    9791+@PER_581 ds    0h                                                       01-DCCPR
000065B2 EBDE 2080 0024          00000080   9792+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000065B8 E3C0 2090 0024          00000090   9793+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000065BE B904 00D2                          9794+         lgr   13,2                set real frame pointer               01-DCCPR
000065C2 B904 00CF                          9795+         lgr   12,15               set base reg                         01-DCCPR
                        00006588            9796+         using @REGION_581_1,12                                         01-DCCPR
                                            9797 * ******* End of Prologue
                                            9798 * *
                                            9799 * ***           if (rk->rk_background.q)
000065C6 E3F0 1000 0004          00000000   9800          LG    15,0(0,1)   ; rk
000065CC A719 10F8               000010F8   9801          LGHI  1,4344      ; 4344
000065D0 E321 F000 0002          00000000   9802          LTG   2,0(1,15)   ; offset of rk_background in rd_kafka_s
000065D6 4780 C088               00006610   9803          BZ    @L837
                                            9804 * ***                   return rd_kafka_queue_new0(rk, rk->rk_backgrou\
                                            9805 * nd.q);
000065DA E3F0 D0A8 0024          000000A8   9806          STG   15,168(0,13)
000065E0 E3F1 F000 0004          00000000   9807          LG    15,0(1,15)
000065E6 E3F0 D0B0 0024          000000B0   9808          STG   15,176(0,13)
                                                                                                                           Page  197 
  Active Usings: @REGION_581_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000065EC 4110 D0A8               000000A8   9809          LA    1,168(0,13)
000065F0 E3F0 C080 0004          00006608   9810          LG    15,@lit_581_358 ; rd_kafka_queue_new0
000065F6                                    9811 @@gen_label633 DS    0H
000065F6 05EF                               9812          BALR  14,15
000065F8                                    9813 @@gen_label634 DS    0H
000065F8 47F0 C08C               00006614   9814          B     @ret_lab_581
00006600                                    9815          DS    0D
00006600 000000B8                           9816 @FRAMESIZE_581 DC F'184'
00006604 00000000
00006608 0000000000005E70                   9817 @lit_581_358 DC AD(rd_kafka_queue_new0)
                                            9818 * ***           else
00006610                                    9819 @L837    DS    0H
                                            9820 * ***                   return ((void *)0);
00006610 A7F9 0000               00000000   9821          LGHI  15,0        ; 0
                                            9822 * ***   }
00006614                                    9823 @ret_lab_581 DS 0H
                                            9824 * * **** Start of Epilogue
                                            9825          DCCEPIL
00006614                                    9826+         ds 0h                                                          01-DCCEP
                                            9827+* Epilog
00006614 D707 D088 D088 00000088 00000088   9828+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000661A E3D0 D080 0004          00000080   9829+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006620 E3C0 D090 0004          00000090   9830+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006626 E3B0 C018 0004          00000018   9831+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000662C E3C0 B010 0021          00000010   9832+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006632 E3E0 D008 0004          00000008   9833+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006638 EB1C D020 0004          00000020   9834+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000663E 078E                               9835+         bcr 8,14                if same dsab, just return              01-DCCEP
00006640 E3F0 D010 0024          00000010   9836+         stg 15,16(0,13)         save return code                       01-DCCEP
00006646 E300 D018 0024          00000018   9837+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000664C E3F0 D090 0004          00000090   9838+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006652 E3F0 F018 0004          00000018   9839+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006658 47F0 F040               00000040   9840+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9841+* End of Epilog
                                            9842 * * **** End of Epilogue
                                            9843          DROP  12
                                            9844 *
                                            9845 *   DSECT for automatic variables in "rd_kafka_queue_get_background"
                                            9846 *      (FUNCTION #581)
                                            9847 *
00000000                00000000 000000A8   9848 @AUTO#rd_kafka_queue_get_background DSECT
00000000                                    9849          DS    XL168
                                            9850 *
0000665C                00000000 00007BF0   9851 @CODE    CSECT
                                            9852 *
                                            9853 *
                                            9854 *
                                            9855 * ....... start of rd_kafka_set_log_queue
                                            9856 rd_kafka_set_log_queue ALIAS X'99846D92818692816DA285A36D9396876D98A485*
                                                                A485'
0000665C                                    9857 @LNAME583 DS   0H
0000665C 00000016                           9858          DC    X'00000016'
                                                                                                                           Page  198 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006660 99846D9281869281                   9859          DC    C'rd_kafka_set_log_queue'
00006676 00                                 9860          DC    X'00'
                                            9861 rd_kafka_set_log_queue DCCPRLG CINDEX=583,BASER=12,FRAME=208,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME583
                                            9862          macro
                                            9863          dccextrn &m
                                            9864          gblc    &$dccext(1000)
                                            9865          gbla    &$dccexti
                                            9866          lcla    &i
                                            9867 &$dccext(&$dccexti+1) setc    '&m'
                                            9868 &i       seta    1
                                            9869 .loop    aif    (&i gt &$dccexti).around
                                            9870          aif    ('&$dccext(&i)' eq '&m').getout
                                            9871 &i       seta    &i+1
                                            9872          ago     .loop
                                            9873 .around  anop
                                            9874 &$dccexti seta &$dccexti+1
                                            9875          extrn  &m
                                            9876 .getout  anop
                                            9877          mend
00006678                                    9878+$eye0180    ds    0d                                                    02-DCCCA
00006678 C4C3C3                             9879+         dc cl3'DCC'                                                    02-DCCCA
0000667B 01                                 9880+         dc xl1'01' format one                                          02-DCCCA
0000667C 00000000                           9881+         dc a(0)                                                        02-DCCCA
00006680 00000000000066EA                   9882+         dc ad(@PER_583)                                                02-DCCCA
00006688 00000000000000D0                   9883+         dc ad(208)                                                     02-DCCCA
00006690 0000000000000000                   9884+         dc ad(0)                                                       02-DCCCA
00006698 0000000000001000                   9885+         dc ad(4096)                                                    02-DCCCA
000066A0 20                                 9886+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000066A1 03                                 9887+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000066A2 03                                 9888+         dc al1(3)                                                      02-DCCCA
000066A3 08                                 9889+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000066A4 00                                 9890+         dc bl.8'00000000'                                              02-DCCCA
000066A5 000000                             9891+         dc al3(0)                                                      02-DCCCA
000066A8 000000000000665C                   9892+         dc ad(@LNAME583)                                               02-DCCCA
000066B0                                    9893+         ds 0d                                                          02-DCCCA
000066B0 0000000000006678                   9894+         dc ad($eye0180)                                                02-DCCCA
000066B8 0000000000000000                   9895+         dc ad(0)                                                       02-DCCCA
000066C0                                    9896+         ds    0d                                                       01-DCCPR
                                            9897+         entry rd_kafka_set_log_queue                                   01-DCCPR
000066C0                                    9898+rd_kafka_set_log_queue ds 0d                                            01-DCCPR
000066C0                                    9899+@REGION_583_1 ds 0h                                                     01-DCCPR
000066C0 EBEC D008 0024          00000008   9900+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000066C6 E3E0 D088 0004          00000088   9901+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000066CC E3C0 D090 0004          00000090   9902+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000066D2 B904 002E                          9903+         lgr   2,14                copy addr of our savearea            01-DCCPR
000066D6 E3B0 C018 0004          00000018   9904+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000066DC A7EB 00D0               000000D0   9905+         aghi  14,208              increase by frame size               01-DCCPR
000066E0 E3E0 C020 0021          00000020   9906+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000066E6 4720 B020               00000020   9907+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000066EA                                    9908+@PER_583 ds    0h                                                       01-DCCPR
000066EA EBDE 2080 0024          00000080   9909+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page  199 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000066F0 E3C0 2090 0024          00000090   9910+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000066F6 B904 00D2                          9911+         lgr   13,2                set real frame pointer               01-DCCPR
000066FA B904 00CF                          9912+         lgr   12,15               set base reg                         01-DCCPR
                        000066C0            9913+         using @REGION_583_1,12                                         01-DCCPR
                                            9914 * ******* End of Prologue
                                            9915 * *
                                            9916 * ***           rd_kafka_q_t *rkq;
                                            9917 * ***           if (!rkqu)
000066FE E3F0 1008 0004          00000008   9918          LG    15,8(0,1)   ; rkqu
00006704 B902 002F                          9919          LTGR  2,15
00006708 4770 C070               00006730   9920          BNZ   @L839
                                            9921 * ***                   rkq = rk->rk_rep;
0000670C E3F0 1000 0004          00000000   9922          LG    15,0(0,1)   ; rk
00006712 E3F0 F000 0004          00000000   9923          LG    15,0(0,15)  ; rk
00006718 47F0 C076               00006736   9924          B     @L840
00006720                                    9925          DS    0D
00006720 000000D0                           9926 @FRAMESIZE_583 DC F'208'
00006724 00000000
00006728 0000000000003EB0                   9927 @lit_583_361 DC AD(rd_kafka_q_fwd_set0)
                                            9928 * ***           else
00006730                                    9929 @L839    DS    0H
                                            9930 * ***                   rkq = rkqu->rkqu_q;
00006730 E3F0 F000 0004          00000000   9931          LG    15,0(0,15)  ; rkqu
00006736                                    9932 @L840    DS    0H
                                            9933 * ***           rd_kafka_q_fwd_set0(rk->rk_logq,rkq,1 , 0 );
00006736 E310 1000 0004          00000000   9934          LG    1,0(0,1)    ; rk
0000673C E310 18D8 0004          000008D8   9935          LG    1,2264(0,1)
00006742 E310 D0B0 0024          000000B0   9936          STG   1,176(0,13)
00006748 E3F0 D0B8 0024          000000B8   9937          STG   15,184(0,13)
0000674E E548 D0C0 0001          000000C0   9938          MVGHI 192(13),1
00006754 D707 D0C8 D0C8 000000C8 000000C8   9939          XC    200(8,13),200(13)
0000675A 4110 D0B0               000000B0   9940          LA    1,176(0,13)
0000675E E3F0 C068 0004          00006728   9941          LG    15,@lit_583_361 ; rd_kafka_q_fwd_set0
00006764                                    9942 @@gen_label636 DS    0H
00006764 05EF                               9943          BALR  14,15
00006766                                    9944 @@gen_label637 DS    0H
                                            9945 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
00006766 A7F9 0000               00000000   9946          LGHI  15,0        ; 0
                                            9947 * ***   }
                                            9948 * * **** Start of Epilogue
                                            9949          DCCEPIL
0000676A                                    9950+         ds 0h                                                          01-DCCEP
                                            9951+* Epilog
0000676A D707 D088 D088 00000088 00000088   9952+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006770 E3D0 D080 0004          00000080   9953+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006776 E3C0 D090 0004          00000090   9954+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000677C E3B0 C018 0004          00000018   9955+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006782 E3C0 B010 0021          00000010   9956+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006788 E3E0 D008 0004          00000008   9957+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000678E EB1C D020 0004          00000020   9958+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006794 078E                               9959+         bcr 8,14                if same dsab, just return              01-DCCEP
00006796 E3F0 D010 0024          00000010   9960+         stg 15,16(0,13)         save return code                       01-DCCEP
                                                                                                                           Page  200 
  Active Usings: @REGION_583_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000679C E300 D018 0024          00000018   9961+         stg 0,24(0,13)          save more return code                  01-DCCEP
000067A2 E3F0 D090 0004          00000090   9962+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000067A8 E3F0 F018 0004          00000018   9963+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000067AE 47F0 F040               00000040   9964+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9965+* End of Epilog
                                            9966 * * **** End of Epilogue
                                            9967          DROP  12
                                            9968 *
                                            9969 *   DSECT for automatic variables in "rd_kafka_set_log_queue"
                                            9970 *      (FUNCTION #583)
                                            9971 *
00000000                00000000 000000A8   9972 @AUTO#rd_kafka_set_log_queue DSECT
00000000                                    9973          DS    XL168
                                            9974 *
000067B2                00000000 00007BF0   9975 @CODE    CSECT
                                            9976 *
                                            9977 *
                                            9978 *
                                            9979 * ....... start of rd_kafka_queue_forward
                                            9980 rd_kafka_queue_forward ALIAS X'99846D92818692816D98A485A4856D869699A681*
                                                                9984'
000067B2                                    9981 @LNAME582 DS   0H
000067B2 00000016                           9982          DC    X'00000016'
000067B6 99846D9281869281                   9983          DC    C'rd_kafka_queue_forward'
000067CC 00                                 9984          DC    X'00'
                                            9985 rd_kafka_queue_forward DCCPRLG CINDEX=582,BASER=12,FRAME=200,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME582
                                            9986          macro
                                            9987          dccextrn &m
                                            9988          gblc    &$dccext(1000)
                                            9989          gbla    &$dccexti
                                            9990          lcla    &i
                                            9991 &$dccext(&$dccexti+1) setc    '&m'
                                            9992 &i       seta    1
                                            9993 .loop    aif    (&i gt &$dccexti).around
                                            9994          aif    ('&$dccext(&i)' eq '&m').getout
                                            9995 &i       seta    &i+1
                                            9996          ago     .loop
                                            9997 .around  anop
                                            9998 &$dccexti seta &$dccexti+1
                                            9999          extrn  &m
                                           10000 .getout  anop
                                           10001          mend
000067D0                                   10002+$eye0183    ds    0d                                                    02-DCCCA
000067D0 C4C3C3                            10003+         dc cl3'DCC'                                                    02-DCCCA
000067D3 01                                10004+         dc xl1'01' format one                                          02-DCCCA
000067D4 00000000                          10005+         dc a(0)                                                        02-DCCCA
000067D8 0000000000006842                  10006+         dc ad(@PER_582)                                                02-DCCCA
000067E0 00000000000000C8                  10007+         dc ad(200)                                                     02-DCCCA
000067E8 0000000000000000                  10008+         dc ad(0)                                                       02-DCCCA
000067F0 0000000000001000                  10009+         dc ad(4096)                                                    02-DCCCA
000067F8 20                                10010+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page  201 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000067F9 03                                10011+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000067FA 03                                10012+         dc al1(3)                                                      02-DCCCA
000067FB 08                                10013+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000067FC 00                                10014+         dc bl.8'00000000'                                              02-DCCCA
000067FD 000000                            10015+         dc al3(0)                                                      02-DCCCA
00006800 00000000000067B2                  10016+         dc ad(@LNAME582)                                               02-DCCCA
00006808                                   10017+         ds 0d                                                          02-DCCCA
00006808 00000000000067D0                  10018+         dc ad($eye0183)                                                02-DCCCA
00006810 0000000000000000                  10019+         dc ad(0)                                                       02-DCCCA
00006818                                   10020+         ds    0d                                                       01-DCCPR
                                           10021+         entry rd_kafka_queue_forward                                   01-DCCPR
00006818                                   10022+rd_kafka_queue_forward ds 0d                                            01-DCCPR
00006818                                   10023+@REGION_582_1 ds 0h                                                     01-DCCPR
00006818 EBEC D008 0024          00000008  10024+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000681E E3E0 D088 0004          00000088  10025+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006824 E3C0 D090 0004          00000090  10026+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000682A B904 002E                         10027+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000682E E3B0 C018 0004          00000018  10028+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006834 A7EB 00C8               000000C8  10029+         aghi  14,200              increase by frame size               01-DCCPR
00006838 E3E0 C020 0021          00000020  10030+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000683E 4720 B020               00000020  10031+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006842                                   10032+@PER_582 ds    0h                                                       01-DCCPR
00006842 EBDE 2080 0024          00000080  10033+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006848 E3C0 2090 0024          00000090  10034+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000684E B904 00D2                         10035+         lgr   13,2                set real frame pointer               01-DCCPR
00006852 B904 00CF                         10036+         lgr   12,15               set base reg                         01-DCCPR
                        00006818           10037+         using @REGION_582_1,12                                         01-DCCPR
                                           10038 * ******* End of Prologue
                                           10039 * *
                                           10040 * ***           rd_kafka_q_fwd_set0(src->rkqu_q, dst ? dst->rkqu_q : (\
                                           10041 * (void *)0),
                                           10042 * ***                               1,
                                           10043 * ***                               1 );
00006856 E3F0 1008 0004          00000008  10044          LG    15,8(0,1)   ; dst
0000685C B902 002F                         10045          LTGR  2,15
00006860 4780 C068               00006880  10046          BZ    @L841
00006864 E3F0 F000 0004          00000000  10047          LG    15,0(0,15)  ; dst
0000686A 47F0 C06C               00006884  10048          B     @L842
00006870                                   10049          DS    0D
00006870 000000C8                          10050 @FRAMESIZE_582 DC F'200'
00006874 00000000
00006878 0000000000003EB0                  10051 @lit_582_365 DC AD(rd_kafka_q_fwd_set0)
00006880                                   10052 @L841    DS    0H
00006880 A7F9 0000               00000000  10053          LGHI  15,0        ; 0
00006884                                   10054 @L842    DS    0H
00006884 E310 1000 0004          00000000  10055          LG    1,0(0,1)    ; src
0000688A E310 1000 0004          00000000  10056          LG    1,0(0,1)
00006890 E310 D0A8 0024          000000A8  10057          STG   1,168(0,13)
00006896 E3F0 D0B0 0024          000000B0  10058          STG   15,176(0,13)
0000689C E548 D0B8 0001          000000B8  10059          MVGHI 184(13),1
000068A2 E548 D0C0 0001          000000C0  10060          MVGHI 192(13),1
000068A8 4110 D0A8               000000A8  10061          LA    1,168(0,13)
                                                                                                                           Page  202 
  Active Usings: @REGION_582_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000068AC E3F0 C060 0004          00006878  10062          LG    15,@lit_582_365 ; rd_kafka_q_fwd_set0
000068B2                                   10063 @@gen_label639 DS    0H
000068B2 05EF                              10064          BALR  14,15
000068B4                                   10065 @@gen_label640 DS    0H
                                           10066 * ***   }
000068B4                                   10067 @ret_lab_582 DS 0H
                                           10068 * * **** Start of Epilogue
                                           10069          DCCEPIL
000068B4                                   10070+         ds 0h                                                          01-DCCEP
                                           10071+* Epilog
000068B4 D707 D088 D088 00000088 00000088  10072+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000068BA E3D0 D080 0004          00000080  10073+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000068C0 E3C0 D090 0004          00000090  10074+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000068C6 E3B0 C018 0004          00000018  10075+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000068CC E3C0 B010 0021          00000010  10076+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000068D2 E3E0 D008 0004          00000008  10077+         lg  14,8(0,13)          load up return address                 01-DCCEP
000068D8 EB1C D020 0004          00000020  10078+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000068DE 078E                              10079+         bcr 8,14                if same dsab, just return              01-DCCEP
000068E0 E3F0 D010 0024          00000010  10080+         stg 15,16(0,13)         save return code                       01-DCCEP
000068E6 E300 D018 0024          00000018  10081+         stg 0,24(0,13)          save more return code                  01-DCCEP
000068EC E3F0 D090 0004          00000090  10082+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000068F2 E3F0 F018 0004          00000018  10083+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000068F8 47F0 F040               00000040  10084+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10085+* End of Epilog
                                           10086 * * **** End of Epilogue
                                           10087          DROP  12
                                           10088 *
                                           10089 *   DSECT for automatic variables in "rd_kafka_queue_forward"
                                           10090 *      (FUNCTION #582)
                                           10091 *
00000000                00000000 000000A8  10092 @AUTO#rd_kafka_queue_forward DSECT
00000000                                   10093          DS    XL168
                                           10094 *
000068FC                00000000 00007BF0  10095 @CODE    CSECT
                                           10096 *
                                           10097 *
                                           10098 *
                                           10099 * ....... start of rd_kafka_queue_length
                                           10100 rd_kafka_queue_length ALIAS X'99846D92818692816D98A485A4856D93859587A38*
                                                                8'
000068FC                                   10101 @LNAME584 DS   0H
000068FC 00000015                          10102          DC    X'00000015'
00006900 99846D9281869281                  10103          DC    C'rd_kafka_queue_length'
00006915 00                                10104          DC    X'00'
                                           10105 rd_kafka_queue_length DCCPRLG CINDEX=584,BASER=12,FRAME=176,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME584
                                           10106          macro
                                           10107          dccextrn &m
                                           10108          gblc    &$dccext(1000)
                                           10109          gbla    &$dccexti
                                           10110          lcla    &i
                                           10111 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page  203 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10112 &i       seta    1
                                           10113 .loop    aif    (&i gt &$dccexti).around
                                           10114          aif    ('&$dccext(&i)' eq '&m').getout
                                           10115 &i       seta    &i+1
                                           10116          ago     .loop
                                           10117 .around  anop
                                           10118 &$dccexti seta &$dccexti+1
                                           10119          extrn  &m
                                           10120 .getout  anop
                                           10121          mend
00006918                                   10122+$eye0186    ds    0d                                                    02-DCCCA
00006918 C4C3C3                            10123+         dc cl3'DCC'                                                    02-DCCCA
0000691B 01                                10124+         dc xl1'01' format one                                          02-DCCCA
0000691C 00000000                          10125+         dc a(0)                                                        02-DCCCA
00006920 000000000000698A                  10126+         dc ad(@PER_584)                                                02-DCCCA
00006928 00000000000000B0                  10127+         dc ad(176)                                                     02-DCCCA
00006930 0000000000000000                  10128+         dc ad(0)                                                       02-DCCCA
00006938 0000000000001000                  10129+         dc ad(4096)                                                    02-DCCCA
00006940 20                                10130+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006941 03                                10131+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006942 03                                10132+         dc al1(3)                                                      02-DCCCA
00006943 08                                10133+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006944 00                                10134+         dc bl.8'00000000'                                              02-DCCCA
00006945 000000                            10135+         dc al3(0)                                                      02-DCCCA
00006948 00000000000068FC                  10136+         dc ad(@LNAME584)                                               02-DCCCA
00006950                                   10137+         ds 0d                                                          02-DCCCA
00006950 0000000000006918                  10138+         dc ad($eye0186)                                                02-DCCCA
00006958 0000000000000000                  10139+         dc ad(0)                                                       02-DCCCA
00006960                                   10140+         ds    0d                                                       01-DCCPR
                                           10141+         entry rd_kafka_queue_length                                    01-DCCPR
00006960                                   10142+rd_kafka_queue_length ds 0d                                             01-DCCPR
00006960                                   10143+@REGION_584_1 ds 0h                                                     01-DCCPR
00006960 EBEC D008 0024          00000008  10144+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006966 E3E0 D088 0004          00000088  10145+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000696C E3C0 D090 0004          00000090  10146+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006972 B904 002E                         10147+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006976 E3B0 C018 0004          00000018  10148+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000697C A7EB 00B0               000000B0  10149+         aghi  14,176              increase by frame size               01-DCCPR
00006980 E3E0 C020 0021          00000020  10150+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006986 4720 B020               00000020  10151+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000698A                                   10152+@PER_584 ds    0h                                                       01-DCCPR
0000698A EBDE 2080 0024          00000080  10153+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006990 E3C0 2090 0024          00000090  10154+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006996 B904 00D2                         10155+         lgr   13,2                set real frame pointer               01-DCCPR
0000699A B904 00CF                         10156+         lgr   12,15               set base reg                         01-DCCPR
                        00006960           10157+         using @REGION_584_1,12                                         01-DCCPR
                                           10158 * ******* End of Prologue
                                           10159 * *
                                           10160 * ***      return (size_t)rd_kafka_q_len(rkqu->rkqu_q);
0000699E E3F0 1000 0004          00000000  10161          LG    15,0(0,1)   ; rkqu
000069A4 E3F0 F000 0004          00000000  10162          LG    15,0(0,15)
000069AA E3F0 D0A8 0024          000000A8  10163          STG   15,168(0,13)
                                                                                                                           Page  204 
  Active Usings: @REGION_584_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000069B0 4110 D0A8               000000A8  10164          LA    1,168(0,13)
000069B4 E3F0 C0B0 0004          00006A10  10165          LG    15,@lit_584_367 ; rd_kafka_q_len
000069BA                                   10166 @@gen_label641 DS    0H
000069BA 05EF                              10167          BALR  14,15
000069BC                                   10168 @@gen_label642 DS    0H
000069BC B914 00FF                         10169          LGFR  15,15
                                           10170 * ***   }
                                           10171 * * **** Start of Epilogue
                                           10172          DCCEPIL
000069C0                                   10173+         ds 0h                                                          01-DCCEP
                                           10174+* Epilog
000069C0 D707 D088 D088 00000088 00000088  10175+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000069C6 E3D0 D080 0004          00000080  10176+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000069CC E3C0 D090 0004          00000090  10177+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000069D2 E3B0 C018 0004          00000018  10178+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000069D8 E3C0 B010 0021          00000010  10179+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000069DE E3E0 D008 0004          00000008  10180+         lg  14,8(0,13)          load up return address                 01-DCCEP
000069E4 EB1C D020 0004          00000020  10181+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000069EA 078E                              10182+         bcr 8,14                if same dsab, just return              01-DCCEP
000069EC E3F0 D010 0024          00000010  10183+         stg 15,16(0,13)         save return code                       01-DCCEP
000069F2 E300 D018 0024          00000018  10184+         stg 0,24(0,13)          save more return code                  01-DCCEP
000069F8 E3F0 D090 0004          00000090  10185+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000069FE E3F0 F018 0004          00000018  10186+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006A04 47F0 F040               00000040  10187+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10188+* End of Epilog
                                           10189 * * **** End of Epilogue
00006A08                                   10190          DS    0D
00006A08 000000B0                          10191 @FRAMESIZE_584 DC F'176'
00006A0C 00000000
00006A10 0000000000002A00                  10192 @lit_584_367 DC AD(rd_kafka_q_len)
                                           10193          DROP  12
                                           10194 *
                                           10195 *   DSECT for automatic variables in "rd_kafka_queue_length"
                                           10196 *      (FUNCTION #584)
                                           10197 *
00000000                00000000 000000A8  10198 @AUTO#rd_kafka_queue_length DSECT
00000000                                   10199          DS    XL168
                                           10200 *
00006A18                00000000 00007BF0  10201 @CODE    CSECT
                                           10202 *
                                           10203 *
                                           10204 *
                                           10205 * ....... start of rd_kafka_q_io_event_enable
                                           10206 rd_kafka_q_io_event_enable ALIAS X'99846D92818692816D986D89966D85A58595*
                                                                A36D859581829385'
00006A18                                   10207 @LNAME1471 DS  0H
00006A18 0000001A                          10208          DC    X'0000001A'
00006A1C 99846D9281869281                  10209          DC    C'rd_kafka_q_io_event_enable'
00006A36 00                                10210          DC    X'00'
                                           10211 rd_kafka_q_io_event_enable DCCPRLG CINDEX=1471,BASER=12,FRAME=184,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME1471
                                           10212          macro
                                                                                                                           Page  205 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10213          dccextrn &m
                                           10214          gblc    &$dccext(1000)
                                           10215          gbla    &$dccexti
                                           10216          lcla    &i
                                           10217 &$dccext(&$dccexti+1) setc    '&m'
                                           10218 &i       seta    1
                                           10219 .loop    aif    (&i gt &$dccexti).around
                                           10220          aif    ('&$dccext(&i)' eq '&m').getout
                                           10221 &i       seta    &i+1
                                           10222          ago     .loop
                                           10223 .around  anop
                                           10224 &$dccexti seta &$dccexti+1
                                           10225          extrn  &m
                                           10226 .getout  anop
                                           10227          mend
00006A38                                   10228+$eye0189    ds    0d                                                    02-DCCCA
00006A38 C4C3C3                            10229+         dc cl3'DCC'                                                    02-DCCCA
00006A3B 01                                10230+         dc xl1'01' format one                                          02-DCCCA
00006A3C 00000000                          10231+         dc a(0)                                                        02-DCCCA
00006A40 0000000000006AAA                  10232+         dc ad(@PER_1471)                                               02-DCCCA
00006A48 00000000000000B8                  10233+         dc ad(184)                                                     02-DCCCA
00006A50 0000000000000000                  10234+         dc ad(0)                                                       02-DCCCA
00006A58 0000000000001000                  10235+         dc ad(4096)                                                    02-DCCCA
00006A60 20                                10236+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006A61 03                                10237+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006A62 03                                10238+         dc al1(3)                                                      02-DCCCA
00006A63 08                                10239+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006A64 00                                10240+         dc bl.8'00000000'                                              02-DCCCA
00006A65 000000                            10241+         dc al3(0)                                                      02-DCCCA
00006A68 0000000000006A18                  10242+         dc ad(@LNAME1471)                                              02-DCCCA
00006A70                                   10243+         ds 0d                                                          02-DCCCA
00006A70 0000000000006A38                  10244+         dc ad($eye0189)                                                02-DCCCA
00006A78 0000000000000000                  10245+         dc ad(0)                                                       02-DCCCA
00006A80                                   10246+         ds    0d                                                       01-DCCPR
                                           10247+         entry rd_kafka_q_io_event_enable                               01-DCCPR
00006A80                                   10248+rd_kafka_q_io_event_enable ds 0d                                        01-DCCPR
00006A80                                   10249+@REGION_1471_1 ds 0h                                                    01-DCCPR
00006A80 EBEC D008 0024          00000008  10250+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006A86 E3E0 D088 0004          00000088  10251+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006A8C E3C0 D090 0004          00000090  10252+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006A92 B904 002E                         10253+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006A96 E3B0 C018 0004          00000018  10254+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006A9C A7EB 00B8               000000B8  10255+         aghi  14,184              increase by frame size               01-DCCPR
00006AA0 E3E0 C020 0021          00000020  10256+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006AA6 4720 B020               00000020  10257+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006AAA                                   10258+@PER_1471 ds   0h                                                       01-DCCPR
00006AAA EBDE 2080 0024          00000080  10259+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006AB0 E3C0 2090 0024          00000090  10260+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006AB6 B904 00D2                         10261+         lgr   13,2                set real frame pointer               01-DCCPR
00006ABA B904 00CF                         10262+         lgr   12,15               set base reg                         01-DCCPR
                        00006A80           10263+         using @REGION_1471_1,12                                        01-DCCPR
00006ABE B904 0061                         10264          LGR   6,1         ; ptr to parm area
                                                                                                                           Page  206 
  Active Usings: @REGION_1471_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10265 * ******* End of Prologue
                                           10266 * *
                                           10267 * ***           struct rd_kafka_q_io *qio = ((void *)0);
00006AC2 E330 6000 0004          00000000  10268          LG    3,0(0,6)    ; rkq
00006AC8 5840 600C               0000000C  10269          L     4,12(0,6)   ; fd
00006ACC E350 6018 0004          00000018  10270          LG    5,24(0,6)   ; size
00006AD2 A779 0000               00000000  10271          LGHI  7,0         ; 0
00006AD6 B904 0027                         10272          LGR   2,7         ; qio
                                           10273 * ***
                                           10274 * ***           if (fd != -1) {
00006ADA A74E FFFF               0000FFFF  10275          CHI   4,-1
00006ADE 4780 C0E2               00006B62  10276          BE    @L843
                                           10277 * ***                   qio = rd_malloc(sizeof(*qio) + size);
00006AE2 B904 00F5                         10278          LGR   15,5
00006AE6 A7FB 0030               00000030  10279          AGHI  15,48
00006AEA E3F0 D0B0 0024          000000B0  10280          STG   15,176(0,13)
00006AF0 4110 D0B0               000000B0  10281          LA    1,176(0,13)
00006AF4 E3F0 C190 0004          00006C10  10282          LG    15,@lit_1471_370 ; rd_malloc
00006AFA                                   10283 @@gen_label644 DS    0H
00006AFA 05EF                              10284          BALR  14,15
00006AFC                                   10285 @@gen_label645 DS    0H
00006AFC B904 002F                         10286          LGR   2,15        ; qio
                                           10287 * ***                   qio->fd = fd;
00006B00 5040 F000               00000000  10288          ST    4,0(0,15)   ; qio
                                           10289 * ***                   qio->size = size;
00006B04 E350 F010 0024          00000010  10290          STG   5,16(0,15)  ; offset of size in rd_kafka_q_io
                                           10291 * ***                   qio->payload = (void *)(qio+1);
00006B0A 4110 F030               00000030  10292          LA    1,48(0,15)
00006B0E E310 F008 0024          00000008  10293          STG   1,8(0,15)   ; offset of payload in rd_kafka_q_io
                                           10294 * ***                   qio->sent = 0;
00006B14 9200 F018      00000018 00000000  10295          MVI   24(15),0    ; offset of sent in rd_kafka_q_io
                                           10296 * ***                   qio->event_cb = ((void *)0);
00006B18 E370 F020 0024          00000020  10297          STG   7,32(0,15)  ; offset of event_cb in rd_kafka_q_io
                                           10298 * ***                   qio->event_cb_opaque = ((void *)0);
00006B1E E370 F028 0024          00000028  10299          STG   7,40(0,15)  ; offset of event_cb_opaque in rd_kafka_q_io
                                           10300 * ***                   __memcpy(qio->payload,payload,size);
00006B24 E310 6010 0004          00000010  10301          LG    1,16(0,6)
00006B2A E360 F008 0004          00000008  10302          LG    6,8(0,15)
00006B30 B902 00F5                         10303          LTGR  15,5
00006B34 4780 C0E2               00006B62  10304          BZ    @@gen_label648
00006B38 A7FB FFFF               0000FFFF  10305          AGHI  15,-1
00006B3C EB5F 0008 000A          00000008  10306          SRAG  5,15,8(0)
00006B42 B902 0055                         10307          LTGR  5,5
00006B46 4780 C0DE               00006B5E  10308          BZ    @@gen_label647
00006B4A                                   10309 @@gen_label646 DS 0H
00006B4A D2FF 6000 1000 00000000 00000000  10310          MVC   0(256,6),0(1)
00006B50 4160 6100               00000100  10311          LA    6,256(0,6)
00006B54 4110 1100               00000100  10312          LA    1,256(0,1)
00006B58 E350 C0CA 0046          00006B4A  10313          BCTG  5,@@gen_label646
00006B5E                                   10314 @@gen_label647 DS 0H
00006B5E 44F0 C198               00006C18  10315          EX    15,@lit_1471_373
00006B62                                   10316 @@gen_label648 DS 0H
                                                                                                                           Page  207 
  Active Usings: @REGION_1471_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10317 * ***           }
00006B62                                   10318 @L843    DS    0H
                                           10319 * ***
                                           10320 * ***           mtx_lock(&rkq->rkq_lock);
00006B62 E330 D0B0 0024          000000B0  10321          STG   3,176(0,13)
00006B68 4110 D0B0               000000B0  10322          LA    1,176(0,13)
00006B6C E3F0 C1A0 0004          00006C20  10323          LG    15,@lit_1471_374 ; mtx_lock
00006B72                                   10324 @@gen_label649 DS    0H
00006B72 05EF                              10325          BALR  14,15
00006B74                                   10326 @@gen_label650 DS    0H
                                           10327 * ***           if (rkq->rkq_qio) {
00006B74 E3F0 3090 0002          00000090  10328          LTG   15,144(0,3) ; offset of rkq_qio in rd_kafka_q_s
00006B7A 4780 C120               00006BA0  10329          BZ    @L844
                                           10330 * ***                   rd_free(rkq->rkq_qio);
00006B7E E3F0 3090 0004          00000090  10331          LG    15,144(0,3)
00006B84 E3F0 D0B0 0024          000000B0  10332          STG   15,176(0,13)
00006B8A 4110 D0B0               000000B0  10333          LA    1,176(0,13)
00006B8E E3F0 C1A8 0004          00006C28  10334          LG    15,@lit_1471_375 ; rd_free
00006B94                                   10335 @@gen_label652 DS    0H
00006B94 05EF                              10336          BALR  14,15
00006B96                                   10337 @@gen_label653 DS    0H
                                           10338 * ***                   rkq->rkq_qio = ((void *)0);
00006B96 A7F9 0000               00000000  10339          LGHI  15,0        ; 0
00006B9A E3F0 3090 0024          00000090  10340          STG   15,144(0,3) ; offset of rkq_qio in rd_kafka_q_s
                                           10341 * ***           }
00006BA0                                   10342 @L844    DS    0H
                                           10343 * ***
                                           10344 * ***           if (fd != -1) {
00006BA0 A74E FFFF               0000FFFF  10345          CHI   4,-1
00006BA4 4780 C12E               00006BAE  10346          BE    @L845
                                           10347 * ***                   rkq->rkq_qio = qio;
00006BA8 E320 3090 0024          00000090  10348          STG   2,144(0,3)  ; offset of rkq_qio in rd_kafka_q_s
                                           10349 * ***           }
00006BAE                                   10350 @L845    DS    0H
                                           10351 * ***
                                           10352 * ***           mtx_unlock(&rkq->rkq_lock);
00006BAE E330 D0B0 0024          000000B0  10353          STG   3,176(0,13)
00006BB4 4110 D0B0               000000B0  10354          LA    1,176(0,13)
00006BB8 E3F0 C1B0 0004          00006C30  10355          LG    15,@lit_1471_377 ; mtx_unlock
00006BBE                                   10356 @@gen_label655 DS    0H
00006BBE 05EF                              10357          BALR  14,15
00006BC0                                   10358 @@gen_label656 DS    0H
                                           10359 * ***
                                           10360 * ***   }
00006BC0                                   10361 @ret_lab_1471 DS 0H
                                           10362 * * **** Start of Epilogue
                                           10363          DCCEPIL
00006BC0                                   10364+         ds 0h                                                          01-DCCEP
                                           10365+* Epilog
00006BC0 D707 D088 D088 00000088 00000088  10366+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006BC6 E3D0 D080 0004          00000080  10367+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006BCC E3C0 D090 0004          00000090  10368+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
                                                                                                                           Page  208 
  Active Usings: @REGION_1471_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006BD2 E3B0 C018 0004          00000018  10369+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006BD8 E3C0 B010 0021          00000010  10370+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006BDE E3E0 D008 0004          00000008  10371+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006BE4 EB1C D020 0004          00000020  10372+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006BEA 078E                              10373+         bcr 8,14                if same dsab, just return              01-DCCEP
00006BEC E3F0 D010 0024          00000010  10374+         stg 15,16(0,13)         save return code                       01-DCCEP
00006BF2 E300 D018 0024          00000018  10375+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006BF8 E3F0 D090 0004          00000090  10376+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006BFE E3F0 F018 0004          00000018  10377+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006C04 47F0 F040               00000040  10378+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10379+* End of Epilog
                                           10380 * * **** End of Epilogue
00006C08                                   10381          DS    0D
00006C08 000000B8                          10382 @FRAMESIZE_1471 DC F'184'
00006C0C 00000000
00006C10 0000000000000590                  10383 @lit_1471_370 DC AD(rd_malloc)
00006C18 D200 6000 1000 00000000 00000000  10384 @lit_1471_373          MVC 0(1,6),0(1)
00006C1E 0000
00006C20 0000000000000000                  10385 @lit_1471_374 DC AD(mtx_lock)
00006C28 00000000000006F8                  10386 @lit_1471_375 DC AD(rd_free)
00006C30 0000000000000000                  10387 @lit_1471_377 DC AD(mtx_unlock)
                                           10388          DROP  12
                                           10389 *
                                           10390 *   DSECT for automatic variables in "rd_kafka_q_io_event_enable"
                                           10391 *      (FUNCTION #1471)
                                           10392 *
00000000                00000000 000000A8  10393 @AUTO#rd_kafka_q_io_event_enable DSECT
00000000                                   10394          DS    XL168
                                           10395 *
00006C38                00000000 00007BF0  10396 @CODE    CSECT
                                           10397 *
                                           10398 *
                                           10399 *
                                           10400 * ....... start of rd_kafka_queue_io_event_enable
                                           10401 rd_kafka_queue_io_event_enable ALIAS X'99846D92818692816D98A485A4856D89*
                                                                966D85A58595A36D859581829385'
00006C38                                   10402 @LNAME585 DS   0H
00006C38 0000001E                          10403          DC    X'0000001E'
00006C3C 99846D9281869281                  10404          DC    C'rd_kafka_queue_io_event_enable'
00006C5A 00                                10405          DC    X'00'
                                           10406 rd_kafka_queue_io_event_enable DCCPRLG CINDEX=585,BASER=12,FRAME=200,EN*
                                                                TRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME585
                                           10407          macro
                                           10408          dccextrn &m
                                           10409          gblc    &$dccext(1000)
                                           10410          gbla    &$dccexti
                                           10411          lcla    &i
                                           10412 &$dccext(&$dccexti+1) setc    '&m'
                                           10413 &i       seta    1
                                           10414 .loop    aif    (&i gt &$dccexti).around
                                           10415          aif    ('&$dccext(&i)' eq '&m').getout
                                           10416 &i       seta    &i+1
                                                                                                                           Page  209 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10417          ago     .loop
                                           10418 .around  anop
                                           10419 &$dccexti seta &$dccexti+1
                                           10420          extrn  &m
                                           10421 .getout  anop
                                           10422          mend
00006C60                                   10423+$eye0192    ds    0d                                                    02-DCCCA
00006C60 C4C3C3                            10424+         dc cl3'DCC'                                                    02-DCCCA
00006C63 01                                10425+         dc xl1'01' format one                                          02-DCCCA
00006C64 00000000                          10426+         dc a(0)                                                        02-DCCCA
00006C68 0000000000006CD2                  10427+         dc ad(@PER_585)                                                02-DCCCA
00006C70 00000000000000C8                  10428+         dc ad(200)                                                     02-DCCCA
00006C78 0000000000000000                  10429+         dc ad(0)                                                       02-DCCCA
00006C80 0000000000001000                  10430+         dc ad(4096)                                                    02-DCCCA
00006C88 20                                10431+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006C89 03                                10432+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006C8A 03                                10433+         dc al1(3)                                                      02-DCCCA
00006C8B 08                                10434+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006C8C 00                                10435+         dc bl.8'00000000'                                              02-DCCCA
00006C8D 000000                            10436+         dc al3(0)                                                      02-DCCCA
00006C90 0000000000006C38                  10437+         dc ad(@LNAME585)                                               02-DCCCA
00006C98                                   10438+         ds 0d                                                          02-DCCCA
00006C98 0000000000006C60                  10439+         dc ad($eye0192)                                                02-DCCCA
00006CA0 0000000000000000                  10440+         dc ad(0)                                                       02-DCCCA
00006CA8                                   10441+         ds    0d                                                       01-DCCPR
                                           10442+         entry rd_kafka_queue_io_event_enable                           01-DCCPR
00006CA8                                   10443+rd_kafka_queue_io_event_enable ds 0d                                    01-DCCPR
00006CA8                                   10444+@REGION_585_1 ds 0h                                                     01-DCCPR
00006CA8 EBEC D008 0024          00000008  10445+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006CAE E3E0 D088 0004          00000088  10446+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006CB4 E3C0 D090 0004          00000090  10447+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006CBA B904 002E                         10448+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006CBE E3B0 C018 0004          00000018  10449+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006CC4 A7EB 00C8               000000C8  10450+         aghi  14,200              increase by frame size               01-DCCPR
00006CC8 E3E0 C020 0021          00000020  10451+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006CCE 4720 B020               00000020  10452+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006CD2                                   10453+@PER_585 ds    0h                                                       01-DCCPR
00006CD2 EBDE 2080 0024          00000080  10454+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006CD8 E3C0 2090 0024          00000090  10455+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006CDE B904 00D2                         10456+         lgr   13,2                set real frame pointer               01-DCCPR
00006CE2 B904 00CF                         10457+         lgr   12,15               set base reg                         01-DCCPR
                        00006CA8           10458+         using @REGION_585_1,12                                         01-DCCPR
                                           10459 * ******* End of Prologue
                                           10460 * *
                                           10461 * ***           rd_kafka_q_io_event_enable(rkqu->rkqu_q, fd, payload, \
                                           10462 * size);
00006CE6 E3F0 1000 0004          00000000  10463          LG    15,0(0,1)   ; rkqu
00006CEC E3F0 F000 0004          00000000  10464          LG    15,0(0,15)
00006CF2 E3F0 D0A8 0024          000000A8  10465          STG   15,168(0,13)
00006CF8 E3F0 100C 0014          0000000C  10466          LGF   15,12(0,1)  ; fd
00006CFE E3F0 D0B0 0024          000000B0  10467          STG   15,176(0,13)
00006D04 E3F0 1010 0004          00000010  10468          LG    15,16(0,1)  ; payload
                                                                                                                           Page  210 
  Active Usings: @REGION_585_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006D0A E3F0 D0B8 0024          000000B8  10469          STG   15,184(0,13)
00006D10 E3F0 1018 0004          00000018  10470          LG    15,24(0,1)  ; size
00006D16 E3F0 D0C0 0024          000000C0  10471          STG   15,192(0,13)
00006D1C 4110 D0A8               000000A8  10472          LA    1,168(0,13)
00006D20 E3F0 C0D0 0004          00006D78  10473          LG    15,@lit_585_379 ; rd_kafka_q_io_event_enable
00006D26                                   10474 @@gen_label657 DS    0H
00006D26 05EF                              10475          BALR  14,15
00006D28                                   10476 @@gen_label658 DS    0H
                                           10477 * ***   }
00006D28                                   10478 @ret_lab_585 DS 0H
                                           10479 * * **** Start of Epilogue
                                           10480          DCCEPIL
00006D28                                   10481+         ds 0h                                                          01-DCCEP
                                           10482+* Epilog
00006D28 D707 D088 D088 00000088 00000088  10483+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006D2E E3D0 D080 0004          00000080  10484+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006D34 E3C0 D090 0004          00000090  10485+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006D3A E3B0 C018 0004          00000018  10486+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006D40 E3C0 B010 0021          00000010  10487+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006D46 E3E0 D008 0004          00000008  10488+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006D4C EB1C D020 0004          00000020  10489+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006D52 078E                              10490+         bcr 8,14                if same dsab, just return              01-DCCEP
00006D54 E3F0 D010 0024          00000010  10491+         stg 15,16(0,13)         save return code                       01-DCCEP
00006D5A E300 D018 0024          00000018  10492+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006D60 E3F0 D090 0004          00000090  10493+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006D66 E3F0 F018 0004          00000018  10494+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006D6C 47F0 F040               00000040  10495+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10496+* End of Epilog
                                           10497 * * **** End of Epilogue
00006D70                                   10498          DS    0D
00006D70 000000C8                          10499 @FRAMESIZE_585 DC F'200'
00006D74 00000000
00006D78 0000000000006A80                  10500 @lit_585_379 DC AD(rd_kafka_q_io_event_enable)
                                           10501          DROP  12
                                           10502 *
                                           10503 *   DSECT for automatic variables in "rd_kafka_queue_io_event_enable"
                                           10504 *      (FUNCTION #585)
                                           10505 *
00000000                00000000 000000A8  10506 @AUTO#rd_kafka_queue_io_event_enable DSECT
00000000                                   10507          DS    XL168
                                           10508 *
00006D80                00000000 00007BF0  10509 @CODE    CSECT
                                           10510 *
                                           10511 *
                                           10512 *
                                           10513 * ....... start of rd_kafka_queue_yield
                                           10514 rd_kafka_queue_yield ALIAS X'99846D92818692816D98A485A4856DA889859384'
00006D80                                   10515 @LNAME587 DS   0H
00006D80 00000014                          10516          DC    X'00000014'
00006D84 99846D9281869281                  10517          DC    C'rd_kafka_queue_yield'
00006D98 00                                10518          DC    X'00'
                                           10519 rd_kafka_queue_yield DCCPRLG CINDEX=587,BASER=12,FRAME=176,ENTRY=YES,AR*
                                                                                                                           Page  211 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                CH=ZARCH,LNAMEADDR=@LNAME587
                                           10520          macro
                                           10521          dccextrn &m
                                           10522          gblc    &$dccext(1000)
                                           10523          gbla    &$dccexti
                                           10524          lcla    &i
                                           10525 &$dccext(&$dccexti+1) setc    '&m'
                                           10526 &i       seta    1
                                           10527 .loop    aif    (&i gt &$dccexti).around
                                           10528          aif    ('&$dccext(&i)' eq '&m').getout
                                           10529 &i       seta    &i+1
                                           10530          ago     .loop
                                           10531 .around  anop
                                           10532 &$dccexti seta &$dccexti+1
                                           10533          extrn  &m
                                           10534 .getout  anop
                                           10535          mend
00006DA0                                   10536+$eye0195    ds    0d                                                    02-DCCCA
00006DA0 C4C3C3                            10537+         dc cl3'DCC'                                                    02-DCCCA
00006DA3 01                                10538+         dc xl1'01' format one                                          02-DCCCA
00006DA4 00000000                          10539+         dc a(0)                                                        02-DCCCA
00006DA8 0000000000006E12                  10540+         dc ad(@PER_587)                                                02-DCCCA
00006DB0 00000000000000B0                  10541+         dc ad(176)                                                     02-DCCCA
00006DB8 0000000000000000                  10542+         dc ad(0)                                                       02-DCCCA
00006DC0 0000000000001000                  10543+         dc ad(4096)                                                    02-DCCCA
00006DC8 20                                10544+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006DC9 03                                10545+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006DCA 03                                10546+         dc al1(3)                                                      02-DCCCA
00006DCB 08                                10547+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006DCC 00                                10548+         dc bl.8'00000000'                                              02-DCCCA
00006DCD 000000                            10549+         dc al3(0)                                                      02-DCCCA
00006DD0 0000000000006D80                  10550+         dc ad(@LNAME587)                                               02-DCCCA
00006DD8                                   10551+         ds 0d                                                          02-DCCCA
00006DD8 0000000000006DA0                  10552+         dc ad($eye0195)                                                02-DCCCA
00006DE0 0000000000000000                  10553+         dc ad(0)                                                       02-DCCCA
00006DE8                                   10554+         ds    0d                                                       01-DCCPR
                                           10555+         entry rd_kafka_queue_yield                                     01-DCCPR
00006DE8                                   10556+rd_kafka_queue_yield ds 0d                                              01-DCCPR
00006DE8                                   10557+@REGION_587_1 ds 0h                                                     01-DCCPR
00006DE8 EBEC D008 0024          00000008  10558+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006DEE E3E0 D088 0004          00000088  10559+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006DF4 E3C0 D090 0004          00000090  10560+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006DFA B904 002E                         10561+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006DFE E3B0 C018 0004          00000018  10562+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006E04 A7EB 00B0               000000B0  10563+         aghi  14,176              increase by frame size               01-DCCPR
00006E08 E3E0 C020 0021          00000020  10564+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006E0E 4720 B020               00000020  10565+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006E12                                   10566+@PER_587 ds    0h                                                       01-DCCPR
00006E12 EBDE 2080 0024          00000080  10567+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006E18 E3C0 2090 0024          00000090  10568+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006E1E B904 00D2                         10569+         lgr   13,2                set real frame pointer               01-DCCPR
00006E22 B904 00CF                         10570+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page  212 
  Active Usings: @REGION_587_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00006DE8           10571+         using @REGION_587_1,12                                         01-DCCPR
                                           10572 * ******* End of Prologue
                                           10573 * *
                                           10574 * ***           rd_kafka_q_yield(rkqu->rkqu_q);
00006E26 E3F0 1000 0004          00000000  10575          LG    15,0(0,1)   ; rkqu
00006E2C E3F0 F000 0004          00000000  10576          LG    15,0(0,15)
00006E32 E3F0 D0A8 0024          000000A8  10577          STG   15,168(0,13)
00006E38 4110 D0A8               000000A8  10578          LA    1,168(0,13)
00006E3C E3F0 C0B0 0004          00006E98  10579          LG    15,@lit_587_381 ; rd_kafka_q_yield
00006E42                                   10580 @@gen_label659 DS    0H
00006E42 05EF                              10581          BALR  14,15
00006E44                                   10582 @@gen_label660 DS    0H
                                           10583 * ***   }
00006E44                                   10584 @ret_lab_587 DS 0H
                                           10585 * * **** Start of Epilogue
                                           10586          DCCEPIL
00006E44                                   10587+         ds 0h                                                          01-DCCEP
                                           10588+* Epilog
00006E44 D707 D088 D088 00000088 00000088  10589+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006E4A E3D0 D080 0004          00000080  10590+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006E50 E3C0 D090 0004          00000090  10591+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006E56 E3B0 C018 0004          00000018  10592+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006E5C E3C0 B010 0021          00000010  10593+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006E62 E3E0 D008 0004          00000008  10594+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006E68 EB1C D020 0004          00000020  10595+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006E6E 078E                              10596+         bcr 8,14                if same dsab, just return              01-DCCEP
00006E70 E3F0 D010 0024          00000010  10597+         stg 15,16(0,13)         save return code                       01-DCCEP
00006E76 E300 D018 0024          00000018  10598+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006E7C E3F0 D090 0004          00000090  10599+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006E82 E3F0 F018 0004          00000018  10600+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006E88 47F0 F040               00000040  10601+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10602+* End of Epilog
                                           10603 * * **** End of Epilogue
00006E90                                   10604          DS    0D
00006E90 000000B0                          10605 @FRAMESIZE_587 DC F'176'
00006E94 00000000
00006E98 00000000000018E0                  10606 @lit_587_381 DC AD(rd_kafka_q_yield)
                                           10607          DROP  12
                                           10608 *
                                           10609 *   DSECT for automatic variables in "rd_kafka_queue_yield"
                                           10610 *      (FUNCTION #587)
                                           10611 *
00000000                00000000 000000A8  10612 @AUTO#rd_kafka_queue_yield DSECT
00000000                                   10613          DS    XL168
                                           10614 *
00006EA0                00000000 00007BF0  10615 @CODE    CSECT
                                           10616 *
                                           10617 *
                                           10618 *
                                           10619 * ....... start of rd_kafka_q_cb_event_enable
                                           10620 rd_kafka_q_cb_event_enable ALIAS X'99846D92818692816D986D83826D85A58595*
                                                                A36D859581829385'
                                                                                                                           Page  213 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006EA0                                   10621 @LNAME1947 DS  0H
00006EA0 0000001A                          10622          DC    X'0000001A'
00006EA4 99846D9281869281                  10623          DC    C'rd_kafka_q_cb_event_enable'
00006EBE 00                                10624          DC    X'00'
                                           10625 rd_kafka_q_cb_event_enable DCCPRLG CINDEX=1947,BASER=12,FRAME=184,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME1947
                                           10626          macro
                                           10627          dccextrn &m
                                           10628          gblc    &$dccext(1000)
                                           10629          gbla    &$dccexti
                                           10630          lcla    &i
                                           10631 &$dccext(&$dccexti+1) setc    '&m'
                                           10632 &i       seta    1
                                           10633 .loop    aif    (&i gt &$dccexti).around
                                           10634          aif    ('&$dccext(&i)' eq '&m').getout
                                           10635 &i       seta    &i+1
                                           10636          ago     .loop
                                           10637 .around  anop
                                           10638 &$dccexti seta &$dccexti+1
                                           10639          extrn  &m
                                           10640 .getout  anop
                                           10641          mend
00006EC0                                   10642+$eye0198    ds    0d                                                    02-DCCCA
00006EC0 C4C3C3                            10643+         dc cl3'DCC'                                                    02-DCCCA
00006EC3 01                                10644+         dc xl1'01' format one                                          02-DCCCA
00006EC4 00000000                          10645+         dc a(0)                                                        02-DCCCA
00006EC8 0000000000006F32                  10646+         dc ad(@PER_1947)                                               02-DCCCA
00006ED0 00000000000000B8                  10647+         dc ad(184)                                                     02-DCCCA
00006ED8 0000000000000000                  10648+         dc ad(0)                                                       02-DCCCA
00006EE0 0000000000001000                  10649+         dc ad(4096)                                                    02-DCCCA
00006EE8 20                                10650+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006EE9 03                                10651+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006EEA 03                                10652+         dc al1(3)                                                      02-DCCCA
00006EEB 08                                10653+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006EEC 00                                10654+         dc bl.8'00000000'                                              02-DCCCA
00006EED 000000                            10655+         dc al3(0)                                                      02-DCCCA
00006EF0 0000000000006EA0                  10656+         dc ad(@LNAME1947)                                              02-DCCCA
00006EF8                                   10657+         ds 0d                                                          02-DCCCA
00006EF8 0000000000006EC0                  10658+         dc ad($eye0198)                                                02-DCCCA
00006F00 0000000000000000                  10659+         dc ad(0)                                                       02-DCCCA
00006F08                                   10660+         ds    0d                                                       01-DCCPR
                                           10661+         entry rd_kafka_q_cb_event_enable                               01-DCCPR
00006F08                                   10662+rd_kafka_q_cb_event_enable ds 0d                                        01-DCCPR
00006F08                                   10663+@REGION_1947_1 ds 0h                                                    01-DCCPR
00006F08 EBEC D008 0024          00000008  10664+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006F0E E3E0 D088 0004          00000088  10665+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006F14 E3C0 D090 0004          00000090  10666+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006F1A B904 002E                         10667+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006F1E E3B0 C018 0004          00000018  10668+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006F24 A7EB 00B8               000000B8  10669+         aghi  14,184              increase by frame size               01-DCCPR
00006F28 E3E0 C020 0021          00000020  10670+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006F2E 4720 B020               00000020  10671+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page  214 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006F32                                   10672+@PER_1947 ds   0h                                                       01-DCCPR
00006F32 EBDE 2080 0024          00000080  10673+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006F38 E3C0 2090 0024          00000090  10674+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006F3E B904 00D2                         10675+         lgr   13,2                set real frame pointer               01-DCCPR
00006F42 B904 00CF                         10676+         lgr   12,15               set base reg                         01-DCCPR
                        00006F08           10677+         using @REGION_1947_1,12                                        01-DCCPR
00006F46 B904 0051                         10678          LGR   5,1         ; ptr to parm area
                                           10679 * ******* End of Prologue
                                           10680 * *
                                           10681 * ***           struct rd_kafka_q_io *qio = ((void *)0);
00006F4A EB34 5000 0004          00000000  10682          LMG   3,4,0(5)    ; rkq
00006F50 A769 0000               00000000  10683          LGHI  6,0         ; 0
00006F54 B904 0026                         10684          LGR   2,6         ; qio
                                           10685 * ***
                                           10686 * ***           if (event_cb) {
00006F58 B902 00F4                         10687          LTGR  15,4
00006F5C 4780 C092               00006F9A  10688          BZ    @L846
                                           10689 * ***                   qio = rd_malloc(sizeof(*qio));
00006F60 E548 D0B0 0030          000000B0  10690          MVGHI 176(13),48
00006F66 4110 D0B0               000000B0  10691          LA    1,176(0,13)
00006F6A E3F0 C140 0004          00007048  10692          LG    15,@lit_1947_384 ; rd_malloc
00006F70                                   10693 @@gen_label662 DS    0H
00006F70 05EF                              10694          BALR  14,15
00006F72                                   10695 @@gen_label663 DS    0H
00006F72 B904 002F                         10696          LGR   2,15        ; qio
                                           10697 * ***                   qio->fd = -1;
00006F76 E54C F000 FFFF          00000000  10698          MVHI  0(15),-1    ; qio
                                           10699 * ***                   qio->size = 0;
00006F7C E548 F010 0000          00000010  10700          MVGHI 16(15),0    ; offset of size in rd_kafka_q_io
                                           10701 * ***                   qio->payload = ((void *)0);
00006F82 E360 F008 0024          00000008  10702          STG   6,8(0,15)   ; offset of payload in rd_kafka_q_io
                                           10703 * ***                   qio->event_cb = event_cb;
00006F88 E340 F020 0024          00000020  10704          STG   4,32(0,15)  ; offset of event_cb in rd_kafka_q_io
                                           10705 * ***                   qio->event_cb_opaque = opaque;
00006F8E E310 5010 0004          00000010  10706          LG    1,16(0,5)   ; opaque
00006F94 E310 F028 0024          00000028  10707          STG   1,40(0,15)  ; offset of event_cb_opaque in rd_kafka_q_io
                                           10708 * ***           }
00006F9A                                   10709 @L846    DS    0H
                                           10710 * ***
                                           10711 * ***           mtx_lock(&rkq->rkq_lock);
00006F9A E330 D0B0 0024          000000B0  10712          STG   3,176(0,13)
00006FA0 4110 D0B0               000000B0  10713          LA    1,176(0,13)
00006FA4 E3F0 C148 0004          00007050  10714          LG    15,@lit_1947_386 ; mtx_lock
00006FAA                                   10715 @@gen_label664 DS    0H
00006FAA 05EF                              10716          BALR  14,15
00006FAC                                   10717 @@gen_label665 DS    0H
                                           10718 * ***           if (rkq->rkq_qio) {
00006FAC E3F0 3090 0002          00000090  10719          LTG   15,144(0,3) ; offset of rkq_qio in rd_kafka_q_s
00006FB2 4780 C0CC               00006FD4  10720          BZ    @L847
                                           10721 * ***                   rd_free(rkq->rkq_qio);
00006FB6 E3F0 3090 0004          00000090  10722          LG    15,144(0,3)
00006FBC E3F0 D0B0 0024          000000B0  10723          STG   15,176(0,13)
                                                                                                                           Page  215 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006FC2 4110 D0B0               000000B0  10724          LA    1,176(0,13)
00006FC6 E3F0 C150 0004          00007058  10725          LG    15,@lit_1947_387 ; rd_free
00006FCC                                   10726 @@gen_label667 DS    0H
00006FCC 05EF                              10727          BALR  14,15
00006FCE                                   10728 @@gen_label668 DS    0H
                                           10729 * ***                   rkq->rkq_qio = ((void *)0);
00006FCE E360 3090 0024          00000090  10730          STG   6,144(0,3)  ; offset of rkq_qio in rd_kafka_q_s
                                           10731 * ***           }
00006FD4                                   10732 @L847    DS    0H
                                           10733 * ***
                                           10734 * ***           if (event_cb) {
00006FD4 B902 00F4                         10735          LTGR  15,4
00006FD8 4780 C0DA               00006FE2  10736          BZ    @L848
                                           10737 * ***                   rkq->rkq_qio = qio;
00006FDC E320 3090 0024          00000090  10738          STG   2,144(0,3)  ; offset of rkq_qio in rd_kafka_q_s
                                           10739 * ***           }
00006FE2                                   10740 @L848    DS    0H
                                           10741 * ***
                                           10742 * ***           mtx_unlock(&rkq->rkq_lock);
00006FE2 E330 D0B0 0024          000000B0  10743          STG   3,176(0,13)
00006FE8 4110 D0B0               000000B0  10744          LA    1,176(0,13)
00006FEC E3F0 C158 0004          00007060  10745          LG    15,@lit_1947_389 ; mtx_unlock
00006FF2                                   10746 @@gen_label670 DS    0H
00006FF2 05EF                              10747          BALR  14,15
00006FF4                                   10748 @@gen_label671 DS    0H
                                           10749 * ***
                                           10750 * ***   }
00006FF4                                   10751 @ret_lab_1947 DS 0H
                                           10752 * * **** Start of Epilogue
                                           10753          DCCEPIL
00006FF4                                   10754+         ds 0h                                                          01-DCCEP
                                           10755+* Epilog
00006FF4 D707 D088 D088 00000088 00000088  10756+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006FFA E3D0 D080 0004          00000080  10757+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00007000 E3C0 D090 0004          00000090  10758+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00007006 E3B0 C018 0004          00000018  10759+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000700C E3C0 B010 0021          00000010  10760+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00007012 E3E0 D008 0004          00000008  10761+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007018 EB1C D020 0004          00000020  10762+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000701E 078E                              10763+         bcr 8,14                if same dsab, just return              01-DCCEP
00007020 E3F0 D010 0024          00000010  10764+         stg 15,16(0,13)         save return code                       01-DCCEP
00007026 E300 D018 0024          00000018  10765+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000702C E3F0 D090 0004          00000090  10766+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007032 E3F0 F018 0004          00000018  10767+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00007038 47F0 F040               00000040  10768+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10769+* End of Epilog
                                           10770 * * **** End of Epilogue
00007040                                   10771          DS    0D
00007040 000000B8                          10772 @FRAMESIZE_1947 DC F'184'
00007044 00000000
00007048 0000000000000590                  10773 @lit_1947_384 DC AD(rd_malloc)
00007050 0000000000000000                  10774 @lit_1947_386 DC AD(mtx_lock)
                                                                                                                           Page  216 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007058 00000000000006F8                  10775 @lit_1947_387 DC AD(rd_free)
00007060 0000000000000000                  10776 @lit_1947_389 DC AD(mtx_unlock)
                                           10777          DROP  12
                                           10778 *
                                           10779 *   DSECT for automatic variables in "rd_kafka_q_cb_event_enable"
                                           10780 *      (FUNCTION #1947)
                                           10781 *
00000000                00000000 000000A8  10782 @AUTO#rd_kafka_q_cb_event_enable DSECT
00000000                                   10783          DS    XL168
                                           10784 *
00007068                00000000 00007BF0  10785 @CODE    CSECT
                                           10786 *
                                           10787 *
                                           10788 *
                                           10789 * ....... start of rd_kafka_queue_cb_event_enable
                                           10790 rd_kafka_queue_cb_event_enable ALIAS X'99846D92818692816D98A485A4856D83*
                                                                826D85A58595A36D859581829385'
00007068                                   10791 @LNAME586 DS   0H
00007068 0000001E                          10792          DC    X'0000001E'
0000706C 99846D9281869281                  10793          DC    C'rd_kafka_queue_cb_event_enable'
0000708A 00                                10794          DC    X'00'
                                           10795 rd_kafka_queue_cb_event_enable DCCPRLG CINDEX=586,BASER=12,FRAME=192,EN*
                                                                TRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME586
                                           10796          macro
                                           10797          dccextrn &m
                                           10798          gblc    &$dccext(1000)
                                           10799          gbla    &$dccexti
                                           10800          lcla    &i
                                           10801 &$dccext(&$dccexti+1) setc    '&m'
                                           10802 &i       seta    1
                                           10803 .loop    aif    (&i gt &$dccexti).around
                                           10804          aif    ('&$dccext(&i)' eq '&m').getout
                                           10805 &i       seta    &i+1
                                           10806          ago     .loop
                                           10807 .around  anop
                                           10808 &$dccexti seta &$dccexti+1
                                           10809          extrn  &m
                                           10810 .getout  anop
                                           10811          mend
00007090                                   10812+$eye0201    ds    0d                                                    02-DCCCA
00007090 C4C3C3                            10813+         dc cl3'DCC'                                                    02-DCCCA
00007093 01                                10814+         dc xl1'01' format one                                          02-DCCCA
00007094 00000000                          10815+         dc a(0)                                                        02-DCCCA
00007098 0000000000007102                  10816+         dc ad(@PER_586)                                                02-DCCCA
000070A0 00000000000000C0                  10817+         dc ad(192)                                                     02-DCCCA
000070A8 0000000000000000                  10818+         dc ad(0)                                                       02-DCCCA
000070B0 0000000000001000                  10819+         dc ad(4096)                                                    02-DCCCA
000070B8 20                                10820+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000070B9 03                                10821+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000070BA 03                                10822+         dc al1(3)                                                      02-DCCCA
000070BB 08                                10823+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000070BC 00                                10824+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page  217 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000070BD 000000                            10825+         dc al3(0)                                                      02-DCCCA
000070C0 0000000000007068                  10826+         dc ad(@LNAME586)                                               02-DCCCA
000070C8                                   10827+         ds 0d                                                          02-DCCCA
000070C8 0000000000007090                  10828+         dc ad($eye0201)                                                02-DCCCA
000070D0 0000000000000000                  10829+         dc ad(0)                                                       02-DCCCA
000070D8                                   10830+         ds    0d                                                       01-DCCPR
                                           10831+         entry rd_kafka_queue_cb_event_enable                           01-DCCPR
000070D8                                   10832+rd_kafka_queue_cb_event_enable ds 0d                                    01-DCCPR
000070D8                                   10833+@REGION_586_1 ds 0h                                                     01-DCCPR
000070D8 EBEC D008 0024          00000008  10834+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000070DE E3E0 D088 0004          00000088  10835+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000070E4 E3C0 D090 0004          00000090  10836+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000070EA B904 002E                         10837+         lgr   2,14                copy addr of our savearea            01-DCCPR
000070EE E3B0 C018 0004          00000018  10838+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000070F4 A7EB 00C0               000000C0  10839+         aghi  14,192              increase by frame size               01-DCCPR
000070F8 E3E0 C020 0021          00000020  10840+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000070FE 4720 B020               00000020  10841+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00007102                                   10842+@PER_586 ds    0h                                                       01-DCCPR
00007102 EBDE 2080 0024          00000080  10843+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007108 E3C0 2090 0024          00000090  10844+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000710E B904 00D2                         10845+         lgr   13,2                set real frame pointer               01-DCCPR
00007112 B904 00CF                         10846+         lgr   12,15               set base reg                         01-DCCPR
                        000070D8           10847+         using @REGION_586_1,12                                         01-DCCPR
                                           10848 * ******* End of Prologue
                                           10849 * *
                                           10850 * ***           rd_kafka_q_cb_event_enable (rkqu->rkqu_q, event_cb, op\
                                           10851 * aque);
00007116 E3F0 1000 0004          00000000  10852          LG    15,0(0,1)   ; rkqu
0000711C E3F0 F000 0004          00000000  10853          LG    15,0(0,15)
00007122 E3F0 D0A8 0024          000000A8  10854          STG   15,168(0,13)
00007128 E3F0 1008 0004          00000008  10855          LG    15,8(0,1)   ; event_cb
0000712E E3F0 D0B0 0024          000000B0  10856          STG   15,176(0,13)
00007134 E3F0 1010 0004          00000010  10857          LG    15,16(0,1)  ; opaque
0000713A E3F0 D0B8 0024          000000B8  10858          STG   15,184(0,13)
00007140 4110 D0A8               000000A8  10859          LA    1,168(0,13)
00007144 E3F0 C0C8 0004          000071A0  10860          LG    15,@lit_586_391 ; rd_kafka_q_cb_event_enable
0000714A                                   10861 @@gen_label672 DS    0H
0000714A 05EF                              10862          BALR  14,15
0000714C                                   10863 @@gen_label673 DS    0H
                                           10864 * ***   }
0000714C                                   10865 @ret_lab_586 DS 0H
                                           10866 * * **** Start of Epilogue
                                           10867          DCCEPIL
0000714C                                   10868+         ds 0h                                                          01-DCCEP
                                           10869+* Epilog
0000714C D707 D088 D088 00000088 00000088  10870+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00007152 E3D0 D080 0004          00000080  10871+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00007158 E3C0 D090 0004          00000090  10872+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000715E E3B0 C018 0004          00000018  10873+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00007164 E3C0 B010 0021          00000010  10874+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000716A E3E0 D008 0004          00000008  10875+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007170 EB1C D020 0004          00000020  10876+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page  218 
  Active Usings: @REGION_586_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007176 078E                              10877+         bcr 8,14                if same dsab, just return              01-DCCEP
00007178 E3F0 D010 0024          00000010  10878+         stg 15,16(0,13)         save return code                       01-DCCEP
0000717E E300 D018 0024          00000018  10879+         stg 0,24(0,13)          save more return code                  01-DCCEP
00007184 E3F0 D090 0004          00000090  10880+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000718A E3F0 F018 0004          00000018  10881+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00007190 47F0 F040               00000040  10882+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10883+* End of Epilog
                                           10884 * * **** End of Epilogue
00007198                                   10885          DS    0D
00007198 000000C0                          10886 @FRAMESIZE_586 DC F'192'
0000719C 00000000
000071A0 0000000000006F08                  10887 @lit_586_391 DC AD(rd_kafka_q_cb_event_enable)
                                           10888          DROP  12
                                           10889 *
                                           10890 *   DSECT for automatic variables in "rd_kafka_queue_cb_event_enable"
                                           10891 *      (FUNCTION #586)
                                           10892 *
00000000                00000000 000000A8  10893 @AUTO#rd_kafka_queue_cb_event_enable DSECT
00000000                                   10894          DS    XL168
                                           10895 *
000071A8                00000000 00007BF0  10896 @CODE    CSECT
                                           10897 *
                                           10898 *
                                           10899 *
                                           10900 * ....... start of rd_kafka_q_wait_result
                                           10901 rd_kafka_q_wait_result ALIAS X'99846D92818692816D986DA68189A36D9985A2A4*
                                                                93A3'
000071A8                                   10902 @LNAME1467 DS  0H
000071A8 00000016                          10903          DC    X'00000016'
000071AC 99846D9281869281                  10904          DC    C'rd_kafka_q_wait_result'
000071C2 00                                10905          DC    X'00'
                                           10906 rd_kafka_q_wait_result DCCPRLG CINDEX=1467,BASER=12,FRAME=200,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1467
                                           10907          macro
                                           10908          dccextrn &m
                                           10909          gblc    &$dccext(1000)
                                           10910          gbla    &$dccexti
                                           10911          lcla    &i
                                           10912 &$dccext(&$dccexti+1) setc    '&m'
                                           10913 &i       seta    1
                                           10914 .loop    aif    (&i gt &$dccexti).around
                                           10915          aif    ('&$dccext(&i)' eq '&m').getout
                                           10916 &i       seta    &i+1
                                           10917          ago     .loop
                                           10918 .around  anop
                                           10919 &$dccexti seta &$dccexti+1
                                           10920          extrn  &m
                                           10921 .getout  anop
                                           10922          mend
000071C8                                   10923+$eye0204    ds    0d                                                    02-DCCCA
000071C8 C4C3C3                            10924+         dc cl3'DCC'                                                    02-DCCCA
000071CB 01                                10925+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page  219 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000071CC 00000000                          10926+         dc a(0)                                                        02-DCCCA
000071D0 000000000000723A                  10927+         dc ad(@PER_1467)                                               02-DCCCA
000071D8 00000000000000C8                  10928+         dc ad(200)                                                     02-DCCCA
000071E0 0000000000000000                  10929+         dc ad(0)                                                       02-DCCCA
000071E8 0000000000001000                  10930+         dc ad(4096)                                                    02-DCCCA
000071F0 20                                10931+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000071F1 03                                10932+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000071F2 03                                10933+         dc al1(3)                                                      02-DCCCA
000071F3 08                                10934+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000071F4 00                                10935+         dc bl.8'00000000'                                              02-DCCCA
000071F5 000000                            10936+         dc al3(0)                                                      02-DCCCA
000071F8 00000000000071A8                  10937+         dc ad(@LNAME1467)                                              02-DCCCA
00007200                                   10938+         ds 0d                                                          02-DCCCA
00007200 00000000000071C8                  10939+         dc ad($eye0204)                                                02-DCCCA
00007208 0000000000000000                  10940+         dc ad(0)                                                       02-DCCCA
00007210                                   10941+         ds    0d                                                       01-DCCPR
                                           10942+         entry rd_kafka_q_wait_result                                   01-DCCPR
00007210                                   10943+rd_kafka_q_wait_result ds 0d                                            01-DCCPR
00007210                                   10944+@REGION_1467_1 ds 0h                                                    01-DCCPR
00007210 EBEC D008 0024          00000008  10945+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00007216 E3E0 D088 0004          00000088  10946+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000721C E3C0 D090 0004          00000090  10947+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00007222 B904 002E                         10948+         lgr   2,14                copy addr of our savearea            01-DCCPR
00007226 E3B0 C018 0004          00000018  10949+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000722C A7EB 00C8               000000C8  10950+         aghi  14,200              increase by frame size               01-DCCPR
00007230 E3E0 C020 0021          00000020  10951+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00007236 4720 B020               00000020  10952+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000723A                                   10953+@PER_1467 ds   0h                                                       01-DCCPR
0000723A EBDE 2080 0024          00000080  10954+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007240 E3C0 2090 0024          00000090  10955+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00007246 B904 00D2                         10956+         lgr   13,2                set real frame pointer               01-DCCPR
0000724A B904 00CF                         10957+         lgr   12,15               set base reg                         01-DCCPR
                        00007210           10958+         using @REGION_1467_1,12                                        01-DCCPR
0000724E B904 0021                         10959          LGR   2,1         ; ptr to parm area
                                           10960 * ******* End of Prologue
                                           10961 * *
                                           10962 * ***           rd_kafka_op_t *rko;
                                           10963 * ***           rd_kafka_resp_err_t err;
                                           10964 * ***
                                           10965 * ***           rko = rd_kafka_q_pop(rkq, rd_timeout_us(timeout_ms), 0\
                                           10966 * );
00007252 E3F0 200C 0014          0000000C  10967          LGF   15,12(0,2)  ; timeout_ms
00007258 E3F0 D0B0 0024          000000B0  10968          STG   15,176(0,13)
0000725E 4110 D0B0               000000B0  10969          LA    1,176(0,13)
00007262 E3F0 C098 0004          000072A8  10970          LG    15,@lit_1467_393 ; rd_timeout_us
00007268                                   10971 @@gen_label674 DS    0H
00007268 05EF                              10972          BALR  14,15
0000726A                                   10973 @@gen_label675 DS    0H
0000726A E310 2000 0004          00000000  10974          LG    1,0(0,2)    ; rkq
00007270 E310 D0B0 0024          000000B0  10975          STG   1,176(0,13)
00007276 E3F0 D0B8 0024          000000B8  10976          STG   15,184(0,13)
0000727C D707 D0C0 D0C0 000000C0 000000C0  10977          XC    192(8,13),192(13)
                                                                                                                           Page  220 
  Active Usings: @REGION_1467_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007282 4110 D0B0               000000B0  10978          LA    1,176(0,13)
00007286 E3F0 C0A0 0004          000072B0  10979          LG    15,@lit_1467_394 ; rd_kafka_q_pop
0000728C                                   10980 @@gen_label676 DS    0H
0000728C 05EF                              10981          BALR  14,15
0000728E                                   10982 @@gen_label677 DS    0H
                                           10983 * ***           if (!rko)
0000728E B902 001F                         10984          LTGR  1,15
00007292 4770 C0B0               000072C0  10985          BNZ   @L849
                                           10986 * ***                   err = RD_KAFKA_RESP_ERR__TIMED_OUT;
00007296 A728 FF47               0000FF47  10987          LHI   2,-185      ; -185
0000729A 47F0 C0C6               000072D6  10988          B     @L850
000072A0                                   10989          DS    0D
000072A0 000000C8                          10990 @FRAMESIZE_1467 DC F'200'
000072A4 00000000
000072A8 0000000000000AA8                  10991 @lit_1467_393 DC AD(rd_timeout_us)
000072B0 0000000000005000                  10992 @lit_1467_394 DC AD(rd_kafka_q_pop)
000072B8 0000000000000000                  10993 @lit_1467_396 DC AD(rd_kafka_op_destroy)
                                           10994 * ***           else {
000072C0                                   10995 @L849    DS    0H
                                           10996 * ***                   err = rko->rko_err;
000072C0 5820 F020               00000020  10997          L     2,32(0,15)  ; offset of rko_err in rd_kafka_op_s
                                           10998 * ***                   rd_kafka_op_destroy(rko);
000072C4 E3F0 D0B0 0024          000000B0  10999          STG   15,176(0,13)
000072CA 4110 D0B0               000000B0  11000          LA    1,176(0,13)
000072CE E3F0 C0A8 0004          000072B8  11001          LG    15,@lit_1467_396 ; rd_kafka_op_destroy
000072D4                                   11002 @@gen_label679 DS    0H
000072D4 05EF                              11003          BALR  14,15
000072D6                                   11004 @@gen_label680 DS    0H
                                           11005 * ***           }
000072D6                                   11006 @L850    DS    0H
                                           11007 * ***
                                           11008 * ***           return err;
000072D6 B914 00F2                         11009          LGFR  15,2
                                           11010 * ***   }
                                           11011 * * **** Start of Epilogue
                                           11012          DCCEPIL
000072DA                                   11013+         ds 0h                                                          01-DCCEP
                                           11014+* Epilog
000072DA D707 D088 D088 00000088 00000088  11015+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000072E0 E3D0 D080 0004          00000080  11016+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000072E6 E3C0 D090 0004          00000090  11017+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000072EC E3B0 C018 0004          00000018  11018+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000072F2 E3C0 B010 0021          00000010  11019+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000072F8 E3E0 D008 0004          00000008  11020+         lg  14,8(0,13)          load up return address                 01-DCCEP
000072FE EB1C D020 0004          00000020  11021+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00007304 078E                              11022+         bcr 8,14                if same dsab, just return              01-DCCEP
00007306 E3F0 D010 0024          00000010  11023+         stg 15,16(0,13)         save return code                       01-DCCEP
0000730C E300 D018 0024          00000018  11024+         stg 0,24(0,13)          save more return code                  01-DCCEP
00007312 E3F0 D090 0004          00000090  11025+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007318 E3F0 F018 0004          00000018  11026+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000731E 47F0 F040               00000040  11027+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           11028+* End of Epilog
                                                                                                                           Page  221 
  Active Usings: @REGION_1467_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11029 * * **** End of Epilogue
                                           11030          DROP  12
                                           11031 *
                                           11032 *   DSECT for automatic variables in "rd_kafka_q_wait_result"
                                           11033 *      (FUNCTION #1467)
                                           11034 *
00000000                00000000 000000AC  11035 @AUTO#rd_kafka_q_wait_result DSECT
00000000                                   11036          DS    XL168
000000A8                                   11037 rd_kafka_q_wait_result#err#0 DS 1F ; err
                                           11038 *
00007322                00000000 00007BF0  11039 @CODE    CSECT
                                           11040 *
                                           11041 *
                                           11042 *
                                           11043 * ....... start of rd_kafka_q_apply
                                           11044 rd_kafka_q_apply ALIAS X'99846D92818692816D986D81979793A8'
00007322                                   11045 @LNAME1468 DS  0H
00007322 00000010                          11046          DC    X'00000010'
00007326 99846D9281869281                  11047          DC    C'rd_kafka_q_apply'
00007336 00                                11048          DC    X'00'
                                           11049 rd_kafka_q_apply DCCPRLG CINDEX=1468,BASER=12,FRAME=200,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME1468
                                           11050          macro
                                           11051          dccextrn &m
                                           11052          gblc    &$dccext(1000)
                                           11053          gbla    &$dccexti
                                           11054          lcla    &i
                                           11055 &$dccext(&$dccexti+1) setc    '&m'
                                           11056 &i       seta    1
                                           11057 .loop    aif    (&i gt &$dccexti).around
                                           11058          aif    ('&$dccext(&i)' eq '&m').getout
                                           11059 &i       seta    &i+1
                                           11060          ago     .loop
                                           11061 .around  anop
                                           11062 &$dccexti seta &$dccexti+1
                                           11063          extrn  &m
                                           11064 .getout  anop
                                           11065          mend
00007338                                   11066+$eye0207    ds    0d                                                    02-DCCCA
00007338 C4C3C3                            11067+         dc cl3'DCC'                                                    02-DCCCA
0000733B 01                                11068+         dc xl1'01' format one                                          02-DCCCA
0000733C 00000000                          11069+         dc a(0)                                                        02-DCCCA
00007340 00000000000073AA                  11070+         dc ad(@PER_1468)                                               02-DCCCA
00007348 00000000000000C8                  11071+         dc ad(200)                                                     02-DCCCA
00007350 0000000000000000                  11072+         dc ad(0)                                                       02-DCCCA
00007358 0000000000001000                  11073+         dc ad(4096)                                                    02-DCCCA
00007360 20                                11074+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00007361 03                                11075+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00007362 03                                11076+         dc al1(3)                                                      02-DCCCA
00007363 08                                11077+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00007364 00                                11078+         dc bl.8'00000000'                                              02-DCCCA
00007365 000000                            11079+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page  222 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007368 0000000000007322                  11080+         dc ad(@LNAME1468)                                              02-DCCCA
00007370                                   11081+         ds 0d                                                          02-DCCCA
00007370 0000000000007338                  11082+         dc ad($eye0207)                                                02-DCCCA
00007378 0000000000000000                  11083+         dc ad(0)                                                       02-DCCCA
00007380                                   11084+         ds    0d                                                       01-DCCPR
                                           11085+         entry rd_kafka_q_apply                                         01-DCCPR
00007380                                   11086+rd_kafka_q_apply ds 0d                                                  01-DCCPR
00007380                                   11087+@REGION_1468_1 ds 0h                                                    01-DCCPR
00007380 EBEC D008 0024          00000008  11088+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00007386 E3E0 D088 0004          00000088  11089+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000738C E3C0 D090 0004          00000090  11090+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00007392 B904 002E                         11091+         lgr   2,14                copy addr of our savearea            01-DCCPR
00007396 E3B0 C018 0004          00000018  11092+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000739C A7EB 00C8               000000C8  11093+         aghi  14,200              increase by frame size               01-DCCPR
000073A0 E3E0 C020 0021          00000020  11094+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000073A6 4720 B020               00000020  11095+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000073AA                                   11096+@PER_1468 ds   0h                                                       01-DCCPR
000073AA EBDE 2080 0024          00000080  11097+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000073B0 E3C0 2090 0024          00000090  11098+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000073B6 B904 00D2                         11099+         lgr   13,2                set real frame pointer               01-DCCPR
000073BA B904 00CF                         11100+         lgr   12,15               set base reg                         01-DCCPR
                        00007380           11101+         using @REGION_1468_1,12                                        01-DCCPR
000073BE B904 0051                         11102          LGR   5,1         ; ptr to parm area
                                           11103 * ******* End of Prologue
                                           11104 * *
000073C2 E340 5000 0004          00000000  11105          LG    4,0(0,5)    ; rkq
                                           11106 * ***      rd_kafka_op_t *rko, *next;
                                           11107 * ***           rd_kafka_q_t *fwdq;
                                           11108 * ***           int cnt = 0;
000073C8 A728 0000               00000000  11109          LHI   2,0         ; 0
                                           11110 * ***
                                           11111 * ***           mtx_lock(&rkq->rkq_lock);
000073CC E340 D0B0 0024          000000B0  11112          STG   4,176(0,13)
000073D2 4110 D0B0               000000B0  11113          LA    1,176(0,13)
000073D6 E3F0 C0E8 0004          00007468  11114          LG    15,@lit_1468_399 ; mtx_lock
000073DC                                   11115 @@gen_label681 DS    0H
000073DC 05EF                              11116          BALR  14,15
000073DE                                   11117 @@gen_label682 DS    0H
                                           11118 * ***           if ((fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
000073DE E340 D0B0 0024          000000B0  11119          STG   4,176(0,13)
000073E4 D707 D0B8 D0B8 000000B8 000000B8  11120          XC    184(8,13),184(13)
000073EA 4110 D0B0               000000B0  11121          LA    1,176(0,13)
000073EE E3F0 C0F0 0004          00007470  11122          LG    15,@lit_1468_400 ; rd_kafka_q_fwd_get
000073F4                                   11123 @@gen_label683 DS    0H
000073F4 05EF                              11124          BALR  14,15
000073F6                                   11125 @@gen_label684 DS    0H
000073F6 B904 003F                         11126          LGR   3,15
000073FA B902 00F3                         11127          LTGR  15,3
000073FE 4780 C118               00007498  11128          BZ    @L851
                                           11129 * ***                   mtx_unlock(&rkq->rkq_lock);
00007402 E340 D0B0 0024          000000B0  11130          STG   4,176(0,13)
00007408 4110 D0B0               000000B0  11131          LA    1,176(0,13)
                                                                                                                           Page  223 
  Active Usings: @REGION_1468_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000740C E3F0 C0F8 0004          00007478  11132          LG    15,@lit_1468_401 ; mtx_unlock
00007412                                   11133 @@gen_label686 DS    0H
00007412 05EF                              11134          BALR  14,15
00007414                                   11135 @@gen_label687 DS    0H
                                           11136 * ***         cnt = rd_kafka_q_apply(fwdq, callback, opaque);
00007414 E330 D0B0 0024          000000B0  11137          STG   3,176(0,13)
0000741A E3F0 5008 0004          00000008  11138          LG    15,8(0,5)   ; callback
00007420 E3F0 D0B8 0024          000000B8  11139          STG   15,184(0,13)
00007426 E3F0 5010 0004          00000010  11140          LG    15,16(0,5)  ; opaque
0000742C E3F0 D0C0 0024          000000C0  11141          STG   15,192(0,13)
00007432 4110 D0B0               000000B0  11142          LA    1,176(0,13)
00007436 E3F0 C100 0004          00007480  11143          LG    15,@lit_1468_402 ; rd_kafka_q_apply
0000743C                                   11144 @@gen_label688 DS    0H
0000743C 05EF                              11145          BALR  14,15
0000743E                                   11146 @@gen_label689 DS    0H
0000743E 182F                              11147          LR    2,15        ; cnt
                                           11148 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
00007440 E330 D0B0 0024          000000B0  11149          STG   3,176(0,13)
00007446 D707 D0B8 D0B8 000000B8 000000B8  11150          XC    184(8,13),184(13)
0000744C 4110 D0B0               000000B0  11151          LA    1,176(0,13)
00007450 E3F0 C108 0004          00007488  11152          LG    15,@lit_1468_403 ; rd_kafka_q_destroy0
00007456                                   11153 @@gen_label690 DS    0H
00007456 05EF                              11154          BALR  14,15
00007458                                   11155 @@gen_label691 DS    0H
                                           11156 * ***         return cnt;
00007458 B914 00F2                         11157          LGFR  15,2
0000745C 47F0 C182               00007502  11158          B     @ret_lab_1468
00007460                                   11159          DS    0D
00007460 000000C8                          11160 @FRAMESIZE_1468 DC F'200'
00007464 00000000
00007468 0000000000000000                  11161 @lit_1468_399 DC AD(mtx_lock)
00007470 0000000000001510                  11162 @lit_1468_400 DC AD(rd_kafka_q_fwd_get)
00007478 0000000000000000                  11163 @lit_1468_401 DC AD(mtx_unlock)
00007480 0000000000007380                  11164 @lit_1468_402 DC AD(rd_kafka_q_apply)
00007488 0000000000001140                  11165 @lit_1468_403 DC AD(rd_kafka_q_destroy0)
00007490 0000000000002248                  11166 @lit_1468_404 DC AD(rd_kafka_q_mark_served)
                                           11167 * ***      }
00007498                                   11168 @L851    DS    0H
                                           11169 * ***
                                           11170 * ***      next = ((&rkq->rkq_q)->tqh_first);
00007498 E330 4060 0004          00000060  11171          LG    3,96(0,4)   ; offset of rkq_q in rd_kafka_q_s
                                           11172 * ***      while ((rko = next)) {
0000749E 47F0 C14E               000074CE  11173          B     @L855
000074A2                                   11174 @L854    DS    0H
                                           11175 * ***         next = ((next)->rko_link .tqe_next);
000074A2 E330 3000 0004          00000000  11176          LG    3,0(0,3)    ; next
                                           11177 * ***                   cnt += callback(rkq, rko, opaque);
000074A8 E340 D0B0 0024          000000B0  11178          STG   4,176(0,13)
000074AE E3F0 D0B8 0024          000000B8  11179          STG   15,184(0,13)
000074B4 E3F0 5010 0004          00000010  11180          LG    15,16(0,5)  ; opaque
000074BA E3F0 D0C0 0024          000000C0  11181          STG   15,192(0,13)
000074C0 E3F0 5008 0004          00000008  11182          LG    15,8(0,5)   ; callback
                                                                                                                           Page  224 
  Active Usings: @REGION_1468_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000074C6 4110 D0B0               000000B0  11183          LA    1,176(0,13)
000074CA                                   11184 @@gen_label692 DS    0H
000074CA 05EF                              11185          BALR  14,15
000074CC                                   11186 @@gen_label693 DS    0H
000074CC 1A2F                              11187          AR    2,15
                                           11188 * ***      }
000074CE                                   11189 @L855    DS    0H
000074CE B904 00F3                         11190          LGR   15,3        ; rko
000074D2 B902 0013                         11191          LTGR  1,3
000074D6 4770 C122               000074A2  11192          BNZ   @L854
                                           11193 * ***
                                           11194 * ***           rd_kafka_q_mark_served(rkq);
000074DA E340 D0B0 0024          000000B0  11195          STG   4,176(0,13)
000074E0 4110 D0B0               000000B0  11196          LA    1,176(0,13)
000074E4 E3F0 C110 0004          00007490  11197          LG    15,@lit_1468_404 ; rd_kafka_q_mark_served
000074EA                                   11198 @@gen_label695 DS    0H
000074EA 05EF                              11199          BALR  14,15
000074EC                                   11200 @@gen_label696 DS    0H
                                           11201 * ***
                                           11202 * ***           mtx_unlock(&rkq->rkq_lock);
000074EC E340 D0B0 0024          000000B0  11203          STG   4,176(0,13)
000074F2 4110 D0B0               000000B0  11204          LA    1,176(0,13)
000074F6 E3F0 C0F8 0004          00007478  11205          LG    15,@lit_1468_401 ; mtx_unlock
000074FC                                   11206 @@gen_label697 DS    0H
000074FC 05EF                              11207          BALR  14,15
000074FE                                   11208 @@gen_label698 DS    0H
                                           11209 * ***
                                           11210 * ***           return cnt;
000074FE B914 00F2                         11211          LGFR  15,2
                                           11212 * ***   }
00007502                                   11213 @ret_lab_1468 DS 0H
                                           11214 * * **** Start of Epilogue
                                           11215          DCCEPIL
00007502                                   11216+         ds 0h                                                          01-DCCEP
                                           11217+* Epilog
00007502 D707 D088 D088 00000088 00000088  11218+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00007508 E3D0 D080 0004          00000080  11219+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000750E E3C0 D090 0004          00000090  11220+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00007514 E3B0 C018 0004          00000018  11221+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000751A E3C0 B010 0021          00000010  11222+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00007520 E3E0 D008 0004          00000008  11223+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007526 EB1C D020 0004          00000020  11224+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000752C 078E                              11225+         bcr 8,14                if same dsab, just return              01-DCCEP
0000752E E3F0 D010 0024          00000010  11226+         stg 15,16(0,13)         save return code                       01-DCCEP
00007534 E300 D018 0024          00000018  11227+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000753A E3F0 D090 0004          00000090  11228+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007540 E3F0 F018 0004          00000018  11229+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00007546 47F0 F040               00000040  11230+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           11231+* End of Epilog
                                           11232 * * **** End of Epilogue
                                           11233          DROP  12
                                           11234 *
                                                                                                                           Page  225 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11235 *   DSECT for automatic variables in "rd_kafka_q_apply"
                                           11236 *      (FUNCTION #1468)
                                           11237 *
00000000                00000000 000000AC  11238 @AUTO#rd_kafka_q_apply DSECT
00000000                                   11239          DS    XL168
000000A8                                   11240 rd_kafka_q_apply#cnt#0 DS 1F ; cnt
                                           11241 *
0000754A                00000000 00007BF0  11242 @CODE    CSECT
                                           11243 *
                                           11244 *
                                           11245 *
                                           11246 * ....... start of rd_kafka_q_fix_offsets
                                           11247 rd_kafka_q_fix_offsets ALIAS X'99846D92818692816D986D8689A76D968686A285*
                                                                A3A2'
0000754A                                   11248 @LNAME1469 DS  0H
0000754A 00000016                          11249          DC    X'00000016'
0000754E 99846D9281869281                  11250          DC    C'rd_kafka_q_fix_offsets'
00007564 00                                11251          DC    X'00'
                                           11252 rd_kafka_q_fix_offsets DCCPRLG CINDEX=1469,BASER=12,FRAME=216,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1469
                                           11253          macro
                                           11254          dccextrn &m
                                           11255          gblc    &$dccext(1000)
                                           11256          gbla    &$dccexti
                                           11257          lcla    &i
                                           11258 &$dccext(&$dccexti+1) setc    '&m'
                                           11259 &i       seta    1
                                           11260 .loop    aif    (&i gt &$dccexti).around
                                           11261          aif    ('&$dccext(&i)' eq '&m').getout
                                           11262 &i       seta    &i+1
                                           11263          ago     .loop
                                           11264 .around  anop
                                           11265 &$dccexti seta &$dccexti+1
                                           11266          extrn  &m
                                           11267 .getout  anop
                                           11268          mend
00007568                                   11269+$eye0210    ds    0d                                                    02-DCCCA
00007568 C4C3C3                            11270+         dc cl3'DCC'                                                    02-DCCCA
0000756B 01                                11271+         dc xl1'01' format one                                          02-DCCCA
0000756C 00000000                          11272+         dc a(0)                                                        02-DCCCA
00007570 00000000000075DA                  11273+         dc ad(@PER_1469)                                               02-DCCCA
00007578 00000000000000D8                  11274+         dc ad(216)                                                     02-DCCCA
00007580 0000000000000000                  11275+         dc ad(0)                                                       02-DCCCA
00007588 0000000000001000                  11276+         dc ad(4096)                                                    02-DCCCA
00007590 20                                11277+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00007591 03                                11278+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00007592 03                                11279+         dc al1(3)                                                      02-DCCCA
00007593 08                                11280+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00007594 00                                11281+         dc bl.8'00000000'                                              02-DCCCA
00007595 000000                            11282+         dc al3(0)                                                      02-DCCCA
00007598 000000000000754A                  11283+         dc ad(@LNAME1469)                                              02-DCCCA
000075A0                                   11284+         ds 0d                                                          02-DCCCA
                                                                                                                           Page  226 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000075A0 0000000000007568                  11285+         dc ad($eye0210)                                                02-DCCCA
000075A8 0000000000000000                  11286+         dc ad(0)                                                       02-DCCCA
000075B0                                   11287+         ds    0d                                                       01-DCCPR
                                           11288+         entry rd_kafka_q_fix_offsets                                   01-DCCPR
000075B0                                   11289+rd_kafka_q_fix_offsets ds 0d                                            01-DCCPR
000075B0                                   11290+@REGION_1469_1 ds 0h                                                    01-DCCPR
000075B0 EBEC D008 0024          00000008  11291+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000075B6 E3E0 D088 0004          00000088  11292+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000075BC E3C0 D090 0004          00000090  11293+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000075C2 B904 002E                         11294+         lgr   2,14                copy addr of our savearea            01-DCCPR
000075C6 E3B0 C018 0004          00000018  11295+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000075CC A7EB 00D8               000000D8  11296+         aghi  14,216              increase by frame size               01-DCCPR
000075D0 E3E0 C020 0021          00000020  11297+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000075D6 4720 B020               00000020  11298+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000075DA                                   11299+@PER_1469 ds   0h                                                       01-DCCPR
000075DA EBDE 2080 0024          00000080  11300+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000075E0 E3C0 2090 0024          00000090  11301+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000075E6 B904 00D2                         11302+         lgr   13,2                set real frame pointer               01-DCCPR
000075EA B904 00CF                         11303+         lgr   12,15               set base reg                         01-DCCPR
                        000075B0           11304+         using @REGION_1469_1,12                                        01-DCCPR
000075EE B904 0061                         11305          LGR   6,1         ; ptr to parm area
                                           11306 * ******* End of Prologue
                                           11307 * *
000075F2 E350 6000 0004          00000000  11308          LG    5,0(0,6)    ; rkq
                                           11309 * ***      rd_kafka_op_t *rko, *next;
                                           11310 * ***      int     adj_len  = 0;
000075F8 A738 0000               00000000  11311          LHI   3,0         ; 0
                                           11312 * ***      int64_t adj_size = 0;
000075FC A749 0000               00000000  11313          LGHI  4,0         ; 0
                                           11314 * ***
                                           11315 * ***      do { if (((!(!rkq->rkq_fwdq)))) rd_kafka_crash("C:\\asgkafk\
                                           11316 * a\\librdkafka\\src\\rdkafka_queue.c",931, __FUNCTION__, (((void *)0)\
                                           11317 * ), "assert: " "!rkq->rkq_fwdq"); } while (0);
00007600                                   11318 @L856    DS    0H
00007600 E3F0 5058 0002          00000058  11319          LTG   15,88(0,5)  ; offset of rkq_fwdq in rd_kafka_q_s
00007606 4780 C09C               0000764C  11320          BZ    @L859
0000760A E3F0 C0C0 0004          00007670  11321          LG    15,@lit_1469_409
00007610 4110 F0D2               000000D2  11322          LA    1,210(0,15)
00007614 E310 D0B0 0024          000000B0  11323          STG   1,176(0,13)
0000761A E548 D0B8 03A3          000000B8  11324          MVGHI 184(13),931
00007620 E310 C0B8 0004          00007668  11325          LG    1,@lit_1469_410
00007626 4110 11F6               000001F6  11326          LA    1,502(0,1)
0000762A E310 D0C0 0024          000000C0  11327          STG   1,192(0,13)
00007630 D707 D0C8 D0C8 000000C8 000000C8  11328          XC    200(8,13),200(13)
00007636 41F0 F132               00000132  11329          LA    15,306(0,15)
0000763A E3F0 D0D0 0024          000000D0  11330          STG   15,208(0,13)
00007640 4110 D0B0               000000B0  11331          LA    1,176(0,13)
00007644 E3F0 C0B0 0004          00007660  11332          LG    15,@lit_1469_411 ; rd_kafka_crash
0000764A                                   11333 @@gen_label700 DS    0H
0000764A 05EF                              11334          BALR  14,15
0000764C                                   11335 @@gen_label701 DS    0H
0000764C                                   11336 @L859    DS    0H
                                                                                                                           Page  227 
  Active Usings: @REGION_1469_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11337 * ***
                                           11338 * ***      next = ((&rkq->rkq_q)->tqh_first);
0000764C E320 5060 0004          00000060  11339          LG    2,96(0,5)   ; offset of rkq_q in rd_kafka_q_s
                                           11340 * ***      while ((rko = next)) {
00007652 47F0 C160               00007710  11341          B     @L863
00007658                                   11342          DS    0D
00007658 000000D8                          11343 @FRAMESIZE_1469 DC F'216'
0000765C 00000000
00007660 0000000000000000                  11344 @lit_1469_411 DC AD(rd_kafka_crash)
00007668 0000000000007BF0                  11345 @lit_1469_410 DC AD(@DATA)
00007670 0000000000007DFE                  11346 @lit_1469_409 DC AD(@strings@)
00007678 0000000000000000                  11347 @lit_1469_412 DC AD(rd_kafka_op_destroy)
00007680                                   11348 @L862    DS    0H
                                           11349 * ***         next = ((next)->rko_link .tqe_next);
00007680 E320 2000 0004          00000000  11350          LG    2,0(0,2)    ; next
                                           11351 * ***
                                           11352 * ***         if (((rko->rko_type != RD_KAFKA_OP_FETCH)))
00007686 E55C F010 0001          00000010  11353          CHSI  16(15),1
0000768C 4770 C160               00007710  11354          BNE   @L863
                                           11355 * ***            continue;
00007690                                   11356 @L864    DS    0H
                                           11357 * ***
                                           11358 * ***         rko->rko_u.fetch.rkm. rkm_rkmessage.offset += base_offse\
                                           11359 * t;
00007690 E310 F0B0 0004          000000B0  11360          LG    1,176(0,15)
00007696 E310 6010 0008          00000010  11361          AG    1,16(0,6)
0000769C E310 F0B0 0024          000000B0  11362          STG   1,176(0,15)
                                           11363 * ***
                                           11364 * ***         if (rko->rko_u.fetch.rkm. rkm_rkmessage.offset < min_off\
                                           11365 * set &&
000076A2 E310 6008 0020          00000008  11366          CG    1,8(0,6)
000076A8 47B0 C160               00007710  11367          BNL   @L863
                                           11368 * ***             rko->rko_err != RD_KAFKA_RESP_ERR__NOT_IMPLEMENTED) \
                                           11369 * {
000076AC E55C F020 FF56          00000020  11370          CHSI  32(15),-170
000076B2 4780 C160               00007710  11371          BE    @L863
                                           11372 * ***            adj_len++;
000076B6 A73A 0001               00000001  11373          AHI   3,1
                                           11374 * ***            adj_size += rko->rko_len;
000076BA E340 F030 0018          00000030  11375          AGF   4,48(0,15)
                                           11376 * ***            do {   if (((rko)->rko_link .tqe_next) != (((void *)0\
                                           11377 * ))) (rko)->rko_link .tqe_next->rko_link .tqe_prev = (rko)->rko_link \
                                           11378 * .tqe_prev; else (&rkq->rkq_q)->tqh_last = (rko)->rko_link .tqe_prev;\
                                           11379 *  *(rko)->rko_link .tqe_prev = (rko)->rko_link .tqe_next; ; } while (\
                                           11380 *  0);
000076C0                                   11381 @L866    DS    0H
000076C0 E310 F000 0002          00000000  11382          LTG   1,0(0,15)   ; rko
000076C6 4780 C130               000076E0  11383          BE    @L869
000076CA E310 F000 0004          00000000  11384          LG    1,0(0,15)   ; rko
000076D0 E370 F008 0004          00000008  11385          LG    7,8(0,15)   ; offset of tqe_prev in 0000055
000076D6 E370 1008 0024          00000008  11386          STG   7,8(0,1)    ; offset of tqe_prev in 0000055
000076DC 47F0 C13C               000076EC  11387          B     @L870
                                                                                                                           Page  228 
  Active Usings: @REGION_1469_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000076E0                                   11388 @L869    DS    0H
000076E0 E310 F008 0004          00000008  11389          LG    1,8(0,15)   ; offset of tqe_prev in 0000055
000076E6 E310 5068 0024          00000068  11390          STG   1,104(0,5)  ; offset of tqh_last in rd_kafka_op_tailq
000076EC                                   11391 @L870    DS    0H
000076EC E310 F008 0004          00000008  11392          LG    1,8(0,15)   ; offset of tqe_prev in 0000055
000076F2 E370 F000 0004          00000000  11393          LG    7,0(0,15)   ; rko
000076F8 E370 1000 0024          00000000  11394          STG   7,0(0,1)
                                           11395 * ***            rd_kafka_op_destroy(rko);
000076FE E3F0 D0B0 0024          000000B0  11396          STG   15,176(0,13)
00007704 4110 D0B0               000000B0  11397          LA    1,176(0,13)
00007708 E3F0 C0C8 0004          00007678  11398          LG    15,@lit_1469_412 ; rd_kafka_op_destroy
0000770E                                   11399 @@gen_label706 DS    0H
0000770E 05EF                              11400          BALR  14,15
00007710                                   11401 @@gen_label707 DS    0H
                                           11402 * ***            continue;
                                           11403 * ***         }
                                           11404 * ***      }
00007710                                   11405 @L863    DS    0H
00007710 B904 00F2                         11406          LGR   15,2        ; rko
00007714 B902 0012                         11407          LTGR  1,2
00007718 4770 C0D0               00007680  11408          BNZ   @L862
                                           11409 * ***
                                           11410 * ***
                                           11411 * ***      rkq->rkq_qlen  -= adj_len;
0000771C 58F0 5070               00000070  11412          L     15,112(0,5)
00007720 1BF3                              11413          SR    15,3
00007722 50F0 5070               00000070  11414          ST    15,112(0,5)
                                           11415 * ***      rkq->rkq_qsize -= adj_size;
00007726 E3F0 5078 0004          00000078  11416          LG    15,120(0,5)
0000772C B909 00F4                         11417          SGR   15,4
00007730 E3F0 5078 0024          00000078  11418          STG   15,120(0,5)
                                           11419 * ***   }
00007736                                   11420 @ret_lab_1469 DS 0H
                                           11421 * * **** Start of Epilogue
                                           11422          DCCEPIL
00007736                                   11423+         ds 0h                                                          01-DCCEP
                                           11424+* Epilog
00007736 D707 D088 D088 00000088 00000088  11425+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000773C E3D0 D080 0004          00000080  11426+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00007742 E3C0 D090 0004          00000090  11427+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00007748 E3B0 C018 0004          00000018  11428+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000774E E3C0 B010 0021          00000010  11429+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00007754 E3E0 D008 0004          00000008  11430+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000775A EB1C D020 0004          00000020  11431+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00007760 078E                              11432+         bcr 8,14                if same dsab, just return              01-DCCEP
00007762 E3F0 D010 0024          00000010  11433+         stg 15,16(0,13)         save return code                       01-DCCEP
00007768 E300 D018 0024          00000018  11434+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000776E E3F0 D090 0004          00000090  11435+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007774 E3F0 F018 0004          00000018  11436+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000777A 47F0 F040               00000040  11437+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           11438+* End of Epilog
                                           11439 * * **** End of Epilogue
                                                                                                                           Page  229 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11440          DROP  12
                                           11441 *
                                           11442 *   DSECT for automatic variables in "rd_kafka_q_fix_offsets"
                                           11443 *      (FUNCTION #1469)
                                           11444 *
00000000                00000000 000000B0  11445 @AUTO#rd_kafka_q_fix_offsets DSECT
00000000                                   11446          DS    XL168
000000A8                                   11447 rd_kafka_q_fix_offsets#adj_size#0 DS 8XL1 ; adj_size
000000B0                000000B0 000000A8  11448          ORG   @AUTO#rd_kafka_q_fix_offsets+168
000000A8                                   11449 rd_kafka_q_fix_offsets#adj_len#0 DS 1F ; adj_len
                                           11450 *
0000777E                00000000 00007BF0  11451 @CODE    CSECT
                                           11452 *
                                           11453 *
                                           11454 *
                                           11455 * ....... start of rd_kafka_q_dump
                                           11456 rd_kafka_q_dump ALIAS X'99846D92818692816D986D84A49497'
0000777E                                   11457 @LNAME1472 DS  0H
0000777E 0000000F                          11458          DC    X'0000000F'
00007782 99846D9281869281                  11459          DC    C'rd_kafka_q_dump'
00007791 00                                11460          DC    X'00'
                                           11461 rd_kafka_q_dump DCCPRLG CINDEX=1472,BASER=12,FRAME=256,ENTRY=YES,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME1472
                                           11462          macro
                                           11463          dccextrn &m
                                           11464          gblc    &$dccext(1000)
                                           11465          gbla    &$dccexti
                                           11466          lcla    &i
                                           11467 &$dccext(&$dccexti+1) setc    '&m'
                                           11468 &i       seta    1
                                           11469 .loop    aif    (&i gt &$dccexti).around
                                           11470          aif    ('&$dccext(&i)' eq '&m').getout
                                           11471 &i       seta    &i+1
                                           11472          ago     .loop
                                           11473 .around  anop
                                           11474 &$dccexti seta &$dccexti+1
                                           11475          extrn  &m
                                           11476 .getout  anop
                                           11477          mend
00007798                                   11478+$eye0213    ds    0d                                                    02-DCCCA
00007798 C4C3C3                            11479+         dc cl3'DCC'                                                    02-DCCCA
0000779B 01                                11480+         dc xl1'01' format one                                          02-DCCCA
0000779C 00000000                          11481+         dc a(0)                                                        02-DCCCA
000077A0 000000000000780A                  11482+         dc ad(@PER_1472)                                               02-DCCCA
000077A8 0000000000000100                  11483+         dc ad(256)                                                     02-DCCCA
000077B0 0000000000000000                  11484+         dc ad(0)                                                       02-DCCCA
000077B8 0000000000001000                  11485+         dc ad(4096)                                                    02-DCCCA
000077C0 20                                11486+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000077C1 03                                11487+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000077C2 03                                11488+         dc al1(3)                                                      02-DCCCA
000077C3 08                                11489+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000077C4 00                                11490+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page  230 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000077C5 000000                            11491+         dc al3(0)                                                      02-DCCCA
000077C8 000000000000777E                  11492+         dc ad(@LNAME1472)                                              02-DCCCA
000077D0                                   11493+         ds 0d                                                          02-DCCCA
000077D0 0000000000007798                  11494+         dc ad($eye0213)                                                02-DCCCA
000077D8 0000000000000000                  11495+         dc ad(0)                                                       02-DCCCA
000077E0                                   11496+         ds    0d                                                       01-DCCPR
                                           11497+         entry rd_kafka_q_dump                                          01-DCCPR
000077E0                                   11498+rd_kafka_q_dump ds 0d                                                   01-DCCPR
000077E0                                   11499+@REGION_1472_1 ds 0h                                                    01-DCCPR
000077E0 EBEC D008 0024          00000008  11500+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000077E6 E3E0 D088 0004          00000088  11501+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000077EC E3C0 D090 0004          00000090  11502+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000077F2 B904 002E                         11503+         lgr   2,14                copy addr of our savearea            01-DCCPR
000077F6 E3B0 C018 0004          00000018  11504+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000077FC A7EB 0100               00000100  11505+         aghi  14,256              increase by frame size               01-DCCPR
00007800 E3E0 C020 0021          00000020  11506+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00007806 4720 B020               00000020  11507+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000780A                                   11508+@PER_1472 ds   0h                                                       01-DCCPR
0000780A EBDE 2080 0024          00000080  11509+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007810 E3C0 2090 0024          00000090  11510+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00007816 B904 00D2                         11511+         lgr   13,2                set real frame pointer               01-DCCPR
0000781A B904 00CF                         11512+         lgr   12,15               set base reg                         01-DCCPR
                        000077E0           11513+         using @REGION_1472_1,12                                        01-DCCPR
                                           11514 * ******* End of Prologue
                                           11515 * *
                                           11516 * ***           mtx_lock(&rkq->rkq_lock);
0000781E EB34 1000 0004          00000000  11517          LMG   3,4,0(1)    ; fp
00007824 E340 D0B0 0024          000000B0  11518          STG   4,176(0,13)
0000782A 4110 D0B0               000000B0  11519          LA    1,176(0,13)
0000782E E3F0 C180 0004          00007960  11520          LG    15,@lit_1472_414 ; mtx_lock
00007834                                   11521 @@gen_label709 DS    0H
00007834 05EF                              11522          BALR  14,15
00007836                                   11523 @@gen_label710 DS    0H
                                           11524 * ***           fprintf(fp, "Queue %p \"%s\" (refcnt %d, flags 0x%x, %\
                                           11525 * d ops, "
                                           11526 * ***                   rkq, rkq->rkq_name, rkq->rkq_refcnt, rkq->rkq_\
                                           11527 * flags,
                                           11528 * ***                   rkq->rkq_qlen, rkq->rkq_qsize);
00007836 E330 D0B0 0024          000000B0  11529          STG   3,176(0,13)
                                           11530 * ***                   "%" "lld" " bytes)\n",
0000783C E320 C190 0004          00007970  11531          LG    2,@lit_1472_415
00007842 41F0 214A               0000014A  11532          LA    15,330(0,2)
00007846 E3F0 D0B8 0024          000000B8  11533          STG   15,184(0,13)
0000784C E340 D0C0 0024          000000C0  11534          STG   4,192(0,13)
00007852 E3F0 40A8 0004          000000A8  11535          LG    15,168(0,4)
00007858 E3F0 D0C8 0024          000000C8  11536          STG   15,200(0,13)
0000785E E3F0 4080 0014          00000080  11537          LGF   15,128(0,4)
00007864 E3F0 D0D0 0024          000000D0  11538          STG   15,208(0,13)
0000786A E3F0 4084 0014          00000084  11539          LGF   15,132(0,4)
00007870 E3F0 D0D8 0024          000000D8  11540          STG   15,216(0,13)
00007876 E3F0 4070 0014          00000070  11541          LGF   15,112(0,4)
0000787C E3F0 D0E0 0024          000000E0  11542          STG   15,224(0,13)
                                                                                                                           Page  231 
  Active Usings: @REGION_1472_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007882 E3F0 4078 0004          00000078  11543          LG    15,120(0,4)
00007888 E3F0 D0E8 0024          000000E8  11544          STG   15,232(0,13)
0000788E 4110 D0B0               000000B0  11545          LA    1,176(0,13)
00007892 E350 C188 0004          00007968  11546          LG    5,@lit_1472_416 ; fprintf
00007898 B904 00F5                         11547          LGR   15,5
0000789C                                   11548 @@gen_label711 DS    0H
0000789C 05EF                              11549          BALR  14,15
0000789E                                   11550 @@gen_label712 DS    0H
                                           11551 * ***
                                           11552 * ***           if (rkq->rkq_qio)
0000789E E3F0 4090 0002          00000090  11553          LTG   15,144(0,4) ; offset of rkq_qio in rd_kafka_q_s
000078A4 4780 C0F4               000078D4  11554          BZ    @L871
                                           11555 * ***                   fprintf(fp, " QIO fd %d\n", (int)rkq->rkq_qio-\
                                           11556 * >fd);
000078A8 E330 D0B0 0024          000000B0  11557          STG   3,176(0,13)
000078AE 41F0 2186               00000186  11558          LA    15,390(0,2)
000078B2 E3F0 D0B8 0024          000000B8  11559          STG   15,184(0,13)
000078B8 E3F0 4090 0004          00000090  11560          LG    15,144(0,4) ; offset of rkq_qio in rd_kafka_q_s
000078BE E3F0 F000 0014          00000000  11561          LGF   15,0(0,15)
000078C4 E3F0 D0C0 0024          000000C0  11562          STG   15,192(0,13)
000078CA 4110 D0B0               000000B0  11563          LA    1,176(0,13)
000078CE B904 00F5                         11564          LGR   15,5
000078D2                                   11565 @@gen_label714 DS    0H
000078D2 05EF                              11566          BALR  14,15
000078D4                                   11567 @@gen_label715 DS    0H
000078D4                                   11568 @L871    DS    0H
                                           11569 * ***           if (rkq->rkq_serve)
000078D4 E3F0 4098 0002          00000098  11570          LTG   15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
000078DA 4780 C130               00007910  11571          BZ    @L872
                                           11572 * ***                   fprintf(fp, " Serve callback %p, opaque %p\n",
                                           11573 * ***                           rkq->rkq_serve, rkq->rkq_opaque);
000078DE E330 D0B0 0024          000000B0  11574          STG   3,176(0,13)
000078E4 41F0 2192               00000192  11575          LA    15,402(0,2)
000078E8 E3F0 D0B8 0024          000000B8  11576          STG   15,184(0,13)
000078EE E3F0 4098 0004          00000098  11577          LG    15,152(0,4)
000078F4 E3F0 D0C0 0024          000000C0  11578          STG   15,192(0,13)
000078FA E3F0 40A0 0004          000000A0  11579          LG    15,160(0,4)
00007900 E3F0 D0C8 0024          000000C8  11580          STG   15,200(0,13)
00007906 4110 D0B0               000000B0  11581          LA    1,176(0,13)
0000790A B904 00F5                         11582          LGR   15,5
0000790E                                   11583 @@gen_label717 DS    0H
0000790E 05EF                              11584          BALR  14,15
00007910                                   11585 @@gen_label718 DS    0H
00007910                                   11586 @L872    DS    0H
                                           11587 * ***
                                           11588 * ***           if (rkq->rkq_fwdq) {
00007910 E3F0 4058 0002          00000058  11589          LTG   15,88(0,4)  ; offset of rkq_fwdq in rd_kafka_q_s
00007916 4780 C1B0               00007990  11590          BZ    @L873
                                           11591 * ***                   fprintf(fp, " Forwarded ->\n");
0000791A E330 D0B0 0024          000000B0  11592          STG   3,176(0,13)
00007920 41F0 21B2               000001B2  11593          LA    15,434(0,2)
00007924 E3F0 D0B8 0024          000000B8  11594          STG   15,184(0,13)
                                                                                                                           Page  232 
  Active Usings: @REGION_1472_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000792A 4110 D0B0               000000B0  11595          LA    1,176(0,13)
0000792E B904 00F5                         11596          LGR   15,5
00007932                                   11597 @@gen_label720 DS    0H
00007932 05EF                              11598          BALR  14,15
00007934                                   11599 @@gen_label721 DS    0H
                                           11600 * ***                   rd_kafka_q_dump(fp, rkq->rkq_fwdq);
00007934 E330 D0B0 0024          000000B0  11601          STG   3,176(0,13)
0000793A E3F0 4058 0004          00000058  11602          LG    15,88(0,4)
00007940 E3F0 D0B8 0024          000000B8  11603          STG   15,184(0,13)
00007946 4110 D0B0               000000B0  11604          LA    1,176(0,13)
0000794A E3F0 C198 0004          00007978  11605          LG    15,@lit_1472_420 ; rd_kafka_q_dump
00007950                                   11606 @@gen_label722 DS    0H
00007950 05EF                              11607          BALR  14,15
00007952                                   11608 @@gen_label723 DS    0H
                                           11609 * ***           } else {
00007952 47F0 C278               00007A58  11610          B     @L874
00007958                                   11611          DS    0D
00007958 00000100                          11612 @FRAMESIZE_1472 DC F'256'
0000795C 00000000
00007960 0000000000000000                  11613 @lit_1472_414 DC AD(mtx_lock)
00007968 0000000000000000                  11614 @lit_1472_416 DC AD(fprintf)
00007970 0000000000007DFE                  11615 @lit_1472_415 DC AD(@strings@)
00007978 00000000000077E0                  11616 @lit_1472_420 DC AD(rd_kafka_q_dump)
00007980 0000000000000000                  11617 @lit_1472_422 DC AD(rd_kafka_op2str)
00007988 0000000000000000                  11618 @lit_1472_425 DC AD(mtx_unlock)
00007990                                   11619 @L873    DS    0H
                                           11620 * ***                   rd_kafka_op_t *rko;
                                           11621 * ***
                                           11622 * ***                   if (!(((&rkq->rkq_q)->tqh_first) == (((void *)\
                                           11623 * 0))))
00007990 E3F0 4060 0002          00000060  11624          LTG   15,96(0,4)  ; offset of rkq_q in rd_kafka_q_s
00007996 4780 C1D4               000079B4  11625          BE    @L875
                                           11626 * ***                           fprintf(fp, " Queued ops:\n");
0000799A E330 D0B0 0024          000000B0  11627          STG   3,176(0,13)
000079A0 41F0 21C2               000001C2  11628          LA    15,450(0,2)
000079A4 E3F0 D0B8 0024          000000B8  11629          STG   15,184(0,13)
000079AA 4110 D0B0               000000B0  11630          LA    1,176(0,13)
000079AE B904 00F5                         11631          LGR   15,5
000079B2                                   11632 @@gen_label725 DS    0H
000079B2 05EF                              11633          BALR  14,15
000079B4                                   11634 @@gen_label726 DS    0H
000079B4                                   11635 @L875    DS    0H
                                           11636 * ***                   for ((rko) = ((&rkq->rkq_q)->tqh_first); (rko)\
                                           11637 *  != (((void *)0)); (rko) = ((rko)->rko_link .tqe_next)) {
000079B4 E320 4060 0004          00000060  11638          LG    2,96(0,4)   ; offset of rkq_q in rd_kafka_q_s
000079BA 47F0 C270               00007A50  11639          B     @L877
000079BE                                   11640 @L876    DS    0H
                                           11641 * ***                           fprintf(fp, "  %p %s (v%" "d" ", flags\
                                           11642 *  0x%x, "
                                           11643 * ***                                   rko, rd_kafka_op2str(rko->rko_\
                                           11644 * type),
                                           11645 * ***                                   rko->rko_version, rko->rko_fla\
                                                                                                                           Page  233 
  Active Usings: @REGION_1472_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11646 * gs,
                                           11647 * ***                                   rko->rko_prio, rko->rko_len,
                                           11648 * ***                                                                 \
                                           11649 *   "-"
                                           11650 * ***
                                           11651 * ***                                   rko->rko_replyq.q
000079BE E3F0 2010 0014          00000010  11652          LGF   15,16(0,2)
000079C4 E3F0 D0B0 0024          000000B0  11653          STG   15,176(0,13)
000079CA 4110 D0B0               000000B0  11654          LA    1,176(0,13)
000079CE E3F0 C1A0 0004          00007980  11655          LG    15,@lit_1472_422 ; rd_kafka_op2str
000079D4                                   11656 @@gen_label727 DS    0H
000079D4 05EF                              11657          BALR  14,15
000079D6                                   11658 @@gen_label728 DS    0H
000079D6 E330 D0B0 0024          000000B0  11659          STG   3,176(0,13)
                                           11660 * ***                                   "prio %d, len %" "d" ", source\
                                           11661 *  %s, "
                                           11662 * ***                                   "replyq %p)\n",
000079DC E310 C190 0004          00007970  11663          LG    1,@lit_1472_415
000079E2 4150 11D0               000001D0  11664          LA    5,464(0,1)
000079E6 E350 D0B8 0024          000000B8  11665          STG   5,184(0,13)
000079EC E320 D0C0 0024          000000C0  11666          STG   2,192(0,13)
000079F2 E3F0 D0C8 0024          000000C8  11667          STG   15,200(0,13)
000079F8 E3F0 201C 0014          0000001C  11668          LGF   15,28(0,2)
000079FE E3F0 D0D0 0024          000000D0  11669          STG   15,208(0,13)
00007A04 E3F0 2018 0014          00000018  11670          LGF   15,24(0,2)
00007A0A E3F0 D0D8 0024          000000D8  11671          STG   15,216(0,13)
00007A10 E3F0 2034 0014          00000034  11672          LGF   15,52(0,2)
00007A16 E3F0 D0E0 0024          000000E0  11673          STG   15,224(0,13)
00007A1C E3F0 2030 0014          00000030  11674          LGF   15,48(0,2)
00007A22 E3F0 D0E8 0024          000000E8  11675          STG   15,232(0,13)
                                           11676 * ***
                                           11677 * ***
                                           11678 * ***
                                           11679 * ***                                                                 \
                                           11680 *   ,
00007A28 41F0 1212               00000212  11681          LA    15,530(0,1)
00007A2C E3F0 D0F0 0024          000000F0  11682          STG   15,240(0,13)
                                           11683 * ***                                   );
00007A32 E3F0 2040 0004          00000040  11684          LG    15,64(0,2)
00007A38 E3F0 D0F8 0024          000000F8  11685          STG   15,248(0,13)
00007A3E 4110 D0B0               000000B0  11686          LA    1,176(0,13)
00007A42 E3F0 C188 0004          00007968  11687          LG    15,@lit_1472_416 ; fprintf
00007A48                                   11688 @@gen_label729 DS    0H
00007A48 05EF                              11689          BALR  14,15
00007A4A                                   11690 @@gen_label730 DS    0H
                                           11691 * ***                   }
00007A4A E320 2000 0004          00000000  11692          LG    2,0(0,2)    ; rko
00007A50                                   11693 @L877    DS    0H
00007A50 B902 00F2                         11694          LTGR  15,2
00007A54 4770 C1DE               000079BE  11695          BNE   @L876
                                           11696 * ***           }
00007A58                                   11697 @L874    DS    0H
                                                                                                                           Page  234 
  Active Usings: @REGION_1472_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11698 * ***
                                           11699 * ***           mtx_unlock(&rkq->rkq_lock);
00007A58 E340 D0B0 0024          000000B0  11700          STG   4,176(0,13)
00007A5E 4110 D0B0               000000B0  11701          LA    1,176(0,13)
00007A62 E3F0 C1A8 0004          00007988  11702          LG    15,@lit_1472_425 ; mtx_unlock
00007A68                                   11703 @@gen_label732 DS    0H
00007A68 05EF                              11704          BALR  14,15
00007A6A                                   11705 @@gen_label733 DS    0H
                                           11706 * ***   }
00007A6A                                   11707 @ret_lab_1472 DS 0H
                                           11708 * * **** Start of Epilogue
                                           11709          DCCEPIL
00007A6A                                   11710+         ds 0h                                                          01-DCCEP
                                           11711+* Epilog
00007A6A D707 D088 D088 00000088 00000088  11712+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00007A70 E3D0 D080 0004          00000080  11713+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00007A76 E3C0 D090 0004          00000090  11714+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00007A7C E3B0 C018 0004          00000018  11715+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00007A82 E3C0 B010 0021          00000010  11716+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00007A88 E3E0 D008 0004          00000008  11717+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007A8E EB1C D020 0004          00000020  11718+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00007A94 078E                              11719+         bcr 8,14                if same dsab, just return              01-DCCEP
00007A96 E3F0 D010 0024          00000010  11720+         stg 15,16(0,13)         save return code                       01-DCCEP
00007A9C E300 D018 0024          00000018  11721+         stg 0,24(0,13)          save more return code                  01-DCCEP
00007AA2 E3F0 D090 0004          00000090  11722+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007AA8 E3F0 F018 0004          00000018  11723+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00007AAE 47F0 F040               00000040  11724+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           11725+* End of Epilog
                                           11726 * * **** End of Epilogue
                                           11727          DROP  12
                                           11728 *
                                           11729 *   DSECT for automatic variables in "rd_kafka_q_dump"
                                           11730 *      (FUNCTION #1472)
                                           11731 *
00000000                00000000 000000A8  11732 @AUTO#rd_kafka_q_dump DSECT
00000000                                   11733          DS    XL168
                                           11734 *
00007AB2                00000000 00007BF0  11735 @CODE    CSECT
                                           11736 *
                                           11737 *
                                           11738 *
                                           11739 * ....... start of rd_kafka_enq_once_trigger_destroy
                                           11740 rd_kafka_enq_once_trigger_destroy ALIAS X'99846D92818692816D8595986D969*
                                                                583856DA39989878785996D8485A2A39996A8'
00007AB2                                   11741 @LNAME1478 DS  0H
00007AB2 00000021                          11742          DC    X'00000021'
00007AB6 99846D9281869281                  11743          DC    C'rd_kafka_enq_once_trigger_destro'
00007AD6 A8                                11744          DC    C'y'
00007AD7 00                                11745          DC    X'00'
                                           11746 rd_kafka_enq_once_trigger_destroy DCCPRLG CINDEX=1478,BASER=12,FRAME=20*
                                                                0,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1478
                                           11747          macro
                                                                                                                           Page  235 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11748          dccextrn &m
                                           11749          gblc    &$dccext(1000)
                                           11750          gbla    &$dccexti
                                           11751          lcla    &i
                                           11752 &$dccext(&$dccexti+1) setc    '&m'
                                           11753 &i       seta    1
                                           11754 .loop    aif    (&i gt &$dccexti).around
                                           11755          aif    ('&$dccext(&i)' eq '&m').getout
                                           11756 &i       seta    &i+1
                                           11757          ago     .loop
                                           11758 .around  anop
                                           11759 &$dccexti seta &$dccexti+1
                                           11760          extrn  &m
                                           11761 .getout  anop
                                           11762          mend
00007AD8                                   11763+$eye0216    ds    0d                                                    02-DCCCA
00007AD8 C4C3C3                            11764+         dc cl3'DCC'                                                    02-DCCCA
00007ADB 01                                11765+         dc xl1'01' format one                                          02-DCCCA
00007ADC 00000000                          11766+         dc a(0)                                                        02-DCCCA
00007AE0 0000000000007B4A                  11767+         dc ad(@PER_1478)                                               02-DCCCA
00007AE8 00000000000000C8                  11768+         dc ad(200)                                                     02-DCCCA
00007AF0 0000000000000000                  11769+         dc ad(0)                                                       02-DCCCA
00007AF8 0000000000001000                  11770+         dc ad(4096)                                                    02-DCCCA
00007B00 20                                11771+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00007B01 03                                11772+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00007B02 03                                11773+         dc al1(3)                                                      02-DCCCA
00007B03 08                                11774+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00007B04 00                                11775+         dc bl.8'00000000'                                              02-DCCCA
00007B05 000000                            11776+         dc al3(0)                                                      02-DCCCA
00007B08 0000000000007AB2                  11777+         dc ad(@LNAME1478)                                              02-DCCCA
00007B10                                   11778+         ds 0d                                                          02-DCCCA
00007B10 0000000000007AD8                  11779+         dc ad($eye0216)                                                02-DCCCA
00007B18 0000000000000000                  11780+         dc ad(0)                                                       02-DCCCA
00007B20                                   11781+         ds    0d                                                       01-DCCPR
                                           11782+         entry rd_kafka_enq_once_trigger_destroy                        01-DCCPR
00007B20                                   11783+rd_kafka_enq_once_trigger_destroy ds 0d                                 01-DCCPR
00007B20                                   11784+@REGION_1478_1 ds 0h                                                    01-DCCPR
00007B20 EBEC D008 0024          00000008  11785+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00007B26 E3E0 D088 0004          00000088  11786+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00007B2C E3C0 D090 0004          00000090  11787+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00007B32 B904 002E                         11788+         lgr   2,14                copy addr of our savearea            01-DCCPR
00007B36 E3B0 C018 0004          00000018  11789+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00007B3C A7EB 00C8               000000C8  11790+         aghi  14,200              increase by frame size               01-DCCPR
00007B40 E3E0 C020 0021          00000020  11791+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00007B46 4720 B020               00000020  11792+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00007B4A                                   11793+@PER_1478 ds   0h                                                       01-DCCPR
00007B4A EBDE 2080 0024          00000080  11794+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007B50 E3C0 2090 0024          00000090  11795+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00007B56 B904 00D2                         11796+         lgr   13,2                set real frame pointer               01-DCCPR
00007B5A B904 00CF                         11797+         lgr   12,15               set base reg                         01-DCCPR
                        00007B20           11798+         using @REGION_1478_1,12                                        01-DCCPR
                                           11799 * ******* End of Prologue
                                                                                                                           Page  236 
  Active Usings: @REGION_1478_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11800 * *
                                           11801 * ***           rd_kafka_enq_once_t *eonce = ptr;
00007B5E E3F0 1000 0004          00000000  11802          LG    15,0(0,1)   ; ptr
                                           11803 * ***
                                           11804 * ***           rd_kafka_enq_once_trigger(eonce, RD_KAFKA_RESP_ERR__DE\
                                           11805 * STROY, "destroy");
00007B64 E3F0 D0B0 0024          000000B0  11806          STG   15,176(0,13)
00007B6A E548 D0B8 FF3B          000000B8  11807          MVGHI 184(13),-197
00007B70 E3F0 C0C8 0004          00007BE8  11808          LG    15,@lit_1478_427
00007B76 41F0 F214               00000214  11809          LA    15,532(0,15)
00007B7A E3F0 D0C0 0024          000000C0  11810          STG   15,192(0,13)
00007B80 4110 D0B0               000000B0  11811          LA    1,176(0,13)
00007B84 E3F0 C0C0 0004          00007BE0  11812          LG    15,@lit_1478_428 ; rd_kafka_enq_once_trigger
00007B8A                                   11813 @@gen_label734 DS    0H
00007B8A 05EF                              11814          BALR  14,15
00007B8C                                   11815 @@gen_label735 DS    0H
                                           11816 * ***   }
00007B8C                                   11817 @ret_lab_1478 DS 0H
                                           11818 * * **** Start of Epilogue
                                           11819          DCCEPIL
00007B8C                                   11820+         ds 0h                                                          01-DCCEP
                                           11821+* Epilog
00007B8C D707 D088 D088 00000088 00000088  11822+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00007B92 E3D0 D080 0004          00000080  11823+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00007B98 E3C0 D090 0004          00000090  11824+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00007B9E E3B0 C018 0004          00000018  11825+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00007BA4 E3C0 B010 0021          00000010  11826+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00007BAA E3E0 D008 0004          00000008  11827+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007BB0 EB1C D020 0004          00000020  11828+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00007BB6 078E                              11829+         bcr 8,14                if same dsab, just return              01-DCCEP
00007BB8 E3F0 D010 0024          00000010  11830+         stg 15,16(0,13)         save return code                       01-DCCEP
00007BBE E300 D018 0024          00000018  11831+         stg 0,24(0,13)          save more return code                  01-DCCEP
00007BC4 E3F0 D090 0004          00000090  11832+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007BCA E3F0 F018 0004          00000018  11833+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00007BD0 47F0 F040               00000040  11834+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           11835+* End of Epilog
                                           11836 * * **** End of Epilogue
00007BD8                                   11837          DS    0D
00007BD8 000000C8                          11838 @FRAMESIZE_1478 DC F'200'
00007BDC 00000000
00007BE0 0000000000003118                  11839 @lit_1478_428 DC AD(rd_kafka_enq_once_trigger)
00007BE8 0000000000007DFE                  11840 @lit_1478_427 DC AD(@strings@)
                                           11841          DROP  12
                                           11842 *
                                           11843 *   DSECT for automatic variables in "rd_kafka_enq_once_trigger_destro
                                           11844 *           y"
                                           11845 *      (FUNCTION #1478)
                                           11846 *
00000000                00000000 000000A8  11847 @AUTO#rd_kafka_enq_once_trigger_destroy DSECT
00000000                                   11848          DS    XL168
                                           11849 *
00007BF0                00000000 00007BF0  11850 @CODE    CSECT
                                                                                                                           Page  237 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11851 rd_kafka_yield_thread ALIAS X'99846D92818692816DA8898593846DA3889985818*
                                                                4'
                                           11852 rd_kafka_yield_thread DXD 1F
                                           11853 @@STATIC ALIAS X'7C998492818692816D98A485A48550'
                                           11854 @@STATIC DXD   219D
                                           11855 *
                                           11856 *  Non-Re-Entrant Data Section
                                           11857 *
00007BF0                00007BF0 00000964  11858 @DATA    CSECT
                                           11859 @DATA    RMODE ANY
                                           11860 @DATA    AMODE ANY
00007BF0 99846D8381939396                  11861 @@T48F   DC    X'99846D838193939683'               rd.calloc
00007BF9 00                                11862          DC    1X'00'
00007BFA 99846D9481939396                  11863 @@T493   DC    X'99846D948193939683'               rd.malloc
00007C03 00                                11864          DC    1X'00'
00007C04 99846D9985819393                  11865 @@T498   DC    X'99846D99858193939683'             rd.realloc
00007C0E 0000                              11866          DC    2X'00'
00007C10 99846DA2A39984A4                  11867 @@T49E   DC    X'99846DA2A39984A497'               rd.strdup
00007C19 00                                11868          DC    1X'00'
00007C1A 99846DA2A3999584                  11869 @@T4A3   DC    X'99846DA2A3999584A497'             rd.strndup
00007C24 0000                              11870          DC    2X'00'
00007C26 99846D9985868395                  11871 @@T4AB   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
00007C34 00000000                          11872          DC    4X'00'
00007C38 00000000                          11873 @@T65A   DC    4X'00'
00007C3C 0000001A00000000                  11874          DC    X'0000001A000000000000002200000000' ................
00007C4C 00000024                          11875          DC    X'00000024'                         ....
00007C50 99846D9281869281                  11876 @@T67D   DC    X'99846D92818692816D94A287986D8485' rd.kafka.msgq.de
00007C60 98                                11877          DC    X'98'                               q
00007C61 00                                11878          DC    1X'00'
00007C62 99846D9281869281                  11879 @@T704   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
00007C72 96A8F0                            11880          DC    X'96A8F0'                           oy0
00007C75 00                                11881          DC    1X'00'
00007C76 99846D9281869281                  11882 @@T785   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00007C86 856D8485A2A39996                  11883          DC    X'856D8485A2A39996A8F0'             e.destroy0
00007C90 0000                              11884          DC    2X'00'
00007C92 99846D9281869281                  11885 @@T78D   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00007CA2 856D8485936DA296                  11886          DC    X'856D8485936DA296A4998385'         e.del.source
00007CAE 0000                              11887          DC    2X'00'
00007CB0 99846D9281869281                  11888 @@T794   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00007CC0 856D8485936DA296                  11889          DC    X'856D8485936DA296A49983856D9985A3' e.del.source.ret
00007CD0 A49995                            11890          DC    X'A49995'                           urn
00007CD3 00                                11891          DC    1X'00'
00007CD4 99846D9281869281                  11892 @@T79C   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00007CE4 856DA39989878785                  11893          DC    X'856DA3998987878599'               e.trigger
00007CED 00                                11894          DC    1X'00'
00007CEE 99846D9281869281                  11895 @@T7A0   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00007CFE 856D8485A2A39996                  11896          DC    X'856D8485A2A39996A8'               e.destroy
00007D07 00                                11897          DC    1X'00'
00007D08 99846D9281869281                  11898 @@T7A5   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00007D18 856D8489A2818293                  11899          DC    X'856D8489A281829385'               e.disable
00007D21 00                                11900          DC    1X'00'
00007D22 99846DA394978182                  11901 @@T7C5   DC    X'99846DA394978182A4866D8193939683' rd.tmpabuf.alloc
                                                                                                                           Page  238 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007D32 F0                                11902          DC    X'F0'                               0
00007D33 00                                11903          DC    1X'00'
00007D34 99846D9281869281                  11904 @@T7F9   DC    X'99846D92818692816D82A4866DA49784' rd.kafka.buf.upd
00007D44 81A385                            11905          DC    X'81A385'                           ate
00007D47 00                                11906          DC    1X'00'
00007D48 99846D9281869281                  11907 @@T81A   DC    X'99846D92818692816D82A4866D868995' rd.kafka.buf.fin
00007D58 819389A9856D8199                  11908          DC    X'819389A9856D81999981A88395A3'     alize.arraycnt
00007D66 0000                              11909          DC    2X'00'
00007D68 99846D9281869281                  11910 @@T857   DC    X'99846D92818692816D82A4866D839983' rd.kafka.buf.crc
00007D78 6D899589A3                        11911          DC    X'6D899589A3'                       .init
00007D7D 00                                11912          DC    1X'00'
00007D7E 99846D9281869281                  11913 @@TA27   DC    X'99846D92818692816D83A499996D94A2' rd.kafka.curr.ms
00007D8E 87A26DA2A482                      11914          DC    X'87A26DA2A482'                     gs.sub
00007D94 0000                              11915          DC    2X'00'
00007D96 99846D9281869281                  11916 @@TA73   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
00007DA6 96A86D8689958193                  11917          DC    X'96A86D8689958193'                 oy.final
00007DAE 0000                              11918          DC    2X'00'
00007DB0 99846D9281869281                  11919 @@TA7C   DC    X'99846D92818692816D986D9585A6F0'   rd.kafka.q.new0
00007DBF 00                                11920          DC    1X'00'
00007DC0 99846D9281869281                  11921 @@TAB9   DC    X'99846D92818692816D986DA28599A585' rd.kafka.q.serve
00007DD0 0000                              11922          DC    2X'00'
00007DD2 99846D9281869281                  11923 @@TAD7   DC    X'99846D92818692816D98A485A4856D95' rd.kafka.queue.n
00007DE2 85A6                              11924          DC    X'85A6'                             ew
00007DE4 0000                              11925          DC    2X'00'
00007DE6 99846D9281869281                  11926 @@TB0C   DC    X'99846D92818692816D986D8689A76D96' rd.kafka.q.fix.o
00007DF6 8686A285A3A2                      11927          DC    X'8686A285A3A2'                     ffsets
00007DFC 00                                11928          DC    1X'00'
00007DFE                                   11929 @strings@ DS   0H
00007DFE C37AE081A2879281                  11930          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
00007E0E 849281869281E0A2                  11931          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
00007E1E 97009985868395A3                  11932          DC    X'97009985868395A340A2A48260A98599' p.refcnt.sub.zer
00007E2E 96005A5C7F998586                  11933          DC    X'96005A5C7F9985868395A340A2A48260' o....refcnt.sub.
00007E3E A98599967F00C37A                  11934          DC    X'A98599967F00C37AE081A28792818692' zero..C..asgkafk
00007E4E 81E0938982998492                  11935          DC    X'81E093898299849281869281E0A29983' a.librdkafka.src
00007E5E E099849281869281                  11936          DC    X'E0998492818692816D98A485A4854B88' .rdkafka.queue.h
00007E6E 000081A2A28599A3                  11937          DC    X'000081A2A28599A37A40999298606E99' ..assert..rkq..r
00007E7E 92986D9985868395                  11938          DC    X'92986D9985868395A3406E40F0005A85' kq.refcnt...0..e
00007E8E 96958385606E9992                  11939          DC    X'96958385606E999296005A8596958385' once..rko..eonce
00007E9E 606E99859793A898                  11940          DC    X'606E99859793A8984B98000085969583' ..replyq.q..eonc
00007EAE 85606E9985868395                  11941          DC    X'85606E9985868395A3407E7E40F00000' e..refcnt....0..
00007EBE 8596958385606E99                  11942          DC    X'8596958385606E9985868395A3406E40' eonce..refcnt...
00007ECE F000C37AE081A287                  11943          DC    X'F000C37AE081A2879281869281E09389' 0.C..asgkafka.li
00007EDE 8299849281869281                  11944          DC    X'8299849281869281E0A29983E0998492' brdkafka.src.rdk
00007EEE 818692816D98A485                  11945          DC    X'818692816D98A485A4854B8300005A99' afka.queue.c...r
00007EFE 9298606E9992986D                  11946          DC    X'9298606E9992986D86A68498000081A2' kq..rkq.fwdq..as
00007F0E A28599A37A409985                  11947          DC    X'A28599A37A409985A2405A7E40D9C46D' sert..res....RD.
00007F1E D2C1C6D2C16DD6D7                  11948          DC    X'D2C1C6D2C16DD6D76DD9C5E26DD7C1E2' KAFKA.OP.RES.PAS
00007F2E E20081A2A28599A3                  11949          DC    X'E20081A2A28599A37A405A999298606E' S.assert...rkq..
00007F3E 9992986D86A68498                  11950          DC    X'9992986D86A684980000D8A485A48540' rkq.fwdq..Queue.
00007F4E 6C97407F6CA27F40                  11951          DC    X'6C97407F6CA27F404D9985868395A340' .p...s...refcnt.
00007F5E 6C846B4086938187                  11952          DC    X'6C846B4086938187A240F0A76CA76B40' .d..flags.0x.x..
00007F6E 6C84409697A26B40                  11953          DC    X'6C84409697A26B406C9393844082A8A3' .d.ops...lld.byt
                                                                                                                           Page  239 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007F7E 85A25D15000040D8                  11954          DC    X'85A25D15000040D8C9D6408684406C84' es.....QIO.fd..d
00007F8E 150040E28599A585                  11955          DC    X'150040E28599A5854083819393828183' ...Serve.callbac
00007F9E 92406C976B409697                  11956          DC    X'92406C976B4096978198A485406C9715' k..p..opaque..p.
00007FAE 000040C69699A681                  11957          DC    X'000040C69699A6819984858440606E15' ...Forwarded....
00007FBE 000040D8A485A485                  11958          DC    X'000040D8A485A48584409697A27A1500' ...Queued.ops...
00007FCE 40406C97406CA240                  11959          DC    X'40406C97406CA2404DA56C846B408693' ...p..s..v.d..fl
00007FDE 8187A240F0A76CA7                  11960          DC    X'8187A240F0A76CA76B4097998996406C' ags.0x.x..prio..
00007FEE 846B40938595406C                  11961          DC    X'846B40938595406C846B40A296A49983' d..len..d..sourc
00007FFE 85406CA26B409985                  11962          DC    X'85406CA26B4099859793A898406C975D' e..s..replyq..p.
0000800E 150060008485A2A3                  11963          DC    X'150060008485A2A39996A800D7999684' ....destroy.Prod
0000801E A4838500C685A383                  11964          DC    X'A4838500C685A3838800D68686A285A3' uce.Fetch.Offset
0000802E 0000D485A3818481                  11965          DC    X'0000D485A3818481A3810000D3858184' ..Metadata..Lead
0000803E 8599C19584C9A299                  11966          DC    X'8599C19584C9A2990000E2A39697D985' erAndIsr..StopRe
0000804E 979389838100E497                  11967          DC    X'979389838100E4978481A385D485A381' plica.UpdateMeta
0000805E 8481A3810000C396                  11968          DC    X'8481A3810000C39695A3999693938584' data..Controlled
0000806E E288A4A38496A695                  11969          DC    X'E288A4A38496A6950000D68686A285A3' Shutdown..Offset
0000807E C396949489A30000                  11970          DC    X'C396949489A30000D68686A285A3C685' Commit..OffsetFe
0000808E A3838800C6899584                  11971          DC    X'A3838800C6899584C396969984899581' tch.FindCoordina
0000809E A3969900D1968995                  11972          DC    X'A3969900D1968995C79996A49700C885' tor.JoinGroup.He
000080AE 8199A3828581A300                  11973          DC    X'8199A3828581A300D38581A585C79996' artbeat.LeaveGro
000080BE A4970000E2A89583                  11974          DC    X'A4970000E2A89583C79996A49700C485' up..SyncGroup.De
000080CE A28399898285C799                  11975          DC    X'A28399898285C79996A497A20000D389' scribeGroups..Li
000080DE A2A3C79996A497A2                  11976          DC    X'A2A3C79996A497A20000E281A293C881' stGroups..SaslHa
000080EE 9584A28881928500                  11977          DC    X'9584A28881928500C19789E58599A289' ndshake.ApiVersi
000080FE 96950000C3998581                  11978          DC    X'96950000C3998581A385E396978983A2' on..CreateTopics
0000810E 0000C4859385A385                  11979          DC    X'0000C4859385A385E396978983A20000' ..DeleteTopics..
0000811E C4859385A385D985                  11980          DC    X'C4859385A385D98583969984A200C995' DeleteRecords.In
0000812E 89A3D7999684A483                  11981          DC    X'89A3D7999684A4838599C9840000D686' itProducerId..Of
0000813E 86A285A3C69699D3                  11982          DC    X'86A285A3C69699D38581848599C59796' fsetForLeaderEpo
0000814E 83880000C18484D7                  11983          DC    X'83880000C18484D78199A389A3899695' ch..AddPartition
0000815E A2E396E3A7950000                  11984          DC    X'A2E396E3A7950000C18484D68686A285' sToTxn..AddOffse
0000816E A3A2E396E3A79500                  11985          DC    X'A3A2E396E3A79500C59584E3A7950000' tsToTxn.EndTxn..
0000817E E69989A385E3A795                  11986          DC    X'E69989A385E3A795D48199928599A200' WriteTxnMarkers.
0000818E E3A795D68686A285                  11987          DC    X'E3A795D68686A285A3C396949489A300' TxnOffsetCommit.
0000819E C485A28399898285                  11988          DC    X'C485A28399898285C18393A20000C399' DescribeAcls..Cr
000081AE 8581A385C18393A2                  11989          DC    X'8581A385C18393A20000C4859385A385' eateAcls..Delete
000081BE C18393A20000C485                  11990          DC    X'C18393A20000C485A28399898285C396' Acls..DescribeCo
000081CE 95868987A200C193                  11991          DC    X'95868987A200C193A38599C396958689' nfigs.AlterConfi
000081DE 87A20000C193A385                  11992          DC    X'87A20000C193A38599D9859793898381' gs..AlterReplica
000081EE D39687C48999A200                  11993          DC    X'D39687C48999A200C485A28399898285' LogDirs.Describe
000081FE D39687C48999A200                  11994          DC    X'D39687C48999A200E281A293C1A4A388' LogDirs.SaslAuth
0000820E 8595A3898381A385                  11995          DC    X'8595A3898381A3850000C3998581A385' enticate..Create
0000821E D78199A389A38996                  11996          DC    X'D78199A389A3899695A20000C3998581' Partitions..Crea
0000822E A385C48593858781                  11997          DC    X'A385C48593858781A3899695E3969285' teDelegationToke
0000823E 9500D9859585A6C4                  11998          DC    X'9500D9859585A6C48593858781A38996' n.RenewDelegatio
0000824E 95E3969285950000                  11999          DC    X'95E3969285950000C5A797899985C485' nToken..ExpireDe
0000825E 93858781A3899695                  12000          DC    X'93858781A3899695E39692859500C485' legationToken.De
0000826E A28399898285C485                  12001          DC    X'A28399898285C48593858781A3899695' scribeDelegation
0000827E E39692859500C485                  12002          DC    X'E39692859500C4859385A385C79996A4' Token.DeleteGrou
0000828E 97A20000C5938583                  12003          DC    X'97A20000C5938583A3D38581848599A2' ps..ElectLeaders
0000829E D98598A485A2A300                  12004          DC    X'D98598A485A2A300C995839985948595' Request.Incremen
000082AE A38193C193A38599                  12005          DC    X'A38193C193A38599C39695868987A2D9' talAlterConfigsR
                                                                                                                           Page  240 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000082BE 8598A485A2A30000                  12006          DC    X'8598A485A2A30000C193A38599D78199' equest..AlterPar
000082CE A389A3899695D985                  12007          DC    X'A389A3899695D98581A2A28987959485' titionReassignme
000082DE 95A3A2D98598A485                  12008          DC    X'95A3A2D98598A485A2A30000D389A2A3' ntsRequest..List
000082EE D78199A389A38996                  12009          DC    X'D78199A389A3899695D98581A2A28987' PartitionReassig
000082FE 95948595A3A2D985                  12010          DC    X'95948595A3A2D98598A485A2A300D686' nmentsRequest.Of
0000830E 86A285A3C4859385                  12011          DC    X'86A285A3C4859385A385D98598A485A2' fsetDeleteReques
0000831E A300C485A2839989                  12012          DC    X'A300C485A28399898285C393898595A3' t.DescribeClient
0000832E D8A496A381A2D985                  12013          DC    X'D8A496A381A2D98598A485A2A300C193' QuotasRequest.Al
0000833E A38599C393898595                  12014          DC    X'A38599C393898595A3D8A496A381A2D9' terClientQuotasR
0000834E 8598A485A2A30000                  12015          DC    X'8598A485A2A30000C485A28399898285' equest..Describe
0000835E E4A28599E2839981                  12016          DC    X'E4A28599E283998194C39985848595A3' UserScramCredent
0000836E 898193A2D98598A4                  12017          DC    X'898193A2D98598A485A2A300C193A385' ialsRequest.Alte
0000837E 99E4A28599E28399                  12018          DC    X'99E4A28599E283998194C39985848595' rUserScramCreden
0000838E A3898193A2D98598                  12019          DC    X'A3898193A2D98598A485A2A30000E596' tialsRequest..Vo
0000839E A385D98598A485A2                  12020          DC    X'A385D98598A485A2A300C285878995D8' teRequest.BeginQ
000083AE A49699A494C59796                  12021          DC    X'A49699A494C597968388D98598A485A2' uorumEpochReques
000083BE A300C59584D8A496                  12022          DC    X'A300C59584D8A49699A494C597968388' t.EndQuorumEpoch
000083CE D98598A485A2A300                  12023          DC    X'D98598A485A2A300C485A28399898285' Request.Describe
000083DE D8A49699A494D985                  12024          DC    X'D8A49699A494D98598A485A2A300C193' QuorumRequest.Al
000083EE A38599C9A299D985                  12025          DC    X'A38599C9A299D98598A485A2A300E497' terIsrRequest.Up
000083FE 8481A385C68581A3                  12026          DC    X'8481A385C68581A3A49985A2D98598A4' dateFeaturesRequ
0000840E 85A2A300C595A585                  12027          DC    X'85A2A300C595A58593969785D98598A4' est.EnvelopeRequ
0000841E 85A2A30095969585                  12028          DC    X'85A2A30095969585000087A989970000' est.none..gzip..
0000842E A295819797A80000                  12029          DC    X'A295819797A8000093A9F400A9A2A384' snappy..lz4.zstd
0000843E 0000899588859989                  12030          DC    X'0000899588859989A300839695868987' ..inherit.config
0000844E A499858400009385                  12031          DC    X'A4998584000093858199958584008995' ured..learned.in
0000845E A385999581930000                  12032          DC    X'A3859995819300009396878983819300' ternal..logical.
0000846E C99589A30000E385                  12033          DC    X'C99589A30000E3859994899581A38500' Init..Terminate.
0000847E C681A38193C59999                  12034          DC    X'C681A38193C5999996990000D98598A4' FatalError..Requ
0000848E 85A2A3D7C9C40000                  12035          DC    X'85A2A3D7C9C40000E68189A3E3998195' estPID..WaitTran
0000849E A2979699A300E681                  12036          DC    X'A2979699A300E68189A3D7C9C400C1A2' sport.WaitPID.As
000084AE A289879585840000                  12037          DC    X'A289879585840000C499818995D985A2' signed..DrainRes
000084BE 85A30000C4998189                  12038          DC    X'85A30000C499818995C2A4949700D985' et..DrainBump.Re
000084CE 8184A8D596A3C183                  12039          DC    X'8184A8D596A3C18392858400D9858184' adyNotAcked.Read
000084DE A800C995E3998195                  12040          DC    X'A800C995E3998195A28183A389969500' y.InTransaction.
000084EE C285878995C39694                  12041          DC    X'C285878995C396949489A300C3969494' BeginCommit.Comm
000084FE 89A3A3899587E399                  12042          DC    X'89A3A3899587E3998195A28183A38996' ittingTransactio
0000850E 9500C396949489A3                  12043          DC    X'9500C396949489A3D596A3C183928584' n.CommitNotAcked
0000851E 0000C1829699A389                  12044          DC    X'0000C1829699A3899587E3998195A281' ..AbortingTransa
0000852E 83A389969500C182                  12045          DC    X'83A389969500C1829699A38584D596A3' ction.AbortedNot
0000853E C18392858400C182                  12046          DC    X'C18392858400C1829699A381829385C5' Acked.AbortableE
0000854E 999996990000                      12047          DC    X'999996990000'                     rror..
                                           12048 *
                                           12049 *   Rent ref/def section
                                           12050 *
                                           12051 @Drd_kafka_yield_thread ALIAS X'99846D92818692816DA8898593846DA38899858*
                                                                184'
                                           12052          ENTRY @Drd_kafka_yield_thread
00008554                                   12053 @Drd_kafka_yield_thread DS 0H
                                           12054 *
                                           12055 *
                                           12056 *   Re-entrant Data Initialization Section
                                                                                                                           Page  241 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12057 *
                                           12058 @@INIT@  ALIAS C'rdkafka_queue:'
00008558                00008558 00001040  12059 @@INIT@  CSECT
                                           12060 @@INIT@  AMODE ANY
                                           12061 @@INIT@  RMODE ANY
00008558 05                                12062          DC    XL1'5'
00008559 000000                            12063          DC    AL3(0)
0000855C 00000120                          12064          DC    AL4(288)
00008560 00000000                          12065          DC    4X'00'
00008564 00000000                          12066          DC    Q(@@STATIC)
00008568 00000000                          12067          DC    X'00000000'
0000856C 00000001                          12068          DC    X'00000001'
00008570 00000000                          12069          DC    X'00000000'
00008574 000000FF                          12070          DC    X'000000FF'
00008578 0102039C09867F97                  12071          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00008588 1112139D85088718                  12072          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00008598 818283840A171B88                  12073          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
000085A8 9116939495960498                  12074          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
000085B8 A0E2E4E0E1E3E5E7                  12075          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
000085C8 E9EAEBE8EDEEEFEC                  12076          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
000085D8 2FC2C4C0C1C3C5C7                  12077          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
000085E8 C9CACBC8CDCECFCC                  12078          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
000085F8 6162636465666768                  12079          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00008608 6A6B6C6D6E6F7071                  12080          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
00008618 7E73747576777879                  12081          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
00008628 A3A5B7A9A7B6BCBD                  12082          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00008638 4142434445464748                  12083          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
00008648 4A4B4C4D4E4F5051                  12084          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
00008658 F753545556575859                  12085          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00008668 3132333435363738                  12086          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                           12087 *
00008678 05                                12088          DC    XL1'5'
00008679 000000                            12089          DC    AL3(0)
0000867C 000001E0                          12090          DC    AL4(480)
00008680 00000000                          12091          DC    4X'00'
00008684 00000000                          12092          DC    Q(@@STATIC)
00008688 00000000                          12093          DC    X'00000000'
0000868C 00000101                          12094          DC    X'00000101'
00008690 00000000                          12095          DC    X'00000000'
00008694 000000A0                          12096          DC    X'000000A0'
00008698 010203372D2E2F16                  12097          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
000086A8 1112133C3D322618                  12098          DC    X'1112133C3D322618193F271C1D1E1F40' ................
000086B8 5A7F7B5B6C507D4D                  12099          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
000086C8 F1F2F3F4F5F6F7F8                  12100          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
000086D8 C1C2C3C4C5C6C7C8                  12101          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
000086E8 D8D9E2E3E4E5E6E7                  12102          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
000086F8 8182838485868788                  12103          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00008708 9899A2A3A4A5A6A7                  12104          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00008718 2122232425061728                  12105          DC    X'2122232425061728292A2B2C090A1B30' ................
00008728 311A333435360838                  12106          DC    X'311A333435360838393A3B04143EFF80' ................
                                           12107 *
00008738 05                                12108          DC    XL1'5'
                                                                                                                           Page  242 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008739 000000                            12109          DC    AL3(0)
0000873C 00000208                          12110          DC    AL4(520)
00008740 00000000                          12111          DC    4X'00'
00008744 00000000                          12112          DC    Q(@@STATIC)
00008748 00000000                          12113          DC    X'00000000'
0000874C 000001C0                          12114          DC    X'000001C0'
00008750 00000000                          12115          DC    X'00000000'
00008754 00000001                          12116          DC    X'00000001'
00008758 8A40404040404040                  12117          DC    X'8A40404040404040'                 ........
                                           12118 *
00008760 05                                12119          DC    XL1'5'
00008761 000000                            12120          DC    AL3(0)
00008764 00000230                          12121          DC    AL4(560)
00008768 00000000                          12122          DC    4X'00'
0000876C 00000000                          12123          DC    Q(@@STATIC)
00008770 00000000                          12124          DC    X'00000000'
00008774 000001E0                          12125          DC    X'000001E0'
00008778 00000000                          12126          DC    X'00000000'
0000877C 00000001                          12127          DC    X'00000001'
00008780 8B40404040404040                  12128          DC    X'8B40404040404040'                 ........
                                           12129 *
00008788 0D                                12130          DC    XL1'D'
00008789 000000                            12131          DC    AL3(0)
0000878C 00000258                          12132          DC    AL4(600)
00008790 00000000                          12133          DC    4X'00'
00008794 00000000                          12134          DC    Q(@@STATIC)
00008798 00000000                          12135          DC    X'00000000'
0000879C 00000220                          12136          DC    X'00000220'
000087A0 0000000000007BF0                  12137          DC    ADL8(@DATA)
000087A8 00000000                          12138          DC    X'00000000'
000087AC 0000042A                          12139          DC    X'0000042A'
                                           12140 *
000087B0 0D                                12141          DC    XL1'D'
000087B1 000000                            12142          DC    AL3(0)
000087B4 00000280                          12143          DC    AL4(640)
000087B8 00000000                          12144          DC    4X'00'
000087BC 00000000                          12145          DC    Q(@@STATIC)
000087C0 00000000                          12146          DC    X'00000000'
000087C4 00000228                          12147          DC    X'00000228'
000087C8 0000000000007BF0                  12148          DC    ADL8(@DATA)
000087D0 00000000                          12149          DC    X'00000000'
000087D4 00000432                          12150          DC    X'00000432'
                                           12151 *
000087D8 0D                                12152          DC    XL1'D'
000087D9 000000                            12153          DC    AL3(0)
000087DC 000002A8                          12154          DC    AL4(680)
000087E0 00000000                          12155          DC    4X'00'
000087E4 00000000                          12156          DC    Q(@@STATIC)
000087E8 00000000                          12157          DC    X'00000000'
000087EC 00000230                          12158          DC    X'00000230'
000087F0 0000000000007BF0                  12159          DC    ADL8(@DATA)
000087F8 00000000                          12160          DC    X'00000000'
                                                                                                                           Page  243 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000087FC 00000438                          12161          DC    X'00000438'
                                           12162 *
00008800 0D                                12163          DC    XL1'D'
00008801 000000                            12164          DC    AL3(0)
00008804 000002D0                          12165          DC    AL4(720)
00008808 00000000                          12166          DC    4X'00'
0000880C 00000000                          12167          DC    Q(@@STATIC)
00008810 00000000                          12168          DC    X'00000000'
00008814 00000238                          12169          DC    X'00000238'
00008818 0000000000007BF0                  12170          DC    ADL8(@DATA)
00008820 00000000                          12171          DC    X'00000000'
00008824 00000440                          12172          DC    X'00000440'
                                           12173 *
00008828 0D                                12174          DC    XL1'D'
00008829 000000                            12175          DC    AL3(0)
0000882C 000002F8                          12176          DC    AL4(760)
00008830 00000000                          12177          DC    4X'00'
00008834 00000000                          12178          DC    Q(@@STATIC)
00008838 00000000                          12179          DC    X'00000000'
0000883C 00000240                          12180          DC    X'00000240'
00008840 0000000000007BF0                  12181          DC    ADL8(@DATA)
00008848 00000000                          12182          DC    X'00000000'
0000884C 0000044A                          12183          DC    X'0000044A'
                                           12184 *
00008850 0D                                12185          DC    XL1'D'
00008851 000000                            12186          DC    AL3(0)
00008854 00000320                          12187          DC    AL4(800)
00008858 00000000                          12188          DC    4X'00'
0000885C 00000000                          12189          DC    Q(@@STATIC)
00008860 00000000                          12190          DC    X'00000000'
00008864 00000248                          12191          DC    X'00000248'
00008868 0000000000007BF0                  12192          DC    ADL8(@DATA)
00008870 00000000                          12193          DC    X'00000000'
00008874 00000458                          12194          DC    X'00000458'
                                           12195 *
00008878 0D                                12196          DC    XL1'D'
00008879 000000                            12197          DC    AL3(0)
0000887C 00000348                          12198          DC    AL4(840)
00008880 00000000                          12199          DC    4X'00'
00008884 00000000                          12200          DC    Q(@@STATIC)
00008888 00000000                          12201          DC    X'00000000'
0000888C 00000250                          12202          DC    X'00000250'
00008890 0000000000007BF0                  12203          DC    ADL8(@DATA)
00008898 00000000                          12204          DC    X'00000000'
0000889C 00000464                          12205          DC    X'00000464'
                                           12206 *
000088A0 0D                                12207          DC    XL1'D'
000088A1 000000                            12208          DC    AL3(0)
000088A4 00000370                          12209          DC    AL4(880)
000088A8 00000000                          12210          DC    4X'00'
000088AC 00000000                          12211          DC    Q(@@STATIC)
000088B0 00000000                          12212          DC    X'00000000'
                                                                                                                           Page  244 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000088B4 00000258                          12213          DC    X'00000258'
000088B8 0000000000007BF0                  12214          DC    ADL8(@DATA)
000088C0 00000000                          12215          DC    X'00000000'
000088C4 00000474                          12216          DC    X'00000474'
                                           12217 *
000088C8 0D                                12218          DC    XL1'D'
000088C9 000000                            12219          DC    AL3(0)
000088CC 00000398                          12220          DC    AL4(920)
000088D0 00000000                          12221          DC    4X'00'
000088D4 00000000                          12222          DC    Q(@@STATIC)
000088D8 00000000                          12223          DC    X'00000000'
000088DC 00000260                          12224          DC    X'00000260'
000088E0 0000000000007BF0                  12225          DC    ADL8(@DATA)
000088E8 00000000                          12226          DC    X'00000000'
000088EC 00000488                          12227          DC    X'00000488'
                                           12228 *
000088F0 0D                                12229          DC    XL1'D'
000088F1 000000                            12230          DC    AL3(0)
000088F4 000003C0                          12231          DC    AL4(960)
000088F8 00000000                          12232          DC    4X'00'
000088FC 00000000                          12233          DC    Q(@@STATIC)
00008900 00000000                          12234          DC    X'00000000'
00008904 00000268                          12235          DC    X'00000268'
00008908 0000000000007BF0                  12236          DC    ADL8(@DATA)
00008910 00000000                          12237          DC    X'00000000'
00008914 00000496                          12238          DC    X'00000496'
                                           12239 *
00008918 0D                                12240          DC    XL1'D'
00008919 000000                            12241          DC    AL3(0)
0000891C 000003E8                          12242          DC    AL4(1000)
00008920 00000000                          12243          DC    4X'00'
00008924 00000000                          12244          DC    Q(@@STATIC)
00008928 00000000                          12245          DC    X'00000000'
0000892C 00000270                          12246          DC    X'00000270'
00008930 0000000000007BF0                  12247          DC    ADL8(@DATA)
00008938 00000000                          12248          DC    X'00000000'
0000893C 000004A2                          12249          DC    X'000004A2'
                                           12250 *
00008940 0D                                12251          DC    XL1'D'
00008941 000000                            12252          DC    AL3(0)
00008944 00000410                          12253          DC    AL4(1040)
00008948 00000000                          12254          DC    4X'00'
0000894C 00000000                          12255          DC    Q(@@STATIC)
00008950 00000000                          12256          DC    X'00000000'
00008954 00000278                          12257          DC    X'00000278'
00008958 0000000000007BF0                  12258          DC    ADL8(@DATA)
00008960 00000000                          12259          DC    X'00000000'
00008964 000004B2                          12260          DC    X'000004B2'
                                           12261 *
00008968 0D                                12262          DC    XL1'D'
00008969 000000                            12263          DC    AL3(0)
0000896C 00000438                          12264          DC    AL4(1080)
                                                                                                                           Page  245 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008970 00000000                          12265          DC    4X'00'
00008974 00000000                          12266          DC    Q(@@STATIC)
00008978 00000000                          12267          DC    X'00000000'
0000897C 00000280                          12268          DC    X'00000280'
00008980 0000000000007BF0                  12269          DC    ADL8(@DATA)
00008988 00000000                          12270          DC    X'00000000'
0000898C 000004BC                          12271          DC    X'000004BC'
                                           12272 *
00008990 0D                                12273          DC    XL1'D'
00008991 000000                            12274          DC    AL3(0)
00008994 00000460                          12275          DC    AL4(1120)
00008998 00000000                          12276          DC    4X'00'
0000899C 00000000                          12277          DC    Q(@@STATIC)
000089A0 00000000                          12278          DC    X'00000000'
000089A4 00000288                          12279          DC    X'00000288'
000089A8 0000000000007BF0                  12280          DC    ADL8(@DATA)
000089B0 00000000                          12281          DC    X'00000000'
000089B4 000004C6                          12282          DC    X'000004C6'
                                           12283 *
000089B8 0D                                12284          DC    XL1'D'
000089B9 000000                            12285          DC    AL3(0)
000089BC 00000488                          12286          DC    AL4(1160)
000089C0 00000000                          12287          DC    4X'00'
000089C4 00000000                          12288          DC    Q(@@STATIC)
000089C8 00000000                          12289          DC    X'00000000'
000089CC 00000290                          12290          DC    X'00000290'
000089D0 0000000000007BF0                  12291          DC    ADL8(@DATA)
000089D8 00000000                          12292          DC    X'00000000'
000089DC 000004D2                          12293          DC    X'000004D2'
                                           12294 *
000089E0 0D                                12295          DC    XL1'D'
000089E1 000000                            12296          DC    AL3(0)
000089E4 000004B0                          12297          DC    AL4(1200)
000089E8 00000000                          12298          DC    4X'00'
000089EC 00000000                          12299          DC    Q(@@STATIC)
000089F0 00000000                          12300          DC    X'00000000'
000089F4 00000298                          12301          DC    X'00000298'
000089F8 0000000000007BF0                  12302          DC    ADL8(@DATA)
00008A00 00000000                          12303          DC    X'00000000'
00008A04 000004DC                          12304          DC    X'000004DC'
                                           12305 *
00008A08 0D                                12306          DC    XL1'D'
00008A09 000000                            12307          DC    AL3(0)
00008A0C 000004D8                          12308          DC    AL4(1240)
00008A10 00000000                          12309          DC    4X'00'
00008A14 00000000                          12310          DC    Q(@@STATIC)
00008A18 00000000                          12311          DC    X'00000000'
00008A1C 000002A0                          12312          DC    X'000002A0'
00008A20 0000000000007BF0                  12313          DC    ADL8(@DATA)
00008A28 00000000                          12314          DC    X'00000000'
00008A2C 000004EC                          12315          DC    X'000004EC'
                                           12316 *
                                                                                                                           Page  246 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008A30 0D                                12317          DC    XL1'D'
00008A31 000000                            12318          DC    AL3(0)
00008A34 00000500                          12319          DC    AL4(1280)
00008A38 00000000                          12320          DC    4X'00'
00008A3C 00000000                          12321          DC    Q(@@STATIC)
00008A40 00000000                          12322          DC    X'00000000'
00008A44 000002A8                          12323          DC    X'000002A8'
00008A48 0000000000007BF0                  12324          DC    ADL8(@DATA)
00008A50 00000000                          12325          DC    X'00000000'
00008A54 000004F8                          12326          DC    X'000004F8'
                                           12327 *
00008A58 0D                                12328          DC    XL1'D'
00008A59 000000                            12329          DC    AL3(0)
00008A5C 00000528                          12330          DC    AL4(1320)
00008A60 00000000                          12331          DC    4X'00'
00008A64 00000000                          12332          DC    Q(@@STATIC)
00008A68 00000000                          12333          DC    X'00000000'
00008A6C 000002B0                          12334          DC    X'000002B0'
00008A70 0000000000007BF0                  12335          DC    ADL8(@DATA)
00008A78 00000000                          12336          DC    X'00000000'
00008A7C 00000506                          12337          DC    X'00000506'
                                           12338 *
00008A80 0D                                12339          DC    XL1'D'
00008A81 000000                            12340          DC    AL3(0)
00008A84 00000550                          12341          DC    AL4(1360)
00008A88 00000000                          12342          DC    4X'00'
00008A8C 00000000                          12343          DC    Q(@@STATIC)
00008A90 00000000                          12344          DC    X'00000000'
00008A94 000002B8                          12345          DC    X'000002B8'
00008A98 0000000000007BF0                  12346          DC    ADL8(@DATA)
00008AA0 00000000                          12347          DC    X'00000000'
00008AA4 00000512                          12348          DC    X'00000512'
                                           12349 *
00008AA8 0D                                12350          DC    XL1'D'
00008AA9 000000                            12351          DC    AL3(0)
00008AAC 00000578                          12352          DC    AL4(1400)
00008AB0 00000000                          12353          DC    4X'00'
00008AB4 00000000                          12354          DC    Q(@@STATIC)
00008AB8 00000000                          12355          DC    X'00000000'
00008ABC 000002C0                          12356          DC    X'000002C0'
00008AC0 0000000000007BF0                  12357          DC    ADL8(@DATA)
00008AC8 00000000                          12358          DC    X'00000000'
00008ACC 00000520                          12359          DC    X'00000520'
                                           12360 *
00008AD0 0D                                12361          DC    XL1'D'
00008AD1 000000                            12362          DC    AL3(0)
00008AD4 000005A0                          12363          DC    AL4(1440)
00008AD8 00000000                          12364          DC    4X'00'
00008ADC 00000000                          12365          DC    Q(@@STATIC)
00008AE0 00000000                          12366          DC    X'00000000'
00008AE4 000002C8                          12367          DC    X'000002C8'
00008AE8 0000000000007BF0                  12368          DC    ADL8(@DATA)
                                                                                                                           Page  247 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008AF0 00000000                          12369          DC    X'00000000'
00008AF4 0000052E                          12370          DC    X'0000052E'
                                           12371 *
00008AF8 0D                                12372          DC    XL1'D'
00008AF9 000000                            12373          DC    AL3(0)
00008AFC 000005C8                          12374          DC    AL4(1480)
00008B00 00000000                          12375          DC    4X'00'
00008B04 00000000                          12376          DC    Q(@@STATIC)
00008B08 00000000                          12377          DC    X'00000000'
00008B0C 000002D0                          12378          DC    X'000002D0'
00008B10 0000000000007BF0                  12379          DC    ADL8(@DATA)
00008B18 00000000                          12380          DC    X'00000000'
00008B1C 0000053C                          12381          DC    X'0000053C'
                                           12382 *
00008B20 0D                                12383          DC    XL1'D'
00008B21 000000                            12384          DC    AL3(0)
00008B24 000005F0                          12385          DC    AL4(1520)
00008B28 00000000                          12386          DC    4X'00'
00008B2C 00000000                          12387          DC    Q(@@STATIC)
00008B30 00000000                          12388          DC    X'00000000'
00008B34 000002D8                          12389          DC    X'000002D8'
00008B38 0000000000007BF0                  12390          DC    ADL8(@DATA)
00008B40 00000000                          12391          DC    X'00000000'
00008B44 0000054C                          12392          DC    X'0000054C'
                                           12393 *
00008B48 0D                                12394          DC    XL1'D'
00008B49 000000                            12395          DC    AL3(0)
00008B4C 00000618                          12396          DC    AL4(1560)
00008B50 00000000                          12397          DC    4X'00'
00008B54 00000000                          12398          DC    Q(@@STATIC)
00008B58 00000000                          12399          DC    X'00000000'
00008B5C 000002E0                          12400          DC    X'000002E0'
00008B60 0000000000007BF0                  12401          DC    ADL8(@DATA)
00008B68 00000000                          12402          DC    X'00000000'
00008B6C 00000562                          12403          DC    X'00000562'
                                           12404 *
00008B70 0D                                12405          DC    XL1'D'
00008B71 000000                            12406          DC    AL3(0)
00008B74 00000640                          12407          DC    AL4(1600)
00008B78 00000000                          12408          DC    4X'00'
00008B7C 00000000                          12409          DC    Q(@@STATIC)
00008B80 00000000                          12410          DC    X'00000000'
00008B84 000002E8                          12411          DC    X'000002E8'
00008B88 0000000000007BF0                  12412          DC    ADL8(@DATA)
00008B90 00000000                          12413          DC    X'00000000'
00008B94 00000576                          12414          DC    X'00000576'
                                           12415 *
00008B98 0D                                12416          DC    XL1'D'
00008B99 000000                            12417          DC    AL3(0)
00008B9C 00000668                          12418          DC    AL4(1640)
00008BA0 00000000                          12419          DC    4X'00'
00008BA4 00000000                          12420          DC    Q(@@STATIC)
                                                                                                                           Page  248 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008BA8 00000000                          12421          DC    X'00000000'
00008BAC 000002F0                          12422          DC    X'000002F0'
00008BB0 0000000000007BF0                  12423          DC    ADL8(@DATA)
00008BB8 00000000                          12424          DC    X'00000000'
00008BBC 00000586                          12425          DC    X'00000586'
                                           12426 *
00008BC0 0D                                12427          DC    XL1'D'
00008BC1 000000                            12428          DC    AL3(0)
00008BC4 00000690                          12429          DC    AL4(1680)
00008BC8 00000000                          12430          DC    4X'00'
00008BCC 00000000                          12431          DC    Q(@@STATIC)
00008BD0 00000000                          12432          DC    X'00000000'
00008BD4 000002F8                          12433          DC    X'000002F8'
00008BD8 0000000000007BF0                  12434          DC    ADL8(@DATA)
00008BE0 00000000                          12435          DC    X'00000000'
00008BE4 0000058E                          12436          DC    X'0000058E'
                                           12437 *
00008BE8 0D                                12438          DC    XL1'D'
00008BE9 000000                            12439          DC    AL3(0)
00008BEC 000006B8                          12440          DC    AL4(1720)
00008BF0 00000000                          12441          DC    4X'00'
00008BF4 00000000                          12442          DC    Q(@@STATIC)
00008BF8 00000000                          12443          DC    X'00000000'
00008BFC 00000300                          12444          DC    X'00000300'
00008C00 0000000000007BF0                  12445          DC    ADL8(@DATA)
00008C08 00000000                          12446          DC    X'00000000'
00008C0C 0000059E                          12447          DC    X'0000059E'
                                           12448 *
00008C10 0D                                12449          DC    XL1'D'
00008C11 000000                            12450          DC    AL3(0)
00008C14 000006E0                          12451          DC    AL4(1760)
00008C18 00000000                          12452          DC    4X'00'
00008C1C 00000000                          12453          DC    Q(@@STATIC)
00008C20 00000000                          12454          DC    X'00000000'
00008C24 00000308                          12455          DC    X'00000308'
00008C28 0000000000007BF0                  12456          DC    ADL8(@DATA)
00008C30 00000000                          12457          DC    X'00000000'
00008C34 000005AE                          12458          DC    X'000005AE'
                                           12459 *
00008C38 0D                                12460          DC    XL1'D'
00008C39 000000                            12461          DC    AL3(0)
00008C3C 00000708                          12462          DC    AL4(1800)
00008C40 00000000                          12463          DC    4X'00'
00008C44 00000000                          12464          DC    Q(@@STATIC)
00008C48 00000000                          12465          DC    X'00000000'
00008C4C 00000310                          12466          DC    X'00000310'
00008C50 0000000000007BF0                  12467          DC    ADL8(@DATA)
00008C58 00000000                          12468          DC    X'00000000'
00008C5C 000005BC                          12469          DC    X'000005BC'
                                           12470 *
00008C60 0D                                12471          DC    XL1'D'
00008C61 000000                            12472          DC    AL3(0)
                                                                                                                           Page  249 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008C64 00000730                          12473          DC    AL4(1840)
00008C68 00000000                          12474          DC    4X'00'
00008C6C 00000000                          12475          DC    Q(@@STATIC)
00008C70 00000000                          12476          DC    X'00000000'
00008C74 00000318                          12477          DC    X'00000318'
00008C78 0000000000007BF0                  12478          DC    ADL8(@DATA)
00008C80 00000000                          12479          DC    X'00000000'
00008C84 000005C8                          12480          DC    X'000005C8'
                                           12481 *
00008C88 0D                                12482          DC    XL1'D'
00008C89 000000                            12483          DC    AL3(0)
00008C8C 00000758                          12484          DC    AL4(1880)
00008C90 00000000                          12485          DC    4X'00'
00008C94 00000000                          12486          DC    Q(@@STATIC)
00008C98 00000000                          12487          DC    X'00000000'
00008C9C 00000320                          12488          DC    X'00000320'
00008CA0 0000000000007BF0                  12489          DC    ADL8(@DATA)
00008CA8 00000000                          12490          DC    X'00000000'
00008CAC 000005D4                          12491          DC    X'000005D4'
                                           12492 *
00008CB0 0D                                12493          DC    XL1'D'
00008CB1 000000                            12494          DC    AL3(0)
00008CB4 00000780                          12495          DC    AL4(1920)
00008CB8 00000000                          12496          DC    4X'00'
00008CBC 00000000                          12497          DC    Q(@@STATIC)
00008CC0 00000000                          12498          DC    X'00000000'
00008CC4 00000328                          12499          DC    X'00000328'
00008CC8 0000000000007BF0                  12500          DC    ADL8(@DATA)
00008CD0 00000000                          12501          DC    X'00000000'
00008CD4 000005E4                          12502          DC    X'000005E4'
                                           12503 *
00008CD8 0D                                12504          DC    XL1'D'
00008CD9 000000                            12505          DC    AL3(0)
00008CDC 000007A8                          12506          DC    AL4(1960)
00008CE0 00000000                          12507          DC    4X'00'
00008CE4 00000000                          12508          DC    Q(@@STATIC)
00008CE8 00000000                          12509          DC    X'00000000'
00008CEC 00000330                          12510          DC    X'00000330'
00008CF0 0000000000007BF0                  12511          DC    ADL8(@DATA)
00008CF8 00000000                          12512          DC    X'00000000'
00008CFC 000005F2                          12513          DC    X'000005F2'
                                           12514 *
00008D00 0D                                12515          DC    XL1'D'
00008D01 000000                            12516          DC    AL3(0)
00008D04 000007D0                          12517          DC    AL4(2000)
00008D08 00000000                          12518          DC    4X'00'
00008D0C 00000000                          12519          DC    Q(@@STATIC)
00008D10 00000000                          12520          DC    X'00000000'
00008D14 00000338                          12521          DC    X'00000338'
00008D18 0000000000007BF0                  12522          DC    ADL8(@DATA)
00008D20 00000000                          12523          DC    X'00000000'
00008D24 00000606                          12524          DC    X'00000606'
                                                                                                                           Page  250 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12525 *
00008D28 0D                                12526          DC    XL1'D'
00008D29 000000                            12527          DC    AL3(0)
00008D2C 000007F8                          12528          DC    AL4(2040)
00008D30 00000000                          12529          DC    4X'00'
00008D34 00000000                          12530          DC    Q(@@STATIC)
00008D38 00000000                          12531          DC    X'00000000'
00008D3C 00000340                          12532          DC    X'00000340'
00008D40 0000000000007BF0                  12533          DC    ADL8(@DATA)
00008D48 00000000                          12534          DC    X'00000000'
00008D4C 00000616                          12535          DC    X'00000616'
                                           12536 *
00008D50 0D                                12537          DC    XL1'D'
00008D51 000000                            12538          DC    AL3(0)
00008D54 00000820                          12539          DC    AL4(2080)
00008D58 00000000                          12540          DC    4X'00'
00008D5C 00000000                          12541          DC    Q(@@STATIC)
00008D60 00000000                          12542          DC    X'00000000'
00008D64 00000348                          12543          DC    X'00000348'
00008D68 0000000000007BF0                  12544          DC    ADL8(@DATA)
00008D70 00000000                          12545          DC    X'00000000'
00008D74 00000628                          12546          DC    X'00000628'
                                           12547 *
00008D78 0D                                12548          DC    XL1'D'
00008D79 000000                            12549          DC    AL3(0)
00008D7C 00000848                          12550          DC    AL4(2120)
00008D80 00000000                          12551          DC    4X'00'
00008D84 00000000                          12552          DC    Q(@@STATIC)
00008D88 00000000                          12553          DC    X'00000000'
00008D8C 00000350                          12554          DC    X'00000350'
00008D90 0000000000007BF0                  12555          DC    ADL8(@DATA)
00008D98 00000000                          12556          DC    X'00000000'
00008D9C 0000063A                          12557          DC    X'0000063A'
                                           12558 *
00008DA0 0D                                12559          DC    XL1'D'
00008DA1 000000                            12560          DC    AL3(0)
00008DA4 00000870                          12561          DC    AL4(2160)
00008DA8 00000000                          12562          DC    4X'00'
00008DAC 00000000                          12563          DC    Q(@@STATIC)
00008DB0 00000000                          12564          DC    X'00000000'
00008DB4 00000358                          12565          DC    X'00000358'
00008DB8 0000000000007BF0                  12566          DC    ADL8(@DATA)
00008DC0 00000000                          12567          DC    X'00000000'
00008DC4 00000650                          12568          DC    X'00000650'
                                           12569 *
00008DC8 0D                                12570          DC    XL1'D'
00008DC9 000000                            12571          DC    AL3(0)
00008DCC 00000898                          12572          DC    AL4(2200)
00008DD0 00000000                          12573          DC    4X'00'
00008DD4 00000000                          12574          DC    Q(@@STATIC)
00008DD8 00000000                          12575          DC    X'00000000'
00008DDC 00000360                          12576          DC    X'00000360'
                                                                                                                           Page  251 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008DE0 0000000000007BF0                  12577          DC    ADL8(@DATA)
00008DE8 00000000                          12578          DC    X'00000000'
00008DEC 00000666                          12579          DC    X'00000666'
                                           12580 *
00008DF0 0D                                12581          DC    XL1'D'
00008DF1 000000                            12582          DC    AL3(0)
00008DF4 000008C0                          12583          DC    AL4(2240)
00008DF8 00000000                          12584          DC    4X'00'
00008DFC 00000000                          12585          DC    Q(@@STATIC)
00008E00 00000000                          12586          DC    X'00000000'
00008E04 00000368                          12587          DC    X'00000368'
00008E08 0000000000007BF0                  12588          DC    ADL8(@DATA)
00008E10 00000000                          12589          DC    X'00000000'
00008E14 0000067C                          12590          DC    X'0000067C'
                                           12591 *
00008E18 0D                                12592          DC    XL1'D'
00008E19 000000                            12593          DC    AL3(0)
00008E1C 000008E8                          12594          DC    AL4(2280)
00008E20 00000000                          12595          DC    4X'00'
00008E24 00000000                          12596          DC    Q(@@STATIC)
00008E28 00000000                          12597          DC    X'00000000'
00008E2C 00000370                          12598          DC    X'00000370'
00008E30 0000000000007BF0                  12599          DC    ADL8(@DATA)
00008E38 00000000                          12600          DC    X'00000000'
00008E3C 00000694                          12601          DC    X'00000694'
                                           12602 *
00008E40 0D                                12603          DC    XL1'D'
00008E41 000000                            12604          DC    AL3(0)
00008E44 00000910                          12605          DC    AL4(2320)
00008E48 00000000                          12606          DC    4X'00'
00008E4C 00000000                          12607          DC    Q(@@STATIC)
00008E50 00000000                          12608          DC    X'00000000'
00008E54 00000378                          12609          DC    X'00000378'
00008E58 0000000000007BF0                  12610          DC    ADL8(@DATA)
00008E60 00000000                          12611          DC    X'00000000'
00008E64 000006A2                          12612          DC    X'000006A2'
                                           12613 *
00008E68 0D                                12614          DC    XL1'D'
00008E69 000000                            12615          DC    AL3(0)
00008E6C 00000938                          12616          DC    AL4(2360)
00008E70 00000000                          12617          DC    4X'00'
00008E74 00000000                          12618          DC    Q(@@STATIC)
00008E78 00000000                          12619          DC    X'00000000'
00008E7C 00000380                          12620          DC    X'00000380'
00008E80 0000000000007BF0                  12621          DC    ADL8(@DATA)
00008E88 00000000                          12622          DC    X'00000000'
00008E8C 000006B6                          12623          DC    X'000006B6'
                                           12624 *
00008E90 0D                                12625          DC    XL1'D'
00008E91 000000                            12626          DC    AL3(0)
00008E94 00000960                          12627          DC    AL4(2400)
00008E98 00000000                          12628          DC    4X'00'
                                                                                                                           Page  252 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008E9C 00000000                          12629          DC    Q(@@STATIC)
00008EA0 00000000                          12630          DC    X'00000000'
00008EA4 00000388                          12631          DC    X'00000388'
00008EA8 0000000000007BF0                  12632          DC    ADL8(@DATA)
00008EB0 00000000                          12633          DC    X'00000000'
00008EB4 000006D6                          12634          DC    X'000006D6'
                                           12635 *
00008EB8 0D                                12636          DC    XL1'D'
00008EB9 000000                            12637          DC    AL3(0)
00008EBC 00000988                          12638          DC    AL4(2440)
00008EC0 00000000                          12639          DC    4X'00'
00008EC4 00000000                          12640          DC    Q(@@STATIC)
00008EC8 00000000                          12641          DC    X'00000000'
00008ECC 00000390                          12642          DC    X'00000390'
00008ED0 0000000000007BF0                  12643          DC    ADL8(@DATA)
00008ED8 00000000                          12644          DC    X'00000000'
00008EDC 000006FA                          12645          DC    X'000006FA'
                                           12646 *
00008EE0 0D                                12647          DC    XL1'D'
00008EE1 000000                            12648          DC    AL3(0)
00008EE4 000009B0                          12649          DC    AL4(2480)
00008EE8 00000000                          12650          DC    4X'00'
00008EEC 00000000                          12651          DC    Q(@@STATIC)
00008EF0 00000000                          12652          DC    X'00000000'
00008EF4 00000398                          12653          DC    X'00000398'
00008EF8 0000000000007BF0                  12654          DC    ADL8(@DATA)
00008F00 00000000                          12655          DC    X'00000000'
00008F04 0000071C                          12656          DC    X'0000071C'
                                           12657 *
00008F08 0D                                12658          DC    XL1'D'
00008F09 000000                            12659          DC    AL3(0)
00008F0C 000009D8                          12660          DC    AL4(2520)
00008F10 00000000                          12661          DC    4X'00'
00008F14 00000000                          12662          DC    Q(@@STATIC)
00008F18 00000000                          12663          DC    X'00000000'
00008F1C 000003A0                          12664          DC    X'000003A0'
00008F20 0000000000007BF0                  12665          DC    ADL8(@DATA)
00008F28 00000000                          12666          DC    X'00000000'
00008F2C 00000730                          12667          DC    X'00000730'
                                           12668 *
00008F30 0D                                12669          DC    XL1'D'
00008F31 000000                            12670          DC    AL3(0)
00008F34 00000A00                          12671          DC    AL4(2560)
00008F38 00000000                          12672          DC    4X'00'
00008F3C 00000000                          12673          DC    Q(@@STATIC)
00008F40 00000000                          12674          DC    X'00000000'
00008F44 000003A8                          12675          DC    X'000003A8'
00008F48 0000000000007BF0                  12676          DC    ADL8(@DATA)
00008F50 00000000                          12677          DC    X'00000000'
00008F54 0000074C                          12678          DC    X'0000074C'
                                           12679 *
00008F58 0D                                12680          DC    XL1'D'
                                                                                                                           Page  253 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008F59 000000                            12681          DC    AL3(0)
00008F5C 00000A28                          12682          DC    AL4(2600)
00008F60 00000000                          12683          DC    4X'00'
00008F64 00000000                          12684          DC    Q(@@STATIC)
00008F68 00000000                          12685          DC    X'00000000'
00008F6C 000003B0                          12686          DC    X'000003B0'
00008F70 0000000000007BF0                  12687          DC    ADL8(@DATA)
00008F78 00000000                          12688          DC    X'00000000'
00008F7C 00000766                          12689          DC    X'00000766'
                                           12690 *
00008F80 0D                                12691          DC    XL1'D'
00008F81 000000                            12692          DC    AL3(0)
00008F84 00000A50                          12693          DC    AL4(2640)
00008F88 00000000                          12694          DC    4X'00'
00008F8C 00000000                          12695          DC    Q(@@STATIC)
00008F90 00000000                          12696          DC    X'00000000'
00008F94 000003B8                          12697          DC    X'000003B8'
00008F98 0000000000007BF0                  12698          DC    ADL8(@DATA)
00008FA0 00000000                          12699          DC    X'00000000'
00008FA4 0000078A                          12700          DC    X'0000078A'
                                           12701 *
00008FA8 0D                                12702          DC    XL1'D'
00008FA9 000000                            12703          DC    AL3(0)
00008FAC 00000A78                          12704          DC    AL4(2680)
00008FB0 00000000                          12705          DC    4X'00'
00008FB4 00000000                          12706          DC    Q(@@STATIC)
00008FB8 00000000                          12707          DC    X'00000000'
00008FBC 000003C0                          12708          DC    X'000003C0'
00008FC0 0000000000007BF0                  12709          DC    ADL8(@DATA)
00008FC8 00000000                          12710          DC    X'00000000'
00008FCC 000007AC                          12711          DC    X'000007AC'
                                           12712 *
00008FD0 0D                                12713          DC    XL1'D'
00008FD1 000000                            12714          DC    AL3(0)
00008FD4 00000AA0                          12715          DC    AL4(2720)
00008FD8 00000000                          12716          DC    4X'00'
00008FDC 00000000                          12717          DC    Q(@@STATIC)
00008FE0 00000000                          12718          DC    X'00000000'
00008FE4 000003C8                          12719          DC    X'000003C8'
00008FE8 0000000000007BF0                  12720          DC    ADL8(@DATA)
00008FF0 00000000                          12721          DC    X'00000000'
00008FF4 000007B8                          12722          DC    X'000007B8'
                                           12723 *
00008FF8 0D                                12724          DC    XL1'D'
00008FF9 000000                            12725          DC    AL3(0)
00008FFC 00000AC8                          12726          DC    AL4(2760)
00009000 00000000                          12727          DC    4X'00'
00009004 00000000                          12728          DC    Q(@@STATIC)
00009008 00000000                          12729          DC    X'00000000'
0000900C 000003D0                          12730          DC    X'000003D0'
00009010 0000000000007BF0                  12731          DC    ADL8(@DATA)
00009018 00000000                          12732          DC    X'00000000'
                                                                                                                           Page  254 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000901C 000007D0                          12733          DC    X'000007D0'
                                           12734 *
00009020 0D                                12735          DC    XL1'D'
00009021 000000                            12736          DC    AL3(0)
00009024 00000AF0                          12737          DC    AL4(2800)
00009028 00000000                          12738          DC    4X'00'
0000902C 00000000                          12739          DC    Q(@@STATIC)
00009030 00000000                          12740          DC    X'00000000'
00009034 000003D8                          12741          DC    X'000003D8'
00009038 0000000000007BF0                  12742          DC    ADL8(@DATA)
00009040 00000000                          12743          DC    X'00000000'
00009044 000007E6                          12744          DC    X'000007E6'
                                           12745 *
00009048 0D                                12746          DC    XL1'D'
00009049 000000                            12747          DC    AL3(0)
0000904C 00000B18                          12748          DC    AL4(2840)
00009050 00000000                          12749          DC    4X'00'
00009054 00000000                          12750          DC    Q(@@STATIC)
00009058 00000000                          12751          DC    X'00000000'
0000905C 000003E0                          12752          DC    X'000003E0'
00009060 0000000000007BF0                  12753          DC    ADL8(@DATA)
00009068 00000000                          12754          DC    X'00000000'
0000906C 000007FC                          12755          DC    X'000007FC'
                                           12756 *
00009070 0D                                12757          DC    XL1'D'
00009071 000000                            12758          DC    AL3(0)
00009074 00000B40                          12759          DC    AL4(2880)
00009078 00000000                          12760          DC    4X'00'
0000907C 00000000                          12761          DC    Q(@@STATIC)
00009080 00000000                          12762          DC    X'00000000'
00009084 000003E8                          12763          DC    X'000003E8'
00009088 0000000000007BF0                  12764          DC    ADL8(@DATA)
00009090 00000000                          12765          DC    X'00000000'
00009094 0000080C                          12766          DC    X'0000080C'
                                           12767 *
00009098 0D                                12768          DC    XL1'D'
00009099 000000                            12769          DC    AL3(0)
0000909C 00000B68                          12770          DC    AL4(2920)
000090A0 00000000                          12771          DC    4X'00'
000090A4 00000000                          12772          DC    Q(@@STATIC)
000090A8 00000000                          12773          DC    X'00000000'
000090AC 000003F0                          12774          DC    X'000003F0'
000090B0 0000000000007BF0                  12775          DC    ADL8(@DATA)
000090B8 00000000                          12776          DC    X'00000000'
000090BC 00000822                          12777          DC    X'00000822'
                                           12778 *
000090C0 0D                                12779          DC    XL1'D'
000090C1 000000                            12780          DC    AL3(0)
000090C4 00000B90                          12781          DC    AL4(2960)
000090C8 00000000                          12782          DC    4X'00'
000090CC 00000000                          12783          DC    Q(@@STATIC)
000090D0 00000000                          12784          DC    X'00000000'
                                                                                                                           Page  255 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000090D4 000004C0                          12785          DC    X'000004C0'
000090D8 0000000000007BF0                  12786          DC    ADL8(@DATA)
000090E0 00000000                          12787          DC    X'00000000'
000090E4 00000832                          12788          DC    X'00000832'
                                           12789 *
000090E8 0D                                12790          DC    XL1'D'
000090E9 000000                            12791          DC    AL3(0)
000090EC 00000BB8                          12792          DC    AL4(3000)
000090F0 00000000                          12793          DC    4X'00'
000090F4 00000000                          12794          DC    Q(@@STATIC)
000090F8 00000000                          12795          DC    X'00000000'
000090FC 000004C8                          12796          DC    X'000004C8'
00009100 0000000000007BF0                  12797          DC    ADL8(@DATA)
00009108 00000000                          12798          DC    X'00000000'
0000910C 00000838                          12799          DC    X'00000838'
                                           12800 *
00009110 0D                                12801          DC    XL1'D'
00009111 000000                            12802          DC    AL3(0)
00009114 00000BE0                          12803          DC    AL4(3040)
00009118 00000000                          12804          DC    4X'00'
0000911C 00000000                          12805          DC    Q(@@STATIC)
00009120 00000000                          12806          DC    X'00000000'
00009124 000004D0                          12807          DC    X'000004D0'
00009128 0000000000007BF0                  12808          DC    ADL8(@DATA)
00009130 00000000                          12809          DC    X'00000000'
00009134 0000083E                          12810          DC    X'0000083E'
                                           12811 *
00009138 0D                                12812          DC    XL1'D'
00009139 000000                            12813          DC    AL3(0)
0000913C 00000C08                          12814          DC    AL4(3080)
00009140 00000000                          12815          DC    4X'00'
00009144 00000000                          12816          DC    Q(@@STATIC)
00009148 00000000                          12817          DC    X'00000000'
0000914C 000004D8                          12818          DC    X'000004D8'
00009150 0000000000007BF0                  12819          DC    ADL8(@DATA)
00009158 00000000                          12820          DC    X'00000000'
0000915C 00000846                          12821          DC    X'00000846'
                                           12822 *
00009160 0D                                12823          DC    XL1'D'
00009161 000000                            12824          DC    AL3(0)
00009164 00000C30                          12825          DC    AL4(3120)
00009168 00000000                          12826          DC    4X'00'
0000916C 00000000                          12827          DC    Q(@@STATIC)
00009170 00000000                          12828          DC    X'00000000'
00009174 000004E0                          12829          DC    X'000004E0'
00009178 0000000000007BF0                  12830          DC    ADL8(@DATA)
00009180 00000000                          12831          DC    X'00000000'
00009184 0000084A                          12832          DC    X'0000084A'
                                           12833 *
00009188 0D                                12834          DC    XL1'D'
00009189 000000                            12835          DC    AL3(0)
0000918C 00000C58                          12836          DC    AL4(3160)
                                                                                                                           Page  256 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009190 00000000                          12837          DC    4X'00'
00009194 00000000                          12838          DC    Q(@@STATIC)
00009198 00000000                          12839          DC    X'00000000'
0000919C 000004E8                          12840          DC    X'000004E8'
000091A0 0000000000007BF0                  12841          DC    ADL8(@DATA)
000091A8 00000000                          12842          DC    X'00000000'
000091AC 00000850                          12843          DC    X'00000850'
                                           12844 *
000091B0 0D                                12845          DC    XL1'D'
000091B1 000000                            12846          DC    AL3(0)
000091B4 00000C80                          12847          DC    AL4(3200)
000091B8 00000000                          12848          DC    4X'00'
000091BC 00000000                          12849          DC    Q(@@STATIC)
000091C0 00000000                          12850          DC    X'00000000'
000091C4 00000510                          12851          DC    X'00000510'
000091C8 0000000000007BF0                  12852          DC    ADL8(@DATA)
000091D0 00000000                          12853          DC    X'00000000'
000091D4 00000858                          12854          DC    X'00000858'
                                           12855 *
000091D8 0D                                12856          DC    XL1'D'
000091D9 000000                            12857          DC    AL3(0)
000091DC 00000CA8                          12858          DC    AL4(3240)
000091E0 00000000                          12859          DC    4X'00'
000091E4 00000000                          12860          DC    Q(@@STATIC)
000091E8 00000000                          12861          DC    X'00000000'
000091EC 00000518                          12862          DC    X'00000518'
000091F0 0000000000007BF0                  12863          DC    ADL8(@DATA)
000091F8 00000000                          12864          DC    X'00000000'
000091FC 00000864                          12865          DC    X'00000864'
                                           12866 *
00009200 0D                                12867          DC    XL1'D'
00009201 000000                            12868          DC    AL3(0)
00009204 00000CD0                          12869          DC    AL4(3280)
00009208 00000000                          12870          DC    4X'00'
0000920C 00000000                          12871          DC    Q(@@STATIC)
00009210 00000000                          12872          DC    X'00000000'
00009214 00000520                          12873          DC    X'00000520'
00009218 0000000000007BF0                  12874          DC    ADL8(@DATA)
00009220 00000000                          12875          DC    X'00000000'
00009224 0000086C                          12876          DC    X'0000086C'
                                           12877 *
00009228 0D                                12878          DC    XL1'D'
00009229 000000                            12879          DC    AL3(0)
0000922C 00000CF8                          12880          DC    AL4(3320)
00009230 00000000                          12881          DC    4X'00'
00009234 00000000                          12882          DC    Q(@@STATIC)
00009238 00000000                          12883          DC    X'00000000'
0000923C 00000528                          12884          DC    X'00000528'
00009240 0000000000007BF0                  12885          DC    ADL8(@DATA)
00009248 00000000                          12886          DC    X'00000000'
0000924C 00000876                          12887          DC    X'00000876'
                                           12888 *
                                                                                                                           Page  257 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009250 0D                                12889          DC    XL1'D'
00009251 000000                            12890          DC    AL3(0)
00009254 00000D20                          12891          DC    AL4(3360)
00009258 00000000                          12892          DC    4X'00'
0000925C 00000000                          12893          DC    Q(@@STATIC)
00009260 00000000                          12894          DC    X'00000000'
00009264 00000630                          12895          DC    X'00000630'
00009268 0000000000007BF0                  12896          DC    ADL8(@DATA)
00009270 00000000                          12897          DC    X'00000000'
00009274 0000087E                          12898          DC    X'0000087E'
                                           12899 *
00009278 0D                                12900          DC    XL1'D'
00009279 000000                            12901          DC    AL3(0)
0000927C 00000D48                          12902          DC    AL4(3400)
00009280 00000000                          12903          DC    4X'00'
00009284 00000000                          12904          DC    Q(@@STATIC)
00009288 00000000                          12905          DC    X'00000000'
0000928C 00000638                          12906          DC    X'00000638'
00009290 0000000000007BF0                  12907          DC    ADL8(@DATA)
00009298 00000000                          12908          DC    X'00000000'
0000929C 00000884                          12909          DC    X'00000884'
                                           12910 *
000092A0 0D                                12911          DC    XL1'D'
000092A1 000000                            12912          DC    AL3(0)
000092A4 00000D70                          12913          DC    AL4(3440)
000092A8 00000000                          12914          DC    4X'00'
000092AC 00000000                          12915          DC    Q(@@STATIC)
000092B0 00000000                          12916          DC    X'00000000'
000092B4 00000640                          12917          DC    X'00000640'
000092B8 0000000000007BF0                  12918          DC    ADL8(@DATA)
000092C0 00000000                          12919          DC    X'00000000'
000092C4 0000088E                          12920          DC    X'0000088E'
                                           12921 *
000092C8 0D                                12922          DC    XL1'D'
000092C9 000000                            12923          DC    AL3(0)
000092CC 00000D98                          12924          DC    AL4(3480)
000092D0 00000000                          12925          DC    4X'00'
000092D4 00000000                          12926          DC    Q(@@STATIC)
000092D8 00000000                          12927          DC    X'00000000'
000092DC 00000648                          12928          DC    X'00000648'
000092E0 0000000000007BF0                  12929          DC    ADL8(@DATA)
000092E8 00000000                          12930          DC    X'00000000'
000092EC 0000089A                          12931          DC    X'0000089A'
                                           12932 *
000092F0 0D                                12933          DC    XL1'D'
000092F1 000000                            12934          DC    AL3(0)
000092F4 00000DC0                          12935          DC    AL4(3520)
000092F8 00000000                          12936          DC    4X'00'
000092FC 00000000                          12937          DC    Q(@@STATIC)
00009300 00000000                          12938          DC    X'00000000'
00009304 00000650                          12939          DC    X'00000650'
00009308 0000000000007BF0                  12940          DC    ADL8(@DATA)
                                                                                                                           Page  258 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009310 00000000                          12941          DC    X'00000000'
00009314 000008A6                          12942          DC    X'000008A6'
                                           12943 *
00009318 0D                                12944          DC    XL1'D'
00009319 000000                            12945          DC    AL3(0)
0000931C 00000DE8                          12946          DC    AL4(3560)
00009320 00000000                          12947          DC    4X'00'
00009324 00000000                          12948          DC    Q(@@STATIC)
00009328 00000000                          12949          DC    X'00000000'
0000932C 00000658                          12950          DC    X'00000658'
00009330 0000000000007BF0                  12951          DC    ADL8(@DATA)
00009338 00000000                          12952          DC    X'00000000'
0000933C 000008B4                          12953          DC    X'000008B4'
                                           12954 *
00009340 0D                                12955          DC    XL1'D'
00009341 000000                            12956          DC    AL3(0)
00009344 00000E10                          12957          DC    AL4(3600)
00009348 00000000                          12958          DC    4X'00'
0000934C 00000000                          12959          DC    Q(@@STATIC)
00009350 00000000                          12960          DC    X'00000000'
00009354 00000660                          12961          DC    X'00000660'
00009358 0000000000007BF0                  12962          DC    ADL8(@DATA)
00009360 00000000                          12963          DC    X'00000000'
00009364 000008BC                          12964          DC    X'000008BC'
                                           12965 *
00009368 0D                                12966          DC    XL1'D'
00009369 000000                            12967          DC    AL3(0)
0000936C 00000E38                          12968          DC    AL4(3640)
00009370 00000000                          12969          DC    4X'00'
00009374 00000000                          12970          DC    Q(@@STATIC)
00009378 00000000                          12971          DC    X'00000000'
0000937C 00000668                          12972          DC    X'00000668'
00009380 0000000000007BF0                  12973          DC    ADL8(@DATA)
00009388 00000000                          12974          DC    X'00000000'
0000938C 000008C6                          12975          DC    X'000008C6'
                                           12976 *
00009390 0D                                12977          DC    XL1'D'
00009391 000000                            12978          DC    AL3(0)
00009394 00000E60                          12979          DC    AL4(3680)
00009398 00000000                          12980          DC    4X'00'
0000939C 00000000                          12981          DC    Q(@@STATIC)
000093A0 00000000                          12982          DC    X'00000000'
000093A4 00000670                          12983          DC    X'00000670'
000093A8 0000000000007BF0                  12984          DC    ADL8(@DATA)
000093B0 00000000                          12985          DC    X'00000000'
000093B4 000008D2                          12986          DC    X'000008D2'
                                           12987 *
000093B8 0D                                12988          DC    XL1'D'
000093B9 000000                            12989          DC    AL3(0)
000093BC 00000E88                          12990          DC    AL4(3720)
000093C0 00000000                          12991          DC    4X'00'
000093C4 00000000                          12992          DC    Q(@@STATIC)
                                                                                                                           Page  259 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000093C8 00000000                          12993          DC    X'00000000'
000093CC 00000678                          12994          DC    X'00000678'
000093D0 0000000000007BF0                  12995          DC    ADL8(@DATA)
000093D8 00000000                          12996          DC    X'00000000'
000093DC 0000087E                          12997          DC    X'0000087E'
                                           12998 *
000093E0 0D                                12999          DC    XL1'D'
000093E1 000000                            13000          DC    AL3(0)
000093E4 00000EB0                          13001          DC    AL4(3760)
000093E8 00000000                          13002          DC    4X'00'
000093EC 00000000                          13003          DC    Q(@@STATIC)
000093F0 00000000                          13004          DC    X'00000000'
000093F4 00000680                          13005          DC    X'00000680'
000093F8 0000000000007BF0                  13006          DC    ADL8(@DATA)
00009400 00000000                          13007          DC    X'00000000'
00009404 000008B4                          13008          DC    X'000008B4'
                                           13009 *
00009408 0D                                13010          DC    XL1'D'
00009409 000000                            13011          DC    AL3(0)
0000940C 00000ED8                          13012          DC    AL4(3800)
00009410 00000000                          13013          DC    4X'00'
00009414 00000000                          13014          DC    Q(@@STATIC)
00009418 00000000                          13015          DC    X'00000000'
0000941C 00000688                          13016          DC    X'00000688'
00009420 0000000000007BF0                  13017          DC    ADL8(@DATA)
00009428 00000000                          13018          DC    X'00000000'
0000942C 000008DC                          13019          DC    X'000008DC'
                                           13020 *
00009430 0D                                13021          DC    XL1'D'
00009431 000000                            13022          DC    AL3(0)
00009434 00000F00                          13023          DC    AL4(3840)
00009438 00000000                          13024          DC    4X'00'
0000943C 00000000                          13025          DC    Q(@@STATIC)
00009440 00000000                          13026          DC    X'00000000'
00009444 00000690                          13027          DC    X'00000690'
00009448 0000000000007BF0                  13028          DC    ADL8(@DATA)
00009450 00000000                          13029          DC    X'00000000'
00009454 000008EA                          13030          DC    X'000008EA'
                                           13031 *
00009458 0D                                13032          DC    XL1'D'
00009459 000000                            13033          DC    AL3(0)
0000945C 00000F28                          13034          DC    AL4(3880)
00009460 00000000                          13035          DC    4X'00'
00009464 00000000                          13036          DC    Q(@@STATIC)
00009468 00000000                          13037          DC    X'00000000'
0000946C 00000698                          13038          DC    X'00000698'
00009470 0000000000007BF0                  13039          DC    ADL8(@DATA)
00009478 00000000                          13040          DC    X'00000000'
0000947C 000008F0                          13041          DC    X'000008F0'
                                           13042 *
00009480 0D                                13043          DC    XL1'D'
00009481 000000                            13044          DC    AL3(0)
                                                                                                                           Page  260 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009484 00000F50                          13045          DC    AL4(3920)
00009488 00000000                          13046          DC    4X'00'
0000948C 00000000                          13047          DC    Q(@@STATIC)
00009490 00000000                          13048          DC    X'00000000'
00009494 000006A0                          13049          DC    X'000006A0'
00009498 0000000000007BF0                  13050          DC    ADL8(@DATA)
000094A0 00000000                          13051          DC    X'00000000'
000094A4 000008FE                          13052          DC    X'000008FE'
                                           13053 *
000094A8 0D                                13054          DC    XL1'D'
000094A9 000000                            13055          DC    AL3(0)
000094AC 00000F78                          13056          DC    AL4(3960)
000094B0 00000000                          13057          DC    4X'00'
000094B4 00000000                          13058          DC    Q(@@STATIC)
000094B8 00000000                          13059          DC    X'00000000'
000094BC 000006A8                          13060          DC    X'000006A8'
000094C0 0000000000007BF0                  13061          DC    ADL8(@DATA)
000094C8 00000000                          13062          DC    X'00000000'
000094CC 0000090A                          13063          DC    X'0000090A'
                                           13064 *
000094D0 0D                                13065          DC    XL1'D'
000094D1 000000                            13066          DC    AL3(0)
000094D4 00000FA0                          13067          DC    AL4(4000)
000094D8 00000000                          13068          DC    4X'00'
000094DC 00000000                          13069          DC    Q(@@STATIC)
000094E0 00000000                          13070          DC    X'00000000'
000094E4 000006B0                          13071          DC    X'000006B0'
000094E8 0000000000007BF0                  13072          DC    ADL8(@DATA)
000094F0 00000000                          13073          DC    X'00000000'
000094F4 00000920                          13074          DC    X'00000920'
                                           13075 *
000094F8 0D                                13076          DC    XL1'D'
000094F9 000000                            13077          DC    AL3(0)
000094FC 00000FC8                          13078          DC    AL4(4040)
00009500 00000000                          13079          DC    4X'00'
00009504 00000000                          13080          DC    Q(@@STATIC)
00009508 00000000                          13081          DC    X'00000000'
0000950C 000006B8                          13082          DC    X'000006B8'
00009510 0000000000007BF0                  13083          DC    ADL8(@DATA)
00009518 00000000                          13084          DC    X'00000000'
0000951C 00000930                          13085          DC    X'00000930'
                                           13086 *
00009520 0D                                13087          DC    XL1'D'
00009521 000000                            13088          DC    AL3(0)
00009524 00000FF0                          13089          DC    AL4(4080)
00009528 00000000                          13090          DC    4X'00'
0000952C 00000000                          13091          DC    Q(@@STATIC)
00009530 00000000                          13092          DC    X'00000000'
00009534 000006C0                          13093          DC    X'000006C0'
00009538 0000000000007BF0                  13094          DC    ADL8(@DATA)
00009540 00000000                          13095          DC    X'00000000'
00009544 00000944                          13096          DC    X'00000944'
                                                                                                                           Page  261 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           13097 *
00009548 0D                                13098          DC    XL1'D'
00009549 000000                            13099          DC    AL3(0)
0000954C 00001018                          13100          DC    AL4(4120)
00009550 00000000                          13101          DC    4X'00'
00009554 00000000                          13102          DC    Q(@@STATIC)
00009558 00000000                          13103          DC    X'00000000'
0000955C 000006C8                          13104          DC    X'000006C8'
00009560 0000000000007BF0                  13105          DC    ADL8(@DATA)
00009568 00000000                          13106          DC    X'00000000'
0000956C 00000954                          13107          DC    X'00000954'
                                           13108 *
00009570 0D                                13109          DC    XL1'D'
00009571 000000                            13110          DC    AL3(0)
00009574 00000000                          13111          DC    AL4(0)
00009578 00000000                          13112          DC    4X'00'
0000957C 00000000                          13113          DC    Q(@@STATIC)
00009580 00000000                          13114          DC    X'00000000'
00009584 000006D0                          13115          DC    X'000006D0'
00009588 0000000000007BF0                  13116          DC    ADL8(@DATA)
00009590 00000000                          13117          DC    X'00000000'
00009594 0000088E                          13118          DC    X'0000088E'
                                           13119 *
                                           13120          END
                                                 Relocation Dictionary                                                     Page  262 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00000020   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000002 00000050   A 4      +
 00000002 0000001D 00000138   A 4      +
 00000002 0000001E 00000140   A 4      +
 00000002 00000002 00000168   A 4      +
 00000002 00000002 00000190   A 4      +
 00000002 00000002 00000198   A 4      +
 00000002 0000001D 00000270   A 4      +
 00000002 0000001E 00000278   A 4      +
 00000002 00000002 000002A0   A 4      +
 00000002 00000002 000002C8   A 4      +
 00000002 00000002 000002D0   A 4      +
 00000002 0000001D 000003B8   A 4      +
 00000002 0000001E 000003C0   A 4      +
 00000002 00000002 000003E0   A 4      +
 00000002 00000002 00000408   A 4      +
 00000002 00000002 00000410   A 4      +
 00000002 00000018 00000518   A 4      +
 00000002 00000004 00000520   A 4      +
 00000002 00000022 00000528   A 4      +
 00000002 00000022 00000530   A 4      +
 00000002 00000002 00000550   A 4      +
 00000002 00000002 00000578   A 4      +
 00000002 00000002 00000580   A 4      +
 00000002 0000001A 00000680   A 4      +
 00000002 00000004 00000688   A 4      +
 00000002 00000022 00000690   A 4      +
 00000002 00000022 00000698   A 4      +
 00000002 00000002 000006B8   A 4      +
 00000002 00000002 000006E0   A 4      +
 00000002 00000002 000006E8   A 4      +
 00000002 00000019 000007A0   A 4      +
 00000002 00000002 000007C8   A 4      +
 00000002 00000002 000007F0   A 4      +
 00000002 00000002 000007F8   A 4      +
 00000002 00000002 00000908   A 4      +
 00000002 00000022 00000910   A 4      +
 00000002 00000004 00000918   A 4      +
 00000002 00000022 00000920   A 4      +
 00000002 00000002 00000940   A 4      +
 00000002 00000002 00000968   A 4      +
 00000002 00000002 00000970   A 4      +
 00000002 0000001C 00000A40   A 4      +
 00000002 00000002 00000A90   A 4      +
 00000002 00000002 00000A98   A 4      +
 00000002 00000002 00000B08   A 4      +
 00000002 00000002 00000B30   A 4      +
 00000002 00000002 00000B38   A 4      +
 00000002 00000007 00000BB8   A 4      +
 00000002 00000002 00000CB8   A 4      +
 00000002 00000002 00000CE0   A 4      +
 00000002 00000002 00000CE8   A 4      +
                                                 Relocation Dictionary                                                     Page  263 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000007 00000D70   A 4      +
 00000002 00000002 00000E80   A 4      +
 00000002 00000002 00000EA8   A 4      +
 00000002 00000002 00000EB0   A 4      +
 00000002 0000000A 00000F88   A 4      +
 00000002 0000000E 00000F90   A 4      +
 00000002 00000002 00000FB8   A 4      +
 00000002 00000002 00000FE0   A 4      +
 00000002 00000002 00000FE8   A 4      +
 00000002 0000000A 000010D0   A 4      +
 00000002 0000000E 000010D8   A 4      +
 00000002 00000002 00001100   A 4      +
 00000002 00000002 00001128   A 4      +
 00000002 00000002 00001130   A 4      +
 00000002 00000002 000012B0   A 4      +
 00000002 00000002 000012B8   A 4      +
 00000002 0000000A 000012C0   A 4      +
 00000002 0000001F 000012C8   A 4      +
 00000002 00000022 000012D0   A 4      +
 00000002 00000022 000012D8   A 4      +
 00000002 0000000E 000012E0   A 4      +
 00000002 00000002 000012E8   A 4      +
 00000002 00000002 00001318   A 4      +
 00000002 00000002 00001340   A 4      +
 00000002 00000002 00001348   A 4      +
 00000002 00000002 00001408   A 4      +
 00000002 00000002 00001458   A 4      +
 00000002 00000002 00001460   A 4      +
 00000002 00000002 000014D0   A 4      +
 00000002 00000002 000014F8   A 4      +
 00000002 00000002 00001500   A 4      +
 00000002 0000000A 00001600   A 4      +
 00000002 00000002 00001608   A 4      +
 00000002 0000000E 00001610   A 4      +
 00000002 00000002 00001638   A 4      +
 00000002 00000002 00001660   A 4      +
 00000002 00000002 00001668   A 4      +
 00000002 00000003 00001718   A 4      +
 00000002 00000002 00001810   A 4      +
 00000002 00000002 00001818   A 4      +
 00000002 00000002 000018A0   A 4      +
 00000002 00000002 000018C8   A 4      +
 00000002 00000002 000018D0   A 4      +
 00000002 0000000A 00001960   A 4      +
 00000002 0000000E 00001968   A 4      +
 00000002 00000002 00001970   A 4      +
 00000002 00000012 00001978   A 4      +
 00000002 00000002 00001980   A 4      +
 00000002 00000002 00001988   A 4      +
 00000002 00000002 00001990   A 4      +
 00000002 00000002 00001AB0   A 4      +
 00000002 00000002 00001AD8   A 4      +
 00000002 00000002 00001AE0   A 4      +
                                                 Relocation Dictionary                                                     Page  264 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00001B78   A 4      +
 00000002 00000002 00001D38   A 4      +
 00000002 00000002 00001D60   A 4      +
 00000002 00000002 00001D68   A 4      +
 00000002 0000000A 00001E28   A 4      +
 00000002 0000000E 00001E30   A 4      +
 00000002 0000000B 00001E38   A 4      +
 00000002 00000002 00001E40   A 4      +
 00000002 00000002 00001E48   A 4      +
 00000002 00000011 00001E50   A 4      +
 00000002 00000002 00001E58   A 4      +
 00000002 00000002 00001E60   A 4      +
 00000002 00000002 00001E68   A 4      +
 00000002 00000002 00001FF0   A 4      +
 00000002 00000002 00002018   A 4      +
 00000002 00000002 00002020   A 4      +
 00000002 00000002 00002100   A 4      +
 00000002 00000002 00002150   A 4      +
 00000002 00000002 00002158   A 4      +
 00000002 00000002 00002230   A 4      +
 00000002 00000002 00002238   A 4      +
 00000002 00000002 000022A0   A 4      +
 00000002 00000002 000022C8   A 4      +
 00000002 00000002 000022D0   A 4      +
 00000002 0000000A 00002340   A 4      +
 00000002 0000000E 00002348   A 4      +
 00000002 00000002 00002350   A 4      +
 00000002 00000002 00002358   A 4      +
 00000002 00000011 00002360   A 4      +
 00000002 00000002 00002368   A 4      +
 00000002 00000002 00002370   A 4      +
 00000002 00000002 00002378   A 4      +
 00000002 00000002 000026D0   A 4      +
 00000002 00000002 000026F8   A 4      +
 00000002 00000002 00002700   A 4      +
 00000002 0000000A 00002830   A 4      +
 00000002 00000002 00002838   A 4      +
 00000002 00000002 00002840   A 4      +
 00000002 00000002 00002848   A 4      +
 00000002 00000002 00002850   A 4      +
 00000002 0000000E 00002858   A 4      +
 00000002 00000002 000029C0   A 4      +
 00000002 00000002 000029E8   A 4      +
 00000002 00000002 000029F0   A 4      +
 00000002 0000000A 00002AA0   A 4      +
 00000002 00000002 00002AA8   A 4      +
 00000002 0000000E 00002AB0   A 4      +
 00000002 00000002 00002AB8   A 4      +
 00000002 00000002 00002AC0   A 4      +
 00000002 00000002 00002BA0   A 4      +
 00000002 00000002 00002BA8   A 4      +
 00000002 00000002 00002C00   A 4      +
 00000002 00000002 00002C28   A 4      +
                                                 Relocation Dictionary                                                     Page  265 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00002C30   A 4      +
 00000002 00000002 00002D10   A 4      +
 00000002 00000002 00002D18   A 4      +
 00000002 00000002 00002D40   A 4      +
 00000002 00000002 00002D68   A 4      +
 00000002 00000002 00002D70   A 4      +
 00000002 00000002 00002DF0   A 4      +
 00000002 00000002 00002DF8   A 4      +
 00000002 00000002 00002EB8   A 4      +
 00000002 00000002 00002EE0   A 4      +
 00000002 00000002 00002EE8   A 4      +
 00000002 00000004 00003088   A 4      +
 00000002 00000022 00003090   A 4      +
 00000002 00000022 00003098   A 4      +
 00000002 00000009 000030A0   A 4      +
 00000002 00000002 000030A8   A 4      +
 00000002 00000002 000030D8   A 4      +
 00000002 00000002 00003100   A 4      +
 00000002 00000002 00003108   A 4      +
 00000002 0000000A 000032E0   A 4      +
 00000002 00000004 000032E8   A 4      +
 00000002 00000022 000032F0   A 4      +
 00000002 00000022 000032F8   A 4      +
 00000002 00000002 00003300   A 4      +
 00000002 0000000E 00003308   A 4      +
 00000002 00000002 00003310   A 4      +
 00000002 00000002 00003318   A 4      +
 00000002 00000002 00003320   A 4      +
 00000002 00000002 00003358   A 4      +
 00000002 00000002 00003380   A 4      +
 00000002 00000002 00003388   A 4      +
 00000002 00000002 000033F8   A 4      +
 00000002 00000002 000034E0   A 4      +
 00000002 00000002 00003508   A 4      +
 00000002 00000002 00003510   A 4      +
 00000002 00000002 000035E0   A 4      +
 00000002 00000002 00003610   A 4      +
 00000002 00000002 00003638   A 4      +
 00000002 00000002 00003640   A 4      +
 00000002 00000002 00003718   A 4      +
 00000002 00000002 00003720   A 4      +
 00000002 00000002 00003748   A 4      +
 00000002 00000002 00003770   A 4      +
 00000002 00000002 00003778   A 4      +
 00000002 00000020 0000382C   Q 4      +
 00000002 00000002 00003880   A 4      +
 00000002 00000002 00003888   A 4      +
 00000002 00000002 00003900   A 4      +
 00000002 00000002 00003928   A 4      +
 00000002 00000002 00003930   A 4      +
 00000002 0000000A 00003AF8   A 4      +
 00000002 00000002 00003B00   A 4      +
 00000002 00000002 00003B08   A 4      +
                                                 Relocation Dictionary                                                     Page  266 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00003B10   A 4      +
 00000002 00000002 00003B18   A 4      +
 00000002 00000004 00003B20   A 4      +
 00000002 00000022 00003B28   A 4      +
 00000002 00000022 00003B30   A 4      +
 00000002 0000000E 00003B38   A 4      +
 00000002 00000009 00003B40   A 4      +
 00000002 00000010 00003B48   A 4      +
 00000002 00000002 00003B70   A 4      +
 00000002 00000002 00003B98   A 4      +
 00000002 00000002 00003BA0   A 4      +
 00000002 00000002 00003CC8   A 4      +
 00000002 00000008 00003CD0   A 4      +
 00000002 0000000F 00003CD8   A 4      +
 00000002 00000002 00003D00   A 4      +
 00000002 00000002 00003D28   A 4      +
 00000002 00000002 00003D30   A 4      +
 00000002 00000002 00003E38   A 4      +
 00000002 00000002 00003E40   A 4      +
 00000002 00000022 00003E48   A 4      +
 00000002 00000002 00003E70   A 4      +
 00000002 00000002 00003E98   A 4      +
 00000002 00000002 00003EA0   A 4      +
 00000002 0000000A 00004010   A 4      +
 00000002 00000002 00004018   A 4      +
 00000002 00000002 00004020   A 4      +
 00000002 00000002 00004028   A 4      +
 00000002 0000000E 00004030   A 4      +
 00000002 00000002 00004058   A 4      +
 00000002 00000002 00004080   A 4      +
 00000002 00000002 00004088   A 4      +
 00000002 0000000A 00004190   A 4      +
 00000002 00000002 00004198   A 4      +
 00000002 0000000E 000041A0   A 4      +
 00000002 00000002 000041A8   A 4      +
 00000002 00000002 000041B0   A 4      +
 00000002 00000002 000041B8   A 4      +
 00000002 00000002 000041C0   A 4      +
 00000002 00000006 000041C8   A 4      +
 00000002 00000002 00004318   A 4      +
 00000002 00000002 00004340   A 4      +
 00000002 00000002 00004348   A 4      +
 00000002 0000000A 00004450   A 4      +
 00000002 00000002 00004458   A 4      +
 00000002 0000000E 00004460   A 4      +
 00000002 00000002 00004468   A 4      +
 00000002 00000002 00004470   A 4      +
 00000002 00000002 00004478   A 4      +
 00000002 00000006 00004480   A 4      +
 00000002 00000002 00004608   A 4      +
 00000002 00000002 00004630   A 4      +
 00000002 00000002 00004638   A 4      +
 00000002 0000000A 00004738   A 4      +
                                                 Relocation Dictionary                                                     Page  267 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00004740   A 4      +
 00000002 00000002 00004748   A 4      +
 00000002 00000002 00004750   A 4      +
 00000002 00000002 00004758   A 4      +
 00000002 00000002 00004760   A 4      +
 00000002 0000000E 00004768   A 4      +
 00000002 00000002 00004A38   A 4      +
 00000002 00000002 00004A60   A 4      +
 00000002 00000002 00004A68   A 4      +
 00000002 00000002 00004AD8   A 4      +
 00000002 00000002 00004AE0   A 4      +
 00000002 00000006 00004AE8   A 4      +
 00000002 00000002 00004BC0   A 4      +
 00000002 00000002 00004BE8   A 4      +
 00000002 00000002 00004BF0   A 4      +
 00000002 0000000A 00004CC8   A 4      +
 00000002 00000002 00004CD0   A 4      +
 00000002 00000020 00004CD8   Q 4      +
 00000002 00000002 00004CE0   A 4      +
 00000002 00000002 00004CE8   A 4      +
 00000002 00000002 00004CF0   A 4      +
 00000002 00000002 00004CF8   A 4      +
 00000002 0000000E 00004D00   A 4      +
 00000002 00000014 00004D08   A 4      +
 00000002 00000002 00004D10   A 4      +
 00000002 00000017 00004D18   A 4      +
 00000002 00000002 00004D20   A 4      +
 00000002 00000002 00004D28   A 4      +
 00000002 00000002 00004FC0   A 4      +
 00000002 00000002 00004FE8   A 4      +
 00000002 00000002 00004FF0   A 4      +
 00000002 00000002 000050D0   A 4      +
 00000002 00000002 000050F8   A 4      +
 00000002 00000002 00005120   A 4      +
 00000002 00000002 00005128   A 4      +
 00000002 0000000A 00005258   A 4      +
 00000002 00000002 00005260   A 4      +
 00000002 0000000E 00005268   A 4      +
 00000002 00000002 00005270   A 4      +
 00000002 00000002 00005278   A 4      +
 00000002 00000002 00005280   A 4      +
 00000002 00000002 00005288   A 4      +
 00000002 00000017 00005290   A 4      +
 00000002 00000002 00005298   A 4      +
 00000002 00000002 000052A0   A 4      +
 00000002 00000022 000052A8   A 4      +
 00000002 00000002 000052B0   A 4      +
 00000002 00000020 000052B8   Q 4      +
 00000002 00000002 000052C0   A 4      +
 00000002 00000014 000052C8   A 4      +
 00000002 0000001F 000052D0   A 4      +
 00000002 00000022 000052D8   A 4      +
 00000002 00000002 000052E0   A 4      +
                                                 Relocation Dictionary                                                     Page  268 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 000052E8   A 4      +
 00000002 00000002 000055D0   A 4      +
 00000002 00000002 000055F8   A 4      +
 00000002 00000002 00005600   A 4      +
 00000002 00000002 00005670   A 4      +
 00000002 00000006 00005678   A 4      +
 00000002 00000002 00005780   A 4      +
 00000002 00000002 000057A8   A 4      +
 00000002 00000002 000057B0   A 4      +
 00000002 0000000A 000058D8   A 4      +
 00000002 00000002 000058E0   A 4      +
 00000002 0000000E 000058E8   A 4      +
 00000002 00000002 000058F0   A 4      +
 00000002 00000002 000058F8   A 4      +
 00000002 00000002 00005900   A 4      +
 00000002 00000002 00005908   A 4      +
 00000002 00000020 00005910   Q 4      +
 00000002 00000002 00005918   A 4      +
 00000002 00000017 00005920   A 4      +
 00000002 00000002 00005928   A 4      +
 00000002 00000002 00005930   A 4      +
 00000002 00000002 00005938   A 4      +
 00000002 00000002 00005940   A 4      +
 00000002 00000006 00005948   A 4      +
 00000002 0000000D 00005950   A 4      +
 00000002 00000015 00005958   A 4      +
 00000002 0000001B 00005960   A 4      +
 00000002 00000002 00005968   A 4      +
 00000002 00000002 00005CC8   A 4      +
 00000002 00000002 00005CF0   A 4      +
 00000002 00000002 00005CF8   A 4      +
 00000002 00000002 00005D80   A 4      +
 00000002 00000002 00005D88   A 4      +
 00000002 00000002 00005D90   A 4      +
 00000002 00000002 00005E30   A 4      +
 00000002 00000002 00005E58   A 4      +
 00000002 00000002 00005E60   A 4      +
 00000002 00000002 00005F50   A 4      +
 00000002 00000002 00005F58   A 4      +
 00000002 00000002 00005F80   A 4      +
 00000002 00000002 00005FA8   A 4      +
 00000002 00000002 00005FB0   A 4      +
 00000002 00000002 000060C8   A 4      +
 00000002 00000022 000060D0   A 4      +
 00000002 00000002 000060D8   A 4      +
 00000002 00000002 000060E0   A 4      +
 00000002 00000002 00006110   A 4      +
 00000002 00000002 00006138   A 4      +
 00000002 00000002 00006140   A 4      +
 00000002 00000002 00006208   A 4      +
 00000002 00000002 00006238   A 4      +
 00000002 00000002 00006260   A 4      +
 00000002 00000002 00006268   A 4      +
                                                 Relocation Dictionary                                                     Page  269 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 000062D8   A 4      +
 00000002 00000002 00006378   A 4      +
 00000002 00000002 000063A0   A 4      +
 00000002 00000002 000063A8   A 4      +
 00000002 00000016 00006418   A 4      +
 00000002 00000002 00006420   A 4      +
 00000002 00000002 00006428   A 4      +
 00000002 00000013 00006430   A 4      +
 00000002 00000002 00006548   A 4      +
 00000002 00000002 00006570   A 4      +
 00000002 00000002 00006578   A 4      +
 00000002 00000002 00006608   A 4      +
 00000002 00000002 00006680   A 4      +
 00000002 00000002 000066A8   A 4      +
 00000002 00000002 000066B0   A 4      +
 00000002 00000002 00006728   A 4      +
 00000002 00000002 000067D8   A 4      +
 00000002 00000002 00006800   A 4      +
 00000002 00000002 00006808   A 4      +
 00000002 00000002 00006878   A 4      +
 00000002 00000002 00006920   A 4      +
 00000002 00000002 00006948   A 4      +
 00000002 00000002 00006950   A 4      +
 00000002 00000002 00006A10   A 4      +
 00000002 00000002 00006A40   A 4      +
 00000002 00000002 00006A68   A 4      +
 00000002 00000002 00006A70   A 4      +
 00000002 00000002 00006C10   A 4      +
 00000002 0000000A 00006C20   A 4      +
 00000002 00000002 00006C28   A 4      +
 00000002 0000000E 00006C30   A 4      +
 00000002 00000002 00006C68   A 4      +
 00000002 00000002 00006C90   A 4      +
 00000002 00000002 00006C98   A 4      +
 00000002 00000002 00006D78   A 4      +
 00000002 00000002 00006DA8   A 4      +
 00000002 00000002 00006DD0   A 4      +
 00000002 00000002 00006DD8   A 4      +
 00000002 00000002 00006E98   A 4      +
 00000002 00000002 00006EC8   A 4      +
 00000002 00000002 00006EF0   A 4      +
 00000002 00000002 00006EF8   A 4      +
 00000002 00000002 00007048   A 4      +
 00000002 0000000A 00007050   A 4      +
 00000002 00000002 00007058   A 4      +
 00000002 0000000E 00007060   A 4      +
 00000002 00000002 00007098   A 4      +
 00000002 00000002 000070C0   A 4      +
 00000002 00000002 000070C8   A 4      +
 00000002 00000002 000071A0   A 4      +
 00000002 00000002 000071D0   A 4      +
 00000002 00000002 000071F8   A 4      +
 00000002 00000002 00007200   A 4      +
                                                 Relocation Dictionary                                                     Page  270 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 000072A8   A 4      +
 00000002 00000002 000072B0   A 4      +
 00000002 00000006 000072B8   A 4      +
 00000002 00000002 00007340   A 4      +
 00000002 00000002 00007368   A 4      +
 00000002 00000002 00007370   A 4      +
 00000002 0000000A 00007468   A 4      +
 00000002 00000002 00007470   A 4      +
 00000002 0000000E 00007478   A 4      +
 00000002 00000002 00007480   A 4      +
 00000002 00000002 00007488   A 4      +
 00000002 00000002 00007490   A 4      +
 00000002 00000002 00007570   A 4      +
 00000002 00000002 00007598   A 4      +
 00000002 00000002 000075A0   A 4      +
 00000002 0000001F 00007660   A 4      +
 00000002 00000022 00007668   A 4      +
 00000002 00000022 00007670   A 4      +
 00000002 00000006 00007678   A 4      +
 00000002 00000002 000077A0   A 4      +
 00000002 00000002 000077C8   A 4      +
 00000002 00000002 000077D0   A 4      +
 00000002 0000000A 00007960   A 4      +
 00000002 0000000C 00007968   A 4      +
 00000002 00000022 00007970   A 4      +
 00000002 00000002 00007978   A 4      +
 00000002 00000005 00007980   A 4      +
 00000002 0000000E 00007988   A 4      +
 00000002 00000002 00007AE0   A 4      +
 00000002 00000002 00007B08   A 4      +
 00000002 00000002 00007B10   A 4      +
 00000002 00000002 00007BE0   A 4      +
 00000002 00000022 00007BE8   A 4      +
 00000023 00000021 00008564   Q 4      +
 00000023 00000021 00008684   Q 4      +
 00000023 00000021 00008744   Q 4      +
 00000023 00000021 0000876C   Q 4      +
 00000023 00000021 00008794   Q 4      +
 00000023 00000022 000087A0   A 4      +
 00000023 00000021 000087BC   Q 4      +
 00000023 00000022 000087C8   A 4      +
 00000023 00000021 000087E4   Q 4      +
 00000023 00000022 000087F0   A 4      +
 00000023 00000021 0000880C   Q 4      +
 00000023 00000022 00008818   A 4      +
 00000023 00000021 00008834   Q 4      +
 00000023 00000022 00008840   A 4      +
 00000023 00000021 0000885C   Q 4      +
 00000023 00000022 00008868   A 4      +
 00000023 00000021 00008884   Q 4      +
 00000023 00000022 00008890   A 4      +
 00000023 00000021 000088AC   Q 4      +
 00000023 00000022 000088B8   A 4      +
                                                 Relocation Dictionary                                                     Page  271 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000023 00000021 000088D4   Q 4      +
 00000023 00000022 000088E0   A 4      +
 00000023 00000021 000088FC   Q 4      +
 00000023 00000022 00008908   A 4      +
 00000023 00000021 00008924   Q 4      +
 00000023 00000022 00008930   A 4      +
 00000023 00000021 0000894C   Q 4      +
 00000023 00000022 00008958   A 4      +
 00000023 00000021 00008974   Q 4      +
 00000023 00000022 00008980   A 4      +
 00000023 00000021 0000899C   Q 4      +
 00000023 00000022 000089A8   A 4      +
 00000023 00000021 000089C4   Q 4      +
 00000023 00000022 000089D0   A 4      +
 00000023 00000021 000089EC   Q 4      +
 00000023 00000022 000089F8   A 4      +
 00000023 00000021 00008A14   Q 4      +
 00000023 00000022 00008A20   A 4      +
 00000023 00000021 00008A3C   Q 4      +
 00000023 00000022 00008A48   A 4      +
 00000023 00000021 00008A64   Q 4      +
 00000023 00000022 00008A70   A 4      +
 00000023 00000021 00008A8C   Q 4      +
 00000023 00000022 00008A98   A 4      +
 00000023 00000021 00008AB4   Q 4      +
 00000023 00000022 00008AC0   A 4      +
 00000023 00000021 00008ADC   Q 4      +
 00000023 00000022 00008AE8   A 4      +
 00000023 00000021 00008B04   Q 4      +
 00000023 00000022 00008B10   A 4      +
 00000023 00000021 00008B2C   Q 4      +
 00000023 00000022 00008B38   A 4      +
 00000023 00000021 00008B54   Q 4      +
 00000023 00000022 00008B60   A 4      +
 00000023 00000021 00008B7C   Q 4      +
 00000023 00000022 00008B88   A 4      +
 00000023 00000021 00008BA4   Q 4      +
 00000023 00000022 00008BB0   A 4      +
 00000023 00000021 00008BCC   Q 4      +
 00000023 00000022 00008BD8   A 4      +
 00000023 00000021 00008BF4   Q 4      +
 00000023 00000022 00008C00   A 4      +
 00000023 00000021 00008C1C   Q 4      +
 00000023 00000022 00008C28   A 4      +
 00000023 00000021 00008C44   Q 4      +
 00000023 00000022 00008C50   A 4      +
 00000023 00000021 00008C6C   Q 4      +
 00000023 00000022 00008C78   A 4      +
 00000023 00000021 00008C94   Q 4      +
 00000023 00000022 00008CA0   A 4      +
 00000023 00000021 00008CBC   Q 4      +
 00000023 00000022 00008CC8   A 4      +
 00000023 00000021 00008CE4   Q 4      +
                                                 Relocation Dictionary                                                     Page  272 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000023 00000022 00008CF0   A 4      +
 00000023 00000021 00008D0C   Q 4      +
 00000023 00000022 00008D18   A 4      +
 00000023 00000021 00008D34   Q 4      +
 00000023 00000022 00008D40   A 4      +
 00000023 00000021 00008D5C   Q 4      +
 00000023 00000022 00008D68   A 4      +
 00000023 00000021 00008D84   Q 4      +
 00000023 00000022 00008D90   A 4      +
 00000023 00000021 00008DAC   Q 4      +
 00000023 00000022 00008DB8   A 4      +
 00000023 00000021 00008DD4   Q 4      +
 00000023 00000022 00008DE0   A 4      +
 00000023 00000021 00008DFC   Q 4      +
 00000023 00000022 00008E08   A 4      +
 00000023 00000021 00008E24   Q 4      +
 00000023 00000022 00008E30   A 4      +
 00000023 00000021 00008E4C   Q 4      +
 00000023 00000022 00008E58   A 4      +
 00000023 00000021 00008E74   Q 4      +
 00000023 00000022 00008E80   A 4      +
 00000023 00000021 00008E9C   Q 4      +
 00000023 00000022 00008EA8   A 4      +
 00000023 00000021 00008EC4   Q 4      +
 00000023 00000022 00008ED0   A 4      +
 00000023 00000021 00008EEC   Q 4      +
 00000023 00000022 00008EF8   A 4      +
 00000023 00000021 00008F14   Q 4      +
 00000023 00000022 00008F20   A 4      +
 00000023 00000021 00008F3C   Q 4      +
 00000023 00000022 00008F48   A 4      +
 00000023 00000021 00008F64   Q 4      +
 00000023 00000022 00008F70   A 4      +
 00000023 00000021 00008F8C   Q 4      +
 00000023 00000022 00008F98   A 4      +
 00000023 00000021 00008FB4   Q 4      +
 00000023 00000022 00008FC0   A 4      +
 00000023 00000021 00008FDC   Q 4      +
 00000023 00000022 00008FE8   A 4      +
 00000023 00000021 00009004   Q 4      +
 00000023 00000022 00009010   A 4      +
 00000023 00000021 0000902C   Q 4      +
 00000023 00000022 00009038   A 4      +
 00000023 00000021 00009054   Q 4      +
 00000023 00000022 00009060   A 4      +
 00000023 00000021 0000907C   Q 4      +
 00000023 00000022 00009088   A 4      +
 00000023 00000021 000090A4   Q 4      +
 00000023 00000022 000090B0   A 4      +
 00000023 00000021 000090CC   Q 4      +
 00000023 00000022 000090D8   A 4      +
 00000023 00000021 000090F4   Q 4      +
 00000023 00000022 00009100   A 4      +
                                                 Relocation Dictionary                                                     Page  273 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000023 00000021 0000911C   Q 4      +
 00000023 00000022 00009128   A 4      +
 00000023 00000021 00009144   Q 4      +
 00000023 00000022 00009150   A 4      +
 00000023 00000021 0000916C   Q 4      +
 00000023 00000022 00009178   A 4      +
 00000023 00000021 00009194   Q 4      +
 00000023 00000022 000091A0   A 4      +
 00000023 00000021 000091BC   Q 4      +
 00000023 00000022 000091C8   A 4      +
 00000023 00000021 000091E4   Q 4      +
 00000023 00000022 000091F0   A 4      +
 00000023 00000021 0000920C   Q 4      +
 00000023 00000022 00009218   A 4      +
 00000023 00000021 00009234   Q 4      +
 00000023 00000022 00009240   A 4      +
 00000023 00000021 0000925C   Q 4      +
 00000023 00000022 00009268   A 4      +
 00000023 00000021 00009284   Q 4      +
 00000023 00000022 00009290   A 4      +
 00000023 00000021 000092AC   Q 4      +
 00000023 00000022 000092B8   A 4      +
 00000023 00000021 000092D4   Q 4      +
 00000023 00000022 000092E0   A 4      +
 00000023 00000021 000092FC   Q 4      +
 00000023 00000022 00009308   A 4      +
 00000023 00000021 00009324   Q 4      +
 00000023 00000022 00009330   A 4      +
 00000023 00000021 0000934C   Q 4      +
 00000023 00000022 00009358   A 4      +
 00000023 00000021 00009374   Q 4      +
 00000023 00000022 00009380   A 4      +
 00000023 00000021 0000939C   Q 4      +
 00000023 00000022 000093A8   A 4      +
 00000023 00000021 000093C4   Q 4      +
 00000023 00000022 000093D0   A 4      +
 00000023 00000021 000093EC   Q 4      +
 00000023 00000022 000093F8   A 4      +
 00000023 00000021 00009414   Q 4      +
 00000023 00000022 00009420   A 4      +
 00000023 00000021 0000943C   Q 4      +
 00000023 00000022 00009448   A 4      +
 00000023 00000021 00009464   Q 4      +
 00000023 00000022 00009470   A 4      +
 00000023 00000021 0000948C   Q 4      +
 00000023 00000022 00009498   A 4      +
 00000023 00000021 000094B4   Q 4      +
 00000023 00000022 000094C0   A 4      +
 00000023 00000021 000094DC   Q 4      +
 00000023 00000022 000094E8   A 4      +
 00000023 00000021 00009504   Q 4      +
 00000023 00000022 00009510   A 4      +
 00000023 00000021 0000952C   Q 4      +
                                                 Relocation Dictionary                                                     Page  274 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000023 00000022 00009538   A 4      +
 00000023 00000021 00009554   Q 4      +
 00000023 00000022 00009560   A 4      +
 00000023 00000021 0000957C   Q 4      +
 00000023 00000022 00009588   A 4      +
                                                 DSECT Cross Reference                                                     Page  275 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
@AUTO#rd_atomic32_get
         000000AC  FFFFFFFE  00320
@AUTO#rd_atomic32_sub
         000000AC  FFFFFFFF  00198
@AUTO#rd_atomic64_set
         000000B0  FFFFFFFD  00447
@AUTO#rd_calloc
         000000A8  FFFFFFFC  00576
@AUTO#rd_clock
         000000B8  FFFFFFF8  01055
@AUTO#rd_free
         000000A8  FFFFFFFA  00806
@AUTO#rd_kafka_app_poll_blocking
         000000A8  FFFFFFDD  05261
@AUTO#rd_kafka_app_polled
         000000A8  FFFFFFDC  05376
@AUTO#rd_kafka_enq_once_destroy0
         000000A8  FFFFFFE0  04773
@AUTO#rd_kafka_enq_once_trigger
         000000B8  FFFFFFDF  05000
@AUTO#rd_kafka_enq_once_trigger_destroy
         000000A8  FFFFFFB9  11847
@AUTO#rd_kafka_op_cmp_prio
         000000A8  FFFFFFED  02459
@AUTO#rd_kafka_op_filter
         000000A8  FFFFFFD2  07316
@AUTO#rd_kafka_op_version_outdated
         000000A8  FFFFFFDE  05149
@AUTO#rd_kafka_purge_outdated_messages
         000000B0  FFFFFFCE  08428
@AUTO#rd_kafka_q_apply
         000000AC  FFFFFFBC  11238
@AUTO#rd_kafka_q_cb_event_enable
         000000A8  FFFFFFBF  10782
@AUTO#rd_kafka_q_check_yield
         000000A8  FFFFFFDA  05566
@AUTO#rd_kafka_q_concat0
         000000AC  FFFFFFE6  03831
@AUTO#rd_kafka_q_deq0
         000000A8  FFFFFFE8  03364
@AUTO#rd_kafka_q_destroy_final
         000000A8  FFFFFFD9  05781
@AUTO#rd_kafka_q_destroy_owner
         000000A8  FFFFFFF1  01983
@AUTO#rd_kafka_q_destroy0
         000000AC  FFFFFFF2  01878
@AUTO#rd_kafka_q_disable0
         000000A8  FFFFFFF3  01692
@AUTO#rd_kafka_q_dump
         000000A8  FFFFFFBA  11732
@AUTO#rd_kafka_q_enq
         000000A8  FFFFFFE9  03260
@AUTO#rd_kafka_q_enq0
                                                 DSECT Cross Reference                                                     Page  276 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
         000000A8  FFFFFFEB  02890
@AUTO#rd_kafka_q_enq1
         000000A8  FFFFFFEA  03151
@AUTO#rd_kafka_q_fix_offsets
         000000B0  FFFFFFBB  11445
@AUTO#rd_kafka_q_fwd_get
         000000A8  FFFFFFEF  02203
@AUTO#rd_kafka_q_fwd_set0
         000000A8  FFFFFFD6  06246
@AUTO#rd_kafka_q_init0
         000000A8  FFFFFFD8  05928
@AUTO#rd_kafka_q_io_event
         000000A8  FFFFFFEE  02366
@AUTO#rd_kafka_q_io_event_enable
         000000A8  FFFFFFC2  10393
@AUTO#rd_kafka_q_keep
         000000A8  FFFFFFF4  01569
@AUTO#rd_kafka_q_len
         000000AC  FFFFFFE4  04250
@AUTO#rd_kafka_q_mark_served
         000000A8  FFFFFFE7  03444
@AUTO#rd_kafka_q_move_cnt
         000000AC  FFFFFFD3  07173
@AUTO#rd_kafka_q_new0
         000000A8  FFFFFFD7  06061
@AUTO#rd_kafka_q_pop
         000000A8  FFFFFFD0  07835
@AUTO#rd_kafka_q_pop_serve
         000000B9  FFFFFFD1  07718
@AUTO#rd_kafka_q_prepend0
         000000A8  FFFFFFE5  04092
@AUTO#rd_kafka_q_purge_toppar_version
         000000B8  FFFFFFD4  06776
@AUTO#rd_kafka_q_purge0
         000000B8  FFFFFFD5  06505
@AUTO#rd_kafka_q_reset
         000000A8  FFFFFFF0  02066
@AUTO#rd_kafka_q_serve
         00000168  FFFFFFCF  08261
@AUTO#rd_kafka_q_serve_rkmessages
         000000C8  FFFFFFCD  08935
@AUTO#rd_kafka_q_wait_result
         000000AC  FFFFFFBD  11035
@AUTO#rd_kafka_q_yield
         000000A8  FFFFFFEC  02661
@AUTO#rd_kafka_queue_cb_event_enable
         000000A8  FFFFFFBE  10893
@AUTO#rd_kafka_queue_destroy
         000000A8  FFFFFFCC  09073
@AUTO#rd_kafka_queue_forward
         000000A8  FFFFFFC4  10092
@AUTO#rd_kafka_queue_get_background
         000000A8  FFFFFFC6  09848
                                                 DSECT Cross Reference                                                     Page  277 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
@AUTO#rd_kafka_queue_get_consumer
         000000A8  FFFFFFC8  09560
@AUTO#rd_kafka_queue_get_main
         000000A8  FFFFFFC9  09445
@AUTO#rd_kafka_queue_get_partition
         000000A8  FFFFFFC7  09731
@AUTO#rd_kafka_queue_io_event_enable
         000000A8  FFFFFFC1  10506
@AUTO#rd_kafka_queue_length
         000000A8  FFFFFFC3  10198
@AUTO#rd_kafka_queue_new
         000000A8  FFFFFFCA  09338
@AUTO#rd_kafka_queue_new0
         000000A8  FFFFFFCB  09200
@AUTO#rd_kafka_queue_yield
         000000A8  FFFFFFC0  10612
@AUTO#rd_kafka_replyq_clear
         000000A8  FFFFFFE3  04324
@AUTO#rd_kafka_replyq_destroy
         000000A8  FFFFFFE2  04442
@AUTO#rd_kafka_replyq_enq
         000000AC  FFFFFFE1  04589
@AUTO#rd_kafka_set_log_queue
         000000A8  FFFFFFC5  09972
@AUTO#rd_kafka_yield
         000000A8  FFFFFFDB  05479
@AUTO#rd_malloc
         000000A8  FFFFFFFB  00703
@AUTO#rd_refcnt_sub0
         000000AC  FFFFFFF9  00942
@AUTO#rd_timeout_init_timespec
         000000A8  FFFFFFF5  01453
@AUTO#rd_timeout_init_timespec_us
         000000A8  FFFFFFF6  01289
@AUTO#rd_timeout_us
         000000A8  FFFFFFF7  01139
                                          Macro and Copy Code Source Summary                                               Page  278 
Source                                                    Members                                     DASM V1.95.14 2021/04/30 15:35 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  279 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   135  0000009E  00000002 USING  ORDINARY    00000060 00001000 00000002  12 000E0    160 @REGION_1060_1,12
   193  00000148  00000002 DROP                                           12              12
   262  000001E6  00000002 USING  ORDINARY    000001A8 00001000 00000002  12 000D0    282 @REGION_1061_1,12
   315  00000280  00000002 DROP                                           12              12
   384  0000031E  00000002 USING  ORDINARY    000002E0 00001000 00000002  12 000E0    408 @REGION_1067_1,12
   442  000003C8  00000002 DROP                                           12              12
   511  0000045E  00000002 USING  ORDINARY    00000420 00001000 00000002  12 00110    538 @REGION_1077_1,12
   571  00000538  00000002 DROP                                           12              12
   639  000005CE  00000002 USING  ORDINARY    00000590 00001000 00000002  12 00108    665 @REGION_1078_1,12
   698  000006A0  00000002 DROP                                           12              12
   766  00000736  00000002 USING  ORDINARY    000006F8 00001000 00000002  12 000A8    773 @REGION_1080_1,12
   801  000007A8  00000002 DROP                                           12              12
   869  00000846  00000002 USING  ORDINARY    00000808 00001000 00000002  12 00118    903 @REGION_1084_1,12
   937  00000928  00000002 DROP                                           12              12
  1006  000009BE  00000002 USING  ORDINARY    00000980 00001000 00000002  12 000C0   1016 @REGION_1088_1,12
  1050  00000A48  00000002 DROP                                           12              12
  1108  00000AB2  00000002 USING  ORDINARY    00000AA8 00001000 00000002  12 00024   1116 @REGION_1091_1,12
  1134  00000ADA  00000002 DROP                                           12              12
  1202  00000B86  00000002 USING  ORDINARY    00000B48 00001000 00000002  12 000FC   1250 @REGION_1094_1,12
  1284  00000C8C  00000002 DROP                                           12              12
  1352  00000D36  00000002 USING  ORDINARY    00000CF8 00001000 00000002  12 0011E   1414 @REGION_1095_1,12
  1448  00000E5E  00000002 DROP                                           12              12
  1516  00000EFE  00000002 USING  ORDINARY    00000EC0 00001000 00000002  12 000D0   1534 @REGION_1428_1,12
  1564  00000F98  00000002 DROP                                           12              12
  1632  00001036  00000002 USING  ORDINARY    00000FF8 00001000 00000002  12 000E0   1657 @REGION_1432_1,12
  1687  000010E0  00000002 DROP                                           12              12
  1755  0000117E  00000002 USING  ORDINARY    00001140 00001000 00000002  12 001A8   1837 @REGION_1435_1,12
  1873  000012F0  00000002 DROP                                           12              12
  1942  00001396  00000002 USING  ORDINARY    00001358 00001000 00000002  12 000B0   1950 @REGION_1436_1,12
  1978  00001410  00000002 DROP                                           12              12
  2129  0000154E  00000002 USING  ORDINARY    00001510 00001000 00000002  12 00100   2165 @REGION_1439_1,12
  2198  00001618  00000002 DROP                                           12              12
  2266  000016B6  00000002 USING  ORDINARY    00001678 00001000 00000002  12 00102   2333 @REGION_1441_1,12
  2361  000017C2  00000002 DROP                                           12              12
  2418  00001832  00000002 USING  ORDINARY    00001828 00001000 00000002  12 00042   2437 @REGION_1442_1,12
  2454  0000187C  00000002 DROP                                           12              12
  2522  0000191E  00000002 USING  ORDINARY    000018E0 00001000 00000002  12 0016C   2627 @REGION_1443_1,12
  2656  00001A94  00000002 DROP                                           12              12
  2724  00001B2E  00000002 USING  ORDINARY    00001AF0 00001000 00000002  12 001C2   2850 @REGION_1444_1,12
  2885  00001D18  00000002 DROP                                           12              12
  2953  00001DB6  00000002 USING  ORDINARY    00001D78 00001000 00000002  12 00212   3116 @REGION_1445_1,12
  3146  00001FD2  00000002 DROP                                           12              12
  3214  0000206E  00000002 USING  ORDINARY    00002030 00001000 00000002  12 000D0   3227 @REGION_1446_1,12
  3255  00002108  00000002 DROP                                           12              12
  3312  00002172  00000002 USING  ORDINARY    00002168 00001000 00000002  12 0003C   3331 @REGION_1448_1,12
  3359  000021E2  00000002 DROP                                           12              12
  3416  00002252  00000002 USING  ORDINARY    00002248 00001000 00000002  12 00024   3422 @REGION_1449_1,12
  3439  0000227A  00000002 DROP                                           12              12
  3507  0000231E  00000002 USING  ORDINARY    000022E0 00001000 00000002  12 00382   3797 @REGION_1450_1,12
  3826  000026AA  00000002 DROP                                           12              12
  3895  0000274E  00000002 USING  ORDINARY    00002710 00001000 00000002  12 0024A   4061 @REGION_1451_1,12
                                                      Using Map                                                            Page  280 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  4087  000029A2  00000002 DROP                                           12              12
  4155  00002A3E  00000002 USING  ORDINARY    00002A00 00001000 00000002  12 00106   4217 @REGION_1452_1,12
  4245  00002B52  00000002 DROP                                           12              12
  4387  00002C7E  00000002 USING  ORDINARY    00002C40 00001000 00000002  12 000D8   4408 @REGION_1460_1,12
  4437  00002D20  00000002 DROP                                           12              12
  4505  00002DBE  00000002 USING  ORDINARY    00002D80 00001000 00000002  12 00088   4557 @REGION_1461_1,12
  4584  00002E90  00000002 DROP                                           12              12
  4653  00002F36  00000002 USING  ORDINARY    00002EF8 00001000 00000002  12 001B0   4736 @REGION_1475_1,12
  4768  000030B0  00000002 DROP                                           12              12
  4836  00003156  00000002 USING  ORDINARY    00003118 00001000 00000002  12 00208   4957 @REGION_1480_1,12
  4995  00003328  00000002 DROP                                           12              12
  5066  000033D6  00000002 USING  ORDINARY    00003398 00001000 00000002  12 000D8   5119 @REGION_1863_1,12
  5144  000034B8  00000002 DROP                                           12              12
  5212  0000355E  00000002 USING  ORDINARY    00003520 00001000 00000002  12 000C8   5226 @REGION_1914_1,12
  5256  000035F0  00000002 DROP                                           12              12
  5324  0000368E  00000002 USING  ORDINARY    00003650 00001000 00000002  12 000D0   5341 @REGION_1915_1,12
  5371  00003728  00000002 DROP                                           12              12
  5441  000037C6  00000002 USING  ORDINARY    00003788 00001000 00000002  12 000A4   5447 @REGION_569_1,12
  5474  00003830  00000002 DROP                                           12              12
  5531  000038A2  00000002 USING  ORDINARY    00003898 00001000 00000002  12 00030   5540 @REGION_1943_1,12
  5561  000038D6  00000002 DROP                                           12              12
  5631  0000397E  00000002 USING  ORDINARY    00003940 00001000 00000002  12 00208   5737 @REGION_1427_1,12
  5776  00003B50  00000002 DROP                                           12              12
  5846  00003BEE  00000002 USING  ORDINARY    00003BB0 00001000 00000002  12 00128   5886 @REGION_1425_1,12
  5923  00003CE0  00000002 DROP                                           12              12
  5993  00003D7E  00000002 USING  ORDINARY    00003D40 00001000 00000002  12 00108   6014 @REGION_1426_1,12
  6056  00003E50  00000002 DROP                                           12              12
  6126  00003EEE  00000002 USING  ORDINARY    00003EB0 00001000 00000002  12 00180   6208 @REGION_1438_1,12
  6241  00004038  00000002 DROP                                           12              12
  6311  000040D6  00000002 USING  ORDINARY    00004098 00001000 00000002  12 00208   6475 @REGION_1433_1,12
  6500  000042E8  00000002 DROP                                           12              12
  6573  00004396  00000002 USING  ORDINARY    00004358 00001000 00000002  12 00244   6749 @REGION_1434_1,12
  6771  000045E4  00000002 DROP                                           12              12
  6846  00004686  00000002 USING  ORDINARY    00004648 00001000 00000002  12 0037E   7131 @REGION_1465_1,12
  7168  00004A12  00000002 DROP                                           12              12
  7237  00004AB6  00000002 USING  ORDINARY    00004A78 00001000 00000002  12 000D8   7284 @REGION_1944_1,12
  7311  00004B98  00000002 DROP                                           12              12
  7381  00004C3E  00000002 USING  ORDINARY    00004C00 00001000 00000002  12 00358   7682 @REGION_1462_1,12
  7713  00004FA0  00000002 DROP                                           12              12
  7788  0000503E  00000002 USING  ORDINARY    00005000 00001000 00000002  12 000D0   7803 @REGION_1463_1,12
  7830  000050D8  00000002 DROP                                           12              12
  7900  00005176  00000002 USING  ORDINARY    00005138 00001000 00000002  12 0041E   8228 @REGION_1464_1,12
  8256  0000559E  00000002 DROP                                           12              12
  8333  0000564E  00000002 USING  ORDINARY    00005610 00001000 00000002  12 000F0   8400 @REGION_1945_1,12
  8423  00005756  00000002 DROP                                           12              12
  8496  000057FE  00000002 USING  ORDINARY    000057C0 00001000 00000002  12 00498   8902 @REGION_1466_1,12
  8930  00005CA0  00000002 DROP                                           12              12
  9007  00005D46  00000002 USING  ORDINARY    00005D08 00001000 00000002  12 000AE   9043 @REGION_577_1,12
  9068  00005E10  00000002 DROP                                           12              12
  9138  00005EAE  00000002 USING  ORDINARY    00005E70 00001000 00000002  12 000E8   9160 @REGION_1946_1,12
  9195  00005F60  00000002 DROP                                           12              12
  9265  00005FFE  00000002 USING  ORDINARY    00005FC0 00001000 00000002  12 00120   9298 @REGION_576_1,12
  9333  000060E8  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  281 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  9403  0000618E  00000002 USING  ORDINARY    00006150 00001000 00000002  12 000B8   9413 @REGION_578_1,12
  9440  00006210  00000002 DROP                                           12              12
  9510  000062B6  00000002 USING  ORDINARY    00006278 00001000 00000002  12 0008C   9530 @REGION_579_1,12
  9555  0000634C  00000002 DROP                                           12              12
  9625  000063F6  00000002 USING  ORDINARY    000063B8 00001000 00000002  12 0011E   9697 @REGION_580_1,12
  9726  0000651E  00000002 DROP                                           12              12
  9796  000065C6  00000002 USING  ORDINARY    00006588 00001000 00000002  12 0008C   9814 @REGION_581_1,12
  9843  0000665C  00000002 DROP                                           12              12
  9913  000066FE  00000002 USING  ORDINARY    000066C0 00001000 00000002  12 00076   9941 @REGION_583_1,12
  9967  000067B2  00000002 DROP                                           12              12
 10037  00006856  00000002 USING  ORDINARY    00006818 00001000 00000002  12 0006C  10062 @REGION_582_1,12
 10087  000068FC  00000002 DROP                                           12              12
 10157  0000699E  00000002 USING  ORDINARY    00006960 00001000 00000002  12 000B0  10165 @REGION_584_1,12
 10193  00006A18  00000002 DROP                                           12              12
 10263  00006ABE  00000002 USING  ORDINARY    00006A80 00001000 00000002  12 001B0  10355 @REGION_1471_1,12
 10388  00006C38  00000002 DROP                                           12              12
 10458  00006CE6  00000002 USING  ORDINARY    00006CA8 00001000 00000002  12 000D0  10473 @REGION_585_1,12
 10501  00006D80  00000002 DROP                                           12              12
 10571  00006E26  00000002 USING  ORDINARY    00006DE8 00001000 00000002  12 000B0  10579 @REGION_587_1,12
 10607  00006EA0  00000002 DROP                                           12              12
 10677  00006F46  00000002 USING  ORDINARY    00006F08 00001000 00000002  12 00158  10745 @REGION_1947_1,12
 10777  00007068  00000002 DROP                                           12              12
 10847  00007116  00000002 USING  ORDINARY    000070D8 00001000 00000002  12 000C8  10860 @REGION_586_1,12
 10888  000071A8  00000002 DROP                                           12              12
 10958  0000724E  00000002 USING  ORDINARY    00007210 00001000 00000002  12 000C6  11001 @REGION_1467_1,12
 11030  00007322  00000002 DROP                                           12              12
 11101  000073BE  00000002 USING  ORDINARY    00007380 00001000 00000002  12 00182  11205 @REGION_1468_1,12
 11233  0000754A  00000002 DROP                                           12              12
 11304  000075EE  00000002 USING  ORDINARY    000075B0 00001000 00000002  12 00160  11408 @REGION_1469_1,12
 11440  0000777E  00000002 DROP                                           12              12
 11513  0000781E  00000002 USING  ORDINARY    000077E0 00001000 00000002  12 00278  11702 @REGION_1472_1,12
 11727  00007AB2  00000002 DROP                                           12              12
 11798  00007B5E  00000002 USING  ORDINARY    00007B20 00001000 00000002  12 000C8  11812 @REGION_1478_1,12
 11841  00007BF0  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  282 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDKAFKA_QUEUE ..\asg\asm\rdkafka_queue.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 15.35.55 Stop Time: 15.35.55 Processor Time: 00.00.00.1000
Return Code 000
