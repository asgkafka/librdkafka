                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdkafka_msgset_reader.obj ../asg/asm/rdkafka_msgset_reader.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdkafka_msgset_reader.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
@@ZARCH#  WX 00000001                              00
@RDKAFKA_MSGSET_READER
          SD 00000002 00000000 00012806            07  @CODE
rd_avl_destroy
          ER 00000003                                  RD_AVL_DESTROY
rd_kafka_err2str
          ER 00000004                                  RD_KAFKA_ERR2STR
write     ER 00000005                                  WRITE
rd_kafka_log0
          ER 00000006                                  RD_KAFKA_LOG0
rd_avl_init
          ER 00000007                                  RD_AVL_INIT
malloc    ER 00000008                                  MALLOC
fprintf   ER 00000009                                  FPRINTF
rd_kafka_buf_destroy_final
          ER 0000000A                                  RD_KAFKA_BUF_DESTROY_FINAL
rd_avl_insert_node
          ER 0000000B                                  RD_AVL_INSERT_NODE
rd_kafka_buf_new_shadow
          ER 0000000C                                  RD_KAFKA_BUF_NEW_SHADOW
@@PT3ML   ER 0000000D                                  PTHREAD_MUTEX_LOCK
@@PT3MU   ER 0000000E                                  PTHREAD_MUTEX_UNLOCK
rd_avl_find_node
          ER 0000000F                                  RD_AVL_FIND_NODE
rd_kafka_crash
          ER 00000010                                  RD_KAFKA_CRASH
rd_list_init
          ER 00000011                                  RD_LIST_INIT
rd_kafka_lz4_decompress
          ER 00000012                                  RD_KAFKA_LZ4_DECOMPRESS
rd_list_prealloc_elems
          ER 00000013                                  RD_LIST_PREALLOC_ELEMS
snprintf  ER 00000014                                  SNPRINTF
rd_list_add
          ER 00000015                                  RD_LIST_ADD
strerror  ER 00000016                                  STRERROR
rd_kafka_op_reply
          ER 00000017                                  RD_KAFKA_OP_REPLY
rd_kafka_snappy_uncompress
          ER 00000018                                  RD_KAFKA_SNAPPY_UNCOMPRESS
rd_list_sort
          ER 00000019                                  RD_LIST_SORT
rd_kafka_snappy_java_uncompress
          ER 0000001A                                  RD_KAFKA_SNAPPY_JAVA_UNCOMPRESS
rd_kafka_snappy_uncompressed_length
          ER 0000001B                                  RD_KAFKA_SNAPPY_UNCOMPRESSED_LENGTH
rd_list_destroy
          ER 0000001C                                  RD_LIST_DESTROY
rd_kafka_consumer_err
          ER 0000001D                                  RD_KAFKA_CONSUMER_ERR
rd_list_elem
          ER 0000001E                                  RD_LIST_ELEM
##ERROR   ER 0000001F                                  __ERROR
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
@@ASSERT  ER 00000020                                  __ASSERT
rd_kafka_op_new_fetch_msg
          ER 00000021                                  RD_KAFKA_OP_NEW_FETCH_MSG
rd_kafka_op_new_ctrl_msg
          ER 00000022                                  RD_KAFKA_OP_NEW_CTRL_MSG
mtx_lock  ER 00000023                                  MTX_LOCK
rd_slice_read
          ER 00000024                                  RD_SLICE_READ
mtx_unlock
          ER 00000025                                  MTX_UNLOCK
rd_kafka_q_init0
          ER 00000026                                  RD_KAFKA_Q_INIT0
rd_slice_peek
          ER 00000027                                  RD_SLICE_PEEK
rd_slice_read_uvarint
          ER 00000028                                  RD_SLICE_READ_UVARINT
rd_kafka_q_destroy_final
          ER 00000029                                  RD_KAFKA_Q_DESTROY_FINAL
cnd_signal
          ER 0000002A                                  CND_SIGNAL
rd_slice_ensure_contig
          ER 0000002B                                  RD_SLICE_ENSURE_CONTIG
rd_slice_crc32
          ER 0000002C                                  RD_SLICE_CRC32
rd_slice_crc32c
          ER 0000002D                                  RD_SLICE_CRC32C
rd_slice_narrow_relative
          ER 0000002E                                  RD_SLICE_NARROW_RELATIVE
rd_slice_widen
          ER 0000002F                                  RD_SLICE_WIDEN
rd_kafka_q_purge0
          ER 00000030                                  RD_KAFKA_Q_PURGE0
rd_slice_narrow_copy_relative
          ER 00000031                                  RD_SLICE_NARROW_COPY_RELATIVE
rd_hdr_histogram_record
          ER 00000032                                  RD_HDR_HISTOGRAM_RECORD
rwlock_rdlock
          ER 00000033                                  RWLOCK_RDLOCK
rwlock_wrlock
          ER 00000034                                  RWLOCK_WRLOCK
rwlock_rdunlock
          ER 00000035                                  RWLOCK_RDUNLOCK
rd_kafka_broker_id
          ER 00000036                                  RD_KAFKA_BROKER_ID
rwlock_wrunlock
          ER 00000037                                  RWLOCK_WRUNLOCK
@@STDERP  XD 00000038 00000003 00000000                __STDERRP
rd_unittest_assert_on_failure
          XD 00000039 00000003 00000000                RD_UNITTEST_ASSERT_ON_FAILURE
free      ER 0000003A                                  FREE
rd_kafka_q_fix_offsets
          ER 0000003B                                  RD_KAFKA_Q_FIX_OFFSETS
@rdkafka_msgset_reader&
                                              External Symbol Dictionary                                                   Page    5 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
          XD 0000003C 00000007 000006D8                @@STATIC
@rdkafka_msgset_reader
          SD 0000003D 00012808 00001604            07  @DATA
rd_unittest_assert_on_failure
          ER 0000003E                                  @ERD_UNITTEST_ASSERT_ON_FAILURE
@@STDERP  ER 0000003F                                  @E__STDERRP
rdkafka_msgset_reader:
          SD 00000040 00013E10 00001040            07  @@INIT@
rd_kafka_msgset_parse
          LD          00010680          00000002   00  RD_KAFKA_MSGSET_PARSE
rd_kafka_aborted_txns_new
          LD          00010B70          00000002   00  RD_KAFKA_ABORTED_TXNS_NEW
rd_kafka_aborted_txns_destroy
          LD          00010D10          00000002   00  RD_KAFKA_ABORTED_TXNS_DESTROY
rd_kafka_aborted_txns_add
          LD          00011400          00000002   00  RD_KAFKA_ABORTED_TXNS_ADD
rd_kafka_aborted_txns_sort
          LD          00011630          00000002   00  RD_KAFKA_ABORTED_TXNS_SORT
unittest_aborted_txns
          LD          000117C0          00000002   00  UNITTEST_ABORTED_TXNS
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Fri Apr 30 15:35:46 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS X'7CD9C4D2C1C6D2C16DD4E2C7E2C5E36DD9C5C1C4C5D9'
00000000                00000000 00012806     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS X'7C998492818692816D94A287A285A36D998581848599'
                                              18 rd_avl_destroy ALIAS X'99846D81A5936D8485A2A39996A8'
                                              19          EXTRN rd_avl_destroy
                                              20 rd_kafka_err2str ALIAS X'99846D92818692816D859999F2A2A399'
                                              21          EXTRN rd_kafka_err2str
                                              22 write    ALIAS C'write'
                                              23          EXTRN write
                                              24 rd_kafka_log0 ALIAS X'99846D92818692816D939687F0'
                                              25          EXTRN rd_kafka_log0
                                              26 rd_avl_init ALIAS X'99846D81A5936D899589A3'
                                              27          EXTRN rd_avl_init
                                              28 malloc   ALIAS C'malloc'
                                              29          EXTRN malloc
                                              30 fprintf  ALIAS C'fprintf'
                                              31          EXTRN fprintf
                                              32 rd_kafka_buf_destroy_final ALIAS X'99846D92818692816D82A4866D8485A2A399*
                                                                96A86D8689958193'
                                              33          EXTRN rd_kafka_buf_destroy_final
                                              34 rd_avl_insert_node ALIAS X'99846D81A5936D8995A28599A36D95968485'
                                              35          EXTRN rd_avl_insert_node
                                              36 rd_kafka_buf_new_shadow ALIAS X'99846D92818692816D82A4866D9585A66DA2888*
                                                                18496A6'
                                              37          EXTRN rd_kafka_buf_new_shadow
                                              38 pthread_mutex_lock ALIAS C'@@PT3ML'
                                              39          EXTRN pthread_mutex_lock
                                              40 pthread_mutex_unlock ALIAS C'@@PT3MU'
                                              41          EXTRN pthread_mutex_unlock
                                              42 rd_avl_find_node ALIAS X'99846D81A5936D868995846D95968485'
                                              43          EXTRN rd_avl_find_node
                                              44 rd_kafka_crash ALIAS X'99846D92818692816D839981A288'
                                              45          EXTRN rd_kafka_crash
                                              46 rd_list_init ALIAS X'99846D9389A2A36D899589A3'
                                              47          EXTRN rd_list_init
                                              48 rd_kafka_lz4_decompress ALIAS X'99846D92818692816D93A9F46D8485839694979*
                                                                985A2A2'
                                              49          EXTRN rd_kafka_lz4_decompress
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                              50 rd_list_prealloc_elems ALIAS X'99846D9389A2A36D97998581939396836D859385*
                                                                94A2'
                                              51          EXTRN rd_list_prealloc_elems
                                              52 snprintf ALIAS C'snprintf'
                                              53          EXTRN snprintf
                                              54 rd_list_add ALIAS X'99846D9389A2A36D818484'
                                              55          EXTRN rd_list_add
                                              56 strerror ALIAS C'strerror'
                                              57          EXTRN strerror
                                              58 rd_kafka_op_reply ALIAS X'99846D92818692816D96976D99859793A8'
                                              59          EXTRN rd_kafka_op_reply
                                              60 rd_kafka_snappy_uncompress ALIAS X'99846D92818692816DA295819797A86DA495*
                                                                839694979985A2A2'
                                              61          EXTRN rd_kafka_snappy_uncompress
                                              62 rd_list_sort ALIAS X'99846D9389A2A36DA29699A3'
                                              63          EXTRN rd_list_sort
                                              64 rd_kafka_snappy_java_uncompress ALIAS X'99846D92818692816DA295819797A86*
                                                                D9181A5816DA495839694979985A2A2'
                                              65          EXTRN rd_kafka_snappy_java_uncompress
                                              66 rd_kafka_snappy_uncompressed_length ALIAS X'99846D92818692816DA29581979*
                                                                7A86DA495839694979985A2A285846D93859587A388'
                                              67          EXTRN rd_kafka_snappy_uncompressed_length
                                              68 rd_list_destroy ALIAS X'99846D9389A2A36D8485A2A39996A8'
                                              69          EXTRN rd_list_destroy
                                              70 rd_kafka_consumer_err ALIAS X'99846D92818692816D839695A2A49485996D85999*
                                                                9'
                                              71          EXTRN rd_kafka_consumer_err
                                              72 rd_list_elem ALIAS X'99846D9389A2A36D85938594'
                                              73          EXTRN rd_list_elem
                                              74 __error  ALIAS C'##ERROR'
                                              75          EXTRN __error
                                              76 __assert ALIAS C'@@ASSERT'
                                              77          EXTRN __assert
                                              78 rd_kafka_op_new_fetch_msg ALIAS X'99846D92818692816D96976D9585A66D8685A*
                                                                383886D94A287'
                                              79          EXTRN rd_kafka_op_new_fetch_msg
                                              80 rd_kafka_op_new_ctrl_msg ALIAS X'99846D92818692816D96976D9585A66D83A399*
                                                                936D94A287'
                                              81          EXTRN rd_kafka_op_new_ctrl_msg
                                              82 mtx_lock ALIAS X'94A3A76D93968392'
                                              83          EXTRN mtx_lock
                                              84 rd_slice_read ALIAS X'99846DA2938983856D99858184'
                                              85          EXTRN rd_slice_read
                                              86 mtx_unlock ALIAS X'94A3A76DA49593968392'
                                              87          EXTRN mtx_unlock
                                              88 rd_kafka_q_init0 ALIAS X'99846D92818692816D986D899589A3F0'
                                              89          EXTRN rd_kafka_q_init0
                                              90 rd_slice_peek ALIAS X'99846DA2938983856D97858592'
                                              91          EXTRN rd_slice_peek
                                              92 rd_slice_read_uvarint ALIAS X'99846DA2938983856D998581846DA4A581998995A*
                                                                3'
                                              93          EXTRN rd_slice_read_uvarint
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                              94 rd_kafka_q_destroy_final ALIAS X'99846D92818692816D986D8485A2A39996A86D*
                                                                8689958193'
                                              95          EXTRN rd_kafka_q_destroy_final
                                              96 cnd_signal ALIAS X'8395846DA28987958193'
                                              97          EXTRN cnd_signal
                                              98 rd_slice_ensure_contig ALIAS X'99846DA2938983856D8595A2A499856D839695A3*
                                                                8987'
                                              99          EXTRN rd_slice_ensure_contig
                                             100 rd_slice_crc32 ALIAS X'99846DA2938983856D839983F3F2'
                                             101          EXTRN rd_slice_crc32
                                             102 rd_slice_crc32c ALIAS X'99846DA2938983856D839983F3F283'
                                             103          EXTRN rd_slice_crc32c
                                             104 rd_slice_narrow_relative ALIAS X'99846DA2938983856D9581999996A66D998593*
                                                                81A389A585'
                                             105          EXTRN rd_slice_narrow_relative
                                             106 rd_slice_widen ALIAS X'99846DA2938983856DA689848595'
                                             107          EXTRN rd_slice_widen
                                             108 rd_kafka_q_purge0 ALIAS X'99846D92818692816D986D97A4998785F0'
                                             109          EXTRN rd_kafka_q_purge0
                                             110 rd_slice_narrow_copy_relative ALIAS X'99846DA2938983856D9581999996A66D8*
                                                                39697A86D99859381A389A585'
                                             111          EXTRN rd_slice_narrow_copy_relative
                                             112 rd_hdr_histogram_record ALIAS X'99846D8884996D8889A2A396879981946D99858*
                                                                3969984'
                                             113          EXTRN rd_hdr_histogram_record
                                             114 rwlock_rdlock ALIAS X'99A6939683926D998493968392'
                                             115          EXTRN rwlock_rdlock
                                             116 rwlock_wrlock ALIAS X'99A6939683926DA69993968392'
                                             117          EXTRN rwlock_wrlock
                                             118 rwlock_rdunlock ALIAS X'99A6939683926D9984A49593968392'
                                             119          EXTRN rwlock_rdunlock
                                             120 rd_kafka_broker_id ALIAS X'99846D92818692816D8299969285996D8984'
                                             121          EXTRN rd_kafka_broker_id
                                             122 rwlock_wrunlock ALIAS X'99A6939683926DA699A49593968392'
                                             123          EXTRN rwlock_wrunlock
                                             124 __stderrp ALIAS C'@@STDERP'
                                             125 __stderrp DXD   0F
                                             126 rd_unittest_assert_on_failure ALIAS X'99846DA49589A3A385A2A36D81A2A2859*
                                                                9A36D96956D86818993A49985'
                                             127 rd_unittest_assert_on_failure DXD   0F
                                             128 free     ALIAS C'free'
                                             129          EXTRN free
                                             130 rd_kafka_q_fix_offsets ALIAS X'99846D92818692816D986D8689A76D968686A285*
                                                                A3A2'
                                             131          EXTRN rd_kafka_q_fix_offsets
                                             132 *
                                             133 *
                                             134 *
                                             135 * ....... start of rd_atomic32_add
00000000                                     136 @LNAME733 DS   0H
00000000 0000000F                            137          DC    X'0000000F'
00000004 99846D81A3969489                    138          DC    C'rd_atomic32_add'
                                                                                                                           Page    9 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000013 00                                  139          DC    X'00'
                                             140 rd_atomic32_add DCCPRLG CINDEX=733,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME733
                                             141          macro
                                             142          dccextrn &m
                                             143          gblc    &$dccext(1000)
                                             144          gbla    &$dccexti
                                             145          lcla    &i
                                             146 &$dccext(&$dccexti+1) setc    '&m'
                                             147 &i       seta    1
                                             148 .loop    aif    (&i gt &$dccexti).around
                                             149          aif    ('&$dccext(&i)' eq '&m').getout
                                             150 &i       seta    &i+1
                                             151          ago     .loop
                                             152 .around  anop
                                             153 &$dccexti seta &$dccexti+1
                                             154          extrn  &m
                                             155 .getout  anop
                                             156          mend
00000018                                     157+$eye0002    ds    0d                                                    02-DCCCA
00000018 C4C3C3                              158+         dc cl3'DCC'                                                    02-DCCCA
0000001B 01                                  159+         dc xl1'01' format one                                          02-DCCCA
0000001C 00000000                            160+         dc a(0)                                                        02-DCCCA
00000020 000000000000008A                    161+         dc ad(@PER_733)                                                02-DCCCA
00000028 00000000000000B8                    162+         dc ad(184)                                                     02-DCCCA
00000030 0000000000000000                    163+         dc ad(0)                                                       02-DCCCA
00000038 0000000000001000                    164+         dc ad(4096)                                                    02-DCCCA
00000040 20                                  165+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000041 03                                  166+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000042 03                                  167+         dc al1(3)                                                      02-DCCCA
00000043 08                                  168+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000044 00                                  169+         dc bl.8'00000000'                                              02-DCCCA
00000045 000000                              170+         dc al3(0)                                                      02-DCCCA
00000048 0000000000000000                    171+         dc ad(@LNAME733)                                               02-DCCCA
00000050                                     172+         ds 0d                                                          02-DCCCA
00000050 0000000000000018                    173+         dc ad($eye0002)                                                02-DCCCA
00000058 0000000000000000                    174+         dc ad(0)                                                       02-DCCCA
00000060                                     175+         ds    0d                                                       01-DCCPR
00000060                                     176+rd_atomic32_add ds 0d                                                   01-DCCPR
00000060                                     177+@REGION_733_1 ds 0h                                                     01-DCCPR
00000060 EBEC D008 0024          00000008    178+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000066 E3E0 D088 0004          00000088    179+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000006C E3C0 D090 0004          00000090    180+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000072 B904 002E                           181+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000076 E3B0 C018 0004          00000018    182+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000007C A7EB 00B8               000000B8    183+         aghi  14,184              increase by frame size               01-DCCPR
00000080 E3E0 C020 0021          00000020    184+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000086 4720 B020               00000020    185+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000008A                                     186+@PER_733 ds    0h                                                       01-DCCPR
0000008A EBDE 2080 0024          00000080    187+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000090 E3C0 2090 0024          00000090    188+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000096 B904 00D2                           189+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000009A B904 00CF                           190+         lgr   12,15               set base reg                         01-DCCPR
                        00000060             191+         using @REGION_733_1,12                                         01-DCCPR
0000009E B904 0031                           192          LGR   3,1         ; ptr to parm area
                                             193 * ******* End of Prologue
                                             194 * *
000000A2 E320 3000 0004          00000000    195          LG    2,0(0,3)    ; ra
                                             196 * ***
                                             197 * ***      int32_t r;
                                             198 * ***      pthread_mutex_lock(&ra->lock);
000000A8 41F0 2008               00000008    199          LA    15,8(0,2)
000000AC E3F0 D0B0 0024          000000B0    200          STG   15,176(0,13)
000000B2 4110 D0B0               000000B0    201          LA    1,176(0,13)
000000B6 E3F0 C0D8 0004          00000138    202          LG    15,@lit_733_0 ; pthread_mutex_lock
000000BC                                     203 @@gen_label0 DS    0H
000000BC 05EF                                204          BALR  14,15
000000BE                                     205 @@gen_label1 DS    0H
                                             206 * ***      ra->val += v;
000000BE 58F0 2000               00000000    207          L     15,0(0,2)
000000C2 5AF0 300C               0000000C    208          A     15,12(0,3)
000000C6 50F0 2000               00000000    209          ST    15,0(0,2)
                                             210 * ***      r = ra->val;
000000CA 183F                                211          LR    3,15        ; ra
                                             212 * ***      pthread_mutex_unlock(&ra->lock);
000000CC 41F0 2008               00000008    213          LA    15,8(0,2)
000000D0 E3F0 D0B0 0024          000000B0    214          STG   15,176(0,13)
000000D6 4110 D0B0               000000B0    215          LA    1,176(0,13)
000000DA E3F0 C0E0 0004          00000140    216          LG    15,@lit_733_1 ; pthread_mutex_unlock
000000E0                                     217 @@gen_label2 DS    0H
000000E0 05EF                                218          BALR  14,15
000000E2                                     219 @@gen_label3 DS    0H
                                             220 * ***      return r;
000000E2 B914 00F3                           221          LGFR  15,3
                                             222 * ***   # 103 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             223 * ***      return __atomic_add_fetch(&ra->val, v, 6);
                                             224 * ***
                                             225 * ***   }
                                             226 * * **** Start of Epilogue
                                             227          DCCEPIL
000000E6                                     228+         ds 0h                                                          01-DCCEP
                                             229+* Epilog
000000E6 D707 D088 D088 00000088 00000088    230+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000000EC E3D0 D080 0004          00000080    231+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000000F2 E3C0 D090 0004          00000090    232+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000000F8 E3B0 C018 0004          00000018    233+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000000FE E3C0 B010 0021          00000010    234+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000104 E3E0 D008 0004          00000008    235+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000010A EB1C D020 0004          00000020    236+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000110 078E                                237+         bcr 8,14                if same dsab, just return              01-DCCEP
00000112 E3F0 D010 0024          00000010    238+         stg 15,16(0,13)         save return code                       01-DCCEP
00000118 E300 D018 0024          00000018    239+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000011E E3F0 D090 0004          00000090    240+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000124 E3F0 F018 0004          00000018    241+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page   11 
  Active Usings: @REGION_733_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000012A 47F0 F040               00000040    242+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             243+* End of Epilog
                                             244 * * **** End of Epilogue
00000130                                     245          DS    0D
00000130 000000B8                            246 @FRAMESIZE_733 DC F'184'
00000134 00000000
00000138 0000000000000000                    247 @lit_733_0 DC  AD(pthread_mutex_lock)
00000140 0000000000000000                    248 @lit_733_1 DC  AD(pthread_mutex_unlock)
                                             249          DROP  12
                                             250 *
                                             251 *   DSECT for automatic variables in "rd_atomic32_add"
                                             252 *      (FUNCTION #733)
                                             253 *
00000000                00000000 000000AC    254 @AUTO#rd_atomic32_add DSECT
00000000                                     255          DS    XL168
000000A8                                     256 rd_atomic32_add#r#0 DS 1F  ; r
                                             257 *
00000148                00000000 00012806    258 @CODE    CSECT
                                             259 *
                                             260 *
                                             261 *
                                             262 * ....... start of rd_atomic32_sub
00000148                                     263 @LNAME734 DS   0H
00000148 0000000F                            264          DC    X'0000000F'
0000014C 99846D81A3969489                    265          DC    C'rd_atomic32_sub'
0000015B 00                                  266          DC    X'00'
                                             267 rd_atomic32_sub DCCPRLG CINDEX=734,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME734
                                             268          macro
                                             269          dccextrn &m
                                             270          gblc    &$dccext(1000)
                                             271          gbla    &$dccexti
                                             272          lcla    &i
                                             273 &$dccext(&$dccexti+1) setc    '&m'
                                             274 &i       seta    1
                                             275 .loop    aif    (&i gt &$dccexti).around
                                             276          aif    ('&$dccext(&i)' eq '&m').getout
                                             277 &i       seta    &i+1
                                             278          ago     .loop
                                             279 .around  anop
                                             280 &$dccexti seta &$dccexti+1
                                             281          extrn  &m
                                             282 .getout  anop
                                             283          mend
00000160                                     284+$eye0005    ds    0d                                                    02-DCCCA
00000160 C4C3C3                              285+         dc cl3'DCC'                                                    02-DCCCA
00000163 01                                  286+         dc xl1'01' format one                                          02-DCCCA
00000164 00000000                            287+         dc a(0)                                                        02-DCCCA
00000168 00000000000001D2                    288+         dc ad(@PER_734)                                                02-DCCCA
00000170 00000000000000B8                    289+         dc ad(184)                                                     02-DCCCA
00000178 0000000000000000                    290+         dc ad(0)                                                       02-DCCCA
00000180 0000000000001000                    291+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page   12 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000188 20                                  292+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000189 03                                  293+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000018A 03                                  294+         dc al1(3)                                                      02-DCCCA
0000018B 08                                  295+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000018C 00                                  296+         dc bl.8'00000000'                                              02-DCCCA
0000018D 000000                              297+         dc al3(0)                                                      02-DCCCA
00000190 0000000000000148                    298+         dc ad(@LNAME734)                                               02-DCCCA
00000198                                     299+         ds 0d                                                          02-DCCCA
00000198 0000000000000160                    300+         dc ad($eye0005)                                                02-DCCCA
000001A0 0000000000000000                    301+         dc ad(0)                                                       02-DCCCA
000001A8                                     302+         ds    0d                                                       01-DCCPR
000001A8                                     303+rd_atomic32_sub ds 0d                                                   01-DCCPR
000001A8                                     304+@REGION_734_1 ds 0h                                                     01-DCCPR
000001A8 EBEC D008 0024          00000008    305+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001AE E3E0 D088 0004          00000088    306+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001B4 E3C0 D090 0004          00000090    307+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001BA B904 002E                           308+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001BE E3B0 C018 0004          00000018    309+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001C4 A7EB 00B8               000000B8    310+         aghi  14,184              increase by frame size               01-DCCPR
000001C8 E3E0 C020 0021          00000020    311+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001CE 4720 B020               00000020    312+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001D2                                     313+@PER_734 ds    0h                                                       01-DCCPR
000001D2 EBDE 2080 0024          00000080    314+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001D8 E3C0 2090 0024          00000090    315+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001DE B904 00D2                           316+         lgr   13,2                set real frame pointer               01-DCCPR
000001E2 B904 00CF                           317+         lgr   12,15               set base reg                         01-DCCPR
                        000001A8             318+         using @REGION_734_1,12                                         01-DCCPR
000001E6 B904 0031                           319          LGR   3,1         ; ptr to parm area
                                             320 * ******* End of Prologue
                                             321 * *
000001EA E320 3000 0004          00000000    322          LG    2,0(0,3)    ; ra
                                             323 * ***
                                             324 * ***      int32_t r;
                                             325 * ***      pthread_mutex_lock(&ra->lock);
000001F0 41F0 2008               00000008    326          LA    15,8(0,2)
000001F4 E3F0 D0B0 0024          000000B0    327          STG   15,176(0,13)
000001FA 4110 D0B0               000000B0    328          LA    1,176(0,13)
000001FE E3F0 C0D8 0004          00000280    329          LG    15,@lit_734_3 ; pthread_mutex_lock
00000204                                     330 @@gen_label4 DS    0H
00000204 05EF                                331          BALR  14,15
00000206                                     332 @@gen_label5 DS    0H
                                             333 * ***      ra->val -= v;
00000206 58F0 2000               00000000    334          L     15,0(0,2)
0000020A 5BF0 300C               0000000C    335          S     15,12(0,3)
0000020E 50F0 2000               00000000    336          ST    15,0(0,2)
                                             337 * ***      r = ra->val;
00000212 183F                                338          LR    3,15        ; ra
                                             339 * ***      pthread_mutex_unlock(&ra->lock);
00000214 41F0 2008               00000008    340          LA    15,8(0,2)
00000218 E3F0 D0B0 0024          000000B0    341          STG   15,176(0,13)
0000021E 4110 D0B0               000000B0    342          LA    1,176(0,13)
00000222 E3F0 C0E0 0004          00000288    343          LG    15,@lit_734_4 ; pthread_mutex_unlock
                                                                                                                           Page   13 
  Active Usings: @REGION_734_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000228                                     344 @@gen_label6 DS    0H
00000228 05EF                                345          BALR  14,15
0000022A                                     346 @@gen_label7 DS    0H
                                             347 * ***      return r;
0000022A B914 00F3                           348          LGFR  15,3
                                             349 * ***   # 128 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             350 * ***      return __atomic_sub_fetch(&ra->val, v, 6);
                                             351 * ***
                                             352 * ***   }
                                             353 * * **** Start of Epilogue
                                             354          DCCEPIL
0000022E                                     355+         ds 0h                                                          01-DCCEP
                                             356+* Epilog
0000022E D707 D088 D088 00000088 00000088    357+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000234 E3D0 D080 0004          00000080    358+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000023A E3C0 D090 0004          00000090    359+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000240 E3B0 C018 0004          00000018    360+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000246 E3C0 B010 0021          00000010    361+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000024C E3E0 D008 0004          00000008    362+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000252 EB1C D020 0004          00000020    363+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000258 078E                                364+         bcr 8,14                if same dsab, just return              01-DCCEP
0000025A E3F0 D010 0024          00000010    365+         stg 15,16(0,13)         save return code                       01-DCCEP
00000260 E300 D018 0024          00000018    366+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000266 E3F0 D090 0004          00000090    367+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000026C E3F0 F018 0004          00000018    368+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000272 47F0 F040               00000040    369+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             370+* End of Epilog
                                             371 * * **** End of Epilogue
00000278                                     372          DS    0D
00000278 000000B8                            373 @FRAMESIZE_734 DC F'184'
0000027C 00000000
00000280 0000000000000000                    374 @lit_734_3 DC  AD(pthread_mutex_lock)
00000288 0000000000000000                    375 @lit_734_4 DC  AD(pthread_mutex_unlock)
                                             376          DROP  12
                                             377 *
                                             378 *   DSECT for automatic variables in "rd_atomic32_sub"
                                             379 *      (FUNCTION #734)
                                             380 *
00000000                00000000 000000AC    381 @AUTO#rd_atomic32_sub DSECT
00000000                                     382          DS    XL168
000000A8                                     383 rd_atomic32_sub#r#0 DS 1F  ; r
                                             384 *
00000290                00000000 00012806    385 @CODE    CSECT
                                             386 *
                                             387 *
                                             388 *
                                             389 * ....... start of rd_atomic64_add
00000290                                     390 @LNAME738 DS   0H
00000290 0000000F                            391          DC    X'0000000F'
00000294 99846D81A3969489                    392          DC    C'rd_atomic64_add'
000002A3 00                                  393          DC    X'00'
                                             394 rd_atomic64_add DCCPRLG CINDEX=738,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZAR*
                                                                                                                           Page   14 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                CH,LNAMEADDR=@LNAME738
                                             395          macro
                                             396          dccextrn &m
                                             397          gblc    &$dccext(1000)
                                             398          gbla    &$dccexti
                                             399          lcla    &i
                                             400 &$dccext(&$dccexti+1) setc    '&m'
                                             401 &i       seta    1
                                             402 .loop    aif    (&i gt &$dccexti).around
                                             403          aif    ('&$dccext(&i)' eq '&m').getout
                                             404 &i       seta    &i+1
                                             405          ago     .loop
                                             406 .around  anop
                                             407 &$dccexti seta &$dccexti+1
                                             408          extrn  &m
                                             409 .getout  anop
                                             410          mend
000002A8                                     411+$eye0008    ds    0d                                                    02-DCCCA
000002A8 C4C3C3                              412+         dc cl3'DCC'                                                    02-DCCCA
000002AB 01                                  413+         dc xl1'01' format one                                          02-DCCCA
000002AC 00000000                            414+         dc a(0)                                                        02-DCCCA
000002B0 000000000000031A                    415+         dc ad(@PER_738)                                                02-DCCCA
000002B8 00000000000000B8                    416+         dc ad(184)                                                     02-DCCCA
000002C0 0000000000000000                    417+         dc ad(0)                                                       02-DCCCA
000002C8 0000000000001000                    418+         dc ad(4096)                                                    02-DCCCA
000002D0 20                                  419+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000002D1 03                                  420+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000002D2 03                                  421+         dc al1(3)                                                      02-DCCCA
000002D3 08                                  422+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000002D4 00                                  423+         dc bl.8'00000000'                                              02-DCCCA
000002D5 000000                              424+         dc al3(0)                                                      02-DCCCA
000002D8 0000000000000290                    425+         dc ad(@LNAME738)                                               02-DCCCA
000002E0                                     426+         ds 0d                                                          02-DCCCA
000002E0 00000000000002A8                    427+         dc ad($eye0008)                                                02-DCCCA
000002E8 0000000000000000                    428+         dc ad(0)                                                       02-DCCCA
000002F0                                     429+         ds    0d                                                       01-DCCPR
000002F0                                     430+rd_atomic64_add ds 0d                                                   01-DCCPR
000002F0                                     431+@REGION_738_1 ds 0h                                                     01-DCCPR
000002F0 EBEC D008 0024          00000008    432+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000002F6 E3E0 D088 0004          00000088    433+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000002FC E3C0 D090 0004          00000090    434+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000302 B904 002E                           435+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000306 E3B0 C018 0004          00000018    436+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000030C A7EB 00B8               000000B8    437+         aghi  14,184              increase by frame size               01-DCCPR
00000310 E3E0 C020 0021          00000020    438+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000316 4720 B020               00000020    439+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000031A                                     440+@PER_738 ds    0h                                                       01-DCCPR
0000031A EBDE 2080 0024          00000080    441+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000320 E3C0 2090 0024          00000090    442+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000326 B904 00D2                           443+         lgr   13,2                set real frame pointer               01-DCCPR
0000032A B904 00CF                           444+         lgr   12,15               set base reg                         01-DCCPR
                        000002F0             445+         using @REGION_738_1,12                                         01-DCCPR
                                                                                                                           Page   15 
  Active Usings: @REGION_738_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000032E B904 0031                           446          LGR   3,1         ; ptr to parm area
                                             447 * ******* End of Prologue
                                             448 * *
00000332 E320 3000 0004          00000000    449          LG    2,0(0,3)    ; ra
                                             450 * ***
                                             451 * ***      int64_t r;
                                             452 * ***      pthread_mutex_lock(&ra->lock);
00000338 41F0 2008               00000008    453          LA    15,8(0,2)
0000033C E3F0 D0B0 0024          000000B0    454          STG   15,176(0,13)
00000342 4110 D0B0               000000B0    455          LA    1,176(0,13)
00000346 E3F0 C0E0 0004          000003D0    456          LG    15,@lit_738_6 ; pthread_mutex_lock
0000034C                                     457 @@gen_label8 DS    0H
0000034C 05EF                                458          BALR  14,15
0000034E                                     459 @@gen_label9 DS    0H
                                             460 * ***      ra->val += v;
0000034E E3F0 2000 0004          00000000    461          LG    15,0(0,2)
00000354 E3F0 3008 0008          00000008    462          AG    15,8(0,3)
0000035A E3F0 2000 0024          00000000    463          STG   15,0(0,2)
                                             464 * ***      r = ra->val;
00000360 B904 003F                           465          LGR   3,15        ; ra
                                             466 * ***      pthread_mutex_unlock(&ra->lock);
00000364 41F0 2008               00000008    467          LA    15,8(0,2)
00000368 E3F0 D0B0 0024          000000B0    468          STG   15,176(0,13)
0000036E 4110 D0B0               000000B0    469          LA    1,176(0,13)
00000372 E3F0 C0E8 0004          000003D8    470          LG    15,@lit_738_7 ; pthread_mutex_unlock
00000378                                     471 @@gen_label10 DS    0H
00000378 05EF                                472          BALR  14,15
0000037A                                     473 @@gen_label11 DS    0H
                                             474 * ***      return r;
0000037A B904 00F3                           475          LGR   15,3
                                             476 * ***   # 222 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             477 * ***      return __atomic_add_fetch(&ra->val, v, 6);
                                             478 * ***
                                             479 * ***   }
                                             480 * * **** Start of Epilogue
                                             481          DCCEPIL
0000037E                                     482+         ds 0h                                                          01-DCCEP
                                             483+* Epilog
0000037E D707 D088 D088 00000088 00000088    484+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000384 E3D0 D080 0004          00000080    485+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000038A E3C0 D090 0004          00000090    486+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000390 E3B0 C018 0004          00000018    487+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000396 E3C0 B010 0021          00000010    488+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000039C E3E0 D008 0004          00000008    489+         lg  14,8(0,13)          load up return address                 01-DCCEP
000003A2 EB1C D020 0004          00000020    490+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000003A8 078E                                491+         bcr 8,14                if same dsab, just return              01-DCCEP
000003AA E3F0 D010 0024          00000010    492+         stg 15,16(0,13)         save return code                       01-DCCEP
000003B0 E300 D018 0024          00000018    493+         stg 0,24(0,13)          save more return code                  01-DCCEP
000003B6 E3F0 D090 0004          00000090    494+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000003BC E3F0 F018 0004          00000018    495+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000003C2 47F0 F040               00000040    496+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             497+* End of Epilog
                                                                                                                           Page   16 
  Active Usings: @REGION_738_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             498 * * **** End of Epilogue
000003C8                                     499          DS    0D
000003C8 000000B8                            500 @FRAMESIZE_738 DC F'184'
000003CC 00000000
000003D0 0000000000000000                    501 @lit_738_6 DC  AD(pthread_mutex_lock)
000003D8 0000000000000000                    502 @lit_738_7 DC  AD(pthread_mutex_unlock)
                                             503          DROP  12
                                             504 *
                                             505 *   DSECT for automatic variables in "rd_atomic64_add"
                                             506 *      (FUNCTION #738)
                                             507 *
00000000                00000000 000000B0    508 @AUTO#rd_atomic64_add DSECT
00000000                                     509          DS    XL168
000000A8                                     510 rd_atomic64_add#r#0 DS 8XL1 ; r
                                             511 *
000003E0                00000000 00012806    512 @CODE    CSECT
                                             513 *
                                             514 *
                                             515 *
                                             516 * ....... start of rd_malloc
000003E0                                     517 @LNAME752 DS   0H
000003E0 00000009                            518          DC    X'00000009'
000003E4 99846D9481939396                    519          DC    C'rd_malloc'
000003ED 00                                  520          DC    X'00'
                                             521 rd_malloc DCCPRLG CINDEX=752,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME752
                                             522          macro
                                             523          dccextrn &m
                                             524          gblc    &$dccext(1000)
                                             525          gbla    &$dccexti
                                             526          lcla    &i
                                             527 &$dccext(&$dccexti+1) setc    '&m'
                                             528 &i       seta    1
                                             529 .loop    aif    (&i gt &$dccexti).around
                                             530          aif    ('&$dccext(&i)' eq '&m').getout
                                             531 &i       seta    &i+1
                                             532          ago     .loop
                                             533 .around  anop
                                             534 &$dccexti seta &$dccexti+1
                                             535          extrn  &m
                                             536 .getout  anop
                                             537          mend
000003F0                                     538+$eye0011    ds    0d                                                    02-DCCCA
000003F0 C4C3C3                              539+         dc cl3'DCC'                                                    02-DCCCA
000003F3 01                                  540+         dc xl1'01' format one                                          02-DCCCA
000003F4 00000000                            541+         dc a(0)                                                        02-DCCCA
000003F8 0000000000000462                    542+         dc ad(@PER_752)                                                02-DCCCA
00000400 00000000000000D0                    543+         dc ad(208)                                                     02-DCCCA
00000408 0000000000000000                    544+         dc ad(0)                                                       02-DCCCA
00000410 0000000000001000                    545+         dc ad(4096)                                                    02-DCCCA
00000418 20                                  546+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000419 03                                  547+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   17 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000041A 03                                  548+         dc al1(3)                                                      02-DCCCA
0000041B 08                                  549+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000041C 00                                  550+         dc bl.8'00000000'                                              02-DCCCA
0000041D 000000                              551+         dc al3(0)                                                      02-DCCCA
00000420 00000000000003E0                    552+         dc ad(@LNAME752)                                               02-DCCCA
00000428                                     553+         ds 0d                                                          02-DCCCA
00000428 00000000000003F0                    554+         dc ad($eye0011)                                                02-DCCCA
00000430 0000000000000000                    555+         dc ad(0)                                                       02-DCCCA
00000438                                     556+         ds    0d                                                       01-DCCPR
00000438                                     557+rd_malloc ds   0d                                                       01-DCCPR
00000438                                     558+@REGION_752_1 ds 0h                                                     01-DCCPR
00000438 EBEC D008 0024          00000008    559+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000043E E3E0 D088 0004          00000088    560+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000444 E3C0 D090 0004          00000090    561+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000044A B904 002E                           562+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000044E E3B0 C018 0004          00000018    563+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000454 A7EB 00D0               000000D0    564+         aghi  14,208              increase by frame size               01-DCCPR
00000458 E3E0 C020 0021          00000020    565+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000045E 4720 B020               00000020    566+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000462                                     567+@PER_752 ds    0h                                                       01-DCCPR
00000462 EBDE 2080 0024          00000080    568+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000468 E3C0 2090 0024          00000090    569+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000046E B904 00D2                           570+         lgr   13,2                set real frame pointer               01-DCCPR
00000472 B904 00CF                           571+         lgr   12,15               set base reg                         01-DCCPR
                        00000438             572+         using @REGION_752_1,12                                         01-DCCPR
                                             573 * ******* End of Prologue
                                             574 * *
                                             575 * ***      void *p = malloc(sz);
00000476 E3F0 1000 0004          00000000    576          LG    15,0(0,1)   ; sz
0000047C E3F0 D0B0 0024          000000B0    577          STG   15,176(0,13)
00000482 4110 D0B0               000000B0    578          LA    1,176(0,13)
00000486 E3F0 C0F0 0004          00000528    579          LG    15,@lit_752_9 ; malloc
0000048C                                     580 @@gen_label12 DS    0H
0000048C 05EF                                581          BALR  14,15
0000048E                                     582 @@gen_label13 DS    0H
0000048E B904 002F                           583          LGR   2,15
                                             584 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             585 * ka\\src\\rd.h", 128, "p"));
00000492 B902 00F2                           586          LTGR  15,2
00000496 4770 C09A               000004D2    587          BNZ   @L34
0000049A                                     588 @L33     DS    0H
0000049A E3F0 C108 0004          00000540    589          LG    15,@lit_752_10
000004A0 41F0 F00A               0000000A    590          LA    15,10(0,15)
000004A4 E3F0 D0B0 0024          000000B0    591          STG   15,176(0,13)
000004AA E3F0 C100 0004          00000538    592          LG    15,@lit_752_11
000004B0 E3F0 D0B8 0024          000000B8    593          STG   15,184(0,13)
000004B6 E548 D0C0 0080          000000C0    594          MVGHI 192(13),128
000004BC 41F0 F020               00000020    595          LA    15,32(0,15)
000004C0 E3F0 D0C8 0024          000000C8    596          STG   15,200(0,13)
000004C6 4110 D0B0               000000B0    597          LA    1,176(0,13)
000004CA E3F0 C0F8 0004          00000530    598          LG    15,@lit_752_12 ; __assert
000004D0                                     599 @@gen_label15 DS    0H
                                                                                                                           Page   18 
  Active Usings: @REGION_752_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000004D0 05EF                                600          BALR  14,15
000004D2                                     601 @@gen_label16 DS    0H
000004D2                                     602 @L34     DS    0H
                                             603 * ***      return p;
000004D2 B904 00F2                           604          LGR   15,2
                                             605 * ***   }
                                             606 * * **** Start of Epilogue
                                             607          DCCEPIL
000004D6                                     608+         ds 0h                                                          01-DCCEP
                                             609+* Epilog
000004D6 D707 D088 D088 00000088 00000088    610+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000004DC E3D0 D080 0004          00000080    611+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000004E2 E3C0 D090 0004          00000090    612+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000004E8 E3B0 C018 0004          00000018    613+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000004EE E3C0 B010 0021          00000010    614+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000004F4 E3E0 D008 0004          00000008    615+         lg  14,8(0,13)          load up return address                 01-DCCEP
000004FA EB1C D020 0004          00000020    616+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000500 078E                                617+         bcr 8,14                if same dsab, just return              01-DCCEP
00000502 E3F0 D010 0024          00000010    618+         stg 15,16(0,13)         save return code                       01-DCCEP
00000508 E300 D018 0024          00000018    619+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000050E E3F0 D090 0004          00000090    620+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000514 E3F0 F018 0004          00000018    621+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000051A 47F0 F040               00000040    622+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             623+* End of Epilog
                                             624 * * **** End of Epilogue
00000520                                     625          DS    0D
00000520 000000D0                            626 @FRAMESIZE_752 DC F'208'
00000524 00000000
00000528 0000000000000000                    627 @lit_752_9 DC  AD(malloc)
00000530 0000000000000000                    628 @lit_752_12 DC AD(__assert)
00000538 0000000000012AB8                    629 @lit_752_11 DC AD(@strings@)
00000540 0000000000012808                    630 @lit_752_10 DC AD(@DATA)
                                             631          DROP  12
                                             632 *
                                             633 *   DSECT for automatic variables in "rd_malloc"
                                             634 *      (FUNCTION #752)
                                             635 *
00000000                00000000 000000A8    636 @AUTO#rd_malloc DSECT
00000000                                     637          DS    XL168
                                             638 *
00000548                00000000 00012806    639 @CODE    CSECT
                                             640 *
                                             641 *
                                             642 *
                                             643 * ....... start of rd_free
00000548                                     644 @LNAME754 DS   0H
00000548 00000007                            645          DC    X'00000007'
0000054C 99846D86998585                      646          DC    C'rd_free'
00000553 00                                  647          DC    X'00'
                                             648 rd_free  DCCPRLG CINDEX=754,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME754
                                             649          macro
                                                                                                                           Page   19 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             650          dccextrn &m
                                             651          gblc    &$dccext(1000)
                                             652          gbla    &$dccexti
                                             653          lcla    &i
                                             654 &$dccext(&$dccexti+1) setc    '&m'
                                             655 &i       seta    1
                                             656 .loop    aif    (&i gt &$dccexti).around
                                             657          aif    ('&$dccext(&i)' eq '&m').getout
                                             658 &i       seta    &i+1
                                             659          ago     .loop
                                             660 .around  anop
                                             661 &$dccexti seta &$dccexti+1
                                             662          extrn  &m
                                             663 .getout  anop
                                             664          mend
00000558                                     665+$eye0014    ds    0d                                                    02-DCCCA
00000558 C4C3C3                              666+         dc cl3'DCC'                                                    02-DCCCA
0000055B 01                                  667+         dc xl1'01' format one                                          02-DCCCA
0000055C 00000000                            668+         dc a(0)                                                        02-DCCCA
00000560 00000000000005CA                    669+         dc ad(@PER_754)                                                02-DCCCA
00000568 00000000000000B0                    670+         dc ad(176)                                                     02-DCCCA
00000570 0000000000000000                    671+         dc ad(0)                                                       02-DCCCA
00000578 0000000000001000                    672+         dc ad(4096)                                                    02-DCCCA
00000580 20                                  673+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000581 03                                  674+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000582 03                                  675+         dc al1(3)                                                      02-DCCCA
00000583 08                                  676+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000584 00                                  677+         dc bl.8'00000000'                                              02-DCCCA
00000585 000000                              678+         dc al3(0)                                                      02-DCCCA
00000588 0000000000000548                    679+         dc ad(@LNAME754)                                               02-DCCCA
00000590                                     680+         ds 0d                                                          02-DCCCA
00000590 0000000000000558                    681+         dc ad($eye0014)                                                02-DCCCA
00000598 0000000000000000                    682+         dc ad(0)                                                       02-DCCCA
000005A0                                     683+         ds    0d                                                       01-DCCPR
000005A0                                     684+rd_free  ds    0d                                                       01-DCCPR
000005A0                                     685+@REGION_754_1 ds 0h                                                     01-DCCPR
000005A0 EBEC D008 0024          00000008    686+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000005A6 E3E0 D088 0004          00000088    687+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000005AC E3C0 D090 0004          00000090    688+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000005B2 B904 002E                           689+         lgr   2,14                copy addr of our savearea            01-DCCPR
000005B6 E3B0 C018 0004          00000018    690+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000005BC A7EB 00B0               000000B0    691+         aghi  14,176              increase by frame size               01-DCCPR
000005C0 E3E0 C020 0021          00000020    692+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000005C6 4720 B020               00000020    693+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000005CA                                     694+@PER_754 ds    0h                                                       01-DCCPR
000005CA EBDE 2080 0024          00000080    695+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000005D0 E3C0 2090 0024          00000090    696+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000005D6 B904 00D2                           697+         lgr   13,2                set real frame pointer               01-DCCPR
000005DA B904 00CF                           698+         lgr   12,15               set base reg                         01-DCCPR
                        000005A0             699+         using @REGION_754_1,12                                         01-DCCPR
                                             700 * ******* End of Prologue
                                             701 * *
                                                                                                                           Page   20 
  Active Usings: @REGION_754_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             702 * ***      free(ptr);
000005DE E3F0 1000 0004          00000000    703          LG    15,0(0,1)   ; ptr
000005E4 E3F0 D0A8 0024          000000A8    704          STG   15,168(0,13)
000005EA 4110 D0A8               000000A8    705          LA    1,168(0,13)
000005EE E3F0 C0A8 0004          00000648    706          LG    15,@lit_754_14 ; free
000005F4                                     707 @@gen_label17 DS    0H
000005F4 05EF                                708          BALR  14,15
000005F6                                     709 @@gen_label18 DS    0H
                                             710 * ***   }
000005F6                                     711 @ret_lab_754 DS 0H
                                             712 * * **** Start of Epilogue
                                             713          DCCEPIL
000005F6                                     714+         ds 0h                                                          01-DCCEP
                                             715+* Epilog
000005F6 D707 D088 D088 00000088 00000088    716+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000005FC E3D0 D080 0004          00000080    717+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000602 E3C0 D090 0004          00000090    718+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000608 E3B0 C018 0004          00000018    719+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000060E E3C0 B010 0021          00000010    720+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000614 E3E0 D008 0004          00000008    721+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000061A EB1C D020 0004          00000020    722+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000620 078E                                723+         bcr 8,14                if same dsab, just return              01-DCCEP
00000622 E3F0 D010 0024          00000010    724+         stg 15,16(0,13)         save return code                       01-DCCEP
00000628 E300 D018 0024          00000018    725+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000062E E3F0 D090 0004          00000090    726+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000634 E3F0 F018 0004          00000018    727+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000063A 47F0 F040               00000040    728+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             729+* End of Epilog
                                             730 * * **** End of Epilogue
00000640                                     731          DS    0D
00000640 000000B0                            732 @FRAMESIZE_754 DC F'176'
00000644 00000000
00000648 0000000000000000                    733 @lit_754_14 DC AD(free)
                                             734          DROP  12
                                             735 *
                                             736 *   DSECT for automatic variables in "rd_free"
                                             737 *      (FUNCTION #754)
                                             738 *
00000000                00000000 000000A8    739 @AUTO#rd_free DSECT
00000000                                     740          DS    XL168
                                             741 *
00000650                00000000 00012806    742 @CODE    CSECT
                                             743 *
                                             744 *
                                             745 *
                                             746 * ....... start of rd_refcnt_sub0
00000650                                     747 @LNAME758 DS   0H
00000650 0000000E                            748          DC    X'0000000E'
00000654 99846D9985868395                    749          DC    C'rd_refcnt_sub0'
00000662 00                                  750          DC    X'00'
                                             751 rd_refcnt_sub0 DCCPRLG CINDEX=758,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME758
                                                                                                                           Page   21 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             752          macro
                                             753          dccextrn &m
                                             754          gblc    &$dccext(1000)
                                             755          gbla    &$dccexti
                                             756          lcla    &i
                                             757 &$dccext(&$dccexti+1) setc    '&m'
                                             758 &i       seta    1
                                             759 .loop    aif    (&i gt &$dccexti).around
                                             760          aif    ('&$dccext(&i)' eq '&m').getout
                                             761 &i       seta    &i+1
                                             762          ago     .loop
                                             763 .around  anop
                                             764 &$dccexti seta &$dccexti+1
                                             765          extrn  &m
                                             766 .getout  anop
                                             767          mend
00000668                                     768+$eye0017    ds    0d                                                    02-DCCCA
00000668 C4C3C3                              769+         dc cl3'DCC'                                                    02-DCCCA
0000066B 01                                  770+         dc xl1'01' format one                                          02-DCCCA
0000066C 00000000                            771+         dc a(0)                                                        02-DCCCA
00000670 00000000000006DA                    772+         dc ad(@PER_758)                                                02-DCCCA
00000678 00000000000000D0                    773+         dc ad(208)                                                     02-DCCCA
00000680 0000000000000000                    774+         dc ad(0)                                                       02-DCCCA
00000688 0000000000001000                    775+         dc ad(4096)                                                    02-DCCCA
00000690 20                                  776+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000691 03                                  777+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000692 03                                  778+         dc al1(3)                                                      02-DCCCA
00000693 08                                  779+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000694 00                                  780+         dc bl.8'00000000'                                              02-DCCCA
00000695 000000                              781+         dc al3(0)                                                      02-DCCCA
00000698 0000000000000650                    782+         dc ad(@LNAME758)                                               02-DCCCA
000006A0                                     783+         ds 0d                                                          02-DCCCA
000006A0 0000000000000668                    784+         dc ad($eye0017)                                                02-DCCCA
000006A8 0000000000000000                    785+         dc ad(0)                                                       02-DCCCA
000006B0                                     786+         ds    0d                                                       01-DCCPR
000006B0                                     787+rd_refcnt_sub0 ds 0d                                                    01-DCCPR
000006B0                                     788+@REGION_758_1 ds 0h                                                     01-DCCPR
000006B0 EBEC D008 0024          00000008    789+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000006B6 E3E0 D088 0004          00000088    790+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000006BC E3C0 D090 0004          00000090    791+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000006C2 B904 002E                           792+         lgr   2,14                copy addr of our savearea            01-DCCPR
000006C6 E3B0 C018 0004          00000018    793+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000006CC A7EB 00D0               000000D0    794+         aghi  14,208              increase by frame size               01-DCCPR
000006D0 E3E0 C020 0021          00000020    795+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000006D6 4720 B020               00000020    796+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000006DA                                     797+@PER_758 ds    0h                                                       01-DCCPR
000006DA EBDE 2080 0024          00000080    798+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000006E0 E3C0 2090 0024          00000090    799+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000006E6 B904 00D2                           800+         lgr   13,2                set real frame pointer               01-DCCPR
000006EA B904 00CF                           801+         lgr   12,15               set base reg                         01-DCCPR
                        000006B0             802+         using @REGION_758_1,12                                         01-DCCPR
                                             803 * ******* End of Prologue
                                                                                                                           Page   22 
  Active Usings: @REGION_758_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             804 * *
                                             805 * ***           int r;
                                             806 * ***   # 332 "C:\asgkafka\librdkafka\src\rd.h"
                                             807 * ***           r = rd_atomic32_sub(R, 1);
000006EE E3F0 1000 0004          00000000    808          LG    15,0(0,1)   ; R
000006F4 E3F0 D0B0 0024          000000B0    809          STG   15,176(0,13)
000006FA E548 D0B8 0001          000000B8    810          MVGHI 184(13),1
00000700 4110 D0B0               000000B0    811          LA    1,176(0,13)
00000704 E3F0 C100 0004          000007B0    812          LG    15,@lit_758_16 ; rd_atomic32_sub
0000070A                                     813 @@gen_label19 DS    0H
0000070A 05EF                                814          BALR  14,15
0000070C                                     815 @@gen_label20 DS    0H
0000070C 122F                                816          LTR   2,15
                                             817 * ***
                                             818 * ***           if (r < 0)
0000070E 47B0 C0A6               00000756    819          BNL   @L41
                                             820 * ***                   ((!*"refcnt sub-zero") ? (void)0 : __assert(__\
                                             821 * func__, "C:\\asgkafka\\librdkafka\\src\\rd.h", 335, "!*\"refcnt sub-\
                                             822 * zero\""));
00000712 E3F0 C108 0004          000007B8    823          LG    15,@lit_758_17
00000718 4110 F022               00000022    824          LA    1,34(0,15)
0000071C 9500 1000      00000000 00000000    825          CLI   0(1),0
00000720 4780 C0A6               00000756    826          BE    @L41
00000724                                     827 @L42     DS    0H
00000724 E310 C118 0004          000007C8    828          LG    1,@lit_758_18
0000072A 4110 1036               00000036    829          LA    1,54(0,1)
0000072E E310 D0B0 0024          000000B0    830          STG   1,176(0,13)
00000734 E3F0 D0B8 0024          000000B8    831          STG   15,184(0,13)
0000073A E548 D0C0 014F          000000C0    832          MVGHI 192(13),335
00000740 41F0 F032               00000032    833          LA    15,50(0,15)
00000744 E3F0 D0C8 0024          000000C8    834          STG   15,200(0,13)
0000074A 4110 D0B0               000000B0    835          LA    1,176(0,13)
0000074E E3F0 C110 0004          000007C0    836          LG    15,@lit_758_19 ; __assert
00000754                                     837 @@gen_label23 DS    0H
00000754 05EF                                838          BALR  14,15
00000756                                     839 @@gen_label24 DS    0H
00000756                                     840 @L43     DS    0H
00000756                                     841 @L41     DS    0H
                                             842 * ***           return r;
00000756 B914 00F2                           843          LGFR  15,2
                                             844 * ***   }
                                             845 * * **** Start of Epilogue
                                             846          DCCEPIL
0000075A                                     847+         ds 0h                                                          01-DCCEP
                                             848+* Epilog
0000075A D707 D088 D088 00000088 00000088    849+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000760 E3D0 D080 0004          00000080    850+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000766 E3C0 D090 0004          00000090    851+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000076C E3B0 C018 0004          00000018    852+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000772 E3C0 B010 0021          00000010    853+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000778 E3E0 D008 0004          00000008    854+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000077E EB1C D020 0004          00000020    855+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page   23 
  Active Usings: @REGION_758_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000784 078E                                856+         bcr 8,14                if same dsab, just return              01-DCCEP
00000786 E3F0 D010 0024          00000010    857+         stg 15,16(0,13)         save return code                       01-DCCEP
0000078C E300 D018 0024          00000018    858+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000792 E3F0 D090 0004          00000090    859+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000798 E3F0 F018 0004          00000018    860+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000079E 47F0 F040               00000040    861+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             862+* End of Epilog
                                             863 * * **** End of Epilogue
000007A8                                     864          DS    0D
000007A8 000000D0                            865 @FRAMESIZE_758 DC F'208'
000007AC 00000000
000007B0 00000000000001A8                    866 @lit_758_16 DC AD(rd_atomic32_sub)
000007B8 0000000000012AB8                    867 @lit_758_17 DC AD(@strings@)
000007C0 0000000000000000                    868 @lit_758_19 DC AD(__assert)
000007C8 0000000000012808                    869 @lit_758_18 DC AD(@DATA)
                                             870          DROP  12
                                             871 *
                                             872 *   DSECT for automatic variables in "rd_refcnt_sub0"
                                             873 *      (FUNCTION #758)
                                             874 *
00000000                00000000 000000AC    875 @AUTO#rd_refcnt_sub0 DSECT
00000000                                     876          DS    XL168
000000A8                                     877 rd_refcnt_sub0#r#0 DS 1F   ; r
                                             878 *
000007D0                00000000 00012806    879 @CODE    CSECT
                                             880 *
                                             881 *
                                             882 *
                                             883 * ....... start of rd_avl_rdlock
000007D0                                     884 @LNAME762 DS   0H
000007D0 0000000D                            885          DC    X'0000000D'
000007D4 99846D81A5936D99                    886          DC    C'rd_avl_rdlock'
000007E1 00                                  887          DC    X'00'
                                             888 rd_avl_rdlock DCCPRLG CINDEX=762,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME762
                                             889          macro
                                             890          dccextrn &m
                                             891          gblc    &$dccext(1000)
                                             892          gbla    &$dccexti
                                             893          lcla    &i
                                             894 &$dccext(&$dccexti+1) setc    '&m'
                                             895 &i       seta    1
                                             896 .loop    aif    (&i gt &$dccexti).around
                                             897          aif    ('&$dccext(&i)' eq '&m').getout
                                             898 &i       seta    &i+1
                                             899          ago     .loop
                                             900 .around  anop
                                             901 &$dccexti seta &$dccexti+1
                                             902          extrn  &m
                                             903 .getout  anop
                                             904          mend
000007E8                                     905+$eye0020    ds    0d                                                    02-DCCCA
                                                                                                                           Page   24 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000007E8 C4C3C3                              906+         dc cl3'DCC'                                                    02-DCCCA
000007EB 01                                  907+         dc xl1'01' format one                                          02-DCCCA
000007EC 00000000                            908+         dc a(0)                                                        02-DCCCA
000007F0 000000000000085A                    909+         dc ad(@PER_762)                                                02-DCCCA
000007F8 00000000000000B0                    910+         dc ad(176)                                                     02-DCCCA
00000800 0000000000000000                    911+         dc ad(0)                                                       02-DCCCA
00000808 0000000000001000                    912+         dc ad(4096)                                                    02-DCCCA
00000810 20                                  913+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000811 03                                  914+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000812 03                                  915+         dc al1(3)                                                      02-DCCCA
00000813 08                                  916+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000814 00                                  917+         dc bl.8'00000000'                                              02-DCCCA
00000815 000000                              918+         dc al3(0)                                                      02-DCCCA
00000818 00000000000007D0                    919+         dc ad(@LNAME762)                                               02-DCCCA
00000820                                     920+         ds 0d                                                          02-DCCCA
00000820 00000000000007E8                    921+         dc ad($eye0020)                                                02-DCCCA
00000828 0000000000000000                    922+         dc ad(0)                                                       02-DCCCA
00000830                                     923+         ds    0d                                                       01-DCCPR
00000830                                     924+rd_avl_rdlock ds 0d                                                     01-DCCPR
00000830                                     925+@REGION_762_1 ds 0h                                                     01-DCCPR
00000830 EBEC D008 0024          00000008    926+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000836 E3E0 D088 0004          00000088    927+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000083C E3C0 D090 0004          00000090    928+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000842 B904 002E                           929+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000846 E3B0 C018 0004          00000018    930+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000084C A7EB 00B0               000000B0    931+         aghi  14,176              increase by frame size               01-DCCPR
00000850 E3E0 C020 0021          00000020    932+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000856 4720 B020               00000020    933+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000085A                                     934+@PER_762 ds    0h                                                       01-DCCPR
0000085A EBDE 2080 0024          00000080    935+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000860 E3C0 2090 0024          00000090    936+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000866 B904 00D2                           937+         lgr   13,2                set real frame pointer               01-DCCPR
0000086A B904 00CF                           938+         lgr   12,15               set base reg                         01-DCCPR
                        00000830             939+         using @REGION_762_1,12                                         01-DCCPR
                                             940 * ******* End of Prologue
                                             941 * *
                                             942 * ***           if (ravl->ravl_flags & 0x1)
0000086E E3F0 1000 0004          00000000    943          LG    15,0(0,1)   ; ravl
00000874 9101 F013      00000013 00000001    944          TM    19(15),1
00000878 4780 C062               00000892    945          BZ    @ret_lab_762
                                             946 * ***                   rwlock_rdlock(&ravl->ravl_rwlock);
0000087C 41F0 F018               00000018    947          LA    15,24(0,15)
00000880 E3F0 D0A8 0024          000000A8    948          STG   15,168(0,13)
00000886 4110 D0A8               000000A8    949          LA    1,168(0,13)
0000088A E3F0 C0B8 0004          000008E8    950          LG    15,@lit_762_21 ; rwlock_rdlock
00000890                                     951 @@gen_label26 DS    0H
00000890 05EF                                952          BALR  14,15
00000892                                     953 @@gen_label27 DS    0H
00000892                                     954 @L44     DS    0H
                                             955 * ***   }
00000892                                     956 @ret_lab_762 DS 0H
                                             957 * * **** Start of Epilogue
                                                                                                                           Page   25 
  Active Usings: @REGION_762_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             958          DCCEPIL
00000892                                     959+         ds 0h                                                          01-DCCEP
                                             960+* Epilog
00000892 D707 D088 D088 00000088 00000088    961+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000898 E3D0 D080 0004          00000080    962+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000089E E3C0 D090 0004          00000090    963+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000008A4 E3B0 C018 0004          00000018    964+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000008AA E3C0 B010 0021          00000010    965+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000008B0 E3E0 D008 0004          00000008    966+         lg  14,8(0,13)          load up return address                 01-DCCEP
000008B6 EB1C D020 0004          00000020    967+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000008BC 078E                                968+         bcr 8,14                if same dsab, just return              01-DCCEP
000008BE E3F0 D010 0024          00000010    969+         stg 15,16(0,13)         save return code                       01-DCCEP
000008C4 E300 D018 0024          00000018    970+         stg 0,24(0,13)          save more return code                  01-DCCEP
000008CA E3F0 D090 0004          00000090    971+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000008D0 E3F0 F018 0004          00000018    972+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000008D6 47F0 F040               00000040    973+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             974+* End of Epilog
                                             975 * * **** End of Epilogue
000008E0                                     976          DS    0D
000008E0 000000B0                            977 @FRAMESIZE_762 DC F'176'
000008E4 00000000
000008E8 0000000000000000                    978 @lit_762_21 DC AD(rwlock_rdlock)
                                             979          DROP  12
                                             980 *
                                             981 *   DSECT for automatic variables in "rd_avl_rdlock"
                                             982 *      (FUNCTION #762)
                                             983 *
00000000                00000000 000000A8    984 @AUTO#rd_avl_rdlock DSECT
00000000                                     985          DS    XL168
                                             986 *
000008F0                00000000 00012806    987 @CODE    CSECT
                                             988 *
                                             989 *
                                             990 *
                                             991 * ....... start of rd_avl_wrlock
000008F0                                     992 @LNAME763 DS   0H
000008F0 0000000D                            993          DC    X'0000000D'
000008F4 99846D81A5936DA6                    994          DC    C'rd_avl_wrlock'
00000901 00                                  995          DC    X'00'
                                             996 rd_avl_wrlock DCCPRLG CINDEX=763,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME763
                                             997          macro
                                             998          dccextrn &m
                                             999          gblc    &$dccext(1000)
                                            1000          gbla    &$dccexti
                                            1001          lcla    &i
                                            1002 &$dccext(&$dccexti+1) setc    '&m'
                                            1003 &i       seta    1
                                            1004 .loop    aif    (&i gt &$dccexti).around
                                            1005          aif    ('&$dccext(&i)' eq '&m').getout
                                            1006 &i       seta    &i+1
                                            1007          ago     .loop
                                                                                                                           Page   26 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1008 .around  anop
                                            1009 &$dccexti seta &$dccexti+1
                                            1010          extrn  &m
                                            1011 .getout  anop
                                            1012          mend
00000908                                    1013+$eye0023    ds    0d                                                    02-DCCCA
00000908 C4C3C3                             1014+         dc cl3'DCC'                                                    02-DCCCA
0000090B 01                                 1015+         dc xl1'01' format one                                          02-DCCCA
0000090C 00000000                           1016+         dc a(0)                                                        02-DCCCA
00000910 000000000000097A                   1017+         dc ad(@PER_763)                                                02-DCCCA
00000918 00000000000000B0                   1018+         dc ad(176)                                                     02-DCCCA
00000920 0000000000000000                   1019+         dc ad(0)                                                       02-DCCCA
00000928 0000000000001000                   1020+         dc ad(4096)                                                    02-DCCCA
00000930 20                                 1021+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000931 03                                 1022+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000932 03                                 1023+         dc al1(3)                                                      02-DCCCA
00000933 08                                 1024+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000934 00                                 1025+         dc bl.8'00000000'                                              02-DCCCA
00000935 000000                             1026+         dc al3(0)                                                      02-DCCCA
00000938 00000000000008F0                   1027+         dc ad(@LNAME763)                                               02-DCCCA
00000940                                    1028+         ds 0d                                                          02-DCCCA
00000940 0000000000000908                   1029+         dc ad($eye0023)                                                02-DCCCA
00000948 0000000000000000                   1030+         dc ad(0)                                                       02-DCCCA
00000950                                    1031+         ds    0d                                                       01-DCCPR
00000950                                    1032+rd_avl_wrlock ds 0d                                                     01-DCCPR
00000950                                    1033+@REGION_763_1 ds 0h                                                     01-DCCPR
00000950 EBEC D008 0024          00000008   1034+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000956 E3E0 D088 0004          00000088   1035+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000095C E3C0 D090 0004          00000090   1036+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000962 B904 002E                          1037+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000966 E3B0 C018 0004          00000018   1038+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000096C A7EB 00B0               000000B0   1039+         aghi  14,176              increase by frame size               01-DCCPR
00000970 E3E0 C020 0021          00000020   1040+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000976 4720 B020               00000020   1041+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000097A                                    1042+@PER_763 ds    0h                                                       01-DCCPR
0000097A EBDE 2080 0024          00000080   1043+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000980 E3C0 2090 0024          00000090   1044+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000986 B904 00D2                          1045+         lgr   13,2                set real frame pointer               01-DCCPR
0000098A B904 00CF                          1046+         lgr   12,15               set base reg                         01-DCCPR
                        00000950            1047+         using @REGION_763_1,12                                         01-DCCPR
                                            1048 * ******* End of Prologue
                                            1049 * *
                                            1050 * ***           if (ravl->ravl_flags & 0x1)
0000098E E3F0 1000 0004          00000000   1051          LG    15,0(0,1)   ; ravl
00000994 9101 F013      00000013 00000001   1052          TM    19(15),1
00000998 4780 C062               000009B2   1053          BZ    @ret_lab_763
                                            1054 * ***                   rwlock_wrlock(&ravl->ravl_rwlock);
0000099C 41F0 F018               00000018   1055          LA    15,24(0,15)
000009A0 E3F0 D0A8 0024          000000A8   1056          STG   15,168(0,13)
000009A6 4110 D0A8               000000A8   1057          LA    1,168(0,13)
000009AA E3F0 C0B8 0004          00000A08   1058          LG    15,@lit_763_23 ; rwlock_wrlock
000009B0                                    1059 @@gen_label29 DS    0H
                                                                                                                           Page   27 
  Active Usings: @REGION_763_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000009B0 05EF                               1060          BALR  14,15
000009B2                                    1061 @@gen_label30 DS    0H
000009B2                                    1062 @L45     DS    0H
                                            1063 * ***   }
000009B2                                    1064 @ret_lab_763 DS 0H
                                            1065 * * **** Start of Epilogue
                                            1066          DCCEPIL
000009B2                                    1067+         ds 0h                                                          01-DCCEP
                                            1068+* Epilog
000009B2 D707 D088 D088 00000088 00000088   1069+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000009B8 E3D0 D080 0004          00000080   1070+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000009BE E3C0 D090 0004          00000090   1071+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000009C4 E3B0 C018 0004          00000018   1072+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000009CA E3C0 B010 0021          00000010   1073+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000009D0 E3E0 D008 0004          00000008   1074+         lg  14,8(0,13)          load up return address                 01-DCCEP
000009D6 EB1C D020 0004          00000020   1075+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000009DC 078E                               1076+         bcr 8,14                if same dsab, just return              01-DCCEP
000009DE E3F0 D010 0024          00000010   1077+         stg 15,16(0,13)         save return code                       01-DCCEP
000009E4 E300 D018 0024          00000018   1078+         stg 0,24(0,13)          save more return code                  01-DCCEP
000009EA E3F0 D090 0004          00000090   1079+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000009F0 E3F0 F018 0004          00000018   1080+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000009F6 47F0 F040               00000040   1081+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1082+* End of Epilog
                                            1083 * * **** End of Epilogue
00000A00                                    1084          DS    0D
00000A00 000000B0                           1085 @FRAMESIZE_763 DC F'176'
00000A04 00000000
00000A08 0000000000000000                   1086 @lit_763_23 DC AD(rwlock_wrlock)
                                            1087          DROP  12
                                            1088 *
                                            1089 *   DSECT for automatic variables in "rd_avl_wrlock"
                                            1090 *      (FUNCTION #763)
                                            1091 *
00000000                00000000 000000A8   1092 @AUTO#rd_avl_wrlock DSECT
00000000                                    1093          DS    XL168
                                            1094 *
00000A10                00000000 00012806   1095 @CODE    CSECT
                                            1096 *
                                            1097 *
                                            1098 *
                                            1099 * ....... start of rd_avl_rdunlock
00000A10                                    1100 @LNAME764 DS   0H
00000A10 0000000F                           1101          DC    X'0000000F'
00000A14 99846D81A5936D99                   1102          DC    C'rd_avl_rdunlock'
00000A23 00                                 1103          DC    X'00'
                                            1104 rd_avl_rdunlock DCCPRLG CINDEX=764,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME764
                                            1105          macro
                                            1106          dccextrn &m
                                            1107          gblc    &$dccext(1000)
                                            1108          gbla    &$dccexti
                                            1109          lcla    &i
                                                                                                                           Page   28 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1110 &$dccext(&$dccexti+1) setc    '&m'
                                            1111 &i       seta    1
                                            1112 .loop    aif    (&i gt &$dccexti).around
                                            1113          aif    ('&$dccext(&i)' eq '&m').getout
                                            1114 &i       seta    &i+1
                                            1115          ago     .loop
                                            1116 .around  anop
                                            1117 &$dccexti seta &$dccexti+1
                                            1118          extrn  &m
                                            1119 .getout  anop
                                            1120          mend
00000A28                                    1121+$eye0026    ds    0d                                                    02-DCCCA
00000A28 C4C3C3                             1122+         dc cl3'DCC'                                                    02-DCCCA
00000A2B 01                                 1123+         dc xl1'01' format one                                          02-DCCCA
00000A2C 00000000                           1124+         dc a(0)                                                        02-DCCCA
00000A30 0000000000000A9A                   1125+         dc ad(@PER_764)                                                02-DCCCA
00000A38 00000000000000B0                   1126+         dc ad(176)                                                     02-DCCCA
00000A40 0000000000000000                   1127+         dc ad(0)                                                       02-DCCCA
00000A48 0000000000001000                   1128+         dc ad(4096)                                                    02-DCCCA
00000A50 20                                 1129+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000A51 03                                 1130+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000A52 03                                 1131+         dc al1(3)                                                      02-DCCCA
00000A53 08                                 1132+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000A54 00                                 1133+         dc bl.8'00000000'                                              02-DCCCA
00000A55 000000                             1134+         dc al3(0)                                                      02-DCCCA
00000A58 0000000000000A10                   1135+         dc ad(@LNAME764)                                               02-DCCCA
00000A60                                    1136+         ds 0d                                                          02-DCCCA
00000A60 0000000000000A28                   1137+         dc ad($eye0026)                                                02-DCCCA
00000A68 0000000000000000                   1138+         dc ad(0)                                                       02-DCCCA
00000A70                                    1139+         ds    0d                                                       01-DCCPR
00000A70                                    1140+rd_avl_rdunlock ds 0d                                                   01-DCCPR
00000A70                                    1141+@REGION_764_1 ds 0h                                                     01-DCCPR
00000A70 EBEC D008 0024          00000008   1142+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000A76 E3E0 D088 0004          00000088   1143+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000A7C E3C0 D090 0004          00000090   1144+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000A82 B904 002E                          1145+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000A86 E3B0 C018 0004          00000018   1146+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000A8C A7EB 00B0               000000B0   1147+         aghi  14,176              increase by frame size               01-DCCPR
00000A90 E3E0 C020 0021          00000020   1148+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000A96 4720 B020               00000020   1149+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000A9A                                    1150+@PER_764 ds    0h                                                       01-DCCPR
00000A9A EBDE 2080 0024          00000080   1151+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000AA0 E3C0 2090 0024          00000090   1152+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000AA6 B904 00D2                          1153+         lgr   13,2                set real frame pointer               01-DCCPR
00000AAA B904 00CF                          1154+         lgr   12,15               set base reg                         01-DCCPR
                        00000A70            1155+         using @REGION_764_1,12                                         01-DCCPR
                                            1156 * ******* End of Prologue
                                            1157 * *
                                            1158 * ***           if (ravl->ravl_flags & 0x1)
00000AAE E3F0 1000 0004          00000000   1159          LG    15,0(0,1)   ; ravl
00000AB4 9101 F013      00000013 00000001   1160          TM    19(15),1
00000AB8 4780 C062               00000AD2   1161          BZ    @ret_lab_764
                                                                                                                           Page   29 
  Active Usings: @REGION_764_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1162 * ***                   rwlock_rdunlock(&ravl->ravl_rwlock);
00000ABC 41F0 F018               00000018   1163          LA    15,24(0,15)
00000AC0 E3F0 D0A8 0024          000000A8   1164          STG   15,168(0,13)
00000AC6 4110 D0A8               000000A8   1165          LA    1,168(0,13)
00000ACA E3F0 C0B8 0004          00000B28   1166          LG    15,@lit_764_25 ; rwlock_rdunlock
00000AD0                                    1167 @@gen_label32 DS    0H
00000AD0 05EF                               1168          BALR  14,15
00000AD2                                    1169 @@gen_label33 DS    0H
00000AD2                                    1170 @L46     DS    0H
                                            1171 * ***   }
00000AD2                                    1172 @ret_lab_764 DS 0H
                                            1173 * * **** Start of Epilogue
                                            1174          DCCEPIL
00000AD2                                    1175+         ds 0h                                                          01-DCCEP
                                            1176+* Epilog
00000AD2 D707 D088 D088 00000088 00000088   1177+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000AD8 E3D0 D080 0004          00000080   1178+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000ADE E3C0 D090 0004          00000090   1179+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000AE4 E3B0 C018 0004          00000018   1180+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000AEA E3C0 B010 0021          00000010   1181+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000AF0 E3E0 D008 0004          00000008   1182+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000AF6 EB1C D020 0004          00000020   1183+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000AFC 078E                               1184+         bcr 8,14                if same dsab, just return              01-DCCEP
00000AFE E3F0 D010 0024          00000010   1185+         stg 15,16(0,13)         save return code                       01-DCCEP
00000B04 E300 D018 0024          00000018   1186+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000B0A E3F0 D090 0004          00000090   1187+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000B10 E3F0 F018 0004          00000018   1188+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000B16 47F0 F040               00000040   1189+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1190+* End of Epilog
                                            1191 * * **** End of Epilogue
00000B20                                    1192          DS    0D
00000B20 000000B0                           1193 @FRAMESIZE_764 DC F'176'
00000B24 00000000
00000B28 0000000000000000                   1194 @lit_764_25 DC AD(rwlock_rdunlock)
                                            1195          DROP  12
                                            1196 *
                                            1197 *   DSECT for automatic variables in "rd_avl_rdunlock"
                                            1198 *      (FUNCTION #764)
                                            1199 *
00000000                00000000 000000A8   1200 @AUTO#rd_avl_rdunlock DSECT
00000000                                    1201          DS    XL168
                                            1202 *
00000B30                00000000 00012806   1203 @CODE    CSECT
                                            1204 *
                                            1205 *
                                            1206 *
                                            1207 * ....... start of rd_avl_wrunlock
00000B30                                    1208 @LNAME765 DS   0H
00000B30 0000000F                           1209          DC    X'0000000F'
00000B34 99846D81A5936DA6                   1210          DC    C'rd_avl_wrunlock'
00000B43 00                                 1211          DC    X'00'
                                            1212 rd_avl_wrunlock DCCPRLG CINDEX=765,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZAR*
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                CH,LNAMEADDR=@LNAME765
                                            1213          macro
                                            1214          dccextrn &m
                                            1215          gblc    &$dccext(1000)
                                            1216          gbla    &$dccexti
                                            1217          lcla    &i
                                            1218 &$dccext(&$dccexti+1) setc    '&m'
                                            1219 &i       seta    1
                                            1220 .loop    aif    (&i gt &$dccexti).around
                                            1221          aif    ('&$dccext(&i)' eq '&m').getout
                                            1222 &i       seta    &i+1
                                            1223          ago     .loop
                                            1224 .around  anop
                                            1225 &$dccexti seta &$dccexti+1
                                            1226          extrn  &m
                                            1227 .getout  anop
                                            1228          mend
00000B48                                    1229+$eye0029    ds    0d                                                    02-DCCCA
00000B48 C4C3C3                             1230+         dc cl3'DCC'                                                    02-DCCCA
00000B4B 01                                 1231+         dc xl1'01' format one                                          02-DCCCA
00000B4C 00000000                           1232+         dc a(0)                                                        02-DCCCA
00000B50 0000000000000BBA                   1233+         dc ad(@PER_765)                                                02-DCCCA
00000B58 00000000000000B0                   1234+         dc ad(176)                                                     02-DCCCA
00000B60 0000000000000000                   1235+         dc ad(0)                                                       02-DCCCA
00000B68 0000000000001000                   1236+         dc ad(4096)                                                    02-DCCCA
00000B70 20                                 1237+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000B71 03                                 1238+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000B72 03                                 1239+         dc al1(3)                                                      02-DCCCA
00000B73 08                                 1240+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000B74 00                                 1241+         dc bl.8'00000000'                                              02-DCCCA
00000B75 000000                             1242+         dc al3(0)                                                      02-DCCCA
00000B78 0000000000000B30                   1243+         dc ad(@LNAME765)                                               02-DCCCA
00000B80                                    1244+         ds 0d                                                          02-DCCCA
00000B80 0000000000000B48                   1245+         dc ad($eye0029)                                                02-DCCCA
00000B88 0000000000000000                   1246+         dc ad(0)                                                       02-DCCCA
00000B90                                    1247+         ds    0d                                                       01-DCCPR
00000B90                                    1248+rd_avl_wrunlock ds 0d                                                   01-DCCPR
00000B90                                    1249+@REGION_765_1 ds 0h                                                     01-DCCPR
00000B90 EBEC D008 0024          00000008   1250+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000B96 E3E0 D088 0004          00000088   1251+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000B9C E3C0 D090 0004          00000090   1252+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000BA2 B904 002E                          1253+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000BA6 E3B0 C018 0004          00000018   1254+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000BAC A7EB 00B0               000000B0   1255+         aghi  14,176              increase by frame size               01-DCCPR
00000BB0 E3E0 C020 0021          00000020   1256+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000BB6 4720 B020               00000020   1257+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000BBA                                    1258+@PER_765 ds    0h                                                       01-DCCPR
00000BBA EBDE 2080 0024          00000080   1259+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000BC0 E3C0 2090 0024          00000090   1260+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000BC6 B904 00D2                          1261+         lgr   13,2                set real frame pointer               01-DCCPR
00000BCA B904 00CF                          1262+         lgr   12,15               set base reg                         01-DCCPR
                        00000B90            1263+         using @REGION_765_1,12                                         01-DCCPR
                                                                                                                           Page   31 
  Active Usings: @REGION_765_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1264 * ******* End of Prologue
                                            1265 * *
                                            1266 * ***           if (ravl->ravl_flags & 0x1)
00000BCE E3F0 1000 0004          00000000   1267          LG    15,0(0,1)   ; ravl
00000BD4 9101 F013      00000013 00000001   1268          TM    19(15),1
00000BD8 4780 C062               00000BF2   1269          BZ    @ret_lab_765
                                            1270 * ***                   rwlock_wrunlock(&ravl->ravl_rwlock);
00000BDC 41F0 F018               00000018   1271          LA    15,24(0,15)
00000BE0 E3F0 D0A8 0024          000000A8   1272          STG   15,168(0,13)
00000BE6 4110 D0A8               000000A8   1273          LA    1,168(0,13)
00000BEA E3F0 C0B8 0004          00000C48   1274          LG    15,@lit_765_27 ; rwlock_wrunlock
00000BF0                                    1275 @@gen_label35 DS    0H
00000BF0 05EF                               1276          BALR  14,15
00000BF2                                    1277 @@gen_label36 DS    0H
00000BF2                                    1278 @L47     DS    0H
                                            1279 * ***   }
00000BF2                                    1280 @ret_lab_765 DS 0H
                                            1281 * * **** Start of Epilogue
                                            1282          DCCEPIL
00000BF2                                    1283+         ds 0h                                                          01-DCCEP
                                            1284+* Epilog
00000BF2 D707 D088 D088 00000088 00000088   1285+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000BF8 E3D0 D080 0004          00000080   1286+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000BFE E3C0 D090 0004          00000090   1287+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000C04 E3B0 C018 0004          00000018   1288+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000C0A E3C0 B010 0021          00000010   1289+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000C10 E3E0 D008 0004          00000008   1290+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000C16 EB1C D020 0004          00000020   1291+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000C1C 078E                               1292+         bcr 8,14                if same dsab, just return              01-DCCEP
00000C1E E3F0 D010 0024          00000010   1293+         stg 15,16(0,13)         save return code                       01-DCCEP
00000C24 E300 D018 0024          00000018   1294+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000C2A E3F0 D090 0004          00000090   1295+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000C30 E3F0 F018 0004          00000018   1296+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000C36 47F0 F040               00000040   1297+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1298+* End of Epilog
                                            1299 * * **** End of Epilogue
00000C40                                    1300          DS    0D
00000C40 000000B0                           1301 @FRAMESIZE_765 DC F'176'
00000C44 00000000
00000C48 0000000000000000                   1302 @lit_765_27 DC AD(rwlock_wrunlock)
                                            1303          DROP  12
                                            1304 *
                                            1305 *   DSECT for automatic variables in "rd_avl_wrunlock"
                                            1306 *      (FUNCTION #765)
                                            1307 *
00000000                00000000 000000A8   1308 @AUTO#rd_avl_wrunlock DSECT
00000000                                    1309          DS    XL168
                                            1310 *
00000C50                00000000 00012806   1311 @CODE    CSECT
                                            1312 *
                                            1313 *
                                            1314 *
                                                                                                                           Page   32 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1315 * ....... start of rd_avl_insert
00000C50                                    1316 @LNAME767 DS   0H
00000C50 0000000D                           1317          DC    X'0000000D'
00000C54 99846D81A5936D89                   1318          DC    C'rd_avl_insert'
00000C61 00                                 1319          DC    X'00'
                                            1320 rd_avl_insert DCCPRLG CINDEX=767,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME767
                                            1321          macro
                                            1322          dccextrn &m
                                            1323          gblc    &$dccext(1000)
                                            1324          gbla    &$dccexti
                                            1325          lcla    &i
                                            1326 &$dccext(&$dccexti+1) setc    '&m'
                                            1327 &i       seta    1
                                            1328 .loop    aif    (&i gt &$dccexti).around
                                            1329          aif    ('&$dccext(&i)' eq '&m').getout
                                            1330 &i       seta    &i+1
                                            1331          ago     .loop
                                            1332 .around  anop
                                            1333 &$dccexti seta &$dccexti+1
                                            1334          extrn  &m
                                            1335 .getout  anop
                                            1336          mend
00000C68                                    1337+$eye0032    ds    0d                                                    02-DCCCA
00000C68 C4C3C3                             1338+         dc cl3'DCC'                                                    02-DCCCA
00000C6B 01                                 1339+         dc xl1'01' format one                                          02-DCCCA
00000C6C 00000000                           1340+         dc a(0)                                                        02-DCCCA
00000C70 0000000000000CDA                   1341+         dc ad(@PER_767)                                                02-DCCCA
00000C78 00000000000000D0                   1342+         dc ad(208)                                                     02-DCCCA
00000C80 0000000000000000                   1343+         dc ad(0)                                                       02-DCCCA
00000C88 0000000000001000                   1344+         dc ad(4096)                                                    02-DCCCA
00000C90 20                                 1345+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000C91 03                                 1346+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000C92 03                                 1347+         dc al1(3)                                                      02-DCCCA
00000C93 08                                 1348+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000C94 00                                 1349+         dc bl.8'00000000'                                              02-DCCCA
00000C95 000000                             1350+         dc al3(0)                                                      02-DCCCA
00000C98 0000000000000C50                   1351+         dc ad(@LNAME767)                                               02-DCCCA
00000CA0                                    1352+         ds 0d                                                          02-DCCCA
00000CA0 0000000000000C68                   1353+         dc ad($eye0032)                                                02-DCCCA
00000CA8 0000000000000000                   1354+         dc ad(0)                                                       02-DCCCA
00000CB0                                    1355+         ds    0d                                                       01-DCCPR
00000CB0                                    1356+rd_avl_insert ds 0d                                                     01-DCCPR
00000CB0                                    1357+@REGION_767_1 ds 0h                                                     01-DCCPR
00000CB0 EBEC D008 0024          00000008   1358+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000CB6 E3E0 D088 0004          00000088   1359+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000CBC E3C0 D090 0004          00000090   1360+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000CC2 B904 002E                          1361+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000CC6 E3B0 C018 0004          00000018   1362+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000CCC A7EB 00D0               000000D0   1363+         aghi  14,208              increase by frame size               01-DCCPR
00000CD0 E3E0 C020 0021          00000020   1364+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000CD6 4720 B020               00000020   1365+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page   33 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000CDA                                    1366+@PER_767 ds    0h                                                       01-DCCPR
00000CDA EBDE 2080 0024          00000080   1367+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000CE0 E3C0 2090 0024          00000090   1368+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000CE6 B904 00D2                          1369+         lgr   13,2                set real frame pointer               01-DCCPR
00000CEA B904 00CF                          1370+         lgr   12,15               set base reg                         01-DCCPR
                        00000CB0            1371+         using @REGION_767_1,12                                         01-DCCPR
                                            1372 * ******* End of Prologue
                                            1373 * *
                                            1374 * ***           rd_avl_node_t *existing = ((void *)0);
00000CEE E320 1000 0004          00000000   1375          LG    2,0(0,1)    ; ravl
00000CF4 E330 1010 0004          00000010   1376          LG    3,16(0,1)   ; ran
00000CFA A749 0000               00000000   1377          LGHI  4,0         ; 0
00000CFE E340 D0A8 0024          000000A8   1378          STG   4,168(0,13) ; existing
                                            1379 * ***
                                            1380 * ***           __memset(ran,0,sizeof(*ran));
                                            1381 * setting 32 bytes to 0x00
00000D04 D71F 3000 3000 00000000 00000000   1382          XC    0(32,3),0(3)
                                            1383 * ***           ran->ran_elm = elm;
00000D0A E3F0 1008 0004          00000008   1384          LG    15,8(0,1)   ; elm
00000D10 E3F0 3018 0024          00000018   1385          STG   15,24(0,3)  ; offset of ran_elm in rd_avl_node_s
                                            1386 * ***
                                            1387 * ***           rd_avl_wrlock(ravl);
00000D16 E320 D0B0 0024          000000B0   1388          STG   2,176(0,13)
00000D1C 4110 D0B0               000000B0   1389          LA    1,176(0,13)
00000D20 E3F0 C0E0 0004          00000D90   1390          LG    15,@lit_767_30 ; rd_avl_wrlock
00000D26                                    1391 @@gen_label37 DS    0H
00000D26 05EF                               1392          BALR  14,15
00000D28                                    1393 @@gen_label38 DS    0H
                                            1394 * ***           ravl->ravl_root = rd_avl_insert_node(ravl, ravl->ravl_\
                                            1395 * root,
                                            1396 * ***                                                ran, &existing);
00000D28 E320 D0B0 0024          000000B0   1397          STG   2,176(0,13)
00000D2E E3F0 2000 0004          00000000   1398          LG    15,0(0,2)
00000D34 E3F0 D0B8 0024          000000B8   1399          STG   15,184(0,13)
00000D3A E330 D0C0 0024          000000C0   1400          STG   3,192(0,13)
00000D40 41F0 D0A8               000000A8   1401          LA    15,168(0,13)
00000D44 E3F0 D0C8 0024          000000C8   1402          STG   15,200(0,13)
00000D4A 4110 D0B0               000000B0   1403          LA    1,176(0,13)
00000D4E E3F0 C0E8 0004          00000D98   1404          LG    15,@lit_767_31 ; rd_avl_insert_node
00000D54                                    1405 @@gen_label39 DS    0H
00000D54 05EF                               1406          BALR  14,15
00000D56                                    1407 @@gen_label40 DS    0H
00000D56 E3F0 2000 0024          00000000   1408          STG   15,0(0,2)
                                            1409 * ***           rd_avl_wrunlock(ravl);
00000D5C E320 D0B0 0024          000000B0   1410          STG   2,176(0,13)
00000D62 4110 D0B0               000000B0   1411          LA    1,176(0,13)
00000D66 E3F0 C0F0 0004          00000DA0   1412          LG    15,@lit_767_32 ; rd_avl_wrunlock
00000D6C                                    1413 @@gen_label41 DS    0H
00000D6C 05EF                               1414          BALR  14,15
00000D6E                                    1415 @@gen_label42 DS    0H
                                            1416 * ***
                                            1417 * ***           return existing ? existing->ran_elm : ((void *)0);
                                                                                                                           Page   34 
  Active Usings: @REGION_767_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000D6E E3F0 D0A8 0004          000000A8   1418          LG    15,168(0,13) ; existing
00000D74 B902 001F                          1419          LTGR  1,15
00000D78 4780 C0F8               00000DA8   1420          BZ    @L48
00000D7C E340 F018 0004          00000018   1421          LG    4,24(0,15)  ; offset of ran_elm in rd_avl_node_s
00000D82 47F0 C0F8               00000DA8   1422          B     @L49
00000D88                                    1423          DS    0D
00000D88 000000D0                           1424 @FRAMESIZE_767 DC F'208'
00000D8C 00000000
00000D90 0000000000000950                   1425 @lit_767_30 DC AD(rd_avl_wrlock)
00000D98 0000000000000000                   1426 @lit_767_31 DC AD(rd_avl_insert_node)
00000DA0 0000000000000B90                   1427 @lit_767_32 DC AD(rd_avl_wrunlock)
00000DA8                                    1428 @L48     DS    0H
00000DA8                                    1429 @L49     DS    0H
00000DA8 B904 00F4                          1430          LGR   15,4
                                            1431 * ***   }
                                            1432 * * **** Start of Epilogue
                                            1433          DCCEPIL
00000DAC                                    1434+         ds 0h                                                          01-DCCEP
                                            1435+* Epilog
00000DAC D707 D088 D088 00000088 00000088   1436+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000DB2 E3D0 D080 0004          00000080   1437+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000DB8 E3C0 D090 0004          00000090   1438+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000DBE E3B0 C018 0004          00000018   1439+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000DC4 E3C0 B010 0021          00000010   1440+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000DCA E3E0 D008 0004          00000008   1441+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000DD0 EB1C D020 0004          00000020   1442+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000DD6 078E                               1443+         bcr 8,14                if same dsab, just return              01-DCCEP
00000DD8 E3F0 D010 0024          00000010   1444+         stg 15,16(0,13)         save return code                       01-DCCEP
00000DDE E300 D018 0024          00000018   1445+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000DE4 E3F0 D090 0004          00000090   1446+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000DEA E3F0 F018 0004          00000018   1447+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000DF0 47F0 F040               00000040   1448+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1449+* End of Epilog
                                            1450 * * **** End of Epilogue
                                            1451          DROP  12
                                            1452 *
                                            1453 *   DSECT for automatic variables in "rd_avl_insert"
                                            1454 *      (FUNCTION #767)
                                            1455 *
00000000                00000000 000000A8   1456 @AUTO#rd_avl_insert DSECT
00000000                                    1457          DS    XL168
                                            1458 *
00000DF4                00000000 00012806   1459 @CODE    CSECT
                                            1460 *
                                            1461 *
                                            1462 *
                                            1463 * ....... start of rd_avl_find
00000DF4                                    1464 @LNAME771 DS   0H
00000DF4 0000000B                           1465          DC    X'0000000B'
00000DF8 99846D81A5936D86                   1466          DC    C'rd_avl_find'
00000E03 00                                 1467          DC    X'00'
                                            1468 rd_avl_find DCCPRLG CINDEX=771,BASER=12,FRAME=200,ENTRY=NO,ARCH=ZARCH,L*
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                NAMEADDR=@LNAME771
                                            1469          macro
                                            1470          dccextrn &m
                                            1471          gblc    &$dccext(1000)
                                            1472          gbla    &$dccexti
                                            1473          lcla    &i
                                            1474 &$dccext(&$dccexti+1) setc    '&m'
                                            1475 &i       seta    1
                                            1476 .loop    aif    (&i gt &$dccexti).around
                                            1477          aif    ('&$dccext(&i)' eq '&m').getout
                                            1478 &i       seta    &i+1
                                            1479          ago     .loop
                                            1480 .around  anop
                                            1481 &$dccexti seta &$dccexti+1
                                            1482          extrn  &m
                                            1483 .getout  anop
                                            1484          mend
00000E08                                    1485+$eye0035    ds    0d                                                    02-DCCCA
00000E08 C4C3C3                             1486+         dc cl3'DCC'                                                    02-DCCCA
00000E0B 01                                 1487+         dc xl1'01' format one                                          02-DCCCA
00000E0C 00000000                           1488+         dc a(0)                                                        02-DCCCA
00000E10 0000000000000E7A                   1489+         dc ad(@PER_771)                                                02-DCCCA
00000E18 00000000000000C8                   1490+         dc ad(200)                                                     02-DCCCA
00000E20 0000000000000000                   1491+         dc ad(0)                                                       02-DCCCA
00000E28 0000000000001000                   1492+         dc ad(4096)                                                    02-DCCCA
00000E30 20                                 1493+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000E31 03                                 1494+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000E32 03                                 1495+         dc al1(3)                                                      02-DCCCA
00000E33 08                                 1496+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000E34 00                                 1497+         dc bl.8'00000000'                                              02-DCCCA
00000E35 000000                             1498+         dc al3(0)                                                      02-DCCCA
00000E38 0000000000000DF4                   1499+         dc ad(@LNAME771)                                               02-DCCCA
00000E40                                    1500+         ds 0d                                                          02-DCCCA
00000E40 0000000000000E08                   1501+         dc ad($eye0035)                                                02-DCCCA
00000E48 0000000000000000                   1502+         dc ad(0)                                                       02-DCCCA
00000E50                                    1503+         ds    0d                                                       01-DCCPR
00000E50                                    1504+rd_avl_find ds 0d                                                       01-DCCPR
00000E50                                    1505+@REGION_771_1 ds 0h                                                     01-DCCPR
00000E50 EBEC D008 0024          00000008   1506+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000E56 E3E0 D088 0004          00000088   1507+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000E5C E3C0 D090 0004          00000090   1508+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000E62 B904 002E                          1509+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000E66 E3B0 C018 0004          00000018   1510+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000E6C A7EB 00C8               000000C8   1511+         aghi  14,200              increase by frame size               01-DCCPR
00000E70 E3E0 C020 0021          00000020   1512+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000E76 4720 B020               00000020   1513+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000E7A                                    1514+@PER_771 ds    0h                                                       01-DCCPR
00000E7A EBDE 2080 0024          00000080   1515+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000E80 E3C0 2090 0024          00000090   1516+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000E86 B904 00D2                          1517+         lgr   13,2                set real frame pointer               01-DCCPR
00000E8A B904 00CF                          1518+         lgr   12,15               set base reg                         01-DCCPR
                        00000E50            1519+         using @REGION_771_1,12                                         01-DCCPR
                                                                                                                           Page   36 
  Active Usings: @REGION_771_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000E8E B904 0021                          1520          LGR   2,1         ; ptr to parm area
                                            1521 * ******* End of Prologue
                                            1522 * *
00000E92 E330 2000 0004          00000000   1523          LG    3,0(0,2)    ; ravl
                                            1524 * ***           const rd_avl_node_t *ran;
                                            1525 * ***           void *ret;
                                            1526 * ***
                                            1527 * ***           if (dolock)
00000E98 E340 2014 0012          00000014   1528          LT    4,20(0,2)   ; dolock
00000E9E 4780 C064               00000EB4   1529          BZ    @L50
                                            1530 * ***                   rd_avl_rdlock(ravl);
00000EA2 E330 D0B0 0024          000000B0   1531          STG   3,176(0,13)
00000EA8 4110 D0B0               000000B0   1532          LA    1,176(0,13)
00000EAC E3F0 C0A8 0004          00000EF8   1533          LG    15,@lit_771_35 ; rd_avl_rdlock
00000EB2                                    1534 @@gen_label45 DS    0H
00000EB2 05EF                               1535          BALR  14,15
00000EB4                                    1536 @@gen_label46 DS    0H
00000EB4                                    1537 @L50     DS    0H
                                            1538 * ***
                                            1539 * ***           ran = rd_avl_find_node(ravl, ravl->ravl_root, elm);
00000EB4 E330 D0B0 0024          000000B0   1540          STG   3,176(0,13)
00000EBA E3F0 3000 0004          00000000   1541          LG    15,0(0,3)
00000EC0 E3F0 D0B8 0024          000000B8   1542          STG   15,184(0,13)
00000EC6 E3F0 2008 0004          00000008   1543          LG    15,8(0,2)   ; elm
00000ECC E3F0 D0C0 0024          000000C0   1544          STG   15,192(0,13)
00000ED2 4110 D0B0               000000B0   1545          LA    1,176(0,13)
00000ED6 E3F0 C0B0 0004          00000F00   1546          LG    15,@lit_771_36 ; rd_avl_find_node
00000EDC                                    1547 @@gen_label47 DS    0H
00000EDC 05EF                               1548          BALR  14,15
00000EDE                                    1549 @@gen_label48 DS    0H
                                            1550 * ***           ret = ran ? ran->ran_elm : ((void *)0);
00000EDE B902 001F                          1551          LTGR  1,15
00000EE2 4780 C0C0               00000F10   1552          BZ    @L51
00000EE6 E320 F018 0004          00000018   1553          LG    2,24(0,15)  ; offset of ran_elm in rd_avl_node_s
00000EEC 47F0 C0C4               00000F14   1554          B     @L52
00000EF0                                    1555          DS    0D
00000EF0 000000C8                           1556 @FRAMESIZE_771 DC F'200'
00000EF4 00000000
00000EF8 0000000000000830                   1557 @lit_771_35 DC AD(rd_avl_rdlock)
00000F00 0000000000000000                   1558 @lit_771_36 DC AD(rd_avl_find_node)
00000F08 0000000000000A70                   1559 @lit_771_38 DC AD(rd_avl_rdunlock)
00000F10                                    1560 @L51     DS    0H
00000F10 A729 0000               00000000   1561          LGHI  2,0         ; 0
00000F14                                    1562 @L52     DS    0H
                                            1563 * ***
                                            1564 * ***           if (dolock)
00000F14 1244                               1565          LTR   4,4
00000F16 4780 C0DC               00000F2C   1566          BZ    @L53
                                            1567 * ***                   rd_avl_rdunlock(ravl);
00000F1A E330 D0B0 0024          000000B0   1568          STG   3,176(0,13)
00000F20 4110 D0B0               000000B0   1569          LA    1,176(0,13)
00000F24 E3F0 C0B8 0004          00000F08   1570          LG    15,@lit_771_38 ; rd_avl_rdunlock
                                                                                                                           Page   37 
  Active Usings: @REGION_771_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000F2A                                    1571 @@gen_label51 DS    0H
00000F2A 05EF                               1572          BALR  14,15
00000F2C                                    1573 @@gen_label52 DS    0H
00000F2C                                    1574 @L53     DS    0H
                                            1575 * ***
                                            1576 * ***           return ret;
00000F2C B904 00F2                          1577          LGR   15,2
                                            1578 * ***   }
                                            1579 * * **** Start of Epilogue
                                            1580          DCCEPIL
00000F30                                    1581+         ds 0h                                                          01-DCCEP
                                            1582+* Epilog
00000F30 D707 D088 D088 00000088 00000088   1583+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000F36 E3D0 D080 0004          00000080   1584+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000F3C E3C0 D090 0004          00000090   1585+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000F42 E3B0 C018 0004          00000018   1586+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000F48 E3C0 B010 0021          00000010   1587+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000F4E E3E0 D008 0004          00000008   1588+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000F54 EB1C D020 0004          00000020   1589+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000F5A 078E                               1590+         bcr 8,14                if same dsab, just return              01-DCCEP
00000F5C E3F0 D010 0024          00000010   1591+         stg 15,16(0,13)         save return code                       01-DCCEP
00000F62 E300 D018 0024          00000018   1592+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000F68 E3F0 D090 0004          00000090   1593+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000F6E E3F0 F018 0004          00000018   1594+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000F74 47F0 F040               00000040   1595+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1596+* End of Epilog
                                            1597 * * **** End of Epilogue
                                            1598          DROP  12
                                            1599 *
                                            1600 *   DSECT for automatic variables in "rd_avl_find"
                                            1601 *      (FUNCTION #771)
                                            1602 *
00000000                00000000 000000A8   1603 @AUTO#rd_avl_find DSECT
00000000                                    1604          DS    XL168
                                            1605 *
00000F78                00000000 00012806   1606 @CODE    CSECT
                                            1607 *
                                            1608 *
                                            1609 *
                                            1610 * ....... start of rd_list_cnt
00000F78                                    1611 @LNAME791 DS   0H
00000F78 0000000B                           1612          DC    X'0000000B'
00000F7C 99846D9389A2A36D                   1613          DC    C'rd_list_cnt'
00000F87 00                                 1614          DC    X'00'
                                            1615 rd_list_cnt DCCPRLG CINDEX=791,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME791
                                            1616          macro
                                            1617          dccextrn &m
                                            1618          gblc    &$dccext(1000)
                                            1619          gbla    &$dccexti
                                            1620          lcla    &i
                                            1621 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page   38 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1622 &i       seta    1
                                            1623 .loop    aif    (&i gt &$dccexti).around
                                            1624          aif    ('&$dccext(&i)' eq '&m').getout
                                            1625 &i       seta    &i+1
                                            1626          ago     .loop
                                            1627 .around  anop
                                            1628 &$dccexti seta &$dccexti+1
                                            1629          extrn  &m
                                            1630 .getout  anop
                                            1631          mend
00000F88                                    1632+$eye0038    ds    0d                                                    02-DCCCA
00000F88 C4C3C3                             1633+         dc cl3'DCC'                                                    02-DCCCA
00000F8B 01                                 1634+         dc xl1'01' format one                                          02-DCCCA
00000F8C 00000000                           1635+         dc a(0)                                                        02-DCCCA
00000F90 0000000000000000                   1636+         dc ad(0)                                                       02-DCCCA
00000F98 00000000000000A8                   1637+         dc ad(168)                                                     02-DCCCA
00000FA0 0000000000000000                   1638+         dc ad(0)                                                       02-DCCCA
00000FA8 0000000000001000                   1639+         dc ad(4096)                                                    02-DCCCA
00000FB0 20                                 1640+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000FB1 03                                 1641+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000FB2 03                                 1642+         dc al1(3)                                                      02-DCCCA
00000FB3 08                                 1643+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000FB4 00                                 1644+         dc bl.8'00000000'                                              02-DCCCA
00000FB5 000000                             1645+         dc al3(0)                                                      02-DCCCA
00000FB8 0000000000000F78                   1646+         dc ad(@LNAME791)                                               02-DCCCA
00000FC0                                    1647+         ds 0d                                                          02-DCCCA
00000FC0 0000000000000F88                   1648+         dc ad($eye0038)                                                02-DCCCA
00000FC8 0000000000000000                   1649+         dc ad(0)                                                       02-DCCCA
00000FD0                                    1650+         ds    0d                                                       01-DCCPR
00000FD0                                    1651+rd_list_cnt ds 0d                                                       01-DCCPR
00000FD0                                    1652+@REGION_791_1 ds 0h                                                     01-DCCPR
00000FD0 EBEC D008 0024          00000008   1653+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1654 * ******* End of Prologue
                                            1655 * *
                                            1656 * ***           return rl->rl_cnt;
00000FD6 E3F0 1000 0004          00000000   1657          LG    15,0(0,1)   ; rl
00000FDC E3F0 F004 0014          00000004   1658          LGF   15,4(0,15)
                                            1659 * ***   }
                                            1660 * * **** Start of Epilogue
                                            1661          DCCEPIL
00000FE2                                    1662+         ds 0h                                                          01-DCCEP
                                            1663+* Epilog
                                            1664+* Epilog
00000FE2 E3E0 D008 0004          00000008   1665+         lg    14,8(,13) restore the reg                                01-DCCEP
00000FE8 EB1C D020 0004          00000020   1666+         lmg   1,12,32(13)                                              01-DCCEP
00000FEE 07FE                               1667+         br   14                                                        01-DCCEP
                                            1668+* End of Epilog
                                            1669 * * **** End of Epilogue
                                            1670 *
                                            1671 *   DSECT for automatic variables in "rd_list_cnt"
                                            1672 *      (FUNCTION #791)
                                            1673 *
                                                                                                                           Page   39 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                00000000 000000A8   1674 @AUTO#rd_list_cnt DSECT
00000000                                    1675          DS    XL168
                                            1676 *
00000FF0                00000000 00012806   1677 @CODE    CSECT
                                            1678 *
                                            1679 *
                                            1680 *
                                            1681 * ....... start of rd_avg_add
00000FF0                                    1682 @LNAME1272 DS  0H
00000FF0 0000000A                           1683          DC    X'0000000A'
00000FF4 99846D81A5876D81                   1684          DC    C'rd_avg_add'
00000FFE 00                                 1685          DC    X'00'
                                            1686 rd_avg_add DCCPRLG CINDEX=1272,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZARCH,L*
                                                                NAMEADDR=@LNAME1272
                                            1687          macro
                                            1688          dccextrn &m
                                            1689          gblc    &$dccext(1000)
                                            1690          gbla    &$dccexti
                                            1691          lcla    &i
                                            1692 &$dccext(&$dccexti+1) setc    '&m'
                                            1693 &i       seta    1
                                            1694 .loop    aif    (&i gt &$dccexti).around
                                            1695          aif    ('&$dccext(&i)' eq '&m').getout
                                            1696 &i       seta    &i+1
                                            1697          ago     .loop
                                            1698 .around  anop
                                            1699 &$dccexti seta &$dccexti+1
                                            1700          extrn  &m
                                            1701 .getout  anop
                                            1702          mend
00001000                                    1703+$eye0041    ds    0d                                                    02-DCCCA
00001000 C4C3C3                             1704+         dc cl3'DCC'                                                    02-DCCCA
00001003 01                                 1705+         dc xl1'01' format one                                          02-DCCCA
00001004 00000000                           1706+         dc a(0)                                                        02-DCCCA
00001008 0000000000001072                   1707+         dc ad(@PER_1272)                                               02-DCCCA
00001010 00000000000000B8                   1708+         dc ad(184)                                                     02-DCCCA
00001018 0000000000000000                   1709+         dc ad(0)                                                       02-DCCCA
00001020 0000000000001000                   1710+         dc ad(4096)                                                    02-DCCCA
00001028 20                                 1711+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001029 03                                 1712+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000102A 03                                 1713+         dc al1(3)                                                      02-DCCCA
0000102B 08                                 1714+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000102C 00                                 1715+         dc bl.8'00000000'                                              02-DCCCA
0000102D 000000                             1716+         dc al3(0)                                                      02-DCCCA
00001030 0000000000000FF0                   1717+         dc ad(@LNAME1272)                                              02-DCCCA
00001038                                    1718+         ds 0d                                                          02-DCCCA
00001038 0000000000001000                   1719+         dc ad($eye0041)                                                02-DCCCA
00001040 0000000000000000                   1720+         dc ad(0)                                                       02-DCCCA
00001048                                    1721+         ds    0d                                                       01-DCCPR
00001048                                    1722+rd_avg_add ds  0d                                                       01-DCCPR
00001048                                    1723+@REGION_1272_1 ds 0h                                                    01-DCCPR
00001048 EBEC D008 0024          00000008   1724+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page   40 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000104E E3E0 D088 0004          00000088   1725+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001054 E3C0 D090 0004          00000090   1726+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000105A B904 002E                          1727+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000105E E3B0 C018 0004          00000018   1728+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001064 A7EB 00B8               000000B8   1729+         aghi  14,184              increase by frame size               01-DCCPR
00001068 E3E0 C020 0021          00000020   1730+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000106E 4720 B020               00000020   1731+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001072                                    1732+@PER_1272 ds   0h                                                       01-DCCPR
00001072 EBDE 2080 0024          00000080   1733+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001078 E3C0 2090 0024          00000090   1734+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000107E B904 00D2                          1735+         lgr   13,2                set real frame pointer               01-DCCPR
00001082 B904 00CF                          1736+         lgr   12,15               set base reg                         01-DCCPR
                        00001048            1737+         using @REGION_1272_1,12                                        01-DCCPR
                                            1738 * ******* End of Prologue
                                            1739 * *
                                            1740 * ***           mtx_lock(&ra->ra_lock);
00001086 EB23 1000 0004          00000000   1741          LMG   2,3,0(1)    ; ra
0000108C 41F0 2030               00000030   1742          LA    15,48(0,2)
00001090 E3F0 D0A8 0024          000000A8   1743          STG   15,168(0,13)
00001096 4110 D0A8               000000A8   1744          LA    1,168(0,13)
0000109A E3F0 C088 0004          000010D0   1745          LG    15,@lit_1272_40 ; mtx_lock
000010A0                                    1746 @@gen_label53 DS    0H
000010A0 05EF                               1747          BALR  14,15
000010A2                                    1748 @@gen_label54 DS    0H
                                            1749 * ***           if (!ra->ra_enabled) {
000010A2 E3F0 2058 0012          00000058   1750          LT    15,88(0,2)  ; offset of ra_enabled in rd_avg_s
000010A8 4770 C0A0               000010E8   1751          BNZ   @L89
                                            1752 * ***                   mtx_unlock(&ra->ra_lock);
000010AC 41F0 2030               00000030   1753          LA    15,48(0,2)
000010B0 E3F0 D0A8 0024          000000A8   1754          STG   15,168(0,13)
000010B6 4110 D0A8               000000A8   1755          LA    1,168(0,13)
000010BA E3F0 C090 0004          000010D8   1756          LG    15,@lit_1272_41 ; mtx_unlock
000010C0                                    1757 @@gen_label56 DS    0H
000010C0 05EF                               1758          BALR  14,15
000010C2                                    1759 @@gen_label57 DS    0H
                                            1760 * ***                   return;
000010C2 47F0 C11A               00001162   1761          B     @ret_lab_1272
000010C8                                    1762          DS    0D
000010C8 000000B8                           1763 @FRAMESIZE_1272 DC F'184'
000010CC 00000000
000010D0 0000000000000000                   1764 @lit_1272_40 DC AD(mtx_lock)
000010D8 0000000000000000                   1765 @lit_1272_41 DC AD(mtx_unlock)
000010E0 0000000000000000                   1766 @lit_1272_42 DC AD(rd_hdr_histogram_record)
                                            1767 * ***           }
000010E8                                    1768 @L89     DS    0H
                                            1769 * ***      if (v > ra->ra_v.maxv)
000010E8 E330 2000 0020          00000000   1770          CG    3,0(0,2)
000010EE 47D0 C0B0               000010F8   1771          BNH   @L90
                                            1772 * ***         ra->ra_v.maxv = v;
000010F2 E330 2000 0024          00000000   1773          STG   3,0(0,2)    ; ra
000010F8                                    1774 @L90     DS    0H
                                            1775 * ***      if (ra->ra_v.minv == 0 || v < ra->ra_v.minv)
                                                                                                                           Page   41 
  Active Usings: @REGION_1272_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000010F8 E558 2008 0000          00000008   1776          CGHSI 8(2),0
000010FE 4780 C0C4               0000110C   1777          BE    @L92
00001102 E330 2008 0020          00000008   1778          CG    3,8(0,2)
00001108 47B0 C0CA               00001112   1779          BNL   @L91
0000110C                                    1780 @L92     DS    0H
                                            1781 * ***         ra->ra_v.minv = v;
0000110C E330 2008 0024          00000008   1782          STG   3,8(0,2)    ; offset of minv in 0000036
00001112                                    1783 @L91     DS    0H
                                            1784 * ***      ra->ra_v.sum += v;
00001112 B904 00F3                          1785          LGR   15,3
00001116 E3F0 2018 0008          00000018   1786          AG    15,24(0,2)
0000111C E3F0 2018 0024          00000018   1787          STG   15,24(0,2)
                                            1788 * ***      ra->ra_v.cnt++;
00001122 58F0 2020               00000020   1789          L     15,32(0,2)
00001126 A7FA 0001               00000001   1790          AHI   15,1
0000112A 50F0 2020               00000020   1791          ST    15,32(0,2)
                                            1792 * ***
                                            1793 * ***           rd_hdr_histogram_record(ra->ra_hdr, v);
0000112E E3F0 2060 0004          00000060   1794          LG    15,96(0,2)
00001134 E3F0 D0A8 0024          000000A8   1795          STG   15,168(0,13)
0000113A E330 D0B0 0024          000000B0   1796          STG   3,176(0,13)
00001140 4110 D0A8               000000A8   1797          LA    1,168(0,13)
00001144 E3F0 C098 0004          000010E0   1798          LG    15,@lit_1272_42 ; rd_hdr_histogram_record
0000114A                                    1799 @@gen_label61 DS    0H
0000114A 05EF                               1800          BALR  14,15
0000114C                                    1801 @@gen_label62 DS    0H
                                            1802 * ***
                                            1803 * ***           mtx_unlock(&ra->ra_lock);
0000114C 41F0 2030               00000030   1804          LA    15,48(0,2)
00001150 E3F0 D0A8 0024          000000A8   1805          STG   15,168(0,13)
00001156 4110 D0A8               000000A8   1806          LA    1,168(0,13)
0000115A E3F0 C090 0004          000010D8   1807          LG    15,@lit_1272_41 ; mtx_unlock
00001160                                    1808 @@gen_label63 DS    0H
00001160 05EF                               1809          BALR  14,15
00001162                                    1810 @@gen_label64 DS    0H
                                            1811 * ***   }
00001162                                    1812 @ret_lab_1272 DS 0H
                                            1813 * * **** Start of Epilogue
                                            1814          DCCEPIL
00001162                                    1815+         ds 0h                                                          01-DCCEP
                                            1816+* Epilog
00001162 D707 D088 D088 00000088 00000088   1817+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001168 E3D0 D080 0004          00000080   1818+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000116E E3C0 D090 0004          00000090   1819+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001174 E3B0 C018 0004          00000018   1820+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000117A E3C0 B010 0021          00000010   1821+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001180 E3E0 D008 0004          00000008   1822+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001186 EB1C D020 0004          00000020   1823+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000118C 078E                               1824+         bcr 8,14                if same dsab, just return              01-DCCEP
0000118E E3F0 D010 0024          00000010   1825+         stg 15,16(0,13)         save return code                       01-DCCEP
00001194 E300 D018 0024          00000018   1826+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000119A E3F0 D090 0004          00000090   1827+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
                                                                                                                           Page   42 
  Active Usings: @REGION_1272_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000011A0 E3F0 F018 0004          00000018   1828+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000011A6 47F0 F040               00000040   1829+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1830+* End of Epilog
                                            1831 * * **** End of Epilogue
                                            1832          DROP  12
                                            1833 *
                                            1834 *   DSECT for automatic variables in "rd_avg_add"
                                            1835 *      (FUNCTION #1272)
                                            1836 *
00000000                00000000 000000A8   1837 @AUTO#rd_avg_add DSECT
00000000                                    1838          DS    XL168
                                            1839 *
000011AA                00000000 00012806   1840 @CODE    CSECT
                                            1841 *
                                            1842 *
                                            1843 *
                                            1844 * ....... start of rd_slice_abs_offset
000011AA                                    1845 @LNAME1299 DS  0H
000011AA 00000013                           1846          DC    X'00000013'
000011AE 99846DA293898385                   1847          DC    C'rd_slice_abs_offset'
000011C1 00                                 1848          DC    X'00'
                                            1849 rd_slice_abs_offset DCCPRLG CINDEX=1299,BASER=12,FRAME=168,SAVEAREA=NO,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1299
                                            1850          macro
                                            1851          dccextrn &m
                                            1852          gblc    &$dccext(1000)
                                            1853          gbla    &$dccexti
                                            1854          lcla    &i
                                            1855 &$dccext(&$dccexti+1) setc    '&m'
                                            1856 &i       seta    1
                                            1857 .loop    aif    (&i gt &$dccexti).around
                                            1858          aif    ('&$dccext(&i)' eq '&m').getout
                                            1859 &i       seta    &i+1
                                            1860          ago     .loop
                                            1861 .around  anop
                                            1862 &$dccexti seta &$dccexti+1
                                            1863          extrn  &m
                                            1864 .getout  anop
                                            1865          mend
000011C8                                    1866+$eye0044    ds    0d                                                    02-DCCCA
000011C8 C4C3C3                             1867+         dc cl3'DCC'                                                    02-DCCCA
000011CB 01                                 1868+         dc xl1'01' format one                                          02-DCCCA
000011CC 00000000                           1869+         dc a(0)                                                        02-DCCCA
000011D0 0000000000000000                   1870+         dc ad(0)                                                       02-DCCCA
000011D8 00000000000000A8                   1871+         dc ad(168)                                                     02-DCCCA
000011E0 0000000000000000                   1872+         dc ad(0)                                                       02-DCCCA
000011E8 0000000000001000                   1873+         dc ad(4096)                                                    02-DCCCA
000011F0 20                                 1874+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000011F1 03                                 1875+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000011F2 03                                 1876+         dc al1(3)                                                      02-DCCCA
000011F3 08                                 1877+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000011F4 00                                 1878+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   43 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000011F5 000000                             1879+         dc al3(0)                                                      02-DCCCA
000011F8 00000000000011AA                   1880+         dc ad(@LNAME1299)                                              02-DCCCA
00001200                                    1881+         ds 0d                                                          02-DCCCA
00001200 00000000000011C8                   1882+         dc ad($eye0044)                                                02-DCCCA
00001208 0000000000000000                   1883+         dc ad(0)                                                       02-DCCCA
00001210                                    1884+         ds    0d                                                       01-DCCPR
00001210                                    1885+rd_slice_abs_offset ds 0d                                               01-DCCPR
00001210                                    1886+@REGION_1299_1 ds 0h                                                    01-DCCPR
00001210 EBEC D008 0024          00000008   1887+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001216 B904 00CF                          1888+         lgr   12,15               set base reg                         01-DCCPR
                        00001210            1889+         using @REGION_1299_1,12                                        01-DCCPR
                                            1890 * ******* End of Prologue
                                            1891 * *
                                            1892 * ***           if (((!slice->seg)))
0000121A E3F0 1000 0004          00000000   1893          LG    15,0(0,1)   ; slice
00001220 E310 F008 0002          00000008   1894          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
00001226 4770 C024               00001234   1895          BNZ   @L112
                                            1896 * ***                   return slice->end;
0000122A E3F0 F020 0004          00000020   1897          LG    15,32(0,15) ; offset of end in rd_slice_s
00001230 47F0 C03A               0000124A   1898          B     @ret_lab_1299
00001234                                    1899 @L112    DS    0H
                                            1900 * ***
                                            1901 * ***           return slice->seg->seg_absof + slice->rof;
00001234 E310 F008 0004          00000008   1902          LG    1,8(0,15)   ; offset of seg in rd_slice_s
0000123A E310 1028 0004          00000028   1903          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
00001240 E310 F010 000A          00000010   1904          ALG   1,16(0,15)
00001246 B904 00F1                          1905          LGR   15,1
                                            1906 * ***   }
0000124A                                    1907 @ret_lab_1299 DS 0H
                                            1908 * * **** Start of Epilogue
                                            1909          DCCEPIL
0000124A                                    1910+         ds 0h                                                          01-DCCEP
                                            1911+* Epilog
                                            1912+* Epilog
0000124A E3E0 D008 0004          00000008   1913+         lg    14,8(,13) restore the reg                                01-DCCEP
00001250 EB1C D020 0004          00000020   1914+         lmg   1,12,32(13)                                              01-DCCEP
00001256 07FE                               1915+         br   14                                                        01-DCCEP
                                            1916+* End of Epilog
                                            1917 * * **** End of Epilogue
                                            1918          DROP  12
                                            1919 *
                                            1920 *   DSECT for automatic variables in "rd_slice_abs_offset"
                                            1921 *      (FUNCTION #1299)
                                            1922 *
00000000                00000000 000000A8   1923 @AUTO#rd_slice_abs_offset DSECT
00000000                                    1924          DS    XL168
                                            1925 *
00001258                00000000 00012806   1926 @CODE    CSECT
                                            1927 *
                                            1928 *
                                            1929 *
                                            1930 * ....... start of rd_slice_offset
                                                                                                                           Page   44 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001258                                    1931 @LNAME1300 DS  0H
00001258 0000000F                           1932          DC    X'0000000F'
0000125C 99846DA293898385                   1933          DC    C'rd_slice_offset'
0000126B 00                                 1934          DC    X'00'
                                            1935 rd_slice_offset DCCPRLG CINDEX=1300,BASER=12,FRAME=168,SAVEAREA=NO,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1300
                                            1936          macro
                                            1937          dccextrn &m
                                            1938          gblc    &$dccext(1000)
                                            1939          gbla    &$dccexti
                                            1940          lcla    &i
                                            1941 &$dccext(&$dccexti+1) setc    '&m'
                                            1942 &i       seta    1
                                            1943 .loop    aif    (&i gt &$dccexti).around
                                            1944          aif    ('&$dccext(&i)' eq '&m').getout
                                            1945 &i       seta    &i+1
                                            1946          ago     .loop
                                            1947 .around  anop
                                            1948 &$dccexti seta &$dccexti+1
                                            1949          extrn  &m
                                            1950 .getout  anop
                                            1951          mend
00001270                                    1952+$eye0047    ds    0d                                                    02-DCCCA
00001270 C4C3C3                             1953+         dc cl3'DCC'                                                    02-DCCCA
00001273 01                                 1954+         dc xl1'01' format one                                          02-DCCCA
00001274 00000000                           1955+         dc a(0)                                                        02-DCCCA
00001278 0000000000000000                   1956+         dc ad(0)                                                       02-DCCCA
00001280 00000000000000A8                   1957+         dc ad(168)                                                     02-DCCCA
00001288 0000000000000000                   1958+         dc ad(0)                                                       02-DCCCA
00001290 0000000000001000                   1959+         dc ad(4096)                                                    02-DCCCA
00001298 20                                 1960+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001299 03                                 1961+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000129A 03                                 1962+         dc al1(3)                                                      02-DCCCA
0000129B 08                                 1963+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000129C 00                                 1964+         dc bl.8'00000000'                                              02-DCCCA
0000129D 000000                             1965+         dc al3(0)                                                      02-DCCCA
000012A0 0000000000001258                   1966+         dc ad(@LNAME1300)                                              02-DCCCA
000012A8                                    1967+         ds 0d                                                          02-DCCCA
000012A8 0000000000001270                   1968+         dc ad($eye0047)                                                02-DCCCA
000012B0 0000000000000000                   1969+         dc ad(0)                                                       02-DCCCA
000012B8                                    1970+         ds    0d                                                       01-DCCPR
000012B8                                    1971+rd_slice_offset ds 0d                                                   01-DCCPR
000012B8                                    1972+@REGION_1300_1 ds 0h                                                    01-DCCPR
000012B8 EBEC D008 0024          00000008   1973+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000012BE B904 00CF                          1974+         lgr   12,15               set base reg                         01-DCCPR
                        000012B8            1975+         using @REGION_1300_1,12                                        01-DCCPR
                                            1976 * ******* End of Prologue
                                            1977 * *
                                            1978 * ***           if (((!slice->seg)))
000012C2 E3F0 1000 0004          00000000   1979          LG    15,0(0,1)   ; slice
000012C8 E310 F008 0002          00000008   1980          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
000012CE 4770 C02E               000012E6   1981          BNZ   @L113
                                                                                                                           Page   45 
  Active Usings: @REGION_1300_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1982 * ***                   return ((slice)->end - (slice)->start);
000012D2 E310 F020 0004          00000020   1983          LG    1,32(0,15)  ; offset of end in rd_slice_s
000012D8 E310 F018 000B          00000018   1984          SLG   1,24(0,15)
000012DE B904 00F1                          1985          LGR   15,1
000012E2 47F0 C04A               00001302   1986          B     @ret_lab_1300
000012E6                                    1987 @L113    DS    0H
                                            1988 * ***
                                            1989 * ***           return (slice->seg->seg_absof + slice->rof) - slice->s\
                                            1990 * tart;
000012E6 E310 F008 0004          00000008   1991          LG    1,8(0,15)   ; offset of seg in rd_slice_s
000012EC E310 1028 0004          00000028   1992          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
000012F2 E310 F010 000A          00000010   1993          ALG   1,16(0,15)
000012F8 E310 F018 000B          00000018   1994          SLG   1,24(0,15)
000012FE B904 00F1                          1995          LGR   15,1
                                            1996 * ***   }
00001302                                    1997 @ret_lab_1300 DS 0H
                                            1998 * * **** Start of Epilogue
                                            1999          DCCEPIL
00001302                                    2000+         ds 0h                                                          01-DCCEP
                                            2001+* Epilog
                                            2002+* Epilog
00001302 E3E0 D008 0004          00000008   2003+         lg    14,8(,13) restore the reg                                01-DCCEP
00001308 EB1C D020 0004          00000020   2004+         lmg   1,12,32(13)                                              01-DCCEP
0000130E 07FE                               2005+         br   14                                                        01-DCCEP
                                            2006+* End of Epilog
                                            2007 * * **** End of Epilogue
                                            2008          DROP  12
                                            2009 *
                                            2010 *   DSECT for automatic variables in "rd_slice_offset"
                                            2011 *      (FUNCTION #1300)
                                            2012 *
00000000                00000000 000000A8   2013 @AUTO#rd_slice_offset DSECT
00000000                                    2014          DS    XL168
                                            2015 *
00001310                00000000 00012806   2016 @CODE    CSECT
                                            2017 *
                                            2018 *
                                            2019 *
                                            2020 * ....... start of rd_slice_read_varint
00001310                                    2021 @LNAME1309 DS  0H
00001310 00000014                           2022          DC    X'00000014'
00001314 99846DA293898385                   2023          DC    C'rd_slice_read_varint'
00001328 00                                 2024          DC    X'00'
                                            2025 rd_slice_read_varint DCCPRLG CINDEX=1309,BASER=12,FRAME=192,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1309
                                            2026          macro
                                            2027          dccextrn &m
                                            2028          gblc    &$dccext(1000)
                                            2029          gbla    &$dccexti
                                            2030          lcla    &i
                                            2031 &$dccext(&$dccexti+1) setc    '&m'
                                            2032 &i       seta    1
                                                                                                                           Page   46 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2033 .loop    aif    (&i gt &$dccexti).around
                                            2034          aif    ('&$dccext(&i)' eq '&m').getout
                                            2035 &i       seta    &i+1
                                            2036          ago     .loop
                                            2037 .around  anop
                                            2038 &$dccexti seta &$dccexti+1
                                            2039          extrn  &m
                                            2040 .getout  anop
                                            2041          mend
00001330                                    2042+$eye0050    ds    0d                                                    02-DCCCA
00001330 C4C3C3                             2043+         dc cl3'DCC'                                                    02-DCCCA
00001333 01                                 2044+         dc xl1'01' format one                                          02-DCCCA
00001334 00000000                           2045+         dc a(0)                                                        02-DCCCA
00001338 00000000000013A2                   2046+         dc ad(@PER_1309)                                               02-DCCCA
00001340 00000000000000C0                   2047+         dc ad(192)                                                     02-DCCCA
00001348 0000000000000000                   2048+         dc ad(0)                                                       02-DCCCA
00001350 0000000000001000                   2049+         dc ad(4096)                                                    02-DCCCA
00001358 20                                 2050+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001359 03                                 2051+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000135A 03                                 2052+         dc al1(3)                                                      02-DCCCA
0000135B 08                                 2053+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000135C 00                                 2054+         dc bl.8'00000000'                                              02-DCCCA
0000135D 000000                             2055+         dc al3(0)                                                      02-DCCCA
00001360 0000000000001310                   2056+         dc ad(@LNAME1309)                                              02-DCCCA
00001368                                    2057+         ds 0d                                                          02-DCCCA
00001368 0000000000001330                   2058+         dc ad($eye0050)                                                02-DCCCA
00001370 0000000000000000                   2059+         dc ad(0)                                                       02-DCCCA
00001378                                    2060+         ds    0d                                                       01-DCCPR
00001378                                    2061+rd_slice_read_varint ds 0d                                              01-DCCPR
00001378                                    2062+@REGION_1309_1 ds 0h                                                    01-DCCPR
00001378 EBEC D008 0024          00000008   2063+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000137E E3E0 D088 0004          00000088   2064+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001384 E3C0 D090 0004          00000090   2065+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000138A B904 002E                          2066+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000138E E3B0 C018 0004          00000018   2067+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001394 A7EB 00C0               000000C0   2068+         aghi  14,192              increase by frame size               01-DCCPR
00001398 E3E0 C020 0021          00000020   2069+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000139E 4720 B020               00000020   2070+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000013A2                                    2071+@PER_1309 ds   0h                                                       01-DCCPR
000013A2 EBDE 2080 0024          00000080   2072+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000013A8 E3C0 2090 0024          00000090   2073+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000013AE B904 00D2                          2074+         lgr   13,2                set real frame pointer               01-DCCPR
000013B2 B904 00CF                          2075+         lgr   12,15               set base reg                         01-DCCPR
                        00001378            2076+         using @REGION_1309_1,12                                        01-DCCPR
000013B6 B904 0021                          2077          LGR   2,1         ; ptr to parm area
                                            2078 * ******* End of Prologue
                                            2079 * *
                                            2080 * ***           size_t r;
                                            2081 * ***           uint64_t unum;
                                            2082 * ***
                                            2083 * ***           r = rd_slice_read_uvarint(slice, &unum);
000013BA E3F0 2000 0004          00000000   2084          LG    15,0(0,2)   ; slice
                                                                                                                           Page   47 
  Active Usings: @REGION_1309_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000013C0 E3F0 D0B0 0024          000000B0   2085          STG   15,176(0,13)
000013C6 41F0 D0A8               000000A8   2086          LA    15,168(0,13)
000013CA E3F0 D0B8 0024          000000B8   2087          STG   15,184(0,13)
000013D0 4110 D0B0               000000B0   2088          LA    1,176(0,13)
000013D4 E3F0 C0E8 0004          00001460   2089          LG    15,@lit_1309_45 ; rd_slice_read_uvarint
000013DA                                    2090 @@gen_label67 DS    0H
000013DA 05EF                               2091          BALR  14,15
000013DC                                    2092 @@gen_label68 DS    0H
                                            2093 * ***           if (((r > 0))) {
000013DC C2FE 0000 0000                     2094          CLGFI 15,X'00000000'
000013E2 47D0 C094               0000140C   2095          BNH   @L114
                                            2096 * ***
                                            2097 * ***                   *nump = (int64_t)((unum >> 1) ^
                                            2098 * ***                                     -(int64_t)(unum & 1));
000013E6 E310 2008 0004          00000008   2099          LG    1,8(0,2)    ; nump
000013EC E320 D0A8 0004          000000A8   2100          LG    2,168(0,13) ; unum
000013F2 EB32 0001 000C          00000001   2101          SRLG  3,2,1(0)
000013F8 E320 C0F0 0080          00001468   2102          NG    2,@lit_1309_46
000013FE B903 0022                          2103          LCGR  2,2
00001402 B982 0032                          2104          XGR   3,2
00001406 E330 1000 0024          00000000   2105          STG   3,0(0,1)    ; nump
                                            2106 * ***           }
0000140C                                    2107 @L114    DS    0H
                                            2108 * ***
                                            2109 * ***           return r;
                                            2110 * ***   }
                                            2111 * * **** Start of Epilogue
                                            2112          DCCEPIL
0000140C                                    2113+         ds 0h                                                          01-DCCEP
                                            2114+* Epilog
0000140C D707 D088 D088 00000088 00000088   2115+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001412 E3D0 D080 0004          00000080   2116+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001418 E3C0 D090 0004          00000090   2117+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000141E E3B0 C018 0004          00000018   2118+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001424 E3C0 B010 0021          00000010   2119+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000142A E3E0 D008 0004          00000008   2120+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001430 EB1C D020 0004          00000020   2121+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001436 078E                               2122+         bcr 8,14                if same dsab, just return              01-DCCEP
00001438 E3F0 D010 0024          00000010   2123+         stg 15,16(0,13)         save return code                       01-DCCEP
0000143E E300 D018 0024          00000018   2124+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001444 E3F0 D090 0004          00000090   2125+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000144A E3F0 F018 0004          00000018   2126+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001450 47F0 F040               00000040   2127+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2128+* End of Epilog
                                            2129 * * **** End of Epilogue
00001458                                    2130          DS    0D
00001458 000000C0                           2131 @FRAMESIZE_1309 DC F'192'
0000145C 00000000
00001460 0000000000000000                   2132 @lit_1309_45 DC AD(rd_slice_read_uvarint)
00001468 0000000000000001                   2133 @lit_1309_46 DC FD'1' 0x0000000000000001
                                            2134          DROP  12
                                            2135 *
                                                                                                                           Page   48 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2136 *   DSECT for automatic variables in "rd_slice_read_varint"
                                            2137 *      (FUNCTION #1309)
                                            2138 *
00000000                00000000 000000B0   2139 @AUTO#rd_slice_read_varint DSECT
00000000                                    2140          DS    XL168
000000A8                                    2141 rd_slice_read_varint#unum#0 DS 8XL1 ; unum
000000B0                000000B0 000000A8   2142          ORG   @AUTO#rd_slice_read_varint+168
000000A8                                    2143 rd_slice_read_varint#r#0 DS 8XL1 ; r
                                            2144 *
00001470                00000000 00012806   2145 @CODE    CSECT
                                            2146 *
                                            2147 *
                                            2148 *
                                            2149 * ....... start of rd_kafka_ApiKey2str
00001470                                    2150 @LNAME1327 DS  0H
00001470 00000013                           2151          DC    X'00000013'
00001474 99846D9281869281                   2152          DC    C'rd_kafka_ApiKey2str'
00001487 00                                 2153          DC    X'00'
                                            2154 rd_kafka_$Api$Key2str DCCPRLG CINDEX=1327,BASER=12,FRAME=200,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1327
                                            2155          macro
                                            2156          dccextrn &m
                                            2157          gblc    &$dccext(1000)
                                            2158          gbla    &$dccexti
                                            2159          lcla    &i
                                            2160 &$dccext(&$dccexti+1) setc    '&m'
                                            2161 &i       seta    1
                                            2162 .loop    aif    (&i gt &$dccexti).around
                                            2163          aif    ('&$dccext(&i)' eq '&m').getout
                                            2164 &i       seta    &i+1
                                            2165          ago     .loop
                                            2166 .around  anop
                                            2167 &$dccexti seta &$dccexti+1
                                            2168          extrn  &m
                                            2169 .getout  anop
                                            2170          mend
00001488                                    2171+$eye0053    ds    0d                                                    02-DCCCA
00001488 C4C3C3                             2172+         dc cl3'DCC'                                                    02-DCCCA
0000148B 01                                 2173+         dc xl1'01' format one                                          02-DCCCA
0000148C 00000000                           2174+         dc a(0)                                                        02-DCCCA
00001490 00000000000014FA                   2175+         dc ad(@PER_1327)                                               02-DCCCA
00001498 00000000000000C8                   2176+         dc ad(200)                                                     02-DCCCA
000014A0 0000000000000000                   2177+         dc ad(0)                                                       02-DCCCA
000014A8 0000000000001000                   2178+         dc ad(4096)                                                    02-DCCCA
000014B0 20                                 2179+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000014B1 03                                 2180+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000014B2 03                                 2181+         dc al1(3)                                                      02-DCCCA
000014B3 08                                 2182+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000014B4 00                                 2183+         dc bl.8'00000000'                                              02-DCCCA
000014B5 000000                             2184+         dc al3(0)                                                      02-DCCCA
000014B8 0000000000001470                   2185+         dc ad(@LNAME1327)                                              02-DCCCA
000014C0                                    2186+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   49 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000014C0 0000000000001488                   2187+         dc ad($eye0053)                                                02-DCCCA
000014C8 0000000000000000                   2188+         dc ad(0)                                                       02-DCCCA
000014D0                                    2189+         ds    0d                                                       01-DCCPR
000014D0                                    2190+rd_kafka_$Api$Key2str ds 0d                                             01-DCCPR
000014D0                                    2191+@REGION_1327_1 ds 0h                                                    01-DCCPR
000014D0 EBEC D008 0024          00000008   2192+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000014D6 E3E0 D088 0004          00000088   2193+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000014DC E3C0 D090 0004          00000090   2194+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000014E2 B904 002E                          2195+         lgr   2,14                copy addr of our savearea            01-DCCPR
000014E6 E3B0 C018 0004          00000018   2196+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000014EC A7EB 00C8               000000C8   2197+         aghi  14,200              increase by frame size               01-DCCPR
000014F0 E3E0 C020 0021          00000020   2198+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000014F6 4720 B020               00000020   2199+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000014FA                                    2200+@PER_1327 ds   0h                                                       01-DCCPR
000014FA EBDE 2080 0024          00000080   2201+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001500 E3C0 2090 0024          00000090   2202+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001506 B904 00D2                          2203+         lgr   13,2                set real frame pointer               01-DCCPR
0000150A B904 00CF                          2204+         lgr   12,15               set base reg                         01-DCCPR
                        000014D0            2205+         using @REGION_1327_1,12                                        01-DCCPR
                                            2206          DCCPRV REG=15     ; Get PRV from DVT
0000150E E3F0 B008 0004          00000008   2207+         LG 15,8(0,11)                                                  01-DCCPR
                                            2208 * ******* End of Prologue
                                            2209 * *
                                            2210 * ***           static const char *names[] = {
                                            2211 * ***                   [0] = "Produce",
                                            2212 * ***                   [1] = "Fetch",
                                            2213 * ***                   [2] = "Offset",
                                            2214 * ***                   [3] = "Metadata",
                                            2215 * ***                   [4] = "LeaderAndIsr",
                                            2216 * ***                   [5] = "StopReplica",
                                            2217 * ***                   [6] = "UpdateMetadata",
                                            2218 * ***                   [7] = "ControlledShutdown",
                                            2219 * ***                   [8] = "OffsetCommit",
                                            2220 * ***                   [9] = "OffsetFetch",
                                            2221 * ***                   [10] = "FindCoordinator",
                                            2222 * ***                   [11] = "JoinGroup",
                                            2223 * ***                   [12] = "Heartbeat",
                                            2224 * ***                   [13] = "LeaveGroup",
                                            2225 * ***                   [14] = "SyncGroup",
                                            2226 * ***                   [15] = "DescribeGroups",
                                            2227 * ***                   [16] = "ListGroups",
                                            2228 * ***                   [17] = "SaslHandshake",
                                            2229 * ***                   [18] = "ApiVersion",
                                            2230 * ***                   [19] = "CreateTopics",
                                            2231 * ***                   [20] = "DeleteTopics",
                                            2232 * ***                   [21] = "DeleteRecords",
                                            2233 * ***                   [22] = "InitProducerId",
                                            2234 * ***                   [23] = "OffsetForLeaderEpoch",
                                            2235 * ***                   [24] = "AddPartitionsToTxn",
                                            2236 * ***                   [25] = "AddOffsetsToTxn",
                                            2237 * ***                   [26] = "EndTxn",
                                            2238 * ***                   [27] = "WriteTxnMarkers",
                                                                                                                           Page   50 
  Active Usings: @REGION_1327_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2239 * ***                   [28] = "TxnOffsetCommit",
                                            2240 * ***                   [29] = "DescribeAcls",
                                            2241 * ***                   [30] = "CreateAcls",
                                            2242 * ***                   [31] = "DeleteAcls",
                                            2243 * ***                   [32] = "DescribeConfigs",
                                            2244 * ***                   [33] = "AlterConfigs",
                                            2245 * ***                   [34] = "AlterReplicaLogDirs",
                                            2246 * ***                   [35] = "DescribeLogDirs",
                                            2247 * ***                   [36] = "SaslAuthenticate",
                                            2248 * ***                   [37] = "CreatePartitions",
                                            2249 * ***                   [38] = "CreateDelegationToken",
                                            2250 * ***                   [39] = "RenewDelegationToken",
                                            2251 * ***                   [40] = "ExpireDelegationToken",
                                            2252 * ***                   [41] = "DescribeDelegationToken",
                                            2253 * ***                   [42] = "DeleteGroups",
                                            2254 * ***                   [43] = "ElectLeadersRequest",
                                            2255 * ***                   [44] =
                                            2256 * ***                   "IncrementalAlterConfigsRequest",
                                            2257 * ***                   [45] =
                                            2258 * ***                   "AlterPartitionReassignmentsRequest",
                                            2259 * ***                   [46] =
                                            2260 * ***                   "ListPartitionReassignmentsRequest",
                                            2261 * ***                   [47] = "OffsetDeleteRequest",
                                            2262 * ***                   [48] =
                                            2263 * ***                   "DescribeClientQuotasRequest",
                                            2264 * ***                   [49] =
                                            2265 * ***                   "AlterClientQuotasRequest",
                                            2266 * ***                   [50] =
                                            2267 * ***                   "DescribeUserScramCredentialsRequest",
                                            2268 * ***                   [51] =
                                            2269 * ***                   "AlterUserScramCredentialsRequest",
                                            2270 * ***                   [52] = "VoteRequest",
                                            2271 * ***                   [53] = "BeginQuorumEpochRequest",
                                            2272 * ***                   [54] = "EndQuorumEpochRequest",
                                            2273 * ***                   [55] = "DescribeQuorumRequest",
                                            2274 * ***                   [56] = "AlterIsrRequest",
                                            2275 * ***                   [57] = "UpdateFeaturesRequest",
                                            2276 * ***                   [58] = "EnvelopeRequest",
                                            2277 * ***           };
                                            2278 * ***           static  char ret[64];
                                            2279 * ***
                                            2280 * ***           if (ApiKey < 0 || ApiKey >= (int)(sizeof((names)) / si\
                                            2281 * zeof(*(names))) ||
00001514 4820 1006               00000006   2282          LH    2,6(0,1)    ; ApiKey
00001518 1222                               2283          LTR   2,2
0000151A 4740 C07A               0000154A   2284          BL    @L129
0000151E 4820 1006               00000006   2285          LH    2,6(0,1)    ; ApiKey
00001522 A72E 003B               0000003B   2286          CHI   2,59
00001526 47B0 C07A               0000154A   2287          BNL   @L129
0000152A                                    2288 @L127    DS    0H
                                            2289 * ***               !names[ApiKey]) {
0000152A E320 1006 0015          00000006   2290          LGH   2,6(0,1)    ; ApiKey
                                                                                                                           Page   51 
  Active Usings: @REGION_1327_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001530 E330 C0CC 0014          0000159C   2291          LGF   3,@lit_1327_48
00001536 4133 F000               00000000   2292          LA    3,0(3,15)
0000153A EB22 0003 000D          00000003   2293          SLLG  2,2,3(0)    ; *0x8
00001540 E322 3220 0002          00000220   2294          LTG   2,544(2,3)
00001546 4770 C0E0               000015B0   2295          BNZ   @L128
0000154A                                    2296 @L129    DS    0H
                                            2297 * ***                   snprintf(ret, sizeof(ret), "Unknown-%hd?", Api\
                                            2298 * Key);
0000154A E320 C0CC 0014          0000159C   2299          LGF   2,@lit_1327_48
00001550 4122 F000               00000000   2300          LA    2,0(2,15)
00001554 41F0 23F8               000003F8   2301          LA    15,1016(0,2)
00001558 E3F0 D0A8 0024          000000A8   2302          STG   15,168(0,13)
0000155E E548 D0B0 0040          000000B0   2303          MVGHI 176(13),64
00001564 E3F0 C0D8 0004          000015A8   2304          LG    15,@lit_1327_50
0000156A 41F0 F046               00000046   2305          LA    15,70(0,15)
0000156E E3F0 D0B8 0024          000000B8   2306          STG   15,184(0,13)
00001574 48F0 1006               00000006   2307          LH    15,6(0,1)   ; ApiKey
00001578 B914 00FF                          2308          LGFR  15,15
0000157C E3F0 D0C0 0024          000000C0   2309          STG   15,192(0,13)
00001582 4110 D0A8               000000A8   2310          LA    1,168(0,13)
00001586 E3F0 C0D0 0004          000015A0   2311          LG    15,@lit_1327_51 ; snprintf
0000158C                                    2312 @@gen_label73 DS    0H
0000158C 05EF                               2313          BALR  14,15
0000158E                                    2314 @@gen_label74 DS    0H
                                            2315 * ***                   return ret;
0000158E 41F0 23F8               000003F8   2316          LA    15,1016(0,2)
00001592 47F0 C0F2               000015C2   2317          B     @ret_lab_1327
00001598                                    2318          DS    0D
00001598 000000C8                           2319 @FRAMESIZE_1327 DC F'200'
0000159C 00000000                           2320 @lit_1327_48 DC Q(@@STATIC)
000015A0 0000000000000000                   2321 @lit_1327_51 DC AD(snprintf)
000015A8 0000000000012AB8                   2322 @lit_1327_50 DC AD(@strings@)
                                            2323 * ***           }
000015B0                                    2324 @L128    DS    0H
                                            2325 * ***
                                            2326 * ***           return names[ApiKey];
000015B0 E3F0 1006 0015          00000006   2327          LGH   15,6(0,1)   ; ApiKey
000015B6 EBFF 0003 000D          00000003   2328          SLLG  15,15,3(0)  ; *0x8
000015BC E3FF 3220 0004          00000220   2329          LG    15,544(15,3)
                                            2330 * ***   }
000015C2                                    2331 @ret_lab_1327 DS 0H
                                            2332 * * **** Start of Epilogue
                                            2333          DCCEPIL
000015C2                                    2334+         ds 0h                                                          01-DCCEP
                                            2335+* Epilog
000015C2 D707 D088 D088 00000088 00000088   2336+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000015C8 E3D0 D080 0004          00000080   2337+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000015CE E3C0 D090 0004          00000090   2338+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000015D4 E3B0 C018 0004          00000018   2339+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000015DA E3C0 B010 0021          00000010   2340+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000015E0 E3E0 D008 0004          00000008   2341+         lg  14,8(0,13)          load up return address                 01-DCCEP
000015E6 EB1C D020 0004          00000020   2342+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page   52 
  Active Usings: @REGION_1327_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000015EC 078E                               2343+         bcr 8,14                if same dsab, just return              01-DCCEP
000015EE E3F0 D010 0024          00000010   2344+         stg 15,16(0,13)         save return code                       01-DCCEP
000015F4 E300 D018 0024          00000018   2345+         stg 0,24(0,13)          save more return code                  01-DCCEP
000015FA E3F0 D090 0004          00000090   2346+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001600 E3F0 F018 0004          00000018   2347+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001606 47F0 F040               00000040   2348+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2349+* End of Epilog
                                            2350 * * **** End of Epilogue
                                            2351          DROP  12
                                            2352 *
                                            2353 *   DSECT for automatic variables in "rd_kafka_ApiKey2str"
                                            2354 *      (FUNCTION #1327)
                                            2355 *
00000000                00000000 000000A8   2356 @AUTO#rd_kafka_$Api$Key2str DSECT
00000000                                    2357          DS    XL168
                                            2358 *
0000160A                00000000 00012806   2359 @CODE    CSECT
                                            2360 *
                                            2361 *
                                            2362 *
                                            2363 * ....... start of rd_strlcpy
0000160A                                    2364 @LNAME1397 DS  0H
0000160A 0000000A                           2365          DC    X'0000000A'
0000160E 99846DA2A3999383                   2366          DC    C'rd_strlcpy'
00001618 00                                 2367          DC    X'00'
                                            2368 rd_strlcpy DCCPRLG CINDEX=1397,BASER=12,FRAME=176,SAVEAREA=NO,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1397
                                            2369          macro
                                            2370          dccextrn &m
                                            2371          gblc    &$dccext(1000)
                                            2372          gbla    &$dccexti
                                            2373          lcla    &i
                                            2374 &$dccext(&$dccexti+1) setc    '&m'
                                            2375 &i       seta    1
                                            2376 .loop    aif    (&i gt &$dccexti).around
                                            2377          aif    ('&$dccext(&i)' eq '&m').getout
                                            2378 &i       seta    &i+1
                                            2379          ago     .loop
                                            2380 .around  anop
                                            2381 &$dccexti seta &$dccexti+1
                                            2382          extrn  &m
                                            2383 .getout  anop
                                            2384          mend
00001620                                    2385+$eye0057    ds    0d                                                    02-DCCCA
00001620 C4C3C3                             2386+         dc cl3'DCC'                                                    02-DCCCA
00001623 01                                 2387+         dc xl1'01' format one                                          02-DCCCA
00001624 00000000                           2388+         dc a(0)                                                        02-DCCCA
00001628 0000000000000000                   2389+         dc ad(0)                                                       02-DCCCA
00001630 00000000000000B0                   2390+         dc ad(176)                                                     02-DCCCA
00001638 0000000000000000                   2391+         dc ad(0)                                                       02-DCCCA
00001640 0000000000001000                   2392+         dc ad(4096)                                                    02-DCCCA
00001648 20                                 2393+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page   53 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001649 03                                 2394+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000164A 03                                 2395+         dc al1(3)                                                      02-DCCCA
0000164B 08                                 2396+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000164C 00                                 2397+         dc bl.8'00000000'                                              02-DCCCA
0000164D 000000                             2398+         dc al3(0)                                                      02-DCCCA
00001650 000000000000160A                   2399+         dc ad(@LNAME1397)                                              02-DCCCA
00001658                                    2400+         ds 0d                                                          02-DCCCA
00001658 0000000000001620                   2401+         dc ad($eye0057)                                                02-DCCCA
00001660 0000000000000000                   2402+         dc ad(0)                                                       02-DCCCA
00001668                                    2403+         ds    0d                                                       01-DCCPR
00001668                                    2404+rd_strlcpy ds  0d                                                       01-DCCPR
00001668                                    2405+@REGION_1397_1 ds 0h                                                    01-DCCPR
00001668 EBEC D008 0024          00000008   2406+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000166E B904 00CF                          2407+         lgr   12,15               set base reg                         01-DCCPR
                        00001668            2408+         using @REGION_1397_1,12                                        01-DCCPR
                                            2409 * ******* End of Prologue
                                            2410 * *
00001672 E3F0 1010 0004          00000010   2411          LG    15,16(0,1)  ; dstsize
                                            2412 * ***
                                            2413 * ***
                                            2414 * ***
                                            2415 * ***           if (((dstsize > 0))) {
00001678 C2FE 0000 0000                     2416          CLGFI 15,X'00000000'
0000167E 47D0 C0A6               0000170E   2417          BNH   @ret_lab_1397
                                            2418 * ***                   size_t srclen = __strlen(src);
00001682 E320 1008 0004          00000008   2419          LG    2,8(0,1)
00001688 B904 0032                          2420          LGR   3,2
0000168C A709 0000               00000000   2421          LGHI  0,0
00001690                                    2422 @@gen_label76 DS 0H
00001690 B25E 0002                          2423          SRST  0,2
00001694 4710 C028               00001690   2424          BC  1,@@gen_label76
00001698 B90B 0003                          2425          SLGR  0,3
                                            2426 * ***                   size_t copylen = ((srclen) < (dstsize-1) ? (sr\
                                            2427 * clen) : (dstsize-1));
0000169C B904 002F                          2428          LGR   2,15
000016A0 A72B FFFF               0000FFFF   2429          AGHI  2,-1
000016A4 B921 0002                          2430          CLGR  0,2
000016A8 47B0 C056               000016BE   2431          BNL   @L262
000016AC B904 00F0                          2432          LGR   15,0
000016B0 47F0 C05A               000016C2   2433          B     @L263
000016B8                                    2434          DS    0D
000016B8 D200 4000 3000 00000000 00000000   2435 @lit_1397_53          MVC 0(1,4),0(3)
000016BE                                    2436 @L262    DS    0H
000016BE A7FB FFFF               0000FFFF   2437          AGHI  15,-1
000016C2                                    2438 @L263    DS    0H
                                            2439 * ***                   __memcpy(dst,src,copylen);
000016C2 E330 1008 0004          00000008   2440          LG    3,8(0,1)
000016C8 E340 1000 0004          00000000   2441          LG    4,0(0,1)
000016CE B902 002F                          2442          LTGR  2,15
000016D2 4780 C098               00001700   2443          BZ    @@gen_label80
000016D6 A72B FFFF               0000FFFF   2444          AGHI  2,-1
000016DA EB52 0008 000A          00000008   2445          SRAG  5,2,8(0)
                                                                                                                           Page   54 
  Active Usings: @REGION_1397_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000016E0 B902 0055                          2446          LTGR  5,5
000016E4 4780 C094               000016FC   2447          BZ    @@gen_label79
000016E8                                    2448 @@gen_label78 DS 0H
000016E8 D2FF 4000 3000 00000000 00000000   2449          MVC   0(256,4),0(3)
000016EE 4140 4100               00000100   2450          LA    4,256(0,4)
000016F2 4130 3100               00000100   2451          LA    3,256(0,3)
000016F6 E350 C080 0046          000016E8   2452          BCTG  5,@@gen_label78
000016FC                                    2453 @@gen_label79 DS 0H
000016FC 4420 C050               000016B8   2454          EX    2,@lit_1397_53
00001700                                    2455 @@gen_label80 DS 0H
                                            2456 * ***                   dst[copylen] = '\0';
00001700 E310 1000 0004          00000000   2457          LG    1,0(0,1)    ; dst
00001706 41FF 1000               00000000   2458          LA    15,0(15,1)
0000170A 9200 F000      00000000 00000000   2459          MVI   0(15),0
                                            2460 * ***           }
0000170E                                    2461 @L261    DS    0H
                                            2462 * ***
                                            2463 * ***   }
0000170E                                    2464 @ret_lab_1397 DS 0H
                                            2465 * * **** Start of Epilogue
                                            2466          DCCEPIL
0000170E                                    2467+         ds 0h                                                          01-DCCEP
                                            2468+* Epilog
                                            2469+* Epilog
0000170E E3E0 D008 0004          00000008   2470+         lg    14,8(,13) restore the reg                                01-DCCEP
00001714 EB1C D020 0004          00000020   2471+         lmg   1,12,32(13)                                              01-DCCEP
0000171A 07FE                               2472+         br   14                                                        01-DCCEP
                                            2473+* End of Epilog
                                            2474 * * **** End of Epilogue
                                            2475          DROP  12
                                            2476 *
                                            2477 *   DSECT for automatic variables in "rd_strlcpy"
                                            2478 *      (FUNCTION #1397)
                                            2479 *
00000000                00000000 000000B0   2480 @AUTO#rd_strlcpy DSECT
00000000                                    2481          DS    XL168
000000A8                                    2482 rd_strlcpy#copylen#1 DS 8XL1 ; copylen
000000B0                000000B0 000000A8   2483          ORG   @AUTO#rd_strlcpy+168
000000A8                                    2484 rd_strlcpy#srclen#1 DS 8XL1 ; srclen
                                            2485 *
0000171C                00000000 00012806   2486 @CODE    CSECT
                                            2487 *
                                            2488 *
                                            2489 *
                                            2490 * ....... start of rd_kafka_q_keep
0000171C                                    2491 @LNAME1441 DS  0H
0000171C 0000000F                           2492          DC    X'0000000F'
00001720 99846D9281869281                   2493          DC    C'rd_kafka_q_keep'
0000172F 00                                 2494          DC    X'00'
                                            2495 rd_kafka_q_keep DCCPRLG CINDEX=1441,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1441
                                            2496          macro
                                                                                                                           Page   55 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2497          dccextrn &m
                                            2498          gblc    &$dccext(1000)
                                            2499          gbla    &$dccexti
                                            2500          lcla    &i
                                            2501 &$dccext(&$dccexti+1) setc    '&m'
                                            2502 &i       seta    1
                                            2503 .loop    aif    (&i gt &$dccexti).around
                                            2504          aif    ('&$dccext(&i)' eq '&m').getout
                                            2505 &i       seta    &i+1
                                            2506          ago     .loop
                                            2507 .around  anop
                                            2508 &$dccexti seta &$dccexti+1
                                            2509          extrn  &m
                                            2510 .getout  anop
                                            2511          mend
00001730                                    2512+$eye0060    ds    0d                                                    02-DCCCA
00001730 C4C3C3                             2513+         dc cl3'DCC'                                                    02-DCCCA
00001733 01                                 2514+         dc xl1'01' format one                                          02-DCCCA
00001734 00000000                           2515+         dc a(0)                                                        02-DCCCA
00001738 00000000000017A2                   2516+         dc ad(@PER_1441)                                               02-DCCCA
00001740 00000000000000B0                   2517+         dc ad(176)                                                     02-DCCCA
00001748 0000000000000000                   2518+         dc ad(0)                                                       02-DCCCA
00001750 0000000000001000                   2519+         dc ad(4096)                                                    02-DCCCA
00001758 20                                 2520+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001759 03                                 2521+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000175A 03                                 2522+         dc al1(3)                                                      02-DCCCA
0000175B 08                                 2523+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000175C 00                                 2524+         dc bl.8'00000000'                                              02-DCCCA
0000175D 000000                             2525+         dc al3(0)                                                      02-DCCCA
00001760 000000000000171C                   2526+         dc ad(@LNAME1441)                                              02-DCCCA
00001768                                    2527+         ds 0d                                                          02-DCCCA
00001768 0000000000001730                   2528+         dc ad($eye0060)                                                02-DCCCA
00001770 0000000000000000                   2529+         dc ad(0)                                                       02-DCCCA
00001778                                    2530+         ds    0d                                                       01-DCCPR
00001778                                    2531+rd_kafka_q_keep ds 0d                                                   01-DCCPR
00001778                                    2532+@REGION_1441_1 ds 0h                                                    01-DCCPR
00001778 EBEC D008 0024          00000008   2533+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000177E E3E0 D088 0004          00000088   2534+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001784 E3C0 D090 0004          00000090   2535+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000178A B904 002E                          2536+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000178E E3B0 C018 0004          00000018   2537+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001794 A7EB 00B0               000000B0   2538+         aghi  14,176              increase by frame size               01-DCCPR
00001798 E3E0 C020 0021          00000020   2539+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000179E 4720 B020               00000020   2540+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000017A2                                    2541+@PER_1441 ds   0h                                                       01-DCCPR
000017A2 EBDE 2080 0024          00000080   2542+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000017A8 E3C0 2090 0024          00000090   2543+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000017AE B904 00D2                          2544+         lgr   13,2                set real frame pointer               01-DCCPR
000017B2 B904 00CF                          2545+         lgr   12,15               set base reg                         01-DCCPR
                        00001778            2546+         using @REGION_1441_1,12                                        01-DCCPR
                                            2547 * ******* End of Prologue
                                            2548 * *
                                                                                                                           Page   56 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2549 * ***           mtx_lock(&rkq->rkq_lock);
000017B6 E320 1000 0004          00000000   2550          LG    2,0(0,1)    ; rkq
000017BC E320 D0A8 0024          000000A8   2551          STG   2,168(0,13)
000017C2 4110 D0A8               000000A8   2552          LA    1,168(0,13)
000017C6 E3F0 C0C8 0004          00001840   2553          LG    15,@lit_1441_54 ; mtx_lock
000017CC                                    2554 @@gen_label81 DS    0H
000017CC 05EF                               2555          BALR  14,15
000017CE                                    2556 @@gen_label82 DS    0H
                                            2557 * ***           rkq->rkq_refcnt++;
000017CE 58F0 2080               00000080   2558          L     15,128(0,2)
000017D2 A7FA 0001               00000001   2559          AHI   15,1
000017D6 50F0 2080               00000080   2560          ST    15,128(0,2)
                                            2561 * ***           mtx_unlock(&rkq->rkq_lock);
000017DA E320 D0A8 0024          000000A8   2562          STG   2,168(0,13)
000017E0 4110 D0A8               000000A8   2563          LA    1,168(0,13)
000017E4 E3F0 C0D0 0004          00001848   2564          LG    15,@lit_1441_55 ; mtx_unlock
000017EA                                    2565 @@gen_label83 DS    0H
000017EA 05EF                               2566          BALR  14,15
000017EC                                    2567 @@gen_label84 DS    0H
                                            2568 * ***      return rkq;
000017EC B904 00F2                          2569          LGR   15,2
                                            2570 * ***   }
                                            2571 * * **** Start of Epilogue
                                            2572          DCCEPIL
000017F0                                    2573+         ds 0h                                                          01-DCCEP
                                            2574+* Epilog
000017F0 D707 D088 D088 00000088 00000088   2575+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000017F6 E3D0 D080 0004          00000080   2576+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000017FC E3C0 D090 0004          00000090   2577+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001802 E3B0 C018 0004          00000018   2578+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001808 E3C0 B010 0021          00000010   2579+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000180E E3E0 D008 0004          00000008   2580+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001814 EB1C D020 0004          00000020   2581+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000181A 078E                               2582+         bcr 8,14                if same dsab, just return              01-DCCEP
0000181C E3F0 D010 0024          00000010   2583+         stg 15,16(0,13)         save return code                       01-DCCEP
00001822 E300 D018 0024          00000018   2584+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001828 E3F0 D090 0004          00000090   2585+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000182E E3F0 F018 0004          00000018   2586+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001834 47F0 F040               00000040   2587+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2588+* End of Epilog
                                            2589 * * **** End of Epilogue
00001838                                    2590          DS    0D
00001838 000000B0                           2591 @FRAMESIZE_1441 DC F'176'
0000183C 00000000
00001840 0000000000000000                   2592 @lit_1441_54 DC AD(mtx_lock)
00001848 0000000000000000                   2593 @lit_1441_55 DC AD(mtx_unlock)
                                            2594          DROP  12
                                            2595 *
                                            2596 *   DSECT for automatic variables in "rd_kafka_q_keep"
                                            2597 *      (FUNCTION #1441)
                                            2598 *
00000000                00000000 000000A8   2599 @AUTO#rd_kafka_q_keep DSECT
                                                                                                                           Page   57 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                                    2600          DS    XL168
                                            2601 *
00001850                00000000 00012806   2602 @CODE    CSECT
                                            2603 *
                                            2604 *
                                            2605 *
                                            2606 * ....... start of rd_kafka_q_disable0
00001850                                    2607 @LNAME1445 DS  0H
00001850 00000013                           2608          DC    X'00000013'
00001854 99846D9281869281                   2609          DC    C'rd_kafka_q_disable0'
00001867 00                                 2610          DC    X'00'
                                            2611 rd_kafka_q_disable0 DCCPRLG CINDEX=1445,BASER=12,FRAME=176,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1445
                                            2612          macro
                                            2613          dccextrn &m
                                            2614          gblc    &$dccext(1000)
                                            2615          gbla    &$dccexti
                                            2616          lcla    &i
                                            2617 &$dccext(&$dccexti+1) setc    '&m'
                                            2618 &i       seta    1
                                            2619 .loop    aif    (&i gt &$dccexti).around
                                            2620          aif    ('&$dccext(&i)' eq '&m').getout
                                            2621 &i       seta    &i+1
                                            2622          ago     .loop
                                            2623 .around  anop
                                            2624 &$dccexti seta &$dccexti+1
                                            2625          extrn  &m
                                            2626 .getout  anop
                                            2627          mend
00001868                                    2628+$eye0063    ds    0d                                                    02-DCCCA
00001868 C4C3C3                             2629+         dc cl3'DCC'                                                    02-DCCCA
0000186B 01                                 2630+         dc xl1'01' format one                                          02-DCCCA
0000186C 00000000                           2631+         dc a(0)                                                        02-DCCCA
00001870 00000000000018DA                   2632+         dc ad(@PER_1445)                                               02-DCCCA
00001878 00000000000000B0                   2633+         dc ad(176)                                                     02-DCCCA
00001880 0000000000000000                   2634+         dc ad(0)                                                       02-DCCCA
00001888 0000000000001000                   2635+         dc ad(4096)                                                    02-DCCCA
00001890 20                                 2636+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001891 03                                 2637+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001892 03                                 2638+         dc al1(3)                                                      02-DCCCA
00001893 08                                 2639+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001894 00                                 2640+         dc bl.8'00000000'                                              02-DCCCA
00001895 000000                             2641+         dc al3(0)                                                      02-DCCCA
00001898 0000000000001850                   2642+         dc ad(@LNAME1445)                                              02-DCCCA
000018A0                                    2643+         ds 0d                                                          02-DCCCA
000018A0 0000000000001868                   2644+         dc ad($eye0063)                                                02-DCCCA
000018A8 0000000000000000                   2645+         dc ad(0)                                                       02-DCCCA
000018B0                                    2646+         ds    0d                                                       01-DCCPR
000018B0                                    2647+rd_kafka_q_disable0 ds 0d                                               01-DCCPR
000018B0                                    2648+@REGION_1445_1 ds 0h                                                    01-DCCPR
000018B0 EBEC D008 0024          00000008   2649+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000018B6 E3E0 D088 0004          00000088   2650+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page   58 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000018BC E3C0 D090 0004          00000090   2651+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000018C2 B904 002E                          2652+         lgr   2,14                copy addr of our savearea            01-DCCPR
000018C6 E3B0 C018 0004          00000018   2653+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000018CC A7EB 00B0               000000B0   2654+         aghi  14,176              increase by frame size               01-DCCPR
000018D0 E3E0 C020 0021          00000020   2655+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000018D6 4720 B020               00000020   2656+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000018DA                                    2657+@PER_1445 ds   0h                                                       01-DCCPR
000018DA EBDE 2080 0024          00000080   2658+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000018E0 E3C0 2090 0024          00000090   2659+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000018E6 B904 00D2                          2660+         lgr   13,2                set real frame pointer               01-DCCPR
000018EA B904 00CF                          2661+         lgr   12,15               set base reg                         01-DCCPR
                        000018B0            2662+         using @REGION_1445_1,12                                        01-DCCPR
                                            2663 * ******* End of Prologue
                                            2664 * *
                                            2665 * ***           if (do_lock)
000018EE E320 1000 0004          00000000   2666          LG    2,0(0,1)    ; rkq
000018F4 E330 100C 0012          0000000C   2667          LT    3,12(0,1)   ; do_lock
000018FA 4780 C060               00001910   2668          BZ    @L266
                                            2669 * ***                   mtx_lock(&rkq->rkq_lock);
000018FE E320 D0A8 0024          000000A8   2670          STG   2,168(0,13)
00001904 4110 D0A8               000000A8   2671          LA    1,168(0,13)
00001908 E3F0 C0D8 0004          00001988   2672          LG    15,@lit_1445_57 ; mtx_lock
0000190E                                    2673 @@gen_label86 DS    0H
0000190E 05EF                               2674          BALR  14,15
00001910                                    2675 @@gen_label87 DS    0H
00001910                                    2676 @L266    DS    0H
                                            2677 * ***           rkq->rkq_flags &= ~0x2;
00001910 58F0 2084               00000084   2678          L     15,132(0,2)
00001914 A5F7 FFFD               0000FFFD   2679          NILL  15,65533
00001918 50F0 2084               00000084   2680          ST    15,132(0,2)
                                            2681 * ***           if (do_lock)
0000191C 1233                               2682          LTR   3,3
0000191E 4780 C084               00001934   2683          BZ    @ret_lab_1445
                                            2684 * ***                   mtx_unlock(&rkq->rkq_lock);
00001922 E320 D0A8 0024          000000A8   2685          STG   2,168(0,13)
00001928 4110 D0A8               000000A8   2686          LA    1,168(0,13)
0000192C E3F0 C0E0 0004          00001990   2687          LG    15,@lit_1445_58 ; mtx_unlock
00001932                                    2688 @@gen_label89 DS    0H
00001932 05EF                               2689          BALR  14,15
00001934                                    2690 @@gen_label90 DS    0H
00001934                                    2691 @L267    DS    0H
                                            2692 * ***   }
00001934                                    2693 @ret_lab_1445 DS 0H
                                            2694 * * **** Start of Epilogue
                                            2695          DCCEPIL
00001934                                    2696+         ds 0h                                                          01-DCCEP
                                            2697+* Epilog
00001934 D707 D088 D088 00000088 00000088   2698+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000193A E3D0 D080 0004          00000080   2699+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001940 E3C0 D090 0004          00000090   2700+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001946 E3B0 C018 0004          00000018   2701+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000194C E3C0 B010 0021          00000010   2702+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page   59 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001952 E3E0 D008 0004          00000008   2703+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001958 EB1C D020 0004          00000020   2704+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000195E 078E                               2705+         bcr 8,14                if same dsab, just return              01-DCCEP
00001960 E3F0 D010 0024          00000010   2706+         stg 15,16(0,13)         save return code                       01-DCCEP
00001966 E300 D018 0024          00000018   2707+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000196C E3F0 D090 0004          00000090   2708+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001972 E3F0 F018 0004          00000018   2709+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001978 47F0 F040               00000040   2710+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2711+* End of Epilog
                                            2712 * * **** End of Epilogue
00001980                                    2713          DS    0D
00001980 000000B0                           2714 @FRAMESIZE_1445 DC F'176'
00001984 00000000
00001988 0000000000000000                   2715 @lit_1445_57 DC AD(mtx_lock)
00001990 0000000000000000                   2716 @lit_1445_58 DC AD(mtx_unlock)
                                            2717          DROP  12
                                            2718 *
                                            2719 *   DSECT for automatic variables in "rd_kafka_q_disable0"
                                            2720 *      (FUNCTION #1445)
                                            2721 *
00000000                00000000 000000A8   2722 @AUTO#rd_kafka_q_disable0 DSECT
00000000                                    2723          DS    XL168
                                            2724 *
00001998                00000000 00012806   2725 @CODE    CSECT
                                            2726 *
                                            2727 *
                                            2728 *
                                            2729 * ....... start of rd_kafka_q_destroy0
00001998                                    2730 @LNAME1448 DS  0H
00001998 00000013                           2731          DC    X'00000013'
0000199C 99846D9281869281                   2732          DC    C'rd_kafka_q_destroy0'
000019AF 00                                 2733          DC    X'00'
                                            2734 rd_kafka_q_destroy0 DCCPRLG CINDEX=1448,BASER=12,FRAME=216,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1448
                                            2735          macro
                                            2736          dccextrn &m
                                            2737          gblc    &$dccext(1000)
                                            2738          gbla    &$dccexti
                                            2739          lcla    &i
                                            2740 &$dccext(&$dccexti+1) setc    '&m'
                                            2741 &i       seta    1
                                            2742 .loop    aif    (&i gt &$dccexti).around
                                            2743          aif    ('&$dccext(&i)' eq '&m').getout
                                            2744 &i       seta    &i+1
                                            2745          ago     .loop
                                            2746 .around  anop
                                            2747 &$dccexti seta &$dccexti+1
                                            2748          extrn  &m
                                            2749 .getout  anop
                                            2750          mend
000019B0                                    2751+$eye0066    ds    0d                                                    02-DCCCA
000019B0 C4C3C3                             2752+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   60 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000019B3 01                                 2753+         dc xl1'01' format one                                          02-DCCCA
000019B4 00000000                           2754+         dc a(0)                                                        02-DCCCA
000019B8 0000000000001A22                   2755+         dc ad(@PER_1448)                                               02-DCCCA
000019C0 00000000000000D8                   2756+         dc ad(216)                                                     02-DCCCA
000019C8 0000000000000000                   2757+         dc ad(0)                                                       02-DCCCA
000019D0 0000000000001000                   2758+         dc ad(4096)                                                    02-DCCCA
000019D8 20                                 2759+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000019D9 03                                 2760+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000019DA 03                                 2761+         dc al1(3)                                                      02-DCCCA
000019DB 08                                 2762+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000019DC 00                                 2763+         dc bl.8'00000000'                                              02-DCCCA
000019DD 000000                             2764+         dc al3(0)                                                      02-DCCCA
000019E0 0000000000001998                   2765+         dc ad(@LNAME1448)                                              02-DCCCA
000019E8                                    2766+         ds 0d                                                          02-DCCCA
000019E8 00000000000019B0                   2767+         dc ad($eye0066)                                                02-DCCCA
000019F0 0000000000000000                   2768+         dc ad(0)                                                       02-DCCCA
000019F8                                    2769+         ds    0d                                                       01-DCCPR
000019F8                                    2770+rd_kafka_q_destroy0 ds 0d                                               01-DCCPR
000019F8                                    2771+@REGION_1448_1 ds 0h                                                    01-DCCPR
000019F8 EBEC D008 0024          00000008   2772+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000019FE E3E0 D088 0004          00000088   2773+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001A04 E3C0 D090 0004          00000090   2774+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001A0A B904 002E                          2775+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001A0E E3B0 C018 0004          00000018   2776+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001A14 A7EB 00D8               000000D8   2777+         aghi  14,216              increase by frame size               01-DCCPR
00001A18 E3E0 C020 0021          00000020   2778+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001A1E 4720 B020               00000020   2779+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001A22                                    2780+@PER_1448 ds   0h                                                       01-DCCPR
00001A22 EBDE 2080 0024          00000080   2781+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001A28 E3C0 2090 0024          00000090   2782+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001A2E B904 00D2                          2783+         lgr   13,2                set real frame pointer               01-DCCPR
00001A32 B904 00CF                          2784+         lgr   12,15               set base reg                         01-DCCPR
                        000019F8            2785+         using @REGION_1448_1,12                                        01-DCCPR
                                            2786 * ******* End of Prologue
                                            2787 * *
                                            2788 * ***           int do_delete = 0;
00001A36 E320 1000 0004          00000000   2789          LG    2,0(0,1)    ; rkq
                                            2790 * ***
                                            2791 * ***           if (disable) {
00001A3C E3F0 100C 0012          0000000C   2792          LT    15,12(0,1)  ; disable
00001A42 4780 C07E               00001A76   2793          BZ    @L268
                                            2794 * ***
                                            2795 * ***
                                            2796 * ***
                                            2797 * ***
                                            2798 * ***                   rd_kafka_q_disable0(rkq, 1);
00001A46 E320 D0B0 0024          000000B0   2799          STG   2,176(0,13)
00001A4C E548 D0B8 0001          000000B8   2800          MVGHI 184(13),1
00001A52 4110 D0B0               000000B0   2801          LA    1,176(0,13)
00001A56 E3F0 C170 0004          00001B68   2802          LG    15,@lit_1448_61 ; rd_kafka_q_disable0
00001A5C                                    2803 @@gen_label92 DS    0H
00001A5C 05EF                               2804          BALR  14,15
                                                                                                                           Page   61 
  Active Usings: @REGION_1448_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001A5E                                    2805 @@gen_label93 DS    0H
                                            2806 * ***                   rd_kafka_q_purge0(rkq, 1);
00001A5E E320 D0B0 0024          000000B0   2807          STG   2,176(0,13)
00001A64 E548 D0B8 0001          000000B8   2808          MVGHI 184(13),1
00001A6A 4110 D0B0               000000B0   2809          LA    1,176(0,13)
00001A6E E3F0 C178 0004          00001B70   2810          LG    15,@lit_1448_62 ; rd_kafka_q_purge0
00001A74                                    2811 @@gen_label94 DS    0H
00001A74 05EF                               2812          BALR  14,15
00001A76                                    2813 @@gen_label95 DS    0H
                                            2814 * ***           }
00001A76                                    2815 @L268    DS    0H
                                            2816 * ***
                                            2817 * ***           mtx_lock(&rkq->rkq_lock);
00001A76 E320 D0B0 0024          000000B0   2818          STG   2,176(0,13)
00001A7C 4110 D0B0               000000B0   2819          LA    1,176(0,13)
00001A80 E3F0 C180 0004          00001B78   2820          LG    15,@lit_1448_63 ; mtx_lock
00001A86                                    2821 @@gen_label96 DS    0H
00001A86 05EF                               2822          BALR  14,15
00001A88                                    2823 @@gen_label97 DS    0H
                                            2824 * ***           do { if (((!(rkq->rkq_refcnt > 0)))) rd_kafka_crash("C\
                                            2825 * :\\asgkafka\\librdkafka\\src\\rdkafka_queue.h",211, __FUNCTION__, ((\
                                            2826 * (void *)0)), "assert: " "rkq->rkq_refcnt > 0"); } while (0);
00001A88                                    2827 @L269    DS    0H
00001A88 E55C 2080 0000          00000080   2828          CHSI  128(2),0
00001A8E 4720 C0DC               00001AD4   2829          BH    @L272
00001A92 E3F0 C198 0004          00001B90   2830          LG    15,@lit_1448_64
00001A98 4110 F054               00000054   2831          LA    1,84(0,15)
00001A9C E310 D0B0 0024          000000B0   2832          STG   1,176(0,13)
00001AA2 E548 D0B8 00D3          000000B8   2833          MVGHI 184(13),211
00001AA8 E310 C190 0004          00001B88   2834          LG    1,@lit_1448_65
00001AAE 4110 1072               00000072   2835          LA    1,114(0,1)
00001AB2 E310 D0C0 0024          000000C0   2836          STG   1,192(0,13)
00001AB8 D707 D0C8 D0C8 000000C8 000000C8   2837          XC    200(8,13),200(13)
00001ABE 41F0 F080               00000080   2838          LA    15,128(0,15)
00001AC2 E3F0 D0D0 0024          000000D0   2839          STG   15,208(0,13)
00001AC8 4110 D0B0               000000B0   2840          LA    1,176(0,13)
00001ACC E3F0 C188 0004          00001B80   2841          LG    15,@lit_1448_66 ; rd_kafka_crash
00001AD2                                    2842 @@gen_label99 DS    0H
00001AD2 05EF                               2843          BALR  14,15
00001AD4                                    2844 @@gen_label100 DS    0H
00001AD4                                    2845 @L272    DS    0H
                                            2846 * ***           do_delete = !--rkq->rkq_refcnt;
00001AD4 58F0 2080               00000080   2847          L     15,128(0,2)
00001AD8 A7FA FFFF               0000FFFF   2848          AHI   15,-1
00001ADC 50F0 2080               00000080   2849          ST    15,128(0,2)
00001AE0 103F                               2850          LPR   3,15
00001AE2 A73A FFFF               0000FFFF   2851          AHI   3,-1
00001AE6 8830 001F               0000001F   2852          SRL   3,31(0)
                                            2853 * ***           mtx_unlock(&rkq->rkq_lock);
00001AEA E320 D0B0 0024          000000B0   2854          STG   2,176(0,13)
00001AF0 4110 D0B0               000000B0   2855          LA    1,176(0,13)
00001AF4 E3F0 C1A0 0004          00001B98   2856          LG    15,@lit_1448_67 ; mtx_unlock
                                                                                                                           Page   62 
  Active Usings: @REGION_1448_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001AFA                                    2857 @@gen_label101 DS    0H
00001AFA 05EF                               2858          BALR  14,15
00001AFC                                    2859 @@gen_label102 DS    0H
                                            2860 * ***
                                            2861 * ***           if (((do_delete)))
00001AFC 1233                               2862          LTR   3,3
00001AFE 4780 C11C               00001B14   2863          BZ    @L273
                                            2864 * ***                   rd_kafka_q_destroy_final(rkq);
00001B02 E320 D0B0 0024          000000B0   2865          STG   2,176(0,13)
00001B08 4110 D0B0               000000B0   2866          LA    1,176(0,13)
00001B0C E3F0 C1A8 0004          00001BA0   2867          LG    15,@lit_1448_68 ; rd_kafka_q_destroy_final
00001B12                                    2868 @@gen_label104 DS    0H
00001B12 05EF                               2869          BALR  14,15
00001B14                                    2870 @@gen_label105 DS    0H
00001B14                                    2871 @L273    DS    0H
                                            2872 * ***   }
00001B14                                    2873 @ret_lab_1448 DS 0H
                                            2874 * * **** Start of Epilogue
                                            2875          DCCEPIL
00001B14                                    2876+         ds 0h                                                          01-DCCEP
                                            2877+* Epilog
00001B14 D707 D088 D088 00000088 00000088   2878+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001B1A E3D0 D080 0004          00000080   2879+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001B20 E3C0 D090 0004          00000090   2880+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001B26 E3B0 C018 0004          00000018   2881+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001B2C E3C0 B010 0021          00000010   2882+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001B32 E3E0 D008 0004          00000008   2883+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001B38 EB1C D020 0004          00000020   2884+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001B3E 078E                               2885+         bcr 8,14                if same dsab, just return              01-DCCEP
00001B40 E3F0 D010 0024          00000010   2886+         stg 15,16(0,13)         save return code                       01-DCCEP
00001B46 E300 D018 0024          00000018   2887+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001B4C E3F0 D090 0004          00000090   2888+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001B52 E3F0 F018 0004          00000018   2889+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001B58 47F0 F040               00000040   2890+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2891+* End of Epilog
                                            2892 * * **** End of Epilogue
00001B60                                    2893          DS    0D
00001B60 000000D8                           2894 @FRAMESIZE_1448 DC F'216'
00001B64 00000000
00001B68 00000000000018B0                   2895 @lit_1448_61 DC AD(rd_kafka_q_disable0)
00001B70 0000000000000000                   2896 @lit_1448_62 DC AD(rd_kafka_q_purge0)
00001B78 0000000000000000                   2897 @lit_1448_63 DC AD(mtx_lock)
00001B80 0000000000000000                   2898 @lit_1448_66 DC AD(rd_kafka_crash)
00001B88 0000000000012808                   2899 @lit_1448_65 DC AD(@DATA)
00001B90 0000000000012AB8                   2900 @lit_1448_64 DC AD(@strings@)
00001B98 0000000000000000                   2901 @lit_1448_67 DC AD(mtx_unlock)
00001BA0 0000000000000000                   2902 @lit_1448_68 DC AD(rd_kafka_q_destroy_final)
                                            2903          DROP  12
                                            2904 *
                                            2905 *   DSECT for automatic variables in "rd_kafka_q_destroy0"
                                            2906 *      (FUNCTION #1448)
                                            2907 *
                                                                                                                           Page   63 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                00000000 000000AC   2908 @AUTO#rd_kafka_q_destroy0 DSECT
00000000                                    2909          DS    XL168
000000A8                                    2910 rd_kafka_q_destroy0#do_delete#0 DS 1F ; do_delete
                                            2911 *
00001BA8                00000000 00012806   2912 @CODE    CSECT
                                            2913 *
                                            2914 *
                                            2915 *
                                            2916 * ....... start of rd_kafka_q_destroy_owner
00001BA8                                    2917 @LNAME1449 DS  0H
00001BA8 00000018                           2918          DC    X'00000018'
00001BAC 99846D9281869281                   2919          DC    C'rd_kafka_q_destroy_owner'
00001BC4 00                                 2920          DC    X'00'
                                            2921 rd_kafka_q_destroy_owner DCCPRLG CINDEX=1449,BASER=12,FRAME=184,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1449
                                            2922          macro
                                            2923          dccextrn &m
                                            2924          gblc    &$dccext(1000)
                                            2925          gbla    &$dccexti
                                            2926          lcla    &i
                                            2927 &$dccext(&$dccexti+1) setc    '&m'
                                            2928 &i       seta    1
                                            2929 .loop    aif    (&i gt &$dccexti).around
                                            2930          aif    ('&$dccext(&i)' eq '&m').getout
                                            2931 &i       seta    &i+1
                                            2932          ago     .loop
                                            2933 .around  anop
                                            2934 &$dccexti seta &$dccexti+1
                                            2935          extrn  &m
                                            2936 .getout  anop
                                            2937          mend
00001BC8                                    2938+$eye0069    ds    0d                                                    02-DCCCA
00001BC8 C4C3C3                             2939+         dc cl3'DCC'                                                    02-DCCCA
00001BCB 01                                 2940+         dc xl1'01' format one                                          02-DCCCA
00001BCC 00000000                           2941+         dc a(0)                                                        02-DCCCA
00001BD0 0000000000001C3A                   2942+         dc ad(@PER_1449)                                               02-DCCCA
00001BD8 00000000000000B8                   2943+         dc ad(184)                                                     02-DCCCA
00001BE0 0000000000000000                   2944+         dc ad(0)                                                       02-DCCCA
00001BE8 0000000000001000                   2945+         dc ad(4096)                                                    02-DCCCA
00001BF0 20                                 2946+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001BF1 03                                 2947+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001BF2 03                                 2948+         dc al1(3)                                                      02-DCCCA
00001BF3 08                                 2949+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001BF4 00                                 2950+         dc bl.8'00000000'                                              02-DCCCA
00001BF5 000000                             2951+         dc al3(0)                                                      02-DCCCA
00001BF8 0000000000001BA8                   2952+         dc ad(@LNAME1449)                                              02-DCCCA
00001C00                                    2953+         ds 0d                                                          02-DCCCA
00001C00 0000000000001BC8                   2954+         dc ad($eye0069)                                                02-DCCCA
00001C08 0000000000000000                   2955+         dc ad(0)                                                       02-DCCCA
00001C10                                    2956+         ds    0d                                                       01-DCCPR
00001C10                                    2957+rd_kafka_q_destroy_owner ds 0d                                          01-DCCPR
00001C10                                    2958+@REGION_1449_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   64 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001C10 EBEC D008 0024          00000008   2959+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001C16 E3E0 D088 0004          00000088   2960+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001C1C E3C0 D090 0004          00000090   2961+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001C22 B904 002E                          2962+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001C26 E3B0 C018 0004          00000018   2963+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001C2C A7EB 00B8               000000B8   2964+         aghi  14,184              increase by frame size               01-DCCPR
00001C30 E3E0 C020 0021          00000020   2965+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001C36 4720 B020               00000020   2966+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001C3A                                    2967+@PER_1449 ds   0h                                                       01-DCCPR
00001C3A EBDE 2080 0024          00000080   2968+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001C40 E3C0 2090 0024          00000090   2969+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001C46 B904 00D2                          2970+         lgr   13,2                set real frame pointer               01-DCCPR
00001C4A B904 00CF                          2971+         lgr   12,15               set base reg                         01-DCCPR
                        00001C10            2972+         using @REGION_1449_1,12                                        01-DCCPR
                                            2973 * ******* End of Prologue
                                            2974 * *
                                            2975 * ***           rd_kafka_q_destroy0(rkq, 1);
00001C4E E3F0 1000 0004          00000000   2976          LG    15,0(0,1)   ; rkq
00001C54 E3F0 D0A8 0024          000000A8   2977          STG   15,168(0,13)
00001C5A E548 D0B0 0001          000000B0   2978          MVGHI 176(13),1
00001C60 4110 D0A8               000000A8   2979          LA    1,168(0,13)
00001C64 E3F0 C0B0 0004          00001CC0   2980          LG    15,@lit_1449_70 ; rd_kafka_q_destroy0
00001C6A                                    2981 @@gen_label106 DS    0H
00001C6A 05EF                               2982          BALR  14,15
00001C6C                                    2983 @@gen_label107 DS    0H
                                            2984 * ***   }
00001C6C                                    2985 @ret_lab_1449 DS 0H
                                            2986 * * **** Start of Epilogue
                                            2987          DCCEPIL
00001C6C                                    2988+         ds 0h                                                          01-DCCEP
                                            2989+* Epilog
00001C6C D707 D088 D088 00000088 00000088   2990+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001C72 E3D0 D080 0004          00000080   2991+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001C78 E3C0 D090 0004          00000090   2992+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001C7E E3B0 C018 0004          00000018   2993+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001C84 E3C0 B010 0021          00000010   2994+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001C8A E3E0 D008 0004          00000008   2995+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001C90 EB1C D020 0004          00000020   2996+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001C96 078E                               2997+         bcr 8,14                if same dsab, just return              01-DCCEP
00001C98 E3F0 D010 0024          00000010   2998+         stg 15,16(0,13)         save return code                       01-DCCEP
00001C9E E300 D018 0024          00000018   2999+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001CA4 E3F0 D090 0004          00000090   3000+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001CAA E3F0 F018 0004          00000018   3001+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001CB0 47F0 F040               00000040   3002+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3003+* End of Epilog
                                            3004 * * **** End of Epilogue
00001CB8                                    3005          DS    0D
00001CB8 000000B8                           3006 @FRAMESIZE_1449 DC F'184'
00001CBC 00000000
00001CC0 00000000000019F8                   3007 @lit_1449_70 DC AD(rd_kafka_q_destroy0)
                                            3008          DROP  12
                                            3009 *
                                                                                                                           Page   65 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3010 *   DSECT for automatic variables in "rd_kafka_q_destroy_owner"
                                            3011 *      (FUNCTION #1449)
                                            3012 *
00000000                00000000 000000A8   3013 @AUTO#rd_kafka_q_destroy_owner DSECT
00000000                                    3014          DS    XL168
                                            3015 *
00001CC8                00000000 00012806   3016 @CODE    CSECT
                                            3017 *
                                            3018 *
                                            3019 *
                                            3020 * ....... start of rd_kafka_q_reset
00001CC8                                    3021 @LNAME1450 DS  0H
00001CC8 00000010                           3022          DC    X'00000010'
00001CCC 99846D9281869281                   3023          DC    C'rd_kafka_q_reset'
00001CDC 00                                 3024          DC    X'00'
                                            3025 rd_kafka_q_reset DCCPRLG CINDEX=1450,BASER=0,FRAME=168,SAVEAREA=NO,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1450
                                            3026          macro
                                            3027          dccextrn &m
                                            3028          gblc    &$dccext(1000)
                                            3029          gbla    &$dccexti
                                            3030          lcla    &i
                                            3031 &$dccext(&$dccexti+1) setc    '&m'
                                            3032 &i       seta    1
                                            3033 .loop    aif    (&i gt &$dccexti).around
                                            3034          aif    ('&$dccext(&i)' eq '&m').getout
                                            3035 &i       seta    &i+1
                                            3036          ago     .loop
                                            3037 .around  anop
                                            3038 &$dccexti seta &$dccexti+1
                                            3039          extrn  &m
                                            3040 .getout  anop
                                            3041          mend
00001CE0                                    3042+$eye0072    ds    0d                                                    02-DCCCA
00001CE0 C4C3C3                             3043+         dc cl3'DCC'                                                    02-DCCCA
00001CE3 01                                 3044+         dc xl1'01' format one                                          02-DCCCA
00001CE4 00000000                           3045+         dc a(0)                                                        02-DCCCA
00001CE8 0000000000000000                   3046+         dc ad(0)                                                       02-DCCCA
00001CF0 00000000000000A8                   3047+         dc ad(168)                                                     02-DCCCA
00001CF8 0000000000000000                   3048+         dc ad(0)                                                       02-DCCCA
00001D00 0000000000001000                   3049+         dc ad(4096)                                                    02-DCCCA
00001D08 20                                 3050+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001D09 03                                 3051+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001D0A 03                                 3052+         dc al1(3)                                                      02-DCCCA
00001D0B 08                                 3053+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001D0C 00                                 3054+         dc bl.8'00000000'                                              02-DCCCA
00001D0D 000000                             3055+         dc al3(0)                                                      02-DCCCA
00001D10 0000000000001CC8                   3056+         dc ad(@LNAME1450)                                              02-DCCCA
00001D18                                    3057+         ds 0d                                                          02-DCCCA
00001D18 0000000000001CE0                   3058+         dc ad($eye0072)                                                02-DCCCA
00001D20 0000000000000000                   3059+         dc ad(0)                                                       02-DCCCA
00001D28                                    3060+         ds    0d                                                       01-DCCPR
                                                                                                                           Page   66 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001D28                                    3061+rd_kafka_q_reset ds 0d                                                  01-DCCPR
00001D28                                    3062+@REGION_1450_1 ds 0h                                                    01-DCCPR
00001D28 EBEC D008 0024          00000008   3063+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            3064 * ******* End of Prologue
                                            3065 * *
                                            3066 * ***      do { (&rkq->rkq_q)->tqh_first = (((void *)0)); (&rkq->rkq_q\
                                            3067 * )->tqh_last = &(&rkq->rkq_q)->tqh_first; } while ( 0);
00001D2E E3F0 1000 0004          00000000   3068          LG    15,0(0,1)   ; rkq
00001D34                                    3069 @L274    DS    0H
00001D34 A719 0000               00000000   3070          LGHI  1,0         ; 0
00001D38 E310 F060 0024          00000060   3071          STG   1,96(0,15)  ; offset of rkq_q in rd_kafka_q_s
00001D3E 4110 F060               00000060   3072          LA    1,96(0,15)
00001D42 E310 F068 0024          00000068   3073          STG   1,104(0,15) ; offset of tqh_last in rd_kafka_op_tailq
                                            3074 * ***           do {} while (0);
00001D48                                    3075 @L277    DS    0H
                                            3076 * ***           rkq->rkq_qlen = 0;
00001D48 E54C F070 0000          00000070   3077          MVHI  112(15),0   ; offset of rkq_qlen in rd_kafka_q_s
                                            3078 * ***           rkq->rkq_qsize = 0;
00001D4E E548 F078 0000          00000078   3079          MVGHI 120(15),0   ; offset of rkq_qsize in rd_kafka_q_s
                                            3080 * ***   }
00001D54                                    3081 @ret_lab_1450 DS 0H
                                            3082 * * **** Start of Epilogue
                                            3083          DCCEPIL
00001D54                                    3084+         ds 0h                                                          01-DCCEP
                                            3085+* Epilog
                                            3086+* Epilog
00001D54 E3E0 D008 0004          00000008   3087+         lg    14,8(,13) restore the reg                                01-DCCEP
00001D5A EB1C D020 0004          00000020   3088+         lmg   1,12,32(13)                                              01-DCCEP
00001D60 07FE                               3089+         br   14                                                        01-DCCEP
                                            3090+* End of Epilog
                                            3091 * * **** End of Epilogue
                                            3092 *
                                            3093 *   DSECT for automatic variables in "rd_kafka_q_reset"
                                            3094 *      (FUNCTION #1450)
                                            3095 *
00000000                00000000 000000A8   3096 @AUTO#rd_kafka_q_reset DSECT
00000000                                    3097          DS    XL168
                                            3098 *
00001D62                00000000 00012806   3099 @CODE    CSECT
                                            3100 *
                                            3101 *
                                            3102 *
                                            3103 * ....... start of rd_kafka_q_fwd_get
00001D62                                    3104 @LNAME1452 DS  0H
00001D62 00000012                           3105          DC    X'00000012'
00001D66 99846D9281869281                   3106          DC    C'rd_kafka_q_fwd_get'
00001D78 00                                 3107          DC    X'00'
                                            3108 rd_kafka_q_fwd_get DCCPRLG CINDEX=1452,BASER=12,FRAME=184,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1452
                                            3109          macro
                                            3110          dccextrn &m
                                            3111          gblc    &$dccext(1000)
                                                                                                                           Page   67 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3112          gbla    &$dccexti
                                            3113          lcla    &i
                                            3114 &$dccext(&$dccexti+1) setc    '&m'
                                            3115 &i       seta    1
                                            3116 .loop    aif    (&i gt &$dccexti).around
                                            3117          aif    ('&$dccext(&i)' eq '&m').getout
                                            3118 &i       seta    &i+1
                                            3119          ago     .loop
                                            3120 .around  anop
                                            3121 &$dccexti seta &$dccexti+1
                                            3122          extrn  &m
                                            3123 .getout  anop
                                            3124          mend
00001D80                                    3125+$eye0075    ds    0d                                                    02-DCCCA
00001D80 C4C3C3                             3126+         dc cl3'DCC'                                                    02-DCCCA
00001D83 01                                 3127+         dc xl1'01' format one                                          02-DCCCA
00001D84 00000000                           3128+         dc a(0)                                                        02-DCCCA
00001D88 0000000000001DF2                   3129+         dc ad(@PER_1452)                                               02-DCCCA
00001D90 00000000000000B8                   3130+         dc ad(184)                                                     02-DCCCA
00001D98 0000000000000000                   3131+         dc ad(0)                                                       02-DCCCA
00001DA0 0000000000001000                   3132+         dc ad(4096)                                                    02-DCCCA
00001DA8 20                                 3133+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001DA9 03                                 3134+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001DAA 03                                 3135+         dc al1(3)                                                      02-DCCCA
00001DAB 08                                 3136+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001DAC 00                                 3137+         dc bl.8'00000000'                                              02-DCCCA
00001DAD 000000                             3138+         dc al3(0)                                                      02-DCCCA
00001DB0 0000000000001D62                   3139+         dc ad(@LNAME1452)                                              02-DCCCA
00001DB8                                    3140+         ds 0d                                                          02-DCCCA
00001DB8 0000000000001D80                   3141+         dc ad($eye0075)                                                02-DCCCA
00001DC0 0000000000000000                   3142+         dc ad(0)                                                       02-DCCCA
00001DC8                                    3143+         ds    0d                                                       01-DCCPR
00001DC8                                    3144+rd_kafka_q_fwd_get ds 0d                                                01-DCCPR
00001DC8                                    3145+@REGION_1452_1 ds 0h                                                    01-DCCPR
00001DC8 EBEC D008 0024          00000008   3146+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001DCE E3E0 D088 0004          00000088   3147+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001DD4 E3C0 D090 0004          00000090   3148+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001DDA B904 002E                          3149+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001DDE E3B0 C018 0004          00000018   3150+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001DE4 A7EB 00B8               000000B8   3151+         aghi  14,184              increase by frame size               01-DCCPR
00001DE8 E3E0 C020 0021          00000020   3152+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001DEE 4720 B020               00000020   3153+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001DF2                                    3154+@PER_1452 ds   0h                                                       01-DCCPR
00001DF2 EBDE 2080 0024          00000080   3155+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001DF8 E3C0 2090 0024          00000090   3156+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001DFE B904 00D2                          3157+         lgr   13,2                set real frame pointer               01-DCCPR
00001E02 B904 00CF                          3158+         lgr   12,15               set base reg                         01-DCCPR
                        00001DC8            3159+         using @REGION_1452_1,12                                        01-DCCPR
                                            3160 * ******* End of Prologue
                                            3161 * *
00001E06 E320 1000 0004          00000000   3162          LG    2,0(0,1)    ; rkq
                                            3163 * ***           rd_kafka_q_t *fwdq;
                                                                                                                           Page   68 
  Active Usings: @REGION_1452_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3164 * ***           if (do_lock)
00001E0C E340 100C 0012          0000000C   3165          LT    4,12(0,1)   ; do_lock
00001E12 4780 C060               00001E28   3166          BZ    @L280
                                            3167 * ***                   mtx_lock(&rkq->rkq_lock);
00001E16 E320 D0B0 0024          000000B0   3168          STG   2,176(0,13)
00001E1C 4110 D0B0               000000B0   3169          LA    1,176(0,13)
00001E20 E3F0 C0F0 0004          00001EB8   3170          LG    15,@lit_1452_73 ; mtx_lock
00001E26                                    3171 @@gen_label109 DS    0H
00001E26 05EF                               3172          BALR  14,15
00001E28                                    3173 @@gen_label110 DS    0H
00001E28                                    3174 @L280    DS    0H
                                            3175 * ***
                                            3176 * ***           if ((fwdq = rkq->rkq_fwdq))
00001E28 E330 2058 0004          00000058   3177          LG    3,88(0,2)   ; offset of rkq_fwdq in rd_kafka_q_s
00001E2E B902 00F3                          3178          LTGR  15,3
00001E32 4780 C080               00001E48   3179          BZ    @L281
                                            3180 * ***                   rd_kafka_q_keep(fwdq);
00001E36 E330 D0B0 0024          000000B0   3181          STG   3,176(0,13)
00001E3C 4110 D0B0               000000B0   3182          LA    1,176(0,13)
00001E40 E3F0 C0F8 0004          00001EC0   3183          LG    15,@lit_1452_74 ; rd_kafka_q_keep
00001E46                                    3184 @@gen_label112 DS    0H
00001E46 05EF                               3185          BALR  14,15
00001E48                                    3186 @@gen_label113 DS    0H
00001E48                                    3187 @L281    DS    0H
                                            3188 * ***
                                            3189 * ***           if (do_lock)
00001E48 1244                               3190          LTR   4,4
00001E4A 4780 C098               00001E60   3191          BZ    @L282
                                            3192 * ***                   mtx_unlock(&rkq->rkq_lock);
00001E4E E320 D0B0 0024          000000B0   3193          STG   2,176(0,13)
00001E54 4110 D0B0               000000B0   3194          LA    1,176(0,13)
00001E58 E3F0 C100 0004          00001EC8   3195          LG    15,@lit_1452_75 ; mtx_unlock
00001E5E                                    3196 @@gen_label115 DS    0H
00001E5E 05EF                               3197          BALR  14,15
00001E60                                    3198 @@gen_label116 DS    0H
00001E60                                    3199 @L282    DS    0H
                                            3200 * ***
                                            3201 * ***           return fwdq;
00001E60 B904 00F3                          3202          LGR   15,3
                                            3203 * ***   }
                                            3204 * * **** Start of Epilogue
                                            3205          DCCEPIL
00001E64                                    3206+         ds 0h                                                          01-DCCEP
                                            3207+* Epilog
00001E64 D707 D088 D088 00000088 00000088   3208+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001E6A E3D0 D080 0004          00000080   3209+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001E70 E3C0 D090 0004          00000090   3210+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001E76 E3B0 C018 0004          00000018   3211+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001E7C E3C0 B010 0021          00000010   3212+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001E82 E3E0 D008 0004          00000008   3213+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001E88 EB1C D020 0004          00000020   3214+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001E8E 078E                               3215+         bcr 8,14                if same dsab, just return              01-DCCEP
                                                                                                                           Page   69 
  Active Usings: @REGION_1452_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001E90 E3F0 D010 0024          00000010   3216+         stg 15,16(0,13)         save return code                       01-DCCEP
00001E96 E300 D018 0024          00000018   3217+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001E9C E3F0 D090 0004          00000090   3218+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001EA2 E3F0 F018 0004          00000018   3219+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001EA8 47F0 F040               00000040   3220+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3221+* End of Epilog
                                            3222 * * **** End of Epilogue
00001EB0                                    3223          DS    0D
00001EB0 000000B8                           3224 @FRAMESIZE_1452 DC F'184'
00001EB4 00000000
00001EB8 0000000000000000                   3225 @lit_1452_73 DC AD(mtx_lock)
00001EC0 0000000000001778                   3226 @lit_1452_74 DC AD(rd_kafka_q_keep)
00001EC8 0000000000000000                   3227 @lit_1452_75 DC AD(mtx_unlock)
                                            3228          DROP  12
                                            3229 *
                                            3230 *   DSECT for automatic variables in "rd_kafka_q_fwd_get"
                                            3231 *      (FUNCTION #1452)
                                            3232 *
00000000                00000000 000000A8   3233 @AUTO#rd_kafka_q_fwd_get DSECT
00000000                                    3234          DS    XL168
                                            3235 *
00001ED0                00000000 00012806   3236 @CODE    CSECT
                                            3237 *
                                            3238 *
                                            3239 *
                                            3240 * ....... start of rd_kafka_q_io_event
00001ED0                                    3241 @LNAME1454 DS  0H
00001ED0 00000013                           3242          DC    X'00000013'
00001ED4 99846D9281869281                   3243          DC    C'rd_kafka_q_io_event'
00001EE7 00                                 3244          DC    X'00'
                                            3245 rd_kafka_q_io_event DCCPRLG CINDEX=1454,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1454
                                            3246          macro
                                            3247          dccextrn &m
                                            3248          gblc    &$dccext(1000)
                                            3249          gbla    &$dccexti
                                            3250          lcla    &i
                                            3251 &$dccext(&$dccexti+1) setc    '&m'
                                            3252 &i       seta    1
                                            3253 .loop    aif    (&i gt &$dccexti).around
                                            3254          aif    ('&$dccext(&i)' eq '&m').getout
                                            3255 &i       seta    &i+1
                                            3256          ago     .loop
                                            3257 .around  anop
                                            3258 &$dccexti seta &$dccexti+1
                                            3259          extrn  &m
                                            3260 .getout  anop
                                            3261          mend
00001EE8                                    3262+$eye0078    ds    0d                                                    02-DCCCA
00001EE8 C4C3C3                             3263+         dc cl3'DCC'                                                    02-DCCCA
00001EEB 01                                 3264+         dc xl1'01' format one                                          02-DCCCA
00001EEC 00000000                           3265+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   70 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001EF0 0000000000001F5A                   3266+         dc ad(@PER_1454)                                               02-DCCCA
00001EF8 00000000000000C0                   3267+         dc ad(192)                                                     02-DCCCA
00001F00 0000000000000000                   3268+         dc ad(0)                                                       02-DCCCA
00001F08 0000000000001000                   3269+         dc ad(4096)                                                    02-DCCCA
00001F10 20                                 3270+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001F11 03                                 3271+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001F12 03                                 3272+         dc al1(3)                                                      02-DCCCA
00001F13 08                                 3273+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001F14 00                                 3274+         dc bl.8'00000000'                                              02-DCCCA
00001F15 000000                             3275+         dc al3(0)                                                      02-DCCCA
00001F18 0000000000001ED0                   3276+         dc ad(@LNAME1454)                                              02-DCCCA
00001F20                                    3277+         ds 0d                                                          02-DCCCA
00001F20 0000000000001EE8                   3278+         dc ad($eye0078)                                                02-DCCCA
00001F28 0000000000000000                   3279+         dc ad(0)                                                       02-DCCCA
00001F30                                    3280+         ds    0d                                                       01-DCCPR
00001F30                                    3281+rd_kafka_q_io_event ds 0d                                               01-DCCPR
00001F30                                    3282+@REGION_1454_1 ds 0h                                                    01-DCCPR
00001F30 EBEC D008 0024          00000008   3283+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001F36 E3E0 D088 0004          00000088   3284+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001F3C E3C0 D090 0004          00000090   3285+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001F42 B904 002E                          3286+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001F46 E3B0 C018 0004          00000018   3287+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001F4C A7EB 00C0               000000C0   3288+         aghi  14,192              increase by frame size               01-DCCPR
00001F50 E3E0 C020 0021          00000020   3289+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001F56 4720 B020               00000020   3290+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001F5A                                    3291+@PER_1454 ds   0h                                                       01-DCCPR
00001F5A EBDE 2080 0024          00000080   3292+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001F60 E3C0 2090 0024          00000090   3293+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001F66 B904 00D2                          3294+         lgr   13,2                set real frame pointer               01-DCCPR
00001F6A B904 00CF                          3295+         lgr   12,15               set base reg                         01-DCCPR
                        00001F30            3296+         using @REGION_1454_1,12                                        01-DCCPR
                                            3297 * ******* End of Prologue
                                            3298 * *
00001F6E E3F0 1000 0004          00000000   3299          LG    15,0(0,1)   ; rkq
                                            3300 * ***
                                            3301 * ***      if (((!rkq->rkq_qio)))
00001F74 E310 F090 0002          00000090   3302          LTG   1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001F7A 4780 C102               00002032   3303          BZ    @ret_lab_1454
                                            3304 * ***         return;
00001F7E                                    3305 @L285    DS    0H
                                            3306 * ***
                                            3307 * ***           if (rkq->rkq_qio->event_cb) {
00001F7E E310 F090 0004          00000090   3308          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001F84 E310 1020 0002          00000020   3309          LTG   1,32(0,1)   ; offset of event_cb in rd_kafka_q_io
00001F8A 4780 C0A8               00001FD8   3310          BZ    @L286
                                            3311 * ***                   rkq->rkq_qio->event_cb(rkq->rkq_rk,
                                            3312 * ***                                          rkq->rkq_qio->event_cb_\
                                            3313 * opaque);
00001F8E E310 F088 0004          00000088   3314          LG    1,136(0,15)
00001F94 E310 D0A8 0024          000000A8   3315          STG   1,168(0,13)
00001F9A E310 F090 0004          00000090   3316          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001FA0 E310 1028 0004          00000028   3317          LG    1,40(0,1)
                                                                                                                           Page   71 
  Active Usings: @REGION_1454_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001FA6 E310 D0B0 0024          000000B0   3318          STG   1,176(0,13)
00001FAC E3F0 F090 0004          00000090   3319          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001FB2 E3F0 F020 0004          00000020   3320          LG    15,32(0,15) ; offset of event_cb in rd_kafka_q_io
00001FB8 4110 D0A8               000000A8   3321          LA    1,168(0,13)
00001FBC                                    3322 @@gen_label119 DS    0H
00001FBC 05EF                               3323          BALR  14,15
00001FBE                                    3324 @@gen_label120 DS    0H
                                            3325 * ***                   return;
00001FBE 47F0 C102               00002032   3326          B     @ret_lab_1454
00001FC8                                    3327          DS    0D
00001FC8 000000C0                           3328 @FRAMESIZE_1454 DC F'192'
00001FCC 00000000
00001FD0 0000000000000000                   3329 @lit_1454_77 DC AD(write)
                                            3330 * ***           }
00001FD8                                    3331 @L286    DS    0H
                                            3332 * ***
                                            3333 * ***
                                            3334 * ***
                                            3335 * ***
                                            3336 * ***
                                            3337 * ***
                                            3338 * ***           if (rkq->rkq_qio->sent)
00001FD8 E310 F090 0004          00000090   3339          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001FDE 9500 1018      00000018 00000000   3340          CLI   24(1),0
00001FE2 4770 C102               00002032   3341          BNE   @ret_lab_1454
                                            3342 * ***                   return;
00001FE6                                    3343 @L287    DS    0H
                                            3344 * ***
                                            3345 * ***           rkq->rkq_qio->sent = 1;
00001FE6 E310 F090 0004          00000090   3346          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001FEC 9201 1018      00000018 00000001   3347          MVI   24(1),1     ; offset of sent in rd_kafka_q_io
                                            3348 * ***
                                            3349 * ***
                                            3350 * ***
                                            3351 * ***           if (write(rkq->rkq_qio->fd,rkq->rkq_qio->payload,(int)\
                                            3352 * rkq->rkq_qio->size) == -1)
00001FF0 E310 F090 0004          00000090   3353          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001FF6 E310 1000 0014          00000000   3354          LGF   1,0(0,1)
00001FFC E310 D0A8 0024          000000A8   3355          STG   1,168(0,13)
00002002 E310 F090 0004          00000090   3356          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00002008 E310 1008 0004          00000008   3357          LG    1,8(0,1)
0000200E E310 D0B0 0024          000000B0   3358          STG   1,176(0,13)
00002014 E3F0 F090 0004          00000090   3359          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000201A E3F0 F014 0014          00000014   3360          LGF   15,20(0,15)
00002020 E3F0 D0B8 0024          000000B8   3361          STG   15,184(0,13)
00002026 4110 D0A8               000000A8   3362          LA    1,168(0,13)
0000202A E3F0 C0A0 0004          00001FD0   3363          LG    15,@lit_1454_77 ; write
00002030                                    3364 @@gen_label122 DS    0H
00002030 05EF                               3365          BALR  14,15
00002032                                    3366 @@gen_label123 DS    0H
                                            3367 * ***
                                            3368 * ***                   ;
                                                                                                                           Page   72 
  Active Usings: @REGION_1454_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002032                                    3369 @L288    DS    0H
                                            3370 * ***   }
00002032                                    3371 @ret_lab_1454 DS 0H
                                            3372 * * **** Start of Epilogue
                                            3373          DCCEPIL
00002032                                    3374+         ds 0h                                                          01-DCCEP
                                            3375+* Epilog
00002032 D707 D088 D088 00000088 00000088   3376+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002038 E3D0 D080 0004          00000080   3377+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000203E E3C0 D090 0004          00000090   3378+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002044 E3B0 C018 0004          00000018   3379+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000204A E3C0 B010 0021          00000010   3380+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002050 E3E0 D008 0004          00000008   3381+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002056 EB1C D020 0004          00000020   3382+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000205C 078E                               3383+         bcr 8,14                if same dsab, just return              01-DCCEP
0000205E E3F0 D010 0024          00000010   3384+         stg 15,16(0,13)         save return code                       01-DCCEP
00002064 E300 D018 0024          00000018   3385+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000206A E3F0 D090 0004          00000090   3386+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002070 E3F0 F018 0004          00000018   3387+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002076 47F0 F040               00000040   3388+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3389+* End of Epilog
                                            3390 * * **** End of Epilogue
                                            3391          DROP  12
                                            3392 *
                                            3393 *   DSECT for automatic variables in "rd_kafka_q_io_event"
                                            3394 *      (FUNCTION #1454)
                                            3395 *
00000000                00000000 000000A8   3396 @AUTO#rd_kafka_q_io_event DSECT
00000000                                    3397          DS    XL168
                                            3398 *
0000207A                00000000 00012806   3399 @CODE    CSECT
                                            3400 *
                                            3401 *
                                            3402 *
                                            3403 * ....... start of rd_kafka_op_cmp_prio
0000207A                                    3404 @LNAME1455 DS  0H
0000207A 00000014                           3405          DC    X'00000014'
0000207E 99846D9281869281                   3406          DC    C'rd_kafka_op_cmp_prio'
00002092 00                                 3407          DC    X'00'
                                            3408 rd_kafka_op_cmp_prio DCCPRLG CINDEX=1455,BASER=12,FRAME=176,SAVEAREA=NO*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1455
                                            3409          macro
                                            3410          dccextrn &m
                                            3411          gblc    &$dccext(1000)
                                            3412          gbla    &$dccexti
                                            3413          lcla    &i
                                            3414 &$dccext(&$dccexti+1) setc    '&m'
                                            3415 &i       seta    1
                                            3416 .loop    aif    (&i gt &$dccexti).around
                                            3417          aif    ('&$dccext(&i)' eq '&m').getout
                                            3418 &i       seta    &i+1
                                            3419          ago     .loop
                                                                                                                           Page   73 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3420 .around  anop
                                            3421 &$dccexti seta &$dccexti+1
                                            3422          extrn  &m
                                            3423 .getout  anop
                                            3424          mend
00002098                                    3425+$eye0081    ds    0d                                                    02-DCCCA
00002098 C4C3C3                             3426+         dc cl3'DCC'                                                    02-DCCCA
0000209B 01                                 3427+         dc xl1'01' format one                                          02-DCCCA
0000209C 00000000                           3428+         dc a(0)                                                        02-DCCCA
000020A0 0000000000000000                   3429+         dc ad(0)                                                       02-DCCCA
000020A8 00000000000000B0                   3430+         dc ad(176)                                                     02-DCCCA
000020B0 0000000000000000                   3431+         dc ad(0)                                                       02-DCCCA
000020B8 0000000000001000                   3432+         dc ad(4096)                                                    02-DCCCA
000020C0 20                                 3433+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000020C1 03                                 3434+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000020C2 03                                 3435+         dc al1(3)                                                      02-DCCCA
000020C3 08                                 3436+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000020C4 00                                 3437+         dc bl.8'00000000'                                              02-DCCCA
000020C5 000000                             3438+         dc al3(0)                                                      02-DCCCA
000020C8 000000000000207A                   3439+         dc ad(@LNAME1455)                                              02-DCCCA
000020D0                                    3440+         ds 0d                                                          02-DCCCA
000020D0 0000000000002098                   3441+         dc ad($eye0081)                                                02-DCCCA
000020D8 0000000000000000                   3442+         dc ad(0)                                                       02-DCCCA
000020E0                                    3443+         ds    0d                                                       01-DCCPR
000020E0                                    3444+rd_kafka_op_cmp_prio ds 0d                                              01-DCCPR
000020E0                                    3445+@REGION_1455_1 ds 0h                                                    01-DCCPR
000020E0 EBEC D008 0024          00000008   3446+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000020E6 B904 00CF                          3447+         lgr   12,15               set base reg                         01-DCCPR
                        000020E0            3448+         using @REGION_1455_1,12                                        01-DCCPR
                                            3449 * ******* End of Prologue
                                            3450 * *
                                            3451 * ***           const rd_kafka_op_t *a = _a, *b = _b;
000020EA E3F0 1000 0004          00000000   3452          LG    15,0(0,1)   ; _a
000020F0 E310 1008 0004          00000008   3453          LG    1,8(0,1)    ; _b
                                            3454 * ***
                                            3455 * ***           return (int)((b->rko_prio) < (a->rko_prio) ? -1 : ((b-\
                                            3456 * >rko_prio) > (a->rko_prio)));
000020F6 5820 1034               00000034   3457          L     2,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
000020FA 5920 F034               00000034   3458          C     2,52(0,15)
000020FE 47B0 C02A               0000210A   3459          BNL   @L289
00002102 A7F8 FFFF               0000FFFF   3460          LHI   15,-1       ; -1
00002106 47F0 C042               00002122   3461          B     @L290
0000210A                                    3462 @L289    DS    0H
0000210A 5810 1034               00000034   3463          L     1,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
0000210E 5910 F034               00000034   3464          C     1,52(0,15)
00002112 47D0 C03E               0000211E   3465          BNH   @@gen_label125
00002116 A7F8 0001               00000001   3466          LHI   15,1
0000211A 47F0 C042               00002122   3467          B     @@gen_label126
0000211E                                    3468 @@gen_label125 DS 0H
0000211E A7F8 0000               00000000   3469          LHI   15,0
00002122                                    3470 @@gen_label126 DS 0H
00002122                                    3471 @L290    DS    0H
                                                                                                                           Page   74 
  Active Usings: @REGION_1455_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002122 B914 00FF                          3472          LGFR  15,15
                                            3473 * ***   }
                                            3474 * * **** Start of Epilogue
                                            3475          DCCEPIL
00002126                                    3476+         ds 0h                                                          01-DCCEP
                                            3477+* Epilog
                                            3478+* Epilog
00002126 E3E0 D008 0004          00000008   3479+         lg    14,8(,13) restore the reg                                01-DCCEP
0000212C EB1C D020 0004          00000020   3480+         lmg   1,12,32(13)                                              01-DCCEP
00002132 07FE                               3481+         br   14                                                        01-DCCEP
                                            3482+* End of Epilog
                                            3483 * * **** End of Epilogue
                                            3484          DROP  12
                                            3485 *
                                            3486 *   DSECT for automatic variables in "rd_kafka_op_cmp_prio"
                                            3487 *      (FUNCTION #1455)
                                            3488 *
00000000                00000000 000000A8   3489 @AUTO#rd_kafka_op_cmp_prio DSECT
00000000                                    3490          DS    XL168
                                            3491 *
00002134                00000000 00012806   3492 @CODE    CSECT
                                            3493 *
                                            3494 *
                                            3495 *
                                            3496 * ....... start of rd_kafka_q_enq0
00002134                                    3497 @LNAME1457 DS  0H
00002134 0000000F                           3498          DC    X'0000000F'
00002138 99846D9281869281                   3499          DC    C'rd_kafka_q_enq0'
00002147 00                                 3500          DC    X'00'
                                            3501 rd_kafka_q_enq0 DCCPRLG CINDEX=1457,BASER=12,FRAME=192,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1457
                                            3502          macro
                                            3503          dccextrn &m
                                            3504          gblc    &$dccext(1000)
                                            3505          gbla    &$dccexti
                                            3506          lcla    &i
                                            3507 &$dccext(&$dccexti+1) setc    '&m'
                                            3508 &i       seta    1
                                            3509 .loop    aif    (&i gt &$dccexti).around
                                            3510          aif    ('&$dccext(&i)' eq '&m').getout
                                            3511 &i       seta    &i+1
                                            3512          ago     .loop
                                            3513 .around  anop
                                            3514 &$dccexti seta &$dccexti+1
                                            3515          extrn  &m
                                            3516 .getout  anop
                                            3517          mend
00002148                                    3518+$eye0084    ds    0d                                                    02-DCCCA
00002148 C4C3C3                             3519+         dc cl3'DCC'                                                    02-DCCCA
0000214B 01                                 3520+         dc xl1'01' format one                                          02-DCCCA
0000214C 00000000                           3521+         dc a(0)                                                        02-DCCCA
00002150 00000000000021BA                   3522+         dc ad(@PER_1457)                                               02-DCCCA
                                                                                                                           Page   75 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002158 00000000000000C0                   3523+         dc ad(192)                                                     02-DCCCA
00002160 0000000000000000                   3524+         dc ad(0)                                                       02-DCCCA
00002168 0000000000001000                   3525+         dc ad(4096)                                                    02-DCCCA
00002170 20                                 3526+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002171 03                                 3527+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002172 03                                 3528+         dc al1(3)                                                      02-DCCCA
00002173 08                                 3529+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002174 00                                 3530+         dc bl.8'00000000'                                              02-DCCCA
00002175 000000                             3531+         dc al3(0)                                                      02-DCCCA
00002178 0000000000002134                   3532+         dc ad(@LNAME1457)                                              02-DCCCA
00002180                                    3533+         ds 0d                                                          02-DCCCA
00002180 0000000000002148                   3534+         dc ad($eye0084)                                                02-DCCCA
00002188 0000000000000000                   3535+         dc ad(0)                                                       02-DCCCA
00002190                                    3536+         ds    0d                                                       01-DCCPR
00002190                                    3537+rd_kafka_q_enq0 ds 0d                                                   01-DCCPR
00002190                                    3538+@REGION_1457_1 ds 0h                                                    01-DCCPR
00002190 EBEC D008 0024          00000008   3539+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002196 E3E0 D088 0004          00000088   3540+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000219C E3C0 D090 0004          00000090   3541+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000021A2 B904 002E                          3542+         lgr   2,14                copy addr of our savearea            01-DCCPR
000021A6 E3B0 C018 0004          00000018   3543+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000021AC A7EB 00C0               000000C0   3544+         aghi  14,192              increase by frame size               01-DCCPR
000021B0 E3E0 C020 0021          00000020   3545+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000021B6 4720 B020               00000020   3546+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000021BA                                    3547+@PER_1457 ds   0h                                                       01-DCCPR
000021BA EBDE 2080 0024          00000080   3548+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000021C0 E3C0 2090 0024          00000090   3549+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000021C6 B904 00D2                          3550+         lgr   13,2                set real frame pointer               01-DCCPR
000021CA B904 00CF                          3551+         lgr   12,15               set base reg                         01-DCCPR
                        00002190            3552+         using @REGION_1457_1,12                                        01-DCCPR
                                            3553 * ******* End of Prologue
                                            3554 * *
                                            3555 * ***       if (((!rko->rko_prio)))
000021CE EB34 1000 0004          00000000   3556          LMG   3,4,0(1)    ; rkq
000021D4 E3F0 4034 0012          00000034   3557          LT    15,52(0,4)  ; offset of rko_prio in rd_kafka_op_s
000021DA 4770 C090               00002220   3558          BNZ   @L298
                                            3559 * ***           do {  (rko)->rko_link .tqe_next = (((void *)0)); (rko)\
                                            3560 * ->rko_link .tqe_prev = (&rkq->rkq_q)->tqh_last; *(&rkq->rkq_q)->tqh_\
                                            3561 * last = (rko); (&rkq->rkq_q)->tqh_last = &(rko)->rko_link .tqe_next; \
                                            3562 * } while ( 0);
000021DE                                    3563 @L299    DS    0H
000021DE A7F9 0000               00000000   3564          LGHI  15,0        ; 0
000021E2 E3F0 4000 0024          00000000   3565          STG   15,0(0,4)   ; rko
000021E8 E3F0 3068 0004          00000068   3566          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
000021EE E3F0 4008 0024          00000008   3567          STG   15,8(0,4)   ; offset of tqe_prev in 0000056
000021F4 E3F0 3068 0004          00000068   3568          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
000021FA E340 F000 0024          00000000   3569          STG   4,0(0,15)
00002200 E340 3068 0024          00000068   3570          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
                                            3571 * ***       else if (at_head)
00002206 47F0 C1C2               00002352   3572          B     @L302
00002210                                    3573          DS    0D
00002210 000000C0                           3574 @FRAMESIZE_1457 DC F'192'
                                                                                                                           Page   76 
  Active Usings: @REGION_1457_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002214 00000000
00002218 00000000000020E0                   3575 @lit_1457_81 DC AD(rd_kafka_op_cmp_prio)
00002220                                    3576 @L298    DS    0H
00002220 E3F0 1014 0012          00000014   3577          LT    15,20(0,1)  ; at_head
00002226 4780 C0D8               00002268   3578          BZ    @L310
                                            3579 * ***               do {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_\
                                            3580 * q)->tqh_first) != (((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link \
                                            3581 * .tqe_prev = &(rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last\
                                            3582 *  = &(rko)->rko_link .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rk\
                                            3583 * o)->rko_link .tqe_prev = &(&rkq->rkq_q)->tqh_first; } while ( 0);
0000222A                                    3584 @L304    DS    0H
0000222A E3F0 3060 0004          00000060   3585          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00002230 E3F0 4000 0024          00000000   3586          STG   15,0(0,4)
00002236 B902 00FF                          3587          LTGR  15,15
0000223A 4780 C0BE               0000224E   3588          BE    @L307
0000223E E3F0 3060 0004          00000060   3589          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00002244 E340 F008 0024          00000008   3590          STG   4,8(0,15)   ; offset of tqe_prev in 0000056
0000224A 47F0 C0C4               00002254   3591          B     @L308
0000224E                                    3592 @L307    DS    0H
0000224E E340 3068 0024          00000068   3593          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00002254                                    3594 @L308    DS    0H
00002254 E340 3060 0024          00000060   3595          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
0000225A 41F0 3060               00000060   3596          LA    15,96(0,3)
0000225E E3F0 4008 0024          00000008   3597          STG   15,8(0,4)   ; offset of tqe_prev in 0000056
                                            3598 * ***       else
00002264 47F0 C1C2               00002352   3599          B     @L302
                                            3600 * ***           do { if(((&rkq->rkq_q)->tqh_first) == ((void *)0)) { d\
                                            3601 * o {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_q)->tqh_first) != (\
                                            3602 * ((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link .tqe_prev = &(rko)-\
                                            3603 * >rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rko_link\
                                            3604 *  .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rko)->rko_link .tqe_p\
                                            3605 * rev = &(&rkq->rkq_q)->tqh_first; } while ( 0); } else { rd_kafka_op_\
                                            3606 * t * _tmp; for ((_tmp) = ((&rkq->rkq_q)->tqh_first); (_tmp) != (((voi\
                                            3607 * d *)0)); (_tmp) = ((_tmp)->rko_link .tqe_next)) { if(rd_kafka_op_cmp\
                                            3608 * _prio(rko,_tmp) < 0) { do {  (rko)->rko_link .tqe_prev = (_tmp)->rko\
                                            3609 * _link .tqe_prev; (rko)->rko_link .tqe_next = (_tmp); *(_tmp)->rko_li\
                                            3610 * nk .tqe_prev = (rko); (_tmp)->rko_link .tqe_prev = &(rko)->rko_link \
                                            3611 * .tqe_next; } while ( 0); break; } if(!((_tmp)->rko_link .tqe_next)) \
                                            3612 * { do {  if (((rko)->rko_link .tqe_next = (_tmp)->rko_link .tqe_next)\
                                            3613 *  != (((void *)0))) (rko)->rko_link .tqe_next->rko_link .tqe_prev = &\
                                            3614 * (rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rk\
                                            3615 * o_link .tqe_next; (_tmp)->rko_link .tqe_next = (rko); (rko)->rko_lin\
                                            3616 * k .tqe_prev = &(_tmp)->rko_link .tqe_next; } while ( 0); break; } } \
                                            3617 * } } while(0);
00002268                                    3618 @L310    DS    0H
00002268 E3F0 3060 0002          00000060   3619          LTG   15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
0000226E 4770 C120               000022B0   3620          BNE   @L313
00002272                                    3621 @L314    DS    0H
00002272 E3F0 3060 0004          00000060   3622          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00002278 E3F0 4000 0024          00000000   3623          STG   15,0(0,4)
0000227E B902 00FF                          3624          LTGR  15,15
00002282 4780 C106               00002296   3625          BE    @L317
                                                                                                                           Page   77 
  Active Usings: @REGION_1457_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002286 E3F0 3060 0004          00000060   3626          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
0000228C E340 F008 0024          00000008   3627          STG   4,8(0,15)   ; offset of tqe_prev in 0000056
00002292 47F0 C10C               0000229C   3628          B     @L318
00002296                                    3629 @L317    DS    0H
00002296 E340 3068 0024          00000068   3630          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
0000229C                                    3631 @L318    DS    0H
0000229C E340 3060 0024          00000060   3632          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
000022A2 41F0 3060               00000060   3633          LA    15,96(0,3)
000022A6 E3F0 4008 0024          00000008   3634          STG   15,8(0,4)   ; offset of tqe_prev in 0000056
000022AC 47F0 C1C2               00002352   3635          B     @L319
000022B0                                    3636 @L313    DS    0H
000022B0 E320 3060 0004          00000060   3637          LG    2,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
000022B6 47F0 C1BA               0000234A   3638          B     @L321
000022BA                                    3639 @L320    DS    0H
000022BA E340 D0B0 0024          000000B0   3640          STG   4,176(0,13)
000022C0 E320 D0B8 0024          000000B8   3641          STG   2,184(0,13)
000022C6 4110 D0B0               000000B0   3642          LA    1,176(0,13)
000022CA E3F0 C088 0004          00002218   3643          LG    15,@lit_1457_81 ; rd_kafka_op_cmp_prio
000022D0                                    3644 @@gen_label132 DS    0H
000022D0 05EF                               3645          BALR  14,15
000022D2                                    3646 @@gen_label133 DS    0H
000022D2 12FF                               3647          LTR   15,15
000022D4 47B0 C170               00002300   3648          BNL   @L324
000022D8                                    3649 @L325    DS    0H
000022D8 E3F0 2008 0004          00000008   3650          LG    15,8(0,2)   ; offset of tqe_prev in 0000056
000022DE E3F0 4008 0024          00000008   3651          STG   15,8(0,4)   ; offset of tqe_prev in 0000056
000022E4 E320 4000 0024          00000000   3652          STG   2,0(0,4)    ; rko
000022EA E3F0 2008 0004          00000008   3653          LG    15,8(0,2)   ; offset of tqe_prev in 0000056
000022F0 E340 F000 0024          00000000   3654          STG   4,0(0,15)
000022F6 E340 2008 0024          00000008   3655          STG   4,8(0,2)    ; offset of tqe_prev in 0000056
000022FC 47F0 C1C2               00002352   3656          B     @L322
00002300                                    3657 @L324    DS    0H
00002300 E3F0 2000 0002          00000000   3658          LTG   15,0(0,2)   ; _tmp
00002306 4770 C1B4               00002344   3659          BNZ   @L328
0000230A                                    3660 @L329    DS    0H
0000230A E3F0 2000 0004          00000000   3661          LG    15,0(0,2)   ; _tmp
00002310 E3F0 4000 0024          00000000   3662          STG   15,0(0,4)
00002316 B902 00FF                          3663          LTGR  15,15
0000231A 4780 C19E               0000232E   3664          BE    @L332
0000231E E3F0 4000 0004          00000000   3665          LG    15,0(0,4)   ; rko
00002324 E340 F008 0024          00000008   3666          STG   4,8(0,15)   ; offset of tqe_prev in 0000056
0000232A 47F0 C1A4               00002334   3667          B     @L333
0000232E                                    3668 @L332    DS    0H
0000232E E340 3068 0024          00000068   3669          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00002334                                    3670 @L333    DS    0H
00002334 E340 2000 0024          00000000   3671          STG   4,0(0,2)    ; _tmp
0000233A E320 4008 0024          00000008   3672          STG   2,8(0,4)    ; offset of tqe_prev in 0000056
00002340 47F0 C1C2               00002352   3673          B     @L322
00002344                                    3674 @L328    DS    0H
00002344 E320 2000 0004          00000000   3675          LG    2,0(0,2)    ; _tmp
0000234A                                    3676 @L321    DS    0H
0000234A B902 00F2                          3677          LTGR  15,2
                                                                                                                           Page   78 
  Active Usings: @REGION_1457_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000234E 4770 C12A               000022BA   3678          BNE   @L320
00002352                                    3679 @L322    DS    0H
00002352                                    3680 @L319    DS    0H
                                            3681 * ***
                                            3682 * ***       rkq->rkq_qlen++;
00002352                                    3683 @L309    DS    0H
00002352                                    3684 @L302    DS    0H
00002352 58F0 3070               00000070   3685          L     15,112(0,3)
00002356 A7FA 0001               00000001   3686          AHI   15,1
0000235A 50F0 3070               00000070   3687          ST    15,112(0,3)
                                            3688 * ***       rkq->rkq_qsize += rko->rko_len;
0000235E E3F0 3078 0004          00000078   3689          LG    15,120(0,3)
00002364 E3F0 4030 0018          00000030   3690          AGF   15,48(0,4)
0000236A E3F0 3078 0024          00000078   3691          STG   15,120(0,3)
                                            3692 * ***   }
00002370                                    3693 @ret_lab_1457 DS 0H
                                            3694 * * **** Start of Epilogue
                                            3695          DCCEPIL
00002370                                    3696+         ds 0h                                                          01-DCCEP
                                            3697+* Epilog
00002370 D707 D088 D088 00000088 00000088   3698+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002376 E3D0 D080 0004          00000080   3699+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000237C E3C0 D090 0004          00000090   3700+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002382 E3B0 C018 0004          00000018   3701+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002388 E3C0 B010 0021          00000010   3702+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000238E E3E0 D008 0004          00000008   3703+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002394 EB1C D020 0004          00000020   3704+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000239A 078E                               3705+         bcr 8,14                if same dsab, just return              01-DCCEP
0000239C E3F0 D010 0024          00000010   3706+         stg 15,16(0,13)         save return code                       01-DCCEP
000023A2 E300 D018 0024          00000018   3707+         stg 0,24(0,13)          save more return code                  01-DCCEP
000023A8 E3F0 D090 0004          00000090   3708+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000023AE E3F0 F018 0004          00000018   3709+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000023B4 47F0 F040               00000040   3710+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3711+* End of Epilog
                                            3712 * * **** End of Epilogue
                                            3713          DROP  12
                                            3714 *
                                            3715 *   DSECT for automatic variables in "rd_kafka_q_enq0"
                                            3716 *      (FUNCTION #1457)
                                            3717 *
00000000                00000000 000000A8   3718 @AUTO#rd_kafka_q_enq0 DSECT
00000000                                    3719          DS    XL168
                                            3720 *
000023B8                00000000 00012806   3721 @CODE    CSECT
                                            3722 *
                                            3723 *
                                            3724 *
                                            3725 * ....... start of rd_kafka_q_enq1
000023B8                                    3726 @LNAME1458 DS  0H
000023B8 0000000F                           3727          DC    X'0000000F'
000023BC 99846D9281869281                   3728          DC    C'rd_kafka_q_enq1'
000023CB 00                                 3729          DC    X'00'
                                                                                                                           Page   79 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3730 rd_kafka_q_enq1 DCCPRLG CINDEX=1458,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1458
                                            3731          macro
                                            3732          dccextrn &m
                                            3733          gblc    &$dccext(1000)
                                            3734          gbla    &$dccexti
                                            3735          lcla    &i
                                            3736 &$dccext(&$dccexti+1) setc    '&m'
                                            3737 &i       seta    1
                                            3738 .loop    aif    (&i gt &$dccexti).around
                                            3739          aif    ('&$dccext(&i)' eq '&m').getout
                                            3740 &i       seta    &i+1
                                            3741          ago     .loop
                                            3742 .around  anop
                                            3743 &$dccexti seta &$dccexti+1
                                            3744          extrn  &m
                                            3745 .getout  anop
                                            3746          mend
000023D0                                    3747+$eye0087    ds    0d                                                    02-DCCCA
000023D0 C4C3C3                             3748+         dc cl3'DCC'                                                    02-DCCCA
000023D3 01                                 3749+         dc xl1'01' format one                                          02-DCCCA
000023D4 00000000                           3750+         dc a(0)                                                        02-DCCCA
000023D8 0000000000002442                   3751+         dc ad(@PER_1458)                                               02-DCCCA
000023E0 00000000000000D8                   3752+         dc ad(216)                                                     02-DCCCA
000023E8 0000000000000000                   3753+         dc ad(0)                                                       02-DCCCA
000023F0 0000000000001000                   3754+         dc ad(4096)                                                    02-DCCCA
000023F8 20                                 3755+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000023F9 03                                 3756+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000023FA 03                                 3757+         dc al1(3)                                                      02-DCCCA
000023FB 08                                 3758+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000023FC 00                                 3759+         dc bl.8'00000000'                                              02-DCCCA
000023FD 000000                             3760+         dc al3(0)                                                      02-DCCCA
00002400 00000000000023B8                   3761+         dc ad(@LNAME1458)                                              02-DCCCA
00002408                                    3762+         ds 0d                                                          02-DCCCA
00002408 00000000000023D0                   3763+         dc ad($eye0087)                                                02-DCCCA
00002410 0000000000000000                   3764+         dc ad(0)                                                       02-DCCCA
00002418                                    3765+         ds    0d                                                       01-DCCPR
00002418                                    3766+rd_kafka_q_enq1 ds 0d                                                   01-DCCPR
00002418                                    3767+@REGION_1458_1 ds 0h                                                    01-DCCPR
00002418 EBEC D008 0024          00000008   3768+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000241E E3E0 D088 0004          00000088   3769+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002424 E3C0 D090 0004          00000090   3770+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000242A B904 002E                          3771+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000242E E3B0 C018 0004          00000018   3772+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002434 A7EB 00D8               000000D8   3773+         aghi  14,216              increase by frame size               01-DCCPR
00002438 E3E0 C020 0021          00000020   3774+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000243E 4720 B020               00000020   3775+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002442                                    3776+@PER_1458 ds   0h                                                       01-DCCPR
00002442 EBDE 2080 0024          00000080   3777+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002448 E3C0 2090 0024          00000090   3778+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000244E B904 00D2                          3779+         lgr   13,2                set real frame pointer               01-DCCPR
00002452 B904 00CF                          3780+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   80 
  Active Usings: @REGION_1458_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00002418            3781+         using @REGION_1458_1,12                                        01-DCCPR
00002456 B904 0071                          3782          LGR   7,1         ; ptr to parm area
                                            3783 * ******* End of Prologue
                                            3784 * *
0000245A EB24 7000 0004          00000000   3785          LMG   2,4,0(7)    ; rkq
00002460 E350 7024 0012          00000024   3786          LT    5,36(0,7)   ; do_lock
                                            3787 * ***           rd_kafka_q_t *fwdq;
                                            3788 * ***
                                            3789 * ***           if (do_lock)
00002466 4780 C064               0000247C   3790          BZ    @L335
                                            3791 * ***                   mtx_lock(&rkq->rkq_lock);
0000246A E320 D0B0 0024          000000B0   3792          STG   2,176(0,13)
00002470 4110 D0B0               000000B0   3793          LA    1,176(0,13)
00002474 E3F0 C0B0 0004          000024C8   3794          LG    15,@lit_1458_83 ; mtx_lock
0000247A                                    3795 @@gen_label139 DS    0H
0000247A 05EF                               3796          BALR  14,15
0000247C                                    3797 @@gen_label140 DS    0H
0000247C                                    3798 @L334    DS    0H
                                            3799 * ***
                                            3800 * ***           do {} while (0);
0000247C                                    3801 @L335    DS    0H
                                            3802 * ***
                                            3803 * ***           if (((!(rkq->rkq_flags & 0x2)))) {
0000247C 9102 2087      00000087 00000002   3804          TM    135(2),2
00002480 4770 C0F8               00002510   3805          BNZ   @L338
                                            3806 * ***
                                            3807 * ***                   if (do_lock)
00002484 1255                               3808          LTR   5,5
00002486 4780 C084               0000249C   3809          BZ    @L339
                                            3810 * ***                           mtx_unlock(&rkq->rkq_lock);
0000248A E320 D0B0 0024          000000B0   3811          STG   2,176(0,13)
00002490 4110 D0B0               000000B0   3812          LA    1,176(0,13)
00002494 E3F0 C0B8 0004          000024D0   3813          LG    15,@lit_1458_84 ; mtx_unlock
0000249A                                    3814 @@gen_label143 DS    0H
0000249A 05EF                               3815          BALR  14,15
0000249C                                    3816 @@gen_label144 DS    0H
0000249C                                    3817 @L339    DS    0H
                                            3818 * ***
                                            3819 * ***                   return rd_kafka_op_reply(rko, RD_KAFKA_RESP_ER\
                                            3820 * R__DESTROY);
0000249C E330 D0B0 0024          000000B0   3821          STG   3,176(0,13)
000024A2 E548 D0B8 FF3B          000000B8   3822          MVGHI 184(13),-197
000024A8 4110 D0B0               000000B0   3823          LA    1,176(0,13)
000024AC E3F0 C0C0 0004          000024D8   3824          LG    15,@lit_1458_85 ; rd_kafka_op_reply
000024B2                                    3825 @@gen_label145 DS    0H
000024B2 05EF                               3826          BALR  14,15
000024B4                                    3827 @@gen_label146 DS    0H
000024B4 B914 00FF                          3828          LGFR  15,15
000024B8 47F0 C212               0000262A   3829          B     @ret_lab_1458
000024C0                                    3830          DS    0D
000024C0 000000D8                           3831 @FRAMESIZE_1458 DC F'216'
000024C4 00000000
                                                                                                                           Page   81 
  Active Usings: @REGION_1458_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000024C8 0000000000000000                   3832 @lit_1458_83 DC AD(mtx_lock)
000024D0 0000000000000000                   3833 @lit_1458_84 DC AD(mtx_unlock)
000024D8 0000000000000000                   3834 @lit_1458_85 DC AD(rd_kafka_op_reply)
000024E0 0000000000001DC8                   3835 @lit_1458_86 DC AD(rd_kafka_q_fwd_get)
000024E8 0000000000002190                   3836 @lit_1458_87 DC AD(rd_kafka_q_enq0)
000024F0 0000000000000000                   3837 @lit_1458_88 DC AD(cnd_signal)
000024F8 0000000000001F30                   3838 @lit_1458_89 DC AD(rd_kafka_q_io_event)
00002500 0000000000002418                   3839 @lit_1458_92 DC AD(rd_kafka_q_enq1)
00002508 00000000000019F8                   3840 @lit_1458_93 DC AD(rd_kafka_q_destroy0)
                                            3841 * ***           }
00002510                                    3842 @L338    DS    0H
                                            3843 * ***
                                            3844 * ***           if (!(fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
00002510 E320 D0B0 0024          000000B0   3845          STG   2,176(0,13)
00002516 D707 D0B8 D0B8 000000B8 000000B8   3846          XC    184(8,13),184(13)
0000251C 4110 D0B0               000000B0   3847          LA    1,176(0,13)
00002520 E3F0 C0C8 0004          000024E0   3848          LG    15,@lit_1458_86 ; rd_kafka_q_fwd_get
00002526                                    3849 @@gen_label147 DS    0H
00002526 05EF                               3850          BALR  14,15
00002528                                    3851 @@gen_label148 DS    0H
00002528 B904 006F                          3852          LGR   6,15
0000252C B902 00F6                          3853          LTGR  15,6
00002530 4770 C1B4               000025CC   3854          BNZ   @L340
                                            3855 * ***                   if (!rko->rko_serve && orig_destq->rkq_serve) \
                                            3856 * {
00002534 E3F0 3050 0002          00000050   3857          LTG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
0000253A 4770 C148               00002560   3858          BNZ   @L341
0000253E E3F0 4098 0002          00000098   3859          LTG   15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
00002544 4780 C148               00002560   3860          BZ    @L341
                                            3861 * ***
                                            3862 * ***
                                            3863 * ***                           rko->rko_serve = orig_destq->rkq_serve\
                                            3864 * ;
00002548 E3F0 4098 0004          00000098   3865          LG    15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
0000254E E3F0 3050 0024          00000050   3866          STG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
                                            3867 * ***                           rko->rko_serve_opaque = orig_destq->rk\
                                            3868 * q_opaque;
00002554 E3F0 40A0 0004          000000A0   3869          LG    15,160(0,4) ; offset of rkq_opaque in rd_kafka_q_s
0000255A E3F0 3058 0024          00000058   3870          STG   15,88(0,3)  ; offset of rko_serve_opaque in rd_kafka_op_*
                                                                s
                                            3871 * ***                   }
00002560                                    3872 @L341    DS    0H
                                            3873 * ***
                                            3874 * ***                   rd_kafka_q_enq0(rkq, rko, at_head);
00002560 EB23 D0B0 0024          000000B0   3875          STMG  2,3,176(13)
00002566 E3F0 701C 0014          0000001C   3876          LGF   15,28(0,7)  ; at_head
0000256C E3F0 D0C0 0024          000000C0   3877          STG   15,192(0,13)
00002572 4110 D0B0               000000B0   3878          LA    1,176(0,13)
00002576 E3F0 C0D0 0004          000024E8   3879          LG    15,@lit_1458_87 ; rd_kafka_q_enq0
0000257C                                    3880 @@gen_label152 DS    0H
0000257C 05EF                               3881          BALR  14,15
0000257E                                    3882 @@gen_label153 DS    0H
                                                                                                                           Page   82 
  Active Usings: @REGION_1458_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3883 * ***                   cnd_signal(&rkq->rkq_cond);
0000257E 41F0 2028               00000028   3884          LA    15,40(0,2)
00002582 E3F0 D0B0 0024          000000B0   3885          STG   15,176(0,13)
00002588 4110 D0B0               000000B0   3886          LA    1,176(0,13)
0000258C E3F0 C0D8 0004          000024F0   3887          LG    15,@lit_1458_88 ; cnd_signal
00002592                                    3888 @@gen_label154 DS    0H
00002592 05EF                               3889          BALR  14,15
00002594                                    3890 @@gen_label155 DS    0H
                                            3891 * ***                   if (rkq->rkq_qlen == 1)
00002594 E55C 2070 0001          00000070   3892          CHSI  112(2),1
0000259A 4770 C198               000025B0   3893          BNE   @L342
                                            3894 * ***                           rd_kafka_q_io_event(rkq);
0000259E E320 D0B0 0024          000000B0   3895          STG   2,176(0,13)
000025A4 4110 D0B0               000000B0   3896          LA    1,176(0,13)
000025A8 E3F0 C0E0 0004          000024F8   3897          LG    15,@lit_1458_89 ; rd_kafka_q_io_event
000025AE                                    3898 @@gen_label157 DS    0H
000025AE 05EF                               3899          BALR  14,15
000025B0                                    3900 @@gen_label158 DS    0H
000025B0                                    3901 @L342    DS    0H
                                            3902 * ***
                                            3903 * ***                   if (do_lock)
000025B0 1255                               3904          LTR   5,5
000025B2 4780 C20E               00002626   3905          BZ    @L344
                                            3906 * ***                           mtx_unlock(&rkq->rkq_lock);
000025B6 E320 D0B0 0024          000000B0   3907          STG   2,176(0,13)
000025BC 4110 D0B0               000000B0   3908          LA    1,176(0,13)
000025C0 E3F0 C0B8 0004          000024D0   3909          LG    15,@lit_1458_84 ; mtx_unlock
000025C6                                    3910 @@gen_label160 DS    0H
000025C6 05EF                               3911          BALR  14,15
000025C8                                    3912 @@gen_label161 DS    0H
000025C8                                    3913 @L343    DS    0H
                                            3914 * ***           } else {
000025C8 47F0 C20E               00002626   3915          B     @L344
000025CC                                    3916 @L340    DS    0H
                                            3917 * ***                   if (do_lock)
000025CC 1255                               3918          LTR   5,5
000025CE 4780 C1CC               000025E4   3919          BZ    @L345
                                            3920 * ***                           mtx_unlock(&rkq->rkq_lock);
000025D2 E320 D0B0 0024          000000B0   3921          STG   2,176(0,13)
000025D8 4110 D0B0               000000B0   3922          LA    1,176(0,13)
000025DC E3F0 C0B8 0004          000024D0   3923          LG    15,@lit_1458_84 ; mtx_unlock
000025E2                                    3924 @@gen_label163 DS    0H
000025E2 05EF                               3925          BALR  14,15
000025E4                                    3926 @@gen_label164 DS    0H
000025E4                                    3927 @L345    DS    0H
                                            3928 * ***                   rd_kafka_q_enq1(fwdq, rko, orig_destq, at_head\
                                            3929 * , 1);
000025E4 E360 D0B0 0024          000000B0   3930          STG   6,176(0,13)
000025EA EB34 D0B8 0024          000000B8   3931          STMG  3,4,184(13)
000025F0 E3F0 701C 0014          0000001C   3932          LGF   15,28(0,7)  ; at_head
000025F6 E3F0 D0C8 0024          000000C8   3933          STG   15,200(0,13)
000025FC E548 D0D0 0001          000000D0   3934          MVGHI 208(13),1
                                                                                                                           Page   83 
  Active Usings: @REGION_1458_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002602 4110 D0B0               000000B0   3935          LA    1,176(0,13)
00002606 E3F0 C0E8 0004          00002500   3936          LG    15,@lit_1458_92 ; rd_kafka_q_enq1
0000260C                                    3937 @@gen_label165 DS    0H
0000260C 05EF                               3938          BALR  14,15
0000260E                                    3939 @@gen_label166 DS    0H
                                            3940 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
0000260E E360 D0B0 0024          000000B0   3941          STG   6,176(0,13)
00002614 D707 D0B8 D0B8 000000B8 000000B8   3942          XC    184(8,13),184(13)
0000261A 4110 D0B0               000000B0   3943          LA    1,176(0,13)
0000261E E3F0 C0F0 0004          00002508   3944          LG    15,@lit_1458_93 ; rd_kafka_q_destroy0
00002624                                    3945 @@gen_label167 DS    0H
00002624 05EF                               3946          BALR  14,15
00002626                                    3947 @@gen_label168 DS    0H
                                            3948 * ***           }
00002626                                    3949 @L344    DS    0H
                                            3950 * ***
                                            3951 * ***           return 1;
00002626 A7F9 0001               00000001   3952          LGHI  15,1        ; 1
                                            3953 * ***   }
0000262A                                    3954 @ret_lab_1458 DS 0H
                                            3955 * * **** Start of Epilogue
                                            3956          DCCEPIL
0000262A                                    3957+         ds 0h                                                          01-DCCEP
                                            3958+* Epilog
0000262A D707 D088 D088 00000088 00000088   3959+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002630 E3D0 D080 0004          00000080   3960+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002636 E3C0 D090 0004          00000090   3961+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000263C E3B0 C018 0004          00000018   3962+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002642 E3C0 B010 0021          00000010   3963+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002648 E3E0 D008 0004          00000008   3964+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000264E EB1C D020 0004          00000020   3965+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002654 078E                               3966+         bcr 8,14                if same dsab, just return              01-DCCEP
00002656 E3F0 D010 0024          00000010   3967+         stg 15,16(0,13)         save return code                       01-DCCEP
0000265C E300 D018 0024          00000018   3968+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002662 E3F0 D090 0004          00000090   3969+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002668 E3F0 F018 0004          00000018   3970+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000266E 47F0 F040               00000040   3971+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3972+* End of Epilog
                                            3973 * * **** End of Epilogue
                                            3974          DROP  12
                                            3975 *
                                            3976 *   DSECT for automatic variables in "rd_kafka_q_enq1"
                                            3977 *      (FUNCTION #1458)
                                            3978 *
00000000                00000000 000000A8   3979 @AUTO#rd_kafka_q_enq1 DSECT
00000000                                    3980          DS    XL168
                                            3981 *
00002672                00000000 00012806   3982 @CODE    CSECT
                                            3983 *
                                            3984 *
                                            3985 *
                                            3986 * ....... start of rd_kafka_q_enq
                                                                                                                           Page   84 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002672                                    3987 @LNAME1459 DS  0H
00002672 0000000E                           3988          DC    X'0000000E'
00002676 99846D9281869281                   3989          DC    C'rd_kafka_q_enq'
00002684 00                                 3990          DC    X'00'
                                            3991 rd_kafka_q_enq DCCPRLG CINDEX=1459,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1459
                                            3992          macro
                                            3993          dccextrn &m
                                            3994          gblc    &$dccext(1000)
                                            3995          gbla    &$dccexti
                                            3996          lcla    &i
                                            3997 &$dccext(&$dccexti+1) setc    '&m'
                                            3998 &i       seta    1
                                            3999 .loop    aif    (&i gt &$dccexti).around
                                            4000          aif    ('&$dccext(&i)' eq '&m').getout
                                            4001 &i       seta    &i+1
                                            4002          ago     .loop
                                            4003 .around  anop
                                            4004 &$dccexti seta &$dccexti+1
                                            4005          extrn  &m
                                            4006 .getout  anop
                                            4007          mend
00002688                                    4008+$eye0090    ds    0d                                                    02-DCCCA
00002688 C4C3C3                             4009+         dc cl3'DCC'                                                    02-DCCCA
0000268B 01                                 4010+         dc xl1'01' format one                                          02-DCCCA
0000268C 00000000                           4011+         dc a(0)                                                        02-DCCCA
00002690 00000000000026FA                   4012+         dc ad(@PER_1459)                                               02-DCCCA
00002698 00000000000000D0                   4013+         dc ad(208)                                                     02-DCCCA
000026A0 0000000000000000                   4014+         dc ad(0)                                                       02-DCCCA
000026A8 0000000000001000                   4015+         dc ad(4096)                                                    02-DCCCA
000026B0 20                                 4016+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000026B1 03                                 4017+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000026B2 03                                 4018+         dc al1(3)                                                      02-DCCCA
000026B3 08                                 4019+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000026B4 00                                 4020+         dc bl.8'00000000'                                              02-DCCCA
000026B5 000000                             4021+         dc al3(0)                                                      02-DCCCA
000026B8 0000000000002672                   4022+         dc ad(@LNAME1459)                                              02-DCCCA
000026C0                                    4023+         ds 0d                                                          02-DCCCA
000026C0 0000000000002688                   4024+         dc ad($eye0090)                                                02-DCCCA
000026C8 0000000000000000                   4025+         dc ad(0)                                                       02-DCCCA
000026D0                                    4026+         ds    0d                                                       01-DCCPR
000026D0                                    4027+rd_kafka_q_enq ds 0d                                                    01-DCCPR
000026D0                                    4028+@REGION_1459_1 ds 0h                                                    01-DCCPR
000026D0 EBEC D008 0024          00000008   4029+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000026D6 E3E0 D088 0004          00000088   4030+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000026DC E3C0 D090 0004          00000090   4031+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000026E2 B904 002E                          4032+         lgr   2,14                copy addr of our savearea            01-DCCPR
000026E6 E3B0 C018 0004          00000018   4033+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000026EC A7EB 00D0               000000D0   4034+         aghi  14,208              increase by frame size               01-DCCPR
000026F0 E3E0 C020 0021          00000020   4035+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000026F6 4720 B020               00000020   4036+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000026FA                                    4037+@PER_1459 ds   0h                                                       01-DCCPR
                                                                                                                           Page   85 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000026FA EBDE 2080 0024          00000080   4038+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002700 E3C0 2090 0024          00000090   4039+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002706 B904 00D2                          4040+         lgr   13,2                set real frame pointer               01-DCCPR
0000270A B904 00CF                          4041+         lgr   12,15               set base reg                         01-DCCPR
                        000026D0            4042+         using @REGION_1459_1,12                                        01-DCCPR
                                            4043 * ******* End of Prologue
                                            4044 * *
                                            4045 * ***           return rd_kafka_q_enq1(rkq, rko, rkq, 0, 1);
0000270E E3F0 1000 0004          00000000   4046          LG    15,0(0,1)   ; rkq
00002714 E3F0 D0A8 0024          000000A8   4047          STG   15,168(0,13)
0000271A E3F0 1008 0004          00000008   4048          LG    15,8(0,1)   ; rko
00002720 E3F0 D0B0 0024          000000B0   4049          STG   15,176(0,13)
00002726 E3F0 1000 0004          00000000   4050          LG    15,0(0,1)   ; rkq
0000272C E3F0 D0B8 0024          000000B8   4051          STG   15,184(0,13)
00002732 D707 D0C0 D0C0 000000C0 000000C0   4052          XC    192(8,13),192(13)
00002738 E548 D0C8 0001          000000C8   4053          MVGHI 200(13),1
0000273E 4110 D0A8               000000A8   4054          LA    1,168(0,13)
00002742 E3F0 C0D0 0004          000027A0   4055          LG    15,@lit_1459_96 ; rd_kafka_q_enq1
00002748                                    4056 @@gen_label169 DS    0H
00002748 05EF                               4057          BALR  14,15
0000274A                                    4058 @@gen_label170 DS    0H
0000274A B914 00FF                          4059          LGFR  15,15
                                            4060 * ***   }
                                            4061 * * **** Start of Epilogue
                                            4062          DCCEPIL
0000274E                                    4063+         ds 0h                                                          01-DCCEP
                                            4064+* Epilog
0000274E D707 D088 D088 00000088 00000088   4065+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002754 E3D0 D080 0004          00000080   4066+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000275A E3C0 D090 0004          00000090   4067+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002760 E3B0 C018 0004          00000018   4068+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002766 E3C0 B010 0021          00000010   4069+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000276C E3E0 D008 0004          00000008   4070+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002772 EB1C D020 0004          00000020   4071+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002778 078E                               4072+         bcr 8,14                if same dsab, just return              01-DCCEP
0000277A E3F0 D010 0024          00000010   4073+         stg 15,16(0,13)         save return code                       01-DCCEP
00002780 E300 D018 0024          00000018   4074+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002786 E3F0 D090 0004          00000090   4075+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000278C E3F0 F018 0004          00000018   4076+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002792 47F0 F040               00000040   4077+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4078+* End of Epilog
                                            4079 * * **** End of Epilogue
00002798                                    4080          DS    0D
00002798 000000D0                           4081 @FRAMESIZE_1459 DC F'208'
0000279C 00000000
000027A0 0000000000002418                   4082 @lit_1459_96 DC AD(rd_kafka_q_enq1)
                                            4083          DROP  12
                                            4084 *
                                            4085 *   DSECT for automatic variables in "rd_kafka_q_enq"
                                            4086 *      (FUNCTION #1459)
                                            4087 *
00000000                00000000 000000A8   4088 @AUTO#rd_kafka_q_enq DSECT
                                                                                                                           Page   86 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                                    4089          DS    XL168
                                            4090 *
000027A8                00000000 00012806   4091 @CODE    CSECT
                                            4092 *
                                            4093 *
                                            4094 *
                                            4095 * ....... start of rd_kafka_q_mark_served
000027A8                                    4096 @LNAME1462 DS  0H
000027A8 00000016                           4097          DC    X'00000016'
000027AC 99846D9281869281                   4098          DC    C'rd_kafka_q_mark_served'
000027C2 00                                 4099          DC    X'00'
                                            4100 rd_kafka_q_mark_served DCCPRLG CINDEX=1462,BASER=12,FRAME=168,SAVEAREA=*
                                                                NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1462
                                            4101          macro
                                            4102          dccextrn &m
                                            4103          gblc    &$dccext(1000)
                                            4104          gbla    &$dccexti
                                            4105          lcla    &i
                                            4106 &$dccext(&$dccexti+1) setc    '&m'
                                            4107 &i       seta    1
                                            4108 .loop    aif    (&i gt &$dccexti).around
                                            4109          aif    ('&$dccext(&i)' eq '&m').getout
                                            4110 &i       seta    &i+1
                                            4111          ago     .loop
                                            4112 .around  anop
                                            4113 &$dccexti seta &$dccexti+1
                                            4114          extrn  &m
                                            4115 .getout  anop
                                            4116          mend
000027C8                                    4117+$eye0093    ds    0d                                                    02-DCCCA
000027C8 C4C3C3                             4118+         dc cl3'DCC'                                                    02-DCCCA
000027CB 01                                 4119+         dc xl1'01' format one                                          02-DCCCA
000027CC 00000000                           4120+         dc a(0)                                                        02-DCCCA
000027D0 0000000000000000                   4121+         dc ad(0)                                                       02-DCCCA
000027D8 00000000000000A8                   4122+         dc ad(168)                                                     02-DCCCA
000027E0 0000000000000000                   4123+         dc ad(0)                                                       02-DCCCA
000027E8 0000000000001000                   4124+         dc ad(4096)                                                    02-DCCCA
000027F0 20                                 4125+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000027F1 03                                 4126+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000027F2 03                                 4127+         dc al1(3)                                                      02-DCCCA
000027F3 08                                 4128+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000027F4 00                                 4129+         dc bl.8'00000000'                                              02-DCCCA
000027F5 000000                             4130+         dc al3(0)                                                      02-DCCCA
000027F8 00000000000027A8                   4131+         dc ad(@LNAME1462)                                              02-DCCCA
00002800                                    4132+         ds 0d                                                          02-DCCCA
00002800 00000000000027C8                   4133+         dc ad($eye0093)                                                02-DCCCA
00002808 0000000000000000                   4134+         dc ad(0)                                                       02-DCCCA
00002810                                    4135+         ds    0d                                                       01-DCCPR
00002810                                    4136+rd_kafka_q_mark_served ds 0d                                            01-DCCPR
00002810                                    4137+@REGION_1462_1 ds 0h                                                    01-DCCPR
00002810 EBEC D008 0024          00000008   4138+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002816 B904 00CF                          4139+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   87 
  Active Usings: @REGION_1462_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00002810            4140+         using @REGION_1462_1,12                                        01-DCCPR
                                            4141 * ******* End of Prologue
                                            4142 * *
                                            4143 * ***           if (rkq->rkq_qio)
0000281A E3F0 1000 0004          00000000   4144          LG    15,0(0,1)   ; rkq
00002820 E310 F090 0002          00000090   4145          LTG   1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00002826 4780 C024               00002834   4146          BZ    @ret_lab_1462
                                            4147 * ***                   rkq->rkq_qio->sent = 0;
0000282A E3F0 F090 0004          00000090   4148          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00002830 9200 F018      00000018 00000000   4149          MVI   24(15),0    ; offset of sent in rd_kafka_q_io
00002834                                    4150 @L354    DS    0H
                                            4151 * ***   }
00002834                                    4152 @ret_lab_1462 DS 0H
                                            4153 * * **** Start of Epilogue
                                            4154          DCCEPIL
00002834                                    4155+         ds 0h                                                          01-DCCEP
                                            4156+* Epilog
                                            4157+* Epilog
00002834 E3E0 D008 0004          00000008   4158+         lg    14,8(,13) restore the reg                                01-DCCEP
0000283A EB1C D020 0004          00000020   4159+         lmg   1,12,32(13)                                              01-DCCEP
00002840 07FE                               4160+         br   14                                                        01-DCCEP
                                            4161+* End of Epilog
                                            4162 * * **** End of Epilogue
                                            4163          DROP  12
                                            4164 *
                                            4165 *   DSECT for automatic variables in "rd_kafka_q_mark_served"
                                            4166 *      (FUNCTION #1462)
                                            4167 *
00000000                00000000 000000A8   4168 @AUTO#rd_kafka_q_mark_served DSECT
00000000                                    4169          DS    XL168
                                            4170 *
00002842                00000000 00012806   4171 @CODE    CSECT
                                            4172 *
                                            4173 *
                                            4174 *
                                            4175 * ....... start of rd_kafka_q_concat0
00002842                                    4176 @LNAME1463 DS  0H
00002842 00000012                           4177          DC    X'00000012'
00002846 99846D9281869281                   4178          DC    C'rd_kafka_q_concat0'
00002858 00                                 4179          DC    X'00'
                                            4180 rd_kafka_q_concat0 DCCPRLG CINDEX=1463,BASER=12,FRAME=200,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1463
                                            4181          macro
                                            4182          dccextrn &m
                                            4183          gblc    &$dccext(1000)
                                            4184          gbla    &$dccexti
                                            4185          lcla    &i
                                            4186 &$dccext(&$dccexti+1) setc    '&m'
                                            4187 &i       seta    1
                                            4188 .loop    aif    (&i gt &$dccexti).around
                                            4189          aif    ('&$dccext(&i)' eq '&m').getout
                                            4190 &i       seta    &i+1
                                                                                                                           Page   88 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4191          ago     .loop
                                            4192 .around  anop
                                            4193 &$dccexti seta &$dccexti+1
                                            4194          extrn  &m
                                            4195 .getout  anop
                                            4196          mend
00002860                                    4197+$eye0096    ds    0d                                                    02-DCCCA
00002860 C4C3C3                             4198+         dc cl3'DCC'                                                    02-DCCCA
00002863 01                                 4199+         dc xl1'01' format one                                          02-DCCCA
00002864 00000000                           4200+         dc a(0)                                                        02-DCCCA
00002868 00000000000028D2                   4201+         dc ad(@PER_1463)                                               02-DCCCA
00002870 00000000000000C8                   4202+         dc ad(200)                                                     02-DCCCA
00002878 0000000000000000                   4203+         dc ad(0)                                                       02-DCCCA
00002880 0000000000001000                   4204+         dc ad(4096)                                                    02-DCCCA
00002888 20                                 4205+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002889 03                                 4206+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000288A 03                                 4207+         dc al1(3)                                                      02-DCCCA
0000288B 08                                 4208+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000288C 00                                 4209+         dc bl.8'00000000'                                              02-DCCCA
0000288D 000000                             4210+         dc al3(0)                                                      02-DCCCA
00002890 0000000000002842                   4211+         dc ad(@LNAME1463)                                              02-DCCCA
00002898                                    4212+         ds 0d                                                          02-DCCCA
00002898 0000000000002860                   4213+         dc ad($eye0096)                                                02-DCCCA
000028A0 0000000000000000                   4214+         dc ad(0)                                                       02-DCCCA
000028A8                                    4215+         ds    0d                                                       01-DCCPR
000028A8                                    4216+rd_kafka_q_concat0 ds 0d                                                01-DCCPR
000028A8                                    4217+@REGION_1463_1 ds 0h                                                    01-DCCPR
000028A8 EBEC D008 0024          00000008   4218+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000028AE E3E0 D088 0004          00000088   4219+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000028B4 E3C0 D090 0004          00000090   4220+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000028BA B904 002E                          4221+         lgr   2,14                copy addr of our savearea            01-DCCPR
000028BE E3B0 C018 0004          00000018   4222+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000028C4 A7EB 00C8               000000C8   4223+         aghi  14,200              increase by frame size               01-DCCPR
000028C8 E3E0 C020 0021          00000020   4224+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000028CE 4720 B020               00000020   4225+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000028D2                                    4226+@PER_1463 ds   0h                                                       01-DCCPR
000028D2 EBDE 2080 0024          00000080   4227+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000028D8 E3C0 2090 0024          00000090   4228+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000028DE B904 00D2                          4229+         lgr   13,2                set real frame pointer               01-DCCPR
000028E2 B904 00CF                          4230+         lgr   12,15               set base reg                         01-DCCPR
                        000028A8            4231+         using @REGION_1463_1,12                                        01-DCCPR
                                            4232 * ******* End of Prologue
                                            4233 * *
                                            4234 * ***      int r = 0;
000028E6 E350 1000 0004          00000000   4235          LG    5,0(0,1)    ; rkq
000028EC E320 1008 0004          00000008   4236          LG    2,8(0,1)    ; srcq
000028F2 5860 1014               00000014   4237          L     6,20(0,1)   ; do_lock
000028F6 A748 0000               00000000   4238          LHI   4,0         ; 0
                                            4239 * ***
                                            4240 * ***      while (srcq->rkq_fwdq)
000028FA 47F0 C0A6               0000294E   4241          B     @L358
00002900                                    4242          DS    0D
                                                                                                                           Page   89 
  Active Usings: @REGION_1463_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002900 000000C8                           4243 @FRAMESIZE_1463 DC F'200'
00002904 00000000
00002908 0000000000000000                   4244 @lit_1463_100 DC AD(mtx_lock)
00002910 0000000000000000                   4245 @lit_1463_101 DC AD(mtx_unlock)
00002918 00000000000020E0                   4246 @lit_1463_103 DC AD(rd_kafka_op_cmp_prio)
00002920 0000000000001F30                   4247 @lit_1463_105 DC AD(rd_kafka_q_io_event)
00002928 0000000000000000                   4248 @lit_1463_106 DC AD(cnd_signal)
00002930 0000000000002810                   4249 @lit_1463_107 DC AD(rd_kafka_q_mark_served)
00002938 0000000000001D28                   4250 @lit_1463_108 DC AD(rd_kafka_q_reset)
00002940 00000000000028A8                   4251 @lit_1463_110 DC AD(rd_kafka_q_concat0)
00002948                                    4252 @L357    DS    0H
                                            4253 * ***         srcq = srcq->rkq_fwdq;
00002948 E320 2058 0004          00000058   4254          LG    2,88(0,2)   ; offset of rkq_fwdq in rd_kafka_q_s
0000294E                                    4255 @L358    DS    0H
0000294E E3F0 2058 0002          00000058   4256          LTG   15,88(0,2)  ; offset of rkq_fwdq in rd_kafka_q_s
00002954 4770 C0A0               00002948   4257          BNZ   @L357
                                            4258 * ***      if (((srcq->rkq_qlen == 0)))
00002958 E55C 2070 0000          00000070   4259          CHSI  112(2),0
0000295E 4770 C0C2               0000296A   4260          BNE   @L359
                                            4261 * ***         return 0;
00002962 A7F9 0000               00000000   4262          LGHI  15,0        ; 0
00002966 47F0 C382               00002C2A   4263          B     @ret_lab_1463
0000296A                                    4264 @L359    DS    0H
                                            4265 * ***
                                            4266 * ***      if (do_lock)
0000296A 1266                               4267          LTR   6,6
0000296C 4780 C0DA               00002982   4268          BZ    @L360
                                            4269 * ***         mtx_lock(&rkq->rkq_lock);
00002970 E350 D0B0 0024          000000B0   4270          STG   5,176(0,13)
00002976 4110 D0B0               000000B0   4271          LA    1,176(0,13)
0000297A E3F0 C060 0004          00002908   4272          LG    15,@lit_1463_100 ; mtx_lock
00002980                                    4273 @@gen_label175 DS    0H
00002980 05EF                               4274          BALR  14,15
00002982                                    4275 @@gen_label176 DS    0H
00002982                                    4276 @L360    DS    0H
                                            4277 * ***      if (!rkq->rkq_fwdq) {
00002982 E3F0 5058 0002          00000058   4278          LTG   15,88(0,5)  ; offset of rkq_fwdq in rd_kafka_q_s
00002988 4770 C316               00002BBE   4279          BNZ   @L361
                                            4280 * ***                   rd_kafka_op_t *rko;
                                            4281 * ***
                                            4282 * ***                   do {} while (0);
0000298C                                    4283 @L362    DS    0H
                                            4284 * ***
                                            4285 * ***         if (((!(rkq->rkq_flags & 0x2)))) {
0000298C 9102 5087      00000087 00000002   4286          TM    135(5),2
00002990 4770 C234               00002ADC   4287          BNZ   @L370
                                            4288 * ***                           if (do_lock)
00002994 1266                               4289          LTR   6,6
00002996 4780 C104               000029AC   4290          BZ    @L366
                                            4291 * ***                                   mtx_unlock(&rkq->rkq_lock);
0000299A E350 D0B0 0024          000000B0   4292          STG   5,176(0,13)
000029A0 4110 D0B0               000000B0   4293          LA    1,176(0,13)
                                                                                                                           Page   90 
  Active Usings: @REGION_1463_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000029A4 E3F0 C068 0004          00002910   4294          LG    15,@lit_1463_101 ; mtx_unlock
000029AA                                    4295 @@gen_label180 DS    0H
000029AA 05EF                               4296          BALR  14,15
000029AC                                    4297 @@gen_label181 DS    0H
000029AC                                    4298 @L366    DS    0H
                                            4299 * ***            return -1;
000029AC A7F9 FFFF               0000FFFF   4300          LGHI  15,-1       ; -1
000029B0 47F0 C382               00002C2A   4301          B     @ret_lab_1463
                                            4302 * ***         }
                                            4303 * ***
                                            4304 * ***
                                            4305 * ***                   while ((rko = ((&srcq->rkq_q)->tqh_first)) && \
                                            4306 * rko->rko_prio > 0) {
                                            4307 * ***                           do {   if (((rko)->rko_link .tqe_next)\
                                            4308 *  != (((void *)0))) (rko)->rko_link .tqe_next->rko_link .tqe_prev = (\
                                            4309 * rko)->rko_link .tqe_prev; else (&srcq->rkq_q)->tqh_last = (rko)->rko\
                                            4310 * _link .tqe_prev; *(rko)->rko_link .tqe_prev = (rko)->rko_link .tqe_n\
                                            4311 * ext; ; } while ( 0);
000029B4                                    4312 @L372    DS    0H
000029B4 E3F0 7000 0002          00000000   4313          LTG   15,0(0,7)   ; rko
000029BA 4780 C12C               000029D4   4314          BE    @L375
000029BE E3F0 7000 0004          00000000   4315          LG    15,0(0,7)   ; rko
000029C4 E310 7008 0004          00000008   4316          LG    1,8(0,7)    ; offset of tqe_prev in 0000056
000029CA E310 F008 0024          00000008   4317          STG   1,8(0,15)   ; offset of tqe_prev in 0000056
000029D0 47F0 C138               000029E0   4318          B     @L376
000029D4                                    4319 @L375    DS    0H
000029D4 E3F0 7008 0004          00000008   4320          LG    15,8(0,7)   ; offset of tqe_prev in 0000056
000029DA E3F0 2068 0024          00000068   4321          STG   15,104(0,2) ; offset of tqh_last in rd_kafka_op_tailq
000029E0                                    4322 @L376    DS    0H
000029E0 E3F0 7008 0004          00000008   4323          LG    15,8(0,7)   ; offset of tqe_prev in 0000056
000029E6 E310 7000 0004          00000000   4324          LG    1,0(0,7)    ; rko
000029EC E310 F000 0024          00000000   4325          STG   1,0(0,15)
                                            4326 * ***                           do { if(((&rkq->rkq_q)->tqh_first) == \
                                            4327 * ((void *)0)) { do {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_q)-\
                                            4328 * >tqh_first) != (((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link .tq\
                                            4329 * e_prev = &(rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = \
                                            4330 * &(rko)->rko_link .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rko)-\
                                            4331 * >rko_link .tqe_prev = &(&rkq->rkq_q)->tqh_first; } while ( 0); } els\
                                            4332 * e { rd_kafka_op_t * _tmp; for ((_tmp) = ((&rkq->rkq_q)->tqh_first); \
                                            4333 * (_tmp) != (((void *)0)); (_tmp) = ((_tmp)->rko_link .tqe_next)) { if\
                                            4334 * (rd_kafka_op_cmp_prio(rko,_tmp) < 0) { do {  (rko)->rko_link .tqe_pr\
                                            4335 * ev = (_tmp)->rko_link .tqe_prev; (rko)->rko_link .tqe_next = (_tmp);\
                                            4336 *  *(_tmp)->rko_link .tqe_prev = (rko); (_tmp)->rko_link .tqe_prev = &\
                                            4337 * (rko)->rko_link .tqe_next; } while ( 0); break; } if(!((_tmp)->rko_l\
                                            4338 * ink .tqe_next)) { do {  if (((rko)->rko_link .tqe_next = (_tmp)->rko\
                                            4339 * _link .tqe_next) != (((void *)0))) (rko)->rko_link .tqe_next->rko_li\
                                            4340 * nk .tqe_prev = &(rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_l\
                                            4341 * ast = &(rko)->rko_link .tqe_next; (_tmp)->rko_link .tqe_next = (rko)\
                                            4342 * ; (rko)->rko_link .tqe_prev = &(_tmp)->rko_link .tqe_next; } while (\
                                            4343 *  0); break; } } } } while(0);
000029F2                                    4344 @L377    DS    0H
000029F2 E3F0 5060 0002          00000060   4345          LTG   15,96(0,5)  ; offset of rkq_q in rd_kafka_q_s
                                                                                                                           Page   91 
  Active Usings: @REGION_1463_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000029F8 4770 C192               00002A3A   4346          BNE   @L380
000029FC                                    4347 @L381    DS    0H
000029FC E3F0 5060 0004          00000060   4348          LG    15,96(0,5)  ; offset of rkq_q in rd_kafka_q_s
00002A02 E3F0 7000 0024          00000000   4349          STG   15,0(0,7)
00002A08 B902 00FF                          4350          LTGR  15,15
00002A0C 4780 C178               00002A20   4351          BE    @L384
00002A10 E3F0 5060 0004          00000060   4352          LG    15,96(0,5)  ; offset of rkq_q in rd_kafka_q_s
00002A16 E370 F008 0024          00000008   4353          STG   7,8(0,15)   ; offset of tqe_prev in 0000056
00002A1C 47F0 C17E               00002A26   4354          B     @L385
00002A20                                    4355 @L384    DS    0H
00002A20 E370 5068 0024          00000068   4356          STG   7,104(0,5)  ; offset of tqh_last in rd_kafka_op_tailq
00002A26                                    4357 @L385    DS    0H
00002A26 E370 5060 0024          00000060   4358          STG   7,96(0,5)   ; offset of rkq_q in rd_kafka_q_s
00002A2C 41F0 5060               00000060   4359          LA    15,96(0,5)
00002A30 E3F0 7008 0024          00000008   4360          STG   15,8(0,7)   ; offset of tqe_prev in 0000056
00002A36 47F0 C234               00002ADC   4361          B     @L386
00002A3A                                    4362 @L380    DS    0H
00002A3A E330 5060 0004          00000060   4363          LG    3,96(0,5)   ; offset of rkq_q in rd_kafka_q_s
00002A40 47F0 C22C               00002AD4   4364          B     @L388
00002A44                                    4365 @L387    DS    0H
00002A44 E370 D0B0 0024          000000B0   4366          STG   7,176(0,13)
00002A4A E330 D0B8 0024          000000B8   4367          STG   3,184(0,13)
00002A50 4110 D0B0               000000B0   4368          LA    1,176(0,13)
00002A54 E3F0 C070 0004          00002918   4369          LG    15,@lit_1463_103 ; rd_kafka_op_cmp_prio
00002A5A                                    4370 @@gen_label185 DS    0H
00002A5A 05EF                               4371          BALR  14,15
00002A5C                                    4372 @@gen_label186 DS    0H
00002A5C 12FF                               4373          LTR   15,15
00002A5E 47B0 C1E2               00002A8A   4374          BNL   @L391
00002A62                                    4375 @L392    DS    0H
00002A62 E3F0 3008 0004          00000008   4376          LG    15,8(0,3)   ; offset of tqe_prev in 0000056
00002A68 E3F0 7008 0024          00000008   4377          STG   15,8(0,7)   ; offset of tqe_prev in 0000056
00002A6E E330 7000 0024          00000000   4378          STG   3,0(0,7)    ; rko
00002A74 E3F0 3008 0004          00000008   4379          LG    15,8(0,3)   ; offset of tqe_prev in 0000056
00002A7A E370 F000 0024          00000000   4380          STG   7,0(0,15)
00002A80 E370 3008 0024          00000008   4381          STG   7,8(0,3)    ; offset of tqe_prev in 0000056
00002A86 47F0 C234               00002ADC   4382          B     @L389
00002A8A                                    4383 @L391    DS    0H
00002A8A E3F0 3000 0002          00000000   4384          LTG   15,0(0,3)   ; _tmp
00002A90 4770 C226               00002ACE   4385          BNZ   @L395
00002A94                                    4386 @L396    DS    0H
00002A94 E3F0 3000 0004          00000000   4387          LG    15,0(0,3)   ; _tmp
00002A9A E3F0 7000 0024          00000000   4388          STG   15,0(0,7)
00002AA0 B902 00FF                          4389          LTGR  15,15
00002AA4 4780 C210               00002AB8   4390          BE    @L399
00002AA8 E3F0 7000 0004          00000000   4391          LG    15,0(0,7)   ; rko
00002AAE E370 F008 0024          00000008   4392          STG   7,8(0,15)   ; offset of tqe_prev in 0000056
00002AB4 47F0 C216               00002ABE   4393          B     @L400
00002AB8                                    4394 @L399    DS    0H
00002AB8 E370 5068 0024          00000068   4395          STG   7,104(0,5)  ; offset of tqh_last in rd_kafka_op_tailq
00002ABE                                    4396 @L400    DS    0H
00002ABE E370 3000 0024          00000000   4397          STG   7,0(0,3)    ; _tmp
                                                                                                                           Page   92 
  Active Usings: @REGION_1463_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002AC4 E330 7008 0024          00000008   4398          STG   3,8(0,7)    ; offset of tqe_prev in 0000056
00002ACA 47F0 C234               00002ADC   4399          B     @L389
00002ACE                                    4400 @L395    DS    0H
00002ACE E330 3000 0004          00000000   4401          LG    3,0(0,3)    ; _tmp
00002AD4                                    4402 @L388    DS    0H
00002AD4 B902 00F3                          4403          LTGR  15,3
00002AD8 4770 C19C               00002A44   4404          BNE   @L387
00002ADC                                    4405 @L389    DS    0H
00002ADC                                    4406 @L386    DS    0H
                                            4407 * ***
                                            4408 * ***
                                            4409 * ***                   }
00002ADC                                    4410 @L370    DS    0H
00002ADC E370 2060 0004          00000060   4411          LG    7,96(0,2)   ; offset of rkq_q in rd_kafka_q_s
00002AE2 B902 00F7                          4412          LTGR  15,7
00002AE6 4780 C250               00002AF8   4413          BZ    @L401
00002AEA E55C 7034 0000          00000034   4414          CHSI  52(7),0
00002AF0 47D0 C250               00002AF8   4415          BNH   @L401
00002AF4 47F0 C10C               000029B4   4416          B     @L372
                                            4417 * ***
                                            4418 * ***         do { if (!(((&srcq->rkq_q)->tqh_first) == (((void *)0)))\
                                            4419 * ) { *(&rkq->rkq_q)->tqh_last = (&srcq->rkq_q)->tqh_first; (&srcq->rk\
                                            4420 * q_q)->tqh_first->rko_link .tqe_prev = (&rkq->rkq_q)->tqh_last; (&rkq\
                                            4421 * ->rkq_q)->tqh_last = (&srcq->rkq_q)->tqh_last; do { ((&srcq->rkq_q))\
                                            4422 * ->tqh_first = (((void *)0)); ((&srcq->rkq_q))->tqh_last = &((&srcq->\
                                            4423 * rkq_q))->tqh_first; } while ( 0); } } while ( 0);
00002AF8                                    4424 @L401    DS    0H
00002AF8 E3F0 2060 0002          00000060   4425          LTG   15,96(0,2)  ; offset of rkq_q in rd_kafka_q_s
00002AFE 4780 C29E               00002B46   4426          BE    @L404
00002B02 E3F0 5068 0004          00000068   4427          LG    15,104(0,5) ; offset of tqh_last in rd_kafka_op_tailq
00002B08 E310 2060 0004          00000060   4428          LG    1,96(0,2)   ; offset of rkq_q in rd_kafka_q_s
00002B0E E310 F000 0024          00000000   4429          STG   1,0(0,15)
00002B14 E3F0 2060 0004          00000060   4430          LG    15,96(0,2)  ; offset of rkq_q in rd_kafka_q_s
00002B1A E310 5068 0004          00000068   4431          LG    1,104(0,5)  ; offset of tqh_last in rd_kafka_op_tailq
00002B20 E310 F008 0024          00000008   4432          STG   1,8(0,15)   ; offset of tqe_prev in 0000056
00002B26 E3F0 2068 0004          00000068   4433          LG    15,104(0,2) ; offset of tqh_last in rd_kafka_op_tailq
00002B2C E3F0 5068 0024          00000068   4434          STG   15,104(0,5) ; offset of tqh_last in rd_kafka_op_tailq
00002B32                                    4435 @L405    DS    0H
00002B32 A7F9 0000               00000000   4436          LGHI  15,0        ; 0
00002B36 E3F0 2060 0024          00000060   4437          STG   15,96(0,2)  ; offset of rkq_q in rd_kafka_q_s
00002B3C 41F0 2060               00000060   4438          LA    15,96(0,2)
00002B40 E3F0 2068 0024          00000068   4439          STG   15,104(0,2) ; offset of tqh_last in rd_kafka_op_tailq
00002B46                                    4440 @L404    DS    0H
                                            4441 * ***         if (rkq->rkq_qlen == 0)
00002B46 E55C 5070 0000          00000070   4442          CHSI  112(5),0
00002B4C 4770 C2BA               00002B62   4443          BNE   @L408
                                            4444 * ***            rd_kafka_q_io_event(rkq);
00002B50 E350 D0B0 0024          000000B0   4445          STG   5,176(0,13)
00002B56 4110 D0B0               000000B0   4446          LA    1,176(0,13)
00002B5A E3F0 C078 0004          00002920   4447          LG    15,@lit_1463_105 ; rd_kafka_q_io_event
00002B60                                    4448 @@gen_label195 DS    0H
00002B60 05EF                               4449          BALR  14,15
                                                                                                                           Page   93 
  Active Usings: @REGION_1463_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002B62                                    4450 @@gen_label196 DS    0H
00002B62                                    4451 @L408    DS    0H
                                            4452 * ***                   rkq->rkq_qlen += srcq->rkq_qlen;
00002B62 58F0 5070               00000070   4453          L     15,112(0,5)
00002B66 5AF0 2070               00000070   4454          A     15,112(0,2)
00002B6A 50F0 5070               00000070   4455          ST    15,112(0,5)
                                            4456 * ***                   rkq->rkq_qsize += srcq->rkq_qsize;
00002B6E E3F0 5078 0004          00000078   4457          LG    15,120(0,5)
00002B74 E3F0 2078 0008          00000078   4458          AG    15,120(0,2)
00002B7A E3F0 5078 0024          00000078   4459          STG   15,120(0,5)
                                            4460 * ***         cnd_signal(&rkq->rkq_cond);
00002B80 41F0 5028               00000028   4461          LA    15,40(0,5)
00002B84 E3F0 D0B0 0024          000000B0   4462          STG   15,176(0,13)
00002B8A 4110 D0B0               000000B0   4463          LA    1,176(0,13)
00002B8E E3F0 C080 0004          00002928   4464          LG    15,@lit_1463_106 ; cnd_signal
00002B94                                    4465 @@gen_label197 DS    0H
00002B94 05EF                               4466          BALR  14,15
00002B96                                    4467 @@gen_label198 DS    0H
                                            4468 * ***
                                            4469 * ***                   rd_kafka_q_mark_served(srcq);
00002B96 E320 D0B0 0024          000000B0   4470          STG   2,176(0,13)
00002B9C 4110 D0B0               000000B0   4471          LA    1,176(0,13)
00002BA0 E3F0 C088 0004          00002930   4472          LG    15,@lit_1463_107 ; rd_kafka_q_mark_served
00002BA6                                    4473 @@gen_label199 DS    0H
00002BA6 05EF                               4474          BALR  14,15
00002BA8                                    4475 @@gen_label200 DS    0H
                                            4476 * ***                   rd_kafka_q_reset(srcq);
00002BA8 E320 D0B0 0024          000000B0   4477          STG   2,176(0,13)
00002BAE 4110 D0B0               000000B0   4478          LA    1,176(0,13)
00002BB2 E3F0 C090 0004          00002938   4479          LG    15,@lit_1463_108 ; rd_kafka_q_reset
00002BB8                                    4480 @@gen_label201 DS    0H
00002BB8 05EF                               4481          BALR  14,15
00002BBA                                    4482 @@gen_label202 DS    0H
                                            4483 * ***      } else
00002BBA 47F0 C366               00002C0E   4484          B     @L409
00002BBE                                    4485 @L361    DS    0H
                                            4486 * ***         r = rd_kafka_q_concat0(rkq->rkq_fwdq ? rkq->rkq_fwdq : r\
                                            4487 * kq,
                                            4488 * ***                      srcq,
                                            4489 * ***                      rkq->rkq_fwdq ? do_lock : 0);
00002BBE E3F0 5058 0002          00000058   4490          LTG   15,88(0,5)  ; offset of rkq_fwdq in rd_kafka_q_s
00002BC4 4780 C32A               00002BD2   4491          BZ    @L410
00002BC8 E3F0 5058 0004          00000058   4492          LG    15,88(0,5)  ; offset of rkq_fwdq in rd_kafka_q_s
00002BCE 47F0 C32E               00002BD6   4493          B     @L411
00002BD2                                    4494 @L410    DS    0H
00002BD2 B904 00F5                          4495          LGR   15,5
00002BD6                                    4496 @L411    DS    0H
00002BD6 E310 5058 0002          00000058   4497          LTG   1,88(0,5)   ; offset of rkq_fwdq in rd_kafka_q_s
00002BDC 4780 C33E               00002BE6   4498          BZ    @L412
00002BE0 1816                               4499          LR    1,6
00002BE2 47F0 C342               00002BEA   4500          B     @L413
00002BE6                                    4501 @L412    DS    0H
                                                                                                                           Page   94 
  Active Usings: @REGION_1463_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002BE6 A718 0000               00000000   4502          LHI   1,0         ; 0
00002BEA                                    4503 @L413    DS    0H
00002BEA E3F0 D0B0 0024          000000B0   4504          STG   15,176(0,13)
00002BF0 E320 D0B8 0024          000000B8   4505          STG   2,184(0,13)
00002BF6 B914 00F1                          4506          LGFR  15,1
00002BFA E3F0 D0C0 0024          000000C0   4507          STG   15,192(0,13)
00002C00 4110 D0B0               000000B0   4508          LA    1,176(0,13)
00002C04 E3F0 C098 0004          00002940   4509          LG    15,@lit_1463_110 ; rd_kafka_q_concat0
00002C0A                                    4510 @@gen_label205 DS    0H
00002C0A 05EF                               4511          BALR  14,15
00002C0C                                    4512 @@gen_label206 DS    0H
00002C0C 184F                               4513          LR    4,15        ; r
00002C0E                                    4514 @L409    DS    0H
                                            4515 * ***      if (do_lock)
00002C0E 1266                               4516          LTR   6,6
00002C10 4780 C37E               00002C26   4517          BZ    @L414
                                            4518 * ***         mtx_unlock(&rkq->rkq_lock);
00002C14 E350 D0B0 0024          000000B0   4519          STG   5,176(0,13)
00002C1A 4110 D0B0               000000B0   4520          LA    1,176(0,13)
00002C1E E3F0 C068 0004          00002910   4521          LG    15,@lit_1463_101 ; mtx_unlock
00002C24                                    4522 @@gen_label208 DS    0H
00002C24 05EF                               4523          BALR  14,15
00002C26                                    4524 @@gen_label209 DS    0H
00002C26                                    4525 @L414    DS    0H
                                            4526 * ***
                                            4527 * ***      return r;
00002C26 B914 00F4                          4528          LGFR  15,4
                                            4529 * ***   }
00002C2A                                    4530 @ret_lab_1463 DS 0H
                                            4531 * * **** Start of Epilogue
                                            4532          DCCEPIL
00002C2A                                    4533+         ds 0h                                                          01-DCCEP
                                            4534+* Epilog
00002C2A D707 D088 D088 00000088 00000088   4535+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002C30 E3D0 D080 0004          00000080   4536+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002C36 E3C0 D090 0004          00000090   4537+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002C3C E3B0 C018 0004          00000018   4538+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002C42 E3C0 B010 0021          00000010   4539+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002C48 E3E0 D008 0004          00000008   4540+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002C4E EB1C D020 0004          00000020   4541+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002C54 078E                               4542+         bcr 8,14                if same dsab, just return              01-DCCEP
00002C56 E3F0 D010 0024          00000010   4543+         stg 15,16(0,13)         save return code                       01-DCCEP
00002C5C E300 D018 0024          00000018   4544+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002C62 E3F0 D090 0004          00000090   4545+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002C68 E3F0 F018 0004          00000018   4546+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002C6E 47F0 F040               00000040   4547+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4548+* End of Epilog
                                            4549 * * **** End of Epilogue
                                            4550          DROP  12
                                            4551 *
                                            4552 *   DSECT for automatic variables in "rd_kafka_q_concat0"
                                            4553 *      (FUNCTION #1463)
                                                                                                                           Page   95 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4554 *
00000000                00000000 000000AC   4555 @AUTO#rd_kafka_q_concat0 DSECT
00000000                                    4556          DS    XL168
000000A8                                    4557 rd_kafka_q_concat0#r#0 DS 1F ; r
                                            4558 *
00002C72                00000000 00012806   4559 @CODE    CSECT
                                            4560 *
                                            4561 *
                                            4562 *
                                            4563 * ....... start of rd_kafka_q_len
00002C72                                    4564 @LNAME1465 DS  0H
00002C72 0000000E                           4565          DC    X'0000000E'
00002C76 99846D9281869281                   4566          DC    C'rd_kafka_q_len'
00002C84 00                                 4567          DC    X'00'
                                            4568 rd_kafka_q_len DCCPRLG CINDEX=1465,BASER=12,FRAME=192,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1465
                                            4569          macro
                                            4570          dccextrn &m
                                            4571          gblc    &$dccext(1000)
                                            4572          gbla    &$dccexti
                                            4573          lcla    &i
                                            4574 &$dccext(&$dccexti+1) setc    '&m'
                                            4575 &i       seta    1
                                            4576 .loop    aif    (&i gt &$dccexti).around
                                            4577          aif    ('&$dccext(&i)' eq '&m').getout
                                            4578 &i       seta    &i+1
                                            4579          ago     .loop
                                            4580 .around  anop
                                            4581 &$dccexti seta &$dccexti+1
                                            4582          extrn  &m
                                            4583 .getout  anop
                                            4584          mend
00002C88                                    4585+$eye0099    ds    0d                                                    02-DCCCA
00002C88 C4C3C3                             4586+         dc cl3'DCC'                                                    02-DCCCA
00002C8B 01                                 4587+         dc xl1'01' format one                                          02-DCCCA
00002C8C 00000000                           4588+         dc a(0)                                                        02-DCCCA
00002C90 0000000000002CFA                   4589+         dc ad(@PER_1465)                                               02-DCCCA
00002C98 00000000000000C0                   4590+         dc ad(192)                                                     02-DCCCA
00002CA0 0000000000000000                   4591+         dc ad(0)                                                       02-DCCCA
00002CA8 0000000000001000                   4592+         dc ad(4096)                                                    02-DCCCA
00002CB0 20                                 4593+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002CB1 03                                 4594+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002CB2 03                                 4595+         dc al1(3)                                                      02-DCCCA
00002CB3 08                                 4596+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002CB4 00                                 4597+         dc bl.8'00000000'                                              02-DCCCA
00002CB5 000000                             4598+         dc al3(0)                                                      02-DCCCA
00002CB8 0000000000002C72                   4599+         dc ad(@LNAME1465)                                              02-DCCCA
00002CC0                                    4600+         ds 0d                                                          02-DCCCA
00002CC0 0000000000002C88                   4601+         dc ad($eye0099)                                                02-DCCCA
00002CC8 0000000000000000                   4602+         dc ad(0)                                                       02-DCCCA
00002CD0                                    4603+         ds    0d                                                       01-DCCPR
00002CD0                                    4604+rd_kafka_q_len ds 0d                                                    01-DCCPR
                                                                                                                           Page   96 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002CD0                                    4605+@REGION_1465_1 ds 0h                                                    01-DCCPR
00002CD0 EBEC D008 0024          00000008   4606+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002CD6 E3E0 D088 0004          00000088   4607+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002CDC E3C0 D090 0004          00000090   4608+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002CE2 B904 002E                          4609+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002CE6 E3B0 C018 0004          00000018   4610+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002CEC A7EB 00C0               000000C0   4611+         aghi  14,192              increase by frame size               01-DCCPR
00002CF0 E3E0 C020 0021          00000020   4612+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002CF6 4720 B020               00000020   4613+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002CFA                                    4614+@PER_1465 ds   0h                                                       01-DCCPR
00002CFA EBDE 2080 0024          00000080   4615+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002D00 E3C0 2090 0024          00000090   4616+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002D06 B904 00D2                          4617+         lgr   13,2                set real frame pointer               01-DCCPR
00002D0A B904 00CF                          4618+         lgr   12,15               set base reg                         01-DCCPR
                        00002CD0            4619+         using @REGION_1465_1,12                                        01-DCCPR
                                            4620 * ******* End of Prologue
                                            4621 * *
00002D0E E330 1000 0004          00000000   4622          LG    3,0(0,1)    ; rkq
                                            4623 * ***           int qlen;
                                            4624 * ***           rd_kafka_q_t *fwdq;
                                            4625 * ***           mtx_lock(&rkq->rkq_lock);
00002D14 E330 D0B0 0024          000000B0   4626          STG   3,176(0,13)
00002D1A 4110 D0B0               000000B0   4627          LA    1,176(0,13)
00002D1E E3F0 C0A0 0004          00002D70   4628          LG    15,@lit_1465_113 ; mtx_lock
00002D24                                    4629 @@gen_label210 DS    0H
00002D24 05EF                               4630          BALR  14,15
00002D26                                    4631 @@gen_label211 DS    0H
                                            4632 * ***           if (!(fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
00002D26 E330 D0B0 0024          000000B0   4633          STG   3,176(0,13)
00002D2C D707 D0B8 D0B8 000000B8 000000B8   4634          XC    184(8,13),184(13)
00002D32 4110 D0B0               000000B0   4635          LA    1,176(0,13)
00002D36 E3F0 C0A8 0004          00002D78   4636          LG    15,@lit_1465_114 ; rd_kafka_q_fwd_get
00002D3C                                    4637 @@gen_label212 DS    0H
00002D3C 05EF                               4638          BALR  14,15
00002D3E                                    4639 @@gen_label213 DS    0H
00002D3E B904 004F                          4640          LGR   4,15
00002D42 B902 00F4                          4641          LTGR  15,4
00002D46 4770 C0C8               00002D98   4642          BNZ   @L444
                                            4643 * ***                   qlen = rkq->rkq_qlen;
00002D4A 5820 3070               00000070   4644          L     2,112(0,3)  ; offset of rkq_qlen in rd_kafka_q_s
                                            4645 * ***                   mtx_unlock(&rkq->rkq_lock);
00002D4E E330 D0B0 0024          000000B0   4646          STG   3,176(0,13)
00002D54 4110 D0B0               000000B0   4647          LA    1,176(0,13)
00002D58 E3F0 C0B0 0004          00002D80   4648          LG    15,@lit_1465_115 ; mtx_unlock
00002D5E                                    4649 @@gen_label215 DS    0H
00002D5E 05EF                               4650          BALR  14,15
00002D60                                    4651 @@gen_label216 DS    0H
                                            4652 * ***           } else {
00002D60 47F0 C106               00002DD6   4653          B     @L445
00002D68                                    4654          DS    0D
00002D68 000000C0                           4655 @FRAMESIZE_1465 DC F'192'
00002D6C 00000000
                                                                                                                           Page   97 
  Active Usings: @REGION_1465_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002D70 0000000000000000                   4656 @lit_1465_113 DC AD(mtx_lock)
00002D78 0000000000001DC8                   4657 @lit_1465_114 DC AD(rd_kafka_q_fwd_get)
00002D80 0000000000000000                   4658 @lit_1465_115 DC AD(mtx_unlock)
00002D88 0000000000002CD0                   4659 @lit_1465_117 DC AD(rd_kafka_q_len)
00002D90 00000000000019F8                   4660 @lit_1465_118 DC AD(rd_kafka_q_destroy0)
00002D98                                    4661 @L444    DS    0H
                                            4662 * ***                   mtx_unlock(&rkq->rkq_lock);
00002D98 E330 D0B0 0024          000000B0   4663          STG   3,176(0,13)
00002D9E 4110 D0B0               000000B0   4664          LA    1,176(0,13)
00002DA2 E3F0 C0B0 0004          00002D80   4665          LG    15,@lit_1465_115 ; mtx_unlock
00002DA8                                    4666 @@gen_label217 DS    0H
00002DA8 05EF                               4667          BALR  14,15
00002DAA                                    4668 @@gen_label218 DS    0H
                                            4669 * ***                   qlen = rd_kafka_q_len(fwdq);
00002DAA E340 D0B0 0024          000000B0   4670          STG   4,176(0,13)
00002DB0 4110 D0B0               000000B0   4671          LA    1,176(0,13)
00002DB4 E3F0 C0B8 0004          00002D88   4672          LG    15,@lit_1465_117 ; rd_kafka_q_len
00002DBA                                    4673 @@gen_label219 DS    0H
00002DBA 05EF                               4674          BALR  14,15
00002DBC                                    4675 @@gen_label220 DS    0H
00002DBC 182F                               4676          LR    2,15        ; qlen
                                            4677 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
00002DBE E340 D0B0 0024          000000B0   4678          STG   4,176(0,13)
00002DC4 D707 D0B8 D0B8 000000B8 000000B8   4679          XC    184(8,13),184(13)
00002DCA 4110 D0B0               000000B0   4680          LA    1,176(0,13)
00002DCE E3F0 C0C0 0004          00002D90   4681          LG    15,@lit_1465_118 ; rd_kafka_q_destroy0
00002DD4                                    4682 @@gen_label221 DS    0H
00002DD4 05EF                               4683          BALR  14,15
00002DD6                                    4684 @@gen_label222 DS    0H
                                            4685 * ***           }
00002DD6                                    4686 @L445    DS    0H
                                            4687 * ***           return qlen;
00002DD6 B914 00F2                          4688          LGFR  15,2
                                            4689 * ***   }
                                            4690 * * **** Start of Epilogue
                                            4691          DCCEPIL
00002DDA                                    4692+         ds 0h                                                          01-DCCEP
                                            4693+* Epilog
00002DDA D707 D088 D088 00000088 00000088   4694+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002DE0 E3D0 D080 0004          00000080   4695+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002DE6 E3C0 D090 0004          00000090   4696+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002DEC E3B0 C018 0004          00000018   4697+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002DF2 E3C0 B010 0021          00000010   4698+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002DF8 E3E0 D008 0004          00000008   4699+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002DFE EB1C D020 0004          00000020   4700+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002E04 078E                               4701+         bcr 8,14                if same dsab, just return              01-DCCEP
00002E06 E3F0 D010 0024          00000010   4702+         stg 15,16(0,13)         save return code                       01-DCCEP
00002E0C E300 D018 0024          00000018   4703+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002E12 E3F0 D090 0004          00000090   4704+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002E18 E3F0 F018 0004          00000018   4705+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002E1E 47F0 F040               00000040   4706+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4707+* End of Epilog
                                                                                                                           Page   98 
  Active Usings: @REGION_1465_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4708 * * **** End of Epilogue
                                            4709          DROP  12
                                            4710 *
                                            4711 *   DSECT for automatic variables in "rd_kafka_q_len"
                                            4712 *      (FUNCTION #1465)
                                            4713 *
00000000                00000000 000000AC   4714 @AUTO#rd_kafka_q_len DSECT
00000000                                    4715          DS    XL168
000000A8                                    4716 rd_kafka_q_len#qlen#0 DS 1F ; qlen
                                            4717 *
00002E22                00000000 00012806   4718 @CODE    CSECT
                                            4719 *
                                            4720 *
                                            4721 *
                                            4722 * ....... start of rd_kafka_q_last
00002E22                                    4723 @LNAME1483 DS  0H
00002E22 0000000F                           4724          DC    X'0000000F'
00002E26 99846D9281869281                   4725          DC    C'rd_kafka_q_last'
00002E35 00                                 4726          DC    X'00'
                                            4727 rd_kafka_q_last DCCPRLG CINDEX=1483,BASER=12,FRAME=176,SAVEAREA=NO,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1483
                                            4728          macro
                                            4729          dccextrn &m
                                            4730          gblc    &$dccext(1000)
                                            4731          gbla    &$dccexti
                                            4732          lcla    &i
                                            4733 &$dccext(&$dccexti+1) setc    '&m'
                                            4734 &i       seta    1
                                            4735 .loop    aif    (&i gt &$dccexti).around
                                            4736          aif    ('&$dccext(&i)' eq '&m').getout
                                            4737 &i       seta    &i+1
                                            4738          ago     .loop
                                            4739 .around  anop
                                            4740 &$dccexti seta &$dccexti+1
                                            4741          extrn  &m
                                            4742 .getout  anop
                                            4743          mend
00002E38                                    4744+$eye0102    ds    0d                                                    02-DCCCA
00002E38 C4C3C3                             4745+         dc cl3'DCC'                                                    02-DCCCA
00002E3B 01                                 4746+         dc xl1'01' format one                                          02-DCCCA
00002E3C 00000000                           4747+         dc a(0)                                                        02-DCCCA
00002E40 0000000000000000                   4748+         dc ad(0)                                                       02-DCCCA
00002E48 00000000000000B0                   4749+         dc ad(176)                                                     02-DCCCA
00002E50 0000000000000000                   4750+         dc ad(0)                                                       02-DCCCA
00002E58 0000000000001000                   4751+         dc ad(4096)                                                    02-DCCCA
00002E60 20                                 4752+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002E61 03                                 4753+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002E62 03                                 4754+         dc al1(3)                                                      02-DCCCA
00002E63 08                                 4755+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002E64 00                                 4756+         dc bl.8'00000000'                                              02-DCCCA
00002E65 000000                             4757+         dc al3(0)                                                      02-DCCCA
00002E68 0000000000002E22                   4758+         dc ad(@LNAME1483)                                              02-DCCCA
                                                                                                                           Page   99 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002E70                                    4759+         ds 0d                                                          02-DCCCA
00002E70 0000000000002E38                   4760+         dc ad($eye0102)                                                02-DCCCA
00002E78 0000000000000000                   4761+         dc ad(0)                                                       02-DCCCA
00002E80                                    4762+         ds    0d                                                       01-DCCPR
00002E80                                    4763+rd_kafka_q_last ds 0d                                                   01-DCCPR
00002E80                                    4764+@REGION_1483_1 ds 0h                                                    01-DCCPR
00002E80 EBEC D008 0024          00000008   4765+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002E86 B904 00CF                          4766+         lgr   12,15               set base reg                         01-DCCPR
                        00002E80            4767+         using @REGION_1483_1,12                                        01-DCCPR
                                            4768 * ******* End of Prologue
                                            4769 * *
                                            4770 * ***      rd_kafka_op_t *rko;
                                            4771 * ***      for ((rko) = (*(((struct rd_kafka_op_tailq *)((&rkq->rkq_q)\
                                            4772 * ->tqh_last))->tqh_last)); (rko) != (((void *)0)); (rko) = (*(((struc\
                                            4773 * t rd_kafka_op_tailq *)((rko)->rko_link .tqe_prev))->tqh_last))) {
00002E8A E3F0 1000 0004          00000000   4774          LG    15,0(0,1)   ; rkq
00002E90 E3F0 F068 0004          00000068   4775          LG    15,104(0,15) ; offset of tqh_last in rd_kafka_op_tailq
00002E96 E3F0 F008 0004          00000008   4776          LG    15,8(0,15)  ; offset of tqh_last in rd_kafka_op_tailq
00002E9C E3F0 F000 0004          00000000   4777          LG    15,0(0,15)
00002EA2 47F0 C05C               00002EDC   4778          B     @L459
00002EA6                                    4779 @L458    DS    0H
                                            4780 * ***         if (rko->rko_type == op_type &&
00002EA6 5820 F010               00000010   4781          L     2,16(0,15)  ; offset of rko_type in rd_kafka_op_s
00002EAA 5920 100C               0000000C   4782          C     2,12(0,1)
00002EAE 4770 C04A               00002ECA   4783          BNE   @L462
                                            4784 * ***             (allow_err || !rko->rko_err))
00002EB2 E320 1014 0012          00000014   4785          LT    2,20(0,1)   ; allow_err
00002EB8 4770 C046               00002EC6   4786          BNZ   @L463
00002EBC E320 F020 0012          00000020   4787          LT    2,32(0,15)  ; offset of rko_err in rd_kafka_op_s
00002EC2 4770 C04A               00002ECA   4788          BNZ   @L462
00002EC6                                    4789 @L463    DS    0H
                                            4790 * ***            return rko;
00002EC6 47F0 C068               00002EE8   4791          B     @ret_lab_1483
00002ECA                                    4792 @L462    DS    0H
                                            4793 * ***      }
00002ECA E3F0 F008 0004          00000008   4794          LG    15,8(0,15)  ; offset of tqe_prev in 0000056
00002ED0 E3F0 F008 0004          00000008   4795          LG    15,8(0,15)  ; offset of tqh_last in rd_kafka_op_tailq
00002ED6 E3F0 F000 0004          00000000   4796          LG    15,0(0,15)
00002EDC                                    4797 @L459    DS    0H
00002EDC B902 002F                          4798          LTGR  2,15
00002EE0 4770 C026               00002EA6   4799          BNE   @L458
                                            4800 * ***
                                            4801 * ***      return ((void *)0);
00002EE4 A7F9 0000               00000000   4802          LGHI  15,0        ; 0
                                            4803 * ***   }
00002EE8                                    4804 @ret_lab_1483 DS 0H
                                            4805 * * **** Start of Epilogue
                                            4806          DCCEPIL
00002EE8                                    4807+         ds 0h                                                          01-DCCEP
                                            4808+* Epilog
                                            4809+* Epilog
00002EE8 E3E0 D008 0004          00000008   4810+         lg    14,8(,13) restore the reg                                01-DCCEP
                                                                                                                           Page  100 
  Active Usings: @REGION_1483_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002EEE EB1C D020 0004          00000020   4811+         lmg   1,12,32(13)                                              01-DCCEP
00002EF4 07FE                               4812+         br   14                                                        01-DCCEP
                                            4813+* End of Epilog
                                            4814 * * **** End of Epilogue
                                            4815          DROP  12
                                            4816 *
                                            4817 *   DSECT for automatic variables in "rd_kafka_q_last"
                                            4818 *      (FUNCTION #1483)
                                            4819 *
00000000                00000000 000000A8   4820 @AUTO#rd_kafka_q_last DSECT
00000000                                    4821          DS    XL168
                                            4822 *
00002EF6                00000000 00012806   4823 @CODE    CSECT
                                            4824 *
                                            4825 *
                                            4826 *
                                            4827 * ....... start of rd_kafka_compression2str
00002EF6                                    4828 @LNAME1572 DS  0H
00002EF6 00000018                           4829          DC    X'00000018'
00002EFA 99846D9281869281                   4830          DC    C'rd_kafka_compression2str'
00002F12 00                                 4831          DC    X'00'
                                            4832 rd_kafka_compression2str DCCPRLG CINDEX=1572,BASER=12,FRAME=200,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1572
                                            4833          macro
                                            4834          dccextrn &m
                                            4835          gblc    &$dccext(1000)
                                            4836          gbla    &$dccexti
                                            4837          lcla    &i
                                            4838 &$dccext(&$dccexti+1) setc    '&m'
                                            4839 &i       seta    1
                                            4840 .loop    aif    (&i gt &$dccexti).around
                                            4841          aif    ('&$dccext(&i)' eq '&m').getout
                                            4842 &i       seta    &i+1
                                            4843          ago     .loop
                                            4844 .around  anop
                                            4845 &$dccexti seta &$dccexti+1
                                            4846          extrn  &m
                                            4847 .getout  anop
                                            4848          mend
00002F18                                    4849+$eye0105    ds    0d                                                    02-DCCCA
00002F18 C4C3C3                             4850+         dc cl3'DCC'                                                    02-DCCCA
00002F1B 01                                 4851+         dc xl1'01' format one                                          02-DCCCA
00002F1C 00000000                           4852+         dc a(0)                                                        02-DCCCA
00002F20 0000000000002F8A                   4853+         dc ad(@PER_1572)                                               02-DCCCA
00002F28 00000000000000C8                   4854+         dc ad(200)                                                     02-DCCCA
00002F30 0000000000000000                   4855+         dc ad(0)                                                       02-DCCCA
00002F38 0000000000001000                   4856+         dc ad(4096)                                                    02-DCCCA
00002F40 20                                 4857+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002F41 03                                 4858+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002F42 03                                 4859+         dc al1(3)                                                      02-DCCCA
00002F43 08                                 4860+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002F44 00                                 4861+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page  101 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002F45 000000                             4862+         dc al3(0)                                                      02-DCCCA
00002F48 0000000000002EF6                   4863+         dc ad(@LNAME1572)                                              02-DCCCA
00002F50                                    4864+         ds 0d                                                          02-DCCCA
00002F50 0000000000002F18                   4865+         dc ad($eye0105)                                                02-DCCCA
00002F58 0000000000000000                   4866+         dc ad(0)                                                       02-DCCCA
00002F60                                    4867+         ds    0d                                                       01-DCCPR
00002F60                                    4868+rd_kafka_compression2str ds 0d                                          01-DCCPR
00002F60                                    4869+@REGION_1572_1 ds 0h                                                    01-DCCPR
00002F60 EBEC D008 0024          00000008   4870+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002F66 E3E0 D088 0004          00000088   4871+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002F6C E3C0 D090 0004          00000090   4872+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002F72 B904 002E                          4873+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002F76 E3B0 C018 0004          00000018   4874+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002F7C A7EB 00C8               000000C8   4875+         aghi  14,200              increase by frame size               01-DCCPR
00002F80 E3E0 C020 0021          00000020   4876+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002F86 4720 B020               00000020   4877+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002F8A                                    4878+@PER_1572 ds   0h                                                       01-DCCPR
00002F8A EBDE 2080 0024          00000080   4879+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002F90 E3C0 2090 0024          00000090   4880+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002F96 B904 00D2                          4881+         lgr   13,2                set real frame pointer               01-DCCPR
00002F9A B904 00CF                          4882+         lgr   12,15               set base reg                         01-DCCPR
                        00002F60            4883+         using @REGION_1572_1,12                                        01-DCCPR
                                            4884          DCCPRV REG=2      ; Get PRV from DVT
00002F9E E320 B008 0004          00000008   4885+         LG 2,8(0,11)                                                   01-DCCPR
                                            4886 * ******* End of Prologue
                                            4887 * *
                                            4888 * ***           static const char *names[RD_KAFKA_COMPRESSION_NUM] = {
                                            4889 * ***                   [RD_KAFKA_COMPRESSION_NONE] = "none",
                                            4890 * ***                   [RD_KAFKA_COMPRESSION_GZIP] = "gzip",
                                            4891 * ***                   [RD_KAFKA_COMPRESSION_SNAPPY] = "snappy",
                                            4892 * ***                   [RD_KAFKA_COMPRESSION_LZ4] = "lz4",
                                            4893 * ***                   [RD_KAFKA_COMPRESSION_ZSTD] = "zstd",
00002FA4 E3F0 1004 0012          00000004   4894          LT    15,4(0,1)   ; compr
                                            4895 * ***                   [RD_KAFKA_COMPRESSION_INHERIT] = "inherit"
                                            4896 * ***           static  char ret[32];
                                            4897 * ***
                                            4898 * ***           if ((int)compr < 0 || compr >= RD_KAFKA_COMPRESSION_NU\
                                            4899 * M) {
00002FAA 4740 C056               00002FB6   4900          BL    @L554
00002FAE A7FE 0006               00000006   4901          CHI   15,6
00002FB2 4740 C0BC               0000301C   4902          BL    @L553
00002FB6                                    4903 @L554    DS    0H
                                            4904 * ***                   snprintf(ret, sizeof(ret), "codec0x%x?", (int)\
                                            4905 * compr);
00002FB6 E310 C0B8 0014          00003018   4906          LGF   1,@lit_1572_121
00002FBC 4121 2000               00000000   4907          LA    2,0(1,2)
00002FC0 4110 24F0               000004F0   4908          LA    1,1264(0,2)
00002FC4 E310 D0A8 0024          000000A8   4909          STG   1,168(0,13)
00002FCA E548 D0B0 0020          000000B0   4910          MVGHI 176(13),32
00002FD0 E310 C0B0 0004          00003010   4911          LG    1,@lit_1572_122
00002FD6 4110 109C               0000009C   4912          LA    1,156(0,1)
00002FDA E310 D0B8 0024          000000B8   4913          STG   1,184(0,13)
                                                                                                                           Page  102 
  Active Usings: @REGION_1572_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002FE0 B914 00FF                          4914          LGFR  15,15
00002FE4 E3F0 D0C0 0024          000000C0   4915          STG   15,192(0,13)
00002FEA 4110 D0A8               000000A8   4916          LA    1,168(0,13)
00002FEE E3F0 C0A8 0004          00003008   4917          LG    15,@lit_1572_123 ; snprintf
00002FF4                                    4918 @@gen_label229 DS    0H
00002FF4 05EF                               4919          BALR  14,15
00002FF6                                    4920 @@gen_label230 DS    0H
                                            4921 * ***
                                            4922 * ***                   return ret;
00002FF6 41F0 24F0               000004F0   4923          LA    15,1264(0,2)
00002FFA 47F0 C0D6               00003036   4924          B     @ret_lab_1572
00003000                                    4925          DS    0D
00003000 000000C8                           4926 @FRAMESIZE_1572 DC F'200'
00003004 00000000
00003008 0000000000000000                   4927 @lit_1572_123 DC AD(snprintf)
00003010 0000000000012AB8                   4928 @lit_1572_122 DC AD(@strings@)
00003018 00000000                           4929 @lit_1572_121 DC Q(@@STATIC)
                                            4930 * ***           }
0000301C                                    4931 @L553    DS    0H
                                            4932 * ***
                                            4933 * ***           return names[compr];
0000301C B914 00FF                          4934          LGFR  15,15
00003020 E310 C0B8 0014          00003018   4935          LGF   1,@lit_1572_121
00003026 4111 2000               00000000   4936          LA    1,0(1,2)
0000302A EBFF 0003 000D          00000003   4937          SLLG  15,15,3(0)  ; *0x8
00003030 E3FF 14C0 0004          000004C0   4938          LG    15,1216(15,1)
                                            4939 * ***   }
00003036                                    4940 @ret_lab_1572 DS 0H
                                            4941 * * **** Start of Epilogue
                                            4942          DCCEPIL
00003036                                    4943+         ds 0h                                                          01-DCCEP
                                            4944+* Epilog
00003036 D707 D088 D088 00000088 00000088   4945+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000303C E3D0 D080 0004          00000080   4946+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003042 E3C0 D090 0004          00000090   4947+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003048 E3B0 C018 0004          00000018   4948+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000304E E3C0 B010 0021          00000010   4949+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003054 E3E0 D008 0004          00000008   4950+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000305A EB1C D020 0004          00000020   4951+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003060 078E                               4952+         bcr 8,14                if same dsab, just return              01-DCCEP
00003062 E3F0 D010 0024          00000010   4953+         stg 15,16(0,13)         save return code                       01-DCCEP
00003068 E300 D018 0024          00000018   4954+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000306E E3F0 D090 0004          00000090   4955+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003074 E3F0 F018 0004          00000018   4956+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000307A 47F0 F040               00000040   4957+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4958+* End of Epilog
                                            4959 * * **** End of Epilogue
                                            4960          DROP  12
                                            4961 *
                                            4962 *   DSECT for automatic variables in "rd_kafka_compression2str"
                                            4963 *      (FUNCTION #1572)
                                            4964 *
                                                                                                                           Page  103 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                00000000 000000A8   4965 @AUTO#rd_kafka_compression2str DSECT
00000000                                    4966          DS    XL168
                                            4967 *
0000307E                00000000 00012806   4968 @CODE    CSECT
                                            4969 *
                                            4970 *
                                            4971 *
                                            4972 * ....... start of rd_kafka_msgset_reader_init
0000307E                                    4973 @LNAME1943 DS  0H
0000307E 0000001B                           4974          DC    X'0000001B'
00003082 99846D9281869281                   4975          DC    C'rd_kafka_msgset_reader_init'
0000309D 00                                 4976          DC    X'00'
                                            4977 rd_kafka_msgset_reader_init DCCPRLG CINDEX=1943,BASER=12,FRAME=200,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1943
                                            4978          macro
                                            4979          dccextrn &m
                                            4980          gblc    &$dccext(1000)
                                            4981          gbla    &$dccexti
                                            4982          lcla    &i
                                            4983 &$dccext(&$dccexti+1) setc    '&m'
                                            4984 &i       seta    1
                                            4985 .loop    aif    (&i gt &$dccexti).around
                                            4986          aif    ('&$dccext(&i)' eq '&m').getout
                                            4987 &i       seta    &i+1
                                            4988          ago     .loop
                                            4989 .around  anop
                                            4990 &$dccexti seta &$dccexti+1
                                            4991          extrn  &m
                                            4992 .getout  anop
                                            4993          mend
000030A0                                    4994+$eye0109    ds    0d                                                    02-DCCCA
000030A0 C4C3C3                             4995+         dc cl3'DCC'                                                    02-DCCCA
000030A3 01                                 4996+         dc xl1'01' format one                                          02-DCCCA
000030A4 00000000                           4997+         dc a(0)                                                        02-DCCCA
000030A8 0000000000003112                   4998+         dc ad(@PER_1943)                                               02-DCCCA
000030B0 00000000000000C8                   4999+         dc ad(200)                                                     02-DCCCA
000030B8 0000000000000000                   5000+         dc ad(0)                                                       02-DCCCA
000030C0 0000000000001000                   5001+         dc ad(4096)                                                    02-DCCCA
000030C8 20                                 5002+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000030C9 03                                 5003+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000030CA 03                                 5004+         dc al1(3)                                                      02-DCCCA
000030CB 08                                 5005+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000030CC 00                                 5006+         dc bl.8'00000000'                                              02-DCCCA
000030CD 000000                             5007+         dc al3(0)                                                      02-DCCCA
000030D0 000000000000307E                   5008+         dc ad(@LNAME1943)                                              02-DCCCA
000030D8                                    5009+         ds 0d                                                          02-DCCCA
000030D8 00000000000030A0                   5010+         dc ad($eye0109)                                                02-DCCCA
000030E0 0000000000000000                   5011+         dc ad(0)                                                       02-DCCCA
000030E8                                    5012+         ds    0d                                                       01-DCCPR
000030E8                                    5013+rd_kafka_msgset_reader_init ds 0d                                       01-DCCPR
000030E8                                    5014+@REGION_1943_1 ds 0h                                                    01-DCCPR
000030E8 EBEC D008 0024          00000008   5015+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page  104 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000030EE E3E0 D088 0004          00000088   5016+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000030F4 E3C0 D090 0004          00000090   5017+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000030FA B904 002E                          5018+         lgr   2,14                copy addr of our savearea            01-DCCPR
000030FE E3B0 C018 0004          00000018   5019+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003104 A7EB 00C8               000000C8   5020+         aghi  14,200              increase by frame size               01-DCCPR
00003108 E3E0 C020 0021          00000020   5021+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000310E 4720 B020               00000020   5022+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003112                                    5023+@PER_1943 ds   0h                                                       01-DCCPR
00003112 EBDE 2080 0024          00000080   5024+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003118 E3C0 2090 0024          00000090   5025+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000311E B904 00D2                          5026+         lgr   13,2                set real frame pointer               01-DCCPR
00003122 B904 00CF                          5027+         lgr   12,15               set base reg                         01-DCCPR
                        000030E8            5028+         using @REGION_1943_1,12                                        01-DCCPR
00003126 B904 0051                          5029          LGR   5,1         ; ptr to parm area
                                            5030 * ******* End of Prologue
                                            5031 * *
0000312A EB23 5000 0004          00000000   5032          LMG   2,3,0(5)    ; msetr
00003130 E340 5028 0004          00000028   5033          LG    4,40(0,5)   ; par_rkq
                                            5034 * ***
                                            5035 * ***           __memset(msetr,0,sizeof(*msetr));
                                            5036 * setting 320 bytes to 0x00
00003136 D7FF 2000 2000 00000000 00000000   5037          XC    0(256,2),0(2)
0000313C D73F 2100 2100 00000100 00000100   5038          XC    256(64,2),256(2)
                                            5039 * ***
                                            5040 * ***           msetr->msetr_rkb        = rkbuf->rkbuf_rkb;
00003142 E3F0 3100 0004          00000100   5041          LG    15,256(0,3) ; offset of rkbuf_rkb in rd_kafka_buf_s
00003148 E3F0 2048 0024          00000048   5042          STG   15,72(0,2)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
                                            5043 * ***           msetr->msetr_broker_id  = rd_kafka_broker_id(msetr->ms\
                                            5044 * etr_rkb);
0000314E E3F0 D0A8 0024          000000A8   5045          STG   15,168(0,13)
00003154 4110 D0A8               000000A8   5046          LA    1,168(0,13)
00003158 E3F0 C170 0004          00003258   5047          LG    15,@lit_1943_126 ; rd_kafka_broker_id
0000315E                                    5048 @@gen_label231 DS    0H
0000315E 05EF                               5049          BALR  14,15
00003160                                    5050 @@gen_label232 DS    0H
00003160 50F0 2040               00000040   5051          ST    15,64(0,2)
                                            5052 * ***           msetr->msetr_rktp       = rktp;
00003164 E3F0 5010 0004          00000010   5053          LG    15,16(0,5)  ; rktp
0000316A E3F0 2050 0024          00000050   5054          STG   15,80(0,2)  ; offset of msetr_rktp in rd_kafka_msgset_re*
                                                                ader_s
                                            5055 * ***           msetr->msetr_aborted_txns = aborted_txns;
00003170 E3F0 5020 0004          00000020   5056          LG    15,32(0,5)  ; aborted_txns
00003176 E3F0 2030 0024          00000030   5057          STG   15,48(0,2)  ; offset of msetr_aborted_txns in rd_kafka_m*
                                                                sgset_reader_s
                                            5058 * ***           msetr->msetr_tver       = tver;
0000317C E3F0 5018 0004          00000018   5059          LG    15,24(0,5)  ; tver
00003182 E3F0 2038 0024          00000038   5060          STG   15,56(0,2)  ; offset of msetr_tver in rd_kafka_msgset_re*
                                                                ader_s
                                            5061 * ***           msetr->msetr_rkbuf      = rkbuf;
00003188 E330 2000 0024          00000000   5062          STG   3,0(0,2)    ; msetr
                                            5063 * ***           msetr->msetr_srcname    = "";
                                                                                                                           Page  105 
  Active Usings: @REGION_1943_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000318E E3F0 C188 0004          00003270   5064          LG    15,@lit_1943_127
00003194 4110 F0A8               000000A8   5065          LA    1,168(0,15)
00003198 E310 2130 0024          00000130   5066          STG   1,304(0,2)  ; offset of msetr_srcname in rd_kafka_msgset*
                                                                _reader_s
                                            5067 * ***
                                            5068 * ***           rkbuf->rkbuf_uflow_mitigation = "truncated response fr\
                                            5069 * om broker (ok)";
0000319E 41F0 F0AA               000000AA   5070          LA    15,170(0,15)
000031A2 E3F0 31E8 0024          000001E8   5071          STG   15,488(0,3) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
                                            5072 * ***
                                            5073 * ***
                                            5074 * ***
                                            5075 * ***           rd_kafka_q_init0(&msetr->msetr_rkq,msetr->msetr_rkb->r\
                                            5076 * kb_rk,__FUNCTION__,239);
000031A8 41F0 2068               00000068   5077          LA    15,104(0,2)
000031AC E3F0 D0A8 0024          000000A8   5078          STG   15,168(0,13)
000031B2 E3F0 2048 0004          00000048   5079          LG    15,72(0,2)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000031B8 E3F0 FFD0 0004          00000FD0   5080          LG    15,4048(0,15)
000031BE E3F0 D0B0 0024          000000B0   5081          STG   15,176(0,13)
000031C4 E3F0 C180 0004          00003268   5082          LG    15,@lit_1943_128
000031CA 41F0 F1A6               000001A6   5083          LA    15,422(0,15)
000031CE E3F0 D0B8 0024          000000B8   5084          STG   15,184(0,13)
000031D4 E548 D0C0 00EF          000000C0   5085          MVGHI 192(13),239
000031DA 4110 D0A8               000000A8   5086          LA    1,168(0,13)
000031DE E3F0 C178 0004          00003260   5087          LG    15,@lit_1943_129 ; rd_kafka_q_init0
000031E4                                    5088 @@gen_label233 DS    0H
000031E4 05EF                               5089          BALR  14,15
000031E6                                    5090 @@gen_label234 DS    0H
                                            5091 * ***
                                            5092 * ***
                                            5093 * ***
                                            5094 * ***           msetr->msetr_rkq.rkq_serve  = par_rkq->rkq_serve;
000031E6 E3F0 4098 0004          00000098   5095          LG    15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
000031EC E3F0 2100 0024          00000100   5096          STG   15,256(0,2) ; offset of rkq_serve in rd_kafka_q_s
                                            5097 * ***           msetr->msetr_rkq.rkq_opaque = par_rkq->rkq_opaque;
000031F2 E3F0 40A0 0004          000000A0   5098          LG    15,160(0,4) ; offset of rkq_opaque in rd_kafka_q_s
000031F8 E3F0 2108 0024          00000108   5099          STG   15,264(0,2) ; offset of rkq_opaque in rd_kafka_q_s
                                            5100 * ***
                                            5101 * ***
                                            5102 * ***
                                            5103 * ***
                                            5104 * ***           msetr->msetr_par_rkq = par_rkq;
000031FE E340 2118 0024          00000118   5105          STG   4,280(0,2)  ; offset of msetr_par_rkq in rd_kafka_msgset*
                                                                _reader_s
                                            5106 * ***   }
00003204                                    5107 @ret_lab_1943 DS 0H
                                            5108 * * **** Start of Epilogue
                                            5109          DCCEPIL
00003204                                    5110+         ds 0h                                                          01-DCCEP
                                            5111+* Epilog
                                                                                                                           Page  106 
  Active Usings: @REGION_1943_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003204 D707 D088 D088 00000088 00000088   5112+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000320A E3D0 D080 0004          00000080   5113+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003210 E3C0 D090 0004          00000090   5114+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003216 E3B0 C018 0004          00000018   5115+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000321C E3C0 B010 0021          00000010   5116+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003222 E3E0 D008 0004          00000008   5117+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003228 EB1C D020 0004          00000020   5118+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000322E 078E                               5119+         bcr 8,14                if same dsab, just return              01-DCCEP
00003230 E3F0 D010 0024          00000010   5120+         stg 15,16(0,13)         save return code                       01-DCCEP
00003236 E300 D018 0024          00000018   5121+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000323C E3F0 D090 0004          00000090   5122+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003242 E3F0 F018 0004          00000018   5123+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003248 47F0 F040               00000040   5124+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5125+* End of Epilog
                                            5126 * * **** End of Epilogue
00003250                                    5127          DS    0D
00003250 000000C8                           5128 @FRAMESIZE_1943 DC F'200'
00003254 00000000
00003258 0000000000000000                   5129 @lit_1943_126 DC AD(rd_kafka_broker_id)
00003260 0000000000000000                   5130 @lit_1943_129 DC AD(rd_kafka_q_init0)
00003268 0000000000012808                   5131 @lit_1943_128 DC AD(@DATA)
00003270 0000000000012AB8                   5132 @lit_1943_127 DC AD(@strings@)
                                            5133          DROP  12
                                            5134 *
                                            5135 *   DSECT for automatic variables in "rd_kafka_msgset_reader_init"
                                            5136 *      (FUNCTION #1943)
                                            5137 *
00000000                00000000 000000A8   5138 @AUTO#rd_kafka_msgset_reader_init DSECT
00000000                                    5139          DS    XL168
                                            5140 *
00003278                00000000 00012806   5141 @CODE    CSECT
                                            5142 *
                                            5143 *
                                            5144 *
                                            5145 * ....... start of rd_kafka_msgset_reader_decompress
00003278                                    5146 @LNAME1944 DS  0H
00003278 00000021                           5147          DC    X'00000021'
0000327C 99846D9281869281                   5148          DC    C'rd_kafka_msgset_reader_decompres'
0000329C A2                                 5149          DC    C's'
0000329D 00                                 5150          DC    X'00'
                                            5151 rd_kafka_msgset_reader_decompress DCCPRLG CINDEX=1944,BASER=12,FRAME=66*
                                                                4,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1944
                                            5152          macro
                                            5153          dccextrn &m
                                            5154          gblc    &$dccext(1000)
                                            5155          gbla    &$dccexti
                                            5156          lcla    &i
                                            5157 &$dccext(&$dccexti+1) setc    '&m'
                                            5158 &i       seta    1
                                            5159 .loop    aif    (&i gt &$dccexti).around
                                            5160          aif    ('&$dccext(&i)' eq '&m').getout
                                            5161 &i       seta    &i+1
                                                                                                                           Page  107 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5162          ago     .loop
                                            5163 .around  anop
                                            5164 &$dccexti seta &$dccexti+1
                                            5165          extrn  &m
                                            5166 .getout  anop
                                            5167          mend
000032A0                                    5168+$eye0112    ds    0d                                                    02-DCCCA
000032A0 C4C3C3                             5169+         dc cl3'DCC'                                                    02-DCCCA
000032A3 01                                 5170+         dc xl1'01' format one                                          02-DCCCA
000032A4 00000000                           5171+         dc a(0)                                                        02-DCCCA
000032A8 0000000000003312                   5172+         dc ad(@PER_1944)                                               02-DCCCA
000032B0 0000000000000298                   5173+         dc ad(664)                                                     02-DCCCA
000032B8 0000000000000000                   5174+         dc ad(0)                                                       02-DCCCA
000032C0 0000000000001000                   5175+         dc ad(4096)                                                    02-DCCCA
000032C8 20                                 5176+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000032C9 03                                 5177+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000032CA 03                                 5178+         dc al1(3)                                                      02-DCCCA
000032CB 08                                 5179+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000032CC 00                                 5180+         dc bl.8'00000000'                                              02-DCCCA
000032CD 000000                             5181+         dc al3(0)                                                      02-DCCCA
000032D0 0000000000003278                   5182+         dc ad(@LNAME1944)                                              02-DCCCA
000032D8                                    5183+         ds 0d                                                          02-DCCCA
000032D8 00000000000032A0                   5184+         dc ad($eye0112)                                                02-DCCCA
000032E0 0000000000000000                   5185+         dc ad(0)                                                       02-DCCCA
000032E8                                    5186+         ds    0d                                                       01-DCCPR
000032E8                                    5187+rd_kafka_msgset_reader_decompress ds 0d                                 01-DCCPR
000032E8                                    5188+@REGION_1944_1 ds 0h                                                    01-DCCPR
000032E8 EBEC D008 0024          00000008   5189+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000032EE E3E0 D088 0004          00000088   5190+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000032F4 E3C0 D090 0004          00000090   5191+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000032FA B904 002E                          5192+         lgr   2,14                copy addr of our savearea            01-DCCPR
000032FE E3B0 C018 0004          00000018   5193+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003304 A7EB 0298               00000298   5194+         aghi  14,664              increase by frame size               01-DCCPR
00003308 E3E0 C020 0021          00000020   5195+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000330E 4720 B020               00000020   5196+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003312                                    5197+@PER_1944 ds   0h                                                       01-DCCPR
00003312 EBDE 2080 0024          00000080   5198+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003318 E3C0 2090 0024          00000090   5199+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000331E B904 00D2                          5200+         lgr   13,2                set real frame pointer               01-DCCPR
00003322 B904 00CF                          5201+         lgr   12,15               set base reg                         01-DCCPR
                        000032E8            5202+         using @REGION_1944_1,12                                        01-DCCPR
00003326 B904 0091                          5203          LGR   9,1         ; ptr to parm area
                                            5204 * ******* End of Prologue
                                            5205 * *
                                            5206 * ***           struct iovec iov = { .iov_base = ((void *)0), .iov_len\
                                            5207 *  = 0 };
0000332A E340 9000 0004          00000000   5208          LG    4,0(0,9)    ; msetr
00003330 5830 900C               0000000C   5209          L     3,12(0,9)   ; MsgVersion
00003334 E350 9020 0004          00000020   5210          LG    5,32(0,9)   ; Offset
0000333A E360 9030 0004          00000030   5211          LG    6,48(0,9)   ; compressed_size
                                            5212 * setting 16 bytes to 0x00
00003340 D70F D0A8 D0A8 000000A8 000000A8   5213          XC    168(16,13),168(13)
                                                                                                                           Page  108 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5214 * ***           rd_kafka_toppar_t *rktp = msetr->msetr_rktp;
00003346 E370 4050 0004          00000050   5215          LG    7,80(0,4)   ; offset of msetr_rktp in rd_kafka_msgset_re*
                                                                ader_s
                                            5216 * ***           int codec = Attributes & 0x7;
0000334C 5880 9014               00000014   5217          L     8,20(0,9)   ; Attributes
00003350 C08B 0000 0007                     5218          NILF  8,X'00000007'
                                            5219 * ***           rd_kafka_resp_err_t err = RD_KAFKA_RESP_ERR_NO_ERROR;
                                            5220 * ***           rd_kafka_buf_t *rkbufz;
                                            5221 * ***
                                            5222 * ***           msetr->msetr_compression = codec;
00003356 5080 4138               00000138   5223          ST    8,312(0,4)  ; offset of msetr_compression in rd_kafka_ms*
                                                                gset_reader_s
                                            5224 * ***
                                            5225 * ***           switch (codec)
0000335A 47F0 C83E               00003B26   5226          B     @L630
00003360                                    5227          DS    0D
00003360 00000298                           5228 @FRAMESIZE_1944 DC F'664'
00003364 00000000
00003368 0000000000012808                   5229 @lit_1944_132 DC AD(@DATA)
00003370 0000000000000000                   5230 @lit_1944_133 DC AD(rd_kafka_snappy_java_uncompress)
00003378 0000000000000000                   5231 @lit_1944_135 DC AD(mtx_lock)
00003380 0000000000001668                   5232 @lit_1944_137 DC AD(rd_strlcpy)
00003388 0000000000000000                   5233 @lit_1944_139 DC AD(mtx_unlock)
00003390 0000000000000000                   5234 @lit_1944_141 DC AD(rd_kafka_log0)
00003398 0000000000012AB8                   5235 @lit_1944_140 DC AD(@strings@)
000033A0 00000962                           5236 @lit_region_diff_1944_1_2  DC A(@REGION_1944_2-@REGION_1944_1)
000033A4 00000000
000033A8 0000000000000000                   5237 @lit_1944_143 DC AD(rd_kafka_snappy_uncompressed_length)
000033B0 0000000000000438                   5238 @lit_1944_153 DC AD(rd_malloc)
000033B8 0000000000000000                   5239 @lit_1944_160 DC AD(__error)
000033C0 0000000000000000                   5240 @lit_1944_161 DC AD(strerror)
000033C8 0000000000000000                   5241 @lit_1944_165 DC AD(rd_kafka_snappy_uncompress)
000033D0 00000000000005A0                   5242 @lit_1944_175 DC AD(rd_free)
000033D8 0000000000000000                   5243 @lit_1944_179 DC AD(rd_kafka_lz4_decompress)
000033E0 0000000000000000                   5244 @lit_1944_191 DC AD(__assert)
000033E8 0000000000000000                   5245 @lit_1944_193 DC AD(rd_kafka_buf_new_shadow)
000033F0 0000000000000060                   5246 @lit_1944_194 DC AD(rd_atomic32_add)
000033F8 00000000000030E8                   5247 @lit_1944_195 DC AD(rd_kafka_msgset_reader_init)
                                            5248 * ***           {
                                            5249 * ***
                                            5250 * ***   # 301 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                            5251 * ***           case RD_KAFKA_COMPRESSION_SNAPPY:
00003400                                    5252 @L632    DS    0H
                                            5253 * ***           {
                                            5254 * ***                   const char *inbuf = compressed;
00003400 E320 9028 0004          00000028   5255          LG    2,40(0,9)   ; compressed
                                            5256 * ***                   size_t inlen = compressed_size;
                                            5257 * ***                   int r;
                                            5258 * ***                   static const unsigned char snappy_java_magic[]\
                                            5259 *  =
                                            5260 * ***                           { 0x82, 'S','N','A','P','P','Y', 0 };
                                            5261 * ***                   static const size_t snappy_java_hdrlen = 8+4+4\
                                                                                                                           Page  109 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5262 * ;
                                            5263 * ***
                                            5264 * ***
                                            5265 * ***   # 317 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                            5266 * ***                   if (((inlen > snappy_java_hdrlen + 4 && !__mem\
                                            5267 * cmp(inbuf,snappy_java_magic,8)))) {
00003406 E3F0 C080 0004          00003368   5268          LG    15,@lit_1944_132
0000340C E310 F1D0 0004          000001D0   5269          LG    1,464(0,15) ; snappy_java_hdrlen
00003412 A71B 0004               00000004   5270          AGHI  1,4
00003416 B921 0061                          5271          CLGR  6,1
0000341A 47D0 C2CE               000035B6   5272          BNH   @L633
0000341E 4110 F1C2               000001C2   5273          LA    1,450(0,15)
00003422 D507 2000 1000 00000000 00000000   5274          CLC   0(8,2),0(1)
00003428 A719 0001               00000001   5275          LGHI  1,1
0000342C 4720 C154               0000343C   5276          BH    @@gen_label236
00003430 4780 C150               00003438   5277          BE    @@gen_label237
00003434 A71B FFFF               0000FFFF   5278          AGHI  1,-1
00003438                                    5279 @@gen_label237 DS 0H
00003438 A71B FFFF               0000FFFF   5280          AGHI  1,-1
0000343C                                    5281 @@gen_label236 DS 0H
0000343C 1211                               5282          LTR   1,1
0000343E 4770 C2CE               000035B6   5283          BNZ   @L633
                                            5284 * ***
                                            5285 * ***
                                            5286 * ***                           char errstr[128];
                                            5287 * ***
                                            5288 * ***                           inbuf  = inbuf + snappy_java_hdrlen;
00003442 E3F0 F1D0 0004          000001D0   5289          LG    15,464(0,15) ; snappy_java_hdrlen
00003448 411F 2000               00000000   5290          LA    1,0(15,2)
                                            5291 * ***                           inlen -= snappy_java_hdrlen;
0000344C B904 0026                          5292          LGR   2,6
00003450 B90B 002F                          5293          SLGR  2,15
                                            5294 * ***                           iov.iov_base = rd_kafka_snappy_java_un\
                                            5295 * compress(
                                            5296 * ***                                   inbuf, inlen,
                                            5297 * ***                                   &iov.iov_len,
                                            5298 * ***                                   errstr, sizeof(errstr));
00003454 EB12 D238 0024          00000238   5299          STMG  1,2,568(13)
0000345A 41F0 D0B0               000000B0   5300          LA    15,176(0,13)
0000345E E3F0 D248 0024          00000248   5301          STG   15,584(0,13)
00003464 41F0 D0B8               000000B8   5302          LA    15,184(0,13)
00003468 E3F0 D250 0024          00000250   5303          STG   15,592(0,13)
0000346E E548 D258 0080          00000258   5304          MVGHI 600(13),128
00003474 4110 D238               00000238   5305          LA    1,568(0,13)
00003478 E3F0 C088 0004          00003370   5306          LG    15,@lit_1944_133 ; rd_kafka_snappy_java_uncompress
0000347E                                    5307 @@gen_label239 DS    0H
0000347E 05EF                               5308          BALR  14,15
00003480                                    5309 @@gen_label240 DS    0H
00003480 E3F0 D0A8 0024          000000A8   5310          STG   15,168(0,13)
                                            5311 * ***
                                            5312 * ***                           if (((!iov.iov_base))) {
00003486 B902 00FF                          5313          LTGR  15,15
                                                                                                                           Page  110 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000348A 4770 C85A               00003B42   5314          BNZ   @L631
                                            5315 * ***                                   do { if ((((msetr->msetr_rkb)-\
                                            5316 * >rkb_rk->rk_conf.debug & (0x40)))) { do { char _logname[256]; mtx_lo\
                                            5317 * ck(&(msetr->msetr_rkb)->rkb_logname_lock); rd_strlcpy(_logname, mset\
                                            5318 * r->msetr_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(msetr->ms\
                                            5319 * etr_rkb)->rkb_logname_lock); rd_kafka_log0(&(msetr->msetr_rkb)->rkb_\
                                            5320 * rk->rk_conf, (msetr->msetr_rkb)->rkb_rk, _logname, 7, (0x40), "SNAPP\
                                            5321 * Y", "%s [%" "d" "]: " "Snappy decompression for message " "at offset\
                                            5322 *  %" "lld" " failed: %s: " "ignoring message", rktp->rktp_rkt->rkt_to\
                                            5323 * pic->str, rktp->rktp_partition, Offset, errstr); } while (0); } } wh\
                                            5324 * ile (0);
0000348E                                    5325 @L635    DS    0H
0000348E E3F0 4048 0004          00000048   5326          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00003494 E3F0 FFD0 0004          00000FD0   5327          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000349A 9140 F323      00000323 00000040   5328          TM    803(15),64
0000349E 4780 C2C0               000035A8   5329          BZ    @L638
000034A2                                    5330 @L639    DS    0H
000034A2 E3F0 4048 0004          00000048   5331          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000034A8 A729 1638               00001638   5332          LGHI  2,5688      ; 5688
000034AC 41F2 F000               00000000   5333          LA    15,0(2,15)
000034B0 E3F0 D238 0024          00000238   5334          STG   15,568(0,13)
000034B6 4110 D238               00000238   5335          LA    1,568(0,13)
000034BA E3F0 C090 0004          00003378   5336          LG    15,@lit_1944_135 ; mtx_lock
000034C0                                    5337 @@gen_label243 DS    0H
000034C0 05EF                               5338          BALR  14,15
000034C2                                    5339 @@gen_label244 DS    0H
000034C2 41F0 D138               00000138   5340          LA    15,312(0,13)
000034C6 E3F0 D238 0024          00000238   5341          STG   15,568(0,13)
000034CC E3F0 4048 0004          00000048   5342          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000034D2 A719 1630               00001630   5343          LGHI  1,5680      ; 5680
000034D6 E3F1 F000 0004          00000000   5344          LG    15,0(1,15)
000034DC E3F0 D240 0024          00000240   5345          STG   15,576(0,13)
000034E2 E548 D248 0100          00000248   5346          MVGHI 584(13),256
000034E8 4110 D238               00000238   5347          LA    1,568(0,13)
000034EC E3F0 C098 0004          00003380   5348          LG    15,@lit_1944_137 ; rd_strlcpy
000034F2                                    5349 @@gen_label245 DS    0H
000034F2 05EF                               5350          BALR  14,15
000034F4                                    5351 @@gen_label246 DS    0H
000034F4 E3F0 4048 0004          00000048   5352          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000034FA 41F2 F000               00000000   5353          LA    15,0(2,15)
000034FE E3F0 D238 0024          00000238   5354          STG   15,568(0,13)
00003504 4110 D238               00000238   5355          LA    1,568(0,13)
00003508 E3F0 C0A0 0004          00003388   5356          LG    15,@lit_1944_139 ; mtx_unlock
0000350E                                    5357 @@gen_label247 DS    0H
0000350E 05EF                               5358          BALR  14,15
00003510                                    5359 @@gen_label248 DS    0H
00003510 E3F0 4048 0004          00000048   5360          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
                                                                                                                           Page  111 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003516 E3F0 FFD0 0004          00000FD0   5361          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000351C 41F0 F210               00000210   5362          LA    15,528(0,15)
00003520 E3F0 D238 0024          00000238   5363          STG   15,568(0,13)
00003526 E3F0 4048 0004          00000048   5364          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000352C E3F0 FFD0 0004          00000FD0   5365          LG    15,4048(0,15)
00003532 E3F0 D240 0024          00000240   5366          STG   15,576(0,13)
00003538 41F0 D138               00000138   5367          LA    15,312(0,13)
0000353C E3F0 D248 0024          00000248   5368          STG   15,584(0,13)
00003542 E548 D250 0007          00000250   5369          MVGHI 592(13),7
00003548 E548 D258 0040          00000258   5370          MVGHI 600(13),64
0000354E E3F0 C0B0 0004          00003398   5371          LG    15,@lit_1944_140
00003554 4110 F0CE               000000CE   5372          LA    1,206(0,15)
00003558 E310 D260 0024          00000260   5373          STG   1,608(0,13)
0000355E 41F0 F0D6               000000D6   5374          LA    15,214(0,15)
00003562 E3F0 D268 0024          00000268   5375          STG   15,616(0,13)
00003568 E3F0 7060 0004          00000060   5376          LG    15,96(0,7)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000356E E3F0 F080 0004          00000080   5377          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00003574 E3F0 F008 0004          00000008   5378          LG    15,8(0,15)
0000357A E3F0 D270 0024          00000270   5379          STG   15,624(0,13)
00003580 E3F0 7068 0014          00000068   5380          LGF   15,104(0,7)
00003586 E3F0 D278 0024          00000278   5381          STG   15,632(0,13)
0000358C E350 D280 0024          00000280   5382          STG   5,640(0,13)
00003592 41F0 D0B8               000000B8   5383          LA    15,184(0,13)
00003596 E3F0 D288 0024          00000288   5384          STG   15,648(0,13)
0000359C 4110 D238               00000238   5385          LA    1,568(0,13)
000035A0 E3F0 C0A8 0004          00003390   5386          LG    15,@lit_1944_141 ; rd_kafka_log0
000035A6                                    5387 @@gen_label249 DS    0H
000035A6 05EF                               5388          BALR  14,15
000035A8                                    5389 @@gen_label250 DS    0H
000035A8                                    5390 @L638    DS    0H
                                            5391 * ***   # 338 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                            5392 * ***                                   err = RD_KAFKA_RESP_ERR__BAD_C\
                                            5393 * OMPRESSION;
000035A8 A728 FF3A               0000FF3A   5394          LHI   2,-198      ; -198
                                            5395 * ***                                   goto err;
000035AC E3C0 C0B8 001A          000033A0   5396          ALGF  12,@lit_region_diff_1944_1_2
                                            5397          DROP  12
                        00003C4A            5398          USING @REGION_1944_2,12
000035B2 47F0 C122               00003D6C   5399          B     @_err@1944@0
                                            5400          DROP  12
                        000032E8            5401          USING @REGION_1944_1,12
                                            5402 * ***                           }
000035B6                                    5403 @L634    DS    0H
                                            5404 * ***
                                            5405 * ***
                                            5406 * ***                   } else {
000035B6                                    5407 @L633    DS    0H
                                            5408 * ***
                                            5409 * ***
                                            5410 * ***
                                            5411 * ***                           if (((!rd_kafka_snappy_uncompressed_le\
                                                                                                                           Page  112 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5412 * ngth( inbuf, inlen, &iov.iov_len)))) {
000035B6 E320 D238 0024          00000238   5413          STG   2,568(0,13)
000035BC E360 D240 0024          00000240   5414          STG   6,576(0,13)
000035C2 41F0 D0B0               000000B0   5415          LA    15,176(0,13)
000035C6 E3F0 D248 0024          00000248   5416          STG   15,584(0,13)
000035CC 4110 D238               00000238   5417          LA    1,568(0,13)
000035D0 E3F0 C0C0 0004          000033A8   5418          LG    15,@lit_1944_143 ; rd_kafka_snappy_uncompressed_length
000035D6                                    5419 @@gen_label251 DS    0H
000035D6 05EF                               5420          BALR  14,15
000035D8                                    5421 @@gen_label252 DS    0H
000035D8 C0FB 0000 00FF                     5422          NILF  15,X'000000FF'
000035DE 12FF                               5423          LTR   15,15
000035E0 4770 C3F6               000036DE   5424          BNZ   @L643
                                            5425 * ***
                                            5426 * ***                                   do { if ((((msetr->msetr_rkb)-\
                                            5427 * >rkb_rk->rk_conf.debug & (0x40)))) { do { char _logname[256]; mtx_lo\
                                            5428 * ck(&(msetr->msetr_rkb)->rkb_logname_lock); rd_strlcpy(_logname, mset\
                                            5429 * r->msetr_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(msetr->ms\
                                            5430 * etr_rkb)->rkb_logname_lock); rd_kafka_log0(&(msetr->msetr_rkb)->rkb_\
                                            5431 * rk->rk_conf, (msetr->msetr_rkb)->rkb_rk, _logname, 7, (0x40), "SNAPP\
                                            5432 * Y", "Failed to get length of Snappy " "compressed payload " "for mes\
                                            5433 * sage at offset %" "lld" " (%" "zu" " bytes): " "ignoring message", O\
                                            5434 * ffset, inlen); } while (0); } } while (0);
000035E4                                    5435 @L644    DS    0H
000035E4 E3F0 4048 0004          00000048   5436          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000035EA E3F0 FFD0 0004          00000FD0   5437          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
000035F0 9140 F323      00000323 00000040   5438          TM    803(15),64
000035F4 4780 C3E8               000036D0   5439          BZ    @L647
000035F8                                    5440 @L648    DS    0H
000035F8 E3F0 4048 0004          00000048   5441          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000035FE A729 1638               00001638   5442          LGHI  2,5688      ; 5688
00003602 41F2 F000               00000000   5443          LA    15,0(2,15)
00003606 E3F0 D238 0024          00000238   5444          STG   15,568(0,13)
0000360C 4110 D238               00000238   5445          LA    1,568(0,13)
00003610 E3F0 C090 0004          00003378   5446          LG    15,@lit_1944_135 ; mtx_lock
00003616                                    5447 @@gen_label255 DS    0H
00003616 05EF                               5448          BALR  14,15
00003618                                    5449 @@gen_label256 DS    0H
00003618 41F0 D0B8               000000B8   5450          LA    15,184(0,13)
0000361C E3F0 D238 0024          00000238   5451          STG   15,568(0,13)
00003622 E3F0 4048 0004          00000048   5452          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00003628 A719 1630               00001630   5453          LGHI  1,5680      ; 5680
0000362C E3F1 F000 0004          00000000   5454          LG    15,0(1,15)
00003632 E3F0 D240 0024          00000240   5455          STG   15,576(0,13)
00003638 E548 D248 0100          00000248   5456          MVGHI 584(13),256
0000363E 4110 D238               00000238   5457          LA    1,568(0,13)
00003642 E3F0 C098 0004          00003380   5458          LG    15,@lit_1944_137 ; rd_strlcpy
00003648                                    5459 @@gen_label257 DS    0H
00003648 05EF                               5460          BALR  14,15
                                                                                                                           Page  113 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000364A                                    5461 @@gen_label258 DS    0H
0000364A E3F0 4048 0004          00000048   5462          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00003650 41F2 F000               00000000   5463          LA    15,0(2,15)
00003654 E3F0 D238 0024          00000238   5464          STG   15,568(0,13)
0000365A 4110 D238               00000238   5465          LA    1,568(0,13)
0000365E E3F0 C0A0 0004          00003388   5466          LG    15,@lit_1944_139 ; mtx_unlock
00003664                                    5467 @@gen_label259 DS    0H
00003664 05EF                               5468          BALR  14,15
00003666                                    5469 @@gen_label260 DS    0H
00003666 E3F0 4048 0004          00000048   5470          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000366C E3F0 FFD0 0004          00000FD0   5471          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00003672 41F0 F210               00000210   5472          LA    15,528(0,15)
00003676 E3F0 D238 0024          00000238   5473          STG   15,568(0,13)
0000367C E3F0 4048 0004          00000048   5474          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00003682 E3F0 FFD0 0004          00000FD0   5475          LG    15,4048(0,15)
00003688 E3F0 D240 0024          00000240   5476          STG   15,576(0,13)
0000368E 41F0 D0B8               000000B8   5477          LA    15,184(0,13)
00003692 E3F0 D248 0024          00000248   5478          STG   15,584(0,13)
00003698 E548 D250 0007          00000250   5479          MVGHI 592(13),7
0000369E E548 D258 0040          00000258   5480          MVGHI 600(13),64
000036A4 E3F0 C0B0 0004          00003398   5481          LG    15,@lit_1944_140
000036AA 4110 F0CE               000000CE   5482          LA    1,206(0,15)
000036AE E310 D260 0024          00000260   5483          STG   1,608(0,13)
000036B4 41F0 F12C               0000012C   5484          LA    15,300(0,15)
000036B8 E3F0 D268 0024          00000268   5485          STG   15,616(0,13)
000036BE EB56 D270 0024          00000270   5486          STMG  5,6,624(13)
000036C4 4110 D238               00000238   5487          LA    1,568(0,13)
000036C8 E3F0 C0A8 0004          00003390   5488          LG    15,@lit_1944_141 ; rd_kafka_log0
000036CE                                    5489 @@gen_label261 DS    0H
000036CE 05EF                               5490          BALR  14,15
000036D0                                    5491 @@gen_label262 DS    0H
000036D0                                    5492 @L647    DS    0H
                                            5493 * ***   # 356 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                            5494 * ***                                   err = RD_KAFKA_RESP_ERR__BAD_C\
                                            5495 * OMPRESSION;
000036D0 A728 FF3A               0000FF3A   5496          LHI   2,-198      ; -198
                                            5497 * ***                                   goto err;
000036D4 E3C0 C0B8 001A          000033A0   5498          ALGF  12,@lit_region_diff_1944_1_2
                                            5499          DROP  12
                        00003C4A            5500          USING @REGION_1944_2,12
000036DA 47F0 C122               00003D6C   5501          B     @_err@1944@0
                                            5502          DROP  12
                        000032E8            5503          USING @REGION_1944_1,12
                                            5504 * ***                           }
000036DE                                    5505 @L643    DS    0H
                                            5506 * ***
                                            5507 * ***
                                            5508 * ***                           iov.iov_base = rd_malloc(iov.iov_len);
000036DE E3F0 D0B0 0004          000000B0   5509          LG    15,176(0,13)
                                                                                                                           Page  114 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000036E4 E3F0 D238 0024          00000238   5510          STG   15,568(0,13)
000036EA 4110 D238               00000238   5511          LA    1,568(0,13)
000036EE E3F0 C0C8 0004          000033B0   5512          LG    15,@lit_1944_153 ; rd_malloc
000036F4                                    5513 @@gen_label263 DS    0H
000036F4 05EF                               5514          BALR  14,15
000036F6                                    5515 @@gen_label264 DS    0H
000036F6 E3F0 D0A8 0024          000000A8   5516          STG   15,168(0,13)
                                            5517 * ***                           if (((!iov.iov_base))) {
000036FC B902 00FF                          5518          LTGR  15,15
00003700 4770 C54A               00003832   5519          BNZ   @L651
                                            5520 * ***                                   do { if ((((msetr->msetr_rkb)-\
                                            5521 * >rkb_rk->rk_conf.debug & (0x40)))) { do { char _logname[256]; mtx_lo\
                                            5522 * ck(&(msetr->msetr_rkb)->rkb_logname_lock); rd_strlcpy(_logname, mset\
                                            5523 * r->msetr_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(msetr->ms\
                                            5524 * etr_rkb)->rkb_logname_lock); rd_kafka_log0(&(msetr->msetr_rkb)->rkb_\
                                            5525 * rk->rk_conf, (msetr->msetr_rkb)->rkb_rk, _logname, 7, (0x40), "SNAPP\
                                            5526 * Y", "Failed to allocate Snappy " "decompress buffer of size %" "zu" \
                                            5527 * "for message at offset %" "lld" " (%" "zu" " bytes): %s: " "ignoring\
                                            5528 *  message", iov.iov_len, Offset, inlen, strerror((* __error()))); } w\
                                            5529 * hile (0); } } while (0);
00003704                                    5530 @L652    DS    0H
00003704 E3F0 4048 0004          00000048   5531          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000370A E3F0 FFD0 0004          00000FD0   5532          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00003710 9140 F323      00000323 00000040   5533          TM    803(15),64
00003714 4780 C53C               00003824   5534          BZ    @L655
00003718                                    5535 @L656    DS    0H
00003718 E3F0 4048 0004          00000048   5536          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000371E A729 1638               00001638   5537          LGHI  2,5688      ; 5688
00003722 41F2 F000               00000000   5538          LA    15,0(2,15)
00003726 E3F0 D238 0024          00000238   5539          STG   15,568(0,13)
0000372C 4110 D238               00000238   5540          LA    1,568(0,13)
00003730 E3F0 C090 0004          00003378   5541          LG    15,@lit_1944_135 ; mtx_lock
00003736                                    5542 @@gen_label267 DS    0H
00003736 05EF                               5543          BALR  14,15
00003738                                    5544 @@gen_label268 DS    0H
00003738 41F0 D0B8               000000B8   5545          LA    15,184(0,13)
0000373C E3F0 D238 0024          00000238   5546          STG   15,568(0,13)
00003742 E3F0 4048 0004          00000048   5547          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00003748 A719 1630               00001630   5548          LGHI  1,5680      ; 5680
0000374C E3F1 F000 0004          00000000   5549          LG    15,0(1,15)
00003752 E3F0 D240 0024          00000240   5550          STG   15,576(0,13)
00003758 E548 D248 0100          00000248   5551          MVGHI 584(13),256
0000375E 4110 D238               00000238   5552          LA    1,568(0,13)
00003762 E3F0 C098 0004          00003380   5553          LG    15,@lit_1944_137 ; rd_strlcpy
00003768                                    5554 @@gen_label269 DS    0H
00003768 05EF                               5555          BALR  14,15
0000376A                                    5556 @@gen_label270 DS    0H
0000376A E3F0 4048 0004          00000048   5557          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
                                                                                                                           Page  115 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003770 41F2 F000               00000000   5558          LA    15,0(2,15)
00003774 E3F0 D238 0024          00000238   5559          STG   15,568(0,13)
0000377A 4110 D238               00000238   5560          LA    1,568(0,13)
0000377E E3F0 C0A0 0004          00003388   5561          LG    15,@lit_1944_139 ; mtx_unlock
00003784                                    5562 @@gen_label271 DS    0H
00003784 05EF                               5563          BALR  14,15
00003786                                    5564 @@gen_label272 DS    0H
00003786 E3F0 C0D0 0004          000033B8   5565          LG    15,@lit_1944_160 ; __error
0000378C                                    5566 @@gen_label273 DS    0H
0000378C 05EF                               5567          BALR  14,15
0000378E                                    5568 @@gen_label274 DS    0H
0000378E 58F0 F000               00000000   5569          L     15,0(0,15)
00003792 B914 00FF                          5570          LGFR  15,15
00003796 E3F0 D238 0024          00000238   5571          STG   15,568(0,13)
0000379C 4110 D238               00000238   5572          LA    1,568(0,13)
000037A0 E3F0 C0D8 0004          000033C0   5573          LG    15,@lit_1944_161 ; strerror
000037A6                                    5574 @@gen_label275 DS    0H
000037A6 05EF                               5575          BALR  14,15
000037A8                                    5576 @@gen_label276 DS    0H
000037A8 E310 4048 0004          00000048   5577          LG    1,72(0,4)   ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000037AE E310 1FD0 0004          00000FD0   5578          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000037B4 4110 1210               00000210   5579          LA    1,528(0,1)
000037B8 E310 D238 0024          00000238   5580          STG   1,568(0,13)
000037BE E310 4048 0004          00000048   5581          LG    1,72(0,4)   ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000037C4 E310 1FD0 0004          00000FD0   5582          LG    1,4048(0,1)
000037CA E310 D240 0024          00000240   5583          STG   1,576(0,13)
000037D0 4110 D0B8               000000B8   5584          LA    1,184(0,13)
000037D4 E310 D248 0024          00000248   5585          STG   1,584(0,13)
000037DA E548 D250 0007          00000250   5586          MVGHI 592(13),7
000037E0 E548 D258 0040          00000258   5587          MVGHI 600(13),64
000037E6 E310 C0B0 0004          00003398   5588          LG    1,@lit_1944_140
000037EC 4120 10CE               000000CE   5589          LA    2,206(0,1)
000037F0 E320 D260 0024          00000260   5590          STG   2,608(0,13)
000037F6 4110 1198               00000198   5591          LA    1,408(0,1)
000037FA E310 D268 0024          00000268   5592          STG   1,616(0,13)
00003800 E310 D0B0 0004          000000B0   5593          LG    1,176(0,13)
00003806 E310 D270 0024          00000270   5594          STG   1,624(0,13)
0000380C EB56 D278 0024          00000278   5595          STMG  5,6,632(13)
00003812 E3F0 D288 0024          00000288   5596          STG   15,648(0,13)
00003818 4110 D238               00000238   5597          LA    1,568(0,13)
0000381C E3F0 C0A8 0004          00003390   5598          LG    15,@lit_1944_141 ; rd_kafka_log0
00003822                                    5599 @@gen_label277 DS    0H
00003822 05EF                               5600          BALR  14,15
00003824                                    5601 @@gen_label278 DS    0H
00003824                                    5602 @L655    DS    0H
                                            5603 * ***   # 371 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                            5604 * ***                                   err = RD_KAFKA_RESP_ERR__CRIT_\
                                            5605 * SYS_RESOURCE;
00003824 A728 FF3E               0000FF3E   5606          LHI   2,-194      ; -194
                                            5607 * ***                                   goto err;
                                                                                                                           Page  116 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003828 E3C0 C0B8 001A          000033A0   5608          ALGF  12,@lit_region_diff_1944_1_2
                                            5609          DROP  12
                        00003C4A            5610          USING @REGION_1944_2,12
0000382E 47F0 C122               00003D6C   5611          B     @_err@1944@0
                                            5612          DROP  12
                        000032E8            5613          USING @REGION_1944_1,12
                                            5614 * ***                           }
00003832                                    5615 @L651    DS    0H
                                            5616 * ***
                                            5617 * ***
                                            5618 * ***                           if ((((r = rd_kafka_snappy_uncompress(\
                                            5619 *  inbuf, inlen, iov.iov_base))))) {
00003832 E320 D238 0024          00000238   5620          STG   2,568(0,13)
00003838 E360 D240 0024          00000240   5621          STG   6,576(0,13)
0000383E E3F0 D0A8 0004          000000A8   5622          LG    15,168(0,13)
00003844 E3F0 D248 0024          00000248   5623          STG   15,584(0,13)
0000384A 4110 D238               00000238   5624          LA    1,568(0,13)
0000384E E3F0 C0E0 0004          000033C8   5625          LG    15,@lit_1944_165 ; rd_kafka_snappy_uncompress
00003854                                    5626 @@gen_label279 DS    0H
00003854 05EF                               5627          BALR  14,15
00003856                                    5628 @@gen_label280 DS    0H
00003856 122F                               5629          LTR   2,15
00003858 4780 C85A               00003B42   5630          BZ    @L631
                                            5631 * ***
                                            5632 * ***                                   do { if ((((msetr->msetr_rkb)-\
                                            5633 * >rkb_rk->rk_conf.debug & (0x40)))) { do { char _logname[256]; mtx_lo\
                                            5634 * ck(&(msetr->msetr_rkb)->rkb_logname_lock); rd_strlcpy(_logname, mset\
                                            5635 * r->msetr_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(msetr->ms\
                                            5636 * etr_rkb)->rkb_logname_lock); rd_kafka_log0(&(msetr->msetr_rkb)->rkb_\
                                            5637 * rk->rk_conf, (msetr->msetr_rkb)->rkb_rk, _logname, 7, (0x40), "SNAPP\
                                            5638 * Y", "Failed to decompress Snappy " "payload for message at offset " \
                                            5639 * "%" "lld" " (%" "zu" " bytes): %s: " "ignoring message", Offset, inl\
                                            5640 * en, strerror(-r)); } while (0); } } while (0);
0000385C                                    5641 @L660    DS    0H
0000385C E3F0 4048 0004          00000048   5642          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00003862 E3F0 FFD0 0004          00000FD0   5643          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00003868 9140 F323      00000323 00000040   5644          TM    803(15),64
0000386C 4780 C67E               00003966   5645          BZ    @L663
00003870                                    5646 @L664    DS    0H
00003870 E3F0 4048 0004          00000048   5647          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00003876 A739 1638               00001638   5648          LGHI  3,5688      ; 5688
0000387A 41F3 F000               00000000   5649          LA    15,0(3,15)
0000387E E3F0 D238 0024          00000238   5650          STG   15,568(0,13)
00003884 4110 D238               00000238   5651          LA    1,568(0,13)
00003888 E3F0 C090 0004          00003378   5652          LG    15,@lit_1944_135 ; mtx_lock
0000388E                                    5653 @@gen_label283 DS    0H
0000388E 05EF                               5654          BALR  14,15
00003890                                    5655 @@gen_label284 DS    0H
00003890 41F0 D0B8               000000B8   5656          LA    15,184(0,13)
00003894 E3F0 D238 0024          00000238   5657          STG   15,568(0,13)
                                                                                                                           Page  117 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000389A E3F0 4048 0004          00000048   5658          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000038A0 A719 1630               00001630   5659          LGHI  1,5680      ; 5680
000038A4 E3F1 F000 0004          00000000   5660          LG    15,0(1,15)
000038AA E3F0 D240 0024          00000240   5661          STG   15,576(0,13)
000038B0 E548 D248 0100          00000248   5662          MVGHI 584(13),256
000038B6 4110 D238               00000238   5663          LA    1,568(0,13)
000038BA E3F0 C098 0004          00003380   5664          LG    15,@lit_1944_137 ; rd_strlcpy
000038C0                                    5665 @@gen_label285 DS    0H
000038C0 05EF                               5666          BALR  14,15
000038C2                                    5667 @@gen_label286 DS    0H
000038C2 E3F0 4048 0004          00000048   5668          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000038C8 41F3 F000               00000000   5669          LA    15,0(3,15)
000038CC E3F0 D238 0024          00000238   5670          STG   15,568(0,13)
000038D2 4110 D238               00000238   5671          LA    1,568(0,13)
000038D6 E3F0 C0A0 0004          00003388   5672          LG    15,@lit_1944_139 ; mtx_unlock
000038DC                                    5673 @@gen_label287 DS    0H
000038DC 05EF                               5674          BALR  14,15
000038DE                                    5675 @@gen_label288 DS    0H
000038DE 13F2                               5676          LCR   15,2
000038E0 B914 00FF                          5677          LGFR  15,15
000038E4 E3F0 D238 0024          00000238   5678          STG   15,568(0,13)
000038EA 4110 D238               00000238   5679          LA    1,568(0,13)
000038EE E3F0 C0D8 0004          000033C0   5680          LG    15,@lit_1944_161 ; strerror
000038F4                                    5681 @@gen_label289 DS    0H
000038F4 05EF                               5682          BALR  14,15
000038F6                                    5683 @@gen_label290 DS    0H
000038F6 E310 4048 0004          00000048   5684          LG    1,72(0,4)   ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000038FC E310 1FD0 0004          00000FD0   5685          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00003902 4110 1210               00000210   5686          LA    1,528(0,1)
00003906 E310 D238 0024          00000238   5687          STG   1,568(0,13)
0000390C E310 4048 0004          00000048   5688          LG    1,72(0,4)   ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00003912 E310 1FD0 0004          00000FD0   5689          LG    1,4048(0,1)
00003918 E310 D240 0024          00000240   5690          STG   1,576(0,13)
0000391E 4110 D0B8               000000B8   5691          LA    1,184(0,13)
00003922 E310 D248 0024          00000248   5692          STG   1,584(0,13)
00003928 E548 D250 0007          00000250   5693          MVGHI 592(13),7
0000392E E548 D258 0040          00000258   5694          MVGHI 600(13),64
00003934 E310 C0B0 0004          00003398   5695          LG    1,@lit_1944_140
0000393A 4120 10CE               000000CE   5696          LA    2,206(0,1)
0000393E E320 D260 0024          00000260   5697          STG   2,608(0,13)
00003944 4110 120C               0000020C   5698          LA    1,524(0,1)
00003948 E310 D268 0024          00000268   5699          STG   1,616(0,13)
0000394E EB56 D270 0024          00000270   5700          STMG  5,6,624(13)
00003954 E3F0 D280 0024          00000280   5701          STG   15,640(0,13)
0000395A 4110 D238               00000238   5702          LA    1,568(0,13)
0000395E E3F0 C0A8 0004          00003390   5703          LG    15,@lit_1944_141 ; rd_kafka_log0
00003964                                    5704 @@gen_label291 DS    0H
00003964 05EF                               5705          BALR  14,15
                                                                                                                           Page  118 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003966                                    5706 @@gen_label292 DS    0H
00003966                                    5707 @L663    DS    0H
                                            5708 * ***   # 385 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                            5709 * ***                                   rd_free(iov.iov_base);
00003966 E3F0 D0A8 0004          000000A8   5710          LG    15,168(0,13)
0000396C E3F0 D238 0024          00000238   5711          STG   15,568(0,13)
00003972 4110 D238               00000238   5712          LA    1,568(0,13)
00003976 E3F0 C0E8 0004          000033D0   5713          LG    15,@lit_1944_175 ; rd_free
0000397C                                    5714 @@gen_label293 DS    0H
0000397C 05EF                               5715          BALR  14,15
0000397E                                    5716 @@gen_label294 DS    0H
                                            5717 * ***                                   err = RD_KAFKA_RESP_ERR__BAD_C\
                                            5718 * OMPRESSION;
0000397E A728 FF3A               0000FF3A   5719          LHI   2,-198      ; -198
                                            5720 * ***                                   goto err;
00003982 E3C0 C0B8 001A          000033A0   5721          ALGF  12,@lit_region_diff_1944_1_2
                                            5722          DROP  12
                        00003C4A            5723          USING @REGION_1944_2,12
00003988 47F0 C122               00003D6C   5724          B     @_err@1944@0
                                            5725          DROP  12
                        000032E8            5726          USING @REGION_1944_1,12
                                            5727 * ***                           }
                                            5728 * ***                   }
0000398C                                    5729 @L642    DS    0H
                                            5730 * ***
                                            5731 * ***           }
                                            5732 * ***           break;
                                            5733 * ***
                                            5734 * ***
                                            5735 * ***           case RD_KAFKA_COMPRESSION_LZ4:
0000398C                                    5736 @L667    DS    0H
                                            5737 * ***           {
                                            5738 * ***                   err = rd_kafka_lz4_decompress(msetr->msetr_rkb\
                                            5739 * ,
                                            5740 * ***
                                            5741 * ***                                                 MsgVersion >= 1 \
                                            5742 * ? 1 : 0,
                                            5743 * ***                                                 Offset,
                                            5744 * ***
                                            5745 * ***
                                            5746 * ***                                                 (char *)compress\
                                            5747 * ed,
                                            5748 * ***                                                 compressed_size,
                                            5749 * ***                                                 &iov.iov_base, &\
                                            5750 * iov.iov_len);
0000398C A73E 0001               00000001   5751          CHI   3,1
00003990 4740 C6B4               0000399C   5752          BL    @L668
00003994 A7F8 0001               00000001   5753          LHI   15,1        ; 1
00003998 47F0 C6B8               000039A0   5754          B     @L669
0000399C                                    5755 @L668    DS    0H
0000399C A7F8 0000               00000000   5756          LHI   15,0        ; 0
000039A0                                    5757 @L669    DS    0H
                                                                                                                           Page  119 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000039A0 E310 4048 0004          00000048   5758          LG    1,72(0,4)
000039A6 E310 D238 0024          00000238   5759          STG   1,568(0,13)
000039AC B914 00FF                          5760          LGFR  15,15
000039B0 E3F0 D240 0024          00000240   5761          STG   15,576(0,13)
000039B6 E350 D248 0024          00000248   5762          STG   5,584(0,13)
000039BC E3F0 9028 0004          00000028   5763          LG    15,40(0,9)  ; compressed
000039C2 E3F0 D250 0024          00000250   5764          STG   15,592(0,13)
000039C8 E360 D258 0024          00000258   5765          STG   6,600(0,13)
000039CE 41F0 D0A8               000000A8   5766          LA    15,168(0,13)
000039D2 E3F0 D260 0024          00000260   5767          STG   15,608(0,13)
000039D8 41F0 D0B0               000000B0   5768          LA    15,176(0,13)
000039DC E3F0 D268 0024          00000268   5769          STG   15,616(0,13)
000039E2 4110 D238               00000238   5770          LA    1,568(0,13)
000039E6 E3F0 C0F0 0004          000033D8   5771          LG    15,@lit_1944_179 ; rd_kafka_lz4_decompress
000039EC                                    5772 @@gen_label296 DS    0H
000039EC 05EF                               5773          BALR  14,15
000039EE                                    5774 @@gen_label297 DS    0H
000039EE 122F                               5775          LTR   2,15        ; err
                                            5776 * ***                   if (err)
000039F0 4780 C85A               00003B42   5777          BZ    @L631
                                            5778 * ***                           goto err;
000039F4 E3C0 C0B8 001A          000033A0   5779          ALGF  12,@lit_region_diff_1944_1_2
                                            5780          DROP  12
                        00003C4A            5781          USING @REGION_1944_2,12
000039FA 47F0 C122               00003D6C   5782          B     @_err@1944@0
                                            5783          DROP  12
                        000032E8            5784          USING @REGION_1944_1,12
                                            5785 * ***           }
                                            5786 * ***           break;
                                            5787 * ***
                                            5788 * ***
                                            5789 * ***   # 424 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                            5790 * ***           default:
                                            5791 * ***                   do { if ((((msetr->msetr_rkb)->rkb_rk->rk_conf\
                                            5792 * .debug & (0x40)))) { do { char _logname[256]; mtx_lock(&(msetr->mset\
                                            5793 * r_rkb)->rkb_logname_lock); rd_strlcpy(_logname, msetr->msetr_rkb->rk\
                                            5794 * b_logname, sizeof(_logname)); mtx_unlock(&(msetr->msetr_rkb)->rkb_lo\
                                            5795 * gname_lock); rd_kafka_log0(&(msetr->msetr_rkb)->rkb_rk->rk_conf, (ms\
                                            5796 * etr->msetr_rkb)->rkb_rk, _logname, 7, (0x40), "CODEC", "%s [%" "d" "\
                                            5797 * ]: Message at offset %" "lld" " with unsupported " "compression code\
                                            5798 * c 0x%x: message ignored", rktp->rktp_rkt->rkt_topic->str, rktp->rktp\
                                            5799 * _partition, Offset, (int)codec); } while (0); } } while (0);
000039FE                                    5800 @L672    DS    0H
000039FE E3F0 4048 0004          00000048   5801          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00003A04 E3F0 FFD0 0004          00000FD0   5802          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00003A0A 9140 F323      00000323 00000040   5803          TM    803(15),64
00003A0E 4780 C830               00003B18   5804          BZ    @L675
00003A12                                    5805 @L676    DS    0H
00003A12 E3F0 4048 0004          00000048   5806          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00003A18 A729 1638               00001638   5807          LGHI  2,5688      ; 5688
                                                                                                                           Page  120 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003A1C 41F2 F000               00000000   5808          LA    15,0(2,15)
00003A20 E3F0 D238 0024          00000238   5809          STG   15,568(0,13)
00003A26 4110 D238               00000238   5810          LA    1,568(0,13)
00003A2A E3F0 C090 0004          00003378   5811          LG    15,@lit_1944_135 ; mtx_lock
00003A30                                    5812 @@gen_label300 DS    0H
00003A30 05EF                               5813          BALR  14,15
00003A32                                    5814 @@gen_label301 DS    0H
00003A32 41F0 D0B8               000000B8   5815          LA    15,184(0,13)
00003A36 E3F0 D238 0024          00000238   5816          STG   15,568(0,13)
00003A3C E3F0 4048 0004          00000048   5817          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00003A42 A719 1630               00001630   5818          LGHI  1,5680      ; 5680
00003A46 E3F1 F000 0004          00000000   5819          LG    15,0(1,15)
00003A4C E3F0 D240 0024          00000240   5820          STG   15,576(0,13)
00003A52 E548 D248 0100          00000248   5821          MVGHI 584(13),256
00003A58 4110 D238               00000238   5822          LA    1,568(0,13)
00003A5C E3F0 C098 0004          00003380   5823          LG    15,@lit_1944_137 ; rd_strlcpy
00003A62                                    5824 @@gen_label302 DS    0H
00003A62 05EF                               5825          BALR  14,15
00003A64                                    5826 @@gen_label303 DS    0H
00003A64 E3F0 4048 0004          00000048   5827          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00003A6A 41F2 F000               00000000   5828          LA    15,0(2,15)
00003A6E E3F0 D238 0024          00000238   5829          STG   15,568(0,13)
00003A74 4110 D238               00000238   5830          LA    1,568(0,13)
00003A78 E3F0 C0A0 0004          00003388   5831          LG    15,@lit_1944_139 ; mtx_unlock
00003A7E                                    5832 @@gen_label304 DS    0H
00003A7E 05EF                               5833          BALR  14,15
00003A80                                    5834 @@gen_label305 DS    0H
00003A80 E3F0 4048 0004          00000048   5835          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00003A86 E3F0 FFD0 0004          00000FD0   5836          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00003A8C 41F0 F210               00000210   5837          LA    15,528(0,15)
00003A90 E3F0 D238 0024          00000238   5838          STG   15,568(0,13)
00003A96 E3F0 4048 0004          00000048   5839          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00003A9C E3F0 FFD0 0004          00000FD0   5840          LG    15,4048(0,15)
00003AA2 E3F0 D240 0024          00000240   5841          STG   15,576(0,13)
00003AA8 41F0 D0B8               000000B8   5842          LA    15,184(0,13)
00003AAC E3F0 D248 0024          00000248   5843          STG   15,584(0,13)
00003AB2 E548 D250 0007          00000250   5844          MVGHI 592(13),7
00003AB8 E548 D258 0040          00000258   5845          MVGHI 600(13),64
00003ABE E3F0 C0B0 0004          00003398   5846          LG    15,@lit_1944_140
00003AC4 4110 F26E               0000026E   5847          LA    1,622(0,15)
00003AC8 E310 D260 0024          00000260   5848          STG   1,608(0,13)
00003ACE 41F0 F274               00000274   5849          LA    15,628(0,15)
00003AD2 E3F0 D268 0024          00000268   5850          STG   15,616(0,13)
00003AD8 E3F0 7060 0004          00000060   5851          LG    15,96(0,7)  ; offset of rktp_rkt in rd_kafka_toppar_s
00003ADE E3F0 F080 0004          00000080   5852          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00003AE4 E3F0 F008 0004          00000008   5853          LG    15,8(0,15)
00003AEA E3F0 D270 0024          00000270   5854          STG   15,624(0,13)
00003AF0 E3F0 7068 0014          00000068   5855          LGF   15,104(0,7)
                                                                                                                           Page  121 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003AF6 E3F0 D278 0024          00000278   5856          STG   15,632(0,13)
00003AFC E350 D280 0024          00000280   5857          STG   5,640(0,13)
00003B02 B914 00F8                          5858          LGFR  15,8
00003B06 E3F0 D288 0024          00000288   5859          STG   15,648(0,13)
00003B0C 4110 D238               00000238   5860          LA    1,568(0,13)
00003B10 E3F0 C0A8 0004          00003390   5861          LG    15,@lit_1944_141 ; rd_kafka_log0
00003B16                                    5862 @@gen_label306 DS    0H
00003B16 05EF                               5863          BALR  14,15
00003B18                                    5864 @@gen_label307 DS    0H
00003B18                                    5865 @L675    DS    0H
                                            5866 * ***
                                            5867 * ***   # 433 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                            5868 * ***                   err = RD_KAFKA_RESP_ERR__NOT_IMPLEMENTED;
00003B18 A728 FF56               0000FF56   5869          LHI   2,-170      ; -170
                                            5870 * ***                   goto err;
00003B1C E3C0 C0B8 001A          000033A0   5871          ALGF  12,@lit_region_diff_1944_1_2
                                            5872          DROP  12
                        00003C4A            5873          USING @REGION_1944_2,12
00003B22 47F0 C122               00003D6C   5874          B     @_err@1944@0
                                            5875          DROP  12
                        000032E8            5876          USING @REGION_1944_1,12
                                            5877 * ***           }
00003B26                                    5878 @L630    DS    0H
00003B26 A78E 0002               00000002   5879          CHI   8,2
00003B2A 4740 C716               000039FE   5880          BL    @L672
00003B2E A78E 0002               00000002   5881          CHI   8,2
00003B32 4780 C118               00003400   5882          BE    @L632
00003B36 A78E 0003               00000003   5883          CHI   8,3
00003B3A 4780 C6A4               0000398C   5884          BE    @L667
00003B3E 47F0 C716               000039FE   5885          B     @L672
00003B42                                    5886 @L631    DS    0H
                                            5887 * ***
                                            5888 * ***
                                            5889 * ***           ((iov.iov_base) ? (void)0 : __assert(__func__, "C:\\as\
                                            5890 * gkafka\\librdkafka\\src\\rdkafka_msgset_reader.c", 438, "iov.iov_bas\
                                            5891 * e"));
00003B42 E3F0 D0A8 0002          000000A8   5892          LTG   15,168(0,13)
00003B48 4770 C8A0               00003B88   5893          BNZ   @L680
00003B4C                                    5894 @L679    DS    0H
00003B4C E3F0 C080 0004          00003368   5895          LG    15,@lit_1944_132
00003B52 41F0 F1D8               000001D8   5896          LA    15,472(0,15)
00003B56 E3F0 D238 0024          00000238   5897          STG   15,568(0,13)
00003B5C E3F0 C0B0 0004          00003398   5898          LG    15,@lit_1944_140
00003B62 4110 F2CE               000002CE   5899          LA    1,718(0,15)
00003B66 E310 D240 0024          00000240   5900          STG   1,576(0,13)
00003B6C E548 D248 01B6          00000248   5901          MVGHI 584(13),438
00003B72 41F0 F302               00000302   5902          LA    15,770(0,15)
00003B76 E3F0 D250 0024          00000250   5903          STG   15,592(0,13)
00003B7C 4110 D238               00000238   5904          LA    1,568(0,13)
00003B80 E3F0 C0F8 0004          000033E0   5905          LG    15,@lit_1944_191 ; __assert
00003B86                                    5906 @@gen_label309 DS    0H
00003B86 05EF                               5907          BALR  14,15
                                                                                                                           Page  122 
  Active Usings: @REGION_1944_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003B88                                    5908 @@gen_label310 DS    0H
00003B88                                    5909 @L680    DS    0H
                                            5910 * ***
                                            5911 * ***
                                            5912 * ***
                                            5913 * ***
                                            5914 * ***
                                            5915 * ***
                                            5916 * ***
                                            5917 * ***
                                            5918 * ***           rkbufz = rd_kafka_buf_new_shadow(iov.iov_base, iov.iov\
                                            5919 * _len, rd_free);
00003B88 E3F0 D0A8 0004          000000A8   5920          LG    15,168(0,13)
00003B8E E3F0 D238 0024          00000238   5921          STG   15,568(0,13)
00003B94 E3F0 D0B0 0004          000000B0   5922          LG    15,176(0,13)
00003B9A E3F0 D240 0024          00000240   5923          STG   15,576(0,13)
00003BA0 E3F0 C0E8 0004          000033D0   5924          LG    15,@lit_1944_175 ; rd_free
00003BA6 E3F0 D248 0024          00000248   5925          STG   15,584(0,13)
00003BAC 4110 D238               00000238   5926          LA    1,568(0,13)
00003BB0 E3F0 C100 0004          000033E8   5927          LG    15,@lit_1944_193 ; rd_kafka_buf_new_shadow
00003BB6                                    5928 @@gen_label311 DS    0H
00003BB6 05EF                               5929          BALR  14,15
00003BB8                                    5930 @@gen_label312 DS    0H
00003BB8 B904 006F                          5931          LGR   6,15
                                            5932 * ***           rkbufz->rkbuf_rkb = msetr->msetr_rkbuf->rkbuf_rkb;
00003BBC E310 4000 0004          00000000   5933          LG    1,0(0,4)    ; msetr
00003BC2 E310 1100 0004          00000100   5934          LG    1,256(0,1)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00003BC8 E310 6100 0024          00000100   5935          STG   1,256(0,6)  ; offset of rkbuf_rkb in rd_kafka_buf_s
                                            5936 * ***           rd_atomic32_add(&(rkbufz->rkbuf_rkb)->rkb_refcnt, 1);
00003BCE B904 00F1                          5937          LGR   15,1        ; offset of rkbuf_rkb in rd_kafka_buf_s
00003BD2 41F0 FFA0               00000FA0   5938          LA    15,4000(0,15)
00003BD6 E3F0 D238 0024          00000238   5939          STG   15,568(0,13)
00003BDC E548 D240 0001          00000240   5940          MVGHI 576(13),1
00003BE2 4110 D238               00000238   5941          LA    1,568(0,13)
00003BE6 E3F0 C108 0004          000033F0   5942          LG    15,@lit_1944_194 ; rd_atomic32_add
00003BEC                                    5943 @@gen_label313 DS    0H
00003BEC 05EF                               5944          BALR  14,15
00003BEE                                    5945 @@gen_label314 DS    0H
                                            5946 * ***
                                            5947 * ***
                                            5948 * ***
                                            5949 * ***
                                            5950 * ***
                                            5951 * ***
                                            5952 * ***
                                            5953 * ***
                                            5954 * ***           if (MsgVersion <= 1) {
00003BEE A73E 0001               00000001   5955          CHI   3,1
00003BF2 47D0 C918               00003C00   5956          BNH   *+14  Around region break
00003BF6 E3C0 C0B8 001A          000033A0   5957          ALGF  12,@lit_region_diff_1944_1_2
                                            5958          DROP  12
                        00003C4A            5959          USING @REGION_1944_2,12
                                                                                                                           Page  123 
  Active Usings: @REGION_1944_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003BFC 47F0 C0B6               00003D00   5960          B     @L681
                                            5961          DROP  12
                        000032E8            5962          USING @REGION_1944_1,12
                                            5963 * ***
                                            5964 * ***
                                            5965 * ***                   rd_kafka_msgset_reader_t inner_msetr;
                                            5966 * ***                   rd_kafka_msgset_reader_init(&inner_msetr,
                                            5967 * ***                                               rkbufz,
                                            5968 * ***                                               msetr->msetr_rktp,
                                            5969 * ***                                               msetr->msetr_tver,
                                            5970 * ***
                                            5971 * ***
                                            5972 * ***                                               ((void *)0),
                                            5973 * ***                                               &msetr->msetr_rkq)\
                                            5974 * ;
00003C00 41F0 D0B8               000000B8   5975          LA    15,184(0,13)
00003C04 E3F0 D238 0024          00000238   5976          STG   15,568(0,13)
00003C0A E360 D240 0024          00000240   5977          STG   6,576(0,13)
00003C10 E3F0 4050 0004          00000050   5978          LG    15,80(0,4)
00003C16 E3F0 D248 0024          00000248   5979          STG   15,584(0,13)
00003C1C E3F0 4038 0004          00000038   5980          LG    15,56(0,4)
00003C22 E3F0 D250 0024          00000250   5981          STG   15,592(0,13)
00003C28 D707 D258 D258 00000258 00000258   5982          XC    600(8,13),600(13)
00003C2E 41F0 4068               00000068   5983          LA    15,104(0,4)
00003C32 E3F0 D260 0024          00000260   5984          STG   15,608(0,13)
00003C38 4110 D238               00000238   5985          LA    1,568(0,13)
00003C3C E3F0 C110 0004          000033F8   5986          LG    15,@lit_1944_195 ; rd_kafka_msgset_reader_init
00003C42                                    5987 @@gen_label316 DS    0H
00003C42 05EF                               5988          BALR  14,15
00003C44                                    5989 @@gen_label317 DS    0H
00003C44 E3C0 C0B8 001A          000033A0   5990          ALGF  12,@lit_region_diff_1944_1_2
00003C4A                                    5991 @REGION_1944_2 DS 0H
                                            5992          DROP  12
                        00003C4A            5993          USING @REGION_1944_2,12
                                            5994 * ***
                                            5995 * ***                   inner_msetr.msetr_srcname = "compressed ";
00003C4A E3F0 C07E 0004          00003CC8   5996          LG    15,@lit_1944_196
00003C50 41F0 F310               00000310   5997          LA    15,784(0,15)
00003C54 E3F0 D1E8 0024          000001E8   5998          STG   15,488(0,13) ; offset of msetr_srcname in rd_kafka_msgse*
                                                                t_reader_s
                                            5999 * ***
                                            6000 * ***                   if (MsgVersion == 1) {
00003C5A A73E 0001               00000001   6001          CHI   3,1
00003C5E 4770 C03E               00003C88   6002          BNE   @L682
                                            6003 * ***
                                            6004 * ***
                                            6005 * ***                           inner_msetr.msetr_relative_offsets = 1\
                                            6006 * ;
00003C62 E54C D0C0 0001          000000C0   6007          MVHI  192(13),1   ; offset of msetr_relative_offsets in rd_kaf*
                                                                ka_msgset_reader_s
                                            6008 * ***                           inner_msetr.msetr_outer.offset = Offse\
                                            6009 * t;
                                                                                                                           Page  124 
  Active Usings: @REGION_1944_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003C68 E350 D0C8 0024          000000C8   6010          STG   5,200(0,13) ; offset of msetr_outer in rd_kafka_msgset_r*
                                                                eader_s
                                            6011 * ***
                                            6012 * ***
                                            6013 * ***
                                            6014 * ***                           if (Attributes & (1 << 3)) {
00003C6E 9108 9017      00000017 00000008   6015          TM    23(9),8
00003C72 4780 C03E               00003C88   6016          BZ    @L682
                                            6017 * ***                                   inner_msetr.msetr_outer.tstype\
                                            6018 *  =
                                            6019 * ***                                           RD_KAFKA_TIMESTAMP_LOG\
                                            6020 * _APPEND_TIME;
00003C76 E54C D0D0 0002          000000D0   6021          MVHI  208(13),2   ; offset of tstype in 0000155
                                            6022 * ***                                   inner_msetr.msetr_outer.timest\
                                            6023 * amp = Timestamp;
00003C7C E3F0 9018 0004          00000018   6024          LG    15,24(0,9)  ; Timestamp
00003C82 E3F0 D0D8 0024          000000D8   6025          STG   15,216(0,13) ; offset of timestamp in 0000155
                                            6026 * ***                           }
00003C88                                    6027 @L683    DS    0H
                                            6028 * ***                   }
00003C88                                    6029 @L682    DS    0H
                                            6030 * ***
                                            6031 * ***
                                            6032 * ***                   err = rd_kafka_msgset_reader_run(&inner_msetr)\
                                            6033 * ;
00003C88 41F0 D0B8               000000B8   6034          LA    15,184(0,13)
00003C8C E3F0 D238 0024          00000238   6035          STG   15,568(0,13)
00003C92 4110 D238               00000238   6036          LA    1,568(0,13)
00003C96 E3F0 C086 0004          00003CD0   6037          LG    15,@lit_1944_197 ; rd_kafka_msgset_reader_run
00003C9C                                    6038 @@gen_label320 DS    0H
00003C9C 05EF                               6039          BALR  14,15
00003C9E                                    6040 @@gen_label321 DS    0H
00003C9E 182F                               6041          LR    2,15        ; err
                                            6042 * ***
                                            6043 * ***
                                            6044 * ***                   msetr->msetr_msgcnt += inner_msetr.msetr_msgcn\
                                            6045 * t;
00003CA0 58F0 4058               00000058   6046          L     15,88(0,4)
00003CA4 5AF0 D110               00000110   6047          A     15,272(0,13)
00003CA8 50F0 4058               00000058   6048          ST    15,88(0,4)
                                            6049 * ***                   msetr->msetr_msg_bytes += inner_msetr.msetr_ms\
                                            6050 * g_bytes;
00003CAC E3F0 4060 0004          00000060   6051          LG    15,96(0,4)
00003CB2 E3F0 D118 0008          00000118   6052          AG    15,280(0,13)
00003CB8 E3F0 4060 0024          00000060   6053          STG   15,96(0,4)
                                            6054 * ***
                                            6055 * ***
                                            6056 * ***           } else {
00003CBE 47F0 C0EC               00003D36   6057          B     @L685
00003CC8                                    6058          DS    0D
00003CC8 0000000000012AB8                   6059 @lit_1944_196 DC AD(@strings@)
00003CD0 0000000000010040                   6060 @lit_1944_197 DC AD(rd_kafka_msgset_reader_run)
                                                                                                                           Page  125 
  Active Usings: @REGION_1944_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003CD8 000000000000AA30                   6061 @lit_1944_199 DC AD(rd_kafka_msgset_reader_msgs_v2)
00003CE0 00000000000006B0                   6062 @lit_1944_200 DC AD(rd_refcnt_sub0)
00003CE8 0000000000000000                   6063 @lit_1944_201 DC AD(rd_kafka_buf_destroy_final)
00003CF0 0000000000000000                   6064 @lit_1944_202 DC AD(rd_kafka_err2str)
00003CF8 0000000000000000                   6065 @lit_1944_204 DC AD(rd_kafka_consumer_err)
00003D00                                    6066 @L681    DS    0H
                                            6067 * ***
                                            6068 * ***                   rd_kafka_buf_t *orig_rkbuf = msetr->msetr_rkbu\
                                            6069 * f;
00003D00 E330 4000 0004          00000000   6070          LG    3,0(0,4)    ; msetr
                                            6071 * ***
                                            6072 * ***                   rkbufz->rkbuf_uflow_mitigation =
                                            6073 * ***                           "truncated response from broker (ok)";
00003D06 E3F0 C07E 0004          00003CC8   6074          LG    15,@lit_1944_196
00003D0C 41F0 F0AA               000000AA   6075          LA    15,170(0,15)
00003D10 E3F0 61E8 0024          000001E8   6076          STG   15,488(0,6) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
                                            6077 * ***
                                            6078 * ***
                                            6079 * ***                   msetr->msetr_rkbuf = rkbufz;
00003D16 E360 4000 0024          00000000   6080          STG   6,0(0,4)    ; msetr
                                            6081 * ***
                                            6082 * ***
                                            6083 * ***                   err = rd_kafka_msgset_reader_msgs_v2(msetr);
00003D1C E340 D238 0024          00000238   6084          STG   4,568(0,13)
00003D22 4110 D238               00000238   6085          LA    1,568(0,13)
00003D26 E3F0 C08E 0004          00003CD8   6086          LG    15,@lit_1944_199 ; rd_kafka_msgset_reader_msgs_v2
00003D2C                                    6087 @@gen_label322 DS    0H
00003D2C 05EF                               6088          BALR  14,15
00003D2E                                    6089 @@gen_label323 DS    0H
00003D2E 182F                               6090          LR    2,15        ; err
                                            6091 * ***
                                            6092 * ***
                                            6093 * ***                   msetr->msetr_rkbuf = orig_rkbuf;
00003D30 E330 4000 0024          00000000   6094          STG   3,0(0,4)    ; msetr
                                            6095 * ***           }
00003D36                                    6096 @L684    DS    0H
                                            6097 * ***
                                            6098 * ***
                                            6099 * ***
                                            6100 * ***           do { if (rd_refcnt_sub0(&(rkbufz)->rkbuf_refcnt) > 0) \
                                            6101 * break; rd_kafka_buf_destroy_final(rkbufz); } while (0);
00003D36                                    6102 @L685    DS    0H
00003D36 41F0 6108               00000108   6103          LA    15,264(0,6)
00003D3A E3F0 D238 0024          00000238   6104          STG   15,568(0,13)
00003D40 4110 D238               00000238   6105          LA    1,568(0,13)
00003D44 E3F0 C096 0004          00003CE0   6106          LG    15,@lit_1944_200 ; rd_refcnt_sub0
00003D4A                                    6107 @@gen_label324 DS    0H
00003D4A 05EF                               6108          BALR  14,15
00003D4C                                    6109 @@gen_label325 DS    0H
00003D4C 12FF                               6110          LTR   15,15
00003D4E 4720 C11A               00003D64   6111          BH    @L686
                                                                                                                           Page  126 
  Active Usings: @REGION_1944_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003D52                                    6112 @L688    DS    0H
00003D52 E360 D238 0024          00000238   6113          STG   6,568(0,13)
00003D58 4110 D238               00000238   6114          LA    1,568(0,13)
00003D5C E3F0 C09E 0004          00003CE8   6115          LG    15,@lit_1944_201 ; rd_kafka_buf_destroy_final
00003D62                                    6116 @@gen_label327 DS    0H
00003D62 05EF                               6117          BALR  14,15
00003D64                                    6118 @@gen_label328 DS    0H
00003D64                                    6119 @L686    DS    0H
                                            6120 * ***
                                            6121 * ***           return err;
00003D64 B914 00F2                          6122          LGFR  15,2
00003D68 47F0 C1B2               00003DFC   6123          B     @ret_lab_1944
                                            6124 * ***
                                            6125 * ***    err:
                                            6126 * ***
                                            6127 * ***
                                            6128 * ***           rd_kafka_consumer_err(&msetr->msetr_rkq, msetr->msetr_\
                                            6129 * broker_id,
00003D6C                                    6130 @_err@1944@0 DS 0H
                                            6131 * ***                                 err, msetr->msetr_tver->version,
                                            6132 * ***                                 ((void *)0), rktp, Offset,
                                            6133 * ***                                 "Decompression (codec 0x%x) of m\
                                            6134 * essage at %" "llu"
                                            6135 * ***                                 codec, Offset, compressed_size,
                                            6136 * ***                                 rd_kafka_err2str(err));
00003D6C B914 00F2                          6137          LGFR  15,2
00003D70 E3F0 D238 0024          00000238   6138          STG   15,568(0,13)
00003D76 4110 D238               00000238   6139          LA    1,568(0,13)
00003D7A E3F0 C0A6 0004          00003CF0   6140          LG    15,@lit_1944_202 ; rd_kafka_err2str
00003D80                                    6141 @@gen_label329 DS    0H
00003D80 05EF                               6142          BALR  14,15
00003D82                                    6143 @@gen_label330 DS    0H
00003D82 4110 4068               00000068   6144          LA    1,104(0,4)
00003D86 E310 D238 0024          00000238   6145          STG   1,568(0,13)
00003D8C E310 4040 0014          00000040   6146          LGF   1,64(0,4)
00003D92 E310 D240 0024          00000240   6147          STG   1,576(0,13)
00003D98 B914 0012                          6148          LGFR  1,2
00003D9C E310 D248 0024          00000248   6149          STG   1,584(0,13)
00003DA2 E310 4038 0004          00000038   6150          LG    1,56(0,4)   ; offset of msetr_tver in rd_kafka_msgset_re*
                                                                ader_s
00003DA8 E310 1008 0014          00000008   6151          LGF   1,8(0,1)
00003DAE E310 D250 0024          00000250   6152          STG   1,592(0,13)
00003DB4 D707 D258 D258 00000258 00000258   6153          XC    600(8,13),600(13)
00003DBA E370 D260 0024          00000260   6154          STG   7,608(0,13)
00003DC0 E350 D268 0024          00000268   6155          STG   5,616(0,13)
                                            6156 * ***                                 " of %" "zu" " bytes failed: %s"\
                                            6157 * ,
00003DC6 E310 C07E 0004          00003CC8   6158          LG    1,@lit_1944_196
00003DCC 4110 131C               0000031C   6159          LA    1,796(0,1)
00003DD0 E310 D270 0024          00000270   6160          STG   1,624(0,13)
00003DD6 B914 0018                          6161          LGFR  1,8
00003DDA E310 D278 0024          00000278   6162          STG   1,632(0,13)
                                                                                                                           Page  127 
  Active Usings: @REGION_1944_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003DE0 EB56 D280 0024          00000280   6163          STMG  5,6,640(13)
00003DE6 E3F0 D290 0024          00000290   6164          STG   15,656(0,13)
00003DEC 4110 D238               00000238   6165          LA    1,568(0,13)
00003DF0 E3F0 C0AE 0004          00003CF8   6166          LG    15,@lit_1944_204 ; rd_kafka_consumer_err
00003DF6                                    6167 @@gen_label331 DS    0H
00003DF6 05EF                               6168          BALR  14,15
00003DF8                                    6169 @@gen_label332 DS    0H
                                            6170 * ***
                                            6171 * ***           return err;
00003DF8 B914 00F2                          6172          LGFR  15,2
                                            6173 * ***
                                            6174 * ***   }
00003DFC                                    6175 @ret_lab_1944 DS 0H
                                            6176 * * **** Start of Epilogue
                                            6177          DCCEPIL
00003DFC                                    6178+         ds 0h                                                          01-DCCEP
                                            6179+* Epilog
00003DFC D707 D088 D088 00000088 00000088   6180+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003E02 E3D0 D080 0004          00000080   6181+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003E08 E3C0 D090 0004          00000090   6182+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003E0E E3B0 C018 0004          00000018   6183+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003E14 E3C0 B010 0021          00000010   6184+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003E1A E3E0 D008 0004          00000008   6185+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003E20 EB1C D020 0004          00000020   6186+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003E26 078E                               6187+         bcr 8,14                if same dsab, just return              01-DCCEP
00003E28 E3F0 D010 0024          00000010   6188+         stg 15,16(0,13)         save return code                       01-DCCEP
00003E2E E300 D018 0024          00000018   6189+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003E34 E3F0 D090 0004          00000090   6190+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003E3A E3F0 F018 0004          00000018   6191+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003E40 47F0 F040               00000040   6192+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6193+* End of Epilog
                                            6194 * * **** End of Epilogue
                                            6195          DROP  12
                                            6196 *
                                            6197 *   DSECT for automatic variables in "rd_kafka_msgset_reader_decompres
                                            6198 *           s"
                                            6199 *      (FUNCTION #1944)
                                            6200 *
00000000                00000000 00000238   6201 @AUTO#rd_kafka_msgset_reader_decompress DSECT
00000000                                    6202          DS    XL168
000000A8                                    6203 rd_kafka_msgset_reader_decompress#r#2 DS 1F ; r
000000AC                000000AC 000000A8   6204          ORG   @AUTO#rd_kafka_msgset_reader_decompress+168
000000A8                                    6205 rd_kafka_msgset_reader_decompress#inlen#2 DS 8XL1 ; inlen
000000B0                000000B0 000000A8   6206          ORG   @AUTO#rd_kafka_msgset_reader_decompress+168
000000A8                                    6207 rd_kafka_msgset_reader_decompress#err#0 DS 1F ; err
000000AC                000000AC 000000A8   6208          ORG   @AUTO#rd_kafka_msgset_reader_decompress+168
000000A8                                    6209 rd_kafka_msgset_reader_decompress#codec#0 DS 1F ; codec
000000AC                000000AC 000000A8   6210          ORG   @AUTO#rd_kafka_msgset_reader_decompress+168
000000A8                                    6211 rd_kafka_msgset_reader_decompress#iov#0 DS 16XL1 ; iov
000000B8                000000B8 000000B8   6212          ORG   @AUTO#rd_kafka_msgset_reader_decompress+184
000000B8                                    6213 rd_kafka_msgset_reader_decompress#inner_msetr#25 DS 320XL1 ; inner_mset*
                                                                r
                                                                                                                           Page  128 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000001F8                000001F8 000000B8   6214          ORG   @AUTO#rd_kafka_msgset_reader_decompress+184
000000B8                                    6215 rd_kafka_msgset_reader_decompress#_logname#24 DS 256XL1 ; _logname
000001B8                000001B8 000000B8   6216          ORG   @AUTO#rd_kafka_msgset_reader_decompress+184
000000B8                                    6217 rd_kafka_msgset_reader_decompress#_logname#20 DS 256XL1 ; _logname
000001B8                000001B8 000000B8   6218          ORG   @AUTO#rd_kafka_msgset_reader_decompress+184
000000B8                                    6219 rd_kafka_msgset_reader_decompress#_logname#16 DS 256XL1 ; _logname
000001B8                000001B8 000000B8   6220          ORG   @AUTO#rd_kafka_msgset_reader_decompress+184
000000B8                                    6221 rd_kafka_msgset_reader_decompress#_logname#12 DS 256XL1 ; _logname
000001B8                000001B8 000000B8   6222          ORG   @AUTO#rd_kafka_msgset_reader_decompress+184
000000B8                                    6223 rd_kafka_msgset_reader_decompress#errstr#3 DS 128XL1 ; errstr
00000138                00000138 00000138   6224          ORG   @AUTO#rd_kafka_msgset_reader_decompress+312
00000138                                    6225 rd_kafka_msgset_reader_decompress#_logname#7 DS 256XL1 ; _logname
                                            6226 *
00003E44                00000000 00012806   6227 @CODE    CSECT
                                            6228 *
                                            6229 *
                                            6230 *
                                            6231 * ....... start of rd_kafka_msgset_reader_msg_v0_1
00003E44                                    6232 @LNAME1945 DS  0H
00003E44 0000001F                           6233          DC    X'0000001F'
00003E48 99846D9281869281                   6234          DC    C'rd_kafka_msgset_reader_msg_v0_1'
00003E67 00                                 6235          DC    X'00'
                                            6236 rd_kafka_msgset_reader_msg_v0_1 DCCPRLG CINDEX=1945,BASER=12,FRAME=984,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1945
                                            6237          macro
                                            6238          dccextrn &m
                                            6239          gblc    &$dccext(1000)
                                            6240          gbla    &$dccexti
                                            6241          lcla    &i
                                            6242 &$dccext(&$dccexti+1) setc    '&m'
                                            6243 &i       seta    1
                                            6244 .loop    aif    (&i gt &$dccexti).around
                                            6245          aif    ('&$dccext(&i)' eq '&m').getout
                                            6246 &i       seta    &i+1
                                            6247          ago     .loop
                                            6248 .around  anop
                                            6249 &$dccexti seta &$dccexti+1
                                            6250          extrn  &m
                                            6251 .getout  anop
                                            6252          mend
00003E68                                    6253+$eye0115    ds    0d                                                    02-DCCCA
00003E68 C4C3C3                             6254+         dc cl3'DCC'                                                    02-DCCCA
00003E6B 01                                 6255+         dc xl1'01' format one                                          02-DCCCA
00003E6C 00000000                           6256+         dc a(0)                                                        02-DCCCA
00003E70 0000000000003EDA                   6257+         dc ad(@PER_1945)                                               02-DCCCA
00003E78 00000000000003D8                   6258+         dc ad(984)                                                     02-DCCCA
00003E80 0000000000000000                   6259+         dc ad(0)                                                       02-DCCCA
00003E88 0000000000001000                   6260+         dc ad(4096)                                                    02-DCCCA
00003E90 20                                 6261+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003E91 03                                 6262+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003E92 03                                 6263+         dc al1(3)                                                      02-DCCCA
00003E93 08                                 6264+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page  129 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003E94 00                                 6265+         dc bl.8'00000000'                                              02-DCCCA
00003E95 000000                             6266+         dc al3(0)                                                      02-DCCCA
00003E98 0000000000003E44                   6267+         dc ad(@LNAME1945)                                              02-DCCCA
00003EA0                                    6268+         ds 0d                                                          02-DCCCA
00003EA0 0000000000003E68                   6269+         dc ad($eye0115)                                                02-DCCCA
00003EA8 0000000000000000                   6270+         dc ad(0)                                                       02-DCCCA
00003EB0                                    6271+         ds    0d                                                       01-DCCPR
00003EB0                                    6272+rd_kafka_msgset_reader_msg_v0_1 ds 0d                                   01-DCCPR
00003EB0                                    6273+@REGION_1945_1 ds 0h                                                    01-DCCPR
00003EB0 EBEC D008 0024          00000008   6274+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003EB6 E3E0 D088 0004          00000088   6275+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003EBC E3C0 D090 0004          00000090   6276+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003EC2 B904 002E                          6277+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003EC6 E3B0 C018 0004          00000018   6278+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003ECC A7EB 03D8               000003D8   6279+         aghi  14,984              increase by frame size               01-DCCPR
00003ED0 E3E0 C020 0021          00000020   6280+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003ED6 4720 B020               00000020   6281+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003EDA                                    6282+@PER_1945 ds   0h                                                       01-DCCPR
00003EDA EBDE 2080 0024          00000080   6283+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003EE0 E3C0 2090 0024          00000090   6284+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003EE6 B904 00D2                          6285+         lgr   13,2                set real frame pointer               01-DCCPR
00003EEA B904 00CF                          6286+         lgr   12,15               set base reg                         01-DCCPR
                        00003EB0            6287+         using @REGION_1945_1,12                                        01-DCCPR
                                            6288 * ******* End of Prologue
                                            6289 * *
                                            6290 * ***           rd_kafka_buf_t *rkbuf = msetr->msetr_rkbuf;
00003EEE E340 1000 0004          00000000   6291          LG    4,0(0,1)    ; msetr
00003EF4 E320 4000 0004          00000000   6292          LG    2,0(0,4)    ; msetr
                                            6293 * ***           rd_kafka_toppar_t *rktp = msetr->msetr_rktp;
00003EFA E360 4050 0004          00000050   6294          LG    6,80(0,4)   ; offset of msetr_rktp in rd_kafka_msgset_re*
                                                                ader_s
                                            6295 * ***           rd_kafka_broker_t *rkb = msetr->msetr_rkb;
00003F00 E380 4048 0004          00000048   6296          LG    8,72(0,4)   ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
                                            6297 * ***           struct {
                                            6298 * ***                   int64_t Offset;
                                            6299 * ***                   int32_t MessageSize;
                                            6300 * ***                   uint32_t Crc;
                                            6301 * ***                   int8_t  MagicByte;
                                            6302 * ***                   int8_t  Attributes;
                                            6303 * ***                   int64_t Timestamp;
                                            6304 * ***           } hdr;
                                            6305 * ***           rd_kafkap_bytes_t Key;
                                            6306 * ***           rd_kafkap_bytes_t Value;
                                            6307 * ***           int32_t Value_len;
                                            6308 * ***           rd_kafka_op_t *rko;
                                            6309 * ***           size_t hdrsize = 6;
00003F06 A759 0006               00000006   6310          LGHI  5,6         ; 6
                                            6311 * ***           rd_slice_t crc_slice;
                                            6312 * ***           rd_kafka_msg_t *rkm;
                                            6313 * ***           int relative_offsets = 0;
00003F0A A798 0000               00000000   6314          LHI   9,0         ; 0
                                                                                                                           Page  130 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6315 * ***           const char *reloff_str = "";
00003F0E E3F0 C090 0004          00003F40   6316          LG    15,@lit_1945_216
00003F14 4170 F0A8               000000A8   6317          LA    7,168(0,15)
                                            6318 * ***
                                            6319 * ***           int log_decode_errors = (rkbuf->rkbuf_rkb->rkb_rk->rk_\
                                            6320 * conf.debug &
                                            6321 * ***                                    0x80) ? 7 : 0;
00003F18 E3F0 2100 0004          00000100   6322          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00003F1E E3F0 FFD0 0004          00000FD0   6323          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00003F24 9180 F323      00000323 00000080   6324          TM    803(15),128
00003F28 4780 C0F8               00003FA8   6325          BZ    @L689
00003F2C A738 0007               00000007   6326          LHI   3,7         ; 7
00003F30 47F0 C0FA               00003FAA   6327          B     @L690
00003F38                                    6328          DS    0D
00003F38 000003D8                           6329 @FRAMESIZE_1945 DC F'984'
00003F3C 00000000
00003F40 0000000000012AB8                   6330 @lit_1945_216 DC AD(@strings@)
00003F48 0000000000000000                   6331 @lit_1945_220 DC AD(rd_slice_read)
00003F50 0000000000001210                   6332 @lit_1945_221 DC AD(rd_slice_abs_offset)
00003F58 0000000000000000                   6333 @lit_1945_224 DC AD(rd_kafka_crash)
00003F60 0000000000012808                   6334 @lit_1945_223 DC AD(@DATA)
00003F68 0000000000000000                   6335 @lit_1945_226 DC AD(snprintf)
00003F70 0000000000000000                   6336 @lit_1945_228 DC AD(mtx_lock)
00003F78 0000000000001668                   6337 @lit_1945_230 DC AD(rd_strlcpy)
00003F80 0000000000000000                   6338 @lit_1945_232 DC AD(mtx_unlock)
00003F88 00000000000014D0                   6339 @lit_1945_233 DC AD(rd_kafka_$Api$Key2str)
00003F90 00000000000012B8                   6340 @lit_1945_234 DC AD(rd_slice_offset)
00003F98 0000000000000000                   6341 @lit_1945_239 DC AD(rd_kafka_log0)
00003FA0 0000268C                           6342 @lit_region_diff_1945_1_5  DC A(@REGION_1945_5-@REGION_1945_1)
00003FA4 000008A0                           6343 @lit_region_diff_1945_1_2  DC A(@REGION_1945_2-@REGION_1945_1)
00003FA8                                    6344 @L689    DS    0H
00003FA8 1839                               6345          LR    3,9
00003FAA                                    6346 @L690    DS    0H
                                            6347 * ***           size_t message_end;
                                            6348 * ***
                                            6349 * ***           do { int64_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                            6350 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                            6351 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                            6352 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                            6353 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                            6354 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                            6355 * 570, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } \
                                            6356 * while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), \
                                            6357 * ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _l\
                                            6358 * ogname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_str\
                                            6359 * lcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx\
                                            6360 * _unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbu\
                                            6361 * f->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname\
                                            6362 * , log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underf\
                                            6363 * low " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %"\
                                            6364 *  "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKe\
                                            6365 * y2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, \
                                                                                                                           Page  131 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6366 * rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end \
                                            6367 * - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 570, __len0, ((&rkbu\
                                            6368 * f->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), \
                                            6369 * rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "inc\
                                            6370 * orrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)-\
                                            6371 * >rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (\
                                            6372 * 0); } } while (0); } while (0); *(&hdr.Offset) = (_v); } while (0);
00003FAA                                    6373 @L691    DS    0H
00003FAA                                    6374 @L694    DS    0H
00003FAA A7A9 0008               00000008   6375          LGHI  10,8        ; 8
00003FAE 41F0 2078               00000078   6376          LA    15,120(0,2)
00003FB2 E3F0 D348 0024          00000348   6377          STG   15,840(0,13)
00003FB8 41F0 D0A8               000000A8   6378          LA    15,168(0,13)
00003FBC E3F0 D350 0024          00000350   6379          STG   15,848(0,13)
00003FC2 E3A0 D358 0024          00000358   6380          STG   10,856(0,13)
00003FC8 4110 D348               00000348   6381          LA    1,840(0,13)
00003FCC E3F0 C098 0004          00003F48   6382          LG    15,@lit_1945_220 ; rd_slice_read
00003FD2                                    6383 @@gen_label334 DS    0H
00003FD2 05EF                               6384          BALR  14,15
00003FD4                                    6385 @@gen_label335 DS    0H
00003FD4 B902 00FF                          6386          LTGR  15,15
00003FD8 4770 C3AE               0000425E   6387          BNZ   @L697
00003FDC                                    6388 @L698    DS    0H
00003FDC E3B0 2098 0004          00000098   6389          LG    11,152(0,2) ; offset of end in rd_slice_s
00003FE2 41F0 2078               00000078   6390          LA    15,120(0,2)
00003FE6 E3F0 D348 0024          00000348   6391          STG   15,840(0,13)
00003FEC 4110 D348               00000348   6392          LA    1,840(0,13)
00003FF0 E3F0 C0A0 0004          00003F50   6393          LG    15,@lit_1945_221 ; rd_slice_abs_offset
00003FF6                                    6394 @@gen_label337 DS    0H
00003FF6 05EF                               6395          BALR  14,15
00003FF8                                    6396 @@gen_label338 DS    0H
00003FF8 B90B 00BF                          6397          SLGR  11,15
00003FFC B921 00AB                          6398          CLGR  10,11
00004000 47D0 C3AE               0000425E   6399          BNH   @L701
00004004                                    6400 @L702    DS    0H
00004004 1233                               6401          LTR   3,3
00004006 47D0 C39E               0000424E   6402          BNH   @L705
0000400A                                    6403 @L706    DS    0H
0000400A E3F0 2100 0002          00000100   6404          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004010 4770 C1A6               00004056   6405          BNZ   @L709
00004014 E3F0 C090 0004          00003F40   6406          LG    15,@lit_1945_216
0000401A 4110 F2CE               000002CE   6407          LA    1,718(0,15)
0000401E E310 D348 0024          00000348   6408          STG   1,840(0,13)
00004024 E548 D350 023A          00000350   6409          MVGHI 848(13),570
0000402A E310 C0B0 0004          00003F60   6410          LG    1,@lit_1945_223
00004030 4110 11FA               000001FA   6411          LA    1,506(0,1)
00004034 E310 D358 0024          00000358   6412          STG   1,856(0,13)
0000403A D707 D360 D360 00000360 00000360   6413          XC    864(8,13),864(13)
00004040 41F0 F362               00000362   6414          LA    15,866(0,15)
00004044 E3F0 D368 0024          00000368   6415          STG   15,872(0,13)
0000404A 4110 D348               00000348   6416          LA    1,840(0,13)
0000404E E3F0 C0A8 0004          00003F58   6417          LG    15,@lit_1945_224 ; rd_kafka_crash
                                                                                                                           Page  132 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004054                                    6418 @@gen_label342 DS    0H
00004054 05EF                               6419          BALR  14,15
00004056                                    6420 @@gen_label343 DS    0H
00004056                                    6421 @L709    DS    0H
00004056 41F0 D148               00000148   6422          LA    15,328(0,13)
0000405A E3F0 D348 0024          00000348   6423          STG   15,840(0,13)
00004060 E548 D350 0100          00000350   6424          MVGHI 848(13),256
00004066 E3F0 C090 0004          00003F40   6425          LG    15,@lit_1945_216
0000406C 41F0 F37C               0000037C   6426          LA    15,892(0,15)
00004070 E3F0 D358 0024          00000358   6427          STG   15,856(0,13)
00004076 4110 D348               00000348   6428          LA    1,840(0,13)
0000407A E3F0 C0B8 0004          00003F68   6429          LG    15,@lit_1945_226 ; snprintf
00004080                                    6430 @@gen_label344 DS    0H
00004080 05EF                               6431          BALR  14,15
00004082                                    6432 @@gen_label345 DS    0H
00004082 41F0 D148               00000148   6433          LA    15,328(0,13)
00004086 B904 001F                          6434          LGR   1,15
0000408A A709 0000               00000000   6435          LGHI  0,0
0000408E                                    6436 @@gen_label346 DS 0H
0000408E B25E 000F                          6437          SRST  0,15
00004092 4710 C1DE               0000408E   6438          BC  1,@@gen_label346
00004096 B90B 0001                          6439          SLGR  0,1
0000409A A70F 0002               00000002   6440          CGHI  0,2
0000409E 4770 C1F6               000040A6   6441          BNE   @L711
000040A2 9200 D148      00000148 00000000   6442          MVI   328(13),0
000040A6                                    6443 @L710    DS    0H
000040A6                                    6444 @L711    DS    0H
000040A6 E3F0 2100 0004          00000100   6445          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000040AC A759 1638               00001638   6446          LGHI  5,5688      ; 5688
000040B0 41F5 F000               00000000   6447          LA    15,0(5,15)
000040B4 E3F0 D348 0024          00000348   6448          STG   15,840(0,13)
000040BA 4110 D348               00000348   6449          LA    1,840(0,13)
000040BE E3F0 C0C0 0004          00003F70   6450          LG    15,@lit_1945_228 ; mtx_lock
000040C4                                    6451 @@gen_label348 DS    0H
000040C4 05EF                               6452          BALR  14,15
000040C6                                    6453 @@gen_label349 DS    0H
000040C6 41F0 D248               00000248   6454          LA    15,584(0,13)
000040CA E3F0 D348 0024          00000348   6455          STG   15,840(0,13)
000040D0 E3F0 2100 0004          00000100   6456          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000040D6 A719 1630               00001630   6457          LGHI  1,5680      ; 5680
000040DA E3F1 F000 0004          00000000   6458          LG    15,0(1,15)
000040E0 E3F0 D350 0024          00000350   6459          STG   15,848(0,13)
000040E6 E548 D358 0100          00000358   6460          MVGHI 856(13),256
000040EC 4110 D348               00000348   6461          LA    1,840(0,13)
000040F0 E3F0 C0C8 0004          00003F78   6462          LG    15,@lit_1945_230 ; rd_strlcpy
000040F6                                    6463 @@gen_label350 DS    0H
000040F6 05EF                               6464          BALR  14,15
000040F8                                    6465 @@gen_label351 DS    0H
000040F8 E3F0 2100 0004          00000100   6466          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000040FE 41F5 F000               00000000   6467          LA    15,0(5,15)
00004102 E3F0 D348 0024          00000348   6468          STG   15,840(0,13)
00004108 4110 D348               00000348   6469          LA    1,840(0,13)
                                                                                                                           Page  133 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000410C E3F0 C0D0 0004          00003F80   6470          LG    15,@lit_1945_232 ; mtx_unlock
00004112                                    6471 @@gen_label352 DS    0H
00004112 05EF                               6472          BALR  14,15
00004114                                    6473 @@gen_label353 DS    0H
00004114 E3F0 20B8 0015          000000B8   6474          LGH   15,184(0,2)
0000411A E3F0 D348 0024          00000348   6475          STG   15,840(0,13)
00004120 4110 D348               00000348   6476          LA    1,840(0,13)
00004124 E3F0 C0D8 0004          00003F88   6477          LG    15,@lit_1945_233 ; rd_kafka_ApiKey2str
0000412A                                    6478 @@gen_label354 DS    0H
0000412A 05EF                               6479          BALR  14,15
0000412C                                    6480 @@gen_label355 DS    0H
0000412C B904 005F                          6481          LGR   5,15
00004130 41F0 2078               00000078   6482          LA    15,120(0,2)
00004134 E3F0 D348 0024          00000348   6483          STG   15,840(0,13)
0000413A 4110 D348               00000348   6484          LA    1,840(0,13)
0000413E E3F0 C0E0 0004          00003F90   6485          LG    15,@lit_1945_234 ; rd_slice_offset
00004144                                    6486 @@gen_label356 DS    0H
00004144 05EF                               6487          BALR  14,15
00004146                                    6488 @@gen_label357 DS    0H
00004146 B904 006F                          6489          LGR   6,15
0000414A E370 2098 0004          00000098   6490          LG    7,152(0,2)  ; offset of end in rd_slice_s
00004150 41F0 2078               00000078   6491          LA    15,120(0,2)
00004154 E3F0 D348 0024          00000348   6492          STG   15,840(0,13)
0000415A 4110 D348               00000348   6493          LA    1,840(0,13)
0000415E E3F0 C0A0 0004          00003F50   6494          LG    15,@lit_1945_221 ; rd_slice_abs_offset
00004164                                    6495 @@gen_label358 DS    0H
00004164 05EF                               6496          BALR  14,15
00004166                                    6497 @@gen_label359 DS    0H
00004166 B90B 007F                          6498          SLGR  7,15
0000416A E3F0 21E8 0002          000001E8   6499          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004170 4780 C2CE               0000417E   6500          BZ    @L714
00004174 E3F0 21E8 0004          000001E8   6501          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000417A 47F0 C2D8               00004188   6502          B     @L715
0000417E                                    6503 @L714    DS    0H
0000417E E3F0 C090 0004          00003F40   6504          LG    15,@lit_1945_216
00004184 41F0 F380               00000380   6505          LA    15,896(0,15)
00004188                                    6506 @L715    DS    0H
00004188 E310 2100 0004          00000100   6507          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000418E E310 1FD0 0004          00000FD0   6508          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00004194 4110 1210               00000210   6509          LA    1,528(0,1)
00004198 E310 D348 0024          00000348   6510          STG   1,840(0,13)
0000419E E310 2100 0004          00000100   6511          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000041A4 E310 1FD0 0004          00000FD0   6512          LG    1,4048(0,1)
000041AA E310 D350 0024          00000350   6513          STG   1,848(0,13)
000041B0 4110 D248               00000248   6514          LA    1,584(0,13)
000041B4 E310 D358 0024          00000358   6515          STG   1,856(0,13)
000041BA B914 0013                          6516          LGFR  1,3
000041BE E310 D360 0024          00000360   6517          STG   1,864(0,13)
000041C4 D707 D368 D368 00000368 00000368   6518          XC    872(8,13),872(13)
000041CA E310 C090 0004          00003F40   6519          LG    1,@lit_1945_216
                                                                                                                           Page  134 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000041D0 4130 13A4               000003A4   6520          LA    3,932(0,1)
000041D4 E330 D370 0024          00000370   6521          STG   3,880(0,13)
000041DA 4110 13B0               000003B0   6522          LA    1,944(0,1)
000041DE E310 D378 0024          00000378   6523          STG   1,888(0,13)
000041E4 E350 D380 0024          00000380   6524          STG   5,896(0,13)
000041EA 4810 20BA               000000BA   6525          LH    1,186(0,2)
000041EE B914 0011                          6526          LGFR  1,1
000041F2 E310 D388 0024          00000388   6527          STG   1,904(0,13)
000041F8 E360 D390 0024          00000390   6528          STG   6,912(0,13)
000041FE E310 2098 0004          00000098   6529          LG    1,152(0,2)  ; offset of end in rd_slice_s
00004204 E310 2090 000B          00000090   6530          SLG   1,144(0,2)
0000420A E310 D398 0024          00000398   6531          STG   1,920(0,13)
00004210 E310 C0B0 0004          00003F60   6532          LG    1,@lit_1945_223
00004216 4110 11FA               000001FA   6533          LA    1,506(0,1)
0000421A E310 D3A0 0024          000003A0   6534          STG   1,928(0,13)
00004220 E548 D3A8 023A          000003A8   6535          MVGHI 936(13),570
00004226 E3A0 D3B0 0024          000003B0   6536          STG   10,944(0,13)
0000422C E370 D3B8 0024          000003B8   6537          STG   7,952(0,13)
00004232 E3F0 D3C0 0024          000003C0   6538          STG   15,960(0,13)
00004238 41F0 D148               00000148   6539          LA    15,328(0,13)
0000423C E3F0 D3C8 0024          000003C8   6540          STG   15,968(0,13)
00004242 4110 D348               00000348   6541          LA    1,840(0,13)
00004246 E3F0 C0E8 0004          00003F98   6542          LG    15,@lit_1945_239 ; rd_kafka_log0
0000424C                                    6543 @@gen_label361 DS    0H
0000424C 05EF                               6544          BALR  14,15
0000424E                                    6545 @@gen_label362 DS    0H
0000424E                                    6546 @L705    DS    0H
0000424E E54C 2188 FF65          00000188   6547          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00004254 E3C0 C0F0 001A          00003FA0   6548          ALGF  12,@lit_region_diff_1945_1_5
                                            6549          DROP  12
                        0000653C            6550          USING @REGION_1945_5,12
0000425A 47F0 C796               00006CD2   6551          B     @_err_parse@1945@1
                                            6552          DROP  12
                        00003EB0            6553          USING @REGION_1945_1,12
0000425E                                    6554 @L701    DS    0H
0000425E                                    6555 @L697    DS    0H
0000425E E3F0 D0A8 0004          000000A8   6556          LG    15,168(0,13) ; _v
00004264 E3F0 D0C8 0024          000000C8   6557          STG   15,200(0,13)
                                            6558 * ***           do { int32_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                            6559 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                            6560 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                            6561 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                            6562 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                            6563 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                            6564 * 571, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } \
                                            6565 * while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), \
                                            6566 * ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _l\
                                            6567 * ogname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_str\
                                            6568 * lcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx\
                                            6569 * _unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbu\
                                            6570 * f->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname\
                                            6571 * , log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underf\
                                                                                                                           Page  135 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6572 * low " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %"\
                                            6573 *  "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKe\
                                            6574 * y2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, \
                                            6575 * rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end \
                                            6576 * - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 571, __len0, ((&rkbu\
                                            6577 * f->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), \
                                            6578 * rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "inc\
                                            6579 * orrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)-\
                                            6580 * >rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (\
                                            6581 * 0); } } while (0); } while (0); *(&hdr.MessageSize) = (_v); } while \
                                            6582 * (0);
0000426A                                    6583 @L716    DS    0H
0000426A                                    6584 @L719    DS    0H
0000426A A7A9 0004               00000004   6585          LGHI  10,4        ; 4
0000426E 41F0 2078               00000078   6586          LA    15,120(0,2)
00004272 E3F0 D348 0024          00000348   6587          STG   15,840(0,13)
00004278 41F0 D0B0               000000B0   6588          LA    15,176(0,13)
0000427C E3F0 D350 0024          00000350   6589          STG   15,848(0,13)
00004282 E3A0 D358 0024          00000358   6590          STG   10,856(0,13)
00004288 4110 D348               00000348   6591          LA    1,840(0,13)
0000428C E3F0 C098 0004          00003F48   6592          LG    15,@lit_1945_220 ; rd_slice_read
00004292                                    6593 @@gen_label363 DS    0H
00004292 05EF                               6594          BALR  14,15
00004294                                    6595 @@gen_label364 DS    0H
00004294 B902 00FF                          6596          LTGR  15,15
00004298 4770 C66E               0000451E   6597          BNZ   @L722
0000429C                                    6598 @L723    DS    0H
0000429C E3B0 2098 0004          00000098   6599          LG    11,152(0,2) ; offset of end in rd_slice_s
000042A2 41F0 2078               00000078   6600          LA    15,120(0,2)
000042A6 E3F0 D348 0024          00000348   6601          STG   15,840(0,13)
000042AC 4110 D348               00000348   6602          LA    1,840(0,13)
000042B0 E3F0 C0A0 0004          00003F50   6603          LG    15,@lit_1945_221 ; rd_slice_abs_offset
000042B6                                    6604 @@gen_label366 DS    0H
000042B6 05EF                               6605          BALR  14,15
000042B8                                    6606 @@gen_label367 DS    0H
000042B8 B90B 00BF                          6607          SLGR  11,15
000042BC B921 00AB                          6608          CLGR  10,11
000042C0 47D0 C66E               0000451E   6609          BNH   @L726
000042C4                                    6610 @L727    DS    0H
000042C4 1233                               6611          LTR   3,3
000042C6 47D0 C65E               0000450E   6612          BNH   @L730
000042CA                                    6613 @L731    DS    0H
000042CA E3F0 2100 0002          00000100   6614          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000042D0 4770 C466               00004316   6615          BNZ   @L734
000042D4 E3F0 C090 0004          00003F40   6616          LG    15,@lit_1945_216
000042DA 4110 F2CE               000002CE   6617          LA    1,718(0,15)
000042DE E310 D348 0024          00000348   6618          STG   1,840(0,13)
000042E4 E548 D350 023B          00000350   6619          MVGHI 848(13),571
000042EA E310 C0B0 0004          00003F60   6620          LG    1,@lit_1945_223
000042F0 4110 11FA               000001FA   6621          LA    1,506(0,1)
000042F4 E310 D358 0024          00000358   6622          STG   1,856(0,13)
000042FA D707 D360 D360 00000360 00000360   6623          XC    864(8,13),864(13)
                                                                                                                           Page  136 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004300 41F0 F362               00000362   6624          LA    15,866(0,15)
00004304 E3F0 D368 0024          00000368   6625          STG   15,872(0,13)
0000430A 4110 D348               00000348   6626          LA    1,840(0,13)
0000430E E3F0 C0A8 0004          00003F58   6627          LG    15,@lit_1945_224 ; rd_kafka_crash
00004314                                    6628 @@gen_label371 DS    0H
00004314 05EF                               6629          BALR  14,15
00004316                                    6630 @@gen_label372 DS    0H
00004316                                    6631 @L734    DS    0H
00004316 41F0 D148               00000148   6632          LA    15,328(0,13)
0000431A E3F0 D348 0024          00000348   6633          STG   15,840(0,13)
00004320 E548 D350 0100          00000350   6634          MVGHI 848(13),256
00004326 E3F0 C090 0004          00003F40   6635          LG    15,@lit_1945_216
0000432C 41F0 F37C               0000037C   6636          LA    15,892(0,15)
00004330 E3F0 D358 0024          00000358   6637          STG   15,856(0,13)
00004336 4110 D348               00000348   6638          LA    1,840(0,13)
0000433A E3F0 C0B8 0004          00003F68   6639          LG    15,@lit_1945_226 ; snprintf
00004340                                    6640 @@gen_label373 DS    0H
00004340 05EF                               6641          BALR  14,15
00004342                                    6642 @@gen_label374 DS    0H
00004342 41F0 D148               00000148   6643          LA    15,328(0,13)
00004346 B904 001F                          6644          LGR   1,15
0000434A A709 0000               00000000   6645          LGHI  0,0
0000434E                                    6646 @@gen_label375 DS 0H
0000434E B25E 000F                          6647          SRST  0,15
00004352 4710 C49E               0000434E   6648          BC  1,@@gen_label375
00004356 B90B 0001                          6649          SLGR  0,1
0000435A A70F 0002               00000002   6650          CGHI  0,2
0000435E 4770 C4B6               00004366   6651          BNE   @L736
00004362 9200 D148      00000148 00000000   6652          MVI   328(13),0
00004366                                    6653 @L735    DS    0H
00004366                                    6654 @L736    DS    0H
00004366 E3F0 2100 0004          00000100   6655          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000436C A759 1638               00001638   6656          LGHI  5,5688      ; 5688
00004370 41F5 F000               00000000   6657          LA    15,0(5,15)
00004374 E3F0 D348 0024          00000348   6658          STG   15,840(0,13)
0000437A 4110 D348               00000348   6659          LA    1,840(0,13)
0000437E E3F0 C0C0 0004          00003F70   6660          LG    15,@lit_1945_228 ; mtx_lock
00004384                                    6661 @@gen_label377 DS    0H
00004384 05EF                               6662          BALR  14,15
00004386                                    6663 @@gen_label378 DS    0H
00004386 41F0 D248               00000248   6664          LA    15,584(0,13)
0000438A E3F0 D348 0024          00000348   6665          STG   15,840(0,13)
00004390 E3F0 2100 0004          00000100   6666          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004396 A719 1630               00001630   6667          LGHI  1,5680      ; 5680
0000439A E3F1 F000 0004          00000000   6668          LG    15,0(1,15)
000043A0 E3F0 D350 0024          00000350   6669          STG   15,848(0,13)
000043A6 E548 D358 0100          00000358   6670          MVGHI 856(13),256
000043AC 4110 D348               00000348   6671          LA    1,840(0,13)
000043B0 E3F0 C0C8 0004          00003F78   6672          LG    15,@lit_1945_230 ; rd_strlcpy
000043B6                                    6673 @@gen_label379 DS    0H
000043B6 05EF                               6674          BALR  14,15
000043B8                                    6675 @@gen_label380 DS    0H
                                                                                                                           Page  137 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000043B8 E3F0 2100 0004          00000100   6676          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000043BE 41F5 F000               00000000   6677          LA    15,0(5,15)
000043C2 E3F0 D348 0024          00000348   6678          STG   15,840(0,13)
000043C8 4110 D348               00000348   6679          LA    1,840(0,13)
000043CC E3F0 C0D0 0004          00003F80   6680          LG    15,@lit_1945_232 ; mtx_unlock
000043D2                                    6681 @@gen_label381 DS    0H
000043D2 05EF                               6682          BALR  14,15
000043D4                                    6683 @@gen_label382 DS    0H
000043D4 E3F0 20B8 0015          000000B8   6684          LGH   15,184(0,2)
000043DA E3F0 D348 0024          00000348   6685          STG   15,840(0,13)
000043E0 4110 D348               00000348   6686          LA    1,840(0,13)
000043E4 E3F0 C0D8 0004          00003F88   6687          LG    15,@lit_1945_233 ; rd_kafka_ApiKey2str
000043EA                                    6688 @@gen_label383 DS    0H
000043EA 05EF                               6689          BALR  14,15
000043EC                                    6690 @@gen_label384 DS    0H
000043EC B904 005F                          6691          LGR   5,15
000043F0 41F0 2078               00000078   6692          LA    15,120(0,2)
000043F4 E3F0 D348 0024          00000348   6693          STG   15,840(0,13)
000043FA 4110 D348               00000348   6694          LA    1,840(0,13)
000043FE E3F0 C0E0 0004          00003F90   6695          LG    15,@lit_1945_234 ; rd_slice_offset
00004404                                    6696 @@gen_label385 DS    0H
00004404 05EF                               6697          BALR  14,15
00004406                                    6698 @@gen_label386 DS    0H
00004406 B904 006F                          6699          LGR   6,15
0000440A E370 2098 0004          00000098   6700          LG    7,152(0,2)  ; offset of end in rd_slice_s
00004410 41F0 2078               00000078   6701          LA    15,120(0,2)
00004414 E3F0 D348 0024          00000348   6702          STG   15,840(0,13)
0000441A 4110 D348               00000348   6703          LA    1,840(0,13)
0000441E E3F0 C0A0 0004          00003F50   6704          LG    15,@lit_1945_221 ; rd_slice_abs_offset
00004424                                    6705 @@gen_label387 DS    0H
00004424 05EF                               6706          BALR  14,15
00004426                                    6707 @@gen_label388 DS    0H
00004426 B90B 007F                          6708          SLGR  7,15
0000442A E3F0 21E8 0002          000001E8   6709          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004430 4780 C58E               0000443E   6710          BZ    @L739
00004434 E3F0 21E8 0004          000001E8   6711          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000443A 47F0 C598               00004448   6712          B     @L740
0000443E                                    6713 @L739    DS    0H
0000443E E3F0 C090 0004          00003F40   6714          LG    15,@lit_1945_216
00004444 41F0 F380               00000380   6715          LA    15,896(0,15)
00004448                                    6716 @L740    DS    0H
00004448 E310 2100 0004          00000100   6717          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000444E E310 1FD0 0004          00000FD0   6718          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00004454 4110 1210               00000210   6719          LA    1,528(0,1)
00004458 E310 D348 0024          00000348   6720          STG   1,840(0,13)
0000445E E310 2100 0004          00000100   6721          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00004464 E310 1FD0 0004          00000FD0   6722          LG    1,4048(0,1)
0000446A E310 D350 0024          00000350   6723          STG   1,848(0,13)
00004470 4110 D248               00000248   6724          LA    1,584(0,13)
00004474 E310 D358 0024          00000358   6725          STG   1,856(0,13)
                                                                                                                           Page  138 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000447A B914 0013                          6726          LGFR  1,3
0000447E E310 D360 0024          00000360   6727          STG   1,864(0,13)
00004484 D707 D368 D368 00000368 00000368   6728          XC    872(8,13),872(13)
0000448A E310 C090 0004          00003F40   6729          LG    1,@lit_1945_216
00004490 4130 13A4               000003A4   6730          LA    3,932(0,1)
00004494 E330 D370 0024          00000370   6731          STG   3,880(0,13)
0000449A 4110 13B0               000003B0   6732          LA    1,944(0,1)
0000449E E310 D378 0024          00000378   6733          STG   1,888(0,13)
000044A4 E350 D380 0024          00000380   6734          STG   5,896(0,13)
000044AA 4810 20BA               000000BA   6735          LH    1,186(0,2)
000044AE B914 0011                          6736          LGFR  1,1
000044B2 E310 D388 0024          00000388   6737          STG   1,904(0,13)
000044B8 E360 D390 0024          00000390   6738          STG   6,912(0,13)
000044BE E310 2098 0004          00000098   6739          LG    1,152(0,2)  ; offset of end in rd_slice_s
000044C4 E310 2090 000B          00000090   6740          SLG   1,144(0,2)
000044CA E310 D398 0024          00000398   6741          STG   1,920(0,13)
000044D0 E310 C0B0 0004          00003F60   6742          LG    1,@lit_1945_223
000044D6 4110 11FA               000001FA   6743          LA    1,506(0,1)
000044DA E310 D3A0 0024          000003A0   6744          STG   1,928(0,13)
000044E0 E548 D3A8 023B          000003A8   6745          MVGHI 936(13),571
000044E6 E3A0 D3B0 0024          000003B0   6746          STG   10,944(0,13)
000044EC E370 D3B8 0024          000003B8   6747          STG   7,952(0,13)
000044F2 E3F0 D3C0 0024          000003C0   6748          STG   15,960(0,13)
000044F8 41F0 D148               00000148   6749          LA    15,328(0,13)
000044FC E3F0 D3C8 0024          000003C8   6750          STG   15,968(0,13)
00004502 4110 D348               00000348   6751          LA    1,840(0,13)
00004506 E3F0 C0E8 0004          00003F98   6752          LG    15,@lit_1945_239 ; rd_kafka_log0
0000450C                                    6753 @@gen_label390 DS    0H
0000450C 05EF                               6754          BALR  14,15
0000450E                                    6755 @@gen_label391 DS    0H
0000450E                                    6756 @L730    DS    0H
0000450E E54C 2188 FF65          00000188   6757          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00004514 E3C0 C0F0 001A          00003FA0   6758          ALGF  12,@lit_region_diff_1945_1_5
                                            6759          DROP  12
                        0000653C            6760          USING @REGION_1945_5,12
0000451A 47F0 C796               00006CD2   6761          B     @_err_parse@1945@1
                                            6762          DROP  12
                        00003EB0            6763          USING @REGION_1945_1,12
0000451E                                    6764 @L726    DS    0H
0000451E                                    6765 @L722    DS    0H
0000451E 58F0 D0B0               000000B0   6766          L     15,176(0,13) ; _v
00004522 50F0 D0D0               000000D0   6767          ST    15,208(0,13) ; offset of MessageSize in 0000156
                                            6768 * ***           message_end = rd_slice_offset(&rkbuf->rkbuf_reader) + \
                                            6769 * hdr.MessageSize;
00004526 41F0 2078               00000078   6770          LA    15,120(0,2)
0000452A E3F0 D348 0024          00000348   6771          STG   15,840(0,13)
00004530 4110 D348               00000348   6772          LA    1,840(0,13)
00004534 E3F0 C0E0 0004          00003F90   6773          LG    15,@lit_1945_234 ; rd_slice_offset
0000453A                                    6774 @@gen_label392 DS    0H
0000453A 05EF                               6775          BALR  14,15
0000453C                                    6776 @@gen_label393 DS    0H
0000453C E310 D0D0 0014          000000D0   6777          LGF   1,208(0,13)
                                                                                                                           Page  139 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004542 B90A 00F1                          6778          ALGR  15,1
00004546 B904 00BF                          6779          LGR   11,15
                                            6780 * ***
                                            6781 * ***           do { int32_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                            6782 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                            6783 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                            6784 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                            6785 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                            6786 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                            6787 * 574, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } \
                                            6788 * while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), \
                                            6789 * ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _l\
                                            6790 * ogname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_str\
                                            6791 * lcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx\
                                            6792 * _unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbu\
                                            6793 * f->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname\
                                            6794 * , log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underf\
                                            6795 * low " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %"\
                                            6796 *  "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKe\
                                            6797 * y2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, \
                                            6798 * rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end \
                                            6799 * - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 574, __len0, ((&rkbu\
                                            6800 * f->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), \
                                            6801 * rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "inc\
                                            6802 * orrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)-\
                                            6803 * >rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (\
                                            6804 * 0); } } while (0); } while (0); *(&hdr.Crc) = (_v); } while (0);
0000454A                                    6805 @L741    DS    0H
0000454A                                    6806 @L744    DS    0H
0000454A A7F9 0004               00000004   6807          LGHI  15,4        ; 4
0000454E 4110 2078               00000078   6808          LA    1,120(0,2)
00004552 E310 D348 0024          00000348   6809          STG   1,840(0,13)
00004558 4110 D0B4               000000B4   6810          LA    1,180(0,13)
0000455C E310 D350 0024          00000350   6811          STG   1,848(0,13)
00004562 E3F0 D358 0024          00000358   6812          STG   15,856(0,13)
00004568 4110 D348               00000348   6813          LA    1,840(0,13)
0000456C E3F0 C098 0004          00003F48   6814          LG    15,@lit_1945_220 ; rd_slice_read
00004572                                    6815 @@gen_label394 DS    0H
00004572 05EF                               6816          BALR  14,15
00004574                                    6817 @@gen_label395 DS    0H
00004574 B902 00FF                          6818          LTGR  15,15
00004578 4780 C6D6               00004586   6819          BZ    *+14  Around region break
0000457C E3C0 C0F4 001A          00003FA4   6820          ALGF  12,@lit_region_diff_1945_1_2
                                            6821          DROP  12
                        00004750            6822          USING @REGION_1945_2,12
00004582 47F0 C15C               000048AC   6823          B     @L747
                                            6824          DROP  12
                        00003EB0            6825          USING @REGION_1945_1,12
00004586                                    6826 @L748    DS    0H
00004586 E3A0 2098 0004          00000098   6827          LG    10,152(0,2) ; offset of end in rd_slice_s
0000458C 41F0 2078               00000078   6828          LA    15,120(0,2)
00004590 E3F0 D348 0024          00000348   6829          STG   15,840(0,13)
                                                                                                                           Page  140 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004596 4110 D348               00000348   6830          LA    1,840(0,13)
0000459A E3F0 C0A0 0004          00003F50   6831          LG    15,@lit_1945_221 ; rd_slice_abs_offset
000045A0                                    6832 @@gen_label397 DS    0H
000045A0 05EF                               6833          BALR  14,15
000045A2                                    6834 @@gen_label398 DS    0H
000045A2 B90B 00AF                          6835          SLGR  10,15
000045A6 A7F9 0004               00000004   6836          LGHI  15,4        ; 4
000045AA B921 00FA                          6837          CLGR  15,10
000045AE 4720 C70C               000045BC   6838          BH    *+14  Around region break
000045B2 E3C0 C0F4 001A          00003FA4   6839          ALGF  12,@lit_region_diff_1945_1_2
                                            6840          DROP  12
                        00004750            6841          USING @REGION_1945_2,12
000045B8 47F0 C15C               000048AC   6842          B     @L751
                                            6843          DROP  12
                        00003EB0            6844          USING @REGION_1945_1,12
000045BC                                    6845 @L752    DS    0H
000045BC 1233                               6846          LTR   3,3
000045BE 4720 C71C               000045CC   6847          BH    *+14  Around region break
000045C2 E3C0 C0F4 001A          00003FA4   6848          ALGF  12,@lit_region_diff_1945_1_2
                                            6849          DROP  12
                        00004750            6850          USING @REGION_1945_2,12
000045C8 47F0 C0D4               00004824   6851          B     @L755
                                            6852          DROP  12
                        00003EB0            6853          USING @REGION_1945_1,12
000045CC                                    6854 @L756    DS    0H
000045CC E3F0 2100 0002          00000100   6855          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000045D2 4770 C768               00004618   6856          BNZ   @L759
000045D6 E3F0 C090 0004          00003F40   6857          LG    15,@lit_1945_216
000045DC 4110 F2CE               000002CE   6858          LA    1,718(0,15)
000045E0 E310 D348 0024          00000348   6859          STG   1,840(0,13)
000045E6 E548 D350 023E          00000350   6860          MVGHI 848(13),574
000045EC E310 C0B0 0004          00003F60   6861          LG    1,@lit_1945_223
000045F2 4110 11FA               000001FA   6862          LA    1,506(0,1)
000045F6 E310 D358 0024          00000358   6863          STG   1,856(0,13)
000045FC D707 D360 D360 00000360 00000360   6864          XC    864(8,13),864(13)
00004602 41F0 F362               00000362   6865          LA    15,866(0,15)
00004606 E3F0 D368 0024          00000368   6866          STG   15,872(0,13)
0000460C 4110 D348               00000348   6867          LA    1,840(0,13)
00004610 E3F0 C0A8 0004          00003F58   6868          LG    15,@lit_1945_224 ; rd_kafka_crash
00004616                                    6869 @@gen_label402 DS    0H
00004616 05EF                               6870          BALR  14,15
00004618                                    6871 @@gen_label403 DS    0H
00004618                                    6872 @L759    DS    0H
00004618 41F0 D148               00000148   6873          LA    15,328(0,13)
0000461C E3F0 D348 0024          00000348   6874          STG   15,840(0,13)
00004622 E548 D350 0100          00000350   6875          MVGHI 848(13),256
00004628 E3F0 C090 0004          00003F40   6876          LG    15,@lit_1945_216
0000462E 41F0 F37C               0000037C   6877          LA    15,892(0,15)
00004632 E3F0 D358 0024          00000358   6878          STG   15,856(0,13)
00004638 4110 D348               00000348   6879          LA    1,840(0,13)
0000463C E3F0 C0B8 0004          00003F68   6880          LG    15,@lit_1945_226 ; snprintf
00004642                                    6881 @@gen_label404 DS    0H
                                                                                                                           Page  141 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004642 05EF                               6882          BALR  14,15
00004644                                    6883 @@gen_label405 DS    0H
00004644 41F0 D148               00000148   6884          LA    15,328(0,13)
00004648 B904 001F                          6885          LGR   1,15
0000464C A709 0000               00000000   6886          LGHI  0,0
00004650                                    6887 @@gen_label406 DS 0H
00004650 B25E 000F                          6888          SRST  0,15
00004654 4710 C7A0               00004650   6889          BC  1,@@gen_label406
00004658 B90B 0001                          6890          SLGR  0,1
0000465C A70F 0002               00000002   6891          CGHI  0,2
00004660 4770 C7B8               00004668   6892          BNE   @L761
00004664 9200 D148      00000148 00000000   6893          MVI   328(13),0
00004668                                    6894 @L760    DS    0H
00004668                                    6895 @L761    DS    0H
00004668 E3F0 2100 0004          00000100   6896          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000466E A759 1638               00001638   6897          LGHI  5,5688      ; 5688
00004672 41F5 F000               00000000   6898          LA    15,0(5,15)
00004676 E3F0 D348 0024          00000348   6899          STG   15,840(0,13)
0000467C 4110 D348               00000348   6900          LA    1,840(0,13)
00004680 E3F0 C0C0 0004          00003F70   6901          LG    15,@lit_1945_228 ; mtx_lock
00004686                                    6902 @@gen_label408 DS    0H
00004686 05EF                               6903          BALR  14,15
00004688                                    6904 @@gen_label409 DS    0H
00004688 41F0 D248               00000248   6905          LA    15,584(0,13)
0000468C E3F0 D348 0024          00000348   6906          STG   15,840(0,13)
00004692 E3F0 2100 0004          00000100   6907          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004698 A719 1630               00001630   6908          LGHI  1,5680      ; 5680
0000469C E3F1 F000 0004          00000000   6909          LG    15,0(1,15)
000046A2 E3F0 D350 0024          00000350   6910          STG   15,848(0,13)
000046A8 E548 D358 0100          00000358   6911          MVGHI 856(13),256
000046AE 4110 D348               00000348   6912          LA    1,840(0,13)
000046B2 E3F0 C0C8 0004          00003F78   6913          LG    15,@lit_1945_230 ; rd_strlcpy
000046B8                                    6914 @@gen_label410 DS    0H
000046B8 05EF                               6915          BALR  14,15
000046BA                                    6916 @@gen_label411 DS    0H
000046BA E3F0 2100 0004          00000100   6917          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000046C0 41F5 F000               00000000   6918          LA    15,0(5,15)
000046C4 E3F0 D348 0024          00000348   6919          STG   15,840(0,13)
000046CA 4110 D348               00000348   6920          LA    1,840(0,13)
000046CE E3F0 C0D0 0004          00003F80   6921          LG    15,@lit_1945_232 ; mtx_unlock
000046D4                                    6922 @@gen_label412 DS    0H
000046D4 05EF                               6923          BALR  14,15
000046D6                                    6924 @@gen_label413 DS    0H
000046D6 E3F0 20B8 0015          000000B8   6925          LGH   15,184(0,2)
000046DC E3F0 D348 0024          00000348   6926          STG   15,840(0,13)
000046E2 4110 D348               00000348   6927          LA    1,840(0,13)
000046E6 E3F0 C0D8 0004          00003F88   6928          LG    15,@lit_1945_233 ; rd_kafka_ApiKey2str
000046EC                                    6929 @@gen_label414 DS    0H
000046EC 05EF                               6930          BALR  14,15
000046EE                                    6931 @@gen_label415 DS    0H
000046EE B904 005F                          6932          LGR   5,15
000046F2 41F0 2078               00000078   6933          LA    15,120(0,2)
                                                                                                                           Page  142 
  Active Usings: @REGION_1945_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000046F6 E3F0 D348 0024          00000348   6934          STG   15,840(0,13)
000046FC 4110 D348               00000348   6935          LA    1,840(0,13)
00004700 E3F0 C0E0 0004          00003F90   6936          LG    15,@lit_1945_234 ; rd_slice_offset
00004706                                    6937 @@gen_label416 DS    0H
00004706 05EF                               6938          BALR  14,15
00004708                                    6939 @@gen_label417 DS    0H
00004708 B904 006F                          6940          LGR   6,15
0000470C E370 2098 0004          00000098   6941          LG    7,152(0,2)  ; offset of end in rd_slice_s
00004712 41F0 2078               00000078   6942          LA    15,120(0,2)
00004716 E3F0 D348 0024          00000348   6943          STG   15,840(0,13)
0000471C 4110 D348               00000348   6944          LA    1,840(0,13)
00004720 E3F0 C0A0 0004          00003F50   6945          LG    15,@lit_1945_221 ; rd_slice_abs_offset
00004726                                    6946 @@gen_label418 DS    0H
00004726 05EF                               6947          BALR  14,15
00004728                                    6948 @@gen_label419 DS    0H
00004728 B90B 007F                          6949          SLGR  7,15
0000472C E3F0 21E8 0002          000001E8   6950          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004732 4770 C890               00004740   6951          BNZ   *+14  Around region break
00004736 E3C0 C0F4 001A          00003FA4   6952          ALGF  12,@lit_region_diff_1945_1_2
                                            6953          DROP  12
                        00004750            6954          USING @REGION_1945_2,12
0000473C 47F0 C000               00004750   6955          B     @L764
                                            6956          DROP  12
                        00003EB0            6957          USING @REGION_1945_1,12
00004740 E3F0 21E8 0004          000001E8   6958          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004746 E3C0 C0F4 001A          00003FA4   6959          ALGF  12,@lit_region_diff_1945_1_2
                                            6960          DROP  12
                        00004750            6961          USING @REGION_1945_2,12
0000474C 47F0 C00A               0000475A   6962          B     @L765
                                            6963          DROP  12
                        00003EB0            6964          USING @REGION_1945_1,12
00004750                                    6965 @REGION_1945_2 DS 0H
                                            6966          DROP  12
                        00004750            6967          USING @REGION_1945_2,12
00004750                                    6968 @L764    DS    0H
00004750 E3F0 C0E8 0004          00004838   6969          LG    15,@lit_1945_279
00004756 41F0 F380               00000380   6970          LA    15,896(0,15)
0000475A                                    6971 @L765    DS    0H
0000475A E310 2100 0004          00000100   6972          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00004760 E310 1FD0 0004          00000FD0   6973          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00004766 4110 1210               00000210   6974          LA    1,528(0,1)
0000476A E310 D348 0024          00000348   6975          STG   1,840(0,13)
00004770 E310 2100 0004          00000100   6976          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00004776 E310 1FD0 0004          00000FD0   6977          LG    1,4048(0,1)
0000477C E310 D350 0024          00000350   6978          STG   1,848(0,13)
00004782 4110 D248               00000248   6979          LA    1,584(0,13)
00004786 E310 D358 0024          00000358   6980          STG   1,856(0,13)
0000478C B914 0013                          6981          LGFR  1,3
00004790 E310 D360 0024          00000360   6982          STG   1,864(0,13)
00004796 D707 D368 D368 00000368 00000368   6983          XC    872(8,13),872(13)
                                                                                                                           Page  143 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000479C E310 C0E8 0004          00004838   6984          LG    1,@lit_1945_279
000047A2 4130 13A4               000003A4   6985          LA    3,932(0,1)
000047A6 E330 D370 0024          00000370   6986          STG   3,880(0,13)
000047AC 4110 13B0               000003B0   6987          LA    1,944(0,1)
000047B0 E310 D378 0024          00000378   6988          STG   1,888(0,13)
000047B6 E350 D380 0024          00000380   6989          STG   5,896(0,13)
000047BC 4810 20BA               000000BA   6990          LH    1,186(0,2)
000047C0 B914 0011                          6991          LGFR  1,1
000047C4 E310 D388 0024          00000388   6992          STG   1,904(0,13)
000047CA E360 D390 0024          00000390   6993          STG   6,912(0,13)
000047D0 E310 2098 0004          00000098   6994          LG    1,152(0,2)  ; offset of end in rd_slice_s
000047D6 E310 2090 000B          00000090   6995          SLG   1,144(0,2)
000047DC E310 D398 0024          00000398   6996          STG   1,920(0,13)
000047E2 E310 C0F8 0004          00004848   6997          LG    1,@lit_1945_281
000047E8 4110 11FA               000001FA   6998          LA    1,506(0,1)
000047EC E310 D3A0 0024          000003A0   6999          STG   1,928(0,13)
000047F2 E548 D3A8 023E          000003A8   7000          MVGHI 936(13),574
000047F8 A719 0004               00000004   7001          LGHI  1,4         ; 4
000047FC E310 D3B0 0024          000003B0   7002          STG   1,944(0,13)
00004802 E370 D3B8 0024          000003B8   7003          STG   7,952(0,13)
00004808 E3F0 D3C0 0024          000003C0   7004          STG   15,960(0,13)
0000480E 41F0 D148               00000148   7005          LA    15,328(0,13)
00004812 E3F0 D3C8 0024          000003C8   7006          STG   15,968(0,13)
00004818 4110 D348               00000348   7007          LA    1,840(0,13)
0000481C E3F0 C0F0 0004          00004840   7008          LG    15,@lit_1945_282 ; rd_kafka_log0
00004822                                    7009 @@gen_label421 DS    0H
00004822 05EF                               7010          BALR  14,15
00004824                                    7011 @@gen_label422 DS    0H
00004824                                    7012 @L755    DS    0H
00004824 E54C 2188 FF65          00000188   7013          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000482A E3C0 C100 001A          00004850   7014          ALGF  12,@lit_region_diff_1945_2_5
                                            7015          DROP  12
                        0000653C            7016          USING @REGION_1945_5,12
00004830 47F0 C796               00006CD2   7017          B     @_err_parse@1945@1
                                            7018          DROP  12
                        00004750            7019          USING @REGION_1945_2,12
00004838                                    7020          DS    0D
00004838 0000000000012AB8                   7021 @lit_1945_279 DC AD(@strings@)
00004840 0000000000000000                   7022 @lit_1945_282 DC AD(rd_kafka_log0)
00004848 0000000000012808                   7023 @lit_1945_281 DC AD(@DATA)
00004850 00001DEC                           7024 @lit_region_diff_1945_2_5  DC A(@REGION_1945_5-@REGION_1945_2)
00004854 00000000
00004858 0000000000000000                   7025 @lit_1945_283 DC AD(rd_slice_narrow_copy_relative)
00004860 0000000000001210                   7026 @lit_1945_284 DC AD(rd_slice_abs_offset)
00004868 0000000000000000                   7027 @lit_1945_287 DC AD(rd_kafka_crash)
00004870 0000000000000000                   7028 @lit_1945_289 DC AD(snprintf)
00004878 0000000000000000                   7029 @lit_1945_291 DC AD(mtx_lock)
00004880 0000000000001668                   7030 @lit_1945_293 DC AD(rd_strlcpy)
00004888 0000000000000000                   7031 @lit_1945_295 DC AD(mtx_unlock)
00004890 00000000000014D0                   7032 @lit_1945_296 DC AD(rd_kafka_$Api$Key2str)
00004898 00000000000012B8                   7033 @lit_1945_297 DC AD(rd_slice_offset)
000048A0 0000000000000000                   7034 @lit_1945_304 DC AD(rd_slice_read)
                                                                                                                           Page  144 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000048A8 00000A0C                           7035 @lit_region_diff_1945_2_3  DC A(@REGION_1945_3-@REGION_1945_2)
000048AC                                    7036 @L751    DS    0H
000048AC                                    7037 @L747    DS    0H
000048AC 58F0 D0B4               000000B4   7038          L     15,180(0,13) ; _v
000048B0 50F0 D0D4               000000D4   7039          ST    15,212(0,13) ; offset of Crc in 0000156
                                            7040 * ***           if (!rd_slice_narrow_copy_relative(&rkbuf->rkbuf_reade\
                                            7041 * r, &crc_slice,
                                            7042 * ***                                              hdr.MessageSize - 4\
                                            7043 * ))
000048B4 41F0 2078               00000078   7044          LA    15,120(0,2)
000048B8 E3F0 D348 0024          00000348   7045          STG   15,840(0,13)
000048BE 41F0 D118               00000118   7046          LA    15,280(0,13)
000048C2 E3F0 D350 0024          00000350   7047          STG   15,848(0,13)
000048C8 58F0 D0D0               000000D0   7048          L     15,208(0,13) ; offset of MessageSize in 0000156
000048CC A7FA FFFC               0000FFFC   7049          AHI   15,-4
000048D0 B914 00FF                          7050          LGFR  15,15
000048D4 E3F0 D358 0024          00000358   7051          STG   15,856(0,13)
000048DA 4110 D348               00000348   7052          LA    1,840(0,13)
000048DE E3F0 C108 0004          00004858   7053          LG    15,@lit_1945_283 ; rd_slice_narrow_copy_relative
000048E4                                    7054 @@gen_label423 DS    0H
000048E4 05EF                               7055          BALR  14,15
000048E6                                    7056 @@gen_label424 DS    0H
000048E6 12FF                               7057          LTR   15,15
000048E8 4770 C43A               00004B8A   7058          BNZ   @L785
                                            7059 * ***                   do { size_t __len0 = (size_t)(hdr.MessageSize \
                                            7060 * - 4); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_o\
                                            7061 * ffset(&(rkbuf)->rkbuf_reader))))) { do { if (log_decode_errors > 0) \
                                            7062 * { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\li\
                                            7063 * brdkafka\\src\\rdkafka_msgset_reader.c",577, __FUNCTION__, (((void *\
                                            7064 * )0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[256\
                                            7065 * ]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); if (__strlen(__tmpstr\
                                            7066 * ) == 2) __tmpstr[0] = '\0'; do { char _logname[256]; mtx_lock(&(rkbu\
                                            7067 * f->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logname, rkbuf->rkbuf_\
                                            7068 * rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkbuf->rkbuf_rkb)-\
                                            7069 * >rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_co\
                                            7070 * nf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decode_errors, 0x0, "P\
                                            7071 * ROTOUFLOW", "Protocol read buffer underflow " "for %s v%hd " "at %" \
                                            7072 * "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " bytes > " "%" "zu" "\
                                            7073 *  remaining bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. A\
                                            7074 * piKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_offset(&rkbuf->rkbu\
                                            7075 * f_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_reader)->st\
                                            7076 * art), __FUNCTION__, 577, __len0, ((&rkbuf->rkbuf_reader)->end - rd_s\
                                            7077 * lice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_uflow_mitigatio\
                                            7078 * n ? rkbuf->rkbuf_uflow_mitigation : "incorrect broker.version.fallba\
                                            7079 * ck?", __tmpstr); } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_E\
                                            7080 * RR__UNDERFLOW; goto err_parse; } while (0); } } while (0);
000048EC                                    7081 @L767    DS    0H
000048EC 58F0 D0D0               000000D0   7082          L     15,208(0,13) ; offset of MessageSize in 0000156
000048F0 A7FA FFFC               0000FFFC   7083          AHI   15,-4
000048F4 B914 00AF                          7084          LGFR  10,15
000048F8 E3F0 2098 0004          00000098   7085          LG    15,152(0,2) ; offset of end in rd_slice_s
000048FE E3F0 D3D0 0024          000003D0   7086          STG   15,976(0,13) ; spill
                                                                                                                           Page  145 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004904 41F0 2078               00000078   7087          LA    15,120(0,2)
00004908 E3F0 D348 0024          00000348   7088          STG   15,840(0,13)
0000490E 4110 D348               00000348   7089          LA    1,840(0,13)
00004912 E3F0 C110 0004          00004860   7090          LG    15,@lit_1945_284 ; rd_slice_abs_offset
00004918                                    7091 @@gen_label426 DS    0H
00004918 05EF                               7092          BALR  14,15
0000491A                                    7093 @@gen_label427 DS    0H
0000491A E310 D3D0 0004          000003D0   7094          LG    1,976(0,13) ; spill
00004920 B90B 001F                          7095          SLGR  1,15
00004924 B904 00FA                          7096          LGR   15,10
00004928 B921 00F1                          7097          CLGR  15,1
0000492C 47D0 C43A               00004B8A   7098          BNH   @L770
00004930                                    7099 @L771    DS    0H
00004930 1233                               7100          LTR   3,3
00004932 47D0 C42A               00004B7A   7101          BNH   @L774
00004936                                    7102 @L775    DS    0H
00004936 E3F0 2100 0002          00000100   7103          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000493C 4770 C232               00004982   7104          BNZ   @L778
00004940 E3F0 C0E8 0004          00004838   7105          LG    15,@lit_1945_279
00004946 4110 F2CE               000002CE   7106          LA    1,718(0,15)
0000494A E310 D348 0024          00000348   7107          STG   1,840(0,13)
00004950 E548 D350 0241          00000350   7108          MVGHI 848(13),577
00004956 E310 C0F8 0004          00004848   7109          LG    1,@lit_1945_281
0000495C 4110 11FA               000001FA   7110          LA    1,506(0,1)
00004960 E310 D358 0024          00000358   7111          STG   1,856(0,13)
00004966 D707 D360 D360 00000360 00000360   7112          XC    864(8,13),864(13)
0000496C 41F0 F362               00000362   7113          LA    15,866(0,15)
00004970 E3F0 D368 0024          00000368   7114          STG   15,872(0,13)
00004976 4110 D348               00000348   7115          LA    1,840(0,13)
0000497A E3F0 C118 0004          00004868   7116          LG    15,@lit_1945_287 ; rd_kafka_crash
00004980                                    7117 @@gen_label431 DS    0H
00004980 05EF                               7118          BALR  14,15
00004982                                    7119 @@gen_label432 DS    0H
00004982                                    7120 @L778    DS    0H
00004982 41F0 D148               00000148   7121          LA    15,328(0,13)
00004986 E3F0 D348 0024          00000348   7122          STG   15,840(0,13)
0000498C E548 D350 0100          00000350   7123          MVGHI 848(13),256
00004992 E3F0 C0E8 0004          00004838   7124          LG    15,@lit_1945_279
00004998 41F0 F37C               0000037C   7125          LA    15,892(0,15)
0000499C E3F0 D358 0024          00000358   7126          STG   15,856(0,13)
000049A2 4110 D348               00000348   7127          LA    1,840(0,13)
000049A6 E3F0 C120 0004          00004870   7128          LG    15,@lit_1945_289 ; snprintf
000049AC                                    7129 @@gen_label433 DS    0H
000049AC 05EF                               7130          BALR  14,15
000049AE                                    7131 @@gen_label434 DS    0H
000049AE 41F0 D148               00000148   7132          LA    15,328(0,13)
000049B2 B904 001F                          7133          LGR   1,15
000049B6 A709 0000               00000000   7134          LGHI  0,0
000049BA                                    7135 @@gen_label435 DS 0H
000049BA B25E 000F                          7136          SRST  0,15
000049BE 4710 C26A               000049BA   7137          BC  1,@@gen_label435
000049C2 B90B 0001                          7138          SLGR  0,1
                                                                                                                           Page  146 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000049C6 A70F 0002               00000002   7139          CGHI  0,2
000049CA 4770 C282               000049D2   7140          BNE   @L780
000049CE 9200 D148      00000148 00000000   7141          MVI   328(13),0
000049D2                                    7142 @L779    DS    0H
000049D2                                    7143 @L780    DS    0H
000049D2 E3F0 2100 0004          00000100   7144          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000049D8 A759 1638               00001638   7145          LGHI  5,5688      ; 5688
000049DC 41F5 F000               00000000   7146          LA    15,0(5,15)
000049E0 E3F0 D348 0024          00000348   7147          STG   15,840(0,13)
000049E6 4110 D348               00000348   7148          LA    1,840(0,13)
000049EA E3F0 C128 0004          00004878   7149          LG    15,@lit_1945_291 ; mtx_lock
000049F0                                    7150 @@gen_label437 DS    0H
000049F0 05EF                               7151          BALR  14,15
000049F2                                    7152 @@gen_label438 DS    0H
000049F2 41F0 D248               00000248   7153          LA    15,584(0,13)
000049F6 E3F0 D348 0024          00000348   7154          STG   15,840(0,13)
000049FC E3F0 2100 0004          00000100   7155          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004A02 A719 1630               00001630   7156          LGHI  1,5680      ; 5680
00004A06 E3F1 F000 0004          00000000   7157          LG    15,0(1,15)
00004A0C E3F0 D350 0024          00000350   7158          STG   15,848(0,13)
00004A12 E548 D358 0100          00000358   7159          MVGHI 856(13),256
00004A18 4110 D348               00000348   7160          LA    1,840(0,13)
00004A1C E3F0 C130 0004          00004880   7161          LG    15,@lit_1945_293 ; rd_strlcpy
00004A22                                    7162 @@gen_label439 DS    0H
00004A22 05EF                               7163          BALR  14,15
00004A24                                    7164 @@gen_label440 DS    0H
00004A24 E3F0 2100 0004          00000100   7165          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004A2A 41F5 F000               00000000   7166          LA    15,0(5,15)
00004A2E E3F0 D348 0024          00000348   7167          STG   15,840(0,13)
00004A34 4110 D348               00000348   7168          LA    1,840(0,13)
00004A38 E3F0 C138 0004          00004888   7169          LG    15,@lit_1945_295 ; mtx_unlock
00004A3E                                    7170 @@gen_label441 DS    0H
00004A3E 05EF                               7171          BALR  14,15
00004A40                                    7172 @@gen_label442 DS    0H
00004A40 E3F0 20B8 0015          000000B8   7173          LGH   15,184(0,2)
00004A46 E3F0 D348 0024          00000348   7174          STG   15,840(0,13)
00004A4C 4110 D348               00000348   7175          LA    1,840(0,13)
00004A50 E3F0 C140 0004          00004890   7176          LG    15,@lit_1945_296 ; rd_kafka_ApiKey2str
00004A56                                    7177 @@gen_label443 DS    0H
00004A56 05EF                               7178          BALR  14,15
00004A58                                    7179 @@gen_label444 DS    0H
00004A58 B904 005F                          7180          LGR   5,15
00004A5C 41F0 2078               00000078   7181          LA    15,120(0,2)
00004A60 E3F0 D348 0024          00000348   7182          STG   15,840(0,13)
00004A66 4110 D348               00000348   7183          LA    1,840(0,13)
00004A6A E3F0 C148 0004          00004898   7184          LG    15,@lit_1945_297 ; rd_slice_offset
00004A70                                    7185 @@gen_label445 DS    0H
00004A70 05EF                               7186          BALR  14,15
00004A72                                    7187 @@gen_label446 DS    0H
00004A72 B904 006F                          7188          LGR   6,15
00004A76 E370 2098 0004          00000098   7189          LG    7,152(0,2)  ; offset of end in rd_slice_s
00004A7C 41F0 2078               00000078   7190          LA    15,120(0,2)
                                                                                                                           Page  147 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004A80 E3F0 D348 0024          00000348   7191          STG   15,840(0,13)
00004A86 4110 D348               00000348   7192          LA    1,840(0,13)
00004A8A E3F0 C110 0004          00004860   7193          LG    15,@lit_1945_284 ; rd_slice_abs_offset
00004A90                                    7194 @@gen_label447 DS    0H
00004A90 05EF                               7195          BALR  14,15
00004A92                                    7196 @@gen_label448 DS    0H
00004A92 B90B 007F                          7197          SLGR  7,15
00004A96 E3F0 21E8 0002          000001E8   7198          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004A9C 4780 C35A               00004AAA   7199          BZ    @L783
00004AA0 E3F0 21E8 0004          000001E8   7200          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004AA6 47F0 C364               00004AB4   7201          B     @L784
00004AAA                                    7202 @L783    DS    0H
00004AAA E3F0 C0E8 0004          00004838   7203          LG    15,@lit_1945_279
00004AB0 41F0 F380               00000380   7204          LA    15,896(0,15)
00004AB4                                    7205 @L784    DS    0H
00004AB4 E310 2100 0004          00000100   7206          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00004ABA E310 1FD0 0004          00000FD0   7207          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00004AC0 4110 1210               00000210   7208          LA    1,528(0,1)
00004AC4 E310 D348 0024          00000348   7209          STG   1,840(0,13)
00004ACA E310 2100 0004          00000100   7210          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00004AD0 E310 1FD0 0004          00000FD0   7211          LG    1,4048(0,1)
00004AD6 E310 D350 0024          00000350   7212          STG   1,848(0,13)
00004ADC 4110 D248               00000248   7213          LA    1,584(0,13)
00004AE0 E310 D358 0024          00000358   7214          STG   1,856(0,13)
00004AE6 B914 0013                          7215          LGFR  1,3
00004AEA E310 D360 0024          00000360   7216          STG   1,864(0,13)
00004AF0 D707 D368 D368 00000368 00000368   7217          XC    872(8,13),872(13)
00004AF6 E310 C0E8 0004          00004838   7218          LG    1,@lit_1945_279
00004AFC 4130 13A4               000003A4   7219          LA    3,932(0,1)
00004B00 E330 D370 0024          00000370   7220          STG   3,880(0,13)
00004B06 4110 13B0               000003B0   7221          LA    1,944(0,1)
00004B0A E310 D378 0024          00000378   7222          STG   1,888(0,13)
00004B10 E350 D380 0024          00000380   7223          STG   5,896(0,13)
00004B16 4810 20BA               000000BA   7224          LH    1,186(0,2)
00004B1A B914 0011                          7225          LGFR  1,1
00004B1E E310 D388 0024          00000388   7226          STG   1,904(0,13)
00004B24 E360 D390 0024          00000390   7227          STG   6,912(0,13)
00004B2A E310 2098 0004          00000098   7228          LG    1,152(0,2)  ; offset of end in rd_slice_s
00004B30 E310 2090 000B          00000090   7229          SLG   1,144(0,2)
00004B36 E310 D398 0024          00000398   7230          STG   1,920(0,13)
00004B3C E310 C0F8 0004          00004848   7231          LG    1,@lit_1945_281
00004B42 4110 11FA               000001FA   7232          LA    1,506(0,1)
00004B46 E310 D3A0 0024          000003A0   7233          STG   1,928(0,13)
00004B4C E548 D3A8 0241          000003A8   7234          MVGHI 936(13),577
00004B52 E3A0 D3B0 0024          000003B0   7235          STG   10,944(0,13)
00004B58 E370 D3B8 0024          000003B8   7236          STG   7,952(0,13)
00004B5E E3F0 D3C0 0024          000003C0   7237          STG   15,960(0,13)
00004B64 41F0 D148               00000148   7238          LA    15,328(0,13)
00004B68 E3F0 D3C8 0024          000003C8   7239          STG   15,968(0,13)
00004B6E 4110 D348               00000348   7240          LA    1,840(0,13)
                                                                                                                           Page  148 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004B72 E3F0 C0F0 0004          00004840   7241          LG    15,@lit_1945_282 ; rd_kafka_log0
00004B78                                    7242 @@gen_label450 DS    0H
00004B78 05EF                               7243          BALR  14,15
00004B7A                                    7244 @@gen_label451 DS    0H
00004B7A                                    7245 @L774    DS    0H
00004B7A E54C 2188 FF65          00000188   7246          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00004B80 E3C0 C100 001A          00004850   7247          ALGF  12,@lit_region_diff_1945_2_5
                                            7248          DROP  12
                        0000653C            7249          USING @REGION_1945_5,12
00004B86 47F0 C796               00006CD2   7250          B     @_err_parse@1945@1
                                            7251          DROP  12
                        00004750            7252          USING @REGION_1945_2,12
00004B8A                                    7253 @L770    DS    0H
                                            7254 * ***
                                            7255 * ***           do { size_t __len2 = (size_t)(1); if (!rd_slice_read(&\
                                            7256 * (rkbuf)->rkbuf_reader, &hdr.MagicByte, __len2)) do { size_t __len0 =\
                                            7257 *  (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - r\
                                            7258 * d_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { if (log_decode\
                                            7259 * _errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\
                                            7260 * \asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",579, __FUNCTION\
                                            7261 * __, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char\
                                            7262 *  __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); if (__st\
                                            7263 * rlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[256]; mt\
                                            7264 * x_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logname, \
                                            7265 * rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkbuf\
                                            7266 * ->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->\
                                            7267 * rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decode_er\
                                            7268 * rors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "for %s v\
                                            7269 * %hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " bytes >\
                                            7270 *  " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf->rk\
                                            7271 * buf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_offset\
                                            7272 * (&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkbu\
                                            7273 * f_reader)->start), __FUNCTION__, 579, __len0, ((&rkbuf->rkbuf_reader\
                                            7274 * )->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_uf\
                                            7275 * low_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect broker.v\
                                            7276 * ersion.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_err = RD\
                                            7277 * _KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } while (\
                                            7278 * 0); } while (0);
00004B8A                                    7279 @L766    DS    0H
00004B8A                                    7280 @L785    DS    0H
00004B8A A7F9 0001               00000001   7281          LGHI  15,1        ; 1
00004B8E 4110 2078               00000078   7282          LA    1,120(0,2)
00004B92 E310 D348 0024          00000348   7283          STG   1,840(0,13)
00004B98 4110 D0D8               000000D8   7284          LA    1,216(0,13)
00004B9C E310 D350 0024          00000350   7285          STG   1,848(0,13)
00004BA2 E3F0 D358 0024          00000358   7286          STG   15,856(0,13)
00004BA8 4110 D348               00000348   7287          LA    1,840(0,13)
00004BAC E3F0 C150 0004          000048A0   7288          LG    15,@lit_1945_304 ; rd_slice_read
00004BB2                                    7289 @@gen_label452 DS    0H
00004BB2 05EF                               7290          BALR  14,15
00004BB4                                    7291 @@gen_label453 DS    0H
00004BB4 B902 00FF                          7292          LTGR  15,15
                                                                                                                           Page  149 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004BB8 4770 C6F6               00004E46   7293          BNZ   @L788
00004BBC                                    7294 @L789    DS    0H
00004BBC E3A0 2098 0004          00000098   7295          LG    10,152(0,2) ; offset of end in rd_slice_s
00004BC2 41F0 2078               00000078   7296          LA    15,120(0,2)
00004BC6 E3F0 D348 0024          00000348   7297          STG   15,840(0,13)
00004BCC 4110 D348               00000348   7298          LA    1,840(0,13)
00004BD0 E3F0 C110 0004          00004860   7299          LG    15,@lit_1945_284 ; rd_slice_abs_offset
00004BD6                                    7300 @@gen_label455 DS    0H
00004BD6 05EF                               7301          BALR  14,15
00004BD8                                    7302 @@gen_label456 DS    0H
00004BD8 B90B 00AF                          7303          SLGR  10,15
00004BDC A7F9 0001               00000001   7304          LGHI  15,1        ; 1
00004BE0 B921 00FA                          7305          CLGR  15,10
00004BE4 47D0 C6F6               00004E46   7306          BNH   @L792
00004BE8                                    7307 @L793    DS    0H
00004BE8 1233                               7308          LTR   3,3
00004BEA 47D0 C6E6               00004E36   7309          BNH   @L796
00004BEE                                    7310 @L797    DS    0H
00004BEE E3F0 2100 0002          00000100   7311          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004BF4 4770 C4EA               00004C3A   7312          BNZ   @L800
00004BF8 E3F0 C0E8 0004          00004838   7313          LG    15,@lit_1945_279
00004BFE 4110 F2CE               000002CE   7314          LA    1,718(0,15)
00004C02 E310 D348 0024          00000348   7315          STG   1,840(0,13)
00004C08 E548 D350 0243          00000350   7316          MVGHI 848(13),579
00004C0E E310 C0F8 0004          00004848   7317          LG    1,@lit_1945_281
00004C14 4110 11FA               000001FA   7318          LA    1,506(0,1)
00004C18 E310 D358 0024          00000358   7319          STG   1,856(0,13)
00004C1E D707 D360 D360 00000360 00000360   7320          XC    864(8,13),864(13)
00004C24 41F0 F362               00000362   7321          LA    15,866(0,15)
00004C28 E3F0 D368 0024          00000368   7322          STG   15,872(0,13)
00004C2E 4110 D348               00000348   7323          LA    1,840(0,13)
00004C32 E3F0 C118 0004          00004868   7324          LG    15,@lit_1945_287 ; rd_kafka_crash
00004C38                                    7325 @@gen_label460 DS    0H
00004C38 05EF                               7326          BALR  14,15
00004C3A                                    7327 @@gen_label461 DS    0H
00004C3A                                    7328 @L800    DS    0H
00004C3A 41F0 D148               00000148   7329          LA    15,328(0,13)
00004C3E E3F0 D348 0024          00000348   7330          STG   15,840(0,13)
00004C44 E548 D350 0100          00000350   7331          MVGHI 848(13),256
00004C4A E3F0 C0E8 0004          00004838   7332          LG    15,@lit_1945_279
00004C50 41F0 F37C               0000037C   7333          LA    15,892(0,15)
00004C54 E3F0 D358 0024          00000358   7334          STG   15,856(0,13)
00004C5A 4110 D348               00000348   7335          LA    1,840(0,13)
00004C5E E3F0 C120 0004          00004870   7336          LG    15,@lit_1945_289 ; snprintf
00004C64                                    7337 @@gen_label462 DS    0H
00004C64 05EF                               7338          BALR  14,15
00004C66                                    7339 @@gen_label463 DS    0H
00004C66 41F0 D148               00000148   7340          LA    15,328(0,13)
00004C6A B904 001F                          7341          LGR   1,15
00004C6E A709 0000               00000000   7342          LGHI  0,0
00004C72                                    7343 @@gen_label464 DS 0H
00004C72 B25E 000F                          7344          SRST  0,15
                                                                                                                           Page  150 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004C76 4710 C522               00004C72   7345          BC  1,@@gen_label464
00004C7A B90B 0001                          7346          SLGR  0,1
00004C7E A70F 0002               00000002   7347          CGHI  0,2
00004C82 4770 C53A               00004C8A   7348          BNE   @L802
00004C86 9200 D148      00000148 00000000   7349          MVI   328(13),0
00004C8A                                    7350 @L801    DS    0H
00004C8A                                    7351 @L802    DS    0H
00004C8A E3F0 2100 0004          00000100   7352          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004C90 A759 1638               00001638   7353          LGHI  5,5688      ; 5688
00004C94 41F5 F000               00000000   7354          LA    15,0(5,15)
00004C98 E3F0 D348 0024          00000348   7355          STG   15,840(0,13)
00004C9E 4110 D348               00000348   7356          LA    1,840(0,13)
00004CA2 E3F0 C128 0004          00004878   7357          LG    15,@lit_1945_291 ; mtx_lock
00004CA8                                    7358 @@gen_label466 DS    0H
00004CA8 05EF                               7359          BALR  14,15
00004CAA                                    7360 @@gen_label467 DS    0H
00004CAA 41F0 D248               00000248   7361          LA    15,584(0,13)
00004CAE E3F0 D348 0024          00000348   7362          STG   15,840(0,13)
00004CB4 E3F0 2100 0004          00000100   7363          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004CBA A719 1630               00001630   7364          LGHI  1,5680      ; 5680
00004CBE E3F1 F000 0004          00000000   7365          LG    15,0(1,15)
00004CC4 E3F0 D350 0024          00000350   7366          STG   15,848(0,13)
00004CCA E548 D358 0100          00000358   7367          MVGHI 856(13),256
00004CD0 4110 D348               00000348   7368          LA    1,840(0,13)
00004CD4 E3F0 C130 0004          00004880   7369          LG    15,@lit_1945_293 ; rd_strlcpy
00004CDA                                    7370 @@gen_label468 DS    0H
00004CDA 05EF                               7371          BALR  14,15
00004CDC                                    7372 @@gen_label469 DS    0H
00004CDC E3F0 2100 0004          00000100   7373          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004CE2 41F5 F000               00000000   7374          LA    15,0(5,15)
00004CE6 E3F0 D348 0024          00000348   7375          STG   15,840(0,13)
00004CEC 4110 D348               00000348   7376          LA    1,840(0,13)
00004CF0 E3F0 C138 0004          00004888   7377          LG    15,@lit_1945_295 ; mtx_unlock
00004CF6                                    7378 @@gen_label470 DS    0H
00004CF6 05EF                               7379          BALR  14,15
00004CF8                                    7380 @@gen_label471 DS    0H
00004CF8 E3F0 20B8 0015          000000B8   7381          LGH   15,184(0,2)
00004CFE E3F0 D348 0024          00000348   7382          STG   15,840(0,13)
00004D04 4110 D348               00000348   7383          LA    1,840(0,13)
00004D08 E3F0 C140 0004          00004890   7384          LG    15,@lit_1945_296 ; rd_kafka_ApiKey2str
00004D0E                                    7385 @@gen_label472 DS    0H
00004D0E 05EF                               7386          BALR  14,15
00004D10                                    7387 @@gen_label473 DS    0H
00004D10 B904 005F                          7388          LGR   5,15
00004D14 41F0 2078               00000078   7389          LA    15,120(0,2)
00004D18 E3F0 D348 0024          00000348   7390          STG   15,840(0,13)
00004D1E 4110 D348               00000348   7391          LA    1,840(0,13)
00004D22 E3F0 C148 0004          00004898   7392          LG    15,@lit_1945_297 ; rd_slice_offset
00004D28                                    7393 @@gen_label474 DS    0H
00004D28 05EF                               7394          BALR  14,15
00004D2A                                    7395 @@gen_label475 DS    0H
00004D2A B904 006F                          7396          LGR   6,15
                                                                                                                           Page  151 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004D2E E370 2098 0004          00000098   7397          LG    7,152(0,2)  ; offset of end in rd_slice_s
00004D34 41F0 2078               00000078   7398          LA    15,120(0,2)
00004D38 E3F0 D348 0024          00000348   7399          STG   15,840(0,13)
00004D3E 4110 D348               00000348   7400          LA    1,840(0,13)
00004D42 E3F0 C110 0004          00004860   7401          LG    15,@lit_1945_284 ; rd_slice_abs_offset
00004D48                                    7402 @@gen_label476 DS    0H
00004D48 05EF                               7403          BALR  14,15
00004D4A                                    7404 @@gen_label477 DS    0H
00004D4A B90B 007F                          7405          SLGR  7,15
00004D4E E3F0 21E8 0002          000001E8   7406          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004D54 4780 C612               00004D62   7407          BZ    @L805
00004D58 E3F0 21E8 0004          000001E8   7408          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00004D5E 47F0 C61C               00004D6C   7409          B     @L806
00004D62                                    7410 @L805    DS    0H
00004D62 E3F0 C0E8 0004          00004838   7411          LG    15,@lit_1945_279
00004D68 41F0 F380               00000380   7412          LA    15,896(0,15)
00004D6C                                    7413 @L806    DS    0H
00004D6C E310 2100 0004          00000100   7414          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00004D72 E310 1FD0 0004          00000FD0   7415          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00004D78 4110 1210               00000210   7416          LA    1,528(0,1)
00004D7C E310 D348 0024          00000348   7417          STG   1,840(0,13)
00004D82 E310 2100 0004          00000100   7418          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00004D88 E310 1FD0 0004          00000FD0   7419          LG    1,4048(0,1)
00004D8E E310 D350 0024          00000350   7420          STG   1,848(0,13)
00004D94 4110 D248               00000248   7421          LA    1,584(0,13)
00004D98 E310 D358 0024          00000358   7422          STG   1,856(0,13)
00004D9E B914 0013                          7423          LGFR  1,3
00004DA2 E310 D360 0024          00000360   7424          STG   1,864(0,13)
00004DA8 D707 D368 D368 00000368 00000368   7425          XC    872(8,13),872(13)
00004DAE E310 C0E8 0004          00004838   7426          LG    1,@lit_1945_279
00004DB4 4130 13A4               000003A4   7427          LA    3,932(0,1)
00004DB8 E330 D370 0024          00000370   7428          STG   3,880(0,13)
00004DBE 4110 13B0               000003B0   7429          LA    1,944(0,1)
00004DC2 E310 D378 0024          00000378   7430          STG   1,888(0,13)
00004DC8 E350 D380 0024          00000380   7431          STG   5,896(0,13)
00004DCE 4810 20BA               000000BA   7432          LH    1,186(0,2)
00004DD2 B914 0011                          7433          LGFR  1,1
00004DD6 E310 D388 0024          00000388   7434          STG   1,904(0,13)
00004DDC E360 D390 0024          00000390   7435          STG   6,912(0,13)
00004DE2 E310 2098 0004          00000098   7436          LG    1,152(0,2)  ; offset of end in rd_slice_s
00004DE8 E310 2090 000B          00000090   7437          SLG   1,144(0,2)
00004DEE E310 D398 0024          00000398   7438          STG   1,920(0,13)
00004DF4 E310 C0F8 0004          00004848   7439          LG    1,@lit_1945_281
00004DFA 4110 11FA               000001FA   7440          LA    1,506(0,1)
00004DFE E310 D3A0 0024          000003A0   7441          STG   1,928(0,13)
00004E04 E548 D3A8 0243          000003A8   7442          MVGHI 936(13),579
00004E0A A719 0001               00000001   7443          LGHI  1,1         ; 1
00004E0E E310 D3B0 0024          000003B0   7444          STG   1,944(0,13)
00004E14 E370 D3B8 0024          000003B8   7445          STG   7,952(0,13)
00004E1A E3F0 D3C0 0024          000003C0   7446          STG   15,960(0,13)
                                                                                                                           Page  152 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004E20 41F0 D148               00000148   7447          LA    15,328(0,13)
00004E24 E3F0 D3C8 0024          000003C8   7448          STG   15,968(0,13)
00004E2A 4110 D348               00000348   7449          LA    1,840(0,13)
00004E2E E3F0 C0F0 0004          00004840   7450          LG    15,@lit_1945_282 ; rd_kafka_log0
00004E34                                    7451 @@gen_label479 DS    0H
00004E34 05EF                               7452          BALR  14,15
00004E36                                    7453 @@gen_label480 DS    0H
00004E36                                    7454 @L796    DS    0H
00004E36 E54C 2188 FF65          00000188   7455          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00004E3C E3C0 C100 001A          00004850   7456          ALGF  12,@lit_region_diff_1945_2_5
                                            7457          DROP  12
                        0000653C            7458          USING @REGION_1945_5,12
00004E42 47F0 C796               00006CD2   7459          B     @_err_parse@1945@1
                                            7460          DROP  12
                        00004750            7461          USING @REGION_1945_2,12
00004E46                                    7462 @L792    DS    0H
00004E46                                    7463 @L788    DS    0H
                                            7464 * ***           do { size_t __len2 = (size_t)(1); if (!rd_slice_read(&\
                                            7465 * (rkbuf)->rkbuf_reader, &hdr.Attributes, __len2)) do { size_t __len0 \
                                            7466 * = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - \
                                            7467 * rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { if (log_decod\
                                            7468 * e_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\
                                            7469 * \\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",580, __FUNCTIO\
                                            7470 * N__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); cha\
                                            7471 * r __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); if (__s\
                                            7472 * trlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[256]; m\
                                            7473 * tx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logname,\
                                            7474 *  rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkbu\
                                            7475 * f->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)-\
                                            7476 * >rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decode_e\
                                            7477 * rrors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "for %s \
                                            7478 * v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " bytes \
                                            7479 * > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf->r\
                                            7480 * kbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_offse\
                                            7481 * t(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkb\
                                            7482 * uf_reader)->start), __FUNCTION__, 580, __len0, ((&rkbuf->rkbuf_reade\
                                            7483 * r)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_u\
                                            7484 * flow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect broker.\
                                            7485 * version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_err = R\
                                            7486 * D_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } while \
                                            7487 * (0); } while (0);
00004E46                                    7488 @L807    DS    0H
00004E46 A7F9 0001               00000001   7489          LGHI  15,1        ; 1
00004E4A 4110 2078               00000078   7490          LA    1,120(0,2)
00004E4E E310 D348 0024          00000348   7491          STG   1,840(0,13)
00004E54 4110 D0D9               000000D9   7492          LA    1,217(0,13)
00004E58 E310 D350 0024          00000350   7493          STG   1,848(0,13)
00004E5E E3F0 D358 0024          00000358   7494          STG   15,856(0,13)
00004E64 4110 D348               00000348   7495          LA    1,840(0,13)
00004E68 E3F0 C150 0004          000048A0   7496          LG    15,@lit_1945_304 ; rd_slice_read
00004E6E                                    7497 @@gen_label481 DS    0H
00004E6E 05EF                               7498          BALR  14,15
                                                                                                                           Page  153 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004E70                                    7499 @@gen_label482 DS    0H
00004E70 B902 00FF                          7500          LTGR  15,15
00004E74 4770 C9B2               00005102   7501          BNZ   @L810
00004E78                                    7502 @L811    DS    0H
00004E78 E3A0 2098 0004          00000098   7503          LG    10,152(0,2) ; offset of end in rd_slice_s
00004E7E 41F0 2078               00000078   7504          LA    15,120(0,2)
00004E82 E3F0 D348 0024          00000348   7505          STG   15,840(0,13)
00004E88 4110 D348               00000348   7506          LA    1,840(0,13)
00004E8C E3F0 C110 0004          00004860   7507          LG    15,@lit_1945_284 ; rd_slice_abs_offset
00004E92                                    7508 @@gen_label484 DS    0H
00004E92 05EF                               7509          BALR  14,15
00004E94                                    7510 @@gen_label485 DS    0H
00004E94 B90B 00AF                          7511          SLGR  10,15
00004E98 A7F9 0001               00000001   7512          LGHI  15,1        ; 1
00004E9C B921 00FA                          7513          CLGR  15,10
00004EA0 47D0 C9B2               00005102   7514          BNH   @L814
00004EA4                                    7515 @L815    DS    0H
00004EA4 1233                               7516          LTR   3,3
00004EA6 47D0 C9A2               000050F2   7517          BNH   @L818
00004EAA                                    7518 @L819    DS    0H
00004EAA E3F0 2100 0002          00000100   7519          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004EB0 4770 C7A6               00004EF6   7520          BNZ   @L822
00004EB4 E3F0 C0E8 0004          00004838   7521          LG    15,@lit_1945_279
00004EBA 4110 F2CE               000002CE   7522          LA    1,718(0,15)
00004EBE E310 D348 0024          00000348   7523          STG   1,840(0,13)
00004EC4 E548 D350 0244          00000350   7524          MVGHI 848(13),580
00004ECA E310 C0F8 0004          00004848   7525          LG    1,@lit_1945_281
00004ED0 4110 11FA               000001FA   7526          LA    1,506(0,1)
00004ED4 E310 D358 0024          00000358   7527          STG   1,856(0,13)
00004EDA D707 D360 D360 00000360 00000360   7528          XC    864(8,13),864(13)
00004EE0 41F0 F362               00000362   7529          LA    15,866(0,15)
00004EE4 E3F0 D368 0024          00000368   7530          STG   15,872(0,13)
00004EEA 4110 D348               00000348   7531          LA    1,840(0,13)
00004EEE E3F0 C118 0004          00004868   7532          LG    15,@lit_1945_287 ; rd_kafka_crash
00004EF4                                    7533 @@gen_label489 DS    0H
00004EF4 05EF                               7534          BALR  14,15
00004EF6                                    7535 @@gen_label490 DS    0H
00004EF6                                    7536 @L822    DS    0H
00004EF6 41F0 D148               00000148   7537          LA    15,328(0,13)
00004EFA E3F0 D348 0024          00000348   7538          STG   15,840(0,13)
00004F00 E548 D350 0100          00000350   7539          MVGHI 848(13),256
00004F06 E3F0 C0E8 0004          00004838   7540          LG    15,@lit_1945_279
00004F0C 41F0 F37C               0000037C   7541          LA    15,892(0,15)
00004F10 E3F0 D358 0024          00000358   7542          STG   15,856(0,13)
00004F16 4110 D348               00000348   7543          LA    1,840(0,13)
00004F1A E3F0 C120 0004          00004870   7544          LG    15,@lit_1945_289 ; snprintf
00004F20                                    7545 @@gen_label491 DS    0H
00004F20 05EF                               7546          BALR  14,15
00004F22                                    7547 @@gen_label492 DS    0H
00004F22 41F0 D148               00000148   7548          LA    15,328(0,13)
00004F26 B904 001F                          7549          LGR   1,15
00004F2A A709 0000               00000000   7550          LGHI  0,0
                                                                                                                           Page  154 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004F2E                                    7551 @@gen_label493 DS 0H
00004F2E B25E 000F                          7552          SRST  0,15
00004F32 4710 C7DE               00004F2E   7553          BC  1,@@gen_label493
00004F36 B90B 0001                          7554          SLGR  0,1
00004F3A A70F 0002               00000002   7555          CGHI  0,2
00004F3E 4770 C7F6               00004F46   7556          BNE   @L824
00004F42 9200 D148      00000148 00000000   7557          MVI   328(13),0
00004F46                                    7558 @L823    DS    0H
00004F46                                    7559 @L824    DS    0H
00004F46 E3F0 2100 0004          00000100   7560          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004F4C A759 1638               00001638   7561          LGHI  5,5688      ; 5688
00004F50 41F5 F000               00000000   7562          LA    15,0(5,15)
00004F54 E3F0 D348 0024          00000348   7563          STG   15,840(0,13)
00004F5A 4110 D348               00000348   7564          LA    1,840(0,13)
00004F5E E3F0 C128 0004          00004878   7565          LG    15,@lit_1945_291 ; mtx_lock
00004F64                                    7566 @@gen_label495 DS    0H
00004F64 05EF                               7567          BALR  14,15
00004F66                                    7568 @@gen_label496 DS    0H
00004F66 41F0 D248               00000248   7569          LA    15,584(0,13)
00004F6A E3F0 D348 0024          00000348   7570          STG   15,840(0,13)
00004F70 E3F0 2100 0004          00000100   7571          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004F76 A719 1630               00001630   7572          LGHI  1,5680      ; 5680
00004F7A E3F1 F000 0004          00000000   7573          LG    15,0(1,15)
00004F80 E3F0 D350 0024          00000350   7574          STG   15,848(0,13)
00004F86 E548 D358 0100          00000358   7575          MVGHI 856(13),256
00004F8C 4110 D348               00000348   7576          LA    1,840(0,13)
00004F90 E3F0 C130 0004          00004880   7577          LG    15,@lit_1945_293 ; rd_strlcpy
00004F96                                    7578 @@gen_label497 DS    0H
00004F96 05EF                               7579          BALR  14,15
00004F98                                    7580 @@gen_label498 DS    0H
00004F98 E3F0 2100 0004          00000100   7581          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00004F9E 41F5 F000               00000000   7582          LA    15,0(5,15)
00004FA2 E3F0 D348 0024          00000348   7583          STG   15,840(0,13)
00004FA8 4110 D348               00000348   7584          LA    1,840(0,13)
00004FAC E3F0 C138 0004          00004888   7585          LG    15,@lit_1945_295 ; mtx_unlock
00004FB2                                    7586 @@gen_label499 DS    0H
00004FB2 05EF                               7587          BALR  14,15
00004FB4                                    7588 @@gen_label500 DS    0H
00004FB4 E3F0 20B8 0015          000000B8   7589          LGH   15,184(0,2)
00004FBA E3F0 D348 0024          00000348   7590          STG   15,840(0,13)
00004FC0 4110 D348               00000348   7591          LA    1,840(0,13)
00004FC4 E3F0 C140 0004          00004890   7592          LG    15,@lit_1945_296 ; rd_kafka_ApiKey2str
00004FCA                                    7593 @@gen_label501 DS    0H
00004FCA 05EF                               7594          BALR  14,15
00004FCC                                    7595 @@gen_label502 DS    0H
00004FCC B904 005F                          7596          LGR   5,15
00004FD0 41F0 2078               00000078   7597          LA    15,120(0,2)
00004FD4 E3F0 D348 0024          00000348   7598          STG   15,840(0,13)
00004FDA 4110 D348               00000348   7599          LA    1,840(0,13)
00004FDE E3F0 C148 0004          00004898   7600          LG    15,@lit_1945_297 ; rd_slice_offset
00004FE4                                    7601 @@gen_label503 DS    0H
00004FE4 05EF                               7602          BALR  14,15
                                                                                                                           Page  155 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004FE6                                    7603 @@gen_label504 DS    0H
00004FE6 B904 006F                          7604          LGR   6,15
00004FEA E370 2098 0004          00000098   7605          LG    7,152(0,2)  ; offset of end in rd_slice_s
00004FF0 41F0 2078               00000078   7606          LA    15,120(0,2)
00004FF4 E3F0 D348 0024          00000348   7607          STG   15,840(0,13)
00004FFA 4110 D348               00000348   7608          LA    1,840(0,13)
00004FFE E3F0 C110 0004          00004860   7609          LG    15,@lit_1945_284 ; rd_slice_abs_offset
00005004                                    7610 @@gen_label505 DS    0H
00005004 05EF                               7611          BALR  14,15
00005006                                    7612 @@gen_label506 DS    0H
00005006 B90B 007F                          7613          SLGR  7,15
0000500A E3F0 21E8 0002          000001E8   7614          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00005010 4780 C8CE               0000501E   7615          BZ    @L827
00005014 E3F0 21E8 0004          000001E8   7616          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000501A 47F0 C8D8               00005028   7617          B     @L828
0000501E                                    7618 @L827    DS    0H
0000501E E3F0 C0E8 0004          00004838   7619          LG    15,@lit_1945_279
00005024 41F0 F380               00000380   7620          LA    15,896(0,15)
00005028                                    7621 @L828    DS    0H
00005028 E310 2100 0004          00000100   7622          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000502E E310 1FD0 0004          00000FD0   7623          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00005034 4110 1210               00000210   7624          LA    1,528(0,1)
00005038 E310 D348 0024          00000348   7625          STG   1,840(0,13)
0000503E E310 2100 0004          00000100   7626          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00005044 E310 1FD0 0004          00000FD0   7627          LG    1,4048(0,1)
0000504A E310 D350 0024          00000350   7628          STG   1,848(0,13)
00005050 4110 D248               00000248   7629          LA    1,584(0,13)
00005054 E310 D358 0024          00000358   7630          STG   1,856(0,13)
0000505A B914 0013                          7631          LGFR  1,3
0000505E E310 D360 0024          00000360   7632          STG   1,864(0,13)
00005064 D707 D368 D368 00000368 00000368   7633          XC    872(8,13),872(13)
0000506A E310 C0E8 0004          00004838   7634          LG    1,@lit_1945_279
00005070 4130 13A4               000003A4   7635          LA    3,932(0,1)
00005074 E330 D370 0024          00000370   7636          STG   3,880(0,13)
0000507A 4110 13B0               000003B0   7637          LA    1,944(0,1)
0000507E E310 D378 0024          00000378   7638          STG   1,888(0,13)
00005084 E350 D380 0024          00000380   7639          STG   5,896(0,13)
0000508A 4810 20BA               000000BA   7640          LH    1,186(0,2)
0000508E B914 0011                          7641          LGFR  1,1
00005092 E310 D388 0024          00000388   7642          STG   1,904(0,13)
00005098 E360 D390 0024          00000390   7643          STG   6,912(0,13)
0000509E E310 2098 0004          00000098   7644          LG    1,152(0,2)  ; offset of end in rd_slice_s
000050A4 E310 2090 000B          00000090   7645          SLG   1,144(0,2)
000050AA E310 D398 0024          00000398   7646          STG   1,920(0,13)
000050B0 E310 C0F8 0004          00004848   7647          LG    1,@lit_1945_281
000050B6 4110 11FA               000001FA   7648          LA    1,506(0,1)
000050BA E310 D3A0 0024          000003A0   7649          STG   1,928(0,13)
000050C0 E548 D3A8 0244          000003A8   7650          MVGHI 936(13),580
000050C6 A719 0001               00000001   7651          LGHI  1,1         ; 1
000050CA E310 D3B0 0024          000003B0   7652          STG   1,944(0,13)
                                                                                                                           Page  156 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000050D0 E370 D3B8 0024          000003B8   7653          STG   7,952(0,13)
000050D6 E3F0 D3C0 0024          000003C0   7654          STG   15,960(0,13)
000050DC 41F0 D148               00000148   7655          LA    15,328(0,13)
000050E0 E3F0 D3C8 0024          000003C8   7656          STG   15,968(0,13)
000050E6 4110 D348               00000348   7657          LA    1,840(0,13)
000050EA E3F0 C0F0 0004          00004840   7658          LG    15,@lit_1945_282 ; rd_kafka_log0
000050F0                                    7659 @@gen_label508 DS    0H
000050F0 05EF                               7660          BALR  14,15
000050F2                                    7661 @@gen_label509 DS    0H
000050F2                                    7662 @L818    DS    0H
000050F2 E54C 2188 FF65          00000188   7663          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
000050F8 E3C0 C100 001A          00004850   7664          ALGF  12,@lit_region_diff_1945_2_5
                                            7665          DROP  12
                        0000653C            7666          USING @REGION_1945_5,12
000050FE 47F0 C796               00006CD2   7667          B     @_err_parse@1945@1
                                            7668          DROP  12
                        00004750            7669          USING @REGION_1945_2,12
00005102                                    7670 @L814    DS    0H
00005102                                    7671 @L810    DS    0H
                                            7672 * ***
                                            7673 * ***           if (hdr.MagicByte == 1) {
00005102 E3F0 D0D8 0076          000000D8   7674          LB    15,216(0,13)
00005108 A7FE 0001               00000001   7675          CHI   15,1
0000510C 4780 C9CA               0000511A   7676          BE    *+14  Around region break
00005110 E3C0 C158 001A          000048A8   7677          ALGF  12,@lit_region_diff_1945_2_3
                                            7678          DROP  12
                        0000515C            7679          USING @REGION_1945_3,12
00005116 47F0 C33C               00005498   7680          B     @L829
                                            7681          DROP  12
                        00004750            7682          USING @REGION_1945_2,12
                                            7683 * ***                   do { int64_t _v; do { size_t __len2 = (size_t)\
                                            7684 * (sizeof(_v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2\
                                            7685 * )) do { size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)-\
                                            7686 * >rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))\
                                            7687 * ) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)\
                                            7688 * ))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_re\
                                            7689 * ader.c",583, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_r\
                                            7690 * kb"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__t\
                                            7691 * mpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do {\
                                            7692 *  char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock)\
                                            7693 * ; rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_lognam\
                                            7694 * e)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log\
                                            7695 * 0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, \
                                            7696 * _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffe\
                                            7697 * r underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "exp\
                                            7698 * ected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kaf\
                                            7699 * ka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiV\
                                            7700 * ersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reade\
                                            7701 * r)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 583, __len0,\
                                            7702 *  ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_re\
                                            7703 * ader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigatio\
                                            7704 * n : "incorrect broker.version.fallback?", __tmpstr); } while (0); } \
                                                                                                                           Page  157 
  Active Usings: @REGION_1945_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7705 * (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; }\
                                            7706 *  while (0); } } while (0); } while (0); *(&hdr.Timestamp) = (_v); } \
                                            7707 * while (0);
0000511A                                    7708 @L830    DS    0H
0000511A                                    7709 @L833    DS    0H
0000511A A7F9 0008               00000008   7710          LGHI  15,8        ; 8
0000511E 4110 2078               00000078   7711          LA    1,120(0,2)
00005122 E310 D348 0024          00000348   7712          STG   1,840(0,13)
00005128 4110 D0B8               000000B8   7713          LA    1,184(0,13)
0000512C E310 D350 0024          00000350   7714          STG   1,848(0,13)
00005132 E3F0 D358 0024          00000358   7715          STG   15,856(0,13)
00005138 4110 D348               00000348   7716          LA    1,840(0,13)
0000513C E3F0 C150 0004          000048A0   7717          LG    15,@lit_1945_304 ; rd_slice_read
00005142                                    7718 @@gen_label511 DS    0H
00005142 05EF                               7719          BALR  14,15
00005144                                    7720 @@gen_label512 DS    0H
00005144 B902 00FF                          7721          LTGR  15,15
00005148 4780 CA06               00005156   7722          BZ    *+14  Around region break
0000514C E3C0 C158 001A          000048A8   7723          ALGF  12,@lit_region_diff_1945_2_3
                                            7724          DROP  12
                        0000515C            7725          USING @REGION_1945_3,12
00005152 47F0 C308               00005464   7726          B     @L836
                                            7727          DROP  12
                        00004750            7728          USING @REGION_1945_2,12
00005156 E3C0 C158 001A          000048A8   7729          ALGF  12,@lit_region_diff_1945_2_3
0000515C                                    7730 @REGION_1945_3 DS 0H
                                            7731          DROP  12
                        0000515C            7732          USING @REGION_1945_3,12
0000515C                                    7733 @L837    DS    0H
0000515C E3A0 2098 0004          00000098   7734          LG    10,152(0,2) ; offset of end in rd_slice_s
00005162 41F0 2078               00000078   7735          LA    15,120(0,2)
00005166 E3F0 D348 0024          00000348   7736          STG   15,840(0,13)
0000516C 4110 D348               00000348   7737          LA    1,840(0,13)
00005170 E3F0 C1AC 0004          00005308   7738          LG    15,@lit_1945_347 ; rd_slice_abs_offset
00005176                                    7739 @@gen_label514 DS    0H
00005176 05EF                               7740          BALR  14,15
00005178                                    7741 @@gen_label515 DS    0H
00005178 B90B 00AF                          7742          SLGR  10,15
0000517C A7F9 0008               00000008   7743          LGHI  15,8        ; 8
00005180 B921 00FA                          7744          CLGR  15,10
00005184 47D0 C308               00005464   7745          BNH   @L840
00005188                                    7746 @L841    DS    0H
00005188 1233                               7747          LTR   3,3
0000518A 47D0 C2F8               00005454   7748          BNH   @L844
0000518E                                    7749 @L845    DS    0H
0000518E E3F0 2100 0002          00000100   7750          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005194 4770 C07E               000051DA   7751          BNZ   @L848
00005198 E3F0 C1C4 0004          00005320   7752          LG    15,@lit_1945_348
0000519E 4110 F2CE               000002CE   7753          LA    1,718(0,15)
000051A2 E310 D348 0024          00000348   7754          STG   1,840(0,13)
000051A8 E548 D350 0247          00000350   7755          MVGHI 848(13),583
000051AE E310 C1BC 0004          00005318   7756          LG    1,@lit_1945_349
                                                                                                                           Page  158 
  Active Usings: @REGION_1945_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000051B4 4110 11FA               000001FA   7757          LA    1,506(0,1)
000051B8 E310 D358 0024          00000358   7758          STG   1,856(0,13)
000051BE D707 D360 D360 00000360 00000360   7759          XC    864(8,13),864(13)
000051C4 41F0 F362               00000362   7760          LA    15,866(0,15)
000051C8 E3F0 D368 0024          00000368   7761          STG   15,872(0,13)
000051CE 4110 D348               00000348   7762          LA    1,840(0,13)
000051D2 E3F0 C1B4 0004          00005310   7763          LG    15,@lit_1945_350 ; rd_kafka_crash
000051D8                                    7764 @@gen_label519 DS    0H
000051D8 05EF                               7765          BALR  14,15
000051DA                                    7766 @@gen_label520 DS    0H
000051DA                                    7767 @L848    DS    0H
000051DA 41F0 D148               00000148   7768          LA    15,328(0,13)
000051DE E3F0 D348 0024          00000348   7769          STG   15,840(0,13)
000051E4 E548 D350 0100          00000350   7770          MVGHI 848(13),256
000051EA E3F0 C1C4 0004          00005320   7771          LG    15,@lit_1945_348
000051F0 41F0 F37C               0000037C   7772          LA    15,892(0,15)
000051F4 E3F0 D358 0024          00000358   7773          STG   15,856(0,13)
000051FA 4110 D348               00000348   7774          LA    1,840(0,13)
000051FE E3F0 C1CC 0004          00005328   7775          LG    15,@lit_1945_352 ; snprintf
00005204                                    7776 @@gen_label521 DS    0H
00005204 05EF                               7777          BALR  14,15
00005206                                    7778 @@gen_label522 DS    0H
00005206 41F0 D148               00000148   7779          LA    15,328(0,13)
0000520A B904 001F                          7780          LGR   1,15
0000520E A709 0000               00000000   7781          LGHI  0,0
00005212                                    7782 @@gen_label523 DS 0H
00005212 B25E 000F                          7783          SRST  0,15
00005216 4710 C0B6               00005212   7784          BC  1,@@gen_label523
0000521A B90B 0001                          7785          SLGR  0,1
0000521E A70F 0002               00000002   7786          CGHI  0,2
00005222 4770 C0CE               0000522A   7787          BNE   @L850
00005226 9200 D148      00000148 00000000   7788          MVI   328(13),0
0000522A                                    7789 @L849    DS    0H
0000522A                                    7790 @L850    DS    0H
0000522A E3F0 2100 0004          00000100   7791          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005230 A759 1638               00001638   7792          LGHI  5,5688      ; 5688
00005234 41F5 F000               00000000   7793          LA    15,0(5,15)
00005238 E3F0 D348 0024          00000348   7794          STG   15,840(0,13)
0000523E 4110 D348               00000348   7795          LA    1,840(0,13)
00005242 E3F0 C1D4 0004          00005330   7796          LG    15,@lit_1945_354 ; mtx_lock
00005248                                    7797 @@gen_label525 DS    0H
00005248 05EF                               7798          BALR  14,15
0000524A                                    7799 @@gen_label526 DS    0H
0000524A 41F0 D248               00000248   7800          LA    15,584(0,13)
0000524E E3F0 D348 0024          00000348   7801          STG   15,840(0,13)
00005254 E3F0 2100 0004          00000100   7802          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000525A A719 1630               00001630   7803          LGHI  1,5680      ; 5680
0000525E E3F1 F000 0004          00000000   7804          LG    15,0(1,15)
00005264 E3F0 D350 0024          00000350   7805          STG   15,848(0,13)
0000526A E548 D358 0100          00000358   7806          MVGHI 856(13),256
00005270 4110 D348               00000348   7807          LA    1,840(0,13)
00005274 E3F0 C1DC 0004          00005338   7808          LG    15,@lit_1945_356 ; rd_strlcpy
                                                                                                                           Page  159 
  Active Usings: @REGION_1945_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000527A                                    7809 @@gen_label527 DS    0H
0000527A 05EF                               7810          BALR  14,15
0000527C                                    7811 @@gen_label528 DS    0H
0000527C E3F0 2100 0004          00000100   7812          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005282 41F5 F000               00000000   7813          LA    15,0(5,15)
00005286 E3F0 D348 0024          00000348   7814          STG   15,840(0,13)
0000528C 4110 D348               00000348   7815          LA    1,840(0,13)
00005290 E3F0 C1E4 0004          00005340   7816          LG    15,@lit_1945_358 ; mtx_unlock
00005296                                    7817 @@gen_label529 DS    0H
00005296 05EF                               7818          BALR  14,15
00005298                                    7819 @@gen_label530 DS    0H
00005298 E3F0 20B8 0015          000000B8   7820          LGH   15,184(0,2)
0000529E E3F0 D348 0024          00000348   7821          STG   15,840(0,13)
000052A4 4110 D348               00000348   7822          LA    1,840(0,13)
000052A8 E3F0 C1EC 0004          00005348   7823          LG    15,@lit_1945_359 ; rd_kafka_ApiKey2str
000052AE                                    7824 @@gen_label531 DS    0H
000052AE 05EF                               7825          BALR  14,15
000052B0                                    7826 @@gen_label532 DS    0H
000052B0 B904 005F                          7827          LGR   5,15
000052B4 41F0 2078               00000078   7828          LA    15,120(0,2)
000052B8 E3F0 D348 0024          00000348   7829          STG   15,840(0,13)
000052BE 4110 D348               00000348   7830          LA    1,840(0,13)
000052C2 E3F0 C1F4 0004          00005350   7831          LG    15,@lit_1945_360 ; rd_slice_offset
000052C8                                    7832 @@gen_label533 DS    0H
000052C8 05EF                               7833          BALR  14,15
000052CA                                    7834 @@gen_label534 DS    0H
000052CA B904 006F                          7835          LGR   6,15
000052CE E370 2098 0004          00000098   7836          LG    7,152(0,2)  ; offset of end in rd_slice_s
000052D4 41F0 2078               00000078   7837          LA    15,120(0,2)
000052D8 E3F0 D348 0024          00000348   7838          STG   15,840(0,13)
000052DE 4110 D348               00000348   7839          LA    1,840(0,13)
000052E2 E3F0 C1AC 0004          00005308   7840          LG    15,@lit_1945_347 ; rd_slice_abs_offset
000052E8                                    7841 @@gen_label535 DS    0H
000052E8 05EF                               7842          BALR  14,15
000052EA                                    7843 @@gen_label536 DS    0H
000052EA B90B 007F                          7844          SLGR  7,15
000052EE E3F0 21E8 0002          000001E8   7845          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000052F4 4780 C224               00005380   7846          BZ    @L853
000052F8 E3F0 21E8 0004          000001E8   7847          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000052FE 47F0 C22E               0000538A   7848          B     @L854
00005308                                    7849          DS    0D
00005308 0000000000001210                   7850 @lit_1945_347 DC AD(rd_slice_abs_offset)
00005310 0000000000000000                   7851 @lit_1945_350 DC AD(rd_kafka_crash)
00005318 0000000000012808                   7852 @lit_1945_349 DC AD(@DATA)
00005320 0000000000012AB8                   7853 @lit_1945_348 DC AD(@strings@)
00005328 0000000000000000                   7854 @lit_1945_352 DC AD(snprintf)
00005330 0000000000000000                   7855 @lit_1945_354 DC AD(mtx_lock)
00005338 0000000000001668                   7856 @lit_1945_356 DC AD(rd_strlcpy)
00005340 0000000000000000                   7857 @lit_1945_358 DC AD(mtx_unlock)
00005348 00000000000014D0                   7858 @lit_1945_359 DC AD(rd_kafka_$Api$Key2str)
                                                                                                                           Page  160 
  Active Usings: @REGION_1945_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005350 00000000000012B8                   7859 @lit_1945_360 DC AD(rd_slice_offset)
00005358 0000000000000000                   7860 @lit_1945_365 DC AD(rd_kafka_log0)
00005360 000013E0                           7861 @lit_region_diff_1945_3_5  DC A(@REGION_1945_5-@REGION_1945_3)
00005364 00000A2C                           7862 @lit_region_diff_1945_3_4  DC A(@REGION_1945_4-@REGION_1945_3)
00005368 0000000000000000                   7863 @lit_1945_411 DC AD(rd_slice_crc32)
00005370 0000000000000000                   7864 @lit_1945_413 DC AD(rd_kafka_consumer_err)
00005378 0000000000000000                   7865 @lit_1945_415 DC AD(rd_slice_read)
00005380                                    7866 @L853    DS    0H
00005380 E3F0 C1C4 0004          00005320   7867          LG    15,@lit_1945_348
00005386 41F0 F380               00000380   7868          LA    15,896(0,15)
0000538A                                    7869 @L854    DS    0H
0000538A E310 2100 0004          00000100   7870          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00005390 E310 1FD0 0004          00000FD0   7871          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00005396 4110 1210               00000210   7872          LA    1,528(0,1)
0000539A E310 D348 0024          00000348   7873          STG   1,840(0,13)
000053A0 E310 2100 0004          00000100   7874          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000053A6 E310 1FD0 0004          00000FD0   7875          LG    1,4048(0,1)
000053AC E310 D350 0024          00000350   7876          STG   1,848(0,13)
000053B2 4110 D248               00000248   7877          LA    1,584(0,13)
000053B6 E310 D358 0024          00000358   7878          STG   1,856(0,13)
000053BC B914 0013                          7879          LGFR  1,3
000053C0 E310 D360 0024          00000360   7880          STG   1,864(0,13)
000053C6 D707 D368 D368 00000368 00000368   7881          XC    872(8,13),872(13)
000053CC E310 C1C4 0004          00005320   7882          LG    1,@lit_1945_348
000053D2 4130 13A4               000003A4   7883          LA    3,932(0,1)
000053D6 E330 D370 0024          00000370   7884          STG   3,880(0,13)
000053DC 4110 13B0               000003B0   7885          LA    1,944(0,1)
000053E0 E310 D378 0024          00000378   7886          STG   1,888(0,13)
000053E6 E350 D380 0024          00000380   7887          STG   5,896(0,13)
000053EC 4810 20BA               000000BA   7888          LH    1,186(0,2)
000053F0 B914 0011                          7889          LGFR  1,1
000053F4 E310 D388 0024          00000388   7890          STG   1,904(0,13)
000053FA E360 D390 0024          00000390   7891          STG   6,912(0,13)
00005400 E310 2098 0004          00000098   7892          LG    1,152(0,2)  ; offset of end in rd_slice_s
00005406 E310 2090 000B          00000090   7893          SLG   1,144(0,2)
0000540C E310 D398 0024          00000398   7894          STG   1,920(0,13)
00005412 E310 C1BC 0004          00005318   7895          LG    1,@lit_1945_349
00005418 4110 11FA               000001FA   7896          LA    1,506(0,1)
0000541C E310 D3A0 0024          000003A0   7897          STG   1,928(0,13)
00005422 E548 D3A8 0247          000003A8   7898          MVGHI 936(13),583
00005428 A719 0008               00000008   7899          LGHI  1,8         ; 8
0000542C E310 D3B0 0024          000003B0   7900          STG   1,944(0,13)
00005432 E370 D3B8 0024          000003B8   7901          STG   7,952(0,13)
00005438 E3F0 D3C0 0024          000003C0   7902          STG   15,960(0,13)
0000543E 41F0 D148               00000148   7903          LA    15,328(0,13)
00005442 E3F0 D3C8 0024          000003C8   7904          STG   15,968(0,13)
00005448 4110 D348               00000348   7905          LA    1,840(0,13)
0000544C E3F0 C1FC 0004          00005358   7906          LG    15,@lit_1945_365 ; rd_kafka_log0
00005452                                    7907 @@gen_label538 DS    0H
00005452 05EF                               7908          BALR  14,15
00005454                                    7909 @@gen_label539 DS    0H
00005454                                    7910 @L844    DS    0H
                                                                                                                           Page  161 
  Active Usings: @REGION_1945_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005454 E54C 2188 FF65          00000188   7911          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000545A E3C0 C204 001A          00005360   7912          ALGF  12,@lit_region_diff_1945_3_5
                                            7913          DROP  12
                        0000653C            7914          USING @REGION_1945_5,12
00005460 47F0 C796               00006CD2   7915          B     @_err_parse@1945@1
                                            7916          DROP  12
                        0000515C            7917          USING @REGION_1945_3,12
00005464                                    7918 @L840    DS    0H
00005464                                    7919 @L836    DS    0H
00005464 E3F0 D0B8 0004          000000B8   7920          LG    15,184(0,13) ; _v
0000546A E3F0 D0E0 0024          000000E0   7921          STG   15,224(0,13) ; offset of Timestamp in 0000156
                                            7922 * ***                   hdrsize += 8;
00005470 A75B 0008               00000008   7923          AGHI  5,8
                                            7924 * ***
                                            7925 * ***                   if (!(hdr.Attributes & 0x7) &&
00005474 9107 D0D9      000000D9 00000007   7926          TM    217(13),7
00005478 4770 C342               0000549E   7927          BNZ   @L856
                                            7928 * ***                       msetr->msetr_relative_offsets) {
0000547C E3F0 4008 0012          00000008   7929          LT    15,8(0,4)   ; offset of msetr_relative_offsets in rd_kaf*
                                                                ka_msgset_reader_s
00005482 4780 C342               0000549E   7930          BZ    @L856
                                            7931 * ***                           relative_offsets = 1;
00005486 A798 0001               00000001   7932          LHI   9,1         ; 1
                                            7933 * ***                           reloff_str = "relative ";
0000548A E3F0 C1C4 0004          00005320   7934          LG    15,@lit_1945_348
00005490 4170 F420               00000420   7935          LA    7,1056(0,15)
                                            7936 * ***                   }
00005494                                    7937 @L855    DS    0H
                                            7938 * ***           } else
00005494 47F0 C342               0000549E   7939          B     @L856
00005498                                    7940 @L829    DS    0H
                                            7941 * ***                   hdr.Timestamp = 0;
00005498 E548 D0E0 0000          000000E0   7942          MVGHI 224(13),0   ; offset of Timestamp in 0000156
0000549E                                    7943 @L856    DS    0H
                                            7944 * ***
                                            7945 * ***
                                            7946 * ***           if (((hdr.MessageSize < (ssize_t)hdrsize)))
0000549E E3F0 D0D0 0014          000000D0   7947          LGF   15,208(0,13)
000054A4 B920 00F5                          7948          CGR   15,5
000054A8 47B0 C61C               00005778   7949          BNL   @L874
                                            7950 * ***                   do { if (log_decode_errors > 0) { do { if (((!\
                                            7951 * (rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\
                                            7952 * \rdkafka_msgset_reader.c",596, __FUNCTION__, (((void *)0)), "assert:\
                                            7953 *  " "rkbuf->rkbuf_rkb"); } while (0); do { char _logname[256]; mtx_lo\
                                            7954 * ck(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logname, rkbu\
                                            7955 * f->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkbuf->rk\
                                            7956 * buf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_\
                                            7957 * rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decode_errors\
                                            7958 * , 0x0, "PROTOERR", "Protocol parse failure for %s v%hd%s " "at %" "z\
                                            7959 * u" "/%" "zu" " (%s:%i) " "(incorrect broker.version.fallback?)", rd_\
                                            7960 * kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.A\
                                            7961 * piVersion, (rkbuf->rkbuf_flags&0x40? "(flex)":""), rd_slice_offset(&\
                                                                                                                           Page  162 
  Active Usings: @REGION_1945_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7962 * rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_\
                                            7963 * reader)->start), __FUNCTION__, 596); } while (0); do { char _logname\
                                            7964 * [256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_\
                                            7965 * logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unloc\
                                            7966 * k(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkb\
                                            7967 * uf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_\
                                            7968 * decode_errors, 0x0, "PROTOERR", "Message at %soffset %" "lld" " Mess\
                                            7969 * ageSize %" "d" " < hdrsize %" "zu", reloff_str, hdr.Offset, hdr.Mess\
                                            7970 * ageSize, hdrsize); } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP\
                                            7971 * _ERR__BAD_MSG; goto err_parse; } while (0);
000054AC                                    7972 @L858    DS    0H
000054AC 1233                               7973          LTR   3,3
000054AE 47D0 C60C               00005768   7974          BNH   @L861
000054B2                                    7975 @L862    DS    0H
000054B2 E3F0 2100 0002          00000100   7976          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000054B8 4770 C3A2               000054FE   7977          BNZ   @L865
000054BC E3F0 C1C4 0004          00005320   7978          LG    15,@lit_1945_348
000054C2 4110 F2CE               000002CE   7979          LA    1,718(0,15)
000054C6 E310 D348 0024          00000348   7980          STG   1,840(0,13)
000054CC E548 D350 0254          00000350   7981          MVGHI 848(13),596
000054D2 E310 C1BC 0004          00005318   7982          LG    1,@lit_1945_349
000054D8 4110 11FA               000001FA   7983          LA    1,506(0,1)
000054DC E310 D358 0024          00000358   7984          STG   1,856(0,13)
000054E2 D707 D360 D360 00000360 00000360   7985          XC    864(8,13),864(13)
000054E8 41F0 F362               00000362   7986          LA    15,866(0,15)
000054EC E3F0 D368 0024          00000368   7987          STG   15,872(0,13)
000054F2 4110 D348               00000348   7988          LA    1,840(0,13)
000054F6 E3F0 C1B4 0004          00005310   7989          LG    15,@lit_1945_350 ; rd_kafka_crash
000054FC                                    7990 @@gen_label545 DS    0H
000054FC 05EF                               7991          BALR  14,15
000054FE                                    7992 @@gen_label546 DS    0H
000054FE                                    7993 @L865    DS    0H
000054FE                                    7994 @L866    DS    0H
000054FE E3F0 2100 0004          00000100   7995          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005504 A769 1638               00001638   7996          LGHI  6,5688      ; 5688
00005508 41F6 F000               00000000   7997          LA    15,0(6,15)
0000550C E3F0 D348 0024          00000348   7998          STG   15,840(0,13)
00005512 4110 D348               00000348   7999          LA    1,840(0,13)
00005516 E3F0 C1D4 0004          00005330   8000          LG    15,@lit_1945_354 ; mtx_lock
0000551C                                    8001 @@gen_label547 DS    0H
0000551C 05EF                               8002          BALR  14,15
0000551E                                    8003 @@gen_label548 DS    0H
0000551E 41F0 D148               00000148   8004          LA    15,328(0,13)
00005522 E3F0 D348 0024          00000348   8005          STG   15,840(0,13)
00005528 E3F0 2100 0004          00000100   8006          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000552E A719 1630               00001630   8007          LGHI  1,5680      ; 5680
00005532 E3F1 F000 0004          00000000   8008          LG    15,0(1,15)
00005538 E3F0 D350 0024          00000350   8009          STG   15,848(0,13)
0000553E E548 D358 0100          00000358   8010          MVGHI 856(13),256
00005544 4110 D348               00000348   8011          LA    1,840(0,13)
00005548 E3F0 C1DC 0004          00005338   8012          LG    15,@lit_1945_356 ; rd_strlcpy
0000554E                                    8013 @@gen_label549 DS    0H
                                                                                                                           Page  163 
  Active Usings: @REGION_1945_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000554E 05EF                               8014          BALR  14,15
00005550                                    8015 @@gen_label550 DS    0H
00005550 E3F0 2100 0004          00000100   8016          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005556 41F6 F000               00000000   8017          LA    15,0(6,15)
0000555A E3F0 D348 0024          00000348   8018          STG   15,840(0,13)
00005560 4110 D348               00000348   8019          LA    1,840(0,13)
00005564 E3F0 C1E4 0004          00005340   8020          LG    15,@lit_1945_358 ; mtx_unlock
0000556A                                    8021 @@gen_label551 DS    0H
0000556A 05EF                               8022          BALR  14,15
0000556C                                    8023 @@gen_label552 DS    0H
0000556C E3F0 20B8 0015          000000B8   8024          LGH   15,184(0,2)
00005572 E3F0 D348 0024          00000348   8025          STG   15,840(0,13)
00005578 4110 D348               00000348   8026          LA    1,840(0,13)
0000557C E3F0 C1EC 0004          00005348   8027          LG    15,@lit_1945_359 ; rd_kafka_ApiKey2str
00005582                                    8028 @@gen_label553 DS    0H
00005582 05EF                               8029          BALR  14,15
00005584                                    8030 @@gen_label554 DS    0H
00005584 B904 006F                          8031          LGR   6,15
00005588 9140 2023      00000023 00000040   8032          TM    35(2),64
0000558C 4780 C442               0000559E   8033          BZ    @L869
00005590 E3F0 C1C4 0004          00005320   8034          LG    15,@lit_1945_348
00005596 4180 F42A               0000042A   8035          LA    8,1066(0,15)
0000559A 47F0 C44C               000055A8   8036          B     @L870
0000559E                                    8037 @L869    DS    0H
0000559E E3F0 C1C4 0004          00005320   8038          LG    15,@lit_1945_348
000055A4 4180 F0A8               000000A8   8039          LA    8,168(0,15)
000055A8                                    8040 @L870    DS    0H
000055A8 41F0 2078               00000078   8041          LA    15,120(0,2)
000055AC E3F0 D348 0024          00000348   8042          STG   15,840(0,13)
000055B2 4110 D348               00000348   8043          LA    1,840(0,13)
000055B6 E3F0 C1F4 0004          00005350   8044          LG    15,@lit_1945_360 ; rd_slice_offset
000055BC                                    8045 @@gen_label556 DS    0H
000055BC 05EF                               8046          BALR  14,15
000055BE                                    8047 @@gen_label557 DS    0H
000055BE E310 2100 0004          00000100   8048          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000055C4 E310 1FD0 0004          00000FD0   8049          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000055CA 4110 1210               00000210   8050          LA    1,528(0,1)
000055CE E310 D348 0024          00000348   8051          STG   1,840(0,13)
000055D4 E310 2100 0004          00000100   8052          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000055DA E310 1FD0 0004          00000FD0   8053          LG    1,4048(0,1)
000055E0 E310 D350 0024          00000350   8054          STG   1,848(0,13)
000055E6 4110 D148               00000148   8055          LA    1,328(0,13)
000055EA E310 D358 0024          00000358   8056          STG   1,856(0,13)
000055F0 B914 0013                          8057          LGFR  1,3
000055F4 E310 D360 0024          00000360   8058          STG   1,864(0,13)
000055FA D707 D368 D368 00000368 00000368   8059          XC    872(8,13),872(13)
00005600 E310 C1C4 0004          00005320   8060          LG    1,@lit_1945_348
00005606 4190 1432               00000432   8061          LA    9,1074(0,1)
0000560A E390 D370 0024          00000370   8062          STG   9,880(0,13)
00005610 4110 143C               0000043C   8063          LA    1,1084(0,1)
00005614 E310 D378 0024          00000378   8064          STG   1,888(0,13)
0000561A E360 D380 0024          00000380   8065          STG   6,896(0,13)
                                                                                                                           Page  164 
  Active Usings: @REGION_1945_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005620 4810 20BA               000000BA   8066          LH    1,186(0,2)
00005624 B914 0011                          8067          LGFR  1,1
00005628 E310 D388 0024          00000388   8068          STG   1,904(0,13)
0000562E E380 D390 0024          00000390   8069          STG   8,912(0,13)
00005634 E3F0 D398 0024          00000398   8070          STG   15,920(0,13)
0000563A E3F0 2098 0004          00000098   8071          LG    15,152(0,2) ; offset of end in rd_slice_s
00005640 E3F0 2090 000B          00000090   8072          SLG   15,144(0,2)
00005646 E3F0 D3A0 0024          000003A0   8073          STG   15,928(0,13)
0000564C E3F0 C1BC 0004          00005318   8074          LG    15,@lit_1945_349
00005652 41F0 F1FA               000001FA   8075          LA    15,506(0,15)
00005656 E3F0 D3A8 0024          000003A8   8076          STG   15,936(0,13)
0000565C E548 D3B0 0254          000003B0   8077          MVGHI 944(13),596
00005662 4110 D348               00000348   8078          LA    1,840(0,13)
00005666 E3F0 C1FC 0004          00005358   8079          LG    15,@lit_1945_365 ; rd_kafka_log0
0000566C                                    8080 @@gen_label558 DS    0H
0000566C 05EF                               8081          BALR  14,15
0000566E                                    8082 @@gen_label559 DS    0H
0000566E                                    8083 @L871    DS    0H
0000566E E3F0 2100 0004          00000100   8084          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005674 A769 1638               00001638   8085          LGHI  6,5688      ; 5688
00005678 41F6 F000               00000000   8086          LA    15,0(6,15)
0000567C E3F0 D348 0024          00000348   8087          STG   15,840(0,13)
00005682 4110 D348               00000348   8088          LA    1,840(0,13)
00005686 E3F0 C1D4 0004          00005330   8089          LG    15,@lit_1945_354 ; mtx_lock
0000568C                                    8090 @@gen_label560 DS    0H
0000568C 05EF                               8091          BALR  14,15
0000568E                                    8092 @@gen_label561 DS    0H
0000568E 41F0 D148               00000148   8093          LA    15,328(0,13)
00005692 E3F0 D348 0024          00000348   8094          STG   15,840(0,13)
00005698 E3F0 2100 0004          00000100   8095          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000569E A719 1630               00001630   8096          LGHI  1,5680      ; 5680
000056A2 E3F1 F000 0004          00000000   8097          LG    15,0(1,15)
000056A8 E3F0 D350 0024          00000350   8098          STG   15,848(0,13)
000056AE E548 D358 0100          00000358   8099          MVGHI 856(13),256
000056B4 4110 D348               00000348   8100          LA    1,840(0,13)
000056B8 E3F0 C1DC 0004          00005338   8101          LG    15,@lit_1945_356 ; rd_strlcpy
000056BE                                    8102 @@gen_label562 DS    0H
000056BE 05EF                               8103          BALR  14,15
000056C0                                    8104 @@gen_label563 DS    0H
000056C0 E3F0 2100 0004          00000100   8105          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000056C6 41F6 F000               00000000   8106          LA    15,0(6,15)
000056CA E3F0 D348 0024          00000348   8107          STG   15,840(0,13)
000056D0 4110 D348               00000348   8108          LA    1,840(0,13)
000056D4 E3F0 C1E4 0004          00005340   8109          LG    15,@lit_1945_358 ; mtx_unlock
000056DA                                    8110 @@gen_label564 DS    0H
000056DA 05EF                               8111          BALR  14,15
000056DC                                    8112 @@gen_label565 DS    0H
000056DC E3F0 2100 0004          00000100   8113          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000056E2 E3F0 FFD0 0004          00000FD0   8114          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
000056E8 41F0 F210               00000210   8115          LA    15,528(0,15)
000056EC E3F0 D348 0024          00000348   8116          STG   15,840(0,13)
000056F2 E3F0 2100 0004          00000100   8117          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
                                                                                                                           Page  165 
  Active Usings: @REGION_1945_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000056F8 E3F0 FFD0 0004          00000FD0   8118          LG    15,4048(0,15)
000056FE E3F0 D350 0024          00000350   8119          STG   15,848(0,13)
00005704 41F0 D148               00000148   8120          LA    15,328(0,13)
00005708 E3F0 D358 0024          00000358   8121          STG   15,856(0,13)
0000570E B914 00F3                          8122          LGFR  15,3
00005712 E3F0 D360 0024          00000360   8123          STG   15,864(0,13)
00005718 D707 D368 D368 00000368 00000368   8124          XC    872(8,13),872(13)
0000571E E3F0 C1C4 0004          00005320   8125          LG    15,@lit_1945_348
00005724 4110 F432               00000432   8126          LA    1,1074(0,15)
00005728 E310 D370 0024          00000370   8127          STG   1,880(0,13)
0000572E 41F0 F49A               0000049A   8128          LA    15,1178(0,15)
00005732 E3F0 D378 0024          00000378   8129          STG   15,888(0,13)
00005738 E370 D380 0024          00000380   8130          STG   7,896(0,13)
0000573E E3F0 D0C8 0004          000000C8   8131          LG    15,200(0,13)
00005744 E3F0 D388 0024          00000388   8132          STG   15,904(0,13)
0000574A E3F0 D0D0 0014          000000D0   8133          LGF   15,208(0,13)
00005750 E3F0 D390 0024          00000390   8134          STG   15,912(0,13)
00005756 E350 D398 0024          00000398   8135          STG   5,920(0,13)
0000575C 4110 D348               00000348   8136          LA    1,840(0,13)
00005760 E3F0 C1FC 0004          00005358   8137          LG    15,@lit_1945_365 ; rd_kafka_log0
00005766                                    8138 @@gen_label566 DS    0H
00005766 05EF                               8139          BALR  14,15
00005768                                    8140 @@gen_label567 DS    0H
00005768                                    8141 @L861    DS    0H
00005768 E54C 2188 FF39          00000188   8142          MVHI  392(2),-199 ; offset of rkbuf_err in rd_kafka_buf_s
0000576E E3C0 C204 001A          00005360   8143          ALGF  12,@lit_region_diff_1945_3_5
                                            8144          DROP  12
                        0000653C            8145          USING @REGION_1945_5,12
00005774 47F0 C796               00006CD2   8146          B     @_err_parse@1945@1
                                            8147          DROP  12
                        0000515C            8148          USING @REGION_1945_3,12
                                            8149 * ***
                                            8150 * ***   # 603 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                            8151 * ***
                                            8152 * ***           do { size_t __len0 = (size_t)(hdr.MessageSize - hdrsiz\
                                            8153 * e); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_off\
                                            8154 * set(&(rkbuf)->rkbuf_reader))))) { do { if (log_decode_errors > 0) { \
                                            8155 * do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\libr\
                                            8156 * dkafka\\src\\rdkafka_msgset_reader.c",604, __FUNCTION__, (((void *)0\
                                            8157 * )), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[256];\
                                            8158 *  snprintf(__tmpstr, sizeof(__tmpstr), ": "); if (__strlen(__tmpstr) \
                                            8159 * == 2) __tmpstr[0] = '\0'; do { char _logname[256]; mtx_lock(&(rkbuf-\
                                            8160 * >rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logname, rkbuf->rkbuf_rk\
                                            8161 * b->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->r\
                                            8162 * kb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf\
                                            8163 * , (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decode_errors, 0x0, "PRO\
                                            8164 * TOUFLOW", "Protocol read buffer underflow " "for %s v%hd " "at %" "z\
                                            8165 * u" "/%" "zu" " (%s:%i): " "expected %" "zu" " bytes > " "%" "zu" " r\
                                            8166 * emaining bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. Api\
                                            8167 * Key), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_offset(&rkbuf->rkbuf_\
                                            8168 * reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_reader)->star\
                                            8169 * t), __FUNCTION__, 604, __len0, ((&rkbuf->rkbuf_reader)->end - rd_sli\
                                                                                                                           Page  166 
  Active Usings: @REGION_1945_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8170 * ce_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_uflow_mitigation \
                                            8171 * ? rkbuf->rkbuf_uflow_mitigation : "incorrect broker.version.fallback\
                                            8172 * ?", __tmpstr); } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR\
                                            8173 * __UNDERFLOW; goto err_parse; } while (0); } } while (0);
00005778                                    8174 @L874    DS    0H
00005778 E3F0 D0D0 0014          000000D0   8175          LGF   15,208(0,13)
0000577E B90B 00F5                          8176          SLGR  15,5
00005782 B904 005F                          8177          LGR   5,15
00005786 E3A0 2098 0004          00000098   8178          LG    10,152(0,2) ; offset of end in rd_slice_s
0000578C 41F0 2078               00000078   8179          LA    15,120(0,2)
00005790 E3F0 D348 0024          00000348   8180          STG   15,840(0,13)
00005796 4110 D348               00000348   8181          LA    1,840(0,13)
0000579A E3F0 C1AC 0004          00005308   8182          LG    15,@lit_1945_347 ; rd_slice_abs_offset
000057A0                                    8183 @@gen_label568 DS    0H
000057A0 05EF                               8184          BALR  14,15
000057A2                                    8185 @@gen_label569 DS    0H
000057A2 B90B 00AF                          8186          SLGR  10,15
000057A6 B921 005A                          8187          CLGR  5,10
000057AA 47D0 C8AC               00005A08   8188          BNH   @L877
000057AE                                    8189 @L878    DS    0H
000057AE 1233                               8190          LTR   3,3
000057B0 47D0 C89C               000059F8   8191          BNH   @L881
000057B4                                    8192 @L882    DS    0H
000057B4 E3F0 2100 0002          00000100   8193          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000057BA 4770 C6A4               00005800   8194          BNZ   @L885
000057BE E3F0 C1C4 0004          00005320   8195          LG    15,@lit_1945_348
000057C4 4110 F2CE               000002CE   8196          LA    1,718(0,15)
000057C8 E310 D348 0024          00000348   8197          STG   1,840(0,13)
000057CE E548 D350 025C          00000350   8198          MVGHI 848(13),604
000057D4 E310 C1BC 0004          00005318   8199          LG    1,@lit_1945_349
000057DA 4110 11FA               000001FA   8200          LA    1,506(0,1)
000057DE E310 D358 0024          00000358   8201          STG   1,856(0,13)
000057E4 D707 D360 D360 00000360 00000360   8202          XC    864(8,13),864(13)
000057EA 41F0 F362               00000362   8203          LA    15,866(0,15)
000057EE E3F0 D368 0024          00000368   8204          STG   15,872(0,13)
000057F4 4110 D348               00000348   8205          LA    1,840(0,13)
000057F8 E3F0 C1B4 0004          00005310   8206          LG    15,@lit_1945_350 ; rd_kafka_crash
000057FE                                    8207 @@gen_label573 DS    0H
000057FE 05EF                               8208          BALR  14,15
00005800                                    8209 @@gen_label574 DS    0H
00005800                                    8210 @L885    DS    0H
00005800 41F0 D148               00000148   8211          LA    15,328(0,13)
00005804 E3F0 D348 0024          00000348   8212          STG   15,840(0,13)
0000580A E548 D350 0100          00000350   8213          MVGHI 848(13),256
00005810 E3F0 C1C4 0004          00005320   8214          LG    15,@lit_1945_348
00005816 41F0 F37C               0000037C   8215          LA    15,892(0,15)
0000581A E3F0 D358 0024          00000358   8216          STG   15,856(0,13)
00005820 4110 D348               00000348   8217          LA    1,840(0,13)
00005824 E3F0 C1CC 0004          00005328   8218          LG    15,@lit_1945_352 ; snprintf
0000582A                                    8219 @@gen_label575 DS    0H
0000582A 05EF                               8220          BALR  14,15
0000582C                                    8221 @@gen_label576 DS    0H
                                                                                                                           Page  167 
  Active Usings: @REGION_1945_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000582C 41F0 D148               00000148   8222          LA    15,328(0,13)
00005830 B904 001F                          8223          LGR   1,15
00005834 A709 0000               00000000   8224          LGHI  0,0
00005838                                    8225 @@gen_label577 DS 0H
00005838 B25E 000F                          8226          SRST  0,15
0000583C 4710 C6DC               00005838   8227          BC  1,@@gen_label577
00005840 B90B 0001                          8228          SLGR  0,1
00005844 A70F 0002               00000002   8229          CGHI  0,2
00005848 4770 C6F4               00005850   8230          BNE   @L887
0000584C 9200 D148      00000148 00000000   8231          MVI   328(13),0
00005850                                    8232 @L886    DS    0H
00005850                                    8233 @L887    DS    0H
00005850 E3F0 2100 0004          00000100   8234          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005856 A769 1638               00001638   8235          LGHI  6,5688      ; 5688
0000585A 41F6 F000               00000000   8236          LA    15,0(6,15)
0000585E E3F0 D348 0024          00000348   8237          STG   15,840(0,13)
00005864 4110 D348               00000348   8238          LA    1,840(0,13)
00005868 E3F0 C1D4 0004          00005330   8239          LG    15,@lit_1945_354 ; mtx_lock
0000586E                                    8240 @@gen_label579 DS    0H
0000586E 05EF                               8241          BALR  14,15
00005870                                    8242 @@gen_label580 DS    0H
00005870 41F0 D248               00000248   8243          LA    15,584(0,13)
00005874 E3F0 D348 0024          00000348   8244          STG   15,840(0,13)
0000587A E3F0 2100 0004          00000100   8245          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005880 A719 1630               00001630   8246          LGHI  1,5680      ; 5680
00005884 E3F1 F000 0004          00000000   8247          LG    15,0(1,15)
0000588A E3F0 D350 0024          00000350   8248          STG   15,848(0,13)
00005890 E548 D358 0100          00000358   8249          MVGHI 856(13),256
00005896 4110 D348               00000348   8250          LA    1,840(0,13)
0000589A E3F0 C1DC 0004          00005338   8251          LG    15,@lit_1945_356 ; rd_strlcpy
000058A0                                    8252 @@gen_label581 DS    0H
000058A0 05EF                               8253          BALR  14,15
000058A2                                    8254 @@gen_label582 DS    0H
000058A2 E3F0 2100 0004          00000100   8255          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000058A8 41F6 F000               00000000   8256          LA    15,0(6,15)
000058AC E3F0 D348 0024          00000348   8257          STG   15,840(0,13)
000058B2 4110 D348               00000348   8258          LA    1,840(0,13)
000058B6 E3F0 C1E4 0004          00005340   8259          LG    15,@lit_1945_358 ; mtx_unlock
000058BC                                    8260 @@gen_label583 DS    0H
000058BC 05EF                               8261          BALR  14,15
000058BE                                    8262 @@gen_label584 DS    0H
000058BE E3F0 20B8 0015          000000B8   8263          LGH   15,184(0,2)
000058C4 E3F0 D348 0024          00000348   8264          STG   15,840(0,13)
000058CA 4110 D348               00000348   8265          LA    1,840(0,13)
000058CE E3F0 C1EC 0004          00005348   8266          LG    15,@lit_1945_359 ; rd_kafka_ApiKey2str
000058D4                                    8267 @@gen_label585 DS    0H
000058D4 05EF                               8268          BALR  14,15
000058D6                                    8269 @@gen_label586 DS    0H
000058D6 B904 006F                          8270          LGR   6,15
000058DA 41F0 2078               00000078   8271          LA    15,120(0,2)
000058DE E3F0 D348 0024          00000348   8272          STG   15,840(0,13)
000058E4 4110 D348               00000348   8273          LA    1,840(0,13)
                                                                                                                           Page  168 
  Active Usings: @REGION_1945_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000058E8 E3F0 C1F4 0004          00005350   8274          LG    15,@lit_1945_360 ; rd_slice_offset
000058EE                                    8275 @@gen_label587 DS    0H
000058EE 05EF                               8276          BALR  14,15
000058F0                                    8277 @@gen_label588 DS    0H
000058F0 B904 007F                          8278          LGR   7,15
000058F4 E380 2098 0004          00000098   8279          LG    8,152(0,2)  ; offset of end in rd_slice_s
000058FA 41F0 2078               00000078   8280          LA    15,120(0,2)
000058FE E3F0 D348 0024          00000348   8281          STG   15,840(0,13)
00005904 4110 D348               00000348   8282          LA    1,840(0,13)
00005908 E3F0 C1AC 0004          00005308   8283          LG    15,@lit_1945_347 ; rd_slice_abs_offset
0000590E                                    8284 @@gen_label589 DS    0H
0000590E 05EF                               8285          BALR  14,15
00005910                                    8286 @@gen_label590 DS    0H
00005910 B90B 008F                          8287          SLGR  8,15
00005914 E3F0 21E8 0002          000001E8   8288          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000591A 4780 C7CC               00005928   8289          BZ    @L890
0000591E E3F0 21E8 0004          000001E8   8290          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00005924 47F0 C7D6               00005932   8291          B     @L891
00005928                                    8292 @L890    DS    0H
00005928 E3F0 C1C4 0004          00005320   8293          LG    15,@lit_1945_348
0000592E 41F0 F380               00000380   8294          LA    15,896(0,15)
00005932                                    8295 @L891    DS    0H
00005932 E310 2100 0004          00000100   8296          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00005938 E310 1FD0 0004          00000FD0   8297          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000593E 4110 1210               00000210   8298          LA    1,528(0,1)
00005942 E310 D348 0024          00000348   8299          STG   1,840(0,13)
00005948 E310 2100 0004          00000100   8300          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000594E E310 1FD0 0004          00000FD0   8301          LG    1,4048(0,1)
00005954 E310 D350 0024          00000350   8302          STG   1,848(0,13)
0000595A 4110 D248               00000248   8303          LA    1,584(0,13)
0000595E E310 D358 0024          00000358   8304          STG   1,856(0,13)
00005964 B914 0013                          8305          LGFR  1,3
00005968 E310 D360 0024          00000360   8306          STG   1,864(0,13)
0000596E D707 D368 D368 00000368 00000368   8307          XC    872(8,13),872(13)
00005974 E310 C1C4 0004          00005320   8308          LG    1,@lit_1945_348
0000597A 4130 13A4               000003A4   8309          LA    3,932(0,1)
0000597E E330 D370 0024          00000370   8310          STG   3,880(0,13)
00005984 4110 13B0               000003B0   8311          LA    1,944(0,1)
00005988 E310 D378 0024          00000378   8312          STG   1,888(0,13)
0000598E E360 D380 0024          00000380   8313          STG   6,896(0,13)
00005994 4810 20BA               000000BA   8314          LH    1,186(0,2)
00005998 B914 0011                          8315          LGFR  1,1
0000599C E310 D388 0024          00000388   8316          STG   1,904(0,13)
000059A2 E370 D390 0024          00000390   8317          STG   7,912(0,13)
000059A8 E310 2098 0004          00000098   8318          LG    1,152(0,2)  ; offset of end in rd_slice_s
000059AE E310 2090 000B          00000090   8319          SLG   1,144(0,2)
000059B4 E310 D398 0024          00000398   8320          STG   1,920(0,13)
000059BA E310 C1BC 0004          00005318   8321          LG    1,@lit_1945_349
000059C0 4110 11FA               000001FA   8322          LA    1,506(0,1)
000059C4 E310 D3A0 0024          000003A0   8323          STG   1,928(0,13)
                                                                                                                           Page  169 
  Active Usings: @REGION_1945_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000059CA E548 D3A8 025C          000003A8   8324          MVGHI 936(13),604
000059D0 E350 D3B0 0024          000003B0   8325          STG   5,944(0,13)
000059D6 E380 D3B8 0024          000003B8   8326          STG   8,952(0,13)
000059DC E3F0 D3C0 0024          000003C0   8327          STG   15,960(0,13)
000059E2 41F0 D148               00000148   8328          LA    15,328(0,13)
000059E6 E3F0 D3C8 0024          000003C8   8329          STG   15,968(0,13)
000059EC 4110 D348               00000348   8330          LA    1,840(0,13)
000059F0 E3F0 C1FC 0004          00005358   8331          LG    15,@lit_1945_365 ; rd_kafka_log0
000059F6                                    8332 @@gen_label592 DS    0H
000059F6 05EF                               8333          BALR  14,15
000059F8                                    8334 @@gen_label593 DS    0H
000059F8                                    8335 @L881    DS    0H
000059F8 E54C 2188 FF65          00000188   8336          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
000059FE E3C0 C204 001A          00005360   8337          ALGF  12,@lit_region_diff_1945_3_5
                                            8338          DROP  12
                        0000653C            8339          USING @REGION_1945_5,12
00005A04 47F0 C796               00006CD2   8340          B     @_err_parse@1945@1
                                            8341          DROP  12
                        0000515C            8342          USING @REGION_1945_3,12
00005A08                                    8343 @L877    DS    0H
                                            8344 * ***
                                            8345 * ***           if (rkb->rkb_rk->rk_conf.check_crcs) {
00005A08 E3F0 8FD0 0004          00000FD0   8346          LG    15,4048(0,8) ; offset of rkb_rk in rd_kafka_broker_s
00005A0E E3F0 F70C 0012          0000070C   8347          LT    15,1804(0,15) ; offset of check_crcs in rd_kafka_conf_s
00005A14 4770 C8C6               00005A22   8348          BNZ   *+14  Around region break
00005A18 E3C0 C208 001A          00005364   8349          ALGF  12,@lit_region_diff_1945_3_4
                                            8350          DROP  12
                        00005B88            8351          USING @REGION_1945_4,12
00005A1E 47F0 C2FA               00005E82   8352          B     @L925
                                            8353          DROP  12
                        0000515C            8354          USING @REGION_1945_3,12
                                            8355 * ***
                                            8356 * ***                   uint32_t calc_crc;
                                            8357 * ***
                                            8358 * ***                   calc_crc = rd_slice_crc32(&crc_slice);
00005A22 41F0 D118               00000118   8359          LA    15,280(0,13)
00005A26 E3F0 D348 0024          00000348   8360          STG   15,840(0,13)
00005A2C 4110 D348               00000348   8361          LA    1,840(0,13)
00005A30 E3F0 C20C 0004          00005368   8362          LG    15,@lit_1945_411 ; rd_slice_crc32
00005A36                                    8363 @@gen_label595 DS    0H
00005A36 05EF                               8364          BALR  14,15
00005A38                                    8365 @@gen_label596 DS    0H
                                            8366 * ***                   do {} while (0);
00005A38                                    8367 @L893    DS    0H
                                            8368 * ***
                                            8369 * ***                   if (((hdr.Crc != calc_crc))) {
00005A38 55F0 D0D4               000000D4   8370          CL    15,212(0,13)
00005A3C 4770 C8EE               00005A4A   8371          BNE   *+14  Around region break
00005A40 E3C0 C208 001A          00005364   8372          ALGF  12,@lit_region_diff_1945_3_4
                                            8373          DROP  12
                        00005B88            8374          USING @REGION_1945_4,12
00005A46 47F0 C2FA               00005E82   8375          B     @L896
                                                                                                                           Page  170 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8376          DROP  12
                        0000515C            8377          USING @REGION_1945_3,12
                                            8378 * ***
                                            8379 * ***
                                            8380 * ***                           rd_kafka_consumer_err(&msetr->msetr_rk\
                                            8381 * q,
                                            8382 * ***                                                 msetr->msetr_bro\
                                            8383 * ker_id,
                                            8384 * ***                                                 RD_KAFKA_RESP_ER\
                                            8385 * R__BAD_MSG,
                                            8386 * ***                                                 msetr->msetr_tve\
                                            8387 * r->version,
                                            8388 * ***                                                 ((void *)0), rkt\
                                            8389 * p,
                                            8390 * ***                                                 hdr.Offset,
                                            8391 * ***                                                 "Message at %sof\
                                            8392 * fset %" "lld"
                                            8393 * ***                                                 reloff_str, hdr.\
                                            8394 * Offset,
                                            8395 * ***                                                 hdr.MessageSize,
                                            8396 * ***                                                 hdr.Crc, calc_cr\
                                            8397 * c);
00005A4A 4110 4068               00000068   8398          LA    1,104(0,4)
00005A4E E310 D348 0024          00000348   8399          STG   1,840(0,13)
00005A54 E310 4040 0014          00000040   8400          LGF   1,64(0,4)
00005A5A E310 D350 0024          00000350   8401          STG   1,848(0,13)
00005A60 E548 D358 FF39          00000358   8402          MVGHI 856(13),-199
00005A66 E310 4038 0004          00000038   8403          LG    1,56(0,4)   ; offset of msetr_tver in rd_kafka_msgset_re*
                                                                ader_s
00005A6C E310 1008 0014          00000008   8404          LGF   1,8(0,1)
00005A72 E310 D360 0024          00000360   8405          STG   1,864(0,13)
00005A78 D707 D368 D368 00000368 00000368   8406          XC    872(8,13),872(13)
00005A7E E360 D370 0024          00000370   8407          STG   6,880(0,13)
00005A84 E310 D0C8 0004          000000C8   8408          LG    1,200(0,13)
00005A8A E310 D378 0024          00000378   8409          STG   1,888(0,13)
                                            8410 * ***                                                 " (%" "d" " byte\
                                            8411 * s) "
                                            8412 * ***                                                 "failed CRC32 ch\
                                            8413 * eck "
                                            8414 * ***                                                 "(original 0x%" \
                                            8415 * "x" " != "
                                            8416 * ***                                                 "calculated 0x%"\
                                            8417 *  "x" ")",
00005A90 E310 C1C4 0004          00005320   8418          LG    1,@lit_1945_348
00005A96 4110 14D0               000004D0   8419          LA    1,1232(0,1)
00005A9A E310 D380 0024          00000380   8420          STG   1,896(0,13)
00005AA0 E370 D388 0024          00000388   8421          STG   7,904(0,13)
00005AA6 E310 D0C8 0004          000000C8   8422          LG    1,200(0,13)
00005AAC E310 D390 0024          00000390   8423          STG   1,912(0,13)
00005AB2 E310 D0D0 0014          000000D0   8424          LGF   1,208(0,13)
00005AB8 E310 D398 0024          00000398   8425          STG   1,920(0,13)
00005ABE E310 D0D4 0016          000000D4   8426          LLGF  1,212(0,13)
                                                                                                                           Page  171 
  Active Usings: @REGION_1945_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005AC4 E310 D3A0 0024          000003A0   8427          STG   1,928(0,13)
00005ACA B916 00FF                          8428          LLGFR 15,15
00005ACE E3F0 D3A8 0024          000003A8   8429          STG   15,936(0,13)
00005AD4 4110 D348               00000348   8430          LA    1,840(0,13)
00005AD8 E3F0 C214 0004          00005370   8431          LG    15,@lit_1945_413 ; rd_kafka_consumer_err
00005ADE                                    8432 @@gen_label598 DS    0H
00005ADE 05EF                               8433          BALR  14,15
00005AE0                                    8434 @@gen_label599 DS    0H
                                            8435 * ***                           do { size_t __len1 = (size_t)(message_\
                                            8436 * end) - rd_slice_offset(&(rkbuf)->rkbuf_reader); if (__len1 && !rd_sl\
                                            8437 * ice_read(&(rkbuf)->rkbuf_reader, ((void *)0), __len1)) do { size_t _\
                                            8438 * _len0 = (size_t)(__len1); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->\
                                            8439 * end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { if (log\
                                            8440 * _decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_cra\
                                            8441 * sh("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",630, __F\
                                            8442 * UNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0\
                                            8443 * ); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); i\
                                            8444 * f (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[2\
                                            8445 * 56]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_lo\
                                            8446 * gname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(\
                                            8447 * &(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf\
                                            8448 * _rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_de\
                                            8449 * code_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "f\
                                            8450 * or %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " \
                                            8451 * bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rk\
                                            8452 * buf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice\
                                            8453 * _offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbu\
                                            8454 * f->rkbuf_reader)->start), __FUNCTION__, 630, __len0, ((&rkbuf->rkbuf\
                                            8455 * _reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->r\
                                            8456 * kbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect b\
                                            8457 * roker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_e\
                                            8458 * rr = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } \
                                            8459 * while (0); } while (0);
00005AE0                                    8460 @L897    DS    0H
00005AE0 41F0 2078               00000078   8461          LA    15,120(0,2)
00005AE4 E3F0 D348 0024          00000348   8462          STG   15,840(0,13)
00005AEA 4110 D348               00000348   8463          LA    1,840(0,13)
00005AEE E3F0 C1F4 0004          00005350   8464          LG    15,@lit_1945_360 ; rd_slice_offset
00005AF4                                    8465 @@gen_label600 DS    0H
00005AF4 05EF                               8466          BALR  14,15
00005AF6                                    8467 @@gen_label601 DS    0H
00005AF6 B90B 00BF                          8468          SLGR  11,15
00005AFA B902 00FB                          8469          LTGR  15,11
00005AFE 4770 C9B0               00005B0C   8470          BNZ   *+14  Around region break
00005B02 E3C0 C208 001A          00005364   8471          ALGF  12,@lit_region_diff_1945_3_4
                                            8472          DROP  12
                        00005B88            8473          USING @REGION_1945_4,12
00005B08 47F0 C2D0               00005E58   8474          B     @L900
                                            8475          DROP  12
                        0000515C            8476          USING @REGION_1945_3,12
00005B0C 41F0 2078               00000078   8477          LA    15,120(0,2)
00005B10 E3F0 D348 0024          00000348   8478          STG   15,840(0,13)
                                                                                                                           Page  172 
  Active Usings: @REGION_1945_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005B16 D707 D350 D350 00000350 00000350   8479          XC    848(8,13),848(13)
00005B1C E3B0 D358 0024          00000358   8480          STG   11,856(0,13)
00005B22 4110 D348               00000348   8481          LA    1,840(0,13)
00005B26 E3F0 C21C 0004          00005378   8482          LG    15,@lit_1945_415 ; rd_slice_read
00005B2C                                    8483 @@gen_label603 DS    0H
00005B2C 05EF                               8484          BALR  14,15
00005B2E                                    8485 @@gen_label604 DS    0H
00005B2E B902 00FF                          8486          LTGR  15,15
00005B32 4780 C9E4               00005B40   8487          BZ    *+14  Around region break
00005B36 E3C0 C208 001A          00005364   8488          ALGF  12,@lit_region_diff_1945_3_4
                                            8489          DROP  12
                        00005B88            8490          USING @REGION_1945_4,12
00005B3C 47F0 C2D0               00005E58   8491          B     @L900
                                            8492          DROP  12
                        0000515C            8493          USING @REGION_1945_3,12
00005B40                                    8494 @L901    DS    0H
00005B40 E350 2098 0004          00000098   8495          LG    5,152(0,2)  ; offset of end in rd_slice_s
00005B46 41F0 2078               00000078   8496          LA    15,120(0,2)
00005B4A E3F0 D348 0024          00000348   8497          STG   15,840(0,13)
00005B50 4110 D348               00000348   8498          LA    1,840(0,13)
00005B54 E3F0 C1AC 0004          00005308   8499          LG    15,@lit_1945_347 ; rd_slice_abs_offset
00005B5A                                    8500 @@gen_label606 DS    0H
00005B5A 05EF                               8501          BALR  14,15
00005B5C                                    8502 @@gen_label607 DS    0H
00005B5C B90B 005F                          8503          SLGR  5,15
00005B60 B921 00B5                          8504          CLGR  11,5
00005B64 4720 CA16               00005B72   8505          BH    *+14  Around region break
00005B68 E3C0 C208 001A          00005364   8506          ALGF  12,@lit_region_diff_1945_3_4
                                            8507          DROP  12
                        00005B88            8508          USING @REGION_1945_4,12
00005B6E 47F0 C2D0               00005E58   8509          B     @L904
                                            8510          DROP  12
                        0000515C            8511          USING @REGION_1945_3,12
00005B72                                    8512 @L905    DS    0H
00005B72 1233                               8513          LTR   3,3
00005B74 4720 CA26               00005B82   8514          BH    *+14  Around region break
00005B78 E3C0 C208 001A          00005364   8515          ALGF  12,@lit_region_diff_1945_3_4
                                            8516          DROP  12
                        00005B88            8517          USING @REGION_1945_4,12
00005B7E 47F0 C2C0               00005E48   8518          B     @L908
                                            8519          DROP  12
                        0000515C            8520          USING @REGION_1945_3,12
00005B82 E3C0 C208 001A          00005364   8521          ALGF  12,@lit_region_diff_1945_3_4
00005B88                                    8522 @REGION_1945_4 DS 0H
                                            8523          DROP  12
                        00005B88            8524          USING @REGION_1945_4,12
00005B88                                    8525 @L909    DS    0H
00005B88 E3F0 2100 0002          00000100   8526          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005B8E 4770 C04C               00005BD4   8527          BNZ   @L912
00005B92 E3F0 C188 0004          00005D10   8528          LG    15,@lit_1945_417
00005B98 4110 F2CE               000002CE   8529          LA    1,718(0,15)
00005B9C E310 D348 0024          00000348   8530          STG   1,840(0,13)
                                                                                                                           Page  173 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005BA2 E548 D350 0276          00000350   8531          MVGHI 848(13),630
00005BA8 E310 C180 0004          00005D08   8532          LG    1,@lit_1945_418
00005BAE 4110 11FA               000001FA   8533          LA    1,506(0,1)
00005BB2 E310 D358 0024          00000358   8534          STG   1,856(0,13)
00005BB8 D707 D360 D360 00000360 00000360   8535          XC    864(8,13),864(13)
00005BBE 41F0 F362               00000362   8536          LA    15,866(0,15)
00005BC2 E3F0 D368 0024          00000368   8537          STG   15,872(0,13)
00005BC8 4110 D348               00000348   8538          LA    1,840(0,13)
00005BCC E3F0 C178 0004          00005D00   8539          LG    15,@lit_1945_419 ; rd_kafka_crash
00005BD2                                    8540 @@gen_label611 DS    0H
00005BD2 05EF                               8541          BALR  14,15
00005BD4                                    8542 @@gen_label612 DS    0H
00005BD4                                    8543 @L912    DS    0H
00005BD4 41F0 D148               00000148   8544          LA    15,328(0,13)
00005BD8 E3F0 D348 0024          00000348   8545          STG   15,840(0,13)
00005BDE E548 D350 0100          00000350   8546          MVGHI 848(13),256
00005BE4 E3F0 C188 0004          00005D10   8547          LG    15,@lit_1945_417
00005BEA 41F0 F37C               0000037C   8548          LA    15,892(0,15)
00005BEE E3F0 D358 0024          00000358   8549          STG   15,856(0,13)
00005BF4 4110 D348               00000348   8550          LA    1,840(0,13)
00005BF8 E3F0 C190 0004          00005D18   8551          LG    15,@lit_1945_421 ; snprintf
00005BFE                                    8552 @@gen_label613 DS    0H
00005BFE 05EF                               8553          BALR  14,15
00005C00                                    8554 @@gen_label614 DS    0H
00005C00 41F0 D148               00000148   8555          LA    15,328(0,13)
00005C04 B904 001F                          8556          LGR   1,15
00005C08 A709 0000               00000000   8557          LGHI  0,0
00005C0C                                    8558 @@gen_label615 DS 0H
00005C0C B25E 000F                          8559          SRST  0,15
00005C10 4710 C084               00005C0C   8560          BC  1,@@gen_label615
00005C14 B90B 0001                          8561          SLGR  0,1
00005C18 A70F 0002               00000002   8562          CGHI  0,2
00005C1C 4770 C09C               00005C24   8563          BNE   @L914
00005C20 9200 D148      00000148 00000000   8564          MVI   328(13),0
00005C24                                    8565 @L913    DS    0H
00005C24                                    8566 @L914    DS    0H
00005C24 E3F0 2100 0004          00000100   8567          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005C2A A759 1638               00001638   8568          LGHI  5,5688      ; 5688
00005C2E 41F5 F000               00000000   8569          LA    15,0(5,15)
00005C32 E3F0 D348 0024          00000348   8570          STG   15,840(0,13)
00005C38 4110 D348               00000348   8571          LA    1,840(0,13)
00005C3C E3F0 C198 0004          00005D20   8572          LG    15,@lit_1945_423 ; mtx_lock
00005C42                                    8573 @@gen_label617 DS    0H
00005C42 05EF                               8574          BALR  14,15
00005C44                                    8575 @@gen_label618 DS    0H
00005C44 41F0 D248               00000248   8576          LA    15,584(0,13)
00005C48 E3F0 D348 0024          00000348   8577          STG   15,840(0,13)
00005C4E E3F0 2100 0004          00000100   8578          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005C54 A719 1630               00001630   8579          LGHI  1,5680      ; 5680
00005C58 E3F1 F000 0004          00000000   8580          LG    15,0(1,15)
00005C5E E3F0 D350 0024          00000350   8581          STG   15,848(0,13)
00005C64 E548 D358 0100          00000358   8582          MVGHI 856(13),256
                                                                                                                           Page  174 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005C6A 4110 D348               00000348   8583          LA    1,840(0,13)
00005C6E E3F0 C1A0 0004          00005D28   8584          LG    15,@lit_1945_425 ; rd_strlcpy
00005C74                                    8585 @@gen_label619 DS    0H
00005C74 05EF                               8586          BALR  14,15
00005C76                                    8587 @@gen_label620 DS    0H
00005C76 E3F0 2100 0004          00000100   8588          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005C7C 41F5 F000               00000000   8589          LA    15,0(5,15)
00005C80 E3F0 D348 0024          00000348   8590          STG   15,840(0,13)
00005C86 4110 D348               00000348   8591          LA    1,840(0,13)
00005C8A E3F0 C1A8 0004          00005D30   8592          LG    15,@lit_1945_427 ; mtx_unlock
00005C90                                    8593 @@gen_label621 DS    0H
00005C90 05EF                               8594          BALR  14,15
00005C92                                    8595 @@gen_label622 DS    0H
00005C92 E3F0 20B8 0015          000000B8   8596          LGH   15,184(0,2)
00005C98 E3F0 D348 0024          00000348   8597          STG   15,840(0,13)
00005C9E 4110 D348               00000348   8598          LA    1,840(0,13)
00005CA2 E3F0 C1B0 0004          00005D38   8599          LG    15,@lit_1945_428 ; rd_kafka_ApiKey2str
00005CA8                                    8600 @@gen_label623 DS    0H
00005CA8 05EF                               8601          BALR  14,15
00005CAA                                    8602 @@gen_label624 DS    0H
00005CAA B904 005F                          8603          LGR   5,15
00005CAE 41F0 2078               00000078   8604          LA    15,120(0,2)
00005CB2 E3F0 D348 0024          00000348   8605          STG   15,840(0,13)
00005CB8 4110 D348               00000348   8606          LA    1,840(0,13)
00005CBC E3F0 C1B8 0004          00005D40   8607          LG    15,@lit_1945_429 ; rd_slice_offset
00005CC2                                    8608 @@gen_label625 DS    0H
00005CC2 05EF                               8609          BALR  14,15
00005CC4                                    8610 @@gen_label626 DS    0H
00005CC4 B904 006F                          8611          LGR   6,15
00005CC8 E370 2098 0004          00000098   8612          LG    7,152(0,2)  ; offset of end in rd_slice_s
00005CCE 41F0 2078               00000078   8613          LA    15,120(0,2)
00005CD2 E3F0 D348 0024          00000348   8614          STG   15,840(0,13)
00005CD8 4110 D348               00000348   8615          LA    1,840(0,13)
00005CDC E3F0 C1C0 0004          00005D48   8616          LG    15,@lit_1945_430 ; rd_slice_abs_offset
00005CE2                                    8617 @@gen_label627 DS    0H
00005CE2 05EF                               8618          BALR  14,15
00005CE4                                    8619 @@gen_label628 DS    0H
00005CE4 B90B 007F                          8620          SLGR  7,15
00005CE8 E3F0 21E8 0002          000001E8   8621          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00005CEE 4780 C1F0               00005D78   8622          BZ    @L917
00005CF2 E3F0 21E8 0004          000001E8   8623          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00005CF8 47F0 C1FA               00005D82   8624          B     @L918
00005D00                                    8625          DS    0D
00005D00 0000000000000000                   8626 @lit_1945_419 DC AD(rd_kafka_crash)
00005D08 0000000000012808                   8627 @lit_1945_418 DC AD(@DATA)
00005D10 0000000000012AB8                   8628 @lit_1945_417 DC AD(@strings@)
00005D18 0000000000000000                   8629 @lit_1945_421 DC AD(snprintf)
00005D20 0000000000000000                   8630 @lit_1945_423 DC AD(mtx_lock)
00005D28 0000000000001668                   8631 @lit_1945_425 DC AD(rd_strlcpy)
00005D30 0000000000000000                   8632 @lit_1945_427 DC AD(mtx_unlock)
                                                                                                                           Page  175 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005D38 00000000000014D0                   8633 @lit_1945_428 DC AD(rd_kafka_$Api$Key2str)
00005D40 00000000000012B8                   8634 @lit_1945_429 DC AD(rd_slice_offset)
00005D48 0000000000001210                   8635 @lit_1945_430 DC AD(rd_slice_abs_offset)
00005D50 0000000000000000                   8636 @lit_1945_434 DC AD(rd_kafka_log0)
00005D58 000009B4                           8637 @lit_region_diff_1945_4_5  DC A(@REGION_1945_5-@REGION_1945_4)
00005D5C 00000000
00005D60 00000000000002F0                   8638 @lit_1945_435 DC AD(rd_atomic64_add)
00005D68 0000000000000000                   8639 @lit_1945_438 DC AD(rd_slice_read)
00005D70 0000000000000000                   8640 @lit_1945_461 DC AD(rd_slice_ensure_contig)
00005D78                                    8641 @L917    DS    0H
00005D78 E3F0 C188 0004          00005D10   8642          LG    15,@lit_1945_417
00005D7E 41F0 F380               00000380   8643          LA    15,896(0,15)
00005D82                                    8644 @L918    DS    0H
00005D82 E310 2100 0004          00000100   8645          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00005D88 E310 1FD0 0004          00000FD0   8646          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00005D8E 4110 1210               00000210   8647          LA    1,528(0,1)
00005D92 E310 D348 0024          00000348   8648          STG   1,840(0,13)
00005D98 E310 2100 0004          00000100   8649          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00005D9E E310 1FD0 0004          00000FD0   8650          LG    1,4048(0,1)
00005DA4 E310 D350 0024          00000350   8651          STG   1,848(0,13)
00005DAA 4110 D248               00000248   8652          LA    1,584(0,13)
00005DAE E310 D358 0024          00000358   8653          STG   1,856(0,13)
00005DB4 B914 0013                          8654          LGFR  1,3
00005DB8 E310 D360 0024          00000360   8655          STG   1,864(0,13)
00005DBE D707 D368 D368 00000368 00000368   8656          XC    872(8,13),872(13)
00005DC4 E310 C188 0004          00005D10   8657          LG    1,@lit_1945_417
00005DCA 4130 13A4               000003A4   8658          LA    3,932(0,1)
00005DCE E330 D370 0024          00000370   8659          STG   3,880(0,13)
00005DD4 4110 13B0               000003B0   8660          LA    1,944(0,1)
00005DD8 E310 D378 0024          00000378   8661          STG   1,888(0,13)
00005DDE E350 D380 0024          00000380   8662          STG   5,896(0,13)
00005DE4 4810 20BA               000000BA   8663          LH    1,186(0,2)
00005DE8 B914 0011                          8664          LGFR  1,1
00005DEC E310 D388 0024          00000388   8665          STG   1,904(0,13)
00005DF2 E360 D390 0024          00000390   8666          STG   6,912(0,13)
00005DF8 E310 2098 0004          00000098   8667          LG    1,152(0,2)  ; offset of end in rd_slice_s
00005DFE E310 2090 000B          00000090   8668          SLG   1,144(0,2)
00005E04 E310 D398 0024          00000398   8669          STG   1,920(0,13)
00005E0A E310 C180 0004          00005D08   8670          LG    1,@lit_1945_418
00005E10 4110 11FA               000001FA   8671          LA    1,506(0,1)
00005E14 E310 D3A0 0024          000003A0   8672          STG   1,928(0,13)
00005E1A E548 D3A8 0276          000003A8   8673          MVGHI 936(13),630
00005E20 E3B0 D3B0 0024          000003B0   8674          STG   11,944(0,13)
00005E26 E370 D3B8 0024          000003B8   8675          STG   7,952(0,13)
00005E2C E3F0 D3C0 0024          000003C0   8676          STG   15,960(0,13)
00005E32 41F0 D148               00000148   8677          LA    15,328(0,13)
00005E36 E3F0 D3C8 0024          000003C8   8678          STG   15,968(0,13)
00005E3C 4110 D348               00000348   8679          LA    1,840(0,13)
00005E40 E3F0 C1C8 0004          00005D50   8680          LG    15,@lit_1945_434 ; rd_kafka_log0
00005E46                                    8681 @@gen_label630 DS    0H
00005E46 05EF                               8682          BALR  14,15
00005E48                                    8683 @@gen_label631 DS    0H
                                                                                                                           Page  176 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005E48                                    8684 @L908    DS    0H
00005E48 E54C 2188 FF65          00000188   8685          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00005E4E E3C0 C1D0 001A          00005D58   8686          ALGF  12,@lit_region_diff_1945_4_5
                                            8687          DROP  12
                        0000653C            8688          USING @REGION_1945_5,12
00005E54 47F0 C796               00006CD2   8689          B     @_err_parse@1945@1
                                            8690          DROP  12
                        00005B88            8691          USING @REGION_1945_4,12
00005E58                                    8692 @L904    DS    0H
00005E58                                    8693 @L900    DS    0H
                                            8694 * ***                           rd_atomic64_add(&rkb->rkb_c.rx_err, 1)\
                                            8695 * ;
00005E58 41F0 82A0               000002A0   8696          LA    15,672(0,8)
00005E5C E3F0 D348 0024          00000348   8697          STG   15,840(0,13)
00005E62 E548 D350 0001          00000350   8698          MVGHI 848(13),1
00005E68 4110 D348               00000348   8699          LA    1,840(0,13)
00005E6C E3F0 C1D8 0004          00005D60   8700          LG    15,@lit_1945_435 ; rd_atomic64_add
00005E72                                    8701 @@gen_label632 DS    0H
00005E72 05EF                               8702          BALR  14,15
00005E74                                    8703 @@gen_label633 DS    0H
                                            8704 * ***
                                            8705 * ***                           return RD_KAFKA_RESP_ERR_NO_ERROR;
00005E74 A7F9 0000               00000000   8706          LGHI  15,0        ; 0
00005E78 E3C0 C1D0 001A          00005D58   8707          ALGF  12,@lit_region_diff_1945_4_5
                                            8708          DROP  12
                        0000653C            8709          USING @REGION_1945_5,12
00005E7E 47F0 C7BE               00006CFA   8710          B     @ret_lab_1945
                                            8711          DROP  12
                        00005B88            8712          USING @REGION_1945_4,12
                                            8713 * ***                   }
00005E82                                    8714 @L896    DS    0H
                                            8715 * ***           }
00005E82                                    8716 @L892    DS    0H
                                            8717 * ***
                                            8718 * ***
                                            8719 * ***
                                            8720 * ***           do { int _klen; do { int32_t _v; do { size_t __len2 = \
                                            8721 * (size_t)(4); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)\
                                            8722 * ) do { size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->\
                                            8723 * rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader)))))\
                                            8724 *  { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb))\
                                            8725 * )) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_rea\
                                            8726 * der.c",639, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rk\
                                            8727 * b"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tm\
                                            8728 * pstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { \
                                            8729 * char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock);\
                                            8730 *  rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname\
                                            8731 * )); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0\
                                            8732 * (&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _\
                                            8733 * logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer\
                                            8734 *  underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expe\
                                            8735 * cted %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafk\
                                                                                                                           Page  177 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8736 * a_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVe\
                                            8737 * rsion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader\
                                            8738 * )->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 639, __len0, \
                                            8739 * ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_rea\
                                            8740 * der)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation\
                                            8741 *  : "incorrect broker.version.fallback?", __tmpstr); } while (0); } (\
                                            8742 * rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } \
                                            8743 * while (0); } } while (0); } while (0); _klen = (int32_t) (_v); } whi\
                                            8744 * le (0); (&Key)->len = _klen; if (((&Key)->len == -1)) { (&Key)->data\
                                            8745 *  = ((void *)0); (&Key)->len = 0; } else if ((((&Key)->len) == -1 ? 0\
                                            8746 * :((&Key)->len)) == 0) (&Key)->data = ""; else if (!((&Key)->data = r\
                                            8747 * d_slice_ensure_contig(&(rkbuf)->rkbuf_reader, _klen))) do { size_t _\
                                            8748 * _len0 = (size_t)(_klen); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->e\
                                            8749 * nd - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { if (log_\
                                            8750 * decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_cras\
                                            8751 * h("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",639, __FU\
                                            8752 * NCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0)\
                                            8753 * ; char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); if\
                                            8754 *  (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[25\
                                            8755 * 6]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_log\
                                            8756 * name, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&\
                                            8757 * (rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_\
                                            8758 * rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_dec\
                                            8759 * ode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "fo\
                                            8760 * r %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " b\
                                            8761 * ytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rkb\
                                            8762 * uf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_\
                                            8763 * offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf\
                                            8764 * ->rkbuf_reader)->start), __FUNCTION__, 639, __len0, ((&rkbuf->rkbuf_\
                                            8765 * reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rk\
                                            8766 * buf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect br\
                                            8767 * oker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_er\
                                            8768 * r = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } w\
                                            8769 * hile (0); } while (0);
00005E82                                    8770 @L919    DS    0H
00005E82                                    8771 @L922    DS    0H
00005E82                                    8772 @L925    DS    0H
00005E82 A759 0004               00000004   8773          LGHI  5,4         ; 4
00005E86 41F0 2078               00000078   8774          LA    15,120(0,2)
00005E8A E3F0 D348 0024          00000348   8775          STG   15,840(0,13)
00005E90 41F0 D0C0               000000C0   8776          LA    15,192(0,13)
00005E94 E3F0 D350 0024          00000350   8777          STG   15,848(0,13)
00005E9A E350 D358 0024          00000358   8778          STG   5,856(0,13)
00005EA0 4110 D348               00000348   8779          LA    1,840(0,13)
00005EA4 E3F0 C1E0 0004          00005D68   8780          LG    15,@lit_1945_438 ; rd_slice_read
00005EAA                                    8781 @@gen_label634 DS    0H
00005EAA 05EF                               8782          BALR  14,15
00005EAC                                    8783 @@gen_label635 DS    0H
00005EAC B902 00FF                          8784          LTGR  15,15
00005EB0 4770 C5AE               00006136   8785          BNZ   @L928
00005EB4                                    8786 @L929    DS    0H
00005EB4 E370 2098 0004          00000098   8787          LG    7,152(0,2)  ; offset of end in rd_slice_s
                                                                                                                           Page  178 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005EBA 41F0 2078               00000078   8788          LA    15,120(0,2)
00005EBE E3F0 D348 0024          00000348   8789          STG   15,840(0,13)
00005EC4 4110 D348               00000348   8790          LA    1,840(0,13)
00005EC8 E3F0 C1C0 0004          00005D48   8791          LG    15,@lit_1945_430 ; rd_slice_abs_offset
00005ECE                                    8792 @@gen_label637 DS    0H
00005ECE 05EF                               8793          BALR  14,15
00005ED0                                    8794 @@gen_label638 DS    0H
00005ED0 B90B 007F                          8795          SLGR  7,15
00005ED4 B921 0057                          8796          CLGR  5,7
00005ED8 47D0 C5AE               00006136   8797          BNH   @L932
00005EDC                                    8798 @L933    DS    0H
00005EDC 1233                               8799          LTR   3,3
00005EDE 47D0 C59E               00006126   8800          BNH   @L936
00005EE2                                    8801 @L937    DS    0H
00005EE2 E3F0 2100 0002          00000100   8802          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005EE8 4770 C3A6               00005F2E   8803          BNZ   @L940
00005EEC E3F0 C188 0004          00005D10   8804          LG    15,@lit_1945_417
00005EF2 4110 F2CE               000002CE   8805          LA    1,718(0,15)
00005EF6 E310 D348 0024          00000348   8806          STG   1,840(0,13)
00005EFC E548 D350 027F          00000350   8807          MVGHI 848(13),639
00005F02 E310 C180 0004          00005D08   8808          LG    1,@lit_1945_418
00005F08 4110 11FA               000001FA   8809          LA    1,506(0,1)
00005F0C E310 D358 0024          00000358   8810          STG   1,856(0,13)
00005F12 D707 D360 D360 00000360 00000360   8811          XC    864(8,13),864(13)
00005F18 41F0 F362               00000362   8812          LA    15,866(0,15)
00005F1C E3F0 D368 0024          00000368   8813          STG   15,872(0,13)
00005F22 4110 D348               00000348   8814          LA    1,840(0,13)
00005F26 E3F0 C178 0004          00005D00   8815          LG    15,@lit_1945_419 ; rd_kafka_crash
00005F2C                                    8816 @@gen_label642 DS    0H
00005F2C 05EF                               8817          BALR  14,15
00005F2E                                    8818 @@gen_label643 DS    0H
00005F2E                                    8819 @L940    DS    0H
00005F2E 41F0 D148               00000148   8820          LA    15,328(0,13)
00005F32 E3F0 D348 0024          00000348   8821          STG   15,840(0,13)
00005F38 E548 D350 0100          00000350   8822          MVGHI 848(13),256
00005F3E E3F0 C188 0004          00005D10   8823          LG    15,@lit_1945_417
00005F44 41F0 F37C               0000037C   8824          LA    15,892(0,15)
00005F48 E3F0 D358 0024          00000358   8825          STG   15,856(0,13)
00005F4E 4110 D348               00000348   8826          LA    1,840(0,13)
00005F52 E3F0 C190 0004          00005D18   8827          LG    15,@lit_1945_421 ; snprintf
00005F58                                    8828 @@gen_label644 DS    0H
00005F58 05EF                               8829          BALR  14,15
00005F5A                                    8830 @@gen_label645 DS    0H
00005F5A 41F0 D148               00000148   8831          LA    15,328(0,13)
00005F5E B904 001F                          8832          LGR   1,15
00005F62 A709 0000               00000000   8833          LGHI  0,0
00005F66                                    8834 @@gen_label646 DS 0H
00005F66 B25E 000F                          8835          SRST  0,15
00005F6A 4710 C3DE               00005F66   8836          BC  1,@@gen_label646
00005F6E B90B 0001                          8837          SLGR  0,1
00005F72 A70F 0002               00000002   8838          CGHI  0,2
00005F76 4770 C3F6               00005F7E   8839          BNE   @L942
                                                                                                                           Page  179 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005F7A 9200 D148      00000148 00000000   8840          MVI   328(13),0
00005F7E                                    8841 @L941    DS    0H
00005F7E                                    8842 @L942    DS    0H
00005F7E E3F0 2100 0004          00000100   8843          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005F84 A769 1638               00001638   8844          LGHI  6,5688      ; 5688
00005F88 41F6 F000               00000000   8845          LA    15,0(6,15)
00005F8C E3F0 D348 0024          00000348   8846          STG   15,840(0,13)
00005F92 4110 D348               00000348   8847          LA    1,840(0,13)
00005F96 E3F0 C198 0004          00005D20   8848          LG    15,@lit_1945_423 ; mtx_lock
00005F9C                                    8849 @@gen_label648 DS    0H
00005F9C 05EF                               8850          BALR  14,15
00005F9E                                    8851 @@gen_label649 DS    0H
00005F9E 41F0 D248               00000248   8852          LA    15,584(0,13)
00005FA2 E3F0 D348 0024          00000348   8853          STG   15,840(0,13)
00005FA8 E3F0 2100 0004          00000100   8854          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005FAE A719 1630               00001630   8855          LGHI  1,5680      ; 5680
00005FB2 E3F1 F000 0004          00000000   8856          LG    15,0(1,15)
00005FB8 E3F0 D350 0024          00000350   8857          STG   15,848(0,13)
00005FBE E548 D358 0100          00000358   8858          MVGHI 856(13),256
00005FC4 4110 D348               00000348   8859          LA    1,840(0,13)
00005FC8 E3F0 C1A0 0004          00005D28   8860          LG    15,@lit_1945_425 ; rd_strlcpy
00005FCE                                    8861 @@gen_label650 DS    0H
00005FCE 05EF                               8862          BALR  14,15
00005FD0                                    8863 @@gen_label651 DS    0H
00005FD0 E3F0 2100 0004          00000100   8864          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00005FD6 41F6 F000               00000000   8865          LA    15,0(6,15)
00005FDA E3F0 D348 0024          00000348   8866          STG   15,840(0,13)
00005FE0 4110 D348               00000348   8867          LA    1,840(0,13)
00005FE4 E3F0 C1A8 0004          00005D30   8868          LG    15,@lit_1945_427 ; mtx_unlock
00005FEA                                    8869 @@gen_label652 DS    0H
00005FEA 05EF                               8870          BALR  14,15
00005FEC                                    8871 @@gen_label653 DS    0H
00005FEC E3F0 20B8 0015          000000B8   8872          LGH   15,184(0,2)
00005FF2 E3F0 D348 0024          00000348   8873          STG   15,840(0,13)
00005FF8 4110 D348               00000348   8874          LA    1,840(0,13)
00005FFC E3F0 C1B0 0004          00005D38   8875          LG    15,@lit_1945_428 ; rd_kafka_ApiKey2str
00006002                                    8876 @@gen_label654 DS    0H
00006002 05EF                               8877          BALR  14,15
00006004                                    8878 @@gen_label655 DS    0H
00006004 B904 006F                          8879          LGR   6,15
00006008 41F0 2078               00000078   8880          LA    15,120(0,2)
0000600C E3F0 D348 0024          00000348   8881          STG   15,840(0,13)
00006012 4110 D348               00000348   8882          LA    1,840(0,13)
00006016 E3F0 C1B8 0004          00005D40   8883          LG    15,@lit_1945_429 ; rd_slice_offset
0000601C                                    8884 @@gen_label656 DS    0H
0000601C 05EF                               8885          BALR  14,15
0000601E                                    8886 @@gen_label657 DS    0H
0000601E B904 007F                          8887          LGR   7,15
00006022 E380 2098 0004          00000098   8888          LG    8,152(0,2)  ; offset of end in rd_slice_s
00006028 41F0 2078               00000078   8889          LA    15,120(0,2)
0000602C E3F0 D348 0024          00000348   8890          STG   15,840(0,13)
00006032 4110 D348               00000348   8891          LA    1,840(0,13)
                                                                                                                           Page  180 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006036 E3F0 C1C0 0004          00005D48   8892          LG    15,@lit_1945_430 ; rd_slice_abs_offset
0000603C                                    8893 @@gen_label658 DS    0H
0000603C 05EF                               8894          BALR  14,15
0000603E                                    8895 @@gen_label659 DS    0H
0000603E B90B 008F                          8896          SLGR  8,15
00006042 E3F0 21E8 0002          000001E8   8897          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00006048 4780 C4CE               00006056   8898          BZ    @L945
0000604C E3F0 21E8 0004          000001E8   8899          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00006052 47F0 C4D8               00006060   8900          B     @L946
00006056                                    8901 @L945    DS    0H
00006056 E3F0 C188 0004          00005D10   8902          LG    15,@lit_1945_417
0000605C 41F0 F380               00000380   8903          LA    15,896(0,15)
00006060                                    8904 @L946    DS    0H
00006060 E310 2100 0004          00000100   8905          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00006066 E310 1FD0 0004          00000FD0   8906          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000606C 4110 1210               00000210   8907          LA    1,528(0,1)
00006070 E310 D348 0024          00000348   8908          STG   1,840(0,13)
00006076 E310 2100 0004          00000100   8909          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000607C E310 1FD0 0004          00000FD0   8910          LG    1,4048(0,1)
00006082 E310 D350 0024          00000350   8911          STG   1,848(0,13)
00006088 4110 D248               00000248   8912          LA    1,584(0,13)
0000608C E310 D358 0024          00000358   8913          STG   1,856(0,13)
00006092 B914 0013                          8914          LGFR  1,3
00006096 E310 D360 0024          00000360   8915          STG   1,864(0,13)
0000609C D707 D368 D368 00000368 00000368   8916          XC    872(8,13),872(13)
000060A2 E310 C188 0004          00005D10   8917          LG    1,@lit_1945_417
000060A8 4130 13A4               000003A4   8918          LA    3,932(0,1)
000060AC E330 D370 0024          00000370   8919          STG   3,880(0,13)
000060B2 4110 13B0               000003B0   8920          LA    1,944(0,1)
000060B6 E310 D378 0024          00000378   8921          STG   1,888(0,13)
000060BC E360 D380 0024          00000380   8922          STG   6,896(0,13)
000060C2 4810 20BA               000000BA   8923          LH    1,186(0,2)
000060C6 B914 0011                          8924          LGFR  1,1
000060CA E310 D388 0024          00000388   8925          STG   1,904(0,13)
000060D0 E370 D390 0024          00000390   8926          STG   7,912(0,13)
000060D6 E310 2098 0004          00000098   8927          LG    1,152(0,2)  ; offset of end in rd_slice_s
000060DC E310 2090 000B          00000090   8928          SLG   1,144(0,2)
000060E2 E310 D398 0024          00000398   8929          STG   1,920(0,13)
000060E8 E310 C180 0004          00005D08   8930          LG    1,@lit_1945_418
000060EE 4110 11FA               000001FA   8931          LA    1,506(0,1)
000060F2 E310 D3A0 0024          000003A0   8932          STG   1,928(0,13)
000060F8 E548 D3A8 027F          000003A8   8933          MVGHI 936(13),639
000060FE E350 D3B0 0024          000003B0   8934          STG   5,944(0,13)
00006104 E380 D3B8 0024          000003B8   8935          STG   8,952(0,13)
0000610A E3F0 D3C0 0024          000003C0   8936          STG   15,960(0,13)
00006110 41F0 D148               00000148   8937          LA    15,328(0,13)
00006114 E3F0 D3C8 0024          000003C8   8938          STG   15,968(0,13)
0000611A 4110 D348               00000348   8939          LA    1,840(0,13)
0000611E E3F0 C1C8 0004          00005D50   8940          LG    15,@lit_1945_434 ; rd_kafka_log0
00006124                                    8941 @@gen_label661 DS    0H
                                                                                                                           Page  181 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006124 05EF                               8942          BALR  14,15
00006126                                    8943 @@gen_label662 DS    0H
00006126                                    8944 @L936    DS    0H
00006126 E54C 2188 FF65          00000188   8945          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000612C E3C0 C1D0 001A          00005D58   8946          ALGF  12,@lit_region_diff_1945_4_5
                                            8947          DROP  12
                        0000653C            8948          USING @REGION_1945_5,12
00006132 47F0 C796               00006CD2   8949          B     @_err_parse@1945@1
                                            8950          DROP  12
                        00005B88            8951          USING @REGION_1945_4,12
00006136                                    8952 @L932    DS    0H
00006136                                    8953 @L928    DS    0H
00006136 5850 D0C0               000000C0   8954          L     5,192(0,13) ; _v
0000613A 5050 D0E8               000000E8   8955          ST    5,232(0,13)
0000613E E55C D0E8 FFFF          000000E8   8956          CHSI  232(13),-1
00006144 4770 C5D4               0000615C   8957          BNE   @L947
00006148 A7F9 0000               00000000   8958          LGHI  15,0        ; 0
0000614C E3F0 D0F0 0024          000000F0   8959          STG   15,240(0,13) ; offset of data in rd_kafkap_bytes_s
00006152 E54C D0E8 0000          000000E8   8960          MVHI  232(13),0
00006158 47F0 C8B8               00006440   8961          B     @L948
0000615C                                    8962 @L947    DS    0H
0000615C E55C D0E8 FFFF          000000E8   8963          CHSI  232(13),-1
00006162 4770 C5E6               0000616E   8964          BNE   @L949
00006166 A7F8 0000               00000000   8965          LHI   15,0        ; 0
0000616A 47F0 C5EA               00006172   8966          B     @L950
0000616E                                    8967 @L949    DS    0H
0000616E 58F0 D0E8               000000E8   8968          L     15,232(0,13)
00006172                                    8969 @L950    DS    0H
00006172 12FF                               8970          LTR   15,15
00006174 4770 C604               0000618C   8971          BNE   @L951
00006178 E3F0 C188 0004          00005D10   8972          LG    15,@lit_1945_417
0000617E 41F0 F0A8               000000A8   8973          LA    15,168(0,15)
00006182 E3F0 D0F0 0024          000000F0   8974          STG   15,240(0,13) ; offset of data in rd_kafkap_bytes_s
00006188 47F0 C8B8               00006440   8975          B     @L948
0000618C                                    8976 @L951    DS    0H
0000618C 41F0 2078               00000078   8977          LA    15,120(0,2)
00006190 E3F0 D348 0024          00000348   8978          STG   15,840(0,13)
00006196 B914 00F5                          8979          LGFR  15,5
0000619A E3F0 D350 0024          00000350   8980          STG   15,848(0,13)
000061A0 4110 D348               00000348   8981          LA    1,840(0,13)
000061A4 E3F0 C1E8 0004          00005D70   8982          LG    15,@lit_1945_461 ; rd_slice_ensure_contig
000061AA                                    8983 @@gen_label666 DS    0H
000061AA 05EF                               8984          BALR  14,15
000061AC                                    8985 @@gen_label667 DS    0H
000061AC E3F0 D0F0 0024          000000F0   8986          STG   15,240(0,13)
000061B2 B902 00FF                          8987          LTGR  15,15
000061B6 4770 C8B8               00006440   8988          BNZ   @L948
000061BA                                    8989 @L954    DS    0H
000061BA B914 0055                          8990          LGFR  5,5
000061BE E370 2098 0004          00000098   8991          LG    7,152(0,2)  ; offset of end in rd_slice_s
000061C4 41F0 2078               00000078   8992          LA    15,120(0,2)
000061C8 E3F0 D348 0024          00000348   8993          STG   15,840(0,13)
                                                                                                                           Page  182 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000061CE 4110 D348               00000348   8994          LA    1,840(0,13)
000061D2 E3F0 C1C0 0004          00005D48   8995          LG    15,@lit_1945_430 ; rd_slice_abs_offset
000061D8                                    8996 @@gen_label669 DS    0H
000061D8 05EF                               8997          BALR  14,15
000061DA                                    8998 @@gen_label670 DS    0H
000061DA B90B 007F                          8999          SLGR  7,15
000061DE B921 0057                          9000          CLGR  5,7
000061E2 47D0 C8B8               00006440   9001          BNH   @L957
000061E6                                    9002 @L958    DS    0H
000061E6 1233                               9003          LTR   3,3
000061E8 47D0 C8A8               00006430   9004          BNH   @L961
000061EC                                    9005 @L962    DS    0H
000061EC E3F0 2100 0002          00000100   9006          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000061F2 4770 C6B0               00006238   9007          BNZ   @L965
000061F6 E3F0 C188 0004          00005D10   9008          LG    15,@lit_1945_417
000061FC 4110 F2CE               000002CE   9009          LA    1,718(0,15)
00006200 E310 D348 0024          00000348   9010          STG   1,840(0,13)
00006206 E548 D350 027F          00000350   9011          MVGHI 848(13),639
0000620C E310 C180 0004          00005D08   9012          LG    1,@lit_1945_418
00006212 4110 11FA               000001FA   9013          LA    1,506(0,1)
00006216 E310 D358 0024          00000358   9014          STG   1,856(0,13)
0000621C D707 D360 D360 00000360 00000360   9015          XC    864(8,13),864(13)
00006222 41F0 F362               00000362   9016          LA    15,866(0,15)
00006226 E3F0 D368 0024          00000368   9017          STG   15,872(0,13)
0000622C 4110 D348               00000348   9018          LA    1,840(0,13)
00006230 E3F0 C178 0004          00005D00   9019          LG    15,@lit_1945_419 ; rd_kafka_crash
00006236                                    9020 @@gen_label674 DS    0H
00006236 05EF                               9021          BALR  14,15
00006238                                    9022 @@gen_label675 DS    0H
00006238                                    9023 @L965    DS    0H
00006238 41F0 D148               00000148   9024          LA    15,328(0,13)
0000623C E3F0 D348 0024          00000348   9025          STG   15,840(0,13)
00006242 E548 D350 0100          00000350   9026          MVGHI 848(13),256
00006248 E3F0 C188 0004          00005D10   9027          LG    15,@lit_1945_417
0000624E 41F0 F37C               0000037C   9028          LA    15,892(0,15)
00006252 E3F0 D358 0024          00000358   9029          STG   15,856(0,13)
00006258 4110 D348               00000348   9030          LA    1,840(0,13)
0000625C E3F0 C190 0004          00005D18   9031          LG    15,@lit_1945_421 ; snprintf
00006262                                    9032 @@gen_label676 DS    0H
00006262 05EF                               9033          BALR  14,15
00006264                                    9034 @@gen_label677 DS    0H
00006264 41F0 D148               00000148   9035          LA    15,328(0,13)
00006268 B904 001F                          9036          LGR   1,15
0000626C A709 0000               00000000   9037          LGHI  0,0
00006270                                    9038 @@gen_label678 DS 0H
00006270 B25E 000F                          9039          SRST  0,15
00006274 4710 C6E8               00006270   9040          BC  1,@@gen_label678
00006278 B90B 0001                          9041          SLGR  0,1
0000627C A70F 0002               00000002   9042          CGHI  0,2
00006280 4770 C700               00006288   9043          BNE   @L967
00006284 9200 D148      00000148 00000000   9044          MVI   328(13),0
00006288                                    9045 @L966    DS    0H
                                                                                                                           Page  183 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006288                                    9046 @L967    DS    0H
00006288 E3F0 2100 0004          00000100   9047          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000628E A769 1638               00001638   9048          LGHI  6,5688      ; 5688
00006292 41F6 F000               00000000   9049          LA    15,0(6,15)
00006296 E3F0 D348 0024          00000348   9050          STG   15,840(0,13)
0000629C 4110 D348               00000348   9051          LA    1,840(0,13)
000062A0 E3F0 C198 0004          00005D20   9052          LG    15,@lit_1945_423 ; mtx_lock
000062A6                                    9053 @@gen_label680 DS    0H
000062A6 05EF                               9054          BALR  14,15
000062A8                                    9055 @@gen_label681 DS    0H
000062A8 41F0 D248               00000248   9056          LA    15,584(0,13)
000062AC E3F0 D348 0024          00000348   9057          STG   15,840(0,13)
000062B2 E3F0 2100 0004          00000100   9058          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000062B8 A719 1630               00001630   9059          LGHI  1,5680      ; 5680
000062BC E3F1 F000 0004          00000000   9060          LG    15,0(1,15)
000062C2 E3F0 D350 0024          00000350   9061          STG   15,848(0,13)
000062C8 E548 D358 0100          00000358   9062          MVGHI 856(13),256
000062CE 4110 D348               00000348   9063          LA    1,840(0,13)
000062D2 E3F0 C1A0 0004          00005D28   9064          LG    15,@lit_1945_425 ; rd_strlcpy
000062D8                                    9065 @@gen_label682 DS    0H
000062D8 05EF                               9066          BALR  14,15
000062DA                                    9067 @@gen_label683 DS    0H
000062DA E3F0 2100 0004          00000100   9068          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000062E0 41F6 F000               00000000   9069          LA    15,0(6,15)
000062E4 E3F0 D348 0024          00000348   9070          STG   15,840(0,13)
000062EA 4110 D348               00000348   9071          LA    1,840(0,13)
000062EE E3F0 C1A8 0004          00005D30   9072          LG    15,@lit_1945_427 ; mtx_unlock
000062F4                                    9073 @@gen_label684 DS    0H
000062F4 05EF                               9074          BALR  14,15
000062F6                                    9075 @@gen_label685 DS    0H
000062F6 E3F0 20B8 0015          000000B8   9076          LGH   15,184(0,2)
000062FC E3F0 D348 0024          00000348   9077          STG   15,840(0,13)
00006302 4110 D348               00000348   9078          LA    1,840(0,13)
00006306 E3F0 C1B0 0004          00005D38   9079          LG    15,@lit_1945_428 ; rd_kafka_ApiKey2str
0000630C                                    9080 @@gen_label686 DS    0H
0000630C 05EF                               9081          BALR  14,15
0000630E                                    9082 @@gen_label687 DS    0H
0000630E B904 006F                          9083          LGR   6,15
00006312 41F0 2078               00000078   9084          LA    15,120(0,2)
00006316 E3F0 D348 0024          00000348   9085          STG   15,840(0,13)
0000631C 4110 D348               00000348   9086          LA    1,840(0,13)
00006320 E3F0 C1B8 0004          00005D40   9087          LG    15,@lit_1945_429 ; rd_slice_offset
00006326                                    9088 @@gen_label688 DS    0H
00006326 05EF                               9089          BALR  14,15
00006328                                    9090 @@gen_label689 DS    0H
00006328 B904 007F                          9091          LGR   7,15
0000632C E380 2098 0004          00000098   9092          LG    8,152(0,2)  ; offset of end in rd_slice_s
00006332 41F0 2078               00000078   9093          LA    15,120(0,2)
00006336 E3F0 D348 0024          00000348   9094          STG   15,840(0,13)
0000633C 4110 D348               00000348   9095          LA    1,840(0,13)
00006340 E3F0 C1C0 0004          00005D48   9096          LG    15,@lit_1945_430 ; rd_slice_abs_offset
00006346                                    9097 @@gen_label690 DS    0H
                                                                                                                           Page  184 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006346 05EF                               9098          BALR  14,15
00006348                                    9099 @@gen_label691 DS    0H
00006348 B90B 008F                          9100          SLGR  8,15
0000634C E3F0 21E8 0002          000001E8   9101          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00006352 4780 C7D8               00006360   9102          BZ    @L970
00006356 E3F0 21E8 0004          000001E8   9103          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000635C 47F0 C7E2               0000636A   9104          B     @L971
00006360                                    9105 @L970    DS    0H
00006360 E3F0 C188 0004          00005D10   9106          LG    15,@lit_1945_417
00006366 41F0 F380               00000380   9107          LA    15,896(0,15)
0000636A                                    9108 @L971    DS    0H
0000636A E310 2100 0004          00000100   9109          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00006370 E310 1FD0 0004          00000FD0   9110          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00006376 4110 1210               00000210   9111          LA    1,528(0,1)
0000637A E310 D348 0024          00000348   9112          STG   1,840(0,13)
00006380 E310 2100 0004          00000100   9113          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00006386 E310 1FD0 0004          00000FD0   9114          LG    1,4048(0,1)
0000638C E310 D350 0024          00000350   9115          STG   1,848(0,13)
00006392 4110 D248               00000248   9116          LA    1,584(0,13)
00006396 E310 D358 0024          00000358   9117          STG   1,856(0,13)
0000639C B914 0013                          9118          LGFR  1,3
000063A0 E310 D360 0024          00000360   9119          STG   1,864(0,13)
000063A6 D707 D368 D368 00000368 00000368   9120          XC    872(8,13),872(13)
000063AC E310 C188 0004          00005D10   9121          LG    1,@lit_1945_417
000063B2 4130 13A4               000003A4   9122          LA    3,932(0,1)
000063B6 E330 D370 0024          00000370   9123          STG   3,880(0,13)
000063BC 4110 13B0               000003B0   9124          LA    1,944(0,1)
000063C0 E310 D378 0024          00000378   9125          STG   1,888(0,13)
000063C6 E360 D380 0024          00000380   9126          STG   6,896(0,13)
000063CC 4810 20BA               000000BA   9127          LH    1,186(0,2)
000063D0 B914 0011                          9128          LGFR  1,1
000063D4 E310 D388 0024          00000388   9129          STG   1,904(0,13)
000063DA E370 D390 0024          00000390   9130          STG   7,912(0,13)
000063E0 E310 2098 0004          00000098   9131          LG    1,152(0,2)  ; offset of end in rd_slice_s
000063E6 E310 2090 000B          00000090   9132          SLG   1,144(0,2)
000063EC E310 D398 0024          00000398   9133          STG   1,920(0,13)
000063F2 E310 C180 0004          00005D08   9134          LG    1,@lit_1945_418
000063F8 4110 11FA               000001FA   9135          LA    1,506(0,1)
000063FC E310 D3A0 0024          000003A0   9136          STG   1,928(0,13)
00006402 E548 D3A8 027F          000003A8   9137          MVGHI 936(13),639
00006408 E350 D3B0 0024          000003B0   9138          STG   5,944(0,13)
0000640E E380 D3B8 0024          000003B8   9139          STG   8,952(0,13)
00006414 E3F0 D3C0 0024          000003C0   9140          STG   15,960(0,13)
0000641A 41F0 D148               00000148   9141          LA    15,328(0,13)
0000641E E3F0 D3C8 0024          000003C8   9142          STG   15,968(0,13)
00006424 4110 D348               00000348   9143          LA    1,840(0,13)
00006428 E3F0 C1C8 0004          00005D50   9144          LG    15,@lit_1945_434 ; rd_kafka_log0
0000642E                                    9145 @@gen_label693 DS    0H
0000642E 05EF                               9146          BALR  14,15
00006430                                    9147 @@gen_label694 DS    0H
                                                                                                                           Page  185 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006430                                    9148 @L961    DS    0H
00006430 E54C 2188 FF65          00000188   9149          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00006436 E3C0 C1D0 001A          00005D58   9150          ALGF  12,@lit_region_diff_1945_4_5
                                            9151          DROP  12
                        0000653C            9152          USING @REGION_1945_5,12
0000643C 47F0 C796               00006CD2   9153          B     @_err_parse@1945@1
                                            9154          DROP  12
                        00005B88            9155          USING @REGION_1945_4,12
00006440                                    9156 @L957    DS    0H
00006440                                    9157 @L953    DS    0H
00006440                                    9158 @L952    DS    0H
00006440                                    9159 @L948    DS    0H
                                            9160 * ***
                                            9161 * ***
                                            9162 * ***           do { int _klen; do { int32_t _v; do { size_t __len2 = \
                                            9163 * (size_t)(4); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)\
                                            9164 * ) do { size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->\
                                            9165 * rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader)))))\
                                            9166 *  { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb))\
                                            9167 * )) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_rea\
                                            9168 * der.c",642, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rk\
                                            9169 * b"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tm\
                                            9170 * pstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { \
                                            9171 * char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock);\
                                            9172 *  rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname\
                                            9173 * )); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0\
                                            9174 * (&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _\
                                            9175 * logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer\
                                            9176 *  underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expe\
                                            9177 * cted %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafk\
                                            9178 * a_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVe\
                                            9179 * rsion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader\
                                            9180 * )->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 642, __len0, \
                                            9181 * ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_rea\
                                            9182 * der)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation\
                                            9183 *  : "incorrect broker.version.fallback?", __tmpstr); } while (0); } (\
                                            9184 * rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } \
                                            9185 * while (0); } } while (0); } while (0); _klen = (int32_t) (_v); } whi\
                                            9186 * le (0); (&Value)->len = _klen; if (((&Value)->len == -1)) { (&Value)\
                                            9187 * ->data = ((void *)0); (&Value)->len = 0; } else if ((((&Value)->len)\
                                            9188 *  == -1 ? 0:((&Value)->len)) == 0) (&Value)->data = ""; else if (!((&\
                                            9189 * Value)->data = rd_slice_ensure_contig(&(rkbuf)->rkbuf_reader, _klen)\
                                            9190 * )) do { size_t __len0 = (size_t)(_klen); if (((__len0 > ((&(rkbuf)->\
                                            9191 * rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader)))))\
                                            9192 *  { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb))\
                                            9193 * )) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_rea\
                                            9194 * der.c",642, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rk\
                                            9195 * b"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tm\
                                            9196 * pstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { \
                                            9197 * char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock);\
                                            9198 *  rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname\
                                            9199 * )); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0\
                                                                                                                           Page  186 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9200 * (&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _\
                                            9201 * logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer\
                                            9202 *  underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expe\
                                            9203 * cted %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafk\
                                            9204 * a_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVe\
                                            9205 * rsion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader\
                                            9206 * )->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 642, __len0, \
                                            9207 * ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_rea\
                                            9208 * der)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation\
                                            9209 *  : "incorrect broker.version.fallback?", __tmpstr); } while (0); } (\
                                            9210 * rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } \
                                            9211 * while (0); } } while (0); } while (0);
00006440                                    9212 @L972    DS    0H
00006440                                    9213 @L975    DS    0H
00006440                                    9214 @L978    DS    0H
00006440 A759 0004               00000004   9215          LGHI  5,4         ; 4
00006444 41F0 2078               00000078   9216          LA    15,120(0,2)
00006448 E3F0 D348 0024          00000348   9217          STG   15,840(0,13)
0000644E 41F0 D0C4               000000C4   9218          LA    15,196(0,13)
00006452 E3F0 D350 0024          00000350   9219          STG   15,848(0,13)
00006458 E350 D358 0024          00000358   9220          STG   5,856(0,13)
0000645E 4110 D348               00000348   9221          LA    1,840(0,13)
00006462 E3F0 C1E0 0004          00005D68   9222          LG    15,@lit_1945_438 ; rd_slice_read
00006468                                    9223 @@gen_label695 DS    0H
00006468 05EF                               9224          BALR  14,15
0000646A                                    9225 @@gen_label696 DS    0H
0000646A B902 00FF                          9226          LTGR  15,15
0000646E 4780 C8F4               0000647C   9227          BZ    *+14  Around region break
00006472 E3C0 C1D0 001A          00005D58   9228          ALGF  12,@lit_region_diff_1945_4_5
                                            9229          DROP  12
                        0000653C            9230          USING @REGION_1945_5,12
00006478 47F0 C256               00006792   9231          B     @L981
                                            9232          DROP  12
                        00005B88            9233          USING @REGION_1945_4,12
0000647C                                    9234 @L982    DS    0H
0000647C E370 2098 0004          00000098   9235          LG    7,152(0,2)  ; offset of end in rd_slice_s
00006482 41F0 2078               00000078   9236          LA    15,120(0,2)
00006486 E3F0 D348 0024          00000348   9237          STG   15,840(0,13)
0000648C 4110 D348               00000348   9238          LA    1,840(0,13)
00006490 E3F0 C1C0 0004          00005D48   9239          LG    15,@lit_1945_430 ; rd_slice_abs_offset
00006496                                    9240 @@gen_label698 DS    0H
00006496 05EF                               9241          BALR  14,15
00006498                                    9242 @@gen_label699 DS    0H
00006498 B90B 007F                          9243          SLGR  7,15
0000649C B921 0057                          9244          CLGR  5,7
000064A0 4720 C926               000064AE   9245          BH    *+14  Around region break
000064A4 E3C0 C1D0 001A          00005D58   9246          ALGF  12,@lit_region_diff_1945_4_5
                                            9247          DROP  12
                        0000653C            9248          USING @REGION_1945_5,12
000064AA 47F0 C256               00006792   9249          B     @L985
                                            9250          DROP  12
                        00005B88            9251          USING @REGION_1945_4,12
                                                                                                                           Page  187 
  Active Usings: @REGION_1945_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000064AE                                    9252 @L986    DS    0H
000064AE 1233                               9253          LTR   3,3
000064B0 4720 C936               000064BE   9254          BH    *+14  Around region break
000064B4 E3C0 C1D0 001A          00005D58   9255          ALGF  12,@lit_region_diff_1945_4_5
                                            9256          DROP  12
                        0000653C            9257          USING @REGION_1945_5,12
000064BA 47F0 C24C               00006788   9258          B     @L989
                                            9259          DROP  12
                        00005B88            9260          USING @REGION_1945_4,12
000064BE                                    9261 @L990    DS    0H
000064BE E3F0 2100 0002          00000100   9262          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000064C4 4770 C982               0000650A   9263          BNZ   @L993
000064C8 E3F0 C188 0004          00005D10   9264          LG    15,@lit_1945_417
000064CE 4110 F2CE               000002CE   9265          LA    1,718(0,15)
000064D2 E310 D348 0024          00000348   9266          STG   1,840(0,13)
000064D8 E548 D350 0282          00000350   9267          MVGHI 848(13),642
000064DE E310 C180 0004          00005D08   9268          LG    1,@lit_1945_418
000064E4 4110 11FA               000001FA   9269          LA    1,506(0,1)
000064E8 E310 D358 0024          00000358   9270          STG   1,856(0,13)
000064EE D707 D360 D360 00000360 00000360   9271          XC    864(8,13),864(13)
000064F4 41F0 F362               00000362   9272          LA    15,866(0,15)
000064F8 E3F0 D368 0024          00000368   9273          STG   15,872(0,13)
000064FE 4110 D348               00000348   9274          LA    1,840(0,13)
00006502 E3F0 C178 0004          00005D00   9275          LG    15,@lit_1945_419 ; rd_kafka_crash
00006508                                    9276 @@gen_label703 DS    0H
00006508 05EF                               9277          BALR  14,15
0000650A                                    9278 @@gen_label704 DS    0H
0000650A                                    9279 @L993    DS    0H
0000650A 41F0 D148               00000148   9280          LA    15,328(0,13)
0000650E E3F0 D348 0024          00000348   9281          STG   15,840(0,13)
00006514 E548 D350 0100          00000350   9282          MVGHI 848(13),256
0000651A E3F0 C188 0004          00005D10   9283          LG    15,@lit_1945_417
00006520 41F0 F37C               0000037C   9284          LA    15,892(0,15)
00006524 E3F0 D358 0024          00000358   9285          STG   15,856(0,13)
0000652A 4110 D348               00000348   9286          LA    1,840(0,13)
0000652E E3F0 C190 0004          00005D18   9287          LG    15,@lit_1945_421 ; snprintf
00006534                                    9288 @@gen_label705 DS    0H
00006534 05EF                               9289          BALR  14,15
00006536                                    9290 @@gen_label706 DS    0H
00006536 E3C0 C1D0 001A          00005D58   9291          ALGF  12,@lit_region_diff_1945_4_5
0000653C                                    9292 @REGION_1945_5 DS 0H
                                            9293          DROP  12
                        0000653C            9294          USING @REGION_1945_5,12
0000653C 41F0 D148               00000148   9295          LA    15,328(0,13)
00006540 B904 001F                          9296          LGR   1,15
00006544 A709 0000               00000000   9297          LGHI  0,0
00006548                                    9298 @@gen_label707 DS 0H
00006548 B25E 000F                          9299          SRST  0,15
0000654C 4710 C00C               00006548   9300          BC  1,@@gen_label707
00006550 B90B 0001                          9301          SLGR  0,1
00006554 A70F 0002               00000002   9302          CGHI  0,2
00006558 4770 C024               00006560   9303          BNE   @L995
                                                                                                                           Page  188 
  Active Usings: @REGION_1945_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000655C 9200 D148      00000148 00000000   9304          MVI   328(13),0
00006560                                    9305 @L994    DS    0H
00006560                                    9306 @L995    DS    0H
00006560 E3F0 2100 0004          00000100   9307          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006566 A769 1638               00001638   9308          LGHI  6,5688      ; 5688
0000656A 41F6 F000               00000000   9309          LA    15,0(6,15)
0000656E E3F0 D348 0024          00000348   9310          STG   15,840(0,13)
00006574 4110 D348               00000348   9311          LA    1,840(0,13)
00006578 E3F0 C0FC 0004          00006638   9312          LG    15,@lit_1945_490 ; mtx_lock
0000657E                                    9313 @@gen_label709 DS    0H
0000657E 05EF                               9314          BALR  14,15
00006580                                    9315 @@gen_label710 DS    0H
00006580 41F0 D248               00000248   9316          LA    15,584(0,13)
00006584 E3F0 D348 0024          00000348   9317          STG   15,840(0,13)
0000658A E3F0 2100 0004          00000100   9318          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006590 A719 1630               00001630   9319          LGHI  1,5680      ; 5680
00006594 E3F1 F000 0004          00000000   9320          LG    15,0(1,15)
0000659A E3F0 D350 0024          00000350   9321          STG   15,848(0,13)
000065A0 E548 D358 0100          00000358   9322          MVGHI 856(13),256
000065A6 4110 D348               00000348   9323          LA    1,840(0,13)
000065AA E3F0 C104 0004          00006640   9324          LG    15,@lit_1945_492 ; rd_strlcpy
000065B0                                    9325 @@gen_label711 DS    0H
000065B0 05EF                               9326          BALR  14,15
000065B2                                    9327 @@gen_label712 DS    0H
000065B2 E3F0 2100 0004          00000100   9328          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000065B8 41F6 F000               00000000   9329          LA    15,0(6,15)
000065BC E3F0 D348 0024          00000348   9330          STG   15,840(0,13)
000065C2 4110 D348               00000348   9331          LA    1,840(0,13)
000065C6 E3F0 C10C 0004          00006648   9332          LG    15,@lit_1945_494 ; mtx_unlock
000065CC                                    9333 @@gen_label713 DS    0H
000065CC 05EF                               9334          BALR  14,15
000065CE                                    9335 @@gen_label714 DS    0H
000065CE E3F0 20B8 0015          000000B8   9336          LGH   15,184(0,2)
000065D4 E3F0 D348 0024          00000348   9337          STG   15,840(0,13)
000065DA 4110 D348               00000348   9338          LA    1,840(0,13)
000065DE E3F0 C114 0004          00006650   9339          LG    15,@lit_1945_495 ; rd_kafka_ApiKey2str
000065E4                                    9340 @@gen_label715 DS    0H
000065E4 05EF                               9341          BALR  14,15
000065E6                                    9342 @@gen_label716 DS    0H
000065E6 B904 006F                          9343          LGR   6,15
000065EA 41F0 2078               00000078   9344          LA    15,120(0,2)
000065EE E3F0 D348 0024          00000348   9345          STG   15,840(0,13)
000065F4 4110 D348               00000348   9346          LA    1,840(0,13)
000065F8 E3F0 C11C 0004          00006658   9347          LG    15,@lit_1945_496 ; rd_slice_offset
000065FE                                    9348 @@gen_label717 DS    0H
000065FE 05EF                               9349          BALR  14,15
00006600                                    9350 @@gen_label718 DS    0H
00006600 B904 007F                          9351          LGR   7,15
00006604 E380 2098 0004          00000098   9352          LG    8,152(0,2)  ; offset of end in rd_slice_s
0000660A 41F0 2078               00000078   9353          LA    15,120(0,2)
0000660E E3F0 D348 0024          00000348   9354          STG   15,840(0,13)
00006614 4110 D348               00000348   9355          LA    1,840(0,13)
                                                                                                                           Page  189 
  Active Usings: @REGION_1945_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006618 E3F0 C124 0004          00006660   9356          LG    15,@lit_1945_497 ; rd_slice_abs_offset
0000661E                                    9357 @@gen_label719 DS    0H
0000661E 05EF                               9358          BALR  14,15
00006620                                    9359 @@gen_label720 DS    0H
00006620 B90B 008F                          9360          SLGR  8,15
00006624 E3F0 21E8 0002          000001E8   9361          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000662A 4780 C17C               000066B8   9362          BZ    @L998
0000662E E3F0 21E8 0004          000001E8   9363          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00006634 47F0 C186               000066C2   9364          B     @L999
00006638                                    9365          DS    0D
00006638 0000000000000000                   9366 @lit_1945_490 DC AD(mtx_lock)
00006640 0000000000001668                   9367 @lit_1945_492 DC AD(rd_strlcpy)
00006648 0000000000000000                   9368 @lit_1945_494 DC AD(mtx_unlock)
00006650 00000000000014D0                   9369 @lit_1945_495 DC AD(rd_kafka_$Api$Key2str)
00006658 00000000000012B8                   9370 @lit_1945_496 DC AD(rd_slice_offset)
00006660 0000000000001210                   9371 @lit_1945_497 DC AD(rd_slice_abs_offset)
00006668 0000000000012AB8                   9372 @lit_1945_498 DC AD(@strings@)
00006670 0000000000000000                   9373 @lit_1945_501 DC AD(rd_kafka_log0)
00006678 0000000000012808                   9374 @lit_1945_500 DC AD(@DATA)
00006680 0000000000000000                   9375 @lit_1945_505 DC AD(rd_slice_ensure_contig)
00006688 0000000000000000                   9376 @lit_1945_509 DC AD(rd_kafka_crash)
00006690 0000000000000000                   9377 @lit_1945_511 DC AD(snprintf)
00006698 00000000000032E8                   9378 @lit_1945_527 DC AD(rd_kafka_msgset_reader_decompress)
000066A0 0000000000000000                   9379 @lit_1945_532 DC AD(rd_kafka_op_new_fetch_msg)
000066A8 00000000000026D0                   9380 @lit_1945_533 DC AD(rd_kafka_q_enq)
000066B0 00000000000002F0                   9381 @lit_1945_535 DC AD(rd_atomic64_add)
000066B8                                    9382 @L998    DS    0H
000066B8 E3F0 C12C 0004          00006668   9383          LG    15,@lit_1945_498
000066BE 41F0 F380               00000380   9384          LA    15,896(0,15)
000066C2                                    9385 @L999    DS    0H
000066C2 E310 2100 0004          00000100   9386          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000066C8 E310 1FD0 0004          00000FD0   9387          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000066CE 4110 1210               00000210   9388          LA    1,528(0,1)
000066D2 E310 D348 0024          00000348   9389          STG   1,840(0,13)
000066D8 E310 2100 0004          00000100   9390          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000066DE E310 1FD0 0004          00000FD0   9391          LG    1,4048(0,1)
000066E4 E310 D350 0024          00000350   9392          STG   1,848(0,13)
000066EA 4110 D248               00000248   9393          LA    1,584(0,13)
000066EE E310 D358 0024          00000358   9394          STG   1,856(0,13)
000066F4 B914 0013                          9395          LGFR  1,3
000066F8 E310 D360 0024          00000360   9396          STG   1,864(0,13)
000066FE D707 D368 D368 00000368 00000368   9397          XC    872(8,13),872(13)
00006704 E310 C12C 0004          00006668   9398          LG    1,@lit_1945_498
0000670A 4130 13A4               000003A4   9399          LA    3,932(0,1)
0000670E E330 D370 0024          00000370   9400          STG   3,880(0,13)
00006714 4110 13B0               000003B0   9401          LA    1,944(0,1)
00006718 E310 D378 0024          00000378   9402          STG   1,888(0,13)
0000671E E360 D380 0024          00000380   9403          STG   6,896(0,13)
00006724 4810 20BA               000000BA   9404          LH    1,186(0,2)
00006728 B914 0011                          9405          LGFR  1,1
                                                                                                                           Page  190 
  Active Usings: @REGION_1945_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000672C E310 D388 0024          00000388   9406          STG   1,904(0,13)
00006732 E370 D390 0024          00000390   9407          STG   7,912(0,13)
00006738 E310 2098 0004          00000098   9408          LG    1,152(0,2)  ; offset of end in rd_slice_s
0000673E E310 2090 000B          00000090   9409          SLG   1,144(0,2)
00006744 E310 D398 0024          00000398   9410          STG   1,920(0,13)
0000674A E310 C13C 0004          00006678   9411          LG    1,@lit_1945_500
00006750 4110 11FA               000001FA   9412          LA    1,506(0,1)
00006754 E310 D3A0 0024          000003A0   9413          STG   1,928(0,13)
0000675A E548 D3A8 0282          000003A8   9414          MVGHI 936(13),642
00006760 E350 D3B0 0024          000003B0   9415          STG   5,944(0,13)
00006766 E380 D3B8 0024          000003B8   9416          STG   8,952(0,13)
0000676C E3F0 D3C0 0024          000003C0   9417          STG   15,960(0,13)
00006772 41F0 D148               00000148   9418          LA    15,328(0,13)
00006776 E3F0 D3C8 0024          000003C8   9419          STG   15,968(0,13)
0000677C 4110 D348               00000348   9420          LA    1,840(0,13)
00006780 E3F0 C134 0004          00006670   9421          LG    15,@lit_1945_501 ; rd_kafka_log0
00006786                                    9422 @@gen_label722 DS    0H
00006786 05EF                               9423          BALR  14,15
00006788                                    9424 @@gen_label723 DS    0H
00006788                                    9425 @L989    DS    0H
00006788 E54C 2188 FF65          00000188   9426          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000678E 47F0 C796               00006CD2   9427          B     @_err_parse@1945@1
00006792                                    9428 @L985    DS    0H
00006792                                    9429 @L981    DS    0H
00006792 5850 D0C4               000000C4   9430          L     5,196(0,13) ; _v
00006796 5050 D100               00000100   9431          ST    5,256(0,13)
0000679A E55C D100 FFFF          00000100   9432          CHSI  256(13),-1
000067A0 4770 C27C               000067B8   9433          BNE   @L1000
000067A4 A7F9 0000               00000000   9434          LGHI  15,0        ; 0
000067A8 E3F0 D108 0024          00000108   9435          STG   15,264(0,13) ; offset of data in rd_kafkap_bytes_s
000067AE E54C D100 0000          00000100   9436          MVHI  256(13),0
000067B4 47F0 C55A               00006A96   9437          B     @L1001
000067B8                                    9438 @L1000   DS    0H
000067B8 E55C D100 FFFF          00000100   9439          CHSI  256(13),-1
000067BE 4770 C28E               000067CA   9440          BNE   @L1002
000067C2 A7F8 0000               00000000   9441          LHI   15,0        ; 0
000067C6 47F0 C292               000067CE   9442          B     @L1003
000067CA                                    9443 @L1002   DS    0H
000067CA 58F0 D100               00000100   9444          L     15,256(0,13)
000067CE                                    9445 @L1003   DS    0H
000067CE 12FF                               9446          LTR   15,15
000067D0 4770 C2AC               000067E8   9447          BNE   @L1004
000067D4 E3F0 C12C 0004          00006668   9448          LG    15,@lit_1945_498
000067DA 41F0 F0A8               000000A8   9449          LA    15,168(0,15)
000067DE E3F0 D108 0024          00000108   9450          STG   15,264(0,13) ; offset of data in rd_kafkap_bytes_s
000067E4 47F0 C55A               00006A96   9451          B     @L1001
000067E8                                    9452 @L1004   DS    0H
000067E8 41F0 2078               00000078   9453          LA    15,120(0,2)
000067EC E3F0 D348 0024          00000348   9454          STG   15,840(0,13)
000067F2 B914 00F5                          9455          LGFR  15,5
000067F6 E3F0 D350 0024          00000350   9456          STG   15,848(0,13)
000067FC 4110 D348               00000348   9457          LA    1,840(0,13)
                                                                                                                           Page  191 
  Active Usings: @REGION_1945_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006800 E3F0 C144 0004          00006680   9458          LG    15,@lit_1945_505 ; rd_slice_ensure_contig
00006806                                    9459 @@gen_label727 DS    0H
00006806 05EF                               9460          BALR  14,15
00006808                                    9461 @@gen_label728 DS    0H
00006808 E3F0 D108 0024          00000108   9462          STG   15,264(0,13)
0000680E B902 00FF                          9463          LTGR  15,15
00006812 4770 C55A               00006A96   9464          BNZ   @L1001
00006816                                    9465 @L1007   DS    0H
00006816 B914 0055                          9466          LGFR  5,5
0000681A E370 2098 0004          00000098   9467          LG    7,152(0,2)  ; offset of end in rd_slice_s
00006820 41F0 2078               00000078   9468          LA    15,120(0,2)
00006824 E3F0 D348 0024          00000348   9469          STG   15,840(0,13)
0000682A 4110 D348               00000348   9470          LA    1,840(0,13)
0000682E E3F0 C124 0004          00006660   9471          LG    15,@lit_1945_497 ; rd_slice_abs_offset
00006834                                    9472 @@gen_label730 DS    0H
00006834 05EF                               9473          BALR  14,15
00006836                                    9474 @@gen_label731 DS    0H
00006836 B90B 007F                          9475          SLGR  7,15
0000683A B921 0057                          9476          CLGR  5,7
0000683E 47D0 C55A               00006A96   9477          BNH   @L1010
00006842                                    9478 @L1011   DS    0H
00006842 1233                               9479          LTR   3,3
00006844 47D0 C550               00006A8C   9480          BNH   @L1014
00006848                                    9481 @L1015   DS    0H
00006848 E3F0 2100 0002          00000100   9482          LTG   15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000684E 4770 C358               00006894   9483          BNZ   @L1018
00006852 E3F0 C12C 0004          00006668   9484          LG    15,@lit_1945_498
00006858 4110 F2CE               000002CE   9485          LA    1,718(0,15)
0000685C E310 D348 0024          00000348   9486          STG   1,840(0,13)
00006862 E548 D350 0282          00000350   9487          MVGHI 848(13),642
00006868 E310 C13C 0004          00006678   9488          LG    1,@lit_1945_500
0000686E 4110 11FA               000001FA   9489          LA    1,506(0,1)
00006872 E310 D358 0024          00000358   9490          STG   1,856(0,13)
00006878 D707 D360 D360 00000360 00000360   9491          XC    864(8,13),864(13)
0000687E 41F0 F362               00000362   9492          LA    15,866(0,15)
00006882 E3F0 D368 0024          00000368   9493          STG   15,872(0,13)
00006888 4110 D348               00000348   9494          LA    1,840(0,13)
0000688C E3F0 C14C 0004          00006688   9495          LG    15,@lit_1945_509 ; rd_kafka_crash
00006892                                    9496 @@gen_label735 DS    0H
00006892 05EF                               9497          BALR  14,15
00006894                                    9498 @@gen_label736 DS    0H
00006894                                    9499 @L1018   DS    0H
00006894 41F0 D148               00000148   9500          LA    15,328(0,13)
00006898 E3F0 D348 0024          00000348   9501          STG   15,840(0,13)
0000689E E548 D350 0100          00000350   9502          MVGHI 848(13),256
000068A4 E3F0 C12C 0004          00006668   9503          LG    15,@lit_1945_498
000068AA 41F0 F37C               0000037C   9504          LA    15,892(0,15)
000068AE E3F0 D358 0024          00000358   9505          STG   15,856(0,13)
000068B4 4110 D348               00000348   9506          LA    1,840(0,13)
000068B8 E3F0 C154 0004          00006690   9507          LG    15,@lit_1945_511 ; snprintf
000068BE                                    9508 @@gen_label737 DS    0H
000068BE 05EF                               9509          BALR  14,15
                                                                                                                           Page  192 
  Active Usings: @REGION_1945_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000068C0                                    9510 @@gen_label738 DS    0H
000068C0 41F0 D148               00000148   9511          LA    15,328(0,13)
000068C4 B904 001F                          9512          LGR   1,15
000068C8 A709 0000               00000000   9513          LGHI  0,0
000068CC                                    9514 @@gen_label739 DS 0H
000068CC B25E 000F                          9515          SRST  0,15
000068D0 4710 C390               000068CC   9516          BC  1,@@gen_label739
000068D4 B90B 0001                          9517          SLGR  0,1
000068D8 A70F 0002               00000002   9518          CGHI  0,2
000068DC 4770 C3A8               000068E4   9519          BNE   @L1020
000068E0 9200 D148      00000148 00000000   9520          MVI   328(13),0
000068E4                                    9521 @L1019   DS    0H
000068E4                                    9522 @L1020   DS    0H
000068E4 E3F0 2100 0004          00000100   9523          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
000068EA A769 1638               00001638   9524          LGHI  6,5688      ; 5688
000068EE 41F6 F000               00000000   9525          LA    15,0(6,15)
000068F2 E3F0 D348 0024          00000348   9526          STG   15,840(0,13)
000068F8 4110 D348               00000348   9527          LA    1,840(0,13)
000068FC E3F0 C0FC 0004          00006638   9528          LG    15,@lit_1945_490 ; mtx_lock
00006902                                    9529 @@gen_label741 DS    0H
00006902 05EF                               9530          BALR  14,15
00006904                                    9531 @@gen_label742 DS    0H
00006904 41F0 D248               00000248   9532          LA    15,584(0,13)
00006908 E3F0 D348 0024          00000348   9533          STG   15,840(0,13)
0000690E E3F0 2100 0004          00000100   9534          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006914 A719 1630               00001630   9535          LGHI  1,5680      ; 5680
00006918 E3F1 F000 0004          00000000   9536          LG    15,0(1,15)
0000691E E3F0 D350 0024          00000350   9537          STG   15,848(0,13)
00006924 E548 D358 0100          00000358   9538          MVGHI 856(13),256
0000692A 4110 D348               00000348   9539          LA    1,840(0,13)
0000692E E3F0 C104 0004          00006640   9540          LG    15,@lit_1945_492 ; rd_strlcpy
00006934                                    9541 @@gen_label743 DS    0H
00006934 05EF                               9542          BALR  14,15
00006936                                    9543 @@gen_label744 DS    0H
00006936 E3F0 2100 0004          00000100   9544          LG    15,256(0,2) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000693C 41F6 F000               00000000   9545          LA    15,0(6,15)
00006940 E3F0 D348 0024          00000348   9546          STG   15,840(0,13)
00006946 4110 D348               00000348   9547          LA    1,840(0,13)
0000694A E3F0 C10C 0004          00006648   9548          LG    15,@lit_1945_494 ; mtx_unlock
00006950                                    9549 @@gen_label745 DS    0H
00006950 05EF                               9550          BALR  14,15
00006952                                    9551 @@gen_label746 DS    0H
00006952 E3F0 20B8 0015          000000B8   9552          LGH   15,184(0,2)
00006958 E3F0 D348 0024          00000348   9553          STG   15,840(0,13)
0000695E 4110 D348               00000348   9554          LA    1,840(0,13)
00006962 E3F0 C114 0004          00006650   9555          LG    15,@lit_1945_495 ; rd_kafka_ApiKey2str
00006968                                    9556 @@gen_label747 DS    0H
00006968 05EF                               9557          BALR  14,15
0000696A                                    9558 @@gen_label748 DS    0H
0000696A B904 006F                          9559          LGR   6,15
0000696E 41F0 2078               00000078   9560          LA    15,120(0,2)
00006972 E3F0 D348 0024          00000348   9561          STG   15,840(0,13)
                                                                                                                           Page  193 
  Active Usings: @REGION_1945_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006978 4110 D348               00000348   9562          LA    1,840(0,13)
0000697C E3F0 C11C 0004          00006658   9563          LG    15,@lit_1945_496 ; rd_slice_offset
00006982                                    9564 @@gen_label749 DS    0H
00006982 05EF                               9565          BALR  14,15
00006984                                    9566 @@gen_label750 DS    0H
00006984 B904 007F                          9567          LGR   7,15
00006988 E380 2098 0004          00000098   9568          LG    8,152(0,2)  ; offset of end in rd_slice_s
0000698E 41F0 2078               00000078   9569          LA    15,120(0,2)
00006992 E3F0 D348 0024          00000348   9570          STG   15,840(0,13)
00006998 4110 D348               00000348   9571          LA    1,840(0,13)
0000699C E3F0 C124 0004          00006660   9572          LG    15,@lit_1945_497 ; rd_slice_abs_offset
000069A2                                    9573 @@gen_label751 DS    0H
000069A2 05EF                               9574          BALR  14,15
000069A4                                    9575 @@gen_label752 DS    0H
000069A4 B90B 008F                          9576          SLGR  8,15
000069A8 E3F0 21E8 0002          000001E8   9577          LTG   15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000069AE 4780 C480               000069BC   9578          BZ    @L1023
000069B2 E3F0 21E8 0004          000001E8   9579          LG    15,488(0,2) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000069B8 47F0 C48A               000069C6   9580          B     @L1024
000069BC                                    9581 @L1023   DS    0H
000069BC E3F0 C12C 0004          00006668   9582          LG    15,@lit_1945_498
000069C2 41F0 F380               00000380   9583          LA    15,896(0,15)
000069C6                                    9584 @L1024   DS    0H
000069C6 E310 2100 0004          00000100   9585          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000069CC E310 1FD0 0004          00000FD0   9586          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000069D2 4110 1210               00000210   9587          LA    1,528(0,1)
000069D6 E310 D348 0024          00000348   9588          STG   1,840(0,13)
000069DC E310 2100 0004          00000100   9589          LG    1,256(0,2)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000069E2 E310 1FD0 0004          00000FD0   9590          LG    1,4048(0,1)
000069E8 E310 D350 0024          00000350   9591          STG   1,848(0,13)
000069EE 4110 D248               00000248   9592          LA    1,584(0,13)
000069F2 E310 D358 0024          00000358   9593          STG   1,856(0,13)
000069F8 B914 0013                          9594          LGFR  1,3
000069FC E310 D360 0024          00000360   9595          STG   1,864(0,13)
00006A02 D707 D368 D368 00000368 00000368   9596          XC    872(8,13),872(13)
00006A08 E310 C12C 0004          00006668   9597          LG    1,@lit_1945_498
00006A0E 4130 13A4               000003A4   9598          LA    3,932(0,1)
00006A12 E330 D370 0024          00000370   9599          STG   3,880(0,13)
00006A18 4110 13B0               000003B0   9600          LA    1,944(0,1)
00006A1C E310 D378 0024          00000378   9601          STG   1,888(0,13)
00006A22 E360 D380 0024          00000380   9602          STG   6,896(0,13)
00006A28 4810 20BA               000000BA   9603          LH    1,186(0,2)
00006A2C B914 0011                          9604          LGFR  1,1
00006A30 E310 D388 0024          00000388   9605          STG   1,904(0,13)
00006A36 E370 D390 0024          00000390   9606          STG   7,912(0,13)
00006A3C E310 2098 0004          00000098   9607          LG    1,152(0,2)  ; offset of end in rd_slice_s
00006A42 E310 2090 000B          00000090   9608          SLG   1,144(0,2)
00006A48 E310 D398 0024          00000398   9609          STG   1,920(0,13)
00006A4E E310 C13C 0004          00006678   9610          LG    1,@lit_1945_500
00006A54 4110 11FA               000001FA   9611          LA    1,506(0,1)
                                                                                                                           Page  194 
  Active Usings: @REGION_1945_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006A58 E310 D3A0 0024          000003A0   9612          STG   1,928(0,13)
00006A5E E548 D3A8 0282          000003A8   9613          MVGHI 936(13),642
00006A64 E350 D3B0 0024          000003B0   9614          STG   5,944(0,13)
00006A6A E380 D3B8 0024          000003B8   9615          STG   8,952(0,13)
00006A70 E3F0 D3C0 0024          000003C0   9616          STG   15,960(0,13)
00006A76 41F0 D148               00000148   9617          LA    15,328(0,13)
00006A7A E3F0 D3C8 0024          000003C8   9618          STG   15,968(0,13)
00006A80 4110 D348               00000348   9619          LA    1,840(0,13)
00006A84 E3F0 C134 0004          00006670   9620          LG    15,@lit_1945_501 ; rd_kafka_log0
00006A8A                                    9621 @@gen_label754 DS    0H
00006A8A 05EF                               9622          BALR  14,15
00006A8C                                    9623 @@gen_label755 DS    0H
00006A8C                                    9624 @L1014   DS    0H
00006A8C E54C 2188 FF65          00000188   9625          MVHI  392(2),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00006A92 47F0 C796               00006CD2   9626          B     @_err_parse@1945@1
00006A96                                    9627 @L1010   DS    0H
00006A96                                    9628 @L1006   DS    0H
00006A96                                    9629 @L1005   DS    0H
00006A96                                    9630 @L1001   DS    0H
                                            9631 * ***           Value_len = (((&Value)->len) == -1 ? 0:((&Value)->len)\
                                            9632 * );
00006A96 E55C D100 FFFF          00000100   9633          CHSI  256(13),-1
00006A9C 4770 C56C               00006AA8   9634          BNE   @L1025
00006AA0 A7F8 0000               00000000   9635          LHI   15,0        ; 0
00006AA4 47F0 C570               00006AAC   9636          B     @L1026
00006AA8                                    9637 @L1025   DS    0H
00006AA8 58F0 D100               00000100   9638          L     15,256(0,13)
00006AAC                                    9639 @L1026   DS    0H
                                            9640 * ***
                                            9641 * ***
                                            9642 * ***   # 659 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                            9643 * ***           if (!relative_offsets &&
00006AAC 1299                               9644          LTR   9,9
00006AAE 4770 C58E               00006ACA   9645          BNZ   @L1027
                                            9646 * ***               hdr.Offset < rktp->rktp_offsets.fetch_offset)
00006AB2 E310 D0C8 0004          000000C8   9647          LG    1,200(0,13)
00006AB8 E310 6238 0020          00000238   9648          CG    1,568(0,6)
00006ABE 47B0 C58E               00006ACA   9649          BNL   @L1027
                                            9650 * ***                   return RD_KAFKA_RESP_ERR_NO_ERROR;
00006AC2 A7F9 0000               00000000   9651          LGHI  15,0        ; 0
00006AC6 47F0 C7BE               00006CFA   9652          B     @ret_lab_1945
00006ACA                                    9653 @L1027   DS    0H
                                            9654 * ***
                                            9655 * ***
                                            9656 * ***           if (((hdr.Attributes & 0x7)))
00006ACA 9107 D0D9      000000D9 00000007   9657          TM    217(13),7
00006ACE 4780 C5FE               00006B3A   9658          BZ    @L1028
                                            9659 * ***                   return rd_kafka_msgset_reader_decompress(
                                            9660 * ***                           msetr, hdr.MagicByte, hdr.Attributes, \
                                            9661 * hdr.Timestamp,
                                            9662 * ***                           hdr.Offset, Value.data, Value_len);
00006AD2 E340 D348 0024          00000348   9663          STG   4,840(0,13)
                                                                                                                           Page  195 
  Active Usings: @REGION_1945_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006AD8 E310 D0D8 0076          000000D8   9664          LB    1,216(0,13)
00006ADE B914 0011                          9665          LGFR  1,1
00006AE2 E310 D350 0024          00000350   9666          STG   1,848(0,13)
00006AE8 E310 D0D9 0076          000000D9   9667          LB    1,217(0,13)
00006AEE B914 0011                          9668          LGFR  1,1
00006AF2 E310 D358 0024          00000358   9669          STG   1,856(0,13)
00006AF8 E310 D0E0 0004          000000E0   9670          LG    1,224(0,13)
00006AFE E310 D360 0024          00000360   9671          STG   1,864(0,13)
00006B04 E310 D0C8 0004          000000C8   9672          LG    1,200(0,13)
00006B0A E310 D368 0024          00000368   9673          STG   1,872(0,13)
00006B10 E310 D108 0004          00000108   9674          LG    1,264(0,13)
00006B16 E310 D370 0024          00000370   9675          STG   1,880(0,13)
00006B1C B914 00FF                          9676          LGFR  15,15
00006B20 E3F0 D378 0024          00000378   9677          STG   15,888(0,13)
00006B26 4110 D348               00000348   9678          LA    1,840(0,13)
00006B2A E3F0 C15C 0004          00006698   9679          LG    15,@lit_1945_527 ; rd_kafka_msgset_reader_decompress
00006B30                                    9680 @@gen_label760 DS    0H
00006B30 05EF                               9681          BALR  14,15
00006B32                                    9682 @@gen_label761 DS    0H
00006B32 B914 00FF                          9683          LGFR  15,15
00006B36 47F0 C7BE               00006CFA   9684          B     @ret_lab_1945
00006B3A                                    9685 @L1028   DS    0H
                                            9686 * ***
                                            9687 * ***
                                            9688 * ***
                                            9689 * ***
                                            9690 * ***
                                            9691 * ***
                                            9692 * ***
                                            9693 * ***           rko = rd_kafka_op_new_fetch_msg(&rkm, rktp, msetr->mse\
                                            9694 * tr_tver->version,
                                            9695 * ***                                           rkbuf,
                                            9696 * ***                                           hdr.Offset,
                                            9697 * ***                                           (size_t)(((&Key)->len)\
                                            9698 *  == -1 ? 0:((&Key)->len)),
                                            9699 * ***                                           ((&Key)->len == -1) ?
                                            9700 * ***                                           (size_t)(((&Value)->le\
                                            9701 * n) == -1 ? 0:((&Value)->len)),
                                            9702 * ***                                           ((&Value)->len == -1) \
                                            9703 * ?
00006B3A E55C D0E8 FFFF          000000E8   9704          CHSI  232(13),-1
00006B40 4770 C610               00006B4C   9705          BNE   @L1029
00006B44 A7F8 0000               00000000   9706          LHI   15,0        ; 0
00006B48 47F0 C614               00006B50   9707          B     @L1030
00006B4C                                    9708 @L1029   DS    0H
00006B4C 58F0 D0E8               000000E8   9709          L     15,232(0,13)
00006B50                                    9710 @L1030   DS    0H
00006B50 B914 00FF                          9711          LGFR  15,15
00006B54 E55C D0E8 FFFF          000000E8   9712          CHSI  232(13),-1
00006B5A 4770 C62A               00006B66   9713          BNE   @L1031
                                            9714 * ***                                           ((void *)0) : Key.data\
                                            9715 * ,
                                                                                                                           Page  196 
  Active Usings: @REGION_1945_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006B5E A719 0000               00000000   9716          LGHI  1,0         ; 0
00006B62 47F0 C630               00006B6C   9717          B     @L1032
00006B66                                    9718 @L1031   DS    0H
00006B66 E310 D0F0 0004          000000F0   9719          LG    1,240(0,13) ; offset of data in rd_kafkap_bytes_s
00006B6C                                    9720 @L1032   DS    0H
00006B6C E55C D100 FFFF          00000100   9721          CHSI  256(13),-1
00006B72 4770 C642               00006B7E   9722          BNE   @L1033
00006B76 A738 0000               00000000   9723          LHI   3,0         ; 0
00006B7A 47F0 C646               00006B82   9724          B     @L1034
00006B7E                                    9725 @L1033   DS    0H
00006B7E 5830 D100               00000100   9726          L     3,256(0,13)
00006B82                                    9727 @L1034   DS    0H
00006B82 B914 0033                          9728          LGFR  3,3
00006B86 E55C D100 FFFF          00000100   9729          CHSI  256(13),-1
00006B8C 4770 C65C               00006B98   9730          BNE   @L1035
                                            9731 * ***                                           ((void *)0) : Value.da\
                                            9732 * ta);
00006B90 A759 0000               00000000   9733          LGHI  5,0         ; 0
00006B94 47F0 C662               00006B9E   9734          B     @L1036
00006B98                                    9735 @L1035   DS    0H
00006B98 E350 D108 0004          00000108   9736          LG    5,264(0,13) ; offset of data in rd_kafkap_bytes_s
00006B9E                                    9737 @L1036   DS    0H
00006B9E 4170 D140               00000140   9738          LA    7,320(0,13)
00006BA2 E370 D348 0024          00000348   9739          STG   7,840(0,13)
00006BA8 E360 D350 0024          00000350   9740          STG   6,848(0,13)
00006BAE E360 4038 0004          00000038   9741          LG    6,56(0,4)   ; offset of msetr_tver in rd_kafka_msgset_re*
                                                                ader_s
00006BB4 E360 6008 0014          00000008   9742          LGF   6,8(0,6)
00006BBA E360 D358 0024          00000358   9743          STG   6,856(0,13)
00006BC0 E320 D360 0024          00000360   9744          STG   2,864(0,13)
00006BC6 E320 D0C8 0004          000000C8   9745          LG    2,200(0,13)
00006BCC E320 D368 0024          00000368   9746          STG   2,872(0,13)
00006BD2 E3F0 D370 0024          00000370   9747          STG   15,880(0,13)
00006BD8 E310 D378 0024          00000378   9748          STG   1,888(0,13)
00006BDE E330 D380 0024          00000380   9749          STG   3,896(0,13)
00006BE4 E350 D388 0024          00000388   9750          STG   5,904(0,13)
00006BEA 4110 D348               00000348   9751          LA    1,840(0,13)
00006BEE E3F0 C164 0004          000066A0   9752          LG    15,@lit_1945_532 ; rd_kafka_op_new_fetch_msg
00006BF4                                    9753 @@gen_label766 DS    0H
00006BF4 05EF                               9754          BALR  14,15
00006BF6                                    9755 @@gen_label767 DS    0H
                                            9756 * ***
                                            9757 * ***           rkm->rkm_broker_id = msetr->msetr_broker_id;
00006BF6 E310 D140 0004          00000140   9758          LG    1,320(0,13) ; rkm
00006BFC 5820 4040               00000040   9759          L     2,64(0,4)   ; offset of msetr_broker_id in rd_kafka_msgs*
                                                                et_reader_s
00006C00 5020 1074               00000074   9760          ST    2,116(0,1)  ; offset of rkm_broker_id in rd_kafka_msg_s
                                            9761 * ***
                                            9762 * ***
                                            9763 * ***
                                            9764 * ***
                                            9765 * ***
                                                                                                                           Page  197 
  Active Usings: @REGION_1945_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9766 * ***           if (msetr->msetr_outer.tstype == RD_KAFKA_TIMESTAMP_LO\
                                            9767 * G_APPEND_TIME) {
00006C04 E55C 4018 0002          00000018   9768          CHSI  24(4),2
00006C0A 4770 C6F6               00006C32   9769          BNE   @L1037
                                            9770 * ***                   rkm->rkm_timestamp = msetr->msetr_outer.timest\
                                            9771 * amp;
00006C0E E310 D140 0004          00000140   9772          LG    1,320(0,13) ; rkm
00006C14 E320 4020 0004          00000020   9773          LG    2,32(0,4)   ; offset of timestamp in 0000155
00006C1A E320 1060 0024          00000060   9774          STG   2,96(0,1)   ; offset of rkm_timestamp in rd_kafka_msg_s
                                            9775 * ***                   rkm->rkm_tstype    = msetr->msetr_outer.tstype\
                                            9776 * ;
00006C20 E310 D140 0004          00000140   9777          LG    1,320(0,13) ; rkm
00006C26 5820 4018               00000018   9778          L     2,24(0,4)   ; offset of tstype in 0000155
00006C2A 5020 105C               0000005C   9779          ST    2,92(0,1)   ; offset of rkm_tstype in rd_kafka_msg_s
                                            9780 * ***
                                            9781 * ***           } else if (hdr.MagicByte >= 1 && hdr.Timestamp) {
00006C2E 47F0 C744               00006C80   9782          B     @L1038
00006C32                                    9783 @L1037   DS    0H
00006C32 E310 D0D8 0076          000000D8   9784          LB    1,216(0,13)
00006C38 A71E 0001               00000001   9785          CHI   1,1
00006C3C 4740 C744               00006C80   9786          BL    @L1038
00006C40 E310 D0E0 0002          000000E0   9787          LTG   1,224(0,13) ; offset of Timestamp in 0000156
00006C46 4780 C744               00006C80   9788          BZ    @L1038
                                            9789 * ***                   rkm->rkm_timestamp = hdr.Timestamp;
00006C4A E310 D140 0004          00000140   9790          LG    1,320(0,13) ; rkm
00006C50 E320 D0E0 0004          000000E0   9791          LG    2,224(0,13) ; offset of Timestamp in 0000156
00006C56 E320 1060 0024          00000060   9792          STG   2,96(0,1)   ; offset of rkm_timestamp in rd_kafka_msg_s
                                            9793 * ***                   if (hdr.Attributes & (1 << 3))
00006C5C 9108 D0D9      000000D9 00000008   9794          TM    217(13),8
00006C60 4780 C738               00006C74   9795          BZ    @L1040
                                            9796 * ***                           rkm->rkm_tstype = RD_KAFKA_TIMESTAMP_L\
                                            9797 * OG_APPEND_TIME;
00006C64 E310 D140 0004          00000140   9798          LG    1,320(0,13) ; rkm
00006C6A E54C 105C 0002          0000005C   9799          MVHI  92(1),2     ; offset of rkm_tstype in rd_kafka_msg_s
00006C70 47F0 C744               00006C80   9800          B     @L1038
                                            9801 * ***                   else
00006C74                                    9802 @L1040   DS    0H
                                            9803 * ***                           rkm->rkm_tstype = RD_KAFKA_TIMESTAMP_C\
                                            9804 * REATE_TIME;
00006C74 E310 D140 0004          00000140   9805          LG    1,320(0,13) ; rkm
00006C7A E54C 105C 0001          0000005C   9806          MVHI  92(1),1     ; offset of rkm_tstype in rd_kafka_msg_s
00006C80                                    9807 @L1041   DS    0H
                                            9808 * ***           }
00006C80                                    9809 @L1039   DS    0H
                                            9810 * ***
                                            9811 * ***
                                            9812 * ***           rd_kafka_q_enq(&msetr->msetr_rkq, rko);
00006C80                                    9813 @L1038   DS    0H
00006C80 4110 4068               00000068   9814          LA    1,104(0,4)
00006C84 E310 D348 0024          00000348   9815          STG   1,840(0,13)
00006C8A E3F0 D350 0024          00000350   9816          STG   15,848(0,13)
00006C90 4110 D348               00000348   9817          LA    1,840(0,13)
                                                                                                                           Page  198 
  Active Usings: @REGION_1945_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006C94 E3F0 C16C 0004          000066A8   9818          LG    15,@lit_1945_533 ; rd_kafka_q_enq
00006C9A                                    9819 @@gen_label772 DS    0H
00006C9A 05EF                               9820          BALR  14,15
00006C9C                                    9821 @@gen_label773 DS    0H
                                            9822 * ***           msetr->msetr_msgcnt++;
00006C9C 58F0 4058               00000058   9823          L     15,88(0,4)
00006CA0 A7FA 0001               00000001   9824          AHI   15,1
00006CA4 50F0 4058               00000058   9825          ST    15,88(0,4)
                                            9826 * ***           msetr->msetr_msg_bytes += rkm->rkm_rkmessage.key_len +\
                                            9827 *  rkm->rkm_rkmessage.len;
00006CA8 E3F0 4060 0004          00000060   9828          LG    15,96(0,4)
00006CAE E310 D140 0004          00000140   9829          LG    1,320(0,13) ; rkm
00006CB4 E320 1030 0004          00000030   9830          LG    2,48(0,1)   ; offset of key_len in rd_kafka_message_s
00006CBA E320 1020 000A          00000020   9831          ALG   2,32(0,1)
00006CC0 B90A 00F2                          9832          ALGR  15,2
00006CC4 E3F0 4060 0024          00000060   9833          STG   15,96(0,4)
                                            9834 * ***
                                            9835 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
00006CCA A7F9 0000               00000000   9836          LGHI  15,0        ; 0
00006CCE 47F0 C7BE               00006CFA   9837          B     @ret_lab_1945
                                            9838 * ***
                                            9839 * ***    err_parse:
                                            9840 * ***
                                            9841 * ***           rd_atomic64_add(&msetr->msetr_rkb->rkb_c.rx_partial, 1\
                                            9842 * );
00006CD2                                    9843 @_err_parse@1945@1 DS 0H
00006CD2 E3F0 4048 0004          00000048   9844          LG    15,72(0,4)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00006CD8 41F0 F300               00000300   9845          LA    15,768(0,15)
00006CDC E3F0 D348 0024          00000348   9846          STG   15,840(0,13)
00006CE2 E548 D350 0001          00000350   9847          MVGHI 848(13),1
00006CE8 4110 D348               00000348   9848          LA    1,840(0,13)
00006CEC E3F0 C174 0004          000066B0   9849          LG    15,@lit_1945_535 ; rd_atomic64_add
00006CF2                                    9850 @@gen_label774 DS    0H
00006CF2 05EF                               9851          BALR  14,15
00006CF4                                    9852 @@gen_label775 DS    0H
                                            9853 * ***           return rkbuf->rkbuf_err;
00006CF4 E3F0 2188 0014          00000188   9854          LGF   15,392(0,2)
                                            9855 * ***   }
00006CFA                                    9856 @ret_lab_1945 DS 0H
                                            9857 * * **** Start of Epilogue
                                            9858          DCCEPIL
00006CFA                                    9859+         ds 0h                                                          01-DCCEP
                                            9860+* Epilog
00006CFA D707 D088 D088 00000088 00000088   9861+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006D00 E3D0 D080 0004          00000080   9862+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006D06 E3C0 D090 0004          00000090   9863+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006D0C E3B0 C018 0004          00000018   9864+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006D12 E3C0 B010 0021          00000010   9865+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006D18 E3E0 D008 0004          00000008   9866+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006D1E EB1C D020 0004          00000020   9867+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006D24 078E                               9868+         bcr 8,14                if same dsab, just return              01-DCCEP
                                                                                                                           Page  199 
  Active Usings: @REGION_1945_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006D26 E3F0 D010 0024          00000010   9869+         stg 15,16(0,13)         save return code                       01-DCCEP
00006D2C E300 D018 0024          00000018   9870+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006D32 E3F0 D090 0004          00000090   9871+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006D38 E3F0 F018 0004          00000018   9872+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006D3E 47F0 F040               00000040   9873+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9874+* End of Epilog
                                            9875 * * **** End of Epilogue
                                            9876          DROP  12
                                            9877 *
                                            9878 *   DSECT for automatic variables in "rd_kafka_msgset_reader_msg_v0_1"
                                            9879 *      (FUNCTION #1945)
                                            9880 *
00000000                00000000 00000348   9881 @AUTO#rd_kafka_msgset_reader_msg_v0_1 DSECT
00000000                                    9882          DS    XL168
000000A8                                    9883 rd_kafka_msgset_reader_msg_v0_1#__len0#102 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   9884          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9885 rd_kafka_msgset_reader_msg_v0_1#__len0#95 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   9886          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9887 rd_kafka_msgset_reader_msg_v0_1#__len2#94 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   9888          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9889 rd_kafka_msgset_reader_msg_v0_1#_klen#92 DS 1F ; _klen
000000AC                000000AC 000000A8   9890          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9891 rd_kafka_msgset_reader_msg_v0_1#__len0#86 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   9892          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9893 rd_kafka_msgset_reader_msg_v0_1#__len0#79 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   9894          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9895 rd_kafka_msgset_reader_msg_v0_1#__len2#78 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   9896          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9897 rd_kafka_msgset_reader_msg_v0_1#_klen#76 DS 1F ; _klen
000000AC                000000AC 000000A8   9898          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9899 rd_kafka_msgset_reader_msg_v0_1#__len0#70 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   9900          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9901 rd_kafka_msgset_reader_msg_v0_1#__len1#69 DS 8XL1 ; __len1
000000B0                000000B0 000000A8   9902          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9903 rd_kafka_msgset_reader_msg_v0_1#calc_crc#66 DS 1F ; calc_crc
000000AC                000000AC 000000A8   9904          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9905 rd_kafka_msgset_reader_msg_v0_1#__len0#60 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   9906          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9907 rd_kafka_msgset_reader_msg_v0_1#__len0#48 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   9908          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9909 rd_kafka_msgset_reader_msg_v0_1#__len2#47 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   9910          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9911 rd_kafka_msgset_reader_msg_v0_1#__len0#39 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   9912          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9913 rd_kafka_msgset_reader_msg_v0_1#__len2#38 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   9914          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9915 rd_kafka_msgset_reader_msg_v0_1#__len0#32 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   9916          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9917 rd_kafka_msgset_reader_msg_v0_1#__len2#31 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   9918          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9919 rd_kafka_msgset_reader_msg_v0_1#__len0#25 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   9920          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
                                                                                                                           Page  200 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000A8                                    9921 rd_kafka_msgset_reader_msg_v0_1#__len0#19 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   9922          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9923 rd_kafka_msgset_reader_msg_v0_1#__len2#18 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   9924          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9925 rd_kafka_msgset_reader_msg_v0_1#__len0#11 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   9926          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9927 rd_kafka_msgset_reader_msg_v0_1#__len2#10 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   9928          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9929 rd_kafka_msgset_reader_msg_v0_1#__len0#3 DS 8XL1 ; __len0
000000B0                000000B0 000000A8   9930          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9931 rd_kafka_msgset_reader_msg_v0_1#__len2#2 DS 8XL1 ; __len2
000000B0                000000B0 000000A8   9932          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9933 rd_kafka_msgset_reader_msg_v0_1#_v#1 DS 8XL1 ; _v
000000B0                000000B0 000000A8   9934          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9935 rd_kafka_msgset_reader_msg_v0_1#message_end#0 DS 8XL1 ; message_end
000000B0                000000B0 000000A8   9936          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9937 rd_kafka_msgset_reader_msg_v0_1#log_decode_errors#0 DS 1F ; log_decode_*
                                                                errors
000000AC                000000AC 000000A8   9938          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9939 rd_kafka_msgset_reader_msg_v0_1#relative_offsets#0 DS 1F ; relative_off*
                                                                sets
000000AC                000000AC 000000A8   9940          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9941 rd_kafka_msgset_reader_msg_v0_1#hdrsize#0 DS 8XL1 ; hdrsize
000000B0                000000B0 000000A8   9942          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+168
000000A8                                    9943 rd_kafka_msgset_reader_msg_v0_1#$Value_len#0 DS 1F ; Value_len
000000AC                000000AC 000000B0   9944          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+176
000000B0                                    9945 rd_kafka_msgset_reader_msg_v0_1#_v#9 DS 1F ; _v
000000B4                000000B4 000000B4   9946          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+180
000000B4                                    9947 rd_kafka_msgset_reader_msg_v0_1#_v#17 DS 1F ; _v
000000B8                000000B8 000000B8   9948          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+184
000000B8                                    9949 rd_kafka_msgset_reader_msg_v0_1#_v#46 DS 8XL1 ; _v
000000C0                000000C0 000000C0   9950          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+192
000000C0                                    9951 rd_kafka_msgset_reader_msg_v0_1#_v#77 DS 1F ; _v
000000C4                000000C4 000000C4   9952          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+196
000000C4                                    9953 rd_kafka_msgset_reader_msg_v0_1#_v#93 DS 1F ; _v
000000C8                000000C8 000000C8   9954          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+200
000000C8                                    9955 rd_kafka_msgset_reader_msg_v0_1#hdr#0 DS 32XL1 ; hdr
000000E8                000000E8 000000E8   9956          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+232
000000E8                                    9957 rd_kafka_msgset_reader_msg_v0_1#$Key#0 DS 24XL1 ; Key
00000100                00000100 00000100   9958          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+256
00000100                                    9959 rd_kafka_msgset_reader_msg_v0_1#$Value#0 DS 24XL1 ; Value
00000118                00000118 00000118   9960          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+280
00000118                                    9961 rd_kafka_msgset_reader_msg_v0_1#crc_slice#0 DS 40XL1 ; crc_slice
00000140                00000140 00000148   9962          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
00000148                                    9963 rd_kafka_msgset_reader_msg_v0_1#__tmpstr#106 DS 256XL1 ; __tmpstr
00000248                00000248 00000148   9964          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
00000148                                    9965 rd_kafka_msgset_reader_msg_v0_1#__tmpstr#99 DS 256XL1 ; __tmpstr
00000248                00000248 00000148   9966          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
00000148                                    9967 rd_kafka_msgset_reader_msg_v0_1#__tmpstr#90 DS 256XL1 ; __tmpstr
00000248                00000248 00000148   9968          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
00000148                                    9969 rd_kafka_msgset_reader_msg_v0_1#__tmpstr#83 DS 256XL1 ; __tmpstr
00000248                00000248 00000148   9970          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
                                                                                                                           Page  201 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000148                                    9971 rd_kafka_msgset_reader_msg_v0_1#__tmpstr#74 DS 256XL1 ; __tmpstr
00000248                00000248 00000148   9972          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
00000148                                    9973 rd_kafka_msgset_reader_msg_v0_1#__tmpstr#64 DS 256XL1 ; __tmpstr
00000248                00000248 00000148   9974          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
00000148                                    9975 rd_kafka_msgset_reader_msg_v0_1#_logname#59 DS 256XL1 ; _logname
00000248                00000248 00000148   9976          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
00000148                                    9977 rd_kafka_msgset_reader_msg_v0_1#_logname#58 DS 256XL1 ; _logname
00000248                00000248 00000148   9978          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
00000148                                    9979 rd_kafka_msgset_reader_msg_v0_1#__tmpstr#52 DS 256XL1 ; __tmpstr
00000248                00000248 00000148   9980          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
00000148                                    9981 rd_kafka_msgset_reader_msg_v0_1#__tmpstr#43 DS 256XL1 ; __tmpstr
00000248                00000248 00000148   9982          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
00000148                                    9983 rd_kafka_msgset_reader_msg_v0_1#__tmpstr#36 DS 256XL1 ; __tmpstr
00000248                00000248 00000148   9984          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
00000148                                    9985 rd_kafka_msgset_reader_msg_v0_1#__tmpstr#29 DS 256XL1 ; __tmpstr
00000248                00000248 00000148   9986          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
00000148                                    9987 rd_kafka_msgset_reader_msg_v0_1#__tmpstr#23 DS 256XL1 ; __tmpstr
00000248                00000248 00000148   9988          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
00000148                                    9989 rd_kafka_msgset_reader_msg_v0_1#__tmpstr#15 DS 256XL1 ; __tmpstr
00000248                00000248 00000148   9990          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+328
00000148                                    9991 rd_kafka_msgset_reader_msg_v0_1#__tmpstr#7 DS 256XL1 ; __tmpstr
00000248                00000248 00000248   9992          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+584
00000248                                    9993 rd_kafka_msgset_reader_msg_v0_1#_logname#107 DS 256XL1 ; _logname
00000348                00000348 00000248   9994          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+584
00000248                                    9995 rd_kafka_msgset_reader_msg_v0_1#_logname#100 DS 256XL1 ; _logname
00000348                00000348 00000248   9996          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+584
00000248                                    9997 rd_kafka_msgset_reader_msg_v0_1#_logname#91 DS 256XL1 ; _logname
00000348                00000348 00000248   9998          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+584
00000248                                    9999 rd_kafka_msgset_reader_msg_v0_1#_logname#84 DS 256XL1 ; _logname
00000348                00000348 00000248  10000          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+584
00000248                                   10001 rd_kafka_msgset_reader_msg_v0_1#_logname#75 DS 256XL1 ; _logname
00000348                00000348 00000248  10002          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+584
00000248                                   10003 rd_kafka_msgset_reader_msg_v0_1#_logname#65 DS 256XL1 ; _logname
00000348                00000348 00000248  10004          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+584
00000248                                   10005 rd_kafka_msgset_reader_msg_v0_1#_logname#53 DS 256XL1 ; _logname
00000348                00000348 00000248  10006          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+584
00000248                                   10007 rd_kafka_msgset_reader_msg_v0_1#_logname#44 DS 256XL1 ; _logname
00000348                00000348 00000248  10008          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+584
00000248                                   10009 rd_kafka_msgset_reader_msg_v0_1#_logname#37 DS 256XL1 ; _logname
00000348                00000348 00000248  10010          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+584
00000248                                   10011 rd_kafka_msgset_reader_msg_v0_1#_logname#30 DS 256XL1 ; _logname
00000348                00000348 00000248  10012          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+584
00000248                                   10013 rd_kafka_msgset_reader_msg_v0_1#_logname#24 DS 256XL1 ; _logname
00000348                00000348 00000248  10014          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+584
00000248                                   10015 rd_kafka_msgset_reader_msg_v0_1#_logname#16 DS 256XL1 ; _logname
00000348                00000348 00000248  10016          ORG   @AUTO#rd_kafka_msgset_reader_msg_v0_1+584
00000248                                   10017 rd_kafka_msgset_reader_msg_v0_1#_logname#8 DS 256XL1 ; _logname
                                           10018 *
00006D42                00000000 00012806  10019 @CODE    CSECT
                                           10020 *
                                           10021 *
                                           10022 *
                                                                                                                           Page  202 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10023 * ....... start of rd_kafka_msgset_reader_msg_v2
00006D42                                   10024 @LNAME1946 DS  0H
00006D42 0000001D                          10025          DC    X'0000001D'
00006D46 99846D9281869281                  10026          DC    C'rd_kafka_msgset_reader_msg_v2'
00006D63 00                                10027          DC    X'00'
                                           10028 rd_kafka_msgset_reader_msg_v2 DCCPRLG CINDEX=1946,BASER=12,FRAME=1008,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1946
                                           10029          macro
                                           10030          dccextrn &m
                                           10031          gblc    &$dccext(1000)
                                           10032          gbla    &$dccexti
                                           10033          lcla    &i
                                           10034 &$dccext(&$dccexti+1) setc    '&m'
                                           10035 &i       seta    1
                                           10036 .loop    aif    (&i gt &$dccexti).around
                                           10037          aif    ('&$dccext(&i)' eq '&m').getout
                                           10038 &i       seta    &i+1
                                           10039          ago     .loop
                                           10040 .around  anop
                                           10041 &$dccexti seta &$dccexti+1
                                           10042          extrn  &m
                                           10043 .getout  anop
                                           10044          mend
00006D68                                   10045+$eye0118    ds    0d                                                    02-DCCCA
00006D68 C4C3C3                            10046+         dc cl3'DCC'                                                    02-DCCCA
00006D6B 01                                10047+         dc xl1'01' format one                                          02-DCCCA
00006D6C 00000000                          10048+         dc a(0)                                                        02-DCCCA
00006D70 0000000000006DDA                  10049+         dc ad(@PER_1946)                                               02-DCCCA
00006D78 00000000000003F0                  10050+         dc ad(1008)                                                    02-DCCCA
00006D80 0000000000000000                  10051+         dc ad(0)                                                       02-DCCCA
00006D88 0000000000001000                  10052+         dc ad(4096)                                                    02-DCCCA
00006D90 20                                10053+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006D91 03                                10054+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006D92 03                                10055+         dc al1(3)                                                      02-DCCCA
00006D93 08                                10056+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006D94 00                                10057+         dc bl.8'00000000'                                              02-DCCCA
00006D95 000000                            10058+         dc al3(0)                                                      02-DCCCA
00006D98 0000000000006D42                  10059+         dc ad(@LNAME1946)                                              02-DCCCA
00006DA0                                   10060+         ds 0d                                                          02-DCCCA
00006DA0 0000000000006D68                  10061+         dc ad($eye0118)                                                02-DCCCA
00006DA8 0000000000000000                  10062+         dc ad(0)                                                       02-DCCCA
00006DB0                                   10063+         ds    0d                                                       01-DCCPR
00006DB0                                   10064+rd_kafka_msgset_reader_msg_v2 ds 0d                                     01-DCCPR
00006DB0                                   10065+@REGION_1946_1 ds 0h                                                    01-DCCPR
00006DB0 EBEC D008 0024          00000008  10066+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006DB6 E3E0 D088 0004          00000088  10067+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006DBC E3C0 D090 0004          00000090  10068+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006DC2 B904 002E                         10069+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006DC6 E3B0 C018 0004          00000018  10070+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006DCC A7EB 03F0               000003F0  10071+         aghi  14,1008             increase by frame size               01-DCCPR
00006DD0 E3E0 C020 0021          00000020  10072+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006DD6 4720 B020               00000020  10073+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page  203 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006DDA                                   10074+@PER_1946 ds   0h                                                       01-DCCPR
00006DDA EBDE 2080 0024          00000080  10075+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006DE0 E3C0 2090 0024          00000090  10076+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006DE6 B904 00D2                         10077+         lgr   13,2                set real frame pointer               01-DCCPR
00006DEA B904 00CF                         10078+         lgr   12,15               set base reg                         01-DCCPR
                        00006DB0           10079+         using @REGION_1946_1,12                                        01-DCCPR
                                           10080 * ******* End of Prologue
                                           10081 * *
                                           10082 * ***           rd_kafka_buf_t *rkbuf = msetr->msetr_rkbuf;
00006DEE E360 1000 0004          00000000  10083          LG    6,0(0,1)    ; msetr
00006DF4 E370 6000 0004          00000000  10084          LG    7,0(0,6)    ; msetr
                                           10085 * ***           rd_kafka_toppar_t *rktp = msetr->msetr_rktp;
00006DFA E320 6050 0004          00000050  10086          LG    2,80(0,6)   ; offset of msetr_rktp in rd_kafka_msgset_re*
                                                                ader_s
                                           10087 * ***           struct {
                                           10088 * ***                   int64_t Length;
                                           10089 * ***                   int8_t  MsgAttributes;
                                           10090 * ***                   int64_t TimestampDelta;
                                           10091 * ***                   int64_t OffsetDelta;
                                           10092 * ***                   int64_t Offset;
                                           10093 * ***                   rd_kafkap_bytes_t Key;
                                           10094 * ***                   rd_kafkap_bytes_t Value;
                                           10095 * ***                   rd_kafkap_bytes_t Headers;
                                           10096 * ***           } hdr;
                                           10097 * ***           rd_kafka_op_t *rko;
                                           10098 * ***           rd_kafka_msg_t *rkm;
                                           10099 * ***
                                           10100 * ***           int log_decode_errors = (rkbuf->rkbuf_rkb->rkb_rk->rk_\
                                           10101 * conf.debug &
                                           10102 * ***                                    0x80) ? 7 : 0;
00006E00 E3F0 7100 0004          00000100  10103          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006E06 E3F0 FFD0 0004          00000FD0  10104          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00006E0C 9180 F323      00000323 00000080  10105          TM    803(15),128
00006E10 4780 C0EC               00006E9C  10106          BZ    @L1042
00006E14 A738 0007               00000007  10107          LHI   3,7         ; 7
00006E18 47F0 C0F0               00006EA0  10108          B     @L1043
00006E20                                   10109          DS    0D
00006E20 000003F0                          10110 @FRAMESIZE_1946 DC F'1008'
00006E24 00000000
00006E28 0000000000001378                  10111 @lit_1946_571 DC AD(rd_slice_read_varint)
00006E30 0000000000000000                  10112 @lit_1946_574 DC AD(rd_kafka_crash)
00006E38 0000000000012808                  10113 @lit_1946_573 DC AD(@DATA)
00006E40 0000000000012AB8                  10114 @lit_1946_572 DC AD(@strings@)
00006E48 0000000000000000                  10115 @lit_1946_576 DC AD(snprintf)
00006E50 0000000000000000                  10116 @lit_1946_578 DC AD(mtx_lock)
00006E58 0000000000001668                  10117 @lit_1946_580 DC AD(rd_strlcpy)
00006E60 0000000000000000                  10118 @lit_1946_582 DC AD(mtx_unlock)
00006E68 00000000000014D0                  10119 @lit_1946_583 DC AD(rd_kafka_$Api$Key2str)
00006E70 00000000000012B8                  10120 @lit_1946_584 DC AD(rd_slice_offset)
00006E78 0000000000001210                  10121 @lit_1946_585 DC AD(rd_slice_abs_offset)
00006E80 0000000000000000                  10122 @lit_1946_589 DC AD(rd_kafka_log0)
00006E88 000039FA                          10123 @lit_region_diff_1946_1_7  DC A(@REGION_1946_7-@REGION_1946_1)
                                                                                                                           Page  204 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006E8C 00000000
00006E90 0000000000000000                  10124 @lit_1946_592 DC AD(rd_slice_read)
00006E98 00000816                          10125 @lit_region_diff_1946_1_2  DC A(@REGION_1946_2-@REGION_1946_1)
00006E9C                                   10126 @L1042   DS    0H
00006E9C A738 0000               00000000  10127          LHI   3,0         ; 0
00006EA0                                   10128 @L1043   DS    0H
                                           10129 * ***           size_t message_end;
                                           10130 * ***
                                           10131 * ***           do { int64_t _v; size_t _r = rd_slice_read_varint(&(rk\
                                           10132 * buf)->rkbuf_reader, &_v); if ((((_r == 0)))) do { if (log_decode_err\
                                           10133 * ors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asg\
                                           10134 * kafka\\librdkafka\\src\\rdkafka_msgset_reader.c",743, __FUNCTION__, \
                                           10135 * (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __t\
                                           10136 * mpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": " "varint parsin\
                                           10137 * g failed"); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { ch\
                                           10138 * ar _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); r\
                                           10139 * d_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname))\
                                           10140 * ; mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&\
                                           10141 * (rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lo\
                                           10142 * gname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer u\
                                           10143 * nderflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expect\
                                           10144 * ed %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_\
                                           10145 * ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVers\
                                           10146 * ion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)-\
                                           10147 * >end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 743, (size_t)0,\
                                           10148 *  ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_re\
                                           10149 * ader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigatio\
                                           10150 * n : "incorrect broker.version.fallback?", __tmpstr); } while (0); } \
                                           10151 * (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; }\
                                           10152 *  while (0); *(&hdr.Length) = _v; } while (0);
00006EA0                                   10153 @L1044   DS    0H
00006EA0 41F0 7078               00000078  10154          LA    15,120(0,7)
00006EA4 E3F0 D368 0024          00000368  10155          STG   15,872(0,13)
00006EAA 41F0 D0A8               000000A8  10156          LA    15,168(0,13)
00006EAE E3F0 D370 0024          00000370  10157          STG   15,880(0,13)
00006EB4 4110 D368               00000368  10158          LA    1,872(0,13)
00006EB8 E3F0 C078 0004          00006E28  10159          LG    15,@lit_1946_571 ; rd_slice_read_varint
00006EBE                                   10160 @@gen_label777 DS    0H
00006EBE 05EF                              10161          BALR  14,15
00006EC0                                   10162 @@gen_label778 DS    0H
00006EC0 B902 00FF                         10163          LTGR  15,15
00006EC4 4770 C36C               0000711C  10164          BNE   @L1047
00006EC8                                   10165 @L1048   DS    0H
00006EC8 1233                              10166          LTR   3,3
00006ECA 47D0 C35C               0000710C  10167          BNH   @L1051
00006ECE                                   10168 @L1052   DS    0H
00006ECE E3F0 7100 0002          00000100  10169          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006ED4 4770 C16A               00006F1A  10170          BNZ   @L1055
00006ED8 E3F0 C090 0004          00006E40  10171          LG    15,@lit_1946_572
00006EDE 4110 F2CE               000002CE  10172          LA    1,718(0,15)
00006EE2 E310 D368 0024          00000368  10173          STG   1,872(0,13)
00006EE8 E548 D370 02E7          00000370  10174          MVGHI 880(13),743
                                                                                                                           Page  205 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006EEE E310 C088 0004          00006E38  10175          LG    1,@lit_1946_573
00006EF4 4110 121A               0000021A  10176          LA    1,538(0,1)
00006EF8 E310 D378 0024          00000378  10177          STG   1,888(0,13)
00006EFE D707 D380 D380 00000380 00000380  10178          XC    896(8,13),896(13)
00006F04 41F0 F362               00000362  10179          LA    15,866(0,15)
00006F08 E3F0 D388 0024          00000388  10180          STG   15,904(0,13)
00006F0E 4110 D368               00000368  10181          LA    1,872(0,13)
00006F12 E3F0 C080 0004          00006E30  10182          LG    15,@lit_1946_574 ; rd_kafka_crash
00006F18                                   10183 @@gen_label782 DS    0H
00006F18 05EF                              10184          BALR  14,15
00006F1A                                   10185 @@gen_label783 DS    0H
00006F1A                                   10186 @L1055   DS    0H
00006F1A 41F0 D158               00000158  10187          LA    15,344(0,13)
00006F1E E3F0 D368 0024          00000368  10188          STG   15,872(0,13)
00006F24 E548 D370 0100          00000370  10189          MVGHI 880(13),256
00006F2A E3F0 C090 0004          00006E40  10190          LG    15,@lit_1946_572
00006F30 41F0 F52A               0000052A  10191          LA    15,1322(0,15)
00006F34 E3F0 D378 0024          00000378  10192          STG   15,888(0,13)
00006F3A 4110 D368               00000368  10193          LA    1,872(0,13)
00006F3E E3F0 C098 0004          00006E48  10194          LG    15,@lit_1946_576 ; snprintf
00006F44                                   10195 @@gen_label784 DS    0H
00006F44 05EF                              10196          BALR  14,15
00006F46                                   10197 @@gen_label785 DS    0H
00006F46 41F0 D158               00000158  10198          LA    15,344(0,13)
00006F4A B904 001F                         10199          LGR   1,15
00006F4E A709 0000               00000000  10200          LGHI  0,0
00006F52                                   10201 @@gen_label786 DS 0H
00006F52 B25E 000F                         10202          SRST  0,15
00006F56 4710 C1A2               00006F52  10203          BC  1,@@gen_label786
00006F5A B90B 0001                         10204          SLGR  0,1
00006F5E A70F 0002               00000002  10205          CGHI  0,2
00006F62 4770 C1BA               00006F6A  10206          BNE   @L1057
00006F66 9200 D158      00000158 00000000  10207          MVI   344(13),0
00006F6A                                   10208 @L1056   DS    0H
00006F6A                                   10209 @L1057   DS    0H
00006F6A E3F0 7100 0004          00000100  10210          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006F70 A729 1638               00001638  10211          LGHI  2,5688      ; 5688
00006F74 41F2 F000               00000000  10212          LA    15,0(2,15)
00006F78 E3F0 D368 0024          00000368  10213          STG   15,872(0,13)
00006F7E 4110 D368               00000368  10214          LA    1,872(0,13)
00006F82 E3F0 C0A0 0004          00006E50  10215          LG    15,@lit_1946_578 ; mtx_lock
00006F88                                   10216 @@gen_label788 DS    0H
00006F88 05EF                              10217          BALR  14,15
00006F8A                                   10218 @@gen_label789 DS    0H
00006F8A 41F0 D258               00000258  10219          LA    15,600(0,13)
00006F8E E3F0 D368 0024          00000368  10220          STG   15,872(0,13)
00006F94 E3F0 7100 0004          00000100  10221          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006F9A A719 1630               00001630  10222          LGHI  1,5680      ; 5680
00006F9E E3F1 F000 0004          00000000  10223          LG    15,0(1,15)
00006FA4 E3F0 D370 0024          00000370  10224          STG   15,880(0,13)
00006FAA E548 D378 0100          00000378  10225          MVGHI 888(13),256
00006FB0 4110 D368               00000368  10226          LA    1,872(0,13)
                                                                                                                           Page  206 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006FB4 E3F0 C0A8 0004          00006E58  10227          LG    15,@lit_1946_580 ; rd_strlcpy
00006FBA                                   10228 @@gen_label790 DS    0H
00006FBA 05EF                              10229          BALR  14,15
00006FBC                                   10230 @@gen_label791 DS    0H
00006FBC E3F0 7100 0004          00000100  10231          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00006FC2 41F2 F000               00000000  10232          LA    15,0(2,15)
00006FC6 E3F0 D368 0024          00000368  10233          STG   15,872(0,13)
00006FCC 4110 D368               00000368  10234          LA    1,872(0,13)
00006FD0 E3F0 C0B0 0004          00006E60  10235          LG    15,@lit_1946_582 ; mtx_unlock
00006FD6                                   10236 @@gen_label792 DS    0H
00006FD6 05EF                              10237          BALR  14,15
00006FD8                                   10238 @@gen_label793 DS    0H
00006FD8 E3F0 70B8 0015          000000B8  10239          LGH   15,184(0,7)
00006FDE E3F0 D368 0024          00000368  10240          STG   15,872(0,13)
00006FE4 4110 D368               00000368  10241          LA    1,872(0,13)
00006FE8 E3F0 C0B8 0004          00006E68  10242          LG    15,@lit_1946_583 ; rd_kafka_ApiKey2str
00006FEE                                   10243 @@gen_label794 DS    0H
00006FEE 05EF                              10244          BALR  14,15
00006FF0                                   10245 @@gen_label795 DS    0H
00006FF0 B904 002F                         10246          LGR   2,15
00006FF4 41F0 7078               00000078  10247          LA    15,120(0,7)
00006FF8 E3F0 D368 0024          00000368  10248          STG   15,872(0,13)
00006FFE 4110 D368               00000368  10249          LA    1,872(0,13)
00007002 E3F0 C0C0 0004          00006E70  10250          LG    15,@lit_1946_584 ; rd_slice_offset
00007008                                   10251 @@gen_label796 DS    0H
00007008 05EF                              10252          BALR  14,15
0000700A                                   10253 @@gen_label797 DS    0H
0000700A B904 004F                         10254          LGR   4,15
0000700E E350 7098 0004          00000098  10255          LG    5,152(0,7)  ; offset of end in rd_slice_s
00007014 41F0 7078               00000078  10256          LA    15,120(0,7)
00007018 E3F0 D368 0024          00000368  10257          STG   15,872(0,13)
0000701E 4110 D368               00000368  10258          LA    1,872(0,13)
00007022 E3F0 C0C8 0004          00006E78  10259          LG    15,@lit_1946_585 ; rd_slice_abs_offset
00007028                                   10260 @@gen_label798 DS    0H
00007028 05EF                              10261          BALR  14,15
0000702A                                   10262 @@gen_label799 DS    0H
0000702A B90B 005F                         10263          SLGR  5,15
0000702E E3F0 71E8 0002          000001E8  10264          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00007034 4780 C292               00007042  10265          BZ    @L1060
00007038 E3F0 71E8 0004          000001E8  10266          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000703E 47F0 C29C               0000704C  10267          B     @L1061
00007042                                   10268 @L1060   DS    0H
00007042 E3F0 C090 0004          00006E40  10269          LG    15,@lit_1946_572
00007048 41F0 F380               00000380  10270          LA    15,896(0,15)
0000704C                                   10271 @L1061   DS    0H
0000704C E310 7100 0004          00000100  10272          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00007052 E310 1FD0 0004          00000FD0  10273          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00007058 4110 1210               00000210  10274          LA    1,528(0,1)
0000705C E310 D368 0024          00000368  10275          STG   1,872(0,13)
00007062 E310 7100 0004          00000100  10276          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
                                                                                                                           Page  207 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007068 E310 1FD0 0004          00000FD0  10277          LG    1,4048(0,1)
0000706E E310 D370 0024          00000370  10278          STG   1,880(0,13)
00007074 4110 D258               00000258  10279          LA    1,600(0,13)
00007078 E310 D378 0024          00000378  10280          STG   1,888(0,13)
0000707E B914 0013                         10281          LGFR  1,3
00007082 E310 D380 0024          00000380  10282          STG   1,896(0,13)
00007088 D707 D388 D388 00000388 00000388  10283          XC    904(8,13),904(13)
0000708E E310 C090 0004          00006E40  10284          LG    1,@lit_1946_572
00007094 4130 13A4               000003A4  10285          LA    3,932(0,1)
00007098 E330 D390 0024          00000390  10286          STG   3,912(0,13)
0000709E 4110 13B0               000003B0  10287          LA    1,944(0,1)
000070A2 EB12 D398 0024          00000398  10288          STMG  1,2,920(13)
000070A8 4810 70BA               000000BA  10289          LH    1,186(0,7)
000070AC B914 0011                         10290          LGFR  1,1
000070B0 E310 D3A8 0024          000003A8  10291          STG   1,936(0,13)
000070B6 E340 D3B0 0024          000003B0  10292          STG   4,944(0,13)
000070BC E310 7098 0004          00000098  10293          LG    1,152(0,7)  ; offset of end in rd_slice_s
000070C2 E310 7090 000B          00000090  10294          SLG   1,144(0,7)
000070C8 E310 D3B8 0024          000003B8  10295          STG   1,952(0,13)
000070CE E310 C088 0004          00006E38  10296          LG    1,@lit_1946_573
000070D4 4110 121A               0000021A  10297          LA    1,538(0,1)
000070D8 E310 D3C0 0024          000003C0  10298          STG   1,960(0,13)
000070DE E548 D3C8 02E7          000003C8  10299          MVGHI 968(13),743
000070E4 D707 D3D0 D3D0 000003D0 000003D0  10300          XC    976(8,13),976(13)
000070EA E350 D3D8 0024          000003D8  10301          STG   5,984(0,13)
000070F0 E3F0 D3E0 0024          000003E0  10302          STG   15,992(0,13)
000070F6 41F0 D158               00000158  10303          LA    15,344(0,13)
000070FA E3F0 D3E8 0024          000003E8  10304          STG   15,1000(0,13)
00007100 4110 D368               00000368  10305          LA    1,872(0,13)
00007104 E3F0 C0D0 0004          00006E80  10306          LG    15,@lit_1946_589 ; rd_kafka_log0
0000710A                                   10307 @@gen_label801 DS    0H
0000710A 05EF                              10308          BALR  14,15
0000710C                                   10309 @@gen_label802 DS    0H
0000710C                                   10310 @L1051   DS    0H
0000710C E54C 7188 FF65          00000188  10311          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00007112 E3C0 C0D8 001A          00006E88  10312          ALGF  12,@lit_region_diff_1946_1_7
                                           10313          DROP  12
                        0000A7AA           10314          USING @REGION_1946_7,12
00007118 47F0 C1A4               0000A94E  10315          B     @_err_parse@1946@2
                                           10316          DROP  12
                        00006DB0           10317          USING @REGION_1946_1,12
0000711C                                   10318 @L1047   DS    0H
0000711C E3F0 D0A8 0004          000000A8  10319          LG    15,168(0,13) ; _v
00007122 E3F0 D0E0 0024          000000E0  10320          STG   15,224(0,13)
                                           10321 * ***           message_end = rd_slice_offset(&rkbuf->rkbuf_reader)+(s\
                                           10322 * ize_t)hdr.Length;
00007128 41F0 7078               00000078  10323          LA    15,120(0,7)
0000712C E3F0 D368 0024          00000368  10324          STG   15,872(0,13)
00007132 4110 D368               00000368  10325          LA    1,872(0,13)
00007136 E3F0 C0C0 0004          00006E70  10326          LG    15,@lit_1946_584 ; rd_slice_offset
0000713C                                   10327 @@gen_label803 DS    0H
0000713C 05EF                              10328          BALR  14,15
                                                                                                                           Page  208 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000713E                                   10329 @@gen_label804 DS    0H
0000713E E310 D0E0 0004          000000E0  10330          LG    1,224(0,13)
00007144 B904 004F                         10331          LGR   4,15
00007148 B90A 0041                         10332          ALGR  4,1
                                           10333 * ***           do { size_t __len2 = (size_t)(1); if (!rd_slice_read(&\
                                           10334 * (rkbuf)->rkbuf_reader, &hdr.MsgAttributes, __len2)) do { size_t __le\
                                           10335 * n0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->end\
                                           10336 *  - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { if (log_de\
                                           10337 * code_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash(\
                                           10338 * "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",745, __FUNC\
                                           10339 * TION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); \
                                           10340 * char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); if (\
                                           10341 * __strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[256]\
                                           10342 * ; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logna\
                                           10343 * me, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(r\
                                           10344 * kbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rk\
                                           10345 * b)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decod\
                                           10346 * e_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "for \
                                           10347 * %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " byt\
                                           10348 * es > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf\
                                           10349 * ->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_of\
                                           10350 * fset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->\
                                           10351 * rkbuf_reader)->start), __FUNCTION__, 745, __len0, ((&rkbuf->rkbuf_re\
                                           10352 * ader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rkbu\
                                           10353 * f_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect brok\
                                           10354 * er.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_err \
                                           10355 * = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } whi\
                                           10356 * le (0); } while (0);
0000714C                                   10357 @L1062   DS    0H
0000714C A759 0001               00000001  10358          LGHI  5,1         ; 1
00007150 41F0 7078               00000078  10359          LA    15,120(0,7)
00007154 E3F0 D368 0024          00000368  10360          STG   15,872(0,13)
0000715A 41F0 D0E8               000000E8  10361          LA    15,232(0,13)
0000715E E3F0 D370 0024          00000370  10362          STG   15,880(0,13)
00007164 E350 D378 0024          00000378  10363          STG   5,888(0,13)
0000716A 4110 D368               00000368  10364          LA    1,872(0,13)
0000716E E3F0 C0E0 0004          00006E90  10365          LG    15,@lit_1946_592 ; rd_slice_read
00007174                                   10366 @@gen_label805 DS    0H
00007174 05EF                              10367          BALR  14,15
00007176                                   10368 @@gen_label806 DS    0H
00007176 B902 00FF                         10369          LTGR  15,15
0000717A 4770 C64A               000073FA  10370          BNZ   @L1065
0000717E                                   10371 @L1066   DS    0H
0000717E E380 7098 0004          00000098  10372          LG    8,152(0,7)  ; offset of end in rd_slice_s
00007184 41F0 7078               00000078  10373          LA    15,120(0,7)
00007188 E3F0 D368 0024          00000368  10374          STG   15,872(0,13)
0000718E 4110 D368               00000368  10375          LA    1,872(0,13)
00007192 E3F0 C0C8 0004          00006E78  10376          LG    15,@lit_1946_585 ; rd_slice_abs_offset
00007198                                   10377 @@gen_label808 DS    0H
00007198 05EF                              10378          BALR  14,15
0000719A                                   10379 @@gen_label809 DS    0H
0000719A B90B 008F                         10380          SLGR  8,15
                                                                                                                           Page  209 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000719E B921 0058                         10381          CLGR  5,8
000071A2 47D0 C64A               000073FA  10382          BNH   @L1069
000071A6                                   10383 @L1070   DS    0H
000071A6 1233                              10384          LTR   3,3
000071A8 47D0 C63A               000073EA  10385          BNH   @L1073
000071AC                                   10386 @L1074   DS    0H
000071AC E3F0 7100 0002          00000100  10387          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
000071B2 4770 C448               000071F8  10388          BNZ   @L1077
000071B6 E3F0 C090 0004          00006E40  10389          LG    15,@lit_1946_572
000071BC 4110 F2CE               000002CE  10390          LA    1,718(0,15)
000071C0 E310 D368 0024          00000368  10391          STG   1,872(0,13)
000071C6 E548 D370 02E9          00000370  10392          MVGHI 880(13),745
000071CC E310 C088 0004          00006E38  10393          LG    1,@lit_1946_573
000071D2 4110 121A               0000021A  10394          LA    1,538(0,1)
000071D6 E310 D378 0024          00000378  10395          STG   1,888(0,13)
000071DC D707 D380 D380 00000380 00000380  10396          XC    896(8,13),896(13)
000071E2 41F0 F362               00000362  10397          LA    15,866(0,15)
000071E6 E3F0 D388 0024          00000388  10398          STG   15,904(0,13)
000071EC 4110 D368               00000368  10399          LA    1,872(0,13)
000071F0 E3F0 C080 0004          00006E30  10400          LG    15,@lit_1946_574 ; rd_kafka_crash
000071F6                                   10401 @@gen_label813 DS    0H
000071F6 05EF                              10402          BALR  14,15
000071F8                                   10403 @@gen_label814 DS    0H
000071F8                                   10404 @L1077   DS    0H
000071F8 41F0 D158               00000158  10405          LA    15,344(0,13)
000071FC E3F0 D368 0024          00000368  10406          STG   15,872(0,13)
00007202 E548 D370 0100          00000370  10407          MVGHI 880(13),256
00007208 E3F0 C090 0004          00006E40  10408          LG    15,@lit_1946_572
0000720E 41F0 F37C               0000037C  10409          LA    15,892(0,15)
00007212 E3F0 D378 0024          00000378  10410          STG   15,888(0,13)
00007218 4110 D368               00000368  10411          LA    1,872(0,13)
0000721C E3F0 C098 0004          00006E48  10412          LG    15,@lit_1946_576 ; snprintf
00007222                                   10413 @@gen_label815 DS    0H
00007222 05EF                              10414          BALR  14,15
00007224                                   10415 @@gen_label816 DS    0H
00007224 41F0 D158               00000158  10416          LA    15,344(0,13)
00007228 B904 001F                         10417          LGR   1,15
0000722C A709 0000               00000000  10418          LGHI  0,0
00007230                                   10419 @@gen_label817 DS 0H
00007230 B25E 000F                         10420          SRST  0,15
00007234 4710 C480               00007230  10421          BC  1,@@gen_label817
00007238 B90B 0001                         10422          SLGR  0,1
0000723C A70F 0002               00000002  10423          CGHI  0,2
00007240 4770 C498               00007248  10424          BNE   @L1079
00007244 9200 D158      00000158 00000000  10425          MVI   344(13),0
00007248                                   10426 @L1078   DS    0H
00007248                                   10427 @L1079   DS    0H
00007248 E3F0 7100 0004          00000100  10428          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000724E A729 1638               00001638  10429          LGHI  2,5688      ; 5688
00007252 41F2 F000               00000000  10430          LA    15,0(2,15)
00007256 E3F0 D368 0024          00000368  10431          STG   15,872(0,13)
0000725C 4110 D368               00000368  10432          LA    1,872(0,13)
                                                                                                                           Page  210 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007260 E3F0 C0A0 0004          00006E50  10433          LG    15,@lit_1946_578 ; mtx_lock
00007266                                   10434 @@gen_label819 DS    0H
00007266 05EF                              10435          BALR  14,15
00007268                                   10436 @@gen_label820 DS    0H
00007268 41F0 D258               00000258  10437          LA    15,600(0,13)
0000726C E3F0 D368 0024          00000368  10438          STG   15,872(0,13)
00007272 E3F0 7100 0004          00000100  10439          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007278 A719 1630               00001630  10440          LGHI  1,5680      ; 5680
0000727C E3F1 F000 0004          00000000  10441          LG    15,0(1,15)
00007282 E3F0 D370 0024          00000370  10442          STG   15,880(0,13)
00007288 E548 D378 0100          00000378  10443          MVGHI 888(13),256
0000728E 4110 D368               00000368  10444          LA    1,872(0,13)
00007292 E3F0 C0A8 0004          00006E58  10445          LG    15,@lit_1946_580 ; rd_strlcpy
00007298                                   10446 @@gen_label821 DS    0H
00007298 05EF                              10447          BALR  14,15
0000729A                                   10448 @@gen_label822 DS    0H
0000729A E3F0 7100 0004          00000100  10449          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
000072A0 41F2 F000               00000000  10450          LA    15,0(2,15)
000072A4 E3F0 D368 0024          00000368  10451          STG   15,872(0,13)
000072AA 4110 D368               00000368  10452          LA    1,872(0,13)
000072AE E3F0 C0B0 0004          00006E60  10453          LG    15,@lit_1946_582 ; mtx_unlock
000072B4                                   10454 @@gen_label823 DS    0H
000072B4 05EF                              10455          BALR  14,15
000072B6                                   10456 @@gen_label824 DS    0H
000072B6 E3F0 70B8 0015          000000B8  10457          LGH   15,184(0,7)
000072BC E3F0 D368 0024          00000368  10458          STG   15,872(0,13)
000072C2 4110 D368               00000368  10459          LA    1,872(0,13)
000072C6 E3F0 C0B8 0004          00006E68  10460          LG    15,@lit_1946_583 ; rd_kafka_ApiKey2str
000072CC                                   10461 @@gen_label825 DS    0H
000072CC 05EF                              10462          BALR  14,15
000072CE                                   10463 @@gen_label826 DS    0H
000072CE B904 002F                         10464          LGR   2,15
000072D2 41F0 7078               00000078  10465          LA    15,120(0,7)
000072D6 E3F0 D368 0024          00000368  10466          STG   15,872(0,13)
000072DC 4110 D368               00000368  10467          LA    1,872(0,13)
000072E0 E3F0 C0C0 0004          00006E70  10468          LG    15,@lit_1946_584 ; rd_slice_offset
000072E6                                   10469 @@gen_label827 DS    0H
000072E6 05EF                              10470          BALR  14,15
000072E8                                   10471 @@gen_label828 DS    0H
000072E8 B904 004F                         10472          LGR   4,15
000072EC E380 7098 0004          00000098  10473          LG    8,152(0,7)  ; offset of end in rd_slice_s
000072F2 41F0 7078               00000078  10474          LA    15,120(0,7)
000072F6 E3F0 D368 0024          00000368  10475          STG   15,872(0,13)
000072FC 4110 D368               00000368  10476          LA    1,872(0,13)
00007300 E3F0 C0C8 0004          00006E78  10477          LG    15,@lit_1946_585 ; rd_slice_abs_offset
00007306                                   10478 @@gen_label829 DS    0H
00007306 05EF                              10479          BALR  14,15
00007308                                   10480 @@gen_label830 DS    0H
00007308 B90B 008F                         10481          SLGR  8,15
0000730C E3F0 71E8 0002          000001E8  10482          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00007312 4780 C570               00007320  10483          BZ    @L1082
                                                                                                                           Page  211 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007316 E3F0 71E8 0004          000001E8  10484          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000731C 47F0 C57A               0000732A  10485          B     @L1083
00007320                                   10486 @L1082   DS    0H
00007320 E3F0 C090 0004          00006E40  10487          LG    15,@lit_1946_572
00007326 41F0 F380               00000380  10488          LA    15,896(0,15)
0000732A                                   10489 @L1083   DS    0H
0000732A E310 7100 0004          00000100  10490          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00007330 E310 1FD0 0004          00000FD0  10491          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00007336 4110 1210               00000210  10492          LA    1,528(0,1)
0000733A E310 D368 0024          00000368  10493          STG   1,872(0,13)
00007340 E310 7100 0004          00000100  10494          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00007346 E310 1FD0 0004          00000FD0  10495          LG    1,4048(0,1)
0000734C E310 D370 0024          00000370  10496          STG   1,880(0,13)
00007352 4110 D258               00000258  10497          LA    1,600(0,13)
00007356 E310 D378 0024          00000378  10498          STG   1,888(0,13)
0000735C B914 0013                         10499          LGFR  1,3
00007360 E310 D380 0024          00000380  10500          STG   1,896(0,13)
00007366 D707 D388 D388 00000388 00000388  10501          XC    904(8,13),904(13)
0000736C E310 C090 0004          00006E40  10502          LG    1,@lit_1946_572
00007372 4130 13A4               000003A4  10503          LA    3,932(0,1)
00007376 E330 D390 0024          00000390  10504          STG   3,912(0,13)
0000737C 4110 13B0               000003B0  10505          LA    1,944(0,1)
00007380 EB12 D398 0024          00000398  10506          STMG  1,2,920(13)
00007386 4810 70BA               000000BA  10507          LH    1,186(0,7)
0000738A B914 0011                         10508          LGFR  1,1
0000738E E310 D3A8 0024          000003A8  10509          STG   1,936(0,13)
00007394 E340 D3B0 0024          000003B0  10510          STG   4,944(0,13)
0000739A E310 7098 0004          00000098  10511          LG    1,152(0,7)  ; offset of end in rd_slice_s
000073A0 E310 7090 000B          00000090  10512          SLG   1,144(0,7)
000073A6 E310 D3B8 0024          000003B8  10513          STG   1,952(0,13)
000073AC E310 C088 0004          00006E38  10514          LG    1,@lit_1946_573
000073B2 4110 121A               0000021A  10515          LA    1,538(0,1)
000073B6 E310 D3C0 0024          000003C0  10516          STG   1,960(0,13)
000073BC E548 D3C8 02E9          000003C8  10517          MVGHI 968(13),745
000073C2 E350 D3D0 0024          000003D0  10518          STG   5,976(0,13)
000073C8 E380 D3D8 0024          000003D8  10519          STG   8,984(0,13)
000073CE E3F0 D3E0 0024          000003E0  10520          STG   15,992(0,13)
000073D4 41F0 D158               00000158  10521          LA    15,344(0,13)
000073D8 E3F0 D3E8 0024          000003E8  10522          STG   15,1000(0,13)
000073DE 4110 D368               00000368  10523          LA    1,872(0,13)
000073E2 E3F0 C0D0 0004          00006E80  10524          LG    15,@lit_1946_589 ; rd_kafka_log0
000073E8                                   10525 @@gen_label832 DS    0H
000073E8 05EF                              10526          BALR  14,15
000073EA                                   10527 @@gen_label833 DS    0H
000073EA                                   10528 @L1073   DS    0H
000073EA E54C 7188 FF65          00000188  10529          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
000073F0 E3C0 C0D8 001A          00006E88  10530          ALGF  12,@lit_region_diff_1946_1_7
                                           10531          DROP  12
                        0000A7AA           10532          USING @REGION_1946_7,12
000073F6 47F0 C1A4               0000A94E  10533          B     @_err_parse@1946@2
                                           10534          DROP  12
                                                                                                                           Page  212 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00006DB0           10535          USING @REGION_1946_1,12
000073FA                                   10536 @L1069   DS    0H
000073FA                                   10537 @L1065   DS    0H
                                           10538 * ***
                                           10539 * ***           do { int64_t _v; size_t _r = rd_slice_read_varint(&(rk\
                                           10540 * buf)->rkbuf_reader, &_v); if ((((_r == 0)))) do { if (log_decode_err\
                                           10541 * ors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asg\
                                           10542 * kafka\\librdkafka\\src\\rdkafka_msgset_reader.c",747, __FUNCTION__, \
                                           10543 * (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __t\
                                           10544 * mpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": " "varint parsin\
                                           10545 * g failed"); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { ch\
                                           10546 * ar _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); r\
                                           10547 * d_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname))\
                                           10548 * ; mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&\
                                           10549 * (rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lo\
                                           10550 * gname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer u\
                                           10551 * nderflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expect\
                                           10552 * ed %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_\
                                           10553 * ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVers\
                                           10554 * ion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)-\
                                           10555 * >end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 747, (size_t)0,\
                                           10556 *  ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_re\
                                           10557 * ader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigatio\
                                           10558 * n : "incorrect broker.version.fallback?", __tmpstr); } while (0); } \
                                           10559 * (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; }\
                                           10560 *  while (0); *(&hdr.TimestampDelta) = _v; } while (0);
000073FA                                   10561 @L1084   DS    0H
000073FA 41F0 7078               00000078  10562          LA    15,120(0,7)
000073FE E3F0 D368 0024          00000368  10563          STG   15,872(0,13)
00007404 41F0 D0B0               000000B0  10564          LA    15,176(0,13)
00007408 E3F0 D370 0024          00000370  10565          STG   15,880(0,13)
0000740E 4110 D368               00000368  10566          LA    1,872(0,13)
00007412 E3F0 C078 0004          00006E28  10567          LG    15,@lit_1946_571 ; rd_slice_read_varint
00007418                                   10568 @@gen_label834 DS    0H
00007418 05EF                              10569          BALR  14,15
0000741A                                   10570 @@gen_label835 DS    0H
0000741A B902 00FF                         10571          LTGR  15,15
0000741E 4780 C67C               0000742C  10572          BE    *+14  Around region break
00007422 E3C0 C0E8 001A          00006E98  10573          ALGF  12,@lit_region_diff_1946_1_2
                                           10574          DROP  12
                        000075C6           10575          USING @REGION_1946_2,12
00007428 47F0 C14A               00007710  10576          B     @L1087
                                           10577          DROP  12
                        00006DB0           10578          USING @REGION_1946_1,12
0000742C                                   10579 @L1088   DS    0H
0000742C 1233                              10580          LTR   3,3
0000742E 4720 C68C               0000743C  10581          BH    *+14  Around region break
00007432 E3C0 C0E8 001A          00006E98  10582          ALGF  12,@lit_region_diff_1946_1_2
                                           10583          DROP  12
                        000075C6           10584          USING @REGION_1946_2,12
00007438 47F0 C0C0               00007686  10585          B     @L1091
                                           10586          DROP  12
                                                                                                                           Page  213 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00006DB0           10587          USING @REGION_1946_1,12
0000743C                                   10588 @L1092   DS    0H
0000743C E3F0 7100 0002          00000100  10589          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007442 4770 C6D8               00007488  10590          BNZ   @L1095
00007446 E3F0 C090 0004          00006E40  10591          LG    15,@lit_1946_572
0000744C 4110 F2CE               000002CE  10592          LA    1,718(0,15)
00007450 E310 D368 0024          00000368  10593          STG   1,872(0,13)
00007456 E548 D370 02EB          00000370  10594          MVGHI 880(13),747
0000745C E310 C088 0004          00006E38  10595          LG    1,@lit_1946_573
00007462 4110 121A               0000021A  10596          LA    1,538(0,1)
00007466 E310 D378 0024          00000378  10597          STG   1,888(0,13)
0000746C D707 D380 D380 00000380 00000380  10598          XC    896(8,13),896(13)
00007472 41F0 F362               00000362  10599          LA    15,866(0,15)
00007476 E3F0 D388 0024          00000388  10600          STG   15,904(0,13)
0000747C 4110 D368               00000368  10601          LA    1,872(0,13)
00007480 E3F0 C080 0004          00006E30  10602          LG    15,@lit_1946_574 ; rd_kafka_crash
00007486                                   10603 @@gen_label839 DS    0H
00007486 05EF                              10604          BALR  14,15
00007488                                   10605 @@gen_label840 DS    0H
00007488                                   10606 @L1095   DS    0H
00007488 41F0 D158               00000158  10607          LA    15,344(0,13)
0000748C E3F0 D368 0024          00000368  10608          STG   15,872(0,13)
00007492 E548 D370 0100          00000370  10609          MVGHI 880(13),256
00007498 E3F0 C090 0004          00006E40  10610          LG    15,@lit_1946_572
0000749E 41F0 F52A               0000052A  10611          LA    15,1322(0,15)
000074A2 E3F0 D378 0024          00000378  10612          STG   15,888(0,13)
000074A8 4110 D368               00000368  10613          LA    1,872(0,13)
000074AC E3F0 C098 0004          00006E48  10614          LG    15,@lit_1946_576 ; snprintf
000074B2                                   10615 @@gen_label841 DS    0H
000074B2 05EF                              10616          BALR  14,15
000074B4                                   10617 @@gen_label842 DS    0H
000074B4 41F0 D158               00000158  10618          LA    15,344(0,13)
000074B8 B904 001F                         10619          LGR   1,15
000074BC A709 0000               00000000  10620          LGHI  0,0
000074C0                                   10621 @@gen_label843 DS 0H
000074C0 B25E 000F                         10622          SRST  0,15
000074C4 4710 C710               000074C0  10623          BC  1,@@gen_label843
000074C8 B90B 0001                         10624          SLGR  0,1
000074CC A70F 0002               00000002  10625          CGHI  0,2
000074D0 4770 C728               000074D8  10626          BNE   @L1097
000074D4 9200 D158      00000158 00000000  10627          MVI   344(13),0
000074D8                                   10628 @L1096   DS    0H
000074D8                                   10629 @L1097   DS    0H
000074D8 E3F0 7100 0004          00000100  10630          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
000074DE A729 1638               00001638  10631          LGHI  2,5688      ; 5688
000074E2 41F2 F000               00000000  10632          LA    15,0(2,15)
000074E6 E3F0 D368 0024          00000368  10633          STG   15,872(0,13)
000074EC 4110 D368               00000368  10634          LA    1,872(0,13)
000074F0 E3F0 C0A0 0004          00006E50  10635          LG    15,@lit_1946_578 ; mtx_lock
000074F6                                   10636 @@gen_label845 DS    0H
000074F6 05EF                              10637          BALR  14,15
000074F8                                   10638 @@gen_label846 DS    0H
                                                                                                                           Page  214 
  Active Usings: @REGION_1946_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000074F8 41F0 D258               00000258  10639          LA    15,600(0,13)
000074FC E3F0 D368 0024          00000368  10640          STG   15,872(0,13)
00007502 E3F0 7100 0004          00000100  10641          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007508 A719 1630               00001630  10642          LGHI  1,5680      ; 5680
0000750C E3F1 F000 0004          00000000  10643          LG    15,0(1,15)
00007512 E3F0 D370 0024          00000370  10644          STG   15,880(0,13)
00007518 E548 D378 0100          00000378  10645          MVGHI 888(13),256
0000751E 4110 D368               00000368  10646          LA    1,872(0,13)
00007522 E3F0 C0A8 0004          00006E58  10647          LG    15,@lit_1946_580 ; rd_strlcpy
00007528                                   10648 @@gen_label847 DS    0H
00007528 05EF                              10649          BALR  14,15
0000752A                                   10650 @@gen_label848 DS    0H
0000752A E3F0 7100 0004          00000100  10651          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007530 41F2 F000               00000000  10652          LA    15,0(2,15)
00007534 E3F0 D368 0024          00000368  10653          STG   15,872(0,13)
0000753A 4110 D368               00000368  10654          LA    1,872(0,13)
0000753E E3F0 C0B0 0004          00006E60  10655          LG    15,@lit_1946_582 ; mtx_unlock
00007544                                   10656 @@gen_label849 DS    0H
00007544 05EF                              10657          BALR  14,15
00007546                                   10658 @@gen_label850 DS    0H
00007546 E3F0 70B8 0015          000000B8  10659          LGH   15,184(0,7)
0000754C E3F0 D368 0024          00000368  10660          STG   15,872(0,13)
00007552 4110 D368               00000368  10661          LA    1,872(0,13)
00007556 E3F0 C0B8 0004          00006E68  10662          LG    15,@lit_1946_583 ; rd_kafka_ApiKey2str
0000755C                                   10663 @@gen_label851 DS    0H
0000755C 05EF                              10664          BALR  14,15
0000755E                                   10665 @@gen_label852 DS    0H
0000755E B904 002F                         10666          LGR   2,15
00007562 41F0 7078               00000078  10667          LA    15,120(0,7)
00007566 E3F0 D368 0024          00000368  10668          STG   15,872(0,13)
0000756C 4110 D368               00000368  10669          LA    1,872(0,13)
00007570 E3F0 C0C0 0004          00006E70  10670          LG    15,@lit_1946_584 ; rd_slice_offset
00007576                                   10671 @@gen_label853 DS    0H
00007576 05EF                              10672          BALR  14,15
00007578                                   10673 @@gen_label854 DS    0H
00007578 B904 004F                         10674          LGR   4,15
0000757C E350 7098 0004          00000098  10675          LG    5,152(0,7)  ; offset of end in rd_slice_s
00007582 41F0 7078               00000078  10676          LA    15,120(0,7)
00007586 E3F0 D368 0024          00000368  10677          STG   15,872(0,13)
0000758C 4110 D368               00000368  10678          LA    1,872(0,13)
00007590 E3F0 C0C8 0004          00006E78  10679          LG    15,@lit_1946_585 ; rd_slice_abs_offset
00007596                                   10680 @@gen_label855 DS    0H
00007596 05EF                              10681          BALR  14,15
00007598                                   10682 @@gen_label856 DS    0H
00007598 B90B 005F                         10683          SLGR  5,15
0000759C E3F0 71E8 0002          000001E8  10684          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000075A2 4780 C806               000075B6  10685          BZ    @L1100
000075A6 E3F0 71E8 0004          000001E8  10686          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000075AC E3C0 C0E8 001A          00006E98  10687          ALGF  12,@lit_region_diff_1946_1_2
                                           10688          DROP  12
                                                                                                                           Page  215 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        000075C6           10689          USING @REGION_1946_2,12
000075B2 47F0 C000               000075C6  10690          B     @L1101
                                           10691          DROP  12
                        00006DB0           10692          USING @REGION_1946_1,12
000075B6                                   10693 @L1100   DS    0H
000075B6 E3F0 C090 0004          00006E40  10694          LG    15,@lit_1946_572
000075BC 41F0 F380               00000380  10695          LA    15,896(0,15)
000075C0 E3C0 C0E8 001A          00006E98  10696          ALGF  12,@lit_region_diff_1946_1_2
000075C6                                   10697 @REGION_1946_2 DS 0H
                                           10698          DROP  12
                        000075C6           10699          USING @REGION_1946_2,12
000075C6                                   10700 @L1101   DS    0H
000075C6 E310 7100 0004          00000100  10701          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000075CC E310 1FD0 0004          00000FD0  10702          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000075D2 4110 1210               00000210  10703          LA    1,528(0,1)
000075D6 E310 D368 0024          00000368  10704          STG   1,872(0,13)
000075DC E310 7100 0004          00000100  10705          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000075E2 E310 1FD0 0004          00000FD0  10706          LG    1,4048(0,1)
000075E8 E310 D370 0024          00000370  10707          STG   1,880(0,13)
000075EE 4110 D258               00000258  10708          LA    1,600(0,13)
000075F2 E310 D378 0024          00000378  10709          STG   1,888(0,13)
000075F8 B914 0013                         10710          LGFR  1,3
000075FC E310 D380 0024          00000380  10711          STG   1,896(0,13)
00007602 D707 D388 D388 00000388 00000388  10712          XC    904(8,13),904(13)
00007608 E310 C0E2 0004          000076A8  10713          LG    1,@lit_1946_628
0000760E 4130 13A4               000003A4  10714          LA    3,932(0,1)
00007612 E330 D390 0024          00000390  10715          STG   3,912(0,13)
00007618 4110 13B0               000003B0  10716          LA    1,944(0,1)
0000761C EB12 D398 0024          00000398  10717          STMG  1,2,920(13)
00007622 4810 70BA               000000BA  10718          LH    1,186(0,7)
00007626 B914 0011                         10719          LGFR  1,1
0000762A E310 D3A8 0024          000003A8  10720          STG   1,936(0,13)
00007630 E340 D3B0 0024          000003B0  10721          STG   4,944(0,13)
00007636 E310 7098 0004          00000098  10722          LG    1,152(0,7)  ; offset of end in rd_slice_s
0000763C E310 7090 000B          00000090  10723          SLG   1,144(0,7)
00007642 E310 D3B8 0024          000003B8  10724          STG   1,952(0,13)
00007648 E310 C0DA 0004          000076A0  10725          LG    1,@lit_1946_629
0000764E 4110 121A               0000021A  10726          LA    1,538(0,1)
00007652 E310 D3C0 0024          000003C0  10727          STG   1,960(0,13)
00007658 E548 D3C8 02EB          000003C8  10728          MVGHI 968(13),747
0000765E D707 D3D0 D3D0 000003D0 000003D0  10729          XC    976(8,13),976(13)
00007664 E350 D3D8 0024          000003D8  10730          STG   5,984(0,13)
0000766A E3F0 D3E0 0024          000003E0  10731          STG   15,992(0,13)
00007670 41F0 D158               00000158  10732          LA    15,344(0,13)
00007674 E3F0 D3E8 0024          000003E8  10733          STG   15,1000(0,13)
0000767A 4110 D368               00000368  10734          LA    1,872(0,13)
0000767E E3F0 C0D2 0004          00007698  10735          LG    15,@lit_1946_630 ; rd_kafka_log0
00007684                                   10736 @@gen_label858 DS    0H
00007684 05EF                              10737          BALR  14,15
00007686                                   10738 @@gen_label859 DS    0H
00007686                                   10739 @L1091   DS    0H
00007686 E54C 7188 FF65          00000188  10740          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
                                                                                                                           Page  216 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000768C E3C0 C0EA 001A          000076B0  10741          ALGF  12,@lit_region_diff_1946_2_7
                                           10742          DROP  12
                        0000A7AA           10743          USING @REGION_1946_7,12
00007692 47F0 C1A4               0000A94E  10744          B     @_err_parse@1946@2
                                           10745          DROP  12
                        000075C6           10746          USING @REGION_1946_2,12
00007698                                   10747          DS    0D
00007698 0000000000000000                  10748 @lit_1946_630 DC AD(rd_kafka_log0)
000076A0 0000000000012808                  10749 @lit_1946_629 DC AD(@DATA)
000076A8 0000000000012AB8                  10750 @lit_1946_628 DC AD(@strings@)
000076B0 000031E4                          10751 @lit_region_diff_1946_2_7  DC A(@REGION_1946_7-@REGION_1946_2)
000076B4 00000000
000076B8 0000000000001378                  10752 @lit_1946_631 DC AD(rd_slice_read_varint)
000076C0 0000000000000000                  10753 @lit_1946_634 DC AD(rd_kafka_crash)
000076C8 0000000000000000                  10754 @lit_1946_636 DC AD(snprintf)
000076D0 0000000000000000                  10755 @lit_1946_638 DC AD(mtx_lock)
000076D8 0000000000001668                  10756 @lit_1946_640 DC AD(rd_strlcpy)
000076E0 0000000000000000                  10757 @lit_1946_642 DC AD(mtx_unlock)
000076E8 00000000000014D0                  10758 @lit_1946_643 DC AD(rd_kafka_$Api$Key2str)
000076F0 00000000000012B8                  10759 @lit_1946_644 DC AD(rd_slice_offset)
000076F8 0000000000001210                  10760 @lit_1946_645 DC AD(rd_slice_abs_offset)
00007700 0000000000000000                  10761 @lit_1946_659 DC AD(rd_slice_read)
00007708 00001E4A                          10762 @lit_region_diff_1946_2_5  DC A(@REGION_1946_5-@REGION_1946_2)
0000770C 000009E0                          10763 @lit_region_diff_1946_2_3  DC A(@REGION_1946_3-@REGION_1946_2)
00007710                                   10764 @L1087   DS    0H
00007710 E3F0 D0B0 0004          000000B0  10765          LG    15,176(0,13) ; _v
00007716 E3F0 D0F0 0024          000000F0  10766          STG   15,240(0,13) ; offset of TimestampDelta in 0000157
                                           10767 * ***           do { int64_t _v; size_t _r = rd_slice_read_varint(&(rk\
                                           10768 * buf)->rkbuf_reader, &_v); if ((((_r == 0)))) do { if (log_decode_err\
                                           10769 * ors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asg\
                                           10770 * kafka\\librdkafka\\src\\rdkafka_msgset_reader.c",748, __FUNCTION__, \
                                           10771 * (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __t\
                                           10772 * mpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": " "varint parsin\
                                           10773 * g failed"); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { ch\
                                           10774 * ar _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); r\
                                           10775 * d_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname))\
                                           10776 * ; mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&\
                                           10777 * (rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lo\
                                           10778 * gname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer u\
                                           10779 * nderflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expect\
                                           10780 * ed %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_\
                                           10781 * ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVers\
                                           10782 * ion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)-\
                                           10783 * >end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 748, (size_t)0,\
                                           10784 *  ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_re\
                                           10785 * ader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigatio\
                                           10786 * n : "incorrect broker.version.fallback?", __tmpstr); } while (0); } \
                                           10787 * (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; }\
                                           10788 *  while (0); *(&hdr.OffsetDelta) = _v; } while (0);
0000771C                                   10789 @L1102   DS    0H
0000771C 41F0 7078               00000078  10790          LA    15,120(0,7)
00007720 E3F0 D368 0024          00000368  10791          STG   15,872(0,13)
                                                                                                                           Page  217 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007726 41F0 D0B8               000000B8  10792          LA    15,184(0,13)
0000772A E3F0 D370 0024          00000370  10793          STG   15,880(0,13)
00007730 4110 D368               00000368  10794          LA    1,872(0,13)
00007734 E3F0 C0F2 0004          000076B8  10795          LG    15,@lit_1946_631 ; rd_slice_read_varint
0000773A                                   10796 @@gen_label860 DS    0H
0000773A 05EF                              10797          BALR  14,15
0000773C                                   10798 @@gen_label861 DS    0H
0000773C B902 00FF                         10799          LTGR  15,15
00007740 4770 C3D2               00007998  10800          BNE   @L1105
00007744                                   10801 @L1106   DS    0H
00007744 1233                              10802          LTR   3,3
00007746 47D0 C3C2               00007988  10803          BNH   @L1109
0000774A                                   10804 @L1110   DS    0H
0000774A E3F0 7100 0002          00000100  10805          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007750 4770 C1D0               00007796  10806          BNZ   @L1113
00007754 E3F0 C0E2 0004          000076A8  10807          LG    15,@lit_1946_628
0000775A 4110 F2CE               000002CE  10808          LA    1,718(0,15)
0000775E E310 D368 0024          00000368  10809          STG   1,872(0,13)
00007764 E548 D370 02EC          00000370  10810          MVGHI 880(13),748
0000776A E310 C0DA 0004          000076A0  10811          LG    1,@lit_1946_629
00007770 4110 121A               0000021A  10812          LA    1,538(0,1)
00007774 E310 D378 0024          00000378  10813          STG   1,888(0,13)
0000777A D707 D380 D380 00000380 00000380  10814          XC    896(8,13),896(13)
00007780 41F0 F362               00000362  10815          LA    15,866(0,15)
00007784 E3F0 D388 0024          00000388  10816          STG   15,904(0,13)
0000778A 4110 D368               00000368  10817          LA    1,872(0,13)
0000778E E3F0 C0FA 0004          000076C0  10818          LG    15,@lit_1946_634 ; rd_kafka_crash
00007794                                   10819 @@gen_label865 DS    0H
00007794 05EF                              10820          BALR  14,15
00007796                                   10821 @@gen_label866 DS    0H
00007796                                   10822 @L1113   DS    0H
00007796 41F0 D158               00000158  10823          LA    15,344(0,13)
0000779A E3F0 D368 0024          00000368  10824          STG   15,872(0,13)
000077A0 E548 D370 0100          00000370  10825          MVGHI 880(13),256
000077A6 E3F0 C0E2 0004          000076A8  10826          LG    15,@lit_1946_628
000077AC 41F0 F52A               0000052A  10827          LA    15,1322(0,15)
000077B0 E3F0 D378 0024          00000378  10828          STG   15,888(0,13)
000077B6 4110 D368               00000368  10829          LA    1,872(0,13)
000077BA E3F0 C102 0004          000076C8  10830          LG    15,@lit_1946_636 ; snprintf
000077C0                                   10831 @@gen_label867 DS    0H
000077C0 05EF                              10832          BALR  14,15
000077C2                                   10833 @@gen_label868 DS    0H
000077C2 41F0 D158               00000158  10834          LA    15,344(0,13)
000077C6 B904 001F                         10835          LGR   1,15
000077CA A709 0000               00000000  10836          LGHI  0,0
000077CE                                   10837 @@gen_label869 DS 0H
000077CE B25E 000F                         10838          SRST  0,15
000077D2 4710 C208               000077CE  10839          BC  1,@@gen_label869
000077D6 B90B 0001                         10840          SLGR  0,1
000077DA A70F 0002               00000002  10841          CGHI  0,2
000077DE 4770 C220               000077E6  10842          BNE   @L1115
000077E2 9200 D158      00000158 00000000  10843          MVI   344(13),0
                                                                                                                           Page  218 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000077E6                                   10844 @L1114   DS    0H
000077E6                                   10845 @L1115   DS    0H
000077E6 E3F0 7100 0004          00000100  10846          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
000077EC A729 1638               00001638  10847          LGHI  2,5688      ; 5688
000077F0 41F2 F000               00000000  10848          LA    15,0(2,15)
000077F4 E3F0 D368 0024          00000368  10849          STG   15,872(0,13)
000077FA 4110 D368               00000368  10850          LA    1,872(0,13)
000077FE E3F0 C10A 0004          000076D0  10851          LG    15,@lit_1946_638 ; mtx_lock
00007804                                   10852 @@gen_label871 DS    0H
00007804 05EF                              10853          BALR  14,15
00007806                                   10854 @@gen_label872 DS    0H
00007806 41F0 D258               00000258  10855          LA    15,600(0,13)
0000780A E3F0 D368 0024          00000368  10856          STG   15,872(0,13)
00007810 E3F0 7100 0004          00000100  10857          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007816 A719 1630               00001630  10858          LGHI  1,5680      ; 5680
0000781A E3F1 F000 0004          00000000  10859          LG    15,0(1,15)
00007820 E3F0 D370 0024          00000370  10860          STG   15,880(0,13)
00007826 E548 D378 0100          00000378  10861          MVGHI 888(13),256
0000782C 4110 D368               00000368  10862          LA    1,872(0,13)
00007830 E3F0 C112 0004          000076D8  10863          LG    15,@lit_1946_640 ; rd_strlcpy
00007836                                   10864 @@gen_label873 DS    0H
00007836 05EF                              10865          BALR  14,15
00007838                                   10866 @@gen_label874 DS    0H
00007838 E3F0 7100 0004          00000100  10867          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000783E 41F2 F000               00000000  10868          LA    15,0(2,15)
00007842 E3F0 D368 0024          00000368  10869          STG   15,872(0,13)
00007848 4110 D368               00000368  10870          LA    1,872(0,13)
0000784C E3F0 C11A 0004          000076E0  10871          LG    15,@lit_1946_642 ; mtx_unlock
00007852                                   10872 @@gen_label875 DS    0H
00007852 05EF                              10873          BALR  14,15
00007854                                   10874 @@gen_label876 DS    0H
00007854 E3F0 70B8 0015          000000B8  10875          LGH   15,184(0,7)
0000785A E3F0 D368 0024          00000368  10876          STG   15,872(0,13)
00007860 4110 D368               00000368  10877          LA    1,872(0,13)
00007864 E3F0 C122 0004          000076E8  10878          LG    15,@lit_1946_643 ; rd_kafka_ApiKey2str
0000786A                                   10879 @@gen_label877 DS    0H
0000786A 05EF                              10880          BALR  14,15
0000786C                                   10881 @@gen_label878 DS    0H
0000786C B904 002F                         10882          LGR   2,15
00007870 41F0 7078               00000078  10883          LA    15,120(0,7)
00007874 E3F0 D368 0024          00000368  10884          STG   15,872(0,13)
0000787A 4110 D368               00000368  10885          LA    1,872(0,13)
0000787E E3F0 C12A 0004          000076F0  10886          LG    15,@lit_1946_644 ; rd_slice_offset
00007884                                   10887 @@gen_label879 DS    0H
00007884 05EF                              10888          BALR  14,15
00007886                                   10889 @@gen_label880 DS    0H
00007886 B904 004F                         10890          LGR   4,15
0000788A E350 7098 0004          00000098  10891          LG    5,152(0,7)  ; offset of end in rd_slice_s
00007890 41F0 7078               00000078  10892          LA    15,120(0,7)
00007894 E3F0 D368 0024          00000368  10893          STG   15,872(0,13)
0000789A 4110 D368               00000368  10894          LA    1,872(0,13)
0000789E E3F0 C132 0004          000076F8  10895          LG    15,@lit_1946_645 ; rd_slice_abs_offset
                                                                                                                           Page  219 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000078A4                                   10896 @@gen_label881 DS    0H
000078A4 05EF                              10897          BALR  14,15
000078A6                                   10898 @@gen_label882 DS    0H
000078A6 B90B 005F                         10899          SLGR  5,15
000078AA E3F0 71E8 0002          000001E8  10900          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000078B0 4780 C2F8               000078BE  10901          BZ    @L1118
000078B4 E3F0 71E8 0004          000001E8  10902          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000078BA 47F0 C302               000078C8  10903          B     @L1119
000078BE                                   10904 @L1118   DS    0H
000078BE E3F0 C0E2 0004          000076A8  10905          LG    15,@lit_1946_628
000078C4 41F0 F380               00000380  10906          LA    15,896(0,15)
000078C8                                   10907 @L1119   DS    0H
000078C8 E310 7100 0004          00000100  10908          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000078CE E310 1FD0 0004          00000FD0  10909          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000078D4 4110 1210               00000210  10910          LA    1,528(0,1)
000078D8 E310 D368 0024          00000368  10911          STG   1,872(0,13)
000078DE E310 7100 0004          00000100  10912          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000078E4 E310 1FD0 0004          00000FD0  10913          LG    1,4048(0,1)
000078EA E310 D370 0024          00000370  10914          STG   1,880(0,13)
000078F0 4110 D258               00000258  10915          LA    1,600(0,13)
000078F4 E310 D378 0024          00000378  10916          STG   1,888(0,13)
000078FA B914 0013                         10917          LGFR  1,3
000078FE E310 D380 0024          00000380  10918          STG   1,896(0,13)
00007904 D707 D388 D388 00000388 00000388  10919          XC    904(8,13),904(13)
0000790A E310 C0E2 0004          000076A8  10920          LG    1,@lit_1946_628
00007910 4130 13A4               000003A4  10921          LA    3,932(0,1)
00007914 E330 D390 0024          00000390  10922          STG   3,912(0,13)
0000791A 4110 13B0               000003B0  10923          LA    1,944(0,1)
0000791E EB12 D398 0024          00000398  10924          STMG  1,2,920(13)
00007924 4810 70BA               000000BA  10925          LH    1,186(0,7)
00007928 B914 0011                         10926          LGFR  1,1
0000792C E310 D3A8 0024          000003A8  10927          STG   1,936(0,13)
00007932 E340 D3B0 0024          000003B0  10928          STG   4,944(0,13)
00007938 E310 7098 0004          00000098  10929          LG    1,152(0,7)  ; offset of end in rd_slice_s
0000793E E310 7090 000B          00000090  10930          SLG   1,144(0,7)
00007944 E310 D3B8 0024          000003B8  10931          STG   1,952(0,13)
0000794A E310 C0DA 0004          000076A0  10932          LG    1,@lit_1946_629
00007950 4110 121A               0000021A  10933          LA    1,538(0,1)
00007954 E310 D3C0 0024          000003C0  10934          STG   1,960(0,13)
0000795A E548 D3C8 02EC          000003C8  10935          MVGHI 968(13),748
00007960 D707 D3D0 D3D0 000003D0 000003D0  10936          XC    976(8,13),976(13)
00007966 E350 D3D8 0024          000003D8  10937          STG   5,984(0,13)
0000796C E3F0 D3E0 0024          000003E0  10938          STG   15,992(0,13)
00007972 41F0 D158               00000158  10939          LA    15,344(0,13)
00007976 E3F0 D3E8 0024          000003E8  10940          STG   15,1000(0,13)
0000797C 4110 D368               00000368  10941          LA    1,872(0,13)
00007980 E3F0 C0D2 0004          00007698  10942          LG    15,@lit_1946_630 ; rd_kafka_log0
00007986                                   10943 @@gen_label884 DS    0H
00007986 05EF                              10944          BALR  14,15
00007988                                   10945 @@gen_label885 DS    0H
                                                                                                                           Page  220 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007988                                   10946 @L1109   DS    0H
00007988 E54C 7188 FF65          00000188  10947          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000798E E3C0 C0EA 001A          000076B0  10948          ALGF  12,@lit_region_diff_1946_2_7
                                           10949          DROP  12
                        0000A7AA           10950          USING @REGION_1946_7,12
00007994 47F0 C1A4               0000A94E  10951          B     @_err_parse@1946@2
                                           10952          DROP  12
                        000075C6           10953          USING @REGION_1946_2,12
00007998                                   10954 @L1105   DS    0H
00007998 E3F0 D0B8 0004          000000B8  10955          LG    15,184(0,13) ; _v
0000799E E3F0 D0F8 0024          000000F8  10956          STG   15,248(0,13) ; offset of OffsetDelta in 0000157
                                           10957 * ***           hdr.Offset = msetr->msetr_v2_hdr->BaseOffset + hdr.Off\
                                           10958 * setDelta;
000079A4 E3F0 6028 0004          00000028  10959          LG    15,40(0,6)  ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
000079AA E3F0 F000 0004          00000000  10960          LG    15,0(0,15)
000079B0 E3F0 D0F8 0008          000000F8  10961          AG    15,248(0,13)
000079B6 E3F0 D100 0024          00000100  10962          STG   15,256(0,13) ; offset of Offset in 0000157
                                           10963 * ***
                                           10964 * ***
                                           10965 * ***           if (hdr.Offset < rktp->rktp_offsets.fetch_offset) {
000079BC E3F0 2238 0020          00000238  10966          CG    15,568(0,2)
000079C2 47B0 C7F8               00007DBE  10967          BNL   @L1120
                                           10968 * ***                   do { if ((((msetr->msetr_rkb)->rkb_rk->rk_conf\
                                           10969 * .debug & (0x40)))) { do { char _logname[256]; mtx_lock(&(msetr->mset\
                                           10970 * r_rkb)->rkb_logname_lock); rd_strlcpy(_logname, msetr->msetr_rkb->rk\
                                           10971 * b_logname, sizeof(_logname)); mtx_unlock(&(msetr->msetr_rkb)->rkb_lo\
                                           10972 * gname_lock); rd_kafka_log0(&(msetr->msetr_rkb)->rkb_rk->rk_conf, (ms\
                                           10973 * etr->msetr_rkb)->rkb_rk, _logname, 7, (0x40), "MSG", "%s [%" "d" "]:\
                                           10974 *  " "Skip offset %" "lld" " < fetch_offset %" "lld", rktp->rktp_rkt->\
                                           10975 * rkt_topic->str, rktp->rktp_partition, hdr.Offset, rktp->rktp_offsets\
                                           10976 * .fetch_offset); } while (0); } } while (0);
000079C6                                   10977 @L1121   DS    0H
000079C6 E3F0 6048 0004          00000048  10978          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000079CC E3F0 FFD0 0004          00000FD0  10979          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
000079D2 9140 F323      00000323 00000040  10980          TM    803(15),64
000079D6 4780 C522               00007AE8  10981          BZ    @L1124
000079DA                                   10982 @L1125   DS    0H
000079DA E3F0 6048 0004          00000048  10983          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000079E0 A759 1638               00001638  10984          LGHI  5,5688      ; 5688
000079E4 41F5 F000               00000000  10985          LA    15,0(5,15)
000079E8 E3F0 D368 0024          00000368  10986          STG   15,872(0,13)
000079EE 4110 D368               00000368  10987          LA    1,872(0,13)
000079F2 E3F0 C10A 0004          000076D0  10988          LG    15,@lit_1946_638 ; mtx_lock
000079F8                                   10989 @@gen_label888 DS    0H
000079F8 05EF                              10990          BALR  14,15
000079FA                                   10991 @@gen_label889 DS    0H
000079FA 41F0 D158               00000158  10992          LA    15,344(0,13)
000079FE E3F0 D368 0024          00000368  10993          STG   15,872(0,13)
00007A04 E3F0 6048 0004          00000048  10994          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                                                                           Page  221 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                der_s
00007A0A A719 1630               00001630  10995          LGHI  1,5680      ; 5680
00007A0E E3F1 F000 0004          00000000  10996          LG    15,0(1,15)
00007A14 E3F0 D370 0024          00000370  10997          STG   15,880(0,13)
00007A1A E548 D378 0100          00000378  10998          MVGHI 888(13),256
00007A20 4110 D368               00000368  10999          LA    1,872(0,13)
00007A24 E3F0 C112 0004          000076D8  11000          LG    15,@lit_1946_640 ; rd_strlcpy
00007A2A                                   11001 @@gen_label890 DS    0H
00007A2A 05EF                              11002          BALR  14,15
00007A2C                                   11003 @@gen_label891 DS    0H
00007A2C E3F0 6048 0004          00000048  11004          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00007A32 41F5 F000               00000000  11005          LA    15,0(5,15)
00007A36 E3F0 D368 0024          00000368  11006          STG   15,872(0,13)
00007A3C 4110 D368               00000368  11007          LA    1,872(0,13)
00007A40 E3F0 C11A 0004          000076E0  11008          LG    15,@lit_1946_642 ; mtx_unlock
00007A46                                   11009 @@gen_label892 DS    0H
00007A46 05EF                              11010          BALR  14,15
00007A48                                   11011 @@gen_label893 DS    0H
00007A48 E3F0 6048 0004          00000048  11012          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00007A4E E3F0 FFD0 0004          00000FD0  11013          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00007A54 41F0 F210               00000210  11014          LA    15,528(0,15)
00007A58 E3F0 D368 0024          00000368  11015          STG   15,872(0,13)
00007A5E E3F0 6048 0004          00000048  11016          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00007A64 E3F0 FFD0 0004          00000FD0  11017          LG    15,4048(0,15)
00007A6A E3F0 D370 0024          00000370  11018          STG   15,880(0,13)
00007A70 41F0 D158               00000158  11019          LA    15,344(0,13)
00007A74 E3F0 D378 0024          00000378  11020          STG   15,888(0,13)
00007A7A E548 D380 0007          00000380  11021          MVGHI 896(13),7
00007A80 E548 D388 0040          00000388  11022          MVGHI 904(13),64
00007A86 E3F0 C0E2 0004          000076A8  11023          LG    15,@lit_1946_628
00007A8C 4110 F542               00000542  11024          LA    1,1346(0,15)
00007A90 E310 D390 0024          00000390  11025          STG   1,912(0,13)
00007A96 41F0 F546               00000546  11026          LA    15,1350(0,15)
00007A9A E3F0 D398 0024          00000398  11027          STG   15,920(0,13)
00007AA0 E3F0 2060 0004          00000060  11028          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00007AA6 E3F0 F080 0004          00000080  11029          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00007AAC E3F0 F008 0004          00000008  11030          LG    15,8(0,15)
00007AB2 E3F0 D3A0 0024          000003A0  11031          STG   15,928(0,13)
00007AB8 E3F0 2068 0014          00000068  11032          LGF   15,104(0,2)
00007ABE E3F0 D3A8 0024          000003A8  11033          STG   15,936(0,13)
00007AC4 E3F0 D100 0004          00000100  11034          LG    15,256(0,13)
00007ACA E3F0 D3B0 0024          000003B0  11035          STG   15,944(0,13)
00007AD0 E3F0 2238 0004          00000238  11036          LG    15,568(0,2)
00007AD6 E3F0 D3B8 0024          000003B8  11037          STG   15,952(0,13)
00007ADC 4110 D368               00000368  11038          LA    1,872(0,13)
00007AE0 E3F0 C0D2 0004          00007698  11039          LG    15,@lit_1946_630 ; rd_kafka_log0
00007AE6                                   11040 @@gen_label894 DS    0H
00007AE6 05EF                              11041          BALR  14,15
00007AE8                                   11042 @@gen_label895 DS    0H
                                                                                                                           Page  222 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007AE8                                   11043 @L1124   DS    0H
                                           11044 * ***   # 759 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           11045 * ***                   do { size_t __len1 = (size_t)(message_end) - r\
                                           11046 * d_slice_offset(&(rkbuf)->rkbuf_reader); if (__len1 && !rd_slice_read\
                                           11047 * (&(rkbuf)->rkbuf_reader, ((void *)0), __len1)) do { size_t __len0 = \
                                           11048 * (size_t)(__len1); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - rd\
                                           11049 * _slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { if (log_decode_\
                                           11050 * errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\\
                                           11051 * asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",759, __FUNCTION_\
                                           11052 * _, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char \
                                           11053 * __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); if (__str\
                                           11054 * len(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[256]; mtx\
                                           11055 * _lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logname, r\
                                           11056 * kbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkbuf-\
                                           11057 * >rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->r\
                                           11058 * kb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decode_err\
                                           11059 * ors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "for %s v%\
                                           11060 * hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " bytes > \
                                           11061 * " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkb\
                                           11062 * uf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_offset(\
                                           11063 * &rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf\
                                           11064 * _reader)->start), __FUNCTION__, 759, __len0, ((&rkbuf->rkbuf_reader)\
                                           11065 * ->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_ufl\
                                           11066 * ow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect broker.ve\
                                           11067 * rsion.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_err = RD_\
                                           11068 * KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } while (0\
                                           11069 * ); } while (0);
00007AE8                                   11070 @L1128   DS    0H
00007AE8 41F0 7078               00000078  11071          LA    15,120(0,7)
00007AEC E3F0 D368 0024          00000368  11072          STG   15,872(0,13)
00007AF2 4110 D368               00000368  11073          LA    1,872(0,13)
00007AF6 E3F0 C12A 0004          000076F0  11074          LG    15,@lit_1946_644 ; rd_slice_offset
00007AFC                                   11075 @@gen_label896 DS    0H
00007AFC 05EF                              11076          BALR  14,15
00007AFE                                   11077 @@gen_label897 DS    0H
00007AFE B90B 004F                         11078          SLGR  4,15
00007B02 B902 00F4                         11079          LTGR  15,4
00007B06 4780 C7EA               00007DB0  11080          BZ    @L1131
00007B0A 41F0 7078               00000078  11081          LA    15,120(0,7)
00007B0E E3F0 D368 0024          00000368  11082          STG   15,872(0,13)
00007B14 D707 D370 D370 00000370 00000370  11083          XC    880(8,13),880(13)
00007B1A E340 D378 0024          00000378  11084          STG   4,888(0,13)
00007B20 4110 D368               00000368  11085          LA    1,872(0,13)
00007B24 E3F0 C13A 0004          00007700  11086          LG    15,@lit_1946_659 ; rd_slice_read
00007B2A                                   11087 @@gen_label899 DS    0H
00007B2A 05EF                              11088          BALR  14,15
00007B2C                                   11089 @@gen_label900 DS    0H
00007B2C B902 00FF                         11090          LTGR  15,15
00007B30 4770 C7EA               00007DB0  11091          BNZ   @L1131
00007B34                                   11092 @L1132   DS    0H
00007B34 E320 7098 0004          00000098  11093          LG    2,152(0,7)  ; offset of end in rd_slice_s
00007B3A 41F0 7078               00000078  11094          LA    15,120(0,7)
                                                                                                                           Page  223 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007B3E E3F0 D368 0024          00000368  11095          STG   15,872(0,13)
00007B44 4110 D368               00000368  11096          LA    1,872(0,13)
00007B48 E3F0 C132 0004          000076F8  11097          LG    15,@lit_1946_645 ; rd_slice_abs_offset
00007B4E                                   11098 @@gen_label902 DS    0H
00007B4E 05EF                              11099          BALR  14,15
00007B50                                   11100 @@gen_label903 DS    0H
00007B50 B90B 002F                         11101          SLGR  2,15
00007B54 B921 0042                         11102          CLGR  4,2
00007B58 47D0 C7EA               00007DB0  11103          BNH   @L1135
00007B5C                                   11104 @L1136   DS    0H
00007B5C 1233                              11105          LTR   3,3
00007B5E 47D0 C7DA               00007DA0  11106          BNH   @L1139
00007B62                                   11107 @L1140   DS    0H
00007B62 E3F0 7100 0002          00000100  11108          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007B68 4770 C5E8               00007BAE  11109          BNZ   @L1143
00007B6C E3F0 C0E2 0004          000076A8  11110          LG    15,@lit_1946_628
00007B72 4110 F2CE               000002CE  11111          LA    1,718(0,15)
00007B76 E310 D368 0024          00000368  11112          STG   1,872(0,13)
00007B7C E548 D370 02F7          00000370  11113          MVGHI 880(13),759
00007B82 E310 C0DA 0004          000076A0  11114          LG    1,@lit_1946_629
00007B88 4110 121A               0000021A  11115          LA    1,538(0,1)
00007B8C E310 D378 0024          00000378  11116          STG   1,888(0,13)
00007B92 D707 D380 D380 00000380 00000380  11117          XC    896(8,13),896(13)
00007B98 41F0 F362               00000362  11118          LA    15,866(0,15)
00007B9C E3F0 D388 0024          00000388  11119          STG   15,904(0,13)
00007BA2 4110 D368               00000368  11120          LA    1,872(0,13)
00007BA6 E3F0 C0FA 0004          000076C0  11121          LG    15,@lit_1946_634 ; rd_kafka_crash
00007BAC                                   11122 @@gen_label907 DS    0H
00007BAC 05EF                              11123          BALR  14,15
00007BAE                                   11124 @@gen_label908 DS    0H
00007BAE                                   11125 @L1143   DS    0H
00007BAE 41F0 D158               00000158  11126          LA    15,344(0,13)
00007BB2 E3F0 D368 0024          00000368  11127          STG   15,872(0,13)
00007BB8 E548 D370 0100          00000370  11128          MVGHI 880(13),256
00007BBE E3F0 C0E2 0004          000076A8  11129          LG    15,@lit_1946_628
00007BC4 41F0 F37C               0000037C  11130          LA    15,892(0,15)
00007BC8 E3F0 D378 0024          00000378  11131          STG   15,888(0,13)
00007BCE 4110 D368               00000368  11132          LA    1,872(0,13)
00007BD2 E3F0 C102 0004          000076C8  11133          LG    15,@lit_1946_636 ; snprintf
00007BD8                                   11134 @@gen_label909 DS    0H
00007BD8 05EF                              11135          BALR  14,15
00007BDA                                   11136 @@gen_label910 DS    0H
00007BDA 41F0 D158               00000158  11137          LA    15,344(0,13)
00007BDE B904 001F                         11138          LGR   1,15
00007BE2 A709 0000               00000000  11139          LGHI  0,0
00007BE6                                   11140 @@gen_label911 DS 0H
00007BE6 B25E 000F                         11141          SRST  0,15
00007BEA 4710 C620               00007BE6  11142          BC  1,@@gen_label911
00007BEE B90B 0001                         11143          SLGR  0,1
00007BF2 A70F 0002               00000002  11144          CGHI  0,2
00007BF6 4770 C638               00007BFE  11145          BNE   @L1145
00007BFA 9200 D158      00000158 00000000  11146          MVI   344(13),0
                                                                                                                           Page  224 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007BFE                                   11147 @L1144   DS    0H
00007BFE                                   11148 @L1145   DS    0H
00007BFE E3F0 7100 0004          00000100  11149          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007C04 A729 1638               00001638  11150          LGHI  2,5688      ; 5688
00007C08 41F2 F000               00000000  11151          LA    15,0(2,15)
00007C0C E3F0 D368 0024          00000368  11152          STG   15,872(0,13)
00007C12 4110 D368               00000368  11153          LA    1,872(0,13)
00007C16 E3F0 C10A 0004          000076D0  11154          LG    15,@lit_1946_638 ; mtx_lock
00007C1C                                   11155 @@gen_label913 DS    0H
00007C1C 05EF                              11156          BALR  14,15
00007C1E                                   11157 @@gen_label914 DS    0H
00007C1E 41F0 D258               00000258  11158          LA    15,600(0,13)
00007C22 E3F0 D368 0024          00000368  11159          STG   15,872(0,13)
00007C28 E3F0 7100 0004          00000100  11160          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007C2E A719 1630               00001630  11161          LGHI  1,5680      ; 5680
00007C32 E3F1 F000 0004          00000000  11162          LG    15,0(1,15)
00007C38 E3F0 D370 0024          00000370  11163          STG   15,880(0,13)
00007C3E E548 D378 0100          00000378  11164          MVGHI 888(13),256
00007C44 4110 D368               00000368  11165          LA    1,872(0,13)
00007C48 E3F0 C112 0004          000076D8  11166          LG    15,@lit_1946_640 ; rd_strlcpy
00007C4E                                   11167 @@gen_label915 DS    0H
00007C4E 05EF                              11168          BALR  14,15
00007C50                                   11169 @@gen_label916 DS    0H
00007C50 E3F0 7100 0004          00000100  11170          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007C56 41F2 F000               00000000  11171          LA    15,0(2,15)
00007C5A E3F0 D368 0024          00000368  11172          STG   15,872(0,13)
00007C60 4110 D368               00000368  11173          LA    1,872(0,13)
00007C64 E3F0 C11A 0004          000076E0  11174          LG    15,@lit_1946_642 ; mtx_unlock
00007C6A                                   11175 @@gen_label917 DS    0H
00007C6A 05EF                              11176          BALR  14,15
00007C6C                                   11177 @@gen_label918 DS    0H
00007C6C E3F0 70B8 0015          000000B8  11178          LGH   15,184(0,7)
00007C72 E3F0 D368 0024          00000368  11179          STG   15,872(0,13)
00007C78 4110 D368               00000368  11180          LA    1,872(0,13)
00007C7C E3F0 C122 0004          000076E8  11181          LG    15,@lit_1946_643 ; rd_kafka_ApiKey2str
00007C82                                   11182 @@gen_label919 DS    0H
00007C82 05EF                              11183          BALR  14,15
00007C84                                   11184 @@gen_label920 DS    0H
00007C84 B904 002F                         11185          LGR   2,15
00007C88 41F0 7078               00000078  11186          LA    15,120(0,7)
00007C8C E3F0 D368 0024          00000368  11187          STG   15,872(0,13)
00007C92 4110 D368               00000368  11188          LA    1,872(0,13)
00007C96 E3F0 C12A 0004          000076F0  11189          LG    15,@lit_1946_644 ; rd_slice_offset
00007C9C                                   11190 @@gen_label921 DS    0H
00007C9C 05EF                              11191          BALR  14,15
00007C9E                                   11192 @@gen_label922 DS    0H
00007C9E B904 005F                         11193          LGR   5,15
00007CA2 E380 7098 0004          00000098  11194          LG    8,152(0,7)  ; offset of end in rd_slice_s
00007CA8 41F0 7078               00000078  11195          LA    15,120(0,7)
00007CAC E3F0 D368 0024          00000368  11196          STG   15,872(0,13)
00007CB2 4110 D368               00000368  11197          LA    1,872(0,13)
00007CB6 E3F0 C132 0004          000076F8  11198          LG    15,@lit_1946_645 ; rd_slice_abs_offset
                                                                                                                           Page  225 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007CBC                                   11199 @@gen_label923 DS    0H
00007CBC 05EF                              11200          BALR  14,15
00007CBE                                   11201 @@gen_label924 DS    0H
00007CBE B90B 008F                         11202          SLGR  8,15
00007CC2 E3F0 71E8 0002          000001E8  11203          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00007CC8 4780 C710               00007CD6  11204          BZ    @L1148
00007CCC E3F0 71E8 0004          000001E8  11205          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00007CD2 47F0 C71A               00007CE0  11206          B     @L1149
00007CD6                                   11207 @L1148   DS    0H
00007CD6 E3F0 C0E2 0004          000076A8  11208          LG    15,@lit_1946_628
00007CDC 41F0 F380               00000380  11209          LA    15,896(0,15)
00007CE0                                   11210 @L1149   DS    0H
00007CE0 E310 7100 0004          00000100  11211          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00007CE6 E310 1FD0 0004          00000FD0  11212          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00007CEC 4110 1210               00000210  11213          LA    1,528(0,1)
00007CF0 E310 D368 0024          00000368  11214          STG   1,872(0,13)
00007CF6 E310 7100 0004          00000100  11215          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00007CFC E310 1FD0 0004          00000FD0  11216          LG    1,4048(0,1)
00007D02 E310 D370 0024          00000370  11217          STG   1,880(0,13)
00007D08 4110 D258               00000258  11218          LA    1,600(0,13)
00007D0C E310 D378 0024          00000378  11219          STG   1,888(0,13)
00007D12 B914 0013                         11220          LGFR  1,3
00007D16 E310 D380 0024          00000380  11221          STG   1,896(0,13)
00007D1C D707 D388 D388 00000388 00000388  11222          XC    904(8,13),904(13)
00007D22 E310 C0E2 0004          000076A8  11223          LG    1,@lit_1946_628
00007D28 4130 13A4               000003A4  11224          LA    3,932(0,1)
00007D2C E330 D390 0024          00000390  11225          STG   3,912(0,13)
00007D32 4110 13B0               000003B0  11226          LA    1,944(0,1)
00007D36 EB12 D398 0024          00000398  11227          STMG  1,2,920(13)
00007D3C 4810 70BA               000000BA  11228          LH    1,186(0,7)
00007D40 B914 0011                         11229          LGFR  1,1
00007D44 E310 D3A8 0024          000003A8  11230          STG   1,936(0,13)
00007D4A E350 D3B0 0024          000003B0  11231          STG   5,944(0,13)
00007D50 E310 7098 0004          00000098  11232          LG    1,152(0,7)  ; offset of end in rd_slice_s
00007D56 E310 7090 000B          00000090  11233          SLG   1,144(0,7)
00007D5C E310 D3B8 0024          000003B8  11234          STG   1,952(0,13)
00007D62 E310 C0DA 0004          000076A0  11235          LG    1,@lit_1946_629
00007D68 4110 121A               0000021A  11236          LA    1,538(0,1)
00007D6C E310 D3C0 0024          000003C0  11237          STG   1,960(0,13)
00007D72 E548 D3C8 02F7          000003C8  11238          MVGHI 968(13),759
00007D78 E340 D3D0 0024          000003D0  11239          STG   4,976(0,13)
00007D7E E380 D3D8 0024          000003D8  11240          STG   8,984(0,13)
00007D84 E3F0 D3E0 0024          000003E0  11241          STG   15,992(0,13)
00007D8A 41F0 D158               00000158  11242          LA    15,344(0,13)
00007D8E E3F0 D3E8 0024          000003E8  11243          STG   15,1000(0,13)
00007D94 4110 D368               00000368  11244          LA    1,872(0,13)
00007D98 E3F0 C0D2 0004          00007698  11245          LG    15,@lit_1946_630 ; rd_kafka_log0
00007D9E                                   11246 @@gen_label926 DS    0H
00007D9E 05EF                              11247          BALR  14,15
00007DA0                                   11248 @@gen_label927 DS    0H
                                                                                                                           Page  226 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007DA0                                   11249 @L1139   DS    0H
00007DA0 E54C 7188 FF65          00000188  11250          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00007DA6 E3C0 C0EA 001A          000076B0  11251          ALGF  12,@lit_region_diff_1946_2_7
                                           11252          DROP  12
                        0000A7AA           11253          USING @REGION_1946_7,12
00007DAC 47F0 C1A4               0000A94E  11254          B     @_err_parse@1946@2
                                           11255          DROP  12
                        000075C6           11256          USING @REGION_1946_2,12
00007DB0                                   11257 @L1135   DS    0H
00007DB0                                   11258 @L1131   DS    0H
                                           11259 * ***                   return RD_KAFKA_RESP_ERR_NO_ERROR;
00007DB0 A7F9 0000               00000000  11260          LGHI  15,0        ; 0
00007DB4 E3C0 C0EA 001A          000076B0  11261          ALGF  12,@lit_region_diff_1946_2_7
                                           11262          DROP  12
                        0000A7AA           11263          USING @REGION_1946_7,12
00007DBA 47F0 C1CC               0000A976  11264          B     @ret_lab_1946
                                           11265          DROP  12
                        000075C6           11266          USING @REGION_1946_2,12
                                           11267 * ***           }
00007DBE                                   11268 @L1120   DS    0H
                                           11269 * ***
                                           11270 * ***
                                           11271 * ***           if (msetr->msetr_v2_hdr->Attributes & (1 << 5)) {
00007DBE E3F0 6028 0004          00000028  11272          LG    15,40(0,6)  ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
00007DC4 48F0 F018               00000018  11273          LH    15,24(0,15)
00007DC8 A7F1 0020               00000020  11274          TML   15,32
00007DCC 4770 C814               00007DDA  11275          BNZ   *+14  Around region break
00007DD0 E3C0 C142 001A          00007708  11276          ALGF  12,@lit_region_diff_1946_2_5
                                           11277          DROP  12
                        00009410           11278          USING @REGION_1946_5,12
00007DD6 47F0 C4FC               0000990C  11279          B     @L1334
                                           11280          DROP  12
                        000075C6           11281          USING @REGION_1946_2,12
                                           11282 * ***                   struct {
                                           11283 * ***                           int64_t KeySize;
                                           11284 * ***                           int16_t Version;
                                           11285 * ***                           int16_t Type;
                                           11286 * ***                   } ctrl_data;
                                           11287 * ***                   int64_t aborted_txn_start_offset;
                                           11288 * ***
                                           11289 * ***                   do { int64_t _v; size_t _r = rd_slice_read_var\
                                           11290 * int(&(rkbuf)->rkbuf_reader, &_v); if ((((_r == 0)))) do { if (log_de\
                                           11291 * code_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash(\
                                           11292 * "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",772, __FUNC\
                                           11293 * TION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); \
                                           11294 * char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": " "varin\
                                           11295 * t parsing failed"); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0';\
                                           11296 *  do { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_\
                                           11297 * lock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_l\
                                           11298 * ogname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafk\
                                           11299 * a_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb\
                                                                                                                           Page  227 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11300 * _rk, _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read \
                                           11301 * buffer underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): "\
                                           11302 *  "expected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", r\
                                           11303 * d_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr\
                                           11304 * .ApiVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_\
                                           11305 * reader)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 772, (s\
                                           11306 * ize_t)0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->\
                                           11307 * rkbuf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_m\
                                           11308 * itigation : "incorrect broker.version.fallback?", __tmpstr); } while\
                                           11309 *  (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_\
                                           11310 * parse; } while (0); *(&ctrl_data.KeySize) = _v; } while (0);
00007DDA                                   11311 @L1151   DS    0H
00007DDA 41F0 7078               00000078  11312          LA    15,120(0,7)
00007DDE E3F0 D368 0024          00000368  11313          STG   15,872(0,13)
00007DE4 41F0 D0C0               000000C0  11314          LA    15,192(0,13)
00007DE8 E3F0 D370 0024          00000370  11315          STG   15,880(0,13)
00007DEE 4110 D368               00000368  11316          LA    1,872(0,13)
00007DF2 E3F0 C0F2 0004          000076B8  11317          LG    15,@lit_1946_631 ; rd_slice_read_varint
00007DF8                                   11318 @@gen_label929 DS    0H
00007DF8 05EF                              11319          BALR  14,15
00007DFA                                   11320 @@gen_label930 DS    0H
00007DFA B902 00FF                         11321          LTGR  15,15
00007DFE 4780 C846               00007E0C  11322          BE    *+14  Around region break
00007E02 E3C0 C146 001A          0000770C  11323          ALGF  12,@lit_region_diff_1946_2_3
                                           11324          DROP  12
                        00007FA6           11325          USING @REGION_1946_3,12
00007E08 47F0 C13E               000080E4  11326          B     @L1154
                                           11327          DROP  12
                        000075C6           11328          USING @REGION_1946_2,12
00007E0C                                   11329 @L1155   DS    0H
00007E0C 1233                              11330          LTR   3,3
00007E0E 4720 C856               00007E1C  11331          BH    *+14  Around region break
00007E12 E3C0 C146 001A          0000770C  11332          ALGF  12,@lit_region_diff_1946_2_3
                                           11333          DROP  12
                        00007FA6           11334          USING @REGION_1946_3,12
00007E18 47F0 C0C0               00008066  11335          B     @L1158
                                           11336          DROP  12
                        000075C6           11337          USING @REGION_1946_2,12
00007E1C                                   11338 @L1159   DS    0H
00007E1C E3F0 7100 0002          00000100  11339          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007E22 4770 C8A2               00007E68  11340          BNZ   @L1162
00007E26 E3F0 C0E2 0004          000076A8  11341          LG    15,@lit_1946_628
00007E2C 4110 F2CE               000002CE  11342          LA    1,718(0,15)
00007E30 E310 D368 0024          00000368  11343          STG   1,872(0,13)
00007E36 E548 D370 0304          00000370  11344          MVGHI 880(13),772
00007E3C E310 C0DA 0004          000076A0  11345          LG    1,@lit_1946_629
00007E42 4110 121A               0000021A  11346          LA    1,538(0,1)
00007E46 E310 D378 0024          00000378  11347          STG   1,888(0,13)
00007E4C D707 D380 D380 00000380 00000380  11348          XC    896(8,13),896(13)
00007E52 41F0 F362               00000362  11349          LA    15,866(0,15)
00007E56 E3F0 D388 0024          00000388  11350          STG   15,904(0,13)
00007E5C 4110 D368               00000368  11351          LA    1,872(0,13)
                                                                                                                           Page  228 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007E60 E3F0 C0FA 0004          000076C0  11352          LG    15,@lit_1946_634 ; rd_kafka_crash
00007E66                                   11353 @@gen_label934 DS    0H
00007E66 05EF                              11354          BALR  14,15
00007E68                                   11355 @@gen_label935 DS    0H
00007E68                                   11356 @L1162   DS    0H
00007E68 41F0 D168               00000168  11357          LA    15,360(0,13)
00007E6C E3F0 D368 0024          00000368  11358          STG   15,872(0,13)
00007E72 E548 D370 0100          00000370  11359          MVGHI 880(13),256
00007E78 E3F0 C0E2 0004          000076A8  11360          LG    15,@lit_1946_628
00007E7E 41F0 F52A               0000052A  11361          LA    15,1322(0,15)
00007E82 E3F0 D378 0024          00000378  11362          STG   15,888(0,13)
00007E88 4110 D368               00000368  11363          LA    1,872(0,13)
00007E8C E3F0 C102 0004          000076C8  11364          LG    15,@lit_1946_636 ; snprintf
00007E92                                   11365 @@gen_label936 DS    0H
00007E92 05EF                              11366          BALR  14,15
00007E94                                   11367 @@gen_label937 DS    0H
00007E94 41F0 D168               00000168  11368          LA    15,360(0,13)
00007E98 B904 001F                         11369          LGR   1,15
00007E9C A709 0000               00000000  11370          LGHI  0,0
00007EA0                                   11371 @@gen_label938 DS 0H
00007EA0 B25E 000F                         11372          SRST  0,15
00007EA4 4710 C8DA               00007EA0  11373          BC  1,@@gen_label938
00007EA8 B90B 0001                         11374          SLGR  0,1
00007EAC A70F 0002               00000002  11375          CGHI  0,2
00007EB0 4770 C8F2               00007EB8  11376          BNE   @L1164
00007EB4 9200 D168      00000168 00000000  11377          MVI   360(13),0
00007EB8                                   11378 @L1163   DS    0H
00007EB8                                   11379 @L1164   DS    0H
00007EB8 E3F0 7100 0004          00000100  11380          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007EBE A729 1638               00001638  11381          LGHI  2,5688      ; 5688
00007EC2 41F2 F000               00000000  11382          LA    15,0(2,15)
00007EC6 E3F0 D368 0024          00000368  11383          STG   15,872(0,13)
00007ECC 4110 D368               00000368  11384          LA    1,872(0,13)
00007ED0 E3F0 C10A 0004          000076D0  11385          LG    15,@lit_1946_638 ; mtx_lock
00007ED6                                   11386 @@gen_label940 DS    0H
00007ED6 05EF                              11387          BALR  14,15
00007ED8                                   11388 @@gen_label941 DS    0H
00007ED8 41F0 D268               00000268  11389          LA    15,616(0,13)
00007EDC E3F0 D368 0024          00000368  11390          STG   15,872(0,13)
00007EE2 E3F0 7100 0004          00000100  11391          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007EE8 A719 1630               00001630  11392          LGHI  1,5680      ; 5680
00007EEC E3F1 F000 0004          00000000  11393          LG    15,0(1,15)
00007EF2 E3F0 D370 0024          00000370  11394          STG   15,880(0,13)
00007EF8 E548 D378 0100          00000378  11395          MVGHI 888(13),256
00007EFE 4110 D368               00000368  11396          LA    1,872(0,13)
00007F02 E3F0 C112 0004          000076D8  11397          LG    15,@lit_1946_640 ; rd_strlcpy
00007F08                                   11398 @@gen_label942 DS    0H
00007F08 05EF                              11399          BALR  14,15
00007F0A                                   11400 @@gen_label943 DS    0H
00007F0A E3F0 7100 0004          00000100  11401          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00007F10 41F2 F000               00000000  11402          LA    15,0(2,15)
00007F14 E3F0 D368 0024          00000368  11403          STG   15,872(0,13)
                                                                                                                           Page  229 
  Active Usings: @REGION_1946_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007F1A 4110 D368               00000368  11404          LA    1,872(0,13)
00007F1E E3F0 C11A 0004          000076E0  11405          LG    15,@lit_1946_642 ; mtx_unlock
00007F24                                   11406 @@gen_label944 DS    0H
00007F24 05EF                              11407          BALR  14,15
00007F26                                   11408 @@gen_label945 DS    0H
00007F26 E3F0 70B8 0015          000000B8  11409          LGH   15,184(0,7)
00007F2C E3F0 D368 0024          00000368  11410          STG   15,872(0,13)
00007F32 4110 D368               00000368  11411          LA    1,872(0,13)
00007F36 E3F0 C122 0004          000076E8  11412          LG    15,@lit_1946_643 ; rd_kafka_ApiKey2str
00007F3C                                   11413 @@gen_label946 DS    0H
00007F3C 05EF                              11414          BALR  14,15
00007F3E                                   11415 @@gen_label947 DS    0H
00007F3E B904 002F                         11416          LGR   2,15
00007F42 41F0 7078               00000078  11417          LA    15,120(0,7)
00007F46 E3F0 D368 0024          00000368  11418          STG   15,872(0,13)
00007F4C 4110 D368               00000368  11419          LA    1,872(0,13)
00007F50 E3F0 C12A 0004          000076F0  11420          LG    15,@lit_1946_644 ; rd_slice_offset
00007F56                                   11421 @@gen_label948 DS    0H
00007F56 05EF                              11422          BALR  14,15
00007F58                                   11423 @@gen_label949 DS    0H
00007F58 B904 004F                         11424          LGR   4,15
00007F5C E350 7098 0004          00000098  11425          LG    5,152(0,7)  ; offset of end in rd_slice_s
00007F62 41F0 7078               00000078  11426          LA    15,120(0,7)
00007F66 E3F0 D368 0024          00000368  11427          STG   15,872(0,13)
00007F6C 4110 D368               00000368  11428          LA    1,872(0,13)
00007F70 E3F0 C132 0004          000076F8  11429          LG    15,@lit_1946_645 ; rd_slice_abs_offset
00007F76                                   11430 @@gen_label950 DS    0H
00007F76 05EF                              11431          BALR  14,15
00007F78                                   11432 @@gen_label951 DS    0H
00007F78 B90B 005F                         11433          SLGR  5,15
00007F7C E3F0 71E8 0002          000001E8  11434          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00007F82 4780 C9D0               00007F96  11435          BZ    @L1167
00007F86 E3F0 71E8 0004          000001E8  11436          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00007F8C E3C0 C146 001A          0000770C  11437          ALGF  12,@lit_region_diff_1946_2_3
                                           11438          DROP  12
                        00007FA6           11439          USING @REGION_1946_3,12
00007F92 47F0 C000               00007FA6  11440          B     @L1168
                                           11441          DROP  12
                        000075C6           11442          USING @REGION_1946_2,12
00007F96                                   11443 @L1167   DS    0H
00007F96 E3F0 C0E2 0004          000076A8  11444          LG    15,@lit_1946_628
00007F9C 41F0 F380               00000380  11445          LA    15,896(0,15)
00007FA0 E3C0 C146 001A          0000770C  11446          ALGF  12,@lit_region_diff_1946_2_3
00007FA6                                   11447 @REGION_1946_3 DS 0H
                                           11448          DROP  12
                        00007FA6           11449          USING @REGION_1946_3,12
00007FA6                                   11450 @L1168   DS    0H
00007FA6 E310 7100 0004          00000100  11451          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00007FAC E310 1FD0 0004          00000FD0  11452          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00007FB2 4110 1210               00000210  11453          LA    1,528(0,1)
                                                                                                                           Page  230 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007FB6 E310 D368 0024          00000368  11454          STG   1,872(0,13)
00007FBC E310 7100 0004          00000100  11455          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00007FC2 E310 1FD0 0004          00000FD0  11456          LG    1,4048(0,1)
00007FC8 E310 D370 0024          00000370  11457          STG   1,880(0,13)
00007FCE 4110 D268               00000268  11458          LA    1,616(0,13)
00007FD2 E310 D378 0024          00000378  11459          STG   1,888(0,13)
00007FD8 B914 0013                         11460          LGFR  1,3
00007FDC E310 D380 0024          00000380  11461          STG   1,896(0,13)
00007FE2 D707 D388 D388 00000388 00000388  11462          XC    904(8,13),904(13)
00007FE8 E310 C0E2 0004          00008088  11463          LG    1,@lit_1946_696
00007FEE 4130 13A4               000003A4  11464          LA    3,932(0,1)
00007FF2 E330 D390 0024          00000390  11465          STG   3,912(0,13)
00007FF8 4110 13B0               000003B0  11466          LA    1,944(0,1)
00007FFC EB12 D398 0024          00000398  11467          STMG  1,2,920(13)
00008002 4810 70BA               000000BA  11468          LH    1,186(0,7)
00008006 B914 0011                         11469          LGFR  1,1
0000800A E310 D3A8 0024          000003A8  11470          STG   1,936(0,13)
00008010 E340 D3B0 0024          000003B0  11471          STG   4,944(0,13)
00008016 E310 7098 0004          00000098  11472          LG    1,152(0,7)  ; offset of end in rd_slice_s
0000801C E310 7090 000B          00000090  11473          SLG   1,144(0,7)
00008022 E310 D3B8 0024          000003B8  11474          STG   1,952(0,13)
00008028 E310 C0DA 0004          00008080  11475          LG    1,@lit_1946_697
0000802E 4110 121A               0000021A  11476          LA    1,538(0,1)
00008032 E310 D3C0 0024          000003C0  11477          STG   1,960(0,13)
00008038 E548 D3C8 0304          000003C8  11478          MVGHI 968(13),772
0000803E D707 D3D0 D3D0 000003D0 000003D0  11479          XC    976(8,13),976(13)
00008044 E350 D3D8 0024          000003D8  11480          STG   5,984(0,13)
0000804A E3F0 D3E0 0024          000003E0  11481          STG   15,992(0,13)
00008050 41F0 D168               00000168  11482          LA    15,360(0,13)
00008054 E3F0 D3E8 0024          000003E8  11483          STG   15,1000(0,13)
0000805A 4110 D368               00000368  11484          LA    1,872(0,13)
0000805E E3F0 C0D2 0004          00008078  11485          LG    15,@lit_1946_698 ; rd_kafka_log0
00008064                                   11486 @@gen_label953 DS    0H
00008064 05EF                              11487          BALR  14,15
00008066                                   11488 @@gen_label954 DS    0H
00008066                                   11489 @L1158   DS    0H
00008066 E54C 7188 FF65          00000188  11490          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000806C E3C0 C0EA 001A          00008090  11491          ALGF  12,@lit_region_diff_1946_3_7
                                           11492          DROP  12
                        0000A7AA           11493          USING @REGION_1946_7,12
00008072 47F0 C1A4               0000A94E  11494          B     @_err_parse@1946@2
                                           11495          DROP  12
                        00007FA6           11496          USING @REGION_1946_3,12
00008078                                   11497          DS    0D
00008078 0000000000000000                  11498 @lit_1946_698 DC AD(rd_kafka_log0)
00008080 0000000000012808                  11499 @lit_1946_697 DC AD(@DATA)
00008088 0000000000012AB8                  11500 @lit_1946_696 DC AD(@strings@)
00008090 00002804                          11501 @lit_region_diff_1946_3_7  DC A(@REGION_1946_7-@REGION_1946_3)
00008094 00000000
00008098 0000000000000000                  11502 @lit_1946_701 DC AD(rd_kafka_crash)
000080A0 0000000000000000                  11503 @lit_1946_703 DC AD(mtx_lock)
000080A8 0000000000001668                  11504 @lit_1946_705 DC AD(rd_strlcpy)
                                                                                                                           Page  231 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000080B0 0000000000000000                  11505 @lit_1946_707 DC AD(mtx_unlock)
000080B8 00000000000014D0                  11506 @lit_1946_708 DC AD(rd_kafka_$Api$Key2str)
000080C0 00000000000012B8                  11507 @lit_1946_711 DC AD(rd_slice_offset)
000080C8 0000000000000000                  11508 @lit_1946_724 DC AD(rd_slice_read)
000080D0 0000000000001210                  11509 @lit_1946_725 DC AD(rd_slice_abs_offset)
000080D8 0000000000000000                  11510 @lit_1946_730 DC AD(snprintf)
000080E0 00000A4A                          11511 @lit_region_diff_1946_3_4  DC A(@REGION_1946_4-@REGION_1946_3)
000080E4                                   11512 @L1154   DS    0H
000080E4 E3F0 D0C0 0004          000000C0  11513          LG    15,192(0,13) ; _v
000080EA E3F0 D158 0024          00000158  11514          STG   15,344(0,13)
                                           11515 * ***
                                           11516 * ***                   if (((ctrl_data.KeySize < 2)))
000080F0 E558 D158 0002          00000158  11517          CGHSI 344(13),2
000080F6 47B0 C438               000083DE  11518          BNL   @L1189
                                           11519 * ***                           do { if (log_decode_errors > 0) { do {\
                                           11520 *  if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkaf\
                                           11521 * ka\\src\\rdkafka_msgset_reader.c",775, __FUNCTION__, (((void *)0)), \
                                           11522 * "assert: " "rkbuf->rkbuf_rkb"); } while (0); do { char _logname[256]\
                                           11523 * ; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logna\
                                           11524 * me, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(r\
                                           11525 * kbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rk\
                                           11526 * b)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decod\
                                           11527 * e_errors, 0x0, "PROTOERR", "Protocol parse failure for %s v%hd%s " "\
                                           11528 * at %" "zu" "/%" "zu" " (%s:%i) " "(incorrect broker.version.fallback\
                                           11529 * ?)", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_\
                                           11530 * reqhdr.ApiVersion, (rkbuf->rkbuf_flags&0x40? "(flex)":""), rd_slice_\
                                           11531 * offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf\
                                           11532 * ->rkbuf_reader)->start), __FUNCTION__, 775); } while (0); do { char \
                                           11533 * _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_s\
                                           11534 * trlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); m\
                                           11535 * tx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rk\
                                           11536 * buf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logna\
                                           11537 * me, log_decode_errors, 0x0, "PROTOERR", "%s [%" "d" "]: " "Ctrl mess\
                                           11538 * age at offset %" "lld" " has invalid key size %" "lld", rktp->rktp_r\
                                           11539 * kt->rkt_topic->str, rktp->rktp_partition, hdr.Offset, ctrl_data.KeyS\
                                           11540 * ize); } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__BAD_MSG\
                                           11541 * ; goto err_parse; } while (0);
000080FA                                   11542 @L1170   DS    0H
000080FA 1233                              11543          LTR   3,3
000080FC 47D0 C428               000083CE  11544          BNH   @L1173
00008100                                   11545 @L1174   DS    0H
00008100 E3F0 7100 0002          00000100  11546          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008106 4770 C1A6               0000814C  11547          BNZ   @L1177
0000810A E3F0 C0E2 0004          00008088  11548          LG    15,@lit_1946_696
00008110 4110 F2CE               000002CE  11549          LA    1,718(0,15)
00008114 E310 D368 0024          00000368  11550          STG   1,872(0,13)
0000811A E548 D370 0307          00000370  11551          MVGHI 880(13),775
00008120 E310 C0DA 0004          00008080  11552          LG    1,@lit_1946_697
00008126 4110 121A               0000021A  11553          LA    1,538(0,1)
0000812A E310 D378 0024          00000378  11554          STG   1,888(0,13)
00008130 D707 D380 D380 00000380 00000380  11555          XC    896(8,13),896(13)
00008136 41F0 F362               00000362  11556          LA    15,866(0,15)
                                                                                                                           Page  232 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000813A E3F0 D388 0024          00000388  11557          STG   15,904(0,13)
00008140 4110 D368               00000368  11558          LA    1,872(0,13)
00008144 E3F0 C0F2 0004          00008098  11559          LG    15,@lit_1946_701 ; rd_kafka_crash
0000814A                                   11560 @@gen_label958 DS    0H
0000814A 05EF                              11561          BALR  14,15
0000814C                                   11562 @@gen_label959 DS    0H
0000814C                                   11563 @L1177   DS    0H
0000814C                                   11564 @L1178   DS    0H
0000814C E3F0 7100 0004          00000100  11565          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008152 A749 1638               00001638  11566          LGHI  4,5688      ; 5688
00008156 41F4 F000               00000000  11567          LA    15,0(4,15)
0000815A E3F0 D368 0024          00000368  11568          STG   15,872(0,13)
00008160 4110 D368               00000368  11569          LA    1,872(0,13)
00008164 E3F0 C0FA 0004          000080A0  11570          LG    15,@lit_1946_703 ; mtx_lock
0000816A                                   11571 @@gen_label960 DS    0H
0000816A 05EF                              11572          BALR  14,15
0000816C                                   11573 @@gen_label961 DS    0H
0000816C 41F0 D168               00000168  11574          LA    15,360(0,13)
00008170 E3F0 D368 0024          00000368  11575          STG   15,872(0,13)
00008176 E3F0 7100 0004          00000100  11576          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000817C A719 1630               00001630  11577          LGHI  1,5680      ; 5680
00008180 E3F1 F000 0004          00000000  11578          LG    15,0(1,15)
00008186 E3F0 D370 0024          00000370  11579          STG   15,880(0,13)
0000818C E548 D378 0100          00000378  11580          MVGHI 888(13),256
00008192 4110 D368               00000368  11581          LA    1,872(0,13)
00008196 E3F0 C102 0004          000080A8  11582          LG    15,@lit_1946_705 ; rd_strlcpy
0000819C                                   11583 @@gen_label962 DS    0H
0000819C 05EF                              11584          BALR  14,15
0000819E                                   11585 @@gen_label963 DS    0H
0000819E E3F0 7100 0004          00000100  11586          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
000081A4 41F4 F000               00000000  11587          LA    15,0(4,15)
000081A8 E3F0 D368 0024          00000368  11588          STG   15,872(0,13)
000081AE 4110 D368               00000368  11589          LA    1,872(0,13)
000081B2 E3F0 C10A 0004          000080B0  11590          LG    15,@lit_1946_707 ; mtx_unlock
000081B8                                   11591 @@gen_label964 DS    0H
000081B8 05EF                              11592          BALR  14,15
000081BA                                   11593 @@gen_label965 DS    0H
000081BA E3F0 70B8 0015          000000B8  11594          LGH   15,184(0,7)
000081C0 E3F0 D368 0024          00000368  11595          STG   15,872(0,13)
000081C6 4110 D368               00000368  11596          LA    1,872(0,13)
000081CA E3F0 C112 0004          000080B8  11597          LG    15,@lit_1946_708 ; rd_kafka_ApiKey2str
000081D0                                   11598 @@gen_label966 DS    0H
000081D0 05EF                              11599          BALR  14,15
000081D2                                   11600 @@gen_label967 DS    0H
000081D2 B904 004F                         11601          LGR   4,15
000081D6 9140 7023      00000023 00000040  11602          TM    35(7),64
000081DA 4780 C246               000081EC  11603          BZ    @L1181
000081DE E3F0 C0E2 0004          00008088  11604          LG    15,@lit_1946_696
000081E4 4150 F42A               0000042A  11605          LA    5,1066(0,15)
000081E8 47F0 C250               000081F6  11606          B     @L1182
000081EC                                   11607 @L1181   DS    0H
000081EC E3F0 C0E2 0004          00008088  11608          LG    15,@lit_1946_696
                                                                                                                           Page  233 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000081F2 4150 F0A8               000000A8  11609          LA    5,168(0,15)
000081F6                                   11610 @L1182   DS    0H
000081F6 41F0 7078               00000078  11611          LA    15,120(0,7)
000081FA E3F0 D368 0024          00000368  11612          STG   15,872(0,13)
00008200 4110 D368               00000368  11613          LA    1,872(0,13)
00008204 E3F0 C11A 0004          000080C0  11614          LG    15,@lit_1946_711 ; rd_slice_offset
0000820A                                   11615 @@gen_label969 DS    0H
0000820A 05EF                              11616          BALR  14,15
0000820C                                   11617 @@gen_label970 DS    0H
0000820C E310 7100 0004          00000100  11618          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00008212 E310 1FD0 0004          00000FD0  11619          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00008218 4110 1210               00000210  11620          LA    1,528(0,1)
0000821C E310 D368 0024          00000368  11621          STG   1,872(0,13)
00008222 E310 7100 0004          00000100  11622          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00008228 E310 1FD0 0004          00000FD0  11623          LG    1,4048(0,1)
0000822E E310 D370 0024          00000370  11624          STG   1,880(0,13)
00008234 4110 D168               00000168  11625          LA    1,360(0,13)
00008238 E310 D378 0024          00000378  11626          STG   1,888(0,13)
0000823E B914 0013                         11627          LGFR  1,3
00008242 E310 D380 0024          00000380  11628          STG   1,896(0,13)
00008248 D707 D388 D388 00000388 00000388  11629          XC    904(8,13),904(13)
0000824E E310 C0E2 0004          00008088  11630          LG    1,@lit_1946_696
00008254 4180 1432               00000432  11631          LA    8,1074(0,1)
00008258 E380 D390 0024          00000390  11632          STG   8,912(0,13)
0000825E 4110 143C               0000043C  11633          LA    1,1084(0,1)
00008262 E310 D398 0024          00000398  11634          STG   1,920(0,13)
00008268 E340 D3A0 0024          000003A0  11635          STG   4,928(0,13)
0000826E 4810 70BA               000000BA  11636          LH    1,186(0,7)
00008272 B914 0011                         11637          LGFR  1,1
00008276 E310 D3A8 0024          000003A8  11638          STG   1,936(0,13)
0000827C E350 D3B0 0024          000003B0  11639          STG   5,944(0,13)
00008282 E3F0 D3B8 0024          000003B8  11640          STG   15,952(0,13)
00008288 E3F0 7098 0004          00000098  11641          LG    15,152(0,7) ; offset of end in rd_slice_s
0000828E E3F0 7090 000B          00000090  11642          SLG   15,144(0,7)
00008294 E3F0 D3C0 0024          000003C0  11643          STG   15,960(0,13)
0000829A E3F0 C0DA 0004          00008080  11644          LG    15,@lit_1946_697
000082A0 41F0 F21A               0000021A  11645          LA    15,538(0,15)
000082A4 E3F0 D3C8 0024          000003C8  11646          STG   15,968(0,13)
000082AA E548 D3D0 0307          000003D0  11647          MVGHI 976(13),775
000082B0 4110 D368               00000368  11648          LA    1,872(0,13)
000082B4 E3F0 C0D2 0004          00008078  11649          LG    15,@lit_1946_698 ; rd_kafka_log0
000082BA                                   11650 @@gen_label971 DS    0H
000082BA 05EF                              11651          BALR  14,15
000082BC                                   11652 @@gen_label972 DS    0H
000082BC                                   11653 @L1183   DS    0H
000082BC E3F0 7100 0004          00000100  11654          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
000082C2 A749 1638               00001638  11655          LGHI  4,5688      ; 5688
000082C6 41F4 F000               00000000  11656          LA    15,0(4,15)
000082CA E3F0 D368 0024          00000368  11657          STG   15,872(0,13)
000082D0 4110 D368               00000368  11658          LA    1,872(0,13)
000082D4 E3F0 C0FA 0004          000080A0  11659          LG    15,@lit_1946_703 ; mtx_lock
000082DA                                   11660 @@gen_label973 DS    0H
                                                                                                                           Page  234 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000082DA 05EF                              11661          BALR  14,15
000082DC                                   11662 @@gen_label974 DS    0H
000082DC 41F0 D168               00000168  11663          LA    15,360(0,13)
000082E0 E3F0 D368 0024          00000368  11664          STG   15,872(0,13)
000082E6 E3F0 7100 0004          00000100  11665          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
000082EC A719 1630               00001630  11666          LGHI  1,5680      ; 5680
000082F0 E3F1 F000 0004          00000000  11667          LG    15,0(1,15)
000082F6 E3F0 D370 0024          00000370  11668          STG   15,880(0,13)
000082FC E548 D378 0100          00000378  11669          MVGHI 888(13),256
00008302 4110 D368               00000368  11670          LA    1,872(0,13)
00008306 E3F0 C102 0004          000080A8  11671          LG    15,@lit_1946_705 ; rd_strlcpy
0000830C                                   11672 @@gen_label975 DS    0H
0000830C 05EF                              11673          BALR  14,15
0000830E                                   11674 @@gen_label976 DS    0H
0000830E E3F0 7100 0004          00000100  11675          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008314 41F4 F000               00000000  11676          LA    15,0(4,15)
00008318 E3F0 D368 0024          00000368  11677          STG   15,872(0,13)
0000831E 4110 D368               00000368  11678          LA    1,872(0,13)
00008322 E3F0 C10A 0004          000080B0  11679          LG    15,@lit_1946_707 ; mtx_unlock
00008328                                   11680 @@gen_label977 DS    0H
00008328 05EF                              11681          BALR  14,15
0000832A                                   11682 @@gen_label978 DS    0H
0000832A E3F0 7100 0004          00000100  11683          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008330 E3F0 FFD0 0004          00000FD0  11684          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00008336 41F0 F210               00000210  11685          LA    15,528(0,15)
0000833A E3F0 D368 0024          00000368  11686          STG   15,872(0,13)
00008340 E3F0 7100 0004          00000100  11687          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008346 E3F0 FFD0 0004          00000FD0  11688          LG    15,4048(0,15)
0000834C E3F0 D370 0024          00000370  11689          STG   15,880(0,13)
00008352 41F0 D168               00000168  11690          LA    15,360(0,13)
00008356 E3F0 D378 0024          00000378  11691          STG   15,888(0,13)
0000835C B914 00F3                         11692          LGFR  15,3
00008360 E3F0 D380 0024          00000380  11693          STG   15,896(0,13)
00008366 D707 D388 D388 00000388 00000388  11694          XC    904(8,13),904(13)
0000836C E3F0 C0E2 0004          00008088  11695          LG    15,@lit_1946_696
00008372 4110 F432               00000432  11696          LA    1,1074(0,15)
00008376 E310 D390 0024          00000390  11697          STG   1,912(0,13)
0000837C 41F0 F574               00000574  11698          LA    15,1396(0,15)
00008380 E3F0 D398 0024          00000398  11699          STG   15,920(0,13)
00008386 E3F0 2060 0004          00000060  11700          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000838C E3F0 F080 0004          00000080  11701          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00008392 E3F0 F008 0004          00000008  11702          LG    15,8(0,15)
00008398 E3F0 D3A0 0024          000003A0  11703          STG   15,928(0,13)
0000839E E3F0 2068 0014          00000068  11704          LGF   15,104(0,2)
000083A4 E3F0 D3A8 0024          000003A8  11705          STG   15,936(0,13)
000083AA E3F0 D100 0004          00000100  11706          LG    15,256(0,13)
000083B0 E3F0 D3B0 0024          000003B0  11707          STG   15,944(0,13)
000083B6 E3F0 D158 0004          00000158  11708          LG    15,344(0,13)
000083BC E3F0 D3B8 0024          000003B8  11709          STG   15,952(0,13)
000083C2 4110 D368               00000368  11710          LA    1,872(0,13)
000083C6 E3F0 C0D2 0004          00008078  11711          LG    15,@lit_1946_698 ; rd_kafka_log0
000083CC                                   11712 @@gen_label979 DS    0H
                                                                                                                           Page  235 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000083CC 05EF                              11713          BALR  14,15
000083CE                                   11714 @@gen_label980 DS    0H
000083CE                                   11715 @L1173   DS    0H
000083CE E54C 7188 FF39          00000188  11716          MVHI  392(7),-199 ; offset of rkbuf_err in rd_kafka_buf_s
000083D4 E3C0 C0EA 001A          00008090  11717          ALGF  12,@lit_region_diff_1946_3_7
                                           11718          DROP  12
                        0000A7AA           11719          USING @REGION_1946_7,12
000083DA 47F0 C1A4               0000A94E  11720          B     @_err_parse@1946@2
                                           11721          DROP  12
                        00007FA6           11722          USING @REGION_1946_3,12
                                           11723 * ***
                                           11724 * ***   # 783 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           11725 * ***                   do { int16_t _v; do { size_t __len2 = (size_t)\
                                           11726 * (sizeof(_v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2\
                                           11727 * )) do { size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)-\
                                           11728 * >rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))\
                                           11729 * ) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)\
                                           11730 * ))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_re\
                                           11731 * ader.c",783, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_r\
                                           11732 * kb"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__t\
                                           11733 * mpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do {\
                                           11734 *  char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock)\
                                           11735 * ; rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_lognam\
                                           11736 * e)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log\
                                           11737 * 0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, \
                                           11738 * _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffe\
                                           11739 * r underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "exp\
                                           11740 * ected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kaf\
                                           11741 * ka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiV\
                                           11742 * ersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reade\
                                           11743 * r)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 783, __len0,\
                                           11744 *  ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_re\
                                           11745 * ader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigatio\
                                           11746 * n : "incorrect broker.version.fallback?", __tmpstr); } while (0); } \
                                           11747 * (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; }\
                                           11748 *  while (0); } } while (0); } while (0); *(&ctrl_data.Version) = (int\
                                           11749 * 16_t)(_v); } while (0);
000083DE                                   11750 @L1189   DS    0H
000083DE A759 0002               00000002  11751          LGHI  5,2         ; 2
000083E2 41F0 7078               00000078  11752          LA    15,120(0,7)
000083E6 E3F0 D368 0024          00000368  11753          STG   15,872(0,13)
000083EC 41F0 D0C8               000000C8  11754          LA    15,200(0,13)
000083F0 E3F0 D370 0024          00000370  11755          STG   15,880(0,13)
000083F6 E350 D378 0024          00000378  11756          STG   5,888(0,13)
000083FC 4110 D368               00000368  11757          LA    1,872(0,13)
00008400 E3F0 C122 0004          000080C8  11758          LG    15,@lit_1946_724 ; rd_slice_read
00008406                                   11759 @@gen_label981 DS    0H
00008406 05EF                              11760          BALR  14,15
00008408                                   11761 @@gen_label982 DS    0H
00008408 B902 00FF                         11762          LTGR  15,15
0000840C 4770 C6E6               0000868C  11763          BNZ   @L1192
00008410                                   11764 @L1193   DS    0H
                                                                                                                           Page  236 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008410 E380 7098 0004          00000098  11765          LG    8,152(0,7)  ; offset of end in rd_slice_s
00008416 41F0 7078               00000078  11766          LA    15,120(0,7)
0000841A E3F0 D368 0024          00000368  11767          STG   15,872(0,13)
00008420 4110 D368               00000368  11768          LA    1,872(0,13)
00008424 E3F0 C12A 0004          000080D0  11769          LG    15,@lit_1946_725 ; rd_slice_abs_offset
0000842A                                   11770 @@gen_label984 DS    0H
0000842A 05EF                              11771          BALR  14,15
0000842C                                   11772 @@gen_label985 DS    0H
0000842C B90B 008F                         11773          SLGR  8,15
00008430 B921 0058                         11774          CLGR  5,8
00008434 47D0 C6E6               0000868C  11775          BNH   @L1196
00008438                                   11776 @L1197   DS    0H
00008438 1233                              11777          LTR   3,3
0000843A 47D0 C6D6               0000867C  11778          BNH   @L1200
0000843E                                   11779 @L1201   DS    0H
0000843E E3F0 7100 0002          00000100  11780          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008444 4770 C4E4               0000848A  11781          BNZ   @L1204
00008448 E3F0 C0E2 0004          00008088  11782          LG    15,@lit_1946_696
0000844E 4110 F2CE               000002CE  11783          LA    1,718(0,15)
00008452 E310 D368 0024          00000368  11784          STG   1,872(0,13)
00008458 E548 D370 030F          00000370  11785          MVGHI 880(13),783
0000845E E310 C0DA 0004          00008080  11786          LG    1,@lit_1946_697
00008464 4110 121A               0000021A  11787          LA    1,538(0,1)
00008468 E310 D378 0024          00000378  11788          STG   1,888(0,13)
0000846E D707 D380 D380 00000380 00000380  11789          XC    896(8,13),896(13)
00008474 41F0 F362               00000362  11790          LA    15,866(0,15)
00008478 E3F0 D388 0024          00000388  11791          STG   15,904(0,13)
0000847E 4110 D368               00000368  11792          LA    1,872(0,13)
00008482 E3F0 C0F2 0004          00008098  11793          LG    15,@lit_1946_701 ; rd_kafka_crash
00008488                                   11794 @@gen_label989 DS    0H
00008488 05EF                              11795          BALR  14,15
0000848A                                   11796 @@gen_label990 DS    0H
0000848A                                   11797 @L1204   DS    0H
0000848A 41F0 D168               00000168  11798          LA    15,360(0,13)
0000848E E3F0 D368 0024          00000368  11799          STG   15,872(0,13)
00008494 E548 D370 0100          00000370  11800          MVGHI 880(13),256
0000849A E3F0 C0E2 0004          00008088  11801          LG    15,@lit_1946_696
000084A0 41F0 F37C               0000037C  11802          LA    15,892(0,15)
000084A4 E3F0 D378 0024          00000378  11803          STG   15,888(0,13)
000084AA 4110 D368               00000368  11804          LA    1,872(0,13)
000084AE E3F0 C132 0004          000080D8  11805          LG    15,@lit_1946_730 ; snprintf
000084B4                                   11806 @@gen_label991 DS    0H
000084B4 05EF                              11807          BALR  14,15
000084B6                                   11808 @@gen_label992 DS    0H
000084B6 41F0 D168               00000168  11809          LA    15,360(0,13)
000084BA B904 001F                         11810          LGR   1,15
000084BE A709 0000               00000000  11811          LGHI  0,0
000084C2                                   11812 @@gen_label993 DS 0H
000084C2 B25E 000F                         11813          SRST  0,15
000084C6 4710 C51C               000084C2  11814          BC  1,@@gen_label993
000084CA B90B 0001                         11815          SLGR  0,1
000084CE A70F 0002               00000002  11816          CGHI  0,2
                                                                                                                           Page  237 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000084D2 4770 C534               000084DA  11817          BNE   @L1206
000084D6 9200 D168      00000168 00000000  11818          MVI   360(13),0
000084DA                                   11819 @L1205   DS    0H
000084DA                                   11820 @L1206   DS    0H
000084DA E3F0 7100 0004          00000100  11821          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
000084E0 A729 1638               00001638  11822          LGHI  2,5688      ; 5688
000084E4 41F2 F000               00000000  11823          LA    15,0(2,15)
000084E8 E3F0 D368 0024          00000368  11824          STG   15,872(0,13)
000084EE 4110 D368               00000368  11825          LA    1,872(0,13)
000084F2 E3F0 C0FA 0004          000080A0  11826          LG    15,@lit_1946_703 ; mtx_lock
000084F8                                   11827 @@gen_label995 DS    0H
000084F8 05EF                              11828          BALR  14,15
000084FA                                   11829 @@gen_label996 DS    0H
000084FA 41F0 D268               00000268  11830          LA    15,616(0,13)
000084FE E3F0 D368 0024          00000368  11831          STG   15,872(0,13)
00008504 E3F0 7100 0004          00000100  11832          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000850A A719 1630               00001630  11833          LGHI  1,5680      ; 5680
0000850E E3F1 F000 0004          00000000  11834          LG    15,0(1,15)
00008514 E3F0 D370 0024          00000370  11835          STG   15,880(0,13)
0000851A E548 D378 0100          00000378  11836          MVGHI 888(13),256
00008520 4110 D368               00000368  11837          LA    1,872(0,13)
00008524 E3F0 C102 0004          000080A8  11838          LG    15,@lit_1946_705 ; rd_strlcpy
0000852A                                   11839 @@gen_label997 DS    0H
0000852A 05EF                              11840          BALR  14,15
0000852C                                   11841 @@gen_label998 DS    0H
0000852C E3F0 7100 0004          00000100  11842          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008532 41F2 F000               00000000  11843          LA    15,0(2,15)
00008536 E3F0 D368 0024          00000368  11844          STG   15,872(0,13)
0000853C 4110 D368               00000368  11845          LA    1,872(0,13)
00008540 E3F0 C10A 0004          000080B0  11846          LG    15,@lit_1946_707 ; mtx_unlock
00008546                                   11847 @@gen_label999 DS    0H
00008546 05EF                              11848          BALR  14,15
00008548                                   11849 @@gen_label1000 DS    0H
00008548 E3F0 70B8 0015          000000B8  11850          LGH   15,184(0,7)
0000854E E3F0 D368 0024          00000368  11851          STG   15,872(0,13)
00008554 4110 D368               00000368  11852          LA    1,872(0,13)
00008558 E3F0 C112 0004          000080B8  11853          LG    15,@lit_1946_708 ; rd_kafka_ApiKey2str
0000855E                                   11854 @@gen_label1001 DS    0H
0000855E 05EF                              11855          BALR  14,15
00008560                                   11856 @@gen_label1002 DS    0H
00008560 B904 002F                         11857          LGR   2,15
00008564 41F0 7078               00000078  11858          LA    15,120(0,7)
00008568 E3F0 D368 0024          00000368  11859          STG   15,872(0,13)
0000856E 4110 D368               00000368  11860          LA    1,872(0,13)
00008572 E3F0 C11A 0004          000080C0  11861          LG    15,@lit_1946_711 ; rd_slice_offset
00008578                                   11862 @@gen_label1003 DS    0H
00008578 05EF                              11863          BALR  14,15
0000857A                                   11864 @@gen_label1004 DS    0H
0000857A B904 004F                         11865          LGR   4,15
0000857E E380 7098 0004          00000098  11866          LG    8,152(0,7)  ; offset of end in rd_slice_s
00008584 41F0 7078               00000078  11867          LA    15,120(0,7)
00008588 E3F0 D368 0024          00000368  11868          STG   15,872(0,13)
                                                                                                                           Page  238 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000858E 4110 D368               00000368  11869          LA    1,872(0,13)
00008592 E3F0 C12A 0004          000080D0  11870          LG    15,@lit_1946_725 ; rd_slice_abs_offset
00008598                                   11871 @@gen_label1005 DS    0H
00008598 05EF                              11872          BALR  14,15
0000859A                                   11873 @@gen_label1006 DS    0H
0000859A B90B 008F                         11874          SLGR  8,15
0000859E E3F0 71E8 0002          000001E8  11875          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000085A4 4780 C60C               000085B2  11876          BZ    @L1209
000085A8 E3F0 71E8 0004          000001E8  11877          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000085AE 47F0 C616               000085BC  11878          B     @L1210
000085B2                                   11879 @L1209   DS    0H
000085B2 E3F0 C0E2 0004          00008088  11880          LG    15,@lit_1946_696
000085B8 41F0 F380               00000380  11881          LA    15,896(0,15)
000085BC                                   11882 @L1210   DS    0H
000085BC E310 7100 0004          00000100  11883          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000085C2 E310 1FD0 0004          00000FD0  11884          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
000085C8 4110 1210               00000210  11885          LA    1,528(0,1)
000085CC E310 D368 0024          00000368  11886          STG   1,872(0,13)
000085D2 E310 7100 0004          00000100  11887          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
000085D8 E310 1FD0 0004          00000FD0  11888          LG    1,4048(0,1)
000085DE E310 D370 0024          00000370  11889          STG   1,880(0,13)
000085E4 4110 D268               00000268  11890          LA    1,616(0,13)
000085E8 E310 D378 0024          00000378  11891          STG   1,888(0,13)
000085EE B914 0013                         11892          LGFR  1,3
000085F2 E310 D380 0024          00000380  11893          STG   1,896(0,13)
000085F8 D707 D388 D388 00000388 00000388  11894          XC    904(8,13),904(13)
000085FE E310 C0E2 0004          00008088  11895          LG    1,@lit_1946_696
00008604 4130 13A4               000003A4  11896          LA    3,932(0,1)
00008608 E330 D390 0024          00000390  11897          STG   3,912(0,13)
0000860E 4110 13B0               000003B0  11898          LA    1,944(0,1)
00008612 EB12 D398 0024          00000398  11899          STMG  1,2,920(13)
00008618 4810 70BA               000000BA  11900          LH    1,186(0,7)
0000861C B914 0011                         11901          LGFR  1,1
00008620 E310 D3A8 0024          000003A8  11902          STG   1,936(0,13)
00008626 E340 D3B0 0024          000003B0  11903          STG   4,944(0,13)
0000862C E310 7098 0004          00000098  11904          LG    1,152(0,7)  ; offset of end in rd_slice_s
00008632 E310 7090 000B          00000090  11905          SLG   1,144(0,7)
00008638 E310 D3B8 0024          000003B8  11906          STG   1,952(0,13)
0000863E E310 C0DA 0004          00008080  11907          LG    1,@lit_1946_697
00008644 4110 121A               0000021A  11908          LA    1,538(0,1)
00008648 E310 D3C0 0024          000003C0  11909          STG   1,960(0,13)
0000864E E548 D3C8 030F          000003C8  11910          MVGHI 968(13),783
00008654 E350 D3D0 0024          000003D0  11911          STG   5,976(0,13)
0000865A E380 D3D8 0024          000003D8  11912          STG   8,984(0,13)
00008660 E3F0 D3E0 0024          000003E0  11913          STG   15,992(0,13)
00008666 41F0 D168               00000168  11914          LA    15,360(0,13)
0000866A E3F0 D3E8 0024          000003E8  11915          STG   15,1000(0,13)
00008670 4110 D368               00000368  11916          LA    1,872(0,13)
00008674 E3F0 C0D2 0004          00008078  11917          LG    15,@lit_1946_698 ; rd_kafka_log0
0000867A                                   11918 @@gen_label1008 DS    0H
                                                                                                                           Page  239 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000867A 05EF                              11919          BALR  14,15
0000867C                                   11920 @@gen_label1009 DS    0H
0000867C                                   11921 @L1200   DS    0H
0000867C E54C 7188 FF65          00000188  11922          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00008682 E3C0 C0EA 001A          00008090  11923          ALGF  12,@lit_region_diff_1946_3_7
                                           11924          DROP  12
                        0000A7AA           11925          USING @REGION_1946_7,12
00008688 47F0 C1A4               0000A94E  11926          B     @_err_parse@1946@2
                                           11927          DROP  12
                        00007FA6           11928          USING @REGION_1946_3,12
0000868C                                   11929 @L1196   DS    0H
0000868C                                   11930 @L1192   DS    0H
0000868C D201 D160 D0C8 00000160 000000C8  11931          MVC   352(2,13),200(13)
                                           11932 * ***
                                           11933 * ***                   if (ctrl_data.Version != 0) {
00008692 48F0 D160               00000160  11934          LH    15,352(0,13)
00008696 12FF                              11935          LTR   15,15
00008698 4770 C700               000086A6  11936          BNE   *+14  Around region break
0000869C E3C0 C13A 001A          000080E0  11937          ALGF  12,@lit_region_diff_1946_3_4
                                           11938          DROP  12
                        000089F0           11939          USING @REGION_1946_4,12
000086A2 47F0 C15A               00008B4A  11940          B     @L1211
                                           11941          DROP  12
                        00007FA6           11942          USING @REGION_1946_3,12
                                           11943 * ***                           do { if ((((msetr->msetr_rkb)->rkb_rk-\
                                           11944 * >rk_conf.debug & (0x40)))) { do { char _logname[256]; mtx_lock(&(mse\
                                           11945 * tr->msetr_rkb)->rkb_logname_lock); rd_strlcpy(_logname, msetr->msetr\
                                           11946 * _rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(msetr->msetr_rkb)\
                                           11947 * ->rkb_logname_lock); rd_kafka_log0(&(msetr->msetr_rkb)->rkb_rk->rk_c\
                                           11948 * onf, (msetr->msetr_rkb)->rkb_rk, _logname, 7, (0x40), "MSG", "%s [%"\
                                           11949 *  "d" "]: " "Skipping ctrl msg with " "unsupported version %" "d" " a\
                                           11950 * t offset %" "lld", rktp->rktp_rkt->rkt_topic->str, rktp->rktp_partit\
                                           11951 * ion, ctrl_data.Version, hdr.Offset); } while (0); } } while (0);
000086A6                                   11952 @L1212   DS    0H
000086A6 E3F0 6048 0004          00000048  11953          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000086AC E3F0 FFD0 0004          00000FD0  11954          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
000086B2 9140 F323      00000323 00000040  11955          TM    803(15),64
000086B6 4780 C824               000087CA  11956          BZ    @L1215
000086BA                                   11957 @L1216   DS    0H
000086BA E3F0 6048 0004          00000048  11958          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000086C0 A759 1638               00001638  11959          LGHI  5,5688      ; 5688
000086C4 41F5 F000               00000000  11960          LA    15,0(5,15)
000086C8 E3F0 D368 0024          00000368  11961          STG   15,872(0,13)
000086CE 4110 D368               00000368  11962          LA    1,872(0,13)
000086D2 E3F0 C0FA 0004          000080A0  11963          LG    15,@lit_1946_703 ; mtx_lock
000086D8                                   11964 @@gen_label1012 DS    0H
000086D8 05EF                              11965          BALR  14,15
000086DA                                   11966 @@gen_label1013 DS    0H
000086DA 41F0 D168               00000168  11967          LA    15,360(0,13)
000086DE E3F0 D368 0024          00000368  11968          STG   15,872(0,13)
                                                                                                                           Page  240 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000086E4 E3F0 6048 0004          00000048  11969          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000086EA A719 1630               00001630  11970          LGHI  1,5680      ; 5680
000086EE E3F1 F000 0004          00000000  11971          LG    15,0(1,15)
000086F4 E3F0 D370 0024          00000370  11972          STG   15,880(0,13)
000086FA E548 D378 0100          00000378  11973          MVGHI 888(13),256
00008700 4110 D368               00000368  11974          LA    1,872(0,13)
00008704 E3F0 C102 0004          000080A8  11975          LG    15,@lit_1946_705 ; rd_strlcpy
0000870A                                   11976 @@gen_label1014 DS    0H
0000870A 05EF                              11977          BALR  14,15
0000870C                                   11978 @@gen_label1015 DS    0H
0000870C E3F0 6048 0004          00000048  11979          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00008712 41F5 F000               00000000  11980          LA    15,0(5,15)
00008716 E3F0 D368 0024          00000368  11981          STG   15,872(0,13)
0000871C 4110 D368               00000368  11982          LA    1,872(0,13)
00008720 E3F0 C10A 0004          000080B0  11983          LG    15,@lit_1946_707 ; mtx_unlock
00008726                                   11984 @@gen_label1016 DS    0H
00008726 05EF                              11985          BALR  14,15
00008728                                   11986 @@gen_label1017 DS    0H
00008728 E3F0 6048 0004          00000048  11987          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000872E E3F0 FFD0 0004          00000FD0  11988          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00008734 41F0 F210               00000210  11989          LA    15,528(0,15)
00008738 E3F0 D368 0024          00000368  11990          STG   15,872(0,13)
0000873E E3F0 6048 0004          00000048  11991          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00008744 E3F0 FFD0 0004          00000FD0  11992          LG    15,4048(0,15)
0000874A E3F0 D370 0024          00000370  11993          STG   15,880(0,13)
00008750 41F0 D168               00000168  11994          LA    15,360(0,13)
00008754 E3F0 D378 0024          00000378  11995          STG   15,888(0,13)
0000875A E548 D380 0007          00000380  11996          MVGHI 896(13),7
00008760 E548 D388 0040          00000388  11997          MVGHI 904(13),64
00008766 E3F0 C0E2 0004          00008088  11998          LG    15,@lit_1946_696
0000876C 4110 F542               00000542  11999          LA    1,1346(0,15)
00008770 E310 D390 0024          00000390  12000          STG   1,912(0,13)
00008776 41F0 F5B4               000005B4  12001          LA    15,1460(0,15)
0000877A E3F0 D398 0024          00000398  12002          STG   15,920(0,13)
00008780 E3F0 2060 0004          00000060  12003          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00008786 E3F0 F080 0004          00000080  12004          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000878C E3F0 F008 0004          00000008  12005          LG    15,8(0,15)
00008792 E3F0 D3A0 0024          000003A0  12006          STG   15,928(0,13)
00008798 E3F0 2068 0014          00000068  12007          LGF   15,104(0,2)
0000879E E3F0 D3A8 0024          000003A8  12008          STG   15,936(0,13)
000087A4 48F0 D160               00000160  12009          LH    15,352(0,13)
000087A8 B914 00FF                         12010          LGFR  15,15
000087AC E3F0 D3B0 0024          000003B0  12011          STG   15,944(0,13)
000087B2 E3F0 D100 0004          00000100  12012          LG    15,256(0,13)
000087B8 E3F0 D3B8 0024          000003B8  12013          STG   15,952(0,13)
000087BE 4110 D368               00000368  12014          LA    1,872(0,13)
000087C2 E3F0 C0D2 0004          00008078  12015          LG    15,@lit_1946_698 ; rd_kafka_log0
000087C8                                   12016 @@gen_label1018 DS    0H
                                                                                                                           Page  241 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000087C8 05EF                              12017          BALR  14,15
000087CA                                   12018 @@gen_label1019 DS    0H
000087CA                                   12019 @L1215   DS    0H
                                           12020 * ***   # 794 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           12021 * ***                           do { size_t __len1 = (size_t)(message_\
                                           12022 * end) - rd_slice_offset(&(rkbuf)->rkbuf_reader); if (__len1 && !rd_sl\
                                           12023 * ice_read(&(rkbuf)->rkbuf_reader, ((void *)0), __len1)) do { size_t _\
                                           12024 * _len0 = (size_t)(__len1); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->\
                                           12025 * end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { if (log\
                                           12026 * _decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_cra\
                                           12027 * sh("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",794, __F\
                                           12028 * UNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0\
                                           12029 * ); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); i\
                                           12030 * f (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[2\
                                           12031 * 56]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_lo\
                                           12032 * gname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(\
                                           12033 * &(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf\
                                           12034 * _rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_de\
                                           12035 * code_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "f\
                                           12036 * or %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " \
                                           12037 * bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rk\
                                           12038 * buf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice\
                                           12039 * _offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbu\
                                           12040 * f->rkbuf_reader)->start), __FUNCTION__, 794, __len0, ((&rkbuf->rkbuf\
                                           12041 * _reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->r\
                                           12042 * kbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect b\
                                           12043 * roker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_e\
                                           12044 * rr = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } \
                                           12045 * while (0); } while (0);
000087CA                                   12046 @L1219   DS    0H
000087CA 41F0 7078               00000078  12047          LA    15,120(0,7)
000087CE E3F0 D368 0024          00000368  12048          STG   15,872(0,13)
000087D4 4110 D368               00000368  12049          LA    1,872(0,13)
000087D8 E3F0 C11A 0004          000080C0  12050          LG    15,@lit_1946_711 ; rd_slice_offset
000087DE                                   12051 @@gen_label1020 DS    0H
000087DE 05EF                              12052          BALR  14,15
000087E0                                   12053 @@gen_label1021 DS    0H
000087E0 B90B 004F                         12054          SLGR  4,15
000087E4 B902 00F4                         12055          LTGR  15,4
000087E8 4770 C850               000087F6  12056          BNZ   *+14  Around region break
000087EC E3C0 C13A 001A          000080E0  12057          ALGF  12,@lit_region_diff_1946_3_4
                                           12058          DROP  12
                        000089F0           12059          USING @REGION_1946_4,12
000087F2 47F0 C14C               00008B3C  12060          B     @L1222
                                           12061          DROP  12
                        00007FA6           12062          USING @REGION_1946_3,12
000087F6 41F0 7078               00000078  12063          LA    15,120(0,7)
000087FA E3F0 D368 0024          00000368  12064          STG   15,872(0,13)
00008800 D707 D370 D370 00000370 00000370  12065          XC    880(8,13),880(13)
00008806 E340 D378 0024          00000378  12066          STG   4,888(0,13)
0000880C 4110 D368               00000368  12067          LA    1,872(0,13)
00008810 E3F0 C122 0004          000080C8  12068          LG    15,@lit_1946_724 ; rd_slice_read
                                                                                                                           Page  242 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008816                                   12069 @@gen_label1023 DS    0H
00008816 05EF                              12070          BALR  14,15
00008818                                   12071 @@gen_label1024 DS    0H
00008818 B902 00FF                         12072          LTGR  15,15
0000881C 4780 C884               0000882A  12073          BZ    *+14  Around region break
00008820 E3C0 C13A 001A          000080E0  12074          ALGF  12,@lit_region_diff_1946_3_4
                                           12075          DROP  12
                        000089F0           12076          USING @REGION_1946_4,12
00008826 47F0 C14C               00008B3C  12077          B     @L1222
                                           12078          DROP  12
                        00007FA6           12079          USING @REGION_1946_3,12
0000882A                                   12080 @L1223   DS    0H
0000882A E320 7098 0004          00000098  12081          LG    2,152(0,7)  ; offset of end in rd_slice_s
00008830 41F0 7078               00000078  12082          LA    15,120(0,7)
00008834 E3F0 D368 0024          00000368  12083          STG   15,872(0,13)
0000883A 4110 D368               00000368  12084          LA    1,872(0,13)
0000883E E3F0 C12A 0004          000080D0  12085          LG    15,@lit_1946_725 ; rd_slice_abs_offset
00008844                                   12086 @@gen_label1026 DS    0H
00008844 05EF                              12087          BALR  14,15
00008846                                   12088 @@gen_label1027 DS    0H
00008846 B90B 002F                         12089          SLGR  2,15
0000884A B921 0042                         12090          CLGR  4,2
0000884E 4720 C8B6               0000885C  12091          BH    *+14  Around region break
00008852 E3C0 C13A 001A          000080E0  12092          ALGF  12,@lit_region_diff_1946_3_4
                                           12093          DROP  12
                        000089F0           12094          USING @REGION_1946_4,12
00008858 47F0 C14C               00008B3C  12095          B     @L1226
                                           12096          DROP  12
                        00007FA6           12097          USING @REGION_1946_3,12
0000885C                                   12098 @L1227   DS    0H
0000885C 1233                              12099          LTR   3,3
0000885E 4720 C8C6               0000886C  12100          BH    *+14  Around region break
00008862 E3C0 C13A 001A          000080E0  12101          ALGF  12,@lit_region_diff_1946_3_4
                                           12102          DROP  12
                        000089F0           12103          USING @REGION_1946_4,12
00008868 47F0 C0CA               00008ABA  12104          B     @L1230
                                           12105          DROP  12
                        00007FA6           12106          USING @REGION_1946_3,12
0000886C                                   12107 @L1231   DS    0H
0000886C E3F0 7100 0002          00000100  12108          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008872 4770 C912               000088B8  12109          BNZ   @L1234
00008876 E3F0 C0E2 0004          00008088  12110          LG    15,@lit_1946_696
0000887C 4110 F2CE               000002CE  12111          LA    1,718(0,15)
00008880 E310 D368 0024          00000368  12112          STG   1,872(0,13)
00008886 E548 D370 031A          00000370  12113          MVGHI 880(13),794
0000888C E310 C0DA 0004          00008080  12114          LG    1,@lit_1946_697
00008892 4110 121A               0000021A  12115          LA    1,538(0,1)
00008896 E310 D378 0024          00000378  12116          STG   1,888(0,13)
0000889C D707 D380 D380 00000380 00000380  12117          XC    896(8,13),896(13)
000088A2 41F0 F362               00000362  12118          LA    15,866(0,15)
000088A6 E3F0 D388 0024          00000388  12119          STG   15,904(0,13)
000088AC 4110 D368               00000368  12120          LA    1,872(0,13)
                                                                                                                           Page  243 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000088B0 E3F0 C0F2 0004          00008098  12121          LG    15,@lit_1946_701 ; rd_kafka_crash
000088B6                                   12122 @@gen_label1031 DS    0H
000088B6 05EF                              12123          BALR  14,15
000088B8                                   12124 @@gen_label1032 DS    0H
000088B8                                   12125 @L1234   DS    0H
000088B8 41F0 D168               00000168  12126          LA    15,360(0,13)
000088BC E3F0 D368 0024          00000368  12127          STG   15,872(0,13)
000088C2 E548 D370 0100          00000370  12128          MVGHI 880(13),256
000088C8 E3F0 C0E2 0004          00008088  12129          LG    15,@lit_1946_696
000088CE 41F0 F37C               0000037C  12130          LA    15,892(0,15)
000088D2 E3F0 D378 0024          00000378  12131          STG   15,888(0,13)
000088D8 4110 D368               00000368  12132          LA    1,872(0,13)
000088DC E3F0 C132 0004          000080D8  12133          LG    15,@lit_1946_730 ; snprintf
000088E2                                   12134 @@gen_label1033 DS    0H
000088E2 05EF                              12135          BALR  14,15
000088E4                                   12136 @@gen_label1034 DS    0H
000088E4 41F0 D168               00000168  12137          LA    15,360(0,13)
000088E8 B904 001F                         12138          LGR   1,15
000088EC A709 0000               00000000  12139          LGHI  0,0
000088F0                                   12140 @@gen_label1035 DS 0H
000088F0 B25E 000F                         12141          SRST  0,15
000088F4 4710 C94A               000088F0  12142          BC  1,@@gen_label1035
000088F8 B90B 0001                         12143          SLGR  0,1
000088FC A70F 0002               00000002  12144          CGHI  0,2
00008900 4770 C962               00008908  12145          BNE   @L1236
00008904 9200 D168      00000168 00000000  12146          MVI   360(13),0
00008908                                   12147 @L1235   DS    0H
00008908                                   12148 @L1236   DS    0H
00008908 E3F0 7100 0004          00000100  12149          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000890E A729 1638               00001638  12150          LGHI  2,5688      ; 5688
00008912 41F2 F000               00000000  12151          LA    15,0(2,15)
00008916 E3F0 D368 0024          00000368  12152          STG   15,872(0,13)
0000891C 4110 D368               00000368  12153          LA    1,872(0,13)
00008920 E3F0 C0FA 0004          000080A0  12154          LG    15,@lit_1946_703 ; mtx_lock
00008926                                   12155 @@gen_label1037 DS    0H
00008926 05EF                              12156          BALR  14,15
00008928                                   12157 @@gen_label1038 DS    0H
00008928 41F0 D268               00000268  12158          LA    15,616(0,13)
0000892C E3F0 D368 0024          00000368  12159          STG   15,872(0,13)
00008932 E3F0 7100 0004          00000100  12160          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008938 A719 1630               00001630  12161          LGHI  1,5680      ; 5680
0000893C E3F1 F000 0004          00000000  12162          LG    15,0(1,15)
00008942 E3F0 D370 0024          00000370  12163          STG   15,880(0,13)
00008948 E548 D378 0100          00000378  12164          MVGHI 888(13),256
0000894E 4110 D368               00000368  12165          LA    1,872(0,13)
00008952 E3F0 C102 0004          000080A8  12166          LG    15,@lit_1946_705 ; rd_strlcpy
00008958                                   12167 @@gen_label1039 DS    0H
00008958 05EF                              12168          BALR  14,15
0000895A                                   12169 @@gen_label1040 DS    0H
0000895A E3F0 7100 0004          00000100  12170          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008960 41F2 F000               00000000  12171          LA    15,0(2,15)
00008964 E3F0 D368 0024          00000368  12172          STG   15,872(0,13)
                                                                                                                           Page  244 
  Active Usings: @REGION_1946_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000896A 4110 D368               00000368  12173          LA    1,872(0,13)
0000896E E3F0 C10A 0004          000080B0  12174          LG    15,@lit_1946_707 ; mtx_unlock
00008974                                   12175 @@gen_label1041 DS    0H
00008974 05EF                              12176          BALR  14,15
00008976                                   12177 @@gen_label1042 DS    0H
00008976 E3F0 70B8 0015          000000B8  12178          LGH   15,184(0,7)
0000897C E3F0 D368 0024          00000368  12179          STG   15,872(0,13)
00008982 4110 D368               00000368  12180          LA    1,872(0,13)
00008986 E3F0 C112 0004          000080B8  12181          LG    15,@lit_1946_708 ; rd_kafka_ApiKey2str
0000898C                                   12182 @@gen_label1043 DS    0H
0000898C 05EF                              12183          BALR  14,15
0000898E                                   12184 @@gen_label1044 DS    0H
0000898E B904 002F                         12185          LGR   2,15
00008992 41F0 7078               00000078  12186          LA    15,120(0,7)
00008996 E3F0 D368 0024          00000368  12187          STG   15,872(0,13)
0000899C 4110 D368               00000368  12188          LA    1,872(0,13)
000089A0 E3F0 C11A 0004          000080C0  12189          LG    15,@lit_1946_711 ; rd_slice_offset
000089A6                                   12190 @@gen_label1045 DS    0H
000089A6 05EF                              12191          BALR  14,15
000089A8                                   12192 @@gen_label1046 DS    0H
000089A8 B904 005F                         12193          LGR   5,15
000089AC E380 7098 0004          00000098  12194          LG    8,152(0,7)  ; offset of end in rd_slice_s
000089B2 41F0 7078               00000078  12195          LA    15,120(0,7)
000089B6 E3F0 D368 0024          00000368  12196          STG   15,872(0,13)
000089BC 4110 D368               00000368  12197          LA    1,872(0,13)
000089C0 E3F0 C12A 0004          000080D0  12198          LG    15,@lit_1946_725 ; rd_slice_abs_offset
000089C6                                   12199 @@gen_label1047 DS    0H
000089C6 05EF                              12200          BALR  14,15
000089C8                                   12201 @@gen_label1048 DS    0H
000089C8 B90B 008F                         12202          SLGR  8,15
000089CC E3F0 71E8 0002          000001E8  12203          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000089D2 4770 CA3A               000089E0  12204          BNZ   *+14  Around region break
000089D6 E3C0 C13A 001A          000080E0  12205          ALGF  12,@lit_region_diff_1946_3_4
                                           12206          DROP  12
                        000089F0           12207          USING @REGION_1946_4,12
000089DC 47F0 C000               000089F0  12208          B     @L1239
                                           12209          DROP  12
                        00007FA6           12210          USING @REGION_1946_3,12
000089E0 E3F0 71E8 0004          000001E8  12211          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000089E6 E3C0 C13A 001A          000080E0  12212          ALGF  12,@lit_region_diff_1946_3_4
                                           12213          DROP  12
                        000089F0           12214          USING @REGION_1946_4,12
000089EC 47F0 C00A               000089FA  12215          B     @L1240
                                           12216          DROP  12
                        00007FA6           12217          USING @REGION_1946_3,12
000089F0                                   12218 @REGION_1946_4 DS 0H
                                           12219          DROP  12
                        000089F0           12220          USING @REGION_1946_4,12
000089F0                                   12221 @L1239   DS    0H
000089F0 E3F0 C0E0 0004          00008AD0  12222          LG    15,@lit_1946_769
                                                                                                                           Page  245 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000089F6 41F0 F380               00000380  12223          LA    15,896(0,15)
000089FA                                   12224 @L1240   DS    0H
000089FA E310 7100 0004          00000100  12225          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00008A00 E310 1FD0 0004          00000FD0  12226          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00008A06 4110 1210               00000210  12227          LA    1,528(0,1)
00008A0A E310 D368 0024          00000368  12228          STG   1,872(0,13)
00008A10 E310 7100 0004          00000100  12229          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00008A16 E310 1FD0 0004          00000FD0  12230          LG    1,4048(0,1)
00008A1C E310 D370 0024          00000370  12231          STG   1,880(0,13)
00008A22 4110 D268               00000268  12232          LA    1,616(0,13)
00008A26 E310 D378 0024          00000378  12233          STG   1,888(0,13)
00008A2C B914 0013                         12234          LGFR  1,3
00008A30 E310 D380 0024          00000380  12235          STG   1,896(0,13)
00008A36 D707 D388 D388 00000388 00000388  12236          XC    904(8,13),904(13)
00008A3C E310 C0E0 0004          00008AD0  12237          LG    1,@lit_1946_769
00008A42 4130 13A4               000003A4  12238          LA    3,932(0,1)
00008A46 E330 D390 0024          00000390  12239          STG   3,912(0,13)
00008A4C 4110 13B0               000003B0  12240          LA    1,944(0,1)
00008A50 EB12 D398 0024          00000398  12241          STMG  1,2,920(13)
00008A56 4810 70BA               000000BA  12242          LH    1,186(0,7)
00008A5A B914 0011                         12243          LGFR  1,1
00008A5E E310 D3A8 0024          000003A8  12244          STG   1,936(0,13)
00008A64 E350 D3B0 0024          000003B0  12245          STG   5,944(0,13)
00008A6A E310 7098 0004          00000098  12246          LG    1,152(0,7)  ; offset of end in rd_slice_s
00008A70 E310 7090 000B          00000090  12247          SLG   1,144(0,7)
00008A76 E310 D3B8 0024          000003B8  12248          STG   1,952(0,13)
00008A7C E310 C0F0 0004          00008AE0  12249          LG    1,@lit_1946_771
00008A82 4110 121A               0000021A  12250          LA    1,538(0,1)
00008A86 E310 D3C0 0024          000003C0  12251          STG   1,960(0,13)
00008A8C E548 D3C8 031A          000003C8  12252          MVGHI 968(13),794
00008A92 E340 D3D0 0024          000003D0  12253          STG   4,976(0,13)
00008A98 E380 D3D8 0024          000003D8  12254          STG   8,984(0,13)
00008A9E E3F0 D3E0 0024          000003E0  12255          STG   15,992(0,13)
00008AA4 41F0 D168               00000168  12256          LA    15,360(0,13)
00008AA8 E3F0 D3E8 0024          000003E8  12257          STG   15,1000(0,13)
00008AAE 4110 D368               00000368  12258          LA    1,872(0,13)
00008AB2 E3F0 C0E8 0004          00008AD8  12259          LG    15,@lit_1946_772 ; rd_kafka_log0
00008AB8                                   12260 @@gen_label1050 DS    0H
00008AB8 05EF                              12261          BALR  14,15
00008ABA                                   12262 @@gen_label1051 DS    0H
00008ABA                                   12263 @L1230   DS    0H
00008ABA E54C 7188 FF65          00000188  12264          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00008AC0 E3C0 C0F8 001A          00008AE8  12265          ALGF  12,@lit_region_diff_1946_4_7
                                           12266          DROP  12
                        0000A7AA           12267          USING @REGION_1946_7,12
00008AC6 47F0 C1A4               0000A94E  12268          B     @_err_parse@1946@2
                                           12269          DROP  12
                        000089F0           12270          USING @REGION_1946_4,12
00008AD0                                   12271          DS    0D
00008AD0 0000000000012AB8                  12272 @lit_1946_769 DC AD(@strings@)
00008AD8 0000000000000000                  12273 @lit_1946_772 DC AD(rd_kafka_log0)
00008AE0 0000000000012808                  12274 @lit_1946_771 DC AD(@DATA)
                                                                                                                           Page  246 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008AE8 00001DBA                          12275 @lit_region_diff_1946_4_7  DC A(@REGION_1946_7-@REGION_1946_4)
00008AEC 00000000
00008AF0 0000000000000000                  12276 @lit_1946_776 DC AD(rd_kafka_crash)
00008AF8 0000000000000000                  12277 @lit_1946_778 DC AD(mtx_lock)
00008B00 0000000000001668                  12278 @lit_1946_780 DC AD(rd_strlcpy)
00008B08 0000000000000000                  12279 @lit_1946_782 DC AD(mtx_unlock)
00008B10 00000000000014D0                  12280 @lit_1946_783 DC AD(rd_kafka_$Api$Key2str)
00008B18 00000000000012B8                  12281 @lit_1946_786 DC AD(rd_slice_offset)
00008B20 0000000000000000                  12282 @lit_1946_799 DC AD(rd_slice_read)
00008B28 0000000000001210                  12283 @lit_1946_800 DC AD(rd_slice_abs_offset)
00008B30 0000000000000000                  12284 @lit_1946_805 DC AD(snprintf)
00008B38 00000A20                          12285 @lit_region_diff_1946_4_5  DC A(@REGION_1946_5-@REGION_1946_4)
00008B3C                                   12286 @L1226   DS    0H
00008B3C                                   12287 @L1222   DS    0H
                                           12288 * ***                           return RD_KAFKA_RESP_ERR_NO_ERROR;
00008B3C A7F9 0000               00000000  12289          LGHI  15,0        ; 0
00008B40 E3C0 C0F8 001A          00008AE8  12290          ALGF  12,@lit_region_diff_1946_4_7
                                           12291          DROP  12
                        0000A7AA           12292          USING @REGION_1946_7,12
00008B46 47F0 C1CC               0000A976  12293          B     @ret_lab_1946
                                           12294          DROP  12
                        000089F0           12295          USING @REGION_1946_4,12
                                           12296 * ***                   }
00008B4A                                   12297 @L1211   DS    0H
                                           12298 * ***
                                           12299 * ***                   if (((ctrl_data.KeySize != 4)))
00008B4A E558 D158 0004          00000158  12300          CGHSI 344(13),4
00008B50 4780 C448               00008E38  12301          BE    @L1261
                                           12302 * ***                           do { if (log_decode_errors > 0) { do {\
                                           12303 *  if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkaf\
                                           12304 * ka\\src\\rdkafka_msgset_reader.c",799, __FUNCTION__, (((void *)0)), \
                                           12305 * "assert: " "rkbuf->rkbuf_rkb"); } while (0); do { char _logname[256]\
                                           12306 * ; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logna\
                                           12307 * me, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(r\
                                           12308 * kbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rk\
                                           12309 * b)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decod\
                                           12310 * e_errors, 0x0, "PROTOERR", "Protocol parse failure for %s v%hd%s " "\
                                           12311 * at %" "zu" "/%" "zu" " (%s:%i) " "(incorrect broker.version.fallback\
                                           12312 * ?)", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_\
                                           12313 * reqhdr.ApiVersion, (rkbuf->rkbuf_flags&0x40? "(flex)":""), rd_slice_\
                                           12314 * offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf\
                                           12315 * ->rkbuf_reader)->start), __FUNCTION__, 799); } while (0); do { char \
                                           12316 * _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_s\
                                           12317 * trlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); m\
                                           12318 * tx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rk\
                                           12319 * buf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logna\
                                           12320 * me, log_decode_errors, 0x0, "PROTOERR", "%s [%" "d" "]: " "Ctrl mess\
                                           12321 * age at offset %" "lld" " has invalid key size %" "lld", rktp->rktp_r\
                                           12322 * kt->rkt_topic->str, rktp->rktp_partition, hdr.Offset, ctrl_data.KeyS\
                                           12323 * ize); } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__BAD_MSG\
                                           12324 * ; goto err_parse; } while (0);
00008B54                                   12325 @L1242   DS    0H
                                                                                                                           Page  247 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008B54 1233                              12326          LTR   3,3
00008B56 47D0 C438               00008E28  12327          BNH   @L1245
00008B5A                                   12328 @L1246   DS    0H
00008B5A E3F0 7100 0002          00000100  12329          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008B60 4770 C1B6               00008BA6  12330          BNZ   @L1249
00008B64 E3F0 C0E0 0004          00008AD0  12331          LG    15,@lit_1946_769
00008B6A 4110 F2CE               000002CE  12332          LA    1,718(0,15)
00008B6E E310 D368 0024          00000368  12333          STG   1,872(0,13)
00008B74 E548 D370 031F          00000370  12334          MVGHI 880(13),799
00008B7A E310 C0F0 0004          00008AE0  12335          LG    1,@lit_1946_771
00008B80 4110 121A               0000021A  12336          LA    1,538(0,1)
00008B84 E310 D378 0024          00000378  12337          STG   1,888(0,13)
00008B8A D707 D380 D380 00000380 00000380  12338          XC    896(8,13),896(13)
00008B90 41F0 F362               00000362  12339          LA    15,866(0,15)
00008B94 E3F0 D388 0024          00000388  12340          STG   15,904(0,13)
00008B9A 4110 D368               00000368  12341          LA    1,872(0,13)
00008B9E E3F0 C100 0004          00008AF0  12342          LG    15,@lit_1946_776 ; rd_kafka_crash
00008BA4                                   12343 @@gen_label1055 DS    0H
00008BA4 05EF                              12344          BALR  14,15
00008BA6                                   12345 @@gen_label1056 DS    0H
00008BA6                                   12346 @L1249   DS    0H
00008BA6                                   12347 @L1250   DS    0H
00008BA6 E3F0 7100 0004          00000100  12348          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008BAC A749 1638               00001638  12349          LGHI  4,5688      ; 5688
00008BB0 41F4 F000               00000000  12350          LA    15,0(4,15)
00008BB4 E3F0 D368 0024          00000368  12351          STG   15,872(0,13)
00008BBA 4110 D368               00000368  12352          LA    1,872(0,13)
00008BBE E3F0 C108 0004          00008AF8  12353          LG    15,@lit_1946_778 ; mtx_lock
00008BC4                                   12354 @@gen_label1057 DS    0H
00008BC4 05EF                              12355          BALR  14,15
00008BC6                                   12356 @@gen_label1058 DS    0H
00008BC6 41F0 D168               00000168  12357          LA    15,360(0,13)
00008BCA E3F0 D368 0024          00000368  12358          STG   15,872(0,13)
00008BD0 E3F0 7100 0004          00000100  12359          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008BD6 A719 1630               00001630  12360          LGHI  1,5680      ; 5680
00008BDA E3F1 F000 0004          00000000  12361          LG    15,0(1,15)
00008BE0 E3F0 D370 0024          00000370  12362          STG   15,880(0,13)
00008BE6 E548 D378 0100          00000378  12363          MVGHI 888(13),256
00008BEC 4110 D368               00000368  12364          LA    1,872(0,13)
00008BF0 E3F0 C110 0004          00008B00  12365          LG    15,@lit_1946_780 ; rd_strlcpy
00008BF6                                   12366 @@gen_label1059 DS    0H
00008BF6 05EF                              12367          BALR  14,15
00008BF8                                   12368 @@gen_label1060 DS    0H
00008BF8 E3F0 7100 0004          00000100  12369          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008BFE 41F4 F000               00000000  12370          LA    15,0(4,15)
00008C02 E3F0 D368 0024          00000368  12371          STG   15,872(0,13)
00008C08 4110 D368               00000368  12372          LA    1,872(0,13)
00008C0C E3F0 C118 0004          00008B08  12373          LG    15,@lit_1946_782 ; mtx_unlock
00008C12                                   12374 @@gen_label1061 DS    0H
00008C12 05EF                              12375          BALR  14,15
00008C14                                   12376 @@gen_label1062 DS    0H
00008C14 E3F0 70B8 0015          000000B8  12377          LGH   15,184(0,7)
                                                                                                                           Page  248 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008C1A E3F0 D368 0024          00000368  12378          STG   15,872(0,13)
00008C20 4110 D368               00000368  12379          LA    1,872(0,13)
00008C24 E3F0 C120 0004          00008B10  12380          LG    15,@lit_1946_783 ; rd_kafka_ApiKey2str
00008C2A                                   12381 @@gen_label1063 DS    0H
00008C2A 05EF                              12382          BALR  14,15
00008C2C                                   12383 @@gen_label1064 DS    0H
00008C2C B904 004F                         12384          LGR   4,15
00008C30 9140 7023      00000023 00000040  12385          TM    35(7),64
00008C34 4780 C256               00008C46  12386          BZ    @L1253
00008C38 E3F0 C0E0 0004          00008AD0  12387          LG    15,@lit_1946_769
00008C3E 4150 F42A               0000042A  12388          LA    5,1066(0,15)
00008C42 47F0 C260               00008C50  12389          B     @L1254
00008C46                                   12390 @L1253   DS    0H
00008C46 E3F0 C0E0 0004          00008AD0  12391          LG    15,@lit_1946_769
00008C4C 4150 F0A8               000000A8  12392          LA    5,168(0,15)
00008C50                                   12393 @L1254   DS    0H
00008C50 41F0 7078               00000078  12394          LA    15,120(0,7)
00008C54 E3F0 D368 0024          00000368  12395          STG   15,872(0,13)
00008C5A 4110 D368               00000368  12396          LA    1,872(0,13)
00008C5E E3F0 C128 0004          00008B18  12397          LG    15,@lit_1946_786 ; rd_slice_offset
00008C64                                   12398 @@gen_label1066 DS    0H
00008C64 05EF                              12399          BALR  14,15
00008C66                                   12400 @@gen_label1067 DS    0H
00008C66 E310 7100 0004          00000100  12401          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00008C6C E310 1FD0 0004          00000FD0  12402          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00008C72 4110 1210               00000210  12403          LA    1,528(0,1)
00008C76 E310 D368 0024          00000368  12404          STG   1,872(0,13)
00008C7C E310 7100 0004          00000100  12405          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00008C82 E310 1FD0 0004          00000FD0  12406          LG    1,4048(0,1)
00008C88 E310 D370 0024          00000370  12407          STG   1,880(0,13)
00008C8E 4110 D168               00000168  12408          LA    1,360(0,13)
00008C92 E310 D378 0024          00000378  12409          STG   1,888(0,13)
00008C98 B914 0013                         12410          LGFR  1,3
00008C9C E310 D380 0024          00000380  12411          STG   1,896(0,13)
00008CA2 D707 D388 D388 00000388 00000388  12412          XC    904(8,13),904(13)
00008CA8 E310 C0E0 0004          00008AD0  12413          LG    1,@lit_1946_769
00008CAE 4180 1432               00000432  12414          LA    8,1074(0,1)
00008CB2 E380 D390 0024          00000390  12415          STG   8,912(0,13)
00008CB8 4110 143C               0000043C  12416          LA    1,1084(0,1)
00008CBC E310 D398 0024          00000398  12417          STG   1,920(0,13)
00008CC2 E340 D3A0 0024          000003A0  12418          STG   4,928(0,13)
00008CC8 4810 70BA               000000BA  12419          LH    1,186(0,7)
00008CCC B914 0011                         12420          LGFR  1,1
00008CD0 E310 D3A8 0024          000003A8  12421          STG   1,936(0,13)
00008CD6 E350 D3B0 0024          000003B0  12422          STG   5,944(0,13)
00008CDC E3F0 D3B8 0024          000003B8  12423          STG   15,952(0,13)
00008CE2 E3F0 7098 0004          00000098  12424          LG    15,152(0,7) ; offset of end in rd_slice_s
00008CE8 E3F0 7090 000B          00000090  12425          SLG   15,144(0,7)
00008CEE E3F0 D3C0 0024          000003C0  12426          STG   15,960(0,13)
00008CF4 E3F0 C0F0 0004          00008AE0  12427          LG    15,@lit_1946_771
00008CFA 41F0 F21A               0000021A  12428          LA    15,538(0,15)
00008CFE E3F0 D3C8 0024          000003C8  12429          STG   15,968(0,13)
                                                                                                                           Page  249 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008D04 E548 D3D0 031F          000003D0  12430          MVGHI 976(13),799
00008D0A 4110 D368               00000368  12431          LA    1,872(0,13)
00008D0E E3F0 C0E8 0004          00008AD8  12432          LG    15,@lit_1946_772 ; rd_kafka_log0
00008D14                                   12433 @@gen_label1068 DS    0H
00008D14 05EF                              12434          BALR  14,15
00008D16                                   12435 @@gen_label1069 DS    0H
00008D16                                   12436 @L1255   DS    0H
00008D16 E3F0 7100 0004          00000100  12437          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008D1C A749 1638               00001638  12438          LGHI  4,5688      ; 5688
00008D20 41F4 F000               00000000  12439          LA    15,0(4,15)
00008D24 E3F0 D368 0024          00000368  12440          STG   15,872(0,13)
00008D2A 4110 D368               00000368  12441          LA    1,872(0,13)
00008D2E E3F0 C108 0004          00008AF8  12442          LG    15,@lit_1946_778 ; mtx_lock
00008D34                                   12443 @@gen_label1070 DS    0H
00008D34 05EF                              12444          BALR  14,15
00008D36                                   12445 @@gen_label1071 DS    0H
00008D36 41F0 D168               00000168  12446          LA    15,360(0,13)
00008D3A E3F0 D368 0024          00000368  12447          STG   15,872(0,13)
00008D40 E3F0 7100 0004          00000100  12448          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008D46 A719 1630               00001630  12449          LGHI  1,5680      ; 5680
00008D4A E3F1 F000 0004          00000000  12450          LG    15,0(1,15)
00008D50 E3F0 D370 0024          00000370  12451          STG   15,880(0,13)
00008D56 E548 D378 0100          00000378  12452          MVGHI 888(13),256
00008D5C 4110 D368               00000368  12453          LA    1,872(0,13)
00008D60 E3F0 C110 0004          00008B00  12454          LG    15,@lit_1946_780 ; rd_strlcpy
00008D66                                   12455 @@gen_label1072 DS    0H
00008D66 05EF                              12456          BALR  14,15
00008D68                                   12457 @@gen_label1073 DS    0H
00008D68 E3F0 7100 0004          00000100  12458          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008D6E 41F4 F000               00000000  12459          LA    15,0(4,15)
00008D72 E3F0 D368 0024          00000368  12460          STG   15,872(0,13)
00008D78 4110 D368               00000368  12461          LA    1,872(0,13)
00008D7C E3F0 C118 0004          00008B08  12462          LG    15,@lit_1946_782 ; mtx_unlock
00008D82                                   12463 @@gen_label1074 DS    0H
00008D82 05EF                              12464          BALR  14,15
00008D84                                   12465 @@gen_label1075 DS    0H
00008D84 E3F0 7100 0004          00000100  12466          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008D8A E3F0 FFD0 0004          00000FD0  12467          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00008D90 41F0 F210               00000210  12468          LA    15,528(0,15)
00008D94 E3F0 D368 0024          00000368  12469          STG   15,872(0,13)
00008D9A E3F0 7100 0004          00000100  12470          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008DA0 E3F0 FFD0 0004          00000FD0  12471          LG    15,4048(0,15)
00008DA6 E3F0 D370 0024          00000370  12472          STG   15,880(0,13)
00008DAC 41F0 D168               00000168  12473          LA    15,360(0,13)
00008DB0 E3F0 D378 0024          00000378  12474          STG   15,888(0,13)
00008DB6 B914 00F3                         12475          LGFR  15,3
00008DBA E3F0 D380 0024          00000380  12476          STG   15,896(0,13)
00008DC0 D707 D388 D388 00000388 00000388  12477          XC    904(8,13),904(13)
00008DC6 E3F0 C0E0 0004          00008AD0  12478          LG    15,@lit_1946_769
00008DCC 4110 F432               00000432  12479          LA    1,1074(0,15)
00008DD0 E310 D390 0024          00000390  12480          STG   1,912(0,13)
00008DD6 41F0 F574               00000574  12481          LA    15,1396(0,15)
                                                                                                                           Page  250 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008DDA E3F0 D398 0024          00000398  12482          STG   15,920(0,13)
00008DE0 E3F0 2060 0004          00000060  12483          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00008DE6 E3F0 F080 0004          00000080  12484          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00008DEC E3F0 F008 0004          00000008  12485          LG    15,8(0,15)
00008DF2 E3F0 D3A0 0024          000003A0  12486          STG   15,928(0,13)
00008DF8 E3F0 2068 0014          00000068  12487          LGF   15,104(0,2)
00008DFE E3F0 D3A8 0024          000003A8  12488          STG   15,936(0,13)
00008E04 E3F0 D100 0004          00000100  12489          LG    15,256(0,13)
00008E0A E3F0 D3B0 0024          000003B0  12490          STG   15,944(0,13)
00008E10 E3F0 D158 0004          00000158  12491          LG    15,344(0,13)
00008E16 E3F0 D3B8 0024          000003B8  12492          STG   15,952(0,13)
00008E1C 4110 D368               00000368  12493          LA    1,872(0,13)
00008E20 E3F0 C0E8 0004          00008AD8  12494          LG    15,@lit_1946_772 ; rd_kafka_log0
00008E26                                   12495 @@gen_label1076 DS    0H
00008E26 05EF                              12496          BALR  14,15
00008E28                                   12497 @@gen_label1077 DS    0H
00008E28                                   12498 @L1245   DS    0H
00008E28 E54C 7188 FF39          00000188  12499          MVHI  392(7),-199 ; offset of rkbuf_err in rd_kafka_buf_s
00008E2E E3C0 C0F8 001A          00008AE8  12500          ALGF  12,@lit_region_diff_1946_4_7
                                           12501          DROP  12
                        0000A7AA           12502          USING @REGION_1946_7,12
00008E34 47F0 C1A4               0000A94E  12503          B     @_err_parse@1946@2
                                           12504          DROP  12
                        000089F0           12505          USING @REGION_1946_4,12
                                           12506 * ***
                                           12507 * ***   # 807 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           12508 * ***                   do { int16_t _v; do { size_t __len2 = (size_t)\
                                           12509 * (sizeof(_v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2\
                                           12510 * )) do { size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)-\
                                           12511 * >rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))\
                                           12512 * ) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)\
                                           12513 * ))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_re\
                                           12514 * ader.c",807, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_r\
                                           12515 * kb"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__t\
                                           12516 * mpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do {\
                                           12517 *  char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock)\
                                           12518 * ; rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_lognam\
                                           12519 * e)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log\
                                           12520 * 0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, \
                                           12521 * _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffe\
                                           12522 * r underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "exp\
                                           12523 * ected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kaf\
                                           12524 * ka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiV\
                                           12525 * ersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reade\
                                           12526 * r)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 807, __len0,\
                                           12527 *  ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_re\
                                           12528 * ader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigatio\
                                           12529 * n : "incorrect broker.version.fallback?", __tmpstr); } while (0); } \
                                           12530 * (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; }\
                                           12531 *  while (0); } } while (0); } while (0); *(&ctrl_data.Type) = (int16_\
                                           12532 * t)(_v); } while (0);
00008E38                                   12533 @L1261   DS    0H
                                                                                                                           Page  251 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008E38 A759 0002               00000002  12534          LGHI  5,2         ; 2
00008E3C 41F0 7078               00000078  12535          LA    15,120(0,7)
00008E40 E3F0 D368 0024          00000368  12536          STG   15,872(0,13)
00008E46 41F0 D0CA               000000CA  12537          LA    15,202(0,13)
00008E4A E3F0 D370 0024          00000370  12538          STG   15,880(0,13)
00008E50 E350 D378 0024          00000378  12539          STG   5,888(0,13)
00008E56 4110 D368               00000368  12540          LA    1,872(0,13)
00008E5A E3F0 C130 0004          00008B20  12541          LG    15,@lit_1946_799 ; rd_slice_read
00008E60                                   12542 @@gen_label1078 DS    0H
00008E60 05EF                              12543          BALR  14,15
00008E62                                   12544 @@gen_label1079 DS    0H
00008E62 B902 00FF                         12545          LTGR  15,15
00008E66 4770 C6F6               000090E6  12546          BNZ   @L1264
00008E6A                                   12547 @L1265   DS    0H
00008E6A E380 7098 0004          00000098  12548          LG    8,152(0,7)  ; offset of end in rd_slice_s
00008E70 41F0 7078               00000078  12549          LA    15,120(0,7)
00008E74 E3F0 D368 0024          00000368  12550          STG   15,872(0,13)
00008E7A 4110 D368               00000368  12551          LA    1,872(0,13)
00008E7E E3F0 C138 0004          00008B28  12552          LG    15,@lit_1946_800 ; rd_slice_abs_offset
00008E84                                   12553 @@gen_label1081 DS    0H
00008E84 05EF                              12554          BALR  14,15
00008E86                                   12555 @@gen_label1082 DS    0H
00008E86 B90B 008F                         12556          SLGR  8,15
00008E8A B921 0058                         12557          CLGR  5,8
00008E8E 47D0 C6F6               000090E6  12558          BNH   @L1268
00008E92                                   12559 @L1269   DS    0H
00008E92 1233                              12560          LTR   3,3
00008E94 47D0 C6E6               000090D6  12561          BNH   @L1272
00008E98                                   12562 @L1273   DS    0H
00008E98 E3F0 7100 0002          00000100  12563          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008E9E 4770 C4F4               00008EE4  12564          BNZ   @L1276
00008EA2 E3F0 C0E0 0004          00008AD0  12565          LG    15,@lit_1946_769
00008EA8 4110 F2CE               000002CE  12566          LA    1,718(0,15)
00008EAC E310 D368 0024          00000368  12567          STG   1,872(0,13)
00008EB2 E548 D370 0327          00000370  12568          MVGHI 880(13),807
00008EB8 E310 C0F0 0004          00008AE0  12569          LG    1,@lit_1946_771
00008EBE 4110 121A               0000021A  12570          LA    1,538(0,1)
00008EC2 E310 D378 0024          00000378  12571          STG   1,888(0,13)
00008EC8 D707 D380 D380 00000380 00000380  12572          XC    896(8,13),896(13)
00008ECE 41F0 F362               00000362  12573          LA    15,866(0,15)
00008ED2 E3F0 D388 0024          00000388  12574          STG   15,904(0,13)
00008ED8 4110 D368               00000368  12575          LA    1,872(0,13)
00008EDC E3F0 C100 0004          00008AF0  12576          LG    15,@lit_1946_776 ; rd_kafka_crash
00008EE2                                   12577 @@gen_label1086 DS    0H
00008EE2 05EF                              12578          BALR  14,15
00008EE4                                   12579 @@gen_label1087 DS    0H
00008EE4                                   12580 @L1276   DS    0H
00008EE4 41F0 D168               00000168  12581          LA    15,360(0,13)
00008EE8 E3F0 D368 0024          00000368  12582          STG   15,872(0,13)
00008EEE E548 D370 0100          00000370  12583          MVGHI 880(13),256
00008EF4 E3F0 C0E0 0004          00008AD0  12584          LG    15,@lit_1946_769
00008EFA 41F0 F37C               0000037C  12585          LA    15,892(0,15)
                                                                                                                           Page  252 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008EFE E3F0 D378 0024          00000378  12586          STG   15,888(0,13)
00008F04 4110 D368               00000368  12587          LA    1,872(0,13)
00008F08 E3F0 C140 0004          00008B30  12588          LG    15,@lit_1946_805 ; snprintf
00008F0E                                   12589 @@gen_label1088 DS    0H
00008F0E 05EF                              12590          BALR  14,15
00008F10                                   12591 @@gen_label1089 DS    0H
00008F10 41F0 D168               00000168  12592          LA    15,360(0,13)
00008F14 B904 001F                         12593          LGR   1,15
00008F18 A709 0000               00000000  12594          LGHI  0,0
00008F1C                                   12595 @@gen_label1090 DS 0H
00008F1C B25E 000F                         12596          SRST  0,15
00008F20 4710 C52C               00008F1C  12597          BC  1,@@gen_label1090
00008F24 B90B 0001                         12598          SLGR  0,1
00008F28 A70F 0002               00000002  12599          CGHI  0,2
00008F2C 4770 C544               00008F34  12600          BNE   @L1278
00008F30 9200 D168      00000168 00000000  12601          MVI   360(13),0
00008F34                                   12602 @L1277   DS    0H
00008F34                                   12603 @L1278   DS    0H
00008F34 E3F0 7100 0004          00000100  12604          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008F3A A729 1638               00001638  12605          LGHI  2,5688      ; 5688
00008F3E 41F2 F000               00000000  12606          LA    15,0(2,15)
00008F42 E3F0 D368 0024          00000368  12607          STG   15,872(0,13)
00008F48 4110 D368               00000368  12608          LA    1,872(0,13)
00008F4C E3F0 C108 0004          00008AF8  12609          LG    15,@lit_1946_778 ; mtx_lock
00008F52                                   12610 @@gen_label1092 DS    0H
00008F52 05EF                              12611          BALR  14,15
00008F54                                   12612 @@gen_label1093 DS    0H
00008F54 41F0 D268               00000268  12613          LA    15,616(0,13)
00008F58 E3F0 D368 0024          00000368  12614          STG   15,872(0,13)
00008F5E E3F0 7100 0004          00000100  12615          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008F64 A719 1630               00001630  12616          LGHI  1,5680      ; 5680
00008F68 E3F1 F000 0004          00000000  12617          LG    15,0(1,15)
00008F6E E3F0 D370 0024          00000370  12618          STG   15,880(0,13)
00008F74 E548 D378 0100          00000378  12619          MVGHI 888(13),256
00008F7A 4110 D368               00000368  12620          LA    1,872(0,13)
00008F7E E3F0 C110 0004          00008B00  12621          LG    15,@lit_1946_780 ; rd_strlcpy
00008F84                                   12622 @@gen_label1094 DS    0H
00008F84 05EF                              12623          BALR  14,15
00008F86                                   12624 @@gen_label1095 DS    0H
00008F86 E3F0 7100 0004          00000100  12625          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00008F8C 41F2 F000               00000000  12626          LA    15,0(2,15)
00008F90 E3F0 D368 0024          00000368  12627          STG   15,872(0,13)
00008F96 4110 D368               00000368  12628          LA    1,872(0,13)
00008F9A E3F0 C118 0004          00008B08  12629          LG    15,@lit_1946_782 ; mtx_unlock
00008FA0                                   12630 @@gen_label1096 DS    0H
00008FA0 05EF                              12631          BALR  14,15
00008FA2                                   12632 @@gen_label1097 DS    0H
00008FA2 E3F0 70B8 0015          000000B8  12633          LGH   15,184(0,7)
00008FA8 E3F0 D368 0024          00000368  12634          STG   15,872(0,13)
00008FAE 4110 D368               00000368  12635          LA    1,872(0,13)
00008FB2 E3F0 C120 0004          00008B10  12636          LG    15,@lit_1946_783 ; rd_kafka_ApiKey2str
00008FB8                                   12637 @@gen_label1098 DS    0H
                                                                                                                           Page  253 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008FB8 05EF                              12638          BALR  14,15
00008FBA                                   12639 @@gen_label1099 DS    0H
00008FBA B904 002F                         12640          LGR   2,15
00008FBE 41F0 7078               00000078  12641          LA    15,120(0,7)
00008FC2 E3F0 D368 0024          00000368  12642          STG   15,872(0,13)
00008FC8 4110 D368               00000368  12643          LA    1,872(0,13)
00008FCC E3F0 C128 0004          00008B18  12644          LG    15,@lit_1946_786 ; rd_slice_offset
00008FD2                                   12645 @@gen_label1100 DS    0H
00008FD2 05EF                              12646          BALR  14,15
00008FD4                                   12647 @@gen_label1101 DS    0H
00008FD4 B904 004F                         12648          LGR   4,15
00008FD8 E380 7098 0004          00000098  12649          LG    8,152(0,7)  ; offset of end in rd_slice_s
00008FDE 41F0 7078               00000078  12650          LA    15,120(0,7)
00008FE2 E3F0 D368 0024          00000368  12651          STG   15,872(0,13)
00008FE8 4110 D368               00000368  12652          LA    1,872(0,13)
00008FEC E3F0 C138 0004          00008B28  12653          LG    15,@lit_1946_800 ; rd_slice_abs_offset
00008FF2                                   12654 @@gen_label1102 DS    0H
00008FF2 05EF                              12655          BALR  14,15
00008FF4                                   12656 @@gen_label1103 DS    0H
00008FF4 B90B 008F                         12657          SLGR  8,15
00008FF8 E3F0 71E8 0002          000001E8  12658          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00008FFE 4780 C61C               0000900C  12659          BZ    @L1281
00009002 E3F0 71E8 0004          000001E8  12660          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00009008 47F0 C626               00009016  12661          B     @L1282
0000900C                                   12662 @L1281   DS    0H
0000900C E3F0 C0E0 0004          00008AD0  12663          LG    15,@lit_1946_769
00009012 41F0 F380               00000380  12664          LA    15,896(0,15)
00009016                                   12665 @L1282   DS    0H
00009016 E310 7100 0004          00000100  12666          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000901C E310 1FD0 0004          00000FD0  12667          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00009022 4110 1210               00000210  12668          LA    1,528(0,1)
00009026 E310 D368 0024          00000368  12669          STG   1,872(0,13)
0000902C E310 7100 0004          00000100  12670          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00009032 E310 1FD0 0004          00000FD0  12671          LG    1,4048(0,1)
00009038 E310 D370 0024          00000370  12672          STG   1,880(0,13)
0000903E 4110 D268               00000268  12673          LA    1,616(0,13)
00009042 E310 D378 0024          00000378  12674          STG   1,888(0,13)
00009048 B914 0013                         12675          LGFR  1,3
0000904C E310 D380 0024          00000380  12676          STG   1,896(0,13)
00009052 D707 D388 D388 00000388 00000388  12677          XC    904(8,13),904(13)
00009058 E310 C0E0 0004          00008AD0  12678          LG    1,@lit_1946_769
0000905E 4130 13A4               000003A4  12679          LA    3,932(0,1)
00009062 E330 D390 0024          00000390  12680          STG   3,912(0,13)
00009068 4110 13B0               000003B0  12681          LA    1,944(0,1)
0000906C EB12 D398 0024          00000398  12682          STMG  1,2,920(13)
00009072 4810 70BA               000000BA  12683          LH    1,186(0,7)
00009076 B914 0011                         12684          LGFR  1,1
0000907A E310 D3A8 0024          000003A8  12685          STG   1,936(0,13)
00009080 E340 D3B0 0024          000003B0  12686          STG   4,944(0,13)
00009086 E310 7098 0004          00000098  12687          LG    1,152(0,7)  ; offset of end in rd_slice_s
                                                                                                                           Page  254 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000908C E310 7090 000B          00000090  12688          SLG   1,144(0,7)
00009092 E310 D3B8 0024          000003B8  12689          STG   1,952(0,13)
00009098 E310 C0F0 0004          00008AE0  12690          LG    1,@lit_1946_771
0000909E 4110 121A               0000021A  12691          LA    1,538(0,1)
000090A2 E310 D3C0 0024          000003C0  12692          STG   1,960(0,13)
000090A8 E548 D3C8 0327          000003C8  12693          MVGHI 968(13),807
000090AE E350 D3D0 0024          000003D0  12694          STG   5,976(0,13)
000090B4 E380 D3D8 0024          000003D8  12695          STG   8,984(0,13)
000090BA E3F0 D3E0 0024          000003E0  12696          STG   15,992(0,13)
000090C0 41F0 D168               00000168  12697          LA    15,360(0,13)
000090C4 E3F0 D3E8 0024          000003E8  12698          STG   15,1000(0,13)
000090CA 4110 D368               00000368  12699          LA    1,872(0,13)
000090CE E3F0 C0E8 0004          00008AD8  12700          LG    15,@lit_1946_772 ; rd_kafka_log0
000090D4                                   12701 @@gen_label1105 DS    0H
000090D4 05EF                              12702          BALR  14,15
000090D6                                   12703 @@gen_label1106 DS    0H
000090D6                                   12704 @L1272   DS    0H
000090D6 E54C 7188 FF65          00000188  12705          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
000090DC E3C0 C0F8 001A          00008AE8  12706          ALGF  12,@lit_region_diff_1946_4_7
                                           12707          DROP  12
                        0000A7AA           12708          USING @REGION_1946_7,12
000090E2 47F0 C1A4               0000A94E  12709          B     @_err_parse@1946@2
                                           12710          DROP  12
                        000089F0           12711          USING @REGION_1946_4,12
000090E6                                   12712 @L1268   DS    0H
000090E6                                   12713 @L1264   DS    0H
000090E6 D201 D162 D0CA 00000162 000000CA  12714          MVC   354(2,13),202(13)
                                           12715 * ***
                                           12716 * ***
                                           12717 * ***                   do { size_t __len1 = (size_t)((int32_t)(messag\
                                           12718 * e_end - rd_slice_offset(&rkbuf->rkbuf_reader))); if (__len1 && !rd_s\
                                           12719 * lice_read(&(rkbuf)->rkbuf_reader, ((void *)0), __len1)) do { size_t \
                                           12720 * __len0 = (size_t)(__len1); if (((__len0 > ((&(rkbuf)->rkbuf_reader)-\
                                           12721 * >end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { if (lo\
                                           12722 * g_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_cr\
                                           12723 * ash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",810, __\
                                           12724 * FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (\
                                           12725 * 0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); \
                                           12726 * if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[\
                                           12727 * 256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_l\
                                           12728 * ogname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock\
                                           12729 * (&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbu\
                                           12730 * f_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_d\
                                           12731 * ecode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "\
                                           12732 * for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" "\
                                           12733 *  bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(r\
                                           12734 * kbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slic\
                                           12735 * e_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkb\
                                           12736 * uf->rkbuf_reader)->start), __FUNCTION__, 810, __len0, ((&rkbuf->rkbu\
                                           12737 * f_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->\
                                           12738 * rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect \
                                           12739 * broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_\
                                                                                                                           Page  255 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12740 * err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } }\
                                           12741 *  while (0); } while (0);
000090EC                                   12742 @L1283   DS    0H
000090EC 41F0 7078               00000078  12743          LA    15,120(0,7)
000090F0 E3F0 D368 0024          00000368  12744          STG   15,872(0,13)
000090F6 4110 D368               00000368  12745          LA    1,872(0,13)
000090FA E3F0 C128 0004          00008B18  12746          LG    15,@lit_1946_786 ; rd_slice_offset
00009100                                   12747 @@gen_label1107 DS    0H
00009100 05EF                              12748          BALR  14,15
00009102                                   12749 @@gen_label1108 DS    0H
00009102 B90B 004F                         12750          SLGR  4,15
00009106 B914 0044                         12751          LGFR  4,4
0000910A B902 00F4                         12752          LTGR  15,4
0000910E 4770 C72C               0000911C  12753          BNZ   *+14  Around region break
00009112 E3C0 C148 001A          00008B38  12754          ALGF  12,@lit_region_diff_1946_4_5
                                           12755          DROP  12
                        00009410           12756          USING @REGION_1946_5,12
00009118 47F0 C46E               0000987E  12757          B     @L1305
                                           12758          DROP  12
                        000089F0           12759          USING @REGION_1946_4,12
0000911C 41F0 7078               00000078  12760          LA    15,120(0,7)
00009120 E3F0 D368 0024          00000368  12761          STG   15,872(0,13)
00009126 D707 D370 D370 00000370 00000370  12762          XC    880(8,13),880(13)
0000912C E340 D378 0024          00000378  12763          STG   4,888(0,13)
00009132 4110 D368               00000368  12764          LA    1,872(0,13)
00009136 E3F0 C130 0004          00008B20  12765          LG    15,@lit_1946_799 ; rd_slice_read
0000913C                                   12766 @@gen_label1110 DS    0H
0000913C 05EF                              12767          BALR  14,15
0000913E                                   12768 @@gen_label1111 DS    0H
0000913E B902 00FF                         12769          LTGR  15,15
00009142 4780 C760               00009150  12770          BZ    *+14  Around region break
00009146 E3C0 C148 001A          00008B38  12771          ALGF  12,@lit_region_diff_1946_4_5
                                           12772          DROP  12
                        00009410           12773          USING @REGION_1946_5,12
0000914C 47F0 C46E               0000987E  12774          B     @L1305
                                           12775          DROP  12
                        000089F0           12776          USING @REGION_1946_4,12
00009150                                   12777 @L1287   DS    0H
00009150 E350 7098 0004          00000098  12778          LG    5,152(0,7)  ; offset of end in rd_slice_s
00009156 41F0 7078               00000078  12779          LA    15,120(0,7)
0000915A E3F0 D368 0024          00000368  12780          STG   15,872(0,13)
00009160 4110 D368               00000368  12781          LA    1,872(0,13)
00009164 E3F0 C138 0004          00008B28  12782          LG    15,@lit_1946_800 ; rd_slice_abs_offset
0000916A                                   12783 @@gen_label1113 DS    0H
0000916A 05EF                              12784          BALR  14,15
0000916C                                   12785 @@gen_label1114 DS    0H
0000916C B90B 005F                         12786          SLGR  5,15
00009170 B921 0045                         12787          CLGR  4,5
00009174 47D0 C9DC               000093CC  12788          BNH   @L1290
00009178                                   12789 @L1291   DS    0H
00009178 1233                              12790          LTR   3,3
0000917A 47D0 C9CC               000093BC  12791          BNH   @L1294
                                                                                                                           Page  256 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000917E                                   12792 @L1295   DS    0H
0000917E E3F0 7100 0002          00000100  12793          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009184 4770 C7DA               000091CA  12794          BNZ   @L1298
00009188 E3F0 C0E0 0004          00008AD0  12795          LG    15,@lit_1946_769
0000918E 4110 F2CE               000002CE  12796          LA    1,718(0,15)
00009192 E310 D368 0024          00000368  12797          STG   1,872(0,13)
00009198 E548 D370 032A          00000370  12798          MVGHI 880(13),810
0000919E E310 C0F0 0004          00008AE0  12799          LG    1,@lit_1946_771
000091A4 4110 121A               0000021A  12800          LA    1,538(0,1)
000091A8 E310 D378 0024          00000378  12801          STG   1,888(0,13)
000091AE D707 D380 D380 00000380 00000380  12802          XC    896(8,13),896(13)
000091B4 41F0 F362               00000362  12803          LA    15,866(0,15)
000091B8 E3F0 D388 0024          00000388  12804          STG   15,904(0,13)
000091BE 4110 D368               00000368  12805          LA    1,872(0,13)
000091C2 E3F0 C100 0004          00008AF0  12806          LG    15,@lit_1946_776 ; rd_kafka_crash
000091C8                                   12807 @@gen_label1118 DS    0H
000091C8 05EF                              12808          BALR  14,15
000091CA                                   12809 @@gen_label1119 DS    0H
000091CA                                   12810 @L1298   DS    0H
000091CA 41F0 D168               00000168  12811          LA    15,360(0,13)
000091CE E3F0 D368 0024          00000368  12812          STG   15,872(0,13)
000091D4 E548 D370 0100          00000370  12813          MVGHI 880(13),256
000091DA E3F0 C0E0 0004          00008AD0  12814          LG    15,@lit_1946_769
000091E0 41F0 F37C               0000037C  12815          LA    15,892(0,15)
000091E4 E3F0 D378 0024          00000378  12816          STG   15,888(0,13)
000091EA 4110 D368               00000368  12817          LA    1,872(0,13)
000091EE E3F0 C140 0004          00008B30  12818          LG    15,@lit_1946_805 ; snprintf
000091F4                                   12819 @@gen_label1120 DS    0H
000091F4 05EF                              12820          BALR  14,15
000091F6                                   12821 @@gen_label1121 DS    0H
000091F6 41F0 D168               00000168  12822          LA    15,360(0,13)
000091FA B904 001F                         12823          LGR   1,15
000091FE A709 0000               00000000  12824          LGHI  0,0
00009202                                   12825 @@gen_label1122 DS 0H
00009202 B25E 000F                         12826          SRST  0,15
00009206 4710 C812               00009202  12827          BC  1,@@gen_label1122
0000920A B90B 0001                         12828          SLGR  0,1
0000920E A70F 0002               00000002  12829          CGHI  0,2
00009212 4770 C82A               0000921A  12830          BNE   @L1300
00009216 9200 D168      00000168 00000000  12831          MVI   360(13),0
0000921A                                   12832 @L1299   DS    0H
0000921A                                   12833 @L1300   DS    0H
0000921A E3F0 7100 0004          00000100  12834          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009220 A729 1638               00001638  12835          LGHI  2,5688      ; 5688
00009224 41F2 F000               00000000  12836          LA    15,0(2,15)
00009228 E3F0 D368 0024          00000368  12837          STG   15,872(0,13)
0000922E 4110 D368               00000368  12838          LA    1,872(0,13)
00009232 E3F0 C108 0004          00008AF8  12839          LG    15,@lit_1946_778 ; mtx_lock
00009238                                   12840 @@gen_label1124 DS    0H
00009238 05EF                              12841          BALR  14,15
0000923A                                   12842 @@gen_label1125 DS    0H
0000923A 41F0 D268               00000268  12843          LA    15,616(0,13)
                                                                                                                           Page  257 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000923E E3F0 D368 0024          00000368  12844          STG   15,872(0,13)
00009244 E3F0 7100 0004          00000100  12845          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000924A A719 1630               00001630  12846          LGHI  1,5680      ; 5680
0000924E E3F1 F000 0004          00000000  12847          LG    15,0(1,15)
00009254 E3F0 D370 0024          00000370  12848          STG   15,880(0,13)
0000925A E548 D378 0100          00000378  12849          MVGHI 888(13),256
00009260 4110 D368               00000368  12850          LA    1,872(0,13)
00009264 E3F0 C110 0004          00008B00  12851          LG    15,@lit_1946_780 ; rd_strlcpy
0000926A                                   12852 @@gen_label1126 DS    0H
0000926A 05EF                              12853          BALR  14,15
0000926C                                   12854 @@gen_label1127 DS    0H
0000926C E3F0 7100 0004          00000100  12855          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009272 41F2 F000               00000000  12856          LA    15,0(2,15)
00009276 E3F0 D368 0024          00000368  12857          STG   15,872(0,13)
0000927C 4110 D368               00000368  12858          LA    1,872(0,13)
00009280 E3F0 C118 0004          00008B08  12859          LG    15,@lit_1946_782 ; mtx_unlock
00009286                                   12860 @@gen_label1128 DS    0H
00009286 05EF                              12861          BALR  14,15
00009288                                   12862 @@gen_label1129 DS    0H
00009288 E3F0 70B8 0015          000000B8  12863          LGH   15,184(0,7)
0000928E E3F0 D368 0024          00000368  12864          STG   15,872(0,13)
00009294 4110 D368               00000368  12865          LA    1,872(0,13)
00009298 E3F0 C120 0004          00008B10  12866          LG    15,@lit_1946_783 ; rd_kafka_ApiKey2str
0000929E                                   12867 @@gen_label1130 DS    0H
0000929E 05EF                              12868          BALR  14,15
000092A0                                   12869 @@gen_label1131 DS    0H
000092A0 B904 002F                         12870          LGR   2,15
000092A4 41F0 7078               00000078  12871          LA    15,120(0,7)
000092A8 E3F0 D368 0024          00000368  12872          STG   15,872(0,13)
000092AE 4110 D368               00000368  12873          LA    1,872(0,13)
000092B2 E3F0 C128 0004          00008B18  12874          LG    15,@lit_1946_786 ; rd_slice_offset
000092B8                                   12875 @@gen_label1132 DS    0H
000092B8 05EF                              12876          BALR  14,15
000092BA                                   12877 @@gen_label1133 DS    0H
000092BA B904 005F                         12878          LGR   5,15
000092BE E380 7098 0004          00000098  12879          LG    8,152(0,7)  ; offset of end in rd_slice_s
000092C4 41F0 7078               00000078  12880          LA    15,120(0,7)
000092C8 E3F0 D368 0024          00000368  12881          STG   15,872(0,13)
000092CE 4110 D368               00000368  12882          LA    1,872(0,13)
000092D2 E3F0 C138 0004          00008B28  12883          LG    15,@lit_1946_800 ; rd_slice_abs_offset
000092D8                                   12884 @@gen_label1134 DS    0H
000092D8 05EF                              12885          BALR  14,15
000092DA                                   12886 @@gen_label1135 DS    0H
000092DA B90B 008F                         12887          SLGR  8,15
000092DE E3F0 71E8 0002          000001E8  12888          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000092E4 4780 C902               000092F2  12889          BZ    @L1303
000092E8 E3F0 71E8 0004          000001E8  12890          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
000092EE 47F0 C90C               000092FC  12891          B     @L1304
000092F2                                   12892 @L1303   DS    0H
000092F2 E3F0 C0E0 0004          00008AD0  12893          LG    15,@lit_1946_769
                                                                                                                           Page  258 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000092F8 41F0 F380               00000380  12894          LA    15,896(0,15)
000092FC                                   12895 @L1304   DS    0H
000092FC E310 7100 0004          00000100  12896          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00009302 E310 1FD0 0004          00000FD0  12897          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00009308 4110 1210               00000210  12898          LA    1,528(0,1)
0000930C E310 D368 0024          00000368  12899          STG   1,872(0,13)
00009312 E310 7100 0004          00000100  12900          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00009318 E310 1FD0 0004          00000FD0  12901          LG    1,4048(0,1)
0000931E E310 D370 0024          00000370  12902          STG   1,880(0,13)
00009324 4110 D268               00000268  12903          LA    1,616(0,13)
00009328 E310 D378 0024          00000378  12904          STG   1,888(0,13)
0000932E B914 0013                         12905          LGFR  1,3
00009332 E310 D380 0024          00000380  12906          STG   1,896(0,13)
00009338 D707 D388 D388 00000388 00000388  12907          XC    904(8,13),904(13)
0000933E E310 C0E0 0004          00008AD0  12908          LG    1,@lit_1946_769
00009344 4130 13A4               000003A4  12909          LA    3,932(0,1)
00009348 E330 D390 0024          00000390  12910          STG   3,912(0,13)
0000934E 4110 13B0               000003B0  12911          LA    1,944(0,1)
00009352 EB12 D398 0024          00000398  12912          STMG  1,2,920(13)
00009358 4810 70BA               000000BA  12913          LH    1,186(0,7)
0000935C B914 0011                         12914          LGFR  1,1
00009360 E310 D3A8 0024          000003A8  12915          STG   1,936(0,13)
00009366 E350 D3B0 0024          000003B0  12916          STG   5,944(0,13)
0000936C E310 7098 0004          00000098  12917          LG    1,152(0,7)  ; offset of end in rd_slice_s
00009372 E310 7090 000B          00000090  12918          SLG   1,144(0,7)
00009378 E310 D3B8 0024          000003B8  12919          STG   1,952(0,13)
0000937E E310 C0F0 0004          00008AE0  12920          LG    1,@lit_1946_771
00009384 4110 121A               0000021A  12921          LA    1,538(0,1)
00009388 E310 D3C0 0024          000003C0  12922          STG   1,960(0,13)
0000938E E548 D3C8 032A          000003C8  12923          MVGHI 968(13),810
00009394 E340 D3D0 0024          000003D0  12924          STG   4,976(0,13)
0000939A E380 D3D8 0024          000003D8  12925          STG   8,984(0,13)
000093A0 E3F0 D3E0 0024          000003E0  12926          STG   15,992(0,13)
000093A6 41F0 D168               00000168  12927          LA    15,360(0,13)
000093AA E3F0 D3E8 0024          000003E8  12928          STG   15,1000(0,13)
000093B0 4110 D368               00000368  12929          LA    1,872(0,13)
000093B4 E3F0 C0E8 0004          00008AD8  12930          LG    15,@lit_1946_772 ; rd_kafka_log0
000093BA                                   12931 @@gen_label1137 DS    0H
000093BA 05EF                              12932          BALR  14,15
000093BC                                   12933 @@gen_label1138 DS    0H
000093BC                                   12934 @L1294   DS    0H
000093BC E54C 7188 FF65          00000188  12935          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
000093C2 E3C0 C0F8 001A          00008AE8  12936          ALGF  12,@lit_region_diff_1946_4_7
                                           12937          DROP  12
                        0000A7AA           12938          USING @REGION_1946_7,12
000093C8 47F0 C1A4               0000A94E  12939          B     @_err_parse@1946@2
                                           12940          DROP  12
                        000089F0           12941          USING @REGION_1946_4,12
000093CC                                   12942 @L1290   DS    0H
000093CC                                   12943 @L1286   DS    0H
                                           12944 * ***
                                           12945 * ***
                                                                                                                           Page  259 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12946 * ***                   switch (ctrl_data.Type) {
000093CC E3C0 C148 001A          00008B38  12947          ALGF  12,@lit_region_diff_1946_4_5
                                           12948          DROP  12
                        00009410           12949          USING @REGION_1946_5,12
000093D2 47F0 C46E               0000987E  12950          B     @L1305
                                           12951          DROP  12
                        000089F0           12952          USING @REGION_1946_4,12
                                           12953 * ***                   case 1:
                                           12954 * ***
                                           12955 * ***                           break;
                                           12956 * ***
                                           12957 * ***                   case 0:
000093D6                                   12958 @L1308   DS    0H
                                           12959 * ***                           if (msetr->msetr_rkb->rkb_rk->rk_conf.\
                                           12960 * isolation_level !=
                                           12961 * ***                                           RD_KAFKA_READ_COMMITTE\
                                           12962 * D)
000093D6 E3F0 6048 0004          00000048  12963          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000093DC E3F0 FFD0 0004          00000FD0  12964          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
000093E2 E55C F7CC 0001          000007CC  12965          CHSI  1996(15),1
000093E8 4780 CA06               000093F6  12966          BE    *+14  Around region break
000093EC E3C0 C148 001A          00008B38  12967          ALGF  12,@lit_region_diff_1946_4_5
                                           12968          DROP  12
                        00009410           12969          USING @REGION_1946_5,12
000093F2 47F0 C490               000098A0  12970          B     @L1306
                                           12971          DROP  12
                        000089F0           12972          USING @REGION_1946_4,12
                                           12973 * ***                                   break;
000093F6                                   12974 @L1309   DS    0H
                                           12975 * ***
                                           12976 * ***                           if (((!msetr->msetr_aborted_txns))) {
000093F6 E3F0 6030 0002          00000030  12977          LTG   15,48(0,6)  ; offset of msetr_aborted_txns in rd_kafka_m*
                                                                sgset_reader_s
000093FC 4780 CA1A               0000940A  12978          BZ    *+14  Around region break
00009400 E3C0 C148 001A          00008B38  12979          ALGF  12,@lit_region_diff_1946_4_5
                                           12980          DROP  12
                        00009410           12981          USING @REGION_1946_5,12
00009406 47F0 C1D8               000095E8  12982          B     @L1310
                                           12983          DROP  12
                        000089F0           12984          USING @REGION_1946_4,12
                                           12985 * ***                                   do { if ((((msetr->msetr_rkb)-\
                                           12986 * >rkb_rk->rk_conf.debug & (0x40|0x8000)))) { do { char _logname[256];\
                                           12987 *  mtx_lock(&(msetr->msetr_rkb)->rkb_logname_lock); rd_strlcpy(_lognam\
                                           12988 * e, msetr->msetr_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(ms\
                                           12989 * etr->msetr_rkb)->rkb_logname_lock); rd_kafka_log0(&(msetr->msetr_rkb\
                                           12990 * )->rkb_rk->rk_conf, (msetr->msetr_rkb)->rkb_rk, _logname, 7, (0x40|0\
                                           12991 * x8000), "TXN", "%s [%" "d" "] received abort txn " "ctrl msg at offs\
                                           12992 * et %" "lld" " for " "PID %" "lld" ", but there are no " "known abort\
                                           12993 * ed transactions: " "ignoring", rktp->rktp_rkt->rkt_topic->str, rktp-\
                                           12994 * >rktp_partition, hdr.Offset, msetr->msetr_v2_hdr->PID); } while (0);\
                                           12995 *  } } while (0);
                                                                                                                           Page  260 
  Active Usings: @REGION_1946_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000940A E3C0 C148 001A          00008B38  12996          ALGF  12,@lit_region_diff_1946_4_5
00009410                                   12997 @REGION_1946_5 DS 0H
                                           12998          DROP  12
                        00009410           12999          USING @REGION_1946_5,12
00009410                                   13000 @L1311   DS    0H
00009410 E3F0 6048 0004          00000048  13001          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00009416 E3F0 FFD0 0004          00000FD0  13002          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000941C 58F0 F320               00000320  13003          L     15,800(0,15)
00009420 C0FB 0000 8040                    13004          NILF  15,X'00008040'
00009426 12FF                              13005          LTR   15,15
00009428 4780 C490               000098A0  13006          BZ    @L1306
0000942C                                   13007 @L1315   DS    0H
0000942C E3F0 6048 0004          00000048  13008          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00009432 A739 1638               00001638  13009          LGHI  3,5688      ; 5688
00009436 41F3 F000               00000000  13010          LA    15,0(3,15)
0000943A E3F0 D368 0024          00000368  13011          STG   15,872(0,13)
00009440 4110 D368               00000368  13012          LA    1,872(0,13)
00009444 E3F0 C140 0004          00009550  13013          LG    15,@lit_1946_841 ; mtx_lock
0000944A                                   13014 @@gen_label1142 DS    0H
0000944A 05EF                              13015          BALR  14,15
0000944C                                   13016 @@gen_label1143 DS    0H
0000944C 41F0 D168               00000168  13017          LA    15,360(0,13)
00009450 E3F0 D368 0024          00000368  13018          STG   15,872(0,13)
00009456 E3F0 6048 0004          00000048  13019          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000945C A719 1630               00001630  13020          LGHI  1,5680      ; 5680
00009460 E3F1 F000 0004          00000000  13021          LG    15,0(1,15)
00009466 E3F0 D370 0024          00000370  13022          STG   15,880(0,13)
0000946C E548 D378 0100          00000378  13023          MVGHI 888(13),256
00009472 4110 D368               00000368  13024          LA    1,872(0,13)
00009476 E3F0 C148 0004          00009558  13025          LG    15,@lit_1946_843 ; rd_strlcpy
0000947C                                   13026 @@gen_label1144 DS    0H
0000947C 05EF                              13027          BALR  14,15
0000947E                                   13028 @@gen_label1145 DS    0H
0000947E E3F0 6048 0004          00000048  13029          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00009484 41F3 F000               00000000  13030          LA    15,0(3,15)
00009488 E3F0 D368 0024          00000368  13031          STG   15,872(0,13)
0000948E 4110 D368               00000368  13032          LA    1,872(0,13)
00009492 E3F0 C150 0004          00009560  13033          LG    15,@lit_1946_845 ; mtx_unlock
00009498                                   13034 @@gen_label1146 DS    0H
00009498 05EF                              13035          BALR  14,15
0000949A                                   13036 @@gen_label1147 DS    0H
0000949A E3F0 6048 0004          00000048  13037          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000094A0 E3F0 FFD0 0004          00000FD0  13038          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
000094A6 41F0 F210               00000210  13039          LA    15,528(0,15)
000094AA E3F0 D368 0024          00000368  13040          STG   15,872(0,13)
000094B0 E3F0 6048 0004          00000048  13041          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
                                                                                                                           Page  261 
  Active Usings: @REGION_1946_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000094B6 E3F0 FFD0 0004          00000FD0  13042          LG    15,4048(0,15)
000094BC E3F0 D370 0024          00000370  13043          STG   15,880(0,13)
000094C2 41F0 D168               00000168  13044          LA    15,360(0,13)
000094C6 E3F0 D378 0024          00000378  13045          STG   15,888(0,13)
000094CC E548 D380 0007          00000380  13046          MVGHI 896(13),7
000094D2 C0FF 0000 8040                    13047          LLILF 15,X'00008040' ; 32832
000094D8 E3F0 D388 0024          00000388  13048          STG   15,904(0,13)
000094DE E3F0 C160 0004          00009570  13049          LG    15,@lit_1946_847
000094E4 4110 F5FA               000005FA  13050          LA    1,1530(0,15)
000094E8 E310 D390 0024          00000390  13051          STG   1,912(0,13)
000094EE 41F0 F5FE               000005FE  13052          LA    15,1534(0,15)
000094F2 E3F0 D398 0024          00000398  13053          STG   15,920(0,13)
000094F8 E3F0 2060 0004          00000060  13054          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
000094FE E3F0 F080 0004          00000080  13055          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00009504 E3F0 F008 0004          00000008  13056          LG    15,8(0,15)
0000950A E3F0 D3A0 0024          000003A0  13057          STG   15,928(0,13)
00009510 E3F0 2068 0014          00000068  13058          LGF   15,104(0,2)
00009516 E3F0 D3A8 0024          000003A8  13059          STG   15,936(0,13)
0000951C E3F0 D100 0004          00000100  13060          LG    15,256(0,13)
00009522 E3F0 D3B0 0024          000003B0  13061          STG   15,944(0,13)
00009528 E3F0 6028 0004          00000028  13062          LG    15,40(0,6)  ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
0000952E E3F0 F030 0004          00000030  13063          LG    15,48(0,15)
00009534 E3F0 D3B8 0024          000003B8  13064          STG   15,952(0,13)
0000953A 4110 D368               00000368  13065          LA    1,872(0,13)
0000953E E3F0 C158 0004          00009568  13066          LG    15,@lit_1946_848 ; rd_kafka_log0
00009544                                   13067 @@gen_label1148 DS    0H
00009544 05EF                              13068          BALR  14,15
00009546                                   13069 @@gen_label1149 DS    0H
00009546                                   13070 @L1314   DS    0H
                                           13071 * ***   # 835 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           13072 * ***                                   break;
00009546 47F0 C490               000098A0  13073          B     @L1306
00009550                                   13074          DS    0D
00009550 0000000000000000                  13075 @lit_1946_841 DC AD(mtx_lock)
00009558 0000000000001668                  13076 @lit_1946_843 DC AD(rd_strlcpy)
00009560 0000000000000000                  13077 @lit_1946_845 DC AD(mtx_unlock)
00009568 0000000000000000                  13078 @lit_1946_848 DC AD(rd_kafka_log0)
00009570 0000000000012AB8                  13079 @lit_1946_847 DC AD(@strings@)
00009578 0000000000011180                  13080 @lit_1946_849 DC AD(rd_kafka_aborted_txns_pop_offset)
00009580 00000A20                          13081 @lit_region_diff_1946_5_4  DC A(@REGION_1946_5-@REGION_1946_4)
00009584 00000000
00009588 0000000000000000                  13082 @lit_1946_867 DC AD(rd_kafka_op_new_ctrl_msg)
00009590 00000000000026D0                  13083 @lit_1946_868 DC AD(rd_kafka_q_enq)
00009598 0000139A                          13084 @lit_region_diff_1946_5_7  DC A(@REGION_1946_7-@REGION_1946_5)
0000959C 00000000
000095A0 0000000000001378                  13085 @lit_1946_870 DC AD(rd_slice_read_varint)
000095A8 0000000000000000                  13086 @lit_1946_873 DC AD(rd_kafka_crash)
000095B0 0000000000012808                  13087 @lit_1946_872 DC AD(@DATA)
000095B8 0000000000000000                  13088 @lit_1946_875 DC AD(snprintf)
000095C0 00000000000014D0                  13089 @lit_1946_882 DC AD(rd_kafka_$Api$Key2str)
000095C8 00000000000012B8                  13090 @lit_1946_883 DC AD(rd_slice_offset)
                                                                                                                           Page  262 
  Active Usings: @REGION_1946_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000095D0 0000000000001210                  13091 @lit_1946_884 DC AD(rd_slice_abs_offset)
000095D8 000009E8                          13092 @lit_region_diff_1946_5_6  DC A(@REGION_1946_6-@REGION_1946_5)
000095DC 00000000
000095E0 0000000000000000                  13093 @lit_1946_892 DC AD(rd_slice_ensure_contig)
                                           13094 * ***                           }
000095E8                                   13095 @L1310   DS    0H
                                           13096 * ***
                                           13097 * ***
                                           13098 * ***
                                           13099 * ***                           aborted_txn_start_offset =
                                           13100 * ***                                   rd_kafka_aborted_txns_pop_offs\
                                           13101 * et(
                                           13102 * ***                                           msetr->msetr_aborted_t\
                                           13103 * xns,
                                           13104 * ***                                           msetr->msetr_v2_hdr->P\
                                           13105 * ID,
                                           13106 * ***                                           hdr.Offset);
000095E8 E3F0 6030 0004          00000030  13107          LG    15,48(0,6)
000095EE E3F0 D368 0024          00000368  13108          STG   15,872(0,13)
000095F4 E3F0 6028 0004          00000028  13109          LG    15,40(0,6)  ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
000095FA E3F0 F030 0004          00000030  13110          LG    15,48(0,15)
00009600 E3F0 D370 0024          00000370  13111          STG   15,880(0,13)
00009606 E3F0 D100 0004          00000100  13112          LG    15,256(0,13)
0000960C E3F0 D378 0024          00000378  13113          STG   15,888(0,13)
00009612 4110 D368               00000368  13114          LA    1,872(0,13)
00009616 E3F0 C168 0004          00009578  13115          LG    15,@lit_1946_849 ; rd_kafka_aborted_txns_pop_offset
0000961C                                   13116 @@gen_label1150 DS    0H
0000961C 05EF                              13117          BALR  14,15
0000961E                                   13118 @@gen_label1151 DS    0H
                                           13119 * ***
                                           13120 * ***                           if (((aborted_txn_start_offset == -1))\
                                           13121 * ) {
0000961E A7FF FFFF               0000FFFF  13122          CGHI  15,-1
00009622 4770 C490               000098A0  13123          BNE   @L1306
                                           13124 * ***                                   do { if ((((msetr->msetr_rkb)-\
                                           13125 * >rkb_rk->rk_conf.debug & (0x40|0x8000)))) { do { char _logname[256];\
                                           13126 *  mtx_lock(&(msetr->msetr_rkb)->rkb_logname_lock); rd_strlcpy(_lognam\
                                           13127 * e, msetr->msetr_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(ms\
                                           13128 * etr->msetr_rkb)->rkb_logname_lock); rd_kafka_log0(&(msetr->msetr_rkb\
                                           13129 * )->rkb_rk->rk_conf, (msetr->msetr_rkb)->rkb_rk, _logname, 7, (0x40|0\
                                           13130 * x8000), "TXN", "%s [%" "d" "] received abort txn " "ctrl msg at offs\
                                           13131 * et %" "lld" " for " "PID %" "lld" ", but this offset is " "not liste\
                                           13132 * d as an aborted " "transaction: aborted transaction " "was possibly \
                                           13133 * empty: ignoring", rktp->rktp_rkt->rkt_topic->str, rktp->rktp_partiti\
                                           13134 * on, hdr.Offset, msetr->msetr_v2_hdr->PID); } while (0); } } while (0\
                                           13135 * );
00009626                                   13136 @L1319   DS    0H
00009626 E3F0 6048 0004          00000048  13137          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000962C E3F0 FFD0 0004          00000FD0  13138          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00009632 58F0 F320               00000320  13139          L     15,800(0,15)
                                                                                                                           Page  263 
  Active Usings: @REGION_1946_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009636 C0FB 0000 8040                    13140          NILF  15,X'00008040'
0000963C 12FF                              13141          LTR   15,15
0000963E 4780 C490               000098A0  13142          BZ    @L1306
00009642                                   13143 @L1323   DS    0H
00009642 E3F0 6048 0004          00000048  13144          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00009648 A739 1638               00001638  13145          LGHI  3,5688      ; 5688
0000964C 41F3 F000               00000000  13146          LA    15,0(3,15)
00009650 E3F0 D368 0024          00000368  13147          STG   15,872(0,13)
00009656 4110 D368               00000368  13148          LA    1,872(0,13)
0000965A E3F0 C140 0004          00009550  13149          LG    15,@lit_1946_841 ; mtx_lock
00009660                                   13150 @@gen_label1154 DS    0H
00009660 05EF                              13151          BALR  14,15
00009662                                   13152 @@gen_label1155 DS    0H
00009662 41F0 D168               00000168  13153          LA    15,360(0,13)
00009666 E3F0 D368 0024          00000368  13154          STG   15,872(0,13)
0000966C E3F0 6048 0004          00000048  13155          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00009672 A719 1630               00001630  13156          LGHI  1,5680      ; 5680
00009676 E3F1 F000 0004          00000000  13157          LG    15,0(1,15)
0000967C E3F0 D370 0024          00000370  13158          STG   15,880(0,13)
00009682 E548 D378 0100          00000378  13159          MVGHI 888(13),256
00009688 4110 D368               00000368  13160          LA    1,872(0,13)
0000968C E3F0 C148 0004          00009558  13161          LG    15,@lit_1946_843 ; rd_strlcpy
00009692                                   13162 @@gen_label1156 DS    0H
00009692 05EF                              13163          BALR  14,15
00009694                                   13164 @@gen_label1157 DS    0H
00009694 E3F0 6048 0004          00000048  13165          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000969A 41F3 F000               00000000  13166          LA    15,0(3,15)
0000969E E3F0 D368 0024          00000368  13167          STG   15,872(0,13)
000096A4 4110 D368               00000368  13168          LA    1,872(0,13)
000096A8 E3F0 C150 0004          00009560  13169          LG    15,@lit_1946_845 ; mtx_unlock
000096AE                                   13170 @@gen_label1158 DS    0H
000096AE 05EF                              13171          BALR  14,15
000096B0                                   13172 @@gen_label1159 DS    0H
000096B0 E3F0 6048 0004          00000048  13173          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000096B6 E3F0 FFD0 0004          00000FD0  13174          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
000096BC 41F0 F210               00000210  13175          LA    15,528(0,15)
000096C0 E3F0 D368 0024          00000368  13176          STG   15,872(0,13)
000096C6 E3F0 6048 0004          00000048  13177          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000096CC E3F0 FFD0 0004          00000FD0  13178          LG    15,4048(0,15)
000096D2 E3F0 D370 0024          00000370  13179          STG   15,880(0,13)
000096D8 41F0 D168               00000168  13180          LA    15,360(0,13)
000096DC E3F0 D378 0024          00000378  13181          STG   15,888(0,13)
000096E2 E548 D380 0007          00000380  13182          MVGHI 896(13),7
000096E8 C0FF 0000 8040                    13183          LLILF 15,X'00008040' ; 32832
000096EE E3F0 D388 0024          00000388  13184          STG   15,904(0,13)
000096F4 E3F0 C160 0004          00009570  13185          LG    15,@lit_1946_847
000096FA 4110 F5FA               000005FA  13186          LA    1,1530(0,15)
                                                                                                                           Page  264 
  Active Usings: @REGION_1946_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000096FE E310 D390 0024          00000390  13187          STG   1,912(0,13)
00009704 41F0 F676               00000676  13188          LA    15,1654(0,15)
00009708 E3F0 D398 0024          00000398  13189          STG   15,920(0,13)
0000970E E3F0 2060 0004          00000060  13190          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00009714 E3F0 F080 0004          00000080  13191          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000971A E3F0 F008 0004          00000008  13192          LG    15,8(0,15)
00009720 E3F0 D3A0 0024          000003A0  13193          STG   15,928(0,13)
00009726 E3F0 2068 0014          00000068  13194          LGF   15,104(0,2)
0000972C E3F0 D3A8 0024          000003A8  13195          STG   15,936(0,13)
00009732 E3F0 D100 0004          00000100  13196          LG    15,256(0,13)
00009738 E3F0 D3B0 0024          000003B0  13197          STG   15,944(0,13)
0000973E E3F0 6028 0004          00000028  13198          LG    15,40(0,6)  ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
00009744 E3F0 F030 0004          00000030  13199          LG    15,48(0,15)
0000974A E3F0 D3B8 0024          000003B8  13200          STG   15,952(0,13)
00009750 4110 D368               00000368  13201          LA    1,872(0,13)
00009754 E3F0 C158 0004          00009568  13202          LG    15,@lit_1946_848 ; rd_kafka_log0
0000975A                                   13203 @@gen_label1160 DS    0H
0000975A 05EF                              13204          BALR  14,15
0000975C                                   13205 @@gen_label1161 DS    0H
0000975C                                   13206 @L1322   DS    0H
                                           13207 * ***   # 859 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           13208 * ***                                   break;
0000975C 47F0 C490               000098A0  13209          B     @L1306
                                           13210 * ***                           }
                                           13211 * ***                           break;
                                           13212 * ***
                                           13213 * ***
                                           13214 * ***                   default:
                                           13215 * ***                           do { if ((((msetr->msetr_rkb)->rkb_rk-\
                                           13216 * >rk_conf.debug & (0x40)))) { do { char _logname[256]; mtx_lock(&(mse\
                                           13217 * tr->msetr_rkb)->rkb_logname_lock); rd_strlcpy(_logname, msetr->msetr\
                                           13218 * _rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(msetr->msetr_rkb)\
                                           13219 * ->rkb_logname_lock); rd_kafka_log0(&(msetr->msetr_rkb)->rkb_rk->rk_c\
                                           13220 * onf, (msetr->msetr_rkb)->rkb_rk, _logname, 7, (0x40), "TXN" "%s [%" \
                                           13221 * "d" "]: " "Unsupported ctrl message " "type %" "d" " at offset" " %"\
                                           13222 *  "lld" ": ignoring", rktp->rktp_rkt->rkt_topic->str, rktp->rktp_part\
                                           13223 * ition, ctrl_data.Type, hdr.Offset); } while (0); } } while (0);
00009760                                   13224 @L1327   DS    0H
00009760 E3F0 6048 0004          00000048  13225          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00009766 E3F0 FFD0 0004          00000FD0  13226          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000976C 9140 F323      00000323 00000040  13227          TM    803(15),64
00009770 4780 C490               000098A0  13228          BZ    @L1306
00009774                                   13229 @L1331   DS    0H
00009774 E3F0 6048 0004          00000048  13230          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000977A A739 1638               00001638  13231          LGHI  3,5688      ; 5688
0000977E 41F3 F000               00000000  13232          LA    15,0(3,15)
00009782 E3F0 D368 0024          00000368  13233          STG   15,872(0,13)
00009788 4110 D368               00000368  13234          LA    1,872(0,13)
0000978C E3F0 C140 0004          00009550  13235          LG    15,@lit_1946_841 ; mtx_lock
                                                                                                                           Page  265 
  Active Usings: @REGION_1946_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009792                                   13236 @@gen_label1163 DS    0H
00009792 05EF                              13237          BALR  14,15
00009794                                   13238 @@gen_label1164 DS    0H
00009794 41F0 D168               00000168  13239          LA    15,360(0,13)
00009798 E3F0 D368 0024          00000368  13240          STG   15,872(0,13)
0000979E E3F0 6048 0004          00000048  13241          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000097A4 A719 1630               00001630  13242          LGHI  1,5680      ; 5680
000097A8 E3F1 F000 0004          00000000  13243          LG    15,0(1,15)
000097AE E3F0 D370 0024          00000370  13244          STG   15,880(0,13)
000097B4 E548 D378 0100          00000378  13245          MVGHI 888(13),256
000097BA 4110 D368               00000368  13246          LA    1,872(0,13)
000097BE E3F0 C148 0004          00009558  13247          LG    15,@lit_1946_843 ; rd_strlcpy
000097C4                                   13248 @@gen_label1165 DS    0H
000097C4 05EF                              13249          BALR  14,15
000097C6                                   13250 @@gen_label1166 DS    0H
000097C6 E3F0 6048 0004          00000048  13251          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000097CC 41F3 F000               00000000  13252          LA    15,0(3,15)
000097D0 E3F0 D368 0024          00000368  13253          STG   15,872(0,13)
000097D6 4110 D368               00000368  13254          LA    1,872(0,13)
000097DA E3F0 C150 0004          00009560  13255          LG    15,@lit_1946_845 ; mtx_unlock
000097E0                                   13256 @@gen_label1167 DS    0H
000097E0 05EF                              13257          BALR  14,15
000097E2                                   13258 @@gen_label1168 DS    0H
000097E2 E3F0 6048 0004          00000048  13259          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000097E8 E3F0 FFD0 0004          00000FD0  13260          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
000097EE 41F0 F210               00000210  13261          LA    15,528(0,15)
000097F2 E3F0 D368 0024          00000368  13262          STG   15,872(0,13)
000097F8 E3F0 6048 0004          00000048  13263          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000097FE E3F0 FFD0 0004          00000FD0  13264          LG    15,4048(0,15)
00009804 E3F0 D370 0024          00000370  13265          STG   15,880(0,13)
0000980A 41F0 D168               00000168  13266          LA    15,360(0,13)
0000980E E3F0 D378 0024          00000378  13267          STG   15,888(0,13)
00009814 E548 D380 0007          00000380  13268          MVGHI 896(13),7
0000981A E548 D388 0040          00000388  13269          MVGHI 904(13),64
00009820 E3F0 C160 0004          00009570  13270          LG    15,@lit_1946_847
00009826 41F0 F722               00000722  13271          LA    15,1826(0,15)
0000982A E3F0 D390 0024          00000390  13272          STG   15,912(0,13)
00009830 E3F0 2060 0004          00000060  13273          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00009836 E3F0 F080 0004          00000080  13274          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000983C E3F0 F008 0004          00000008  13275          LG    15,8(0,15)
00009842 E3F0 D398 0024          00000398  13276          STG   15,920(0,13)
00009848 E3F0 2068 0014          00000068  13277          LGF   15,104(0,2)
0000984E E3F0 D3A0 0024          000003A0  13278          STG   15,928(0,13)
00009854 48F0 D162               00000162  13279          LH    15,354(0,13)
00009858 B914 00FF                         13280          LGFR  15,15
0000985C E3F0 D3A8 0024          000003A8  13281          STG   15,936(0,13)
00009862 E3F0 D100 0004          00000100  13282          LG    15,256(0,13)
00009868 E3F0 D3B0 0024          000003B0  13283          STG   15,944(0,13)
                                                                                                                           Page  266 
  Active Usings: @REGION_1946_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000986E 4110 D368               00000368  13284          LA    1,872(0,13)
00009872 E3F0 C158 0004          00009568  13285          LG    15,@lit_1946_848 ; rd_kafka_log0
00009878                                   13286 @@gen_label1169 DS    0H
00009878 05EF                              13287          BALR  14,15
0000987A                                   13288 @@gen_label1170 DS    0H
0000987A                                   13289 @L1330   DS    0H
                                           13290 * ***   # 873 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           13291 * ***                           break;
0000987A 47F0 C490               000098A0  13292          B     @L1306
                                           13293 * ***                   }
0000987E                                   13294 @L1305   DS    0H
0000987E 48F0 D162               00000162  13295          LH    15,354(0,13)
00009882 12FF                              13296          LTR   15,15
00009884 4740 C350               00009760  13297          BL    @L1327
00009888 12FF                              13298          LTR   15,15
0000988A 4770 C488               00009898  13299          BNE   *+14  Around region break
0000988E E3C0 C170 001B          00009580  13300          SLGF  12,@lit_region_diff_1946_5_4
                                           13301          DROP  12
                        000089F0           13302          USING @REGION_1946_4,12
00009894 47F0 C9E6               000093D6  13303          B     @L1308
                                           13304          DROP  12
                        00009410           13305          USING @REGION_1946_5,12
00009898 A7FE 0001               00000001  13306          CHI   15,1
0000989C 4770 C350               00009760  13307          BNE   @L1327
000098A0                                   13308 @L1306   DS    0H
                                           13309 * ***
                                           13310 * ***                   rko = rd_kafka_op_new_ctrl_msg(
                                           13311 * ***                           rktp, msetr->msetr_tver->version,
                                           13312 * ***                           rkbuf, hdr.Offset);
000098A0 E320 D368 0024          00000368  13313          STG   2,872(0,13)
000098A6 E3F0 6038 0004          00000038  13314          LG    15,56(0,6)  ; offset of msetr_tver in rd_kafka_msgset_re*
                                                                ader_s
000098AC E3F0 F008 0014          00000008  13315          LGF   15,8(0,15)
000098B2 E3F0 D370 0024          00000370  13316          STG   15,880(0,13)
000098B8 E370 D378 0024          00000378  13317          STG   7,888(0,13)
000098BE E3F0 D100 0004          00000100  13318          LG    15,256(0,13)
000098C4 E3F0 D380 0024          00000380  13319          STG   15,896(0,13)
000098CA 4110 D368               00000368  13320          LA    1,872(0,13)
000098CE E3F0 C178 0004          00009588  13321          LG    15,@lit_1946_867 ; rd_kafka_op_new_ctrl_msg
000098D4                                   13322 @@gen_label1171 DS    0H
000098D4 05EF                              13323          BALR  14,15
000098D6                                   13324 @@gen_label1172 DS    0H
                                           13325 * ***                   rd_kafka_q_enq(&msetr->msetr_rkq, rko);
000098D6 4110 6068               00000068  13326          LA    1,104(0,6)
000098DA E310 D368 0024          00000368  13327          STG   1,872(0,13)
000098E0 E3F0 D370 0024          00000370  13328          STG   15,880(0,13)
000098E6 4110 D368               00000368  13329          LA    1,872(0,13)
000098EA E3F0 C180 0004          00009590  13330          LG    15,@lit_1946_868 ; rd_kafka_q_enq
000098F0                                   13331 @@gen_label1173 DS    0H
000098F0 05EF                              13332          BALR  14,15
000098F2                                   13333 @@gen_label1174 DS    0H
                                           13334 * ***                   msetr->msetr_msgcnt++;
                                                                                                                           Page  267 
  Active Usings: @REGION_1946_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000098F2 58F0 6058               00000058  13335          L     15,88(0,6)
000098F6 A7FA 0001               00000001  13336          AHI   15,1
000098FA 50F0 6058               00000058  13337          ST    15,88(0,6)
                                           13338 * ***
                                           13339 * ***                   return RD_KAFKA_RESP_ERR_NO_ERROR;
000098FE A7F9 0000               00000000  13340          LGHI  15,0        ; 0
00009902 E3C0 C188 001A          00009598  13341          ALGF  12,@lit_region_diff_1946_5_7
                                           13342          DROP  12
                        0000A7AA           13343          USING @REGION_1946_7,12
00009908 47F0 C1CC               0000A976  13344          B     @ret_lab_1946
                                           13345          DROP  12
                        00009410           13346          USING @REGION_1946_5,12
                                           13347 * ***           }
                                           13348 * ***
                                           13349 * ***
                                           13350 * ***
                                           13351 * ***
                                           13352 * ***
                                           13353 * ***           do { int64_t _len2; size_t _r = rd_slice_read_varint(&\
                                           13354 * (rkbuf)->rkbuf_reader, &_len2); if ((((_r == 0)))) do { if (log_deco\
                                           13355 * de_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C\
                                           13356 * :\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",889, __FUNCTI\
                                           13357 * ON__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); ch\
                                           13358 * ar __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": " "varint \
                                           13359 * parsing failed"); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; d\
                                           13360 * o { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lo\
                                           13361 * ck); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_log\
                                           13362 * name)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_\
                                           13363 * log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_r\
                                           13364 * k, _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read bu\
                                           13365 * ffer underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "\
                                           13366 * expected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_\
                                           13367 * kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.A\
                                           13368 * piVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_re\
                                           13369 * ader)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 889, (siz\
                                           13370 * e_t)0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rk\
                                           13371 * buf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mit\
                                           13372 * igation : "incorrect broker.version.fallback?", __tmpstr); } while (\
                                           13373 * 0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_pa\
                                           13374 * rse; } while (0); (&hdr.Key)->len = (int32_t)_len2; if (((&hdr.Key)-\
                                           13375 * >len == -1)) { (&hdr.Key)->data = ((void *)0); (&hdr.Key)->len = 0; \
                                           13376 * } else if ((((&hdr.Key)->len) == -1 ? 0:((&hdr.Key)->len)) == 0) (&h\
                                           13377 * dr.Key)->data = ""; else if (!((&hdr.Key)->data = rd_slice_ensure_co\
                                           13378 * ntig(&(rkbuf)->rkbuf_reader, (size_t)_len2))) do { size_t __len0 = (\
                                           13379 * size_t)(_len2); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - rd_s\
                                           13380 * lice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { if (log_decode_er\
                                           13381 * rors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\as\
                                           13382 * gkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",889, __FUNCTION__,\
                                           13383 *  (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __\
                                           13384 * tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); if (__strle\
                                           13385 * n(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[256]; mtx_l\
                                           13386 * ock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logname, rkb\
                                                                                                                           Page  268 
  Active Usings: @REGION_1946_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           13387 * uf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkbuf->r\
                                           13388 * kbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb\
                                           13389 * _rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decode_error\
                                           13390 * s, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "for %s v%hd\
                                           13391 *  " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " bytes > " \
                                           13392 * "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf\
                                           13393 * _reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_offset(&r\
                                           13394 * kbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_r\
                                           13395 * eader)->start), __FUNCTION__, 889, __len0, ((&rkbuf->rkbuf_reader)->\
                                           13396 * end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_uflow\
                                           13397 * _mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect broker.vers\
                                           13398 * ion.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_err = RD_KA\
                                           13399 * FKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } while (0);\
                                           13400 *  } while (0);
0000990C                                   13401 @L1334   DS    0H
0000990C 41F0 7078               00000078  13402          LA    15,120(0,7)
00009910 E3F0 D368 0024          00000368  13403          STG   15,872(0,13)
00009916 41F0 D0D0               000000D0  13404          LA    15,208(0,13)
0000991A E3F0 D370 0024          00000370  13405          STG   15,880(0,13)
00009920 4110 D368               00000368  13406          LA    1,872(0,13)
00009924 E3F0 C190 0004          000095A0  13407          LG    15,@lit_1946_870 ; rd_slice_read_varint
0000992A                                   13408 @@gen_label1175 DS    0H
0000992A 05EF                              13409          BALR  14,15
0000992C                                   13410 @@gen_label1176 DS    0H
0000992C B902 00FF                         13411          LTGR  15,15
00009930 4770 C778               00009B88  13412          BNE   @L1337
00009934                                   13413 @L1338   DS    0H
00009934 1233                              13414          LTR   3,3
00009936 47D0 C768               00009B78  13415          BNH   @L1341
0000993A                                   13416 @L1342   DS    0H
0000993A E3F0 7100 0002          00000100  13417          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009940 4770 C576               00009986  13418          BNZ   @L1345
00009944 E3F0 C160 0004          00009570  13419          LG    15,@lit_1946_847
0000994A 4110 F2CE               000002CE  13420          LA    1,718(0,15)
0000994E E310 D368 0024          00000368  13421          STG   1,872(0,13)
00009954 E548 D370 0379          00000370  13422          MVGHI 880(13),889
0000995A E310 C1A0 0004          000095B0  13423          LG    1,@lit_1946_872
00009960 4110 121A               0000021A  13424          LA    1,538(0,1)
00009964 E310 D378 0024          00000378  13425          STG   1,888(0,13)
0000996A D707 D380 D380 00000380 00000380  13426          XC    896(8,13),896(13)
00009970 41F0 F362               00000362  13427          LA    15,866(0,15)
00009974 E3F0 D388 0024          00000388  13428          STG   15,904(0,13)
0000997A 4110 D368               00000368  13429          LA    1,872(0,13)
0000997E E3F0 C198 0004          000095A8  13430          LG    15,@lit_1946_873 ; rd_kafka_crash
00009984                                   13431 @@gen_label1180 DS    0H
00009984 05EF                              13432          BALR  14,15
00009986                                   13433 @@gen_label1181 DS    0H
00009986                                   13434 @L1345   DS    0H
00009986 41F0 D158               00000158  13435          LA    15,344(0,13)
0000998A E3F0 D368 0024          00000368  13436          STG   15,872(0,13)
00009990 E548 D370 0100          00000370  13437          MVGHI 880(13),256
00009996 E3F0 C160 0004          00009570  13438          LG    15,@lit_1946_847
                                                                                                                           Page  269 
  Active Usings: @REGION_1946_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000999C 41F0 F52A               0000052A  13439          LA    15,1322(0,15)
000099A0 E3F0 D378 0024          00000378  13440          STG   15,888(0,13)
000099A6 4110 D368               00000368  13441          LA    1,872(0,13)
000099AA E3F0 C1A8 0004          000095B8  13442          LG    15,@lit_1946_875 ; snprintf
000099B0                                   13443 @@gen_label1182 DS    0H
000099B0 05EF                              13444          BALR  14,15
000099B2                                   13445 @@gen_label1183 DS    0H
000099B2 41F0 D158               00000158  13446          LA    15,344(0,13)
000099B6 B904 001F                         13447          LGR   1,15
000099BA A709 0000               00000000  13448          LGHI  0,0
000099BE                                   13449 @@gen_label1184 DS 0H
000099BE B25E 000F                         13450          SRST  0,15
000099C2 4710 C5AE               000099BE  13451          BC  1,@@gen_label1184
000099C6 B90B 0001                         13452          SLGR  0,1
000099CA A70F 0002               00000002  13453          CGHI  0,2
000099CE 4770 C5C6               000099D6  13454          BNE   @L1347
000099D2 9200 D158      00000158 00000000  13455          MVI   344(13),0
000099D6                                   13456 @L1346   DS    0H
000099D6                                   13457 @L1347   DS    0H
000099D6 E3F0 7100 0004          00000100  13458          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
000099DC A729 1638               00001638  13459          LGHI  2,5688      ; 5688
000099E0 41F2 F000               00000000  13460          LA    15,0(2,15)
000099E4 E3F0 D368 0024          00000368  13461          STG   15,872(0,13)
000099EA 4110 D368               00000368  13462          LA    1,872(0,13)
000099EE E3F0 C140 0004          00009550  13463          LG    15,@lit_1946_841 ; mtx_lock
000099F4                                   13464 @@gen_label1186 DS    0H
000099F4 05EF                              13465          BALR  14,15
000099F6                                   13466 @@gen_label1187 DS    0H
000099F6 41F0 D258               00000258  13467          LA    15,600(0,13)
000099FA E3F0 D368 0024          00000368  13468          STG   15,872(0,13)
00009A00 E3F0 7100 0004          00000100  13469          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009A06 A719 1630               00001630  13470          LGHI  1,5680      ; 5680
00009A0A E3F1 F000 0004          00000000  13471          LG    15,0(1,15)
00009A10 E3F0 D370 0024          00000370  13472          STG   15,880(0,13)
00009A16 E548 D378 0100          00000378  13473          MVGHI 888(13),256
00009A1C 4110 D368               00000368  13474          LA    1,872(0,13)
00009A20 E3F0 C148 0004          00009558  13475          LG    15,@lit_1946_843 ; rd_strlcpy
00009A26                                   13476 @@gen_label1188 DS    0H
00009A26 05EF                              13477          BALR  14,15
00009A28                                   13478 @@gen_label1189 DS    0H
00009A28 E3F0 7100 0004          00000100  13479          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009A2E 41F2 F000               00000000  13480          LA    15,0(2,15)
00009A32 E3F0 D368 0024          00000368  13481          STG   15,872(0,13)
00009A38 4110 D368               00000368  13482          LA    1,872(0,13)
00009A3C E3F0 C150 0004          00009560  13483          LG    15,@lit_1946_845 ; mtx_unlock
00009A42                                   13484 @@gen_label1190 DS    0H
00009A42 05EF                              13485          BALR  14,15
00009A44                                   13486 @@gen_label1191 DS    0H
00009A44 E3F0 70B8 0015          000000B8  13487          LGH   15,184(0,7)
00009A4A E3F0 D368 0024          00000368  13488          STG   15,872(0,13)
00009A50 4110 D368               00000368  13489          LA    1,872(0,13)
00009A54 E3F0 C1B0 0004          000095C0  13490          LG    15,@lit_1946_882 ; rd_kafka_ApiKey2str
                                                                                                                           Page  270 
  Active Usings: @REGION_1946_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009A5A                                   13491 @@gen_label1192 DS    0H
00009A5A 05EF                              13492          BALR  14,15
00009A5C                                   13493 @@gen_label1193 DS    0H
00009A5C B904 002F                         13494          LGR   2,15
00009A60 41F0 7078               00000078  13495          LA    15,120(0,7)
00009A64 E3F0 D368 0024          00000368  13496          STG   15,872(0,13)
00009A6A 4110 D368               00000368  13497          LA    1,872(0,13)
00009A6E E3F0 C1B8 0004          000095C8  13498          LG    15,@lit_1946_883 ; rd_slice_offset
00009A74                                   13499 @@gen_label1194 DS    0H
00009A74 05EF                              13500          BALR  14,15
00009A76                                   13501 @@gen_label1195 DS    0H
00009A76 B904 004F                         13502          LGR   4,15
00009A7A E350 7098 0004          00000098  13503          LG    5,152(0,7)  ; offset of end in rd_slice_s
00009A80 41F0 7078               00000078  13504          LA    15,120(0,7)
00009A84 E3F0 D368 0024          00000368  13505          STG   15,872(0,13)
00009A8A 4110 D368               00000368  13506          LA    1,872(0,13)
00009A8E E3F0 C1C0 0004          000095D0  13507          LG    15,@lit_1946_884 ; rd_slice_abs_offset
00009A94                                   13508 @@gen_label1196 DS    0H
00009A94 05EF                              13509          BALR  14,15
00009A96                                   13510 @@gen_label1197 DS    0H
00009A96 B90B 005F                         13511          SLGR  5,15
00009A9A E3F0 71E8 0002          000001E8  13512          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00009AA0 4780 C69E               00009AAE  13513          BZ    @L1350
00009AA4 E3F0 71E8 0004          000001E8  13514          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00009AAA 47F0 C6A8               00009AB8  13515          B     @L1351
00009AAE                                   13516 @L1350   DS    0H
00009AAE E3F0 C160 0004          00009570  13517          LG    15,@lit_1946_847
00009AB4 41F0 F380               00000380  13518          LA    15,896(0,15)
00009AB8                                   13519 @L1351   DS    0H
00009AB8 E310 7100 0004          00000100  13520          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00009ABE E310 1FD0 0004          00000FD0  13521          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00009AC4 4110 1210               00000210  13522          LA    1,528(0,1)
00009AC8 E310 D368 0024          00000368  13523          STG   1,872(0,13)
00009ACE E310 7100 0004          00000100  13524          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00009AD4 E310 1FD0 0004          00000FD0  13525          LG    1,4048(0,1)
00009ADA E310 D370 0024          00000370  13526          STG   1,880(0,13)
00009AE0 4110 D258               00000258  13527          LA    1,600(0,13)
00009AE4 E310 D378 0024          00000378  13528          STG   1,888(0,13)
00009AEA B914 0013                         13529          LGFR  1,3
00009AEE E310 D380 0024          00000380  13530          STG   1,896(0,13)
00009AF4 D707 D388 D388 00000388 00000388  13531          XC    904(8,13),904(13)
00009AFA E310 C160 0004          00009570  13532          LG    1,@lit_1946_847
00009B00 4130 13A4               000003A4  13533          LA    3,932(0,1)
00009B04 E330 D390 0024          00000390  13534          STG   3,912(0,13)
00009B0A 4110 13B0               000003B0  13535          LA    1,944(0,1)
00009B0E EB12 D398 0024          00000398  13536          STMG  1,2,920(13)
00009B14 4810 70BA               000000BA  13537          LH    1,186(0,7)
00009B18 B914 0011                         13538          LGFR  1,1
00009B1C E310 D3A8 0024          000003A8  13539          STG   1,936(0,13)
00009B22 E340 D3B0 0024          000003B0  13540          STG   4,944(0,13)
                                                                                                                           Page  271 
  Active Usings: @REGION_1946_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009B28 E310 7098 0004          00000098  13541          LG    1,152(0,7)  ; offset of end in rd_slice_s
00009B2E E310 7090 000B          00000090  13542          SLG   1,144(0,7)
00009B34 E310 D3B8 0024          000003B8  13543          STG   1,952(0,13)
00009B3A E310 C1A0 0004          000095B0  13544          LG    1,@lit_1946_872
00009B40 4110 121A               0000021A  13545          LA    1,538(0,1)
00009B44 E310 D3C0 0024          000003C0  13546          STG   1,960(0,13)
00009B4A E548 D3C8 0379          000003C8  13547          MVGHI 968(13),889
00009B50 D707 D3D0 D3D0 000003D0 000003D0  13548          XC    976(8,13),976(13)
00009B56 E350 D3D8 0024          000003D8  13549          STG   5,984(0,13)
00009B5C E3F0 D3E0 0024          000003E0  13550          STG   15,992(0,13)
00009B62 41F0 D158               00000158  13551          LA    15,344(0,13)
00009B66 E3F0 D3E8 0024          000003E8  13552          STG   15,1000(0,13)
00009B6C 4110 D368               00000368  13553          LA    1,872(0,13)
00009B70 E3F0 C158 0004          00009568  13554          LG    15,@lit_1946_848 ; rd_kafka_log0
00009B76                                   13555 @@gen_label1199 DS    0H
00009B76 05EF                              13556          BALR  14,15
00009B78                                   13557 @@gen_label1200 DS    0H
00009B78                                   13558 @L1341   DS    0H
00009B78 E54C 7188 FF65          00000188  13559          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
00009B7E E3C0 C188 001A          00009598  13560          ALGF  12,@lit_region_diff_1946_5_7
                                           13561          DROP  12
                        0000A7AA           13562          USING @REGION_1946_7,12
00009B84 47F0 C1A4               0000A94E  13563          B     @_err_parse@1946@2
                                           13564          DROP  12
                        00009410           13565          USING @REGION_1946_5,12
00009B88                                   13566 @L1337   DS    0H
00009B88 E3F0 D0D0 0004          000000D0  13567          LG    15,208(0,13) ; _len2
00009B8E 50F0 D108               00000108  13568          ST    15,264(0,13) ; offset of Key in 0000157
00009B92 E55C D108 FFFF          00000108  13569          CHSI  264(13),-1
00009B98 4770 C7A6               00009BB6  13570          BNE   @L1352
00009B9C A7F9 0000               00000000  13571          LGHI  15,0        ; 0
00009BA0 E3F0 D110 0024          00000110  13572          STG   15,272(0,13) ; offset of data in rd_kafkap_bytes_s
00009BA6 E54C D108 0000          00000108  13573          MVHI  264(13),0   ; offset of Key in 0000157
00009BAC E3C0 C1C8 001A          000095D8  13574          ALGF  12,@lit_region_diff_1946_5_6
                                           13575          DROP  12
                        00009DF8           13576          USING @REGION_1946_6,12
00009BB2 47F0 C140               00009F38  13577          B     @L1353
                                           13578          DROP  12
                        00009410           13579          USING @REGION_1946_5,12
00009BB6                                   13580 @L1352   DS    0H
00009BB6 E55C D108 FFFF          00000108  13581          CHSI  264(13),-1
00009BBC 4770 C7B8               00009BC8  13582          BNE   @L1354
00009BC0 A7F8 0000               00000000  13583          LHI   15,0        ; 0
00009BC4 47F0 C7BC               00009BCC  13584          B     @L1355
00009BC8                                   13585 @L1354   DS    0H
00009BC8 58F0 D108               00000108  13586          L     15,264(0,13) ; offset of Key in 0000157
00009BCC                                   13587 @L1355   DS    0H
00009BCC 12FF                              13588          LTR   15,15
00009BCE 4770 C7DC               00009BEC  13589          BNE   @L1356
00009BD2 E3F0 C160 0004          00009570  13590          LG    15,@lit_1946_847
00009BD8 41F0 F0A8               000000A8  13591          LA    15,168(0,15)
00009BDC E3F0 D110 0024          00000110  13592          STG   15,272(0,13) ; offset of data in rd_kafkap_bytes_s
                                                                                                                           Page  272 
  Active Usings: @REGION_1946_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009BE2 E3C0 C1C8 001A          000095D8  13593          ALGF  12,@lit_region_diff_1946_5_6
                                           13594          DROP  12
                        00009DF8           13595          USING @REGION_1946_6,12
00009BE8 47F0 C140               00009F38  13596          B     @L1353
                                           13597          DROP  12
                        00009410           13598          USING @REGION_1946_5,12
00009BEC                                   13599 @L1356   DS    0H
00009BEC 41F0 7078               00000078  13600          LA    15,120(0,7)
00009BF0 E3F0 D368 0024          00000368  13601          STG   15,872(0,13)
00009BF6 E3F0 D0D0 0004          000000D0  13602          LG    15,208(0,13) ; _len2
00009BFC E3F0 D370 0024          00000370  13603          STG   15,880(0,13)
00009C02 4110 D368               00000368  13604          LA    1,872(0,13)
00009C06 E3F0 C1D0 0004          000095E0  13605          LG    15,@lit_1946_892 ; rd_slice_ensure_contig
00009C0C                                   13606 @@gen_label1204 DS    0H
00009C0C 05EF                              13607          BALR  14,15
00009C0E                                   13608 @@gen_label1205 DS    0H
00009C0E E3F0 D110 0024          00000110  13609          STG   15,272(0,13)
00009C14 B902 00FF                         13610          LTGR  15,15
00009C18 4780 C816               00009C26  13611          BZ    *+14  Around region break
00009C1C E3C0 C1C8 001A          000095D8  13612          ALGF  12,@lit_region_diff_1946_5_6
                                           13613          DROP  12
                        00009DF8           13614          USING @REGION_1946_6,12
00009C22 47F0 C140               00009F38  13615          B     @L1353
                                           13616          DROP  12
                        00009410           13617          USING @REGION_1946_5,12
00009C26                                   13618 @L1359   DS    0H
00009C26 E350 D0D0 0004          000000D0  13619          LG    5,208(0,13) ; _len2
00009C2C E380 7098 0004          00000098  13620          LG    8,152(0,7)  ; offset of end in rd_slice_s
00009C32 41F0 7078               00000078  13621          LA    15,120(0,7)
00009C36 E3F0 D368 0024          00000368  13622          STG   15,872(0,13)
00009C3C 4110 D368               00000368  13623          LA    1,872(0,13)
00009C40 E3F0 C1C0 0004          000095D0  13624          LG    15,@lit_1946_884 ; rd_slice_abs_offset
00009C46                                   13625 @@gen_label1207 DS    0H
00009C46 05EF                              13626          BALR  14,15
00009C48                                   13627 @@gen_label1208 DS    0H
00009C48 B90B 008F                         13628          SLGR  8,15
00009C4C B921 0058                         13629          CLGR  5,8
00009C50 4720 C84E               00009C5E  13630          BH    *+14  Around region break
00009C54 E3C0 C1C8 001A          000095D8  13631          ALGF  12,@lit_region_diff_1946_5_6
                                           13632          DROP  12
                        00009DF8           13633          USING @REGION_1946_6,12
00009C5A 47F0 C140               00009F38  13634          B     @L1362
                                           13635          DROP  12
                        00009410           13636          USING @REGION_1946_5,12
00009C5E                                   13637 @L1363   DS    0H
00009C5E 1233                              13638          LTR   3,3
00009C60 4720 C85E               00009C6E  13639          BH    *+14  Around region break
00009C64 E3C0 C1C8 001A          000095D8  13640          ALGF  12,@lit_region_diff_1946_5_6
                                           13641          DROP  12
                        00009DF8           13642          USING @REGION_1946_6,12
00009C6A 47F0 C0C0               00009EB8  13643          B     @L1366
                                           13644          DROP  12
                                                                                                                           Page  273 
  Active Usings: @REGION_1946_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00009410           13645          USING @REGION_1946_5,12
00009C6E                                   13646 @L1367   DS    0H
00009C6E E3F0 7100 0002          00000100  13647          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009C74 4770 C8AA               00009CBA  13648          BNZ   @L1370
00009C78 E3F0 C160 0004          00009570  13649          LG    15,@lit_1946_847
00009C7E 4110 F2CE               000002CE  13650          LA    1,718(0,15)
00009C82 E310 D368 0024          00000368  13651          STG   1,872(0,13)
00009C88 E548 D370 0379          00000370  13652          MVGHI 880(13),889
00009C8E E310 C1A0 0004          000095B0  13653          LG    1,@lit_1946_872
00009C94 4110 121A               0000021A  13654          LA    1,538(0,1)
00009C98 E310 D378 0024          00000378  13655          STG   1,888(0,13)
00009C9E D707 D380 D380 00000380 00000380  13656          XC    896(8,13),896(13)
00009CA4 41F0 F362               00000362  13657          LA    15,866(0,15)
00009CA8 E3F0 D388 0024          00000388  13658          STG   15,904(0,13)
00009CAE 4110 D368               00000368  13659          LA    1,872(0,13)
00009CB2 E3F0 C198 0004          000095A8  13660          LG    15,@lit_1946_873 ; rd_kafka_crash
00009CB8                                   13661 @@gen_label1212 DS    0H
00009CB8 05EF                              13662          BALR  14,15
00009CBA                                   13663 @@gen_label1213 DS    0H
00009CBA                                   13664 @L1370   DS    0H
00009CBA 41F0 D158               00000158  13665          LA    15,344(0,13)
00009CBE E3F0 D368 0024          00000368  13666          STG   15,872(0,13)
00009CC4 E548 D370 0100          00000370  13667          MVGHI 880(13),256
00009CCA E3F0 C160 0004          00009570  13668          LG    15,@lit_1946_847
00009CD0 41F0 F37C               0000037C  13669          LA    15,892(0,15)
00009CD4 E3F0 D378 0024          00000378  13670          STG   15,888(0,13)
00009CDA 4110 D368               00000368  13671          LA    1,872(0,13)
00009CDE E3F0 C1A8 0004          000095B8  13672          LG    15,@lit_1946_875 ; snprintf
00009CE4                                   13673 @@gen_label1214 DS    0H
00009CE4 05EF                              13674          BALR  14,15
00009CE6                                   13675 @@gen_label1215 DS    0H
00009CE6 41F0 D158               00000158  13676          LA    15,344(0,13)
00009CEA B904 001F                         13677          LGR   1,15
00009CEE A709 0000               00000000  13678          LGHI  0,0
00009CF2                                   13679 @@gen_label1216 DS 0H
00009CF2 B25E 000F                         13680          SRST  0,15
00009CF6 4710 C8E2               00009CF2  13681          BC  1,@@gen_label1216
00009CFA B90B 0001                         13682          SLGR  0,1
00009CFE A70F 0002               00000002  13683          CGHI  0,2
00009D02 4770 C8FA               00009D0A  13684          BNE   @L1372
00009D06 9200 D158      00000158 00000000  13685          MVI   344(13),0
00009D0A                                   13686 @L1371   DS    0H
00009D0A                                   13687 @L1372   DS    0H
00009D0A E3F0 7100 0004          00000100  13688          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009D10 A729 1638               00001638  13689          LGHI  2,5688      ; 5688
00009D14 41F2 F000               00000000  13690          LA    15,0(2,15)
00009D18 E3F0 D368 0024          00000368  13691          STG   15,872(0,13)
00009D1E 4110 D368               00000368  13692          LA    1,872(0,13)
00009D22 E3F0 C140 0004          00009550  13693          LG    15,@lit_1946_841 ; mtx_lock
00009D28                                   13694 @@gen_label1218 DS    0H
00009D28 05EF                              13695          BALR  14,15
00009D2A                                   13696 @@gen_label1219 DS    0H
                                                                                                                           Page  274 
  Active Usings: @REGION_1946_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009D2A 41F0 D258               00000258  13697          LA    15,600(0,13)
00009D2E E3F0 D368 0024          00000368  13698          STG   15,872(0,13)
00009D34 E3F0 7100 0004          00000100  13699          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009D3A A719 1630               00001630  13700          LGHI  1,5680      ; 5680
00009D3E E3F1 F000 0004          00000000  13701          LG    15,0(1,15)
00009D44 E3F0 D370 0024          00000370  13702          STG   15,880(0,13)
00009D4A E548 D378 0100          00000378  13703          MVGHI 888(13),256
00009D50 4110 D368               00000368  13704          LA    1,872(0,13)
00009D54 E3F0 C148 0004          00009558  13705          LG    15,@lit_1946_843 ; rd_strlcpy
00009D5A                                   13706 @@gen_label1220 DS    0H
00009D5A 05EF                              13707          BALR  14,15
00009D5C                                   13708 @@gen_label1221 DS    0H
00009D5C E3F0 7100 0004          00000100  13709          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009D62 41F2 F000               00000000  13710          LA    15,0(2,15)
00009D66 E3F0 D368 0024          00000368  13711          STG   15,872(0,13)
00009D6C 4110 D368               00000368  13712          LA    1,872(0,13)
00009D70 E3F0 C150 0004          00009560  13713          LG    15,@lit_1946_845 ; mtx_unlock
00009D76                                   13714 @@gen_label1222 DS    0H
00009D76 05EF                              13715          BALR  14,15
00009D78                                   13716 @@gen_label1223 DS    0H
00009D78 E3F0 70B8 0015          000000B8  13717          LGH   15,184(0,7)
00009D7E E3F0 D368 0024          00000368  13718          STG   15,872(0,13)
00009D84 4110 D368               00000368  13719          LA    1,872(0,13)
00009D88 E3F0 C1B0 0004          000095C0  13720          LG    15,@lit_1946_882 ; rd_kafka_ApiKey2str
00009D8E                                   13721 @@gen_label1224 DS    0H
00009D8E 05EF                              13722          BALR  14,15
00009D90                                   13723 @@gen_label1225 DS    0H
00009D90 B904 002F                         13724          LGR   2,15
00009D94 41F0 7078               00000078  13725          LA    15,120(0,7)
00009D98 E3F0 D368 0024          00000368  13726          STG   15,872(0,13)
00009D9E 4110 D368               00000368  13727          LA    1,872(0,13)
00009DA2 E3F0 C1B8 0004          000095C8  13728          LG    15,@lit_1946_883 ; rd_slice_offset
00009DA8                                   13729 @@gen_label1226 DS    0H
00009DA8 05EF                              13730          BALR  14,15
00009DAA                                   13731 @@gen_label1227 DS    0H
00009DAA B904 004F                         13732          LGR   4,15
00009DAE E380 7098 0004          00000098  13733          LG    8,152(0,7)  ; offset of end in rd_slice_s
00009DB4 41F0 7078               00000078  13734          LA    15,120(0,7)
00009DB8 E3F0 D368 0024          00000368  13735          STG   15,872(0,13)
00009DBE 4110 D368               00000368  13736          LA    1,872(0,13)
00009DC2 E3F0 C1C0 0004          000095D0  13737          LG    15,@lit_1946_884 ; rd_slice_abs_offset
00009DC8                                   13738 @@gen_label1228 DS    0H
00009DC8 05EF                              13739          BALR  14,15
00009DCA                                   13740 @@gen_label1229 DS    0H
00009DCA B90B 008F                         13741          SLGR  8,15
00009DCE E3F0 71E8 0002          000001E8  13742          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00009DD4 4780 C9D8               00009DE8  13743          BZ    @L1375
00009DD8 E3F0 71E8 0004          000001E8  13744          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
00009DDE E3C0 C1C8 001A          000095D8  13745          ALGF  12,@lit_region_diff_1946_5_6
                                           13746          DROP  12
                                                                                                                           Page  275 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00009DF8           13747          USING @REGION_1946_6,12
00009DE4 47F0 C000               00009DF8  13748          B     @L1376
                                           13749          DROP  12
                        00009410           13750          USING @REGION_1946_5,12
00009DE8                                   13751 @L1375   DS    0H
00009DE8 E3F0 C160 0004          00009570  13752          LG    15,@lit_1946_847
00009DEE 41F0 F380               00000380  13753          LA    15,896(0,15)
00009DF2 E3C0 C1C8 001A          000095D8  13754          ALGF  12,@lit_region_diff_1946_5_6
00009DF8                                   13755 @REGION_1946_6 DS 0H
                                           13756          DROP  12
                        00009DF8           13757          USING @REGION_1946_6,12
00009DF8                                   13758 @L1376   DS    0H
00009DF8 E310 7100 0004          00000100  13759          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00009DFE E310 1FD0 0004          00000FD0  13760          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
00009E04 4110 1210               00000210  13761          LA    1,528(0,1)
00009E08 E310 D368 0024          00000368  13762          STG   1,872(0,13)
00009E0E E310 7100 0004          00000100  13763          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
00009E14 E310 1FD0 0004          00000FD0  13764          LG    1,4048(0,1)
00009E1A E310 D370 0024          00000370  13765          STG   1,880(0,13)
00009E20 4110 D258               00000258  13766          LA    1,600(0,13)
00009E24 E310 D378 0024          00000378  13767          STG   1,888(0,13)
00009E2A B914 0013                         13768          LGFR  1,3
00009E2E E310 D380 0024          00000380  13769          STG   1,896(0,13)
00009E34 D707 D388 D388 00000388 00000388  13770          XC    904(8,13),904(13)
00009E3A E310 C0E0 0004          00009ED8  13771          LG    1,@lit_1946_909
00009E40 4130 13A4               000003A4  13772          LA    3,932(0,1)
00009E44 E330 D390 0024          00000390  13773          STG   3,912(0,13)
00009E4A 4110 13B0               000003B0  13774          LA    1,944(0,1)
00009E4E EB12 D398 0024          00000398  13775          STMG  1,2,920(13)
00009E54 4810 70BA               000000BA  13776          LH    1,186(0,7)
00009E58 B914 0011                         13777          LGFR  1,1
00009E5C E310 D3A8 0024          000003A8  13778          STG   1,936(0,13)
00009E62 E340 D3B0 0024          000003B0  13779          STG   4,944(0,13)
00009E68 E310 7098 0004          00000098  13780          LG    1,152(0,7)  ; offset of end in rd_slice_s
00009E6E E310 7090 000B          00000090  13781          SLG   1,144(0,7)
00009E74 E310 D3B8 0024          000003B8  13782          STG   1,952(0,13)
00009E7A E310 C0D8 0004          00009ED0  13783          LG    1,@lit_1946_910
00009E80 4110 121A               0000021A  13784          LA    1,538(0,1)
00009E84 E310 D3C0 0024          000003C0  13785          STG   1,960(0,13)
00009E8A E548 D3C8 0379          000003C8  13786          MVGHI 968(13),889
00009E90 E350 D3D0 0024          000003D0  13787          STG   5,976(0,13)
00009E96 E380 D3D8 0024          000003D8  13788          STG   8,984(0,13)
00009E9C E3F0 D3E0 0024          000003E0  13789          STG   15,992(0,13)
00009EA2 41F0 D158               00000158  13790          LA    15,344(0,13)
00009EA6 E3F0 D3E8 0024          000003E8  13791          STG   15,1000(0,13)
00009EAC 4110 D368               00000368  13792          LA    1,872(0,13)
00009EB0 E3F0 C0D0 0004          00009EC8  13793          LG    15,@lit_1946_911 ; rd_kafka_log0
00009EB6                                   13794 @@gen_label1231 DS    0H
00009EB6 05EF                              13795          BALR  14,15
00009EB8                                   13796 @@gen_label1232 DS    0H
00009EB8                                   13797 @L1366   DS    0H
00009EB8 E54C 7188 FF65          00000188  13798          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
                                                                                                                           Page  276 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009EBE E3C0 C0E8 001A          00009EE0  13799          ALGF  12,@lit_region_diff_1946_6_7
                                           13800          DROP  12
                        0000A7AA           13801          USING @REGION_1946_7,12
00009EC4 47F0 C1A4               0000A94E  13802          B     @_err_parse@1946@2
                                           13803          DROP  12
                        00009DF8           13804          USING @REGION_1946_6,12
00009EC8                                   13805          DS    0D
00009EC8 0000000000000000                  13806 @lit_1946_911 DC AD(rd_kafka_log0)
00009ED0 0000000000012808                  13807 @lit_1946_910 DC AD(@DATA)
00009ED8 0000000000012AB8                  13808 @lit_1946_909 DC AD(@strings@)
00009EE0 000009B2                          13809 @lit_region_diff_1946_6_7  DC A(@REGION_1946_7-@REGION_1946_6)
00009EE4 00000000
00009EE8 0000000000001378                  13810 @lit_1946_912 DC AD(rd_slice_read_varint)
00009EF0 0000000000000000                  13811 @lit_1946_915 DC AD(rd_kafka_crash)
00009EF8 0000000000000000                  13812 @lit_1946_917 DC AD(snprintf)
00009F00 0000000000000000                  13813 @lit_1946_919 DC AD(mtx_lock)
00009F08 0000000000001668                  13814 @lit_1946_921 DC AD(rd_strlcpy)
00009F10 0000000000000000                  13815 @lit_1946_923 DC AD(mtx_unlock)
00009F18 00000000000014D0                  13816 @lit_1946_924 DC AD(rd_kafka_$Api$Key2str)
00009F20 00000000000012B8                  13817 @lit_1946_925 DC AD(rd_slice_offset)
00009F28 0000000000001210                  13818 @lit_1946_926 DC AD(rd_slice_abs_offset)
00009F30 0000000000000000                  13819 @lit_1946_934 DC AD(rd_slice_ensure_contig)
00009F38                                   13820 @L1362   DS    0H
00009F38                                   13821 @L1358   DS    0H
00009F38                                   13822 @L1357   DS    0H
00009F38                                   13823 @L1353   DS    0H
                                           13824 * ***           do { int64_t _len2; size_t _r = rd_slice_read_varint(&\
                                           13825 * (rkbuf)->rkbuf_reader, &_len2); if ((((_r == 0)))) do { if (log_deco\
                                           13826 * de_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C\
                                           13827 * :\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",890, __FUNCTI\
                                           13828 * ON__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); ch\
                                           13829 * ar __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": " "varint \
                                           13830 * parsing failed"); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; d\
                                           13831 * o { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lo\
                                           13832 * ck); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_log\
                                           13833 * name)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_\
                                           13834 * log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_r\
                                           13835 * k, _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read bu\
                                           13836 * ffer underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "\
                                           13837 * expected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_\
                                           13838 * kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.A\
                                           13839 * piVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_re\
                                           13840 * ader)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 890, (siz\
                                           13841 * e_t)0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rk\
                                           13842 * buf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mit\
                                           13843 * igation : "incorrect broker.version.fallback?", __tmpstr); } while (\
                                           13844 * 0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_pa\
                                           13845 * rse; } while (0); (&hdr.Value)->len = (int32_t)_len2; if (((&hdr.Val\
                                           13846 * ue)->len == -1)) { (&hdr.Value)->data = ((void *)0); (&hdr.Value)->l\
                                           13847 * en = 0; } else if ((((&hdr.Value)->len) == -1 ? 0:((&hdr.Value)->len\
                                           13848 * )) == 0) (&hdr.Value)->data = ""; else if (!((&hdr.Value)->data = rd\
                                           13849 * _slice_ensure_contig(&(rkbuf)->rkbuf_reader, (size_t)_len2))) do { s\
                                                                                                                           Page  277 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           13850 * ize_t __len0 = (size_t)(_len2); if (((__len0 > ((&(rkbuf)->rkbuf_rea\
                                           13851 * der)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { i\
                                           13852 * f (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kaf\
                                           13853 * ka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",89\
                                           13854 * 0, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } wh\
                                           13855 * ile (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ":\
                                           13856 *  "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _log\
                                           13857 * name[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlc\
                                           13858 * py(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_u\
                                           13859 * nlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf-\
                                           13860 * >rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, \
                                           13861 * log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflo\
                                           13862 * w " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "\
                                           13863 * zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2\
                                           13864 * str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd\
                                           13865 * _slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - \
                                           13866 * (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 890, __len0, ((&rkbuf-\
                                           13867 * >rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rk\
                                           13868 * buf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incor\
                                           13869 * rect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->r\
                                           13870 * kbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0)\
                                           13871 * ; } } while (0); } while (0);
00009F38                                   13872 @L1377   DS    0H
00009F38 41F0 7078               00000078  13873          LA    15,120(0,7)
00009F3C E3F0 D368 0024          00000368  13874          STG   15,872(0,13)
00009F42 41F0 D0D8               000000D8  13875          LA    15,216(0,13)
00009F46 E3F0 D370 0024          00000370  13876          STG   15,880(0,13)
00009F4C 4110 D368               00000368  13877          LA    1,872(0,13)
00009F50 E3F0 C0F0 0004          00009EE8  13878          LG    15,@lit_1946_912 ; rd_slice_read_varint
00009F56                                   13879 @@gen_label1233 DS    0H
00009F56 05EF                              13880          BALR  14,15
00009F58                                   13881 @@gen_label1234 DS    0H
00009F58 B902 00FF                         13882          LTGR  15,15
00009F5C 4770 C3BC               0000A1B4  13883          BNE   @L1380
00009F60                                   13884 @L1381   DS    0H
00009F60 1233                              13885          LTR   3,3
00009F62 47D0 C3AC               0000A1A4  13886          BNH   @L1384
00009F66                                   13887 @L1385   DS    0H
00009F66 E3F0 7100 0002          00000100  13888          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
00009F6C 4770 C1BA               00009FB2  13889          BNZ   @L1388
00009F70 E3F0 C0E0 0004          00009ED8  13890          LG    15,@lit_1946_909
00009F76 4110 F2CE               000002CE  13891          LA    1,718(0,15)
00009F7A E310 D368 0024          00000368  13892          STG   1,872(0,13)
00009F80 E548 D370 037A          00000370  13893          MVGHI 880(13),890
00009F86 E310 C0D8 0004          00009ED0  13894          LG    1,@lit_1946_910
00009F8C 4110 121A               0000021A  13895          LA    1,538(0,1)
00009F90 E310 D378 0024          00000378  13896          STG   1,888(0,13)
00009F96 D707 D380 D380 00000380 00000380  13897          XC    896(8,13),896(13)
00009F9C 41F0 F362               00000362  13898          LA    15,866(0,15)
00009FA0 E3F0 D388 0024          00000388  13899          STG   15,904(0,13)
00009FA6 4110 D368               00000368  13900          LA    1,872(0,13)
00009FAA E3F0 C0F8 0004          00009EF0  13901          LG    15,@lit_1946_915 ; rd_kafka_crash
                                                                                                                           Page  278 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009FB0                                   13902 @@gen_label1238 DS    0H
00009FB0 05EF                              13903          BALR  14,15
00009FB2                                   13904 @@gen_label1239 DS    0H
00009FB2                                   13905 @L1388   DS    0H
00009FB2 41F0 D158               00000158  13906          LA    15,344(0,13)
00009FB6 E3F0 D368 0024          00000368  13907          STG   15,872(0,13)
00009FBC E548 D370 0100          00000370  13908          MVGHI 880(13),256
00009FC2 E3F0 C0E0 0004          00009ED8  13909          LG    15,@lit_1946_909
00009FC8 41F0 F52A               0000052A  13910          LA    15,1322(0,15)
00009FCC E3F0 D378 0024          00000378  13911          STG   15,888(0,13)
00009FD2 4110 D368               00000368  13912          LA    1,872(0,13)
00009FD6 E3F0 C100 0004          00009EF8  13913          LG    15,@lit_1946_917 ; snprintf
00009FDC                                   13914 @@gen_label1240 DS    0H
00009FDC 05EF                              13915          BALR  14,15
00009FDE                                   13916 @@gen_label1241 DS    0H
00009FDE 41F0 D158               00000158  13917          LA    15,344(0,13)
00009FE2 B904 001F                         13918          LGR   1,15
00009FE6 A709 0000               00000000  13919          LGHI  0,0
00009FEA                                   13920 @@gen_label1242 DS 0H
00009FEA B25E 000F                         13921          SRST  0,15
00009FEE 4710 C1F2               00009FEA  13922          BC  1,@@gen_label1242
00009FF2 B90B 0001                         13923          SLGR  0,1
00009FF6 A70F 0002               00000002  13924          CGHI  0,2
00009FFA 4770 C20A               0000A002  13925          BNE   @L1390
00009FFE 9200 D158      00000158 00000000  13926          MVI   344(13),0
0000A002                                   13927 @L1389   DS    0H
0000A002                                   13928 @L1390   DS    0H
0000A002 E3F0 7100 0004          00000100  13929          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A008 A729 1638               00001638  13930          LGHI  2,5688      ; 5688
0000A00C 41F2 F000               00000000  13931          LA    15,0(2,15)
0000A010 E3F0 D368 0024          00000368  13932          STG   15,872(0,13)
0000A016 4110 D368               00000368  13933          LA    1,872(0,13)
0000A01A E3F0 C108 0004          00009F00  13934          LG    15,@lit_1946_919 ; mtx_lock
0000A020                                   13935 @@gen_label1244 DS    0H
0000A020 05EF                              13936          BALR  14,15
0000A022                                   13937 @@gen_label1245 DS    0H
0000A022 41F0 D258               00000258  13938          LA    15,600(0,13)
0000A026 E3F0 D368 0024          00000368  13939          STG   15,872(0,13)
0000A02C E3F0 7100 0004          00000100  13940          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A032 A719 1630               00001630  13941          LGHI  1,5680      ; 5680
0000A036 E3F1 F000 0004          00000000  13942          LG    15,0(1,15)
0000A03C E3F0 D370 0024          00000370  13943          STG   15,880(0,13)
0000A042 E548 D378 0100          00000378  13944          MVGHI 888(13),256
0000A048 4110 D368               00000368  13945          LA    1,872(0,13)
0000A04C E3F0 C110 0004          00009F08  13946          LG    15,@lit_1946_921 ; rd_strlcpy
0000A052                                   13947 @@gen_label1246 DS    0H
0000A052 05EF                              13948          BALR  14,15
0000A054                                   13949 @@gen_label1247 DS    0H
0000A054 E3F0 7100 0004          00000100  13950          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A05A 41F2 F000               00000000  13951          LA    15,0(2,15)
0000A05E E3F0 D368 0024          00000368  13952          STG   15,872(0,13)
0000A064 4110 D368               00000368  13953          LA    1,872(0,13)
                                                                                                                           Page  279 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A068 E3F0 C118 0004          00009F10  13954          LG    15,@lit_1946_923 ; mtx_unlock
0000A06E                                   13955 @@gen_label1248 DS    0H
0000A06E 05EF                              13956          BALR  14,15
0000A070                                   13957 @@gen_label1249 DS    0H
0000A070 E3F0 70B8 0015          000000B8  13958          LGH   15,184(0,7)
0000A076 E3F0 D368 0024          00000368  13959          STG   15,872(0,13)
0000A07C 4110 D368               00000368  13960          LA    1,872(0,13)
0000A080 E3F0 C120 0004          00009F18  13961          LG    15,@lit_1946_924 ; rd_kafka_ApiKey2str
0000A086                                   13962 @@gen_label1250 DS    0H
0000A086 05EF                              13963          BALR  14,15
0000A088                                   13964 @@gen_label1251 DS    0H
0000A088 B904 002F                         13965          LGR   2,15
0000A08C 41F0 7078               00000078  13966          LA    15,120(0,7)
0000A090 E3F0 D368 0024          00000368  13967          STG   15,872(0,13)
0000A096 4110 D368               00000368  13968          LA    1,872(0,13)
0000A09A E3F0 C128 0004          00009F20  13969          LG    15,@lit_1946_925 ; rd_slice_offset
0000A0A0                                   13970 @@gen_label1252 DS    0H
0000A0A0 05EF                              13971          BALR  14,15
0000A0A2                                   13972 @@gen_label1253 DS    0H
0000A0A2 B904 004F                         13973          LGR   4,15
0000A0A6 E350 7098 0004          00000098  13974          LG    5,152(0,7)  ; offset of end in rd_slice_s
0000A0AC 41F0 7078               00000078  13975          LA    15,120(0,7)
0000A0B0 E3F0 D368 0024          00000368  13976          STG   15,872(0,13)
0000A0B6 4110 D368               00000368  13977          LA    1,872(0,13)
0000A0BA E3F0 C130 0004          00009F28  13978          LG    15,@lit_1946_926 ; rd_slice_abs_offset
0000A0C0                                   13979 @@gen_label1254 DS    0H
0000A0C0 05EF                              13980          BALR  14,15
0000A0C2                                   13981 @@gen_label1255 DS    0H
0000A0C2 B90B 005F                         13982          SLGR  5,15
0000A0C6 E3F0 71E8 0002          000001E8  13983          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000A0CC 4780 C2E2               0000A0DA  13984          BZ    @L1393
0000A0D0 E3F0 71E8 0004          000001E8  13985          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000A0D6 47F0 C2EC               0000A0E4  13986          B     @L1394
0000A0DA                                   13987 @L1393   DS    0H
0000A0DA E3F0 C0E0 0004          00009ED8  13988          LG    15,@lit_1946_909
0000A0E0 41F0 F380               00000380  13989          LA    15,896(0,15)
0000A0E4                                   13990 @L1394   DS    0H
0000A0E4 E310 7100 0004          00000100  13991          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A0EA E310 1FD0 0004          00000FD0  13992          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000A0F0 4110 1210               00000210  13993          LA    1,528(0,1)
0000A0F4 E310 D368 0024          00000368  13994          STG   1,872(0,13)
0000A0FA E310 7100 0004          00000100  13995          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A100 E310 1FD0 0004          00000FD0  13996          LG    1,4048(0,1)
0000A106 E310 D370 0024          00000370  13997          STG   1,880(0,13)
0000A10C 4110 D258               00000258  13998          LA    1,600(0,13)
0000A110 E310 D378 0024          00000378  13999          STG   1,888(0,13)
0000A116 B914 0013                         14000          LGFR  1,3
0000A11A E310 D380 0024          00000380  14001          STG   1,896(0,13)
0000A120 D707 D388 D388 00000388 00000388  14002          XC    904(8,13),904(13)
0000A126 E310 C0E0 0004          00009ED8  14003          LG    1,@lit_1946_909
                                                                                                                           Page  280 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A12C 4130 13A4               000003A4  14004          LA    3,932(0,1)
0000A130 E330 D390 0024          00000390  14005          STG   3,912(0,13)
0000A136 4110 13B0               000003B0  14006          LA    1,944(0,1)
0000A13A EB12 D398 0024          00000398  14007          STMG  1,2,920(13)
0000A140 4810 70BA               000000BA  14008          LH    1,186(0,7)
0000A144 B914 0011                         14009          LGFR  1,1
0000A148 E310 D3A8 0024          000003A8  14010          STG   1,936(0,13)
0000A14E E340 D3B0 0024          000003B0  14011          STG   4,944(0,13)
0000A154 E310 7098 0004          00000098  14012          LG    1,152(0,7)  ; offset of end in rd_slice_s
0000A15A E310 7090 000B          00000090  14013          SLG   1,144(0,7)
0000A160 E310 D3B8 0024          000003B8  14014          STG   1,952(0,13)
0000A166 E310 C0D8 0004          00009ED0  14015          LG    1,@lit_1946_910
0000A16C 4110 121A               0000021A  14016          LA    1,538(0,1)
0000A170 E310 D3C0 0024          000003C0  14017          STG   1,960(0,13)
0000A176 E548 D3C8 037A          000003C8  14018          MVGHI 968(13),890
0000A17C D707 D3D0 D3D0 000003D0 000003D0  14019          XC    976(8,13),976(13)
0000A182 E350 D3D8 0024          000003D8  14020          STG   5,984(0,13)
0000A188 E3F0 D3E0 0024          000003E0  14021          STG   15,992(0,13)
0000A18E 41F0 D158               00000158  14022          LA    15,344(0,13)
0000A192 E3F0 D3E8 0024          000003E8  14023          STG   15,1000(0,13)
0000A198 4110 D368               00000368  14024          LA    1,872(0,13)
0000A19C E3F0 C0D0 0004          00009EC8  14025          LG    15,@lit_1946_911 ; rd_kafka_log0
0000A1A2                                   14026 @@gen_label1257 DS    0H
0000A1A2 05EF                              14027          BALR  14,15
0000A1A4                                   14028 @@gen_label1258 DS    0H
0000A1A4                                   14029 @L1384   DS    0H
0000A1A4 E54C 7188 FF65          00000188  14030          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000A1AA E3C0 C0E8 001A          00009EE0  14031          ALGF  12,@lit_region_diff_1946_6_7
                                           14032          DROP  12
                        0000A7AA           14033          USING @REGION_1946_7,12
0000A1B0 47F0 C1A4               0000A94E  14034          B     @_err_parse@1946@2
                                           14035          DROP  12
                        00009DF8           14036          USING @REGION_1946_6,12
0000A1B4                                   14037 @L1380   DS    0H
0000A1B4 E3F0 D0D8 0004          000000D8  14038          LG    15,216(0,13) ; _len2
0000A1BA 50F0 D120               00000120  14039          ST    15,288(0,13) ; offset of Value in 0000157
0000A1BE E55C D120 FFFF          00000120  14040          CHSI  288(13),-1
0000A1C4 4770 C3E4               0000A1DC  14041          BNE   @L1395
0000A1C8 A7F9 0000               00000000  14042          LGHI  15,0        ; 0
0000A1CC E3F0 D128 0024          00000128  14043          STG   15,296(0,13) ; offset of data in rd_kafkap_bytes_s
0000A1D2 E54C D120 0000          00000120  14044          MVHI  288(13),0   ; offset of Value in 0000157
0000A1D8 47F0 C6C6               0000A4BE  14045          B     @L1396
0000A1DC                                   14046 @L1395   DS    0H
0000A1DC E55C D120 FFFF          00000120  14047          CHSI  288(13),-1
0000A1E2 4770 C3F6               0000A1EE  14048          BNE   @L1397
0000A1E6 A7F8 0000               00000000  14049          LHI   15,0        ; 0
0000A1EA 47F0 C3FA               0000A1F2  14050          B     @L1398
0000A1EE                                   14051 @L1397   DS    0H
0000A1EE 58F0 D120               00000120  14052          L     15,288(0,13) ; offset of Value in 0000157
0000A1F2                                   14053 @L1398   DS    0H
0000A1F2 12FF                              14054          LTR   15,15
0000A1F4 4770 C414               0000A20C  14055          BNE   @L1399
                                                                                                                           Page  281 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A1F8 E3F0 C0E0 0004          00009ED8  14056          LG    15,@lit_1946_909
0000A1FE 41F0 F0A8               000000A8  14057          LA    15,168(0,15)
0000A202 E3F0 D128 0024          00000128  14058          STG   15,296(0,13) ; offset of data in rd_kafkap_bytes_s
0000A208 47F0 C6C6               0000A4BE  14059          B     @L1396
0000A20C                                   14060 @L1399   DS    0H
0000A20C 41F0 7078               00000078  14061          LA    15,120(0,7)
0000A210 E3F0 D368 0024          00000368  14062          STG   15,872(0,13)
0000A216 E3F0 D0D8 0004          000000D8  14063          LG    15,216(0,13) ; _len2
0000A21C E3F0 D370 0024          00000370  14064          STG   15,880(0,13)
0000A222 4110 D368               00000368  14065          LA    1,872(0,13)
0000A226 E3F0 C138 0004          00009F30  14066          LG    15,@lit_1946_934 ; rd_slice_ensure_contig
0000A22C                                   14067 @@gen_label1262 DS    0H
0000A22C 05EF                              14068          BALR  14,15
0000A22E                                   14069 @@gen_label1263 DS    0H
0000A22E E3F0 D128 0024          00000128  14070          STG   15,296(0,13)
0000A234 B902 00FF                         14071          LTGR  15,15
0000A238 4770 C6C6               0000A4BE  14072          BNZ   @L1396
0000A23C                                   14073 @L1402   DS    0H
0000A23C E350 D0D8 0004          000000D8  14074          LG    5,216(0,13) ; _len2
0000A242 E380 7098 0004          00000098  14075          LG    8,152(0,7)  ; offset of end in rd_slice_s
0000A248 41F0 7078               00000078  14076          LA    15,120(0,7)
0000A24C E3F0 D368 0024          00000368  14077          STG   15,872(0,13)
0000A252 4110 D368               00000368  14078          LA    1,872(0,13)
0000A256 E3F0 C130 0004          00009F28  14079          LG    15,@lit_1946_926 ; rd_slice_abs_offset
0000A25C                                   14080 @@gen_label1265 DS    0H
0000A25C 05EF                              14081          BALR  14,15
0000A25E                                   14082 @@gen_label1266 DS    0H
0000A25E B90B 008F                         14083          SLGR  8,15
0000A262 B921 0058                         14084          CLGR  5,8
0000A266 47D0 C6C6               0000A4BE  14085          BNH   @L1405
0000A26A                                   14086 @L1406   DS    0H
0000A26A 1233                              14087          LTR   3,3
0000A26C 47D0 C6B6               0000A4AE  14088          BNH   @L1409
0000A270                                   14089 @L1410   DS    0H
0000A270 E3F0 7100 0002          00000100  14090          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A276 4770 C4C4               0000A2BC  14091          BNZ   @L1413
0000A27A E3F0 C0E0 0004          00009ED8  14092          LG    15,@lit_1946_909
0000A280 4110 F2CE               000002CE  14093          LA    1,718(0,15)
0000A284 E310 D368 0024          00000368  14094          STG   1,872(0,13)
0000A28A E548 D370 037A          00000370  14095          MVGHI 880(13),890
0000A290 E310 C0D8 0004          00009ED0  14096          LG    1,@lit_1946_910
0000A296 4110 121A               0000021A  14097          LA    1,538(0,1)
0000A29A E310 D378 0024          00000378  14098          STG   1,888(0,13)
0000A2A0 D707 D380 D380 00000380 00000380  14099          XC    896(8,13),896(13)
0000A2A6 41F0 F362               00000362  14100          LA    15,866(0,15)
0000A2AA E3F0 D388 0024          00000388  14101          STG   15,904(0,13)
0000A2B0 4110 D368               00000368  14102          LA    1,872(0,13)
0000A2B4 E3F0 C0F8 0004          00009EF0  14103          LG    15,@lit_1946_915 ; rd_kafka_crash
0000A2BA                                   14104 @@gen_label1270 DS    0H
0000A2BA 05EF                              14105          BALR  14,15
0000A2BC                                   14106 @@gen_label1271 DS    0H
0000A2BC                                   14107 @L1413   DS    0H
                                                                                                                           Page  282 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A2BC 41F0 D158               00000158  14108          LA    15,344(0,13)
0000A2C0 E3F0 D368 0024          00000368  14109          STG   15,872(0,13)
0000A2C6 E548 D370 0100          00000370  14110          MVGHI 880(13),256
0000A2CC E3F0 C0E0 0004          00009ED8  14111          LG    15,@lit_1946_909
0000A2D2 41F0 F37C               0000037C  14112          LA    15,892(0,15)
0000A2D6 E3F0 D378 0024          00000378  14113          STG   15,888(0,13)
0000A2DC 4110 D368               00000368  14114          LA    1,872(0,13)
0000A2E0 E3F0 C100 0004          00009EF8  14115          LG    15,@lit_1946_917 ; snprintf
0000A2E6                                   14116 @@gen_label1272 DS    0H
0000A2E6 05EF                              14117          BALR  14,15
0000A2E8                                   14118 @@gen_label1273 DS    0H
0000A2E8 41F0 D158               00000158  14119          LA    15,344(0,13)
0000A2EC B904 001F                         14120          LGR   1,15
0000A2F0 A709 0000               00000000  14121          LGHI  0,0
0000A2F4                                   14122 @@gen_label1274 DS 0H
0000A2F4 B25E 000F                         14123          SRST  0,15
0000A2F8 4710 C4FC               0000A2F4  14124          BC  1,@@gen_label1274
0000A2FC B90B 0001                         14125          SLGR  0,1
0000A300 A70F 0002               00000002  14126          CGHI  0,2
0000A304 4770 C514               0000A30C  14127          BNE   @L1415
0000A308 9200 D158      00000158 00000000  14128          MVI   344(13),0
0000A30C                                   14129 @L1414   DS    0H
0000A30C                                   14130 @L1415   DS    0H
0000A30C E3F0 7100 0004          00000100  14131          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A312 A729 1638               00001638  14132          LGHI  2,5688      ; 5688
0000A316 41F2 F000               00000000  14133          LA    15,0(2,15)
0000A31A E3F0 D368 0024          00000368  14134          STG   15,872(0,13)
0000A320 4110 D368               00000368  14135          LA    1,872(0,13)
0000A324 E3F0 C108 0004          00009F00  14136          LG    15,@lit_1946_919 ; mtx_lock
0000A32A                                   14137 @@gen_label1276 DS    0H
0000A32A 05EF                              14138          BALR  14,15
0000A32C                                   14139 @@gen_label1277 DS    0H
0000A32C 41F0 D258               00000258  14140          LA    15,600(0,13)
0000A330 E3F0 D368 0024          00000368  14141          STG   15,872(0,13)
0000A336 E3F0 7100 0004          00000100  14142          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A33C A719 1630               00001630  14143          LGHI  1,5680      ; 5680
0000A340 E3F1 F000 0004          00000000  14144          LG    15,0(1,15)
0000A346 E3F0 D370 0024          00000370  14145          STG   15,880(0,13)
0000A34C E548 D378 0100          00000378  14146          MVGHI 888(13),256
0000A352 4110 D368               00000368  14147          LA    1,872(0,13)
0000A356 E3F0 C110 0004          00009F08  14148          LG    15,@lit_1946_921 ; rd_strlcpy
0000A35C                                   14149 @@gen_label1278 DS    0H
0000A35C 05EF                              14150          BALR  14,15
0000A35E                                   14151 @@gen_label1279 DS    0H
0000A35E E3F0 7100 0004          00000100  14152          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A364 41F2 F000               00000000  14153          LA    15,0(2,15)
0000A368 E3F0 D368 0024          00000368  14154          STG   15,872(0,13)
0000A36E 4110 D368               00000368  14155          LA    1,872(0,13)
0000A372 E3F0 C118 0004          00009F10  14156          LG    15,@lit_1946_923 ; mtx_unlock
0000A378                                   14157 @@gen_label1280 DS    0H
0000A378 05EF                              14158          BALR  14,15
0000A37A                                   14159 @@gen_label1281 DS    0H
                                                                                                                           Page  283 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A37A E3F0 70B8 0015          000000B8  14160          LGH   15,184(0,7)
0000A380 E3F0 D368 0024          00000368  14161          STG   15,872(0,13)
0000A386 4110 D368               00000368  14162          LA    1,872(0,13)
0000A38A E3F0 C120 0004          00009F18  14163          LG    15,@lit_1946_924 ; rd_kafka_ApiKey2str
0000A390                                   14164 @@gen_label1282 DS    0H
0000A390 05EF                              14165          BALR  14,15
0000A392                                   14166 @@gen_label1283 DS    0H
0000A392 B904 002F                         14167          LGR   2,15
0000A396 41F0 7078               00000078  14168          LA    15,120(0,7)
0000A39A E3F0 D368 0024          00000368  14169          STG   15,872(0,13)
0000A3A0 4110 D368               00000368  14170          LA    1,872(0,13)
0000A3A4 E3F0 C128 0004          00009F20  14171          LG    15,@lit_1946_925 ; rd_slice_offset
0000A3AA                                   14172 @@gen_label1284 DS    0H
0000A3AA 05EF                              14173          BALR  14,15
0000A3AC                                   14174 @@gen_label1285 DS    0H
0000A3AC B904 004F                         14175          LGR   4,15
0000A3B0 E380 7098 0004          00000098  14176          LG    8,152(0,7)  ; offset of end in rd_slice_s
0000A3B6 41F0 7078               00000078  14177          LA    15,120(0,7)
0000A3BA E3F0 D368 0024          00000368  14178          STG   15,872(0,13)
0000A3C0 4110 D368               00000368  14179          LA    1,872(0,13)
0000A3C4 E3F0 C130 0004          00009F28  14180          LG    15,@lit_1946_926 ; rd_slice_abs_offset
0000A3CA                                   14181 @@gen_label1286 DS    0H
0000A3CA 05EF                              14182          BALR  14,15
0000A3CC                                   14183 @@gen_label1287 DS    0H
0000A3CC B90B 008F                         14184          SLGR  8,15
0000A3D0 E3F0 71E8 0002          000001E8  14185          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000A3D6 4780 C5EC               0000A3E4  14186          BZ    @L1418
0000A3DA E3F0 71E8 0004          000001E8  14187          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000A3E0 47F0 C5F6               0000A3EE  14188          B     @L1419
0000A3E4                                   14189 @L1418   DS    0H
0000A3E4 E3F0 C0E0 0004          00009ED8  14190          LG    15,@lit_1946_909
0000A3EA 41F0 F380               00000380  14191          LA    15,896(0,15)
0000A3EE                                   14192 @L1419   DS    0H
0000A3EE E310 7100 0004          00000100  14193          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A3F4 E310 1FD0 0004          00000FD0  14194          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000A3FA 4110 1210               00000210  14195          LA    1,528(0,1)
0000A3FE E310 D368 0024          00000368  14196          STG   1,872(0,13)
0000A404 E310 7100 0004          00000100  14197          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A40A E310 1FD0 0004          00000FD0  14198          LG    1,4048(0,1)
0000A410 E310 D370 0024          00000370  14199          STG   1,880(0,13)
0000A416 4110 D258               00000258  14200          LA    1,600(0,13)
0000A41A E310 D378 0024          00000378  14201          STG   1,888(0,13)
0000A420 B914 0013                         14202          LGFR  1,3
0000A424 E310 D380 0024          00000380  14203          STG   1,896(0,13)
0000A42A D707 D388 D388 00000388 00000388  14204          XC    904(8,13),904(13)
0000A430 E310 C0E0 0004          00009ED8  14205          LG    1,@lit_1946_909
0000A436 4130 13A4               000003A4  14206          LA    3,932(0,1)
0000A43A E330 D390 0024          00000390  14207          STG   3,912(0,13)
0000A440 4110 13B0               000003B0  14208          LA    1,944(0,1)
0000A444 EB12 D398 0024          00000398  14209          STMG  1,2,920(13)
                                                                                                                           Page  284 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A44A 4810 70BA               000000BA  14210          LH    1,186(0,7)
0000A44E B914 0011                         14211          LGFR  1,1
0000A452 E310 D3A8 0024          000003A8  14212          STG   1,936(0,13)
0000A458 E340 D3B0 0024          000003B0  14213          STG   4,944(0,13)
0000A45E E310 7098 0004          00000098  14214          LG    1,152(0,7)  ; offset of end in rd_slice_s
0000A464 E310 7090 000B          00000090  14215          SLG   1,144(0,7)
0000A46A E310 D3B8 0024          000003B8  14216          STG   1,952(0,13)
0000A470 E310 C0D8 0004          00009ED0  14217          LG    1,@lit_1946_910
0000A476 4110 121A               0000021A  14218          LA    1,538(0,1)
0000A47A E310 D3C0 0024          000003C0  14219          STG   1,960(0,13)
0000A480 E548 D3C8 037A          000003C8  14220          MVGHI 968(13),890
0000A486 E350 D3D0 0024          000003D0  14221          STG   5,976(0,13)
0000A48C E380 D3D8 0024          000003D8  14222          STG   8,984(0,13)
0000A492 E3F0 D3E0 0024          000003E0  14223          STG   15,992(0,13)
0000A498 41F0 D158               00000158  14224          LA    15,344(0,13)
0000A49C E3F0 D3E8 0024          000003E8  14225          STG   15,1000(0,13)
0000A4A2 4110 D368               00000368  14226          LA    1,872(0,13)
0000A4A6 E3F0 C0D0 0004          00009EC8  14227          LG    15,@lit_1946_911 ; rd_kafka_log0
0000A4AC                                   14228 @@gen_label1289 DS    0H
0000A4AC 05EF                              14229          BALR  14,15
0000A4AE                                   14230 @@gen_label1290 DS    0H
0000A4AE                                   14231 @L1409   DS    0H
0000A4AE E54C 7188 FF65          00000188  14232          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000A4B4 E3C0 C0E8 001A          00009EE0  14233          ALGF  12,@lit_region_diff_1946_6_7
                                           14234          DROP  12
                        0000A7AA           14235          USING @REGION_1946_7,12
0000A4BA 47F0 C1A4               0000A94E  14236          B     @_err_parse@1946@2
                                           14237          DROP  12
                        00009DF8           14238          USING @REGION_1946_6,12
0000A4BE                                   14239 @L1405   DS    0H
0000A4BE                                   14240 @L1401   DS    0H
0000A4BE                                   14241 @L1400   DS    0H
0000A4BE                                   14242 @L1396   DS    0H
                                           14243 * ***
                                           14244 * ***
                                           14245 * ***
                                           14246 * ***           hdr.Headers.len = (int32_t)(message_end -
                                           14247 * ***                                       rd_slice_offset(&rkbuf->rk\
                                           14248 * buf_reader));
0000A4BE 41F0 7078               00000078  14249          LA    15,120(0,7)
0000A4C2 E3F0 D368 0024          00000368  14250          STG   15,872(0,13)
0000A4C8 4110 D368               00000368  14251          LA    1,872(0,13)
0000A4CC E3F0 C128 0004          00009F20  14252          LG    15,@lit_1946_925 ; rd_slice_offset
0000A4D2                                   14253 @@gen_label1291 DS    0H
0000A4D2 05EF                              14254          BALR  14,15
0000A4D4                                   14255 @@gen_label1292 DS    0H
0000A4D4 B90B 004F                         14256          SLGR  4,15
0000A4D8 5040 D138               00000138  14257          ST    4,312(0,13)
                                           14258 * ***           do { size_t _klen = hdr.Headers.len; if (!(*(&hdr.Head\
                                           14259 * ers.data) = (void *) rd_slice_ensure_contig(&(rkbuf)->rkbuf_reader, \
                                           14260 * _klen))) do { size_t __len0 = (size_t)(_klen); if (((__len0 > ((&(rk\
                                           14261 * buf)->rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reade\
                                                                                                                           Page  285 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           14262 * r))))) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf\
                                           14263 * _rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgs\
                                           14264 * et_reader.c",896, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rk\
                                           14265 * buf_rkb"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeo\
                                           14266 * f(__tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0';\
                                           14267 *  do { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_\
                                           14268 * lock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_l\
                                           14269 * ogname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafk\
                                           14270 * a_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb\
                                           14271 * _rk, _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read \
                                           14272 * buffer underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): "\
                                           14273 *  "expected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", r\
                                           14274 * d_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr\
                                           14275 * .ApiVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_\
                                           14276 * reader)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 896, __\
                                           14277 * len0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkb\
                                           14278 * uf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_miti\
                                           14279 * gation : "incorrect broker.version.fallback?", __tmpstr); } while (0\
                                           14280 * ); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_par\
                                           14281 * se; } while (0); } } while (0); } while (0);
0000A4DC                                   14282 @L1420   DS    0H
0000A4DC E340 D138 0014          00000138  14283          LGF   4,312(0,13)
0000A4E2 41F0 7078               00000078  14284          LA    15,120(0,7)
0000A4E6 E3F0 D368 0024          00000368  14285          STG   15,872(0,13)
0000A4EC E340 D370 0024          00000370  14286          STG   4,880(0,13)
0000A4F2 4110 D368               00000368  14287          LA    1,872(0,13)
0000A4F6 E3F0 C138 0004          00009F30  14288          LG    15,@lit_1946_934 ; rd_slice_ensure_contig
0000A4FC                                   14289 @@gen_label1293 DS    0H
0000A4FC 05EF                              14290          BALR  14,15
0000A4FE                                   14291 @@gen_label1294 DS    0H
0000A4FE E3F0 D140 0024          00000140  14292          STG   15,320(0,13)
0000A504 B902 00FF                         14293          LTGR  15,15
0000A508 4770 C990               0000A788  14294          BNZ   @L1423
0000A50C                                   14295 @L1424   DS    0H
0000A50C E350 7098 0004          00000098  14296          LG    5,152(0,7)  ; offset of end in rd_slice_s
0000A512 41F0 7078               00000078  14297          LA    15,120(0,7)
0000A516 E3F0 D368 0024          00000368  14298          STG   15,872(0,13)
0000A51C 4110 D368               00000368  14299          LA    1,872(0,13)
0000A520 E3F0 C130 0004          00009F28  14300          LG    15,@lit_1946_926 ; rd_slice_abs_offset
0000A526                                   14301 @@gen_label1296 DS    0H
0000A526 05EF                              14302          BALR  14,15
0000A528                                   14303 @@gen_label1297 DS    0H
0000A528 B90B 005F                         14304          SLGR  5,15
0000A52C B921 0045                         14305          CLGR  4,5
0000A530 47D0 C990               0000A788  14306          BNH   @L1427
0000A534                                   14307 @L1428   DS    0H
0000A534 1233                              14308          LTR   3,3
0000A536 47D0 C980               0000A778  14309          BNH   @L1431
0000A53A                                   14310 @L1432   DS    0H
0000A53A E3F0 7100 0002          00000100  14311          LTG   15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A540 4770 C78E               0000A586  14312          BNZ   @L1435
0000A544 E3F0 C0E0 0004          00009ED8  14313          LG    15,@lit_1946_909
                                                                                                                           Page  286 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A54A 4110 F2CE               000002CE  14314          LA    1,718(0,15)
0000A54E E310 D368 0024          00000368  14315          STG   1,872(0,13)
0000A554 E548 D370 0380          00000370  14316          MVGHI 880(13),896
0000A55A E310 C0D8 0004          00009ED0  14317          LG    1,@lit_1946_910
0000A560 4110 121A               0000021A  14318          LA    1,538(0,1)
0000A564 E310 D378 0024          00000378  14319          STG   1,888(0,13)
0000A56A D707 D380 D380 00000380 00000380  14320          XC    896(8,13),896(13)
0000A570 41F0 F362               00000362  14321          LA    15,866(0,15)
0000A574 E3F0 D388 0024          00000388  14322          STG   15,904(0,13)
0000A57A 4110 D368               00000368  14323          LA    1,872(0,13)
0000A57E E3F0 C0F8 0004          00009EF0  14324          LG    15,@lit_1946_915 ; rd_kafka_crash
0000A584                                   14325 @@gen_label1301 DS    0H
0000A584 05EF                              14326          BALR  14,15
0000A586                                   14327 @@gen_label1302 DS    0H
0000A586                                   14328 @L1435   DS    0H
0000A586 41F0 D158               00000158  14329          LA    15,344(0,13)
0000A58A E3F0 D368 0024          00000368  14330          STG   15,872(0,13)
0000A590 E548 D370 0100          00000370  14331          MVGHI 880(13),256
0000A596 E3F0 C0E0 0004          00009ED8  14332          LG    15,@lit_1946_909
0000A59C 41F0 F37C               0000037C  14333          LA    15,892(0,15)
0000A5A0 E3F0 D378 0024          00000378  14334          STG   15,888(0,13)
0000A5A6 4110 D368               00000368  14335          LA    1,872(0,13)
0000A5AA E3F0 C100 0004          00009EF8  14336          LG    15,@lit_1946_917 ; snprintf
0000A5B0                                   14337 @@gen_label1303 DS    0H
0000A5B0 05EF                              14338          BALR  14,15
0000A5B2                                   14339 @@gen_label1304 DS    0H
0000A5B2 41F0 D158               00000158  14340          LA    15,344(0,13)
0000A5B6 B904 001F                         14341          LGR   1,15
0000A5BA A709 0000               00000000  14342          LGHI  0,0
0000A5BE                                   14343 @@gen_label1305 DS 0H
0000A5BE B25E 000F                         14344          SRST  0,15
0000A5C2 4710 C7C6               0000A5BE  14345          BC  1,@@gen_label1305
0000A5C6 B90B 0001                         14346          SLGR  0,1
0000A5CA A70F 0002               00000002  14347          CGHI  0,2
0000A5CE 4770 C7DE               0000A5D6  14348          BNE   @L1437
0000A5D2 9200 D158      00000158 00000000  14349          MVI   344(13),0
0000A5D6                                   14350 @L1436   DS    0H
0000A5D6                                   14351 @L1437   DS    0H
0000A5D6 E3F0 7100 0004          00000100  14352          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A5DC A729 1638               00001638  14353          LGHI  2,5688      ; 5688
0000A5E0 41F2 F000               00000000  14354          LA    15,0(2,15)
0000A5E4 E3F0 D368 0024          00000368  14355          STG   15,872(0,13)
0000A5EA 4110 D368               00000368  14356          LA    1,872(0,13)
0000A5EE E3F0 C108 0004          00009F00  14357          LG    15,@lit_1946_919 ; mtx_lock
0000A5F4                                   14358 @@gen_label1307 DS    0H
0000A5F4 05EF                              14359          BALR  14,15
0000A5F6                                   14360 @@gen_label1308 DS    0H
0000A5F6 41F0 D258               00000258  14361          LA    15,600(0,13)
0000A5FA E3F0 D368 0024          00000368  14362          STG   15,872(0,13)
0000A600 E3F0 7100 0004          00000100  14363          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A606 A719 1630               00001630  14364          LGHI  1,5680      ; 5680
0000A60A E3F1 F000 0004          00000000  14365          LG    15,0(1,15)
                                                                                                                           Page  287 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A610 E3F0 D370 0024          00000370  14366          STG   15,880(0,13)
0000A616 E548 D378 0100          00000378  14367          MVGHI 888(13),256
0000A61C 4110 D368               00000368  14368          LA    1,872(0,13)
0000A620 E3F0 C110 0004          00009F08  14369          LG    15,@lit_1946_921 ; rd_strlcpy
0000A626                                   14370 @@gen_label1309 DS    0H
0000A626 05EF                              14371          BALR  14,15
0000A628                                   14372 @@gen_label1310 DS    0H
0000A628 E3F0 7100 0004          00000100  14373          LG    15,256(0,7) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A62E 41F2 F000               00000000  14374          LA    15,0(2,15)
0000A632 E3F0 D368 0024          00000368  14375          STG   15,872(0,13)
0000A638 4110 D368               00000368  14376          LA    1,872(0,13)
0000A63C E3F0 C118 0004          00009F10  14377          LG    15,@lit_1946_923 ; mtx_unlock
0000A642                                   14378 @@gen_label1311 DS    0H
0000A642 05EF                              14379          BALR  14,15
0000A644                                   14380 @@gen_label1312 DS    0H
0000A644 E3F0 70B8 0015          000000B8  14381          LGH   15,184(0,7)
0000A64A E3F0 D368 0024          00000368  14382          STG   15,872(0,13)
0000A650 4110 D368               00000368  14383          LA    1,872(0,13)
0000A654 E3F0 C120 0004          00009F18  14384          LG    15,@lit_1946_924 ; rd_kafka_ApiKey2str
0000A65A                                   14385 @@gen_label1313 DS    0H
0000A65A 05EF                              14386          BALR  14,15
0000A65C                                   14387 @@gen_label1314 DS    0H
0000A65C B904 002F                         14388          LGR   2,15
0000A660 41F0 7078               00000078  14389          LA    15,120(0,7)
0000A664 E3F0 D368 0024          00000368  14390          STG   15,872(0,13)
0000A66A 4110 D368               00000368  14391          LA    1,872(0,13)
0000A66E E3F0 C128 0004          00009F20  14392          LG    15,@lit_1946_925 ; rd_slice_offset
0000A674                                   14393 @@gen_label1315 DS    0H
0000A674 05EF                              14394          BALR  14,15
0000A676                                   14395 @@gen_label1316 DS    0H
0000A676 B904 005F                         14396          LGR   5,15
0000A67A E380 7098 0004          00000098  14397          LG    8,152(0,7)  ; offset of end in rd_slice_s
0000A680 41F0 7078               00000078  14398          LA    15,120(0,7)
0000A684 E3F0 D368 0024          00000368  14399          STG   15,872(0,13)
0000A68A 4110 D368               00000368  14400          LA    1,872(0,13)
0000A68E E3F0 C130 0004          00009F28  14401          LG    15,@lit_1946_926 ; rd_slice_abs_offset
0000A694                                   14402 @@gen_label1317 DS    0H
0000A694 05EF                              14403          BALR  14,15
0000A696                                   14404 @@gen_label1318 DS    0H
0000A696 B90B 008F                         14405          SLGR  8,15
0000A69A E3F0 71E8 0002          000001E8  14406          LTG   15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000A6A0 4780 C8B6               0000A6AE  14407          BZ    @L1440
0000A6A4 E3F0 71E8 0004          000001E8  14408          LG    15,488(0,7) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000A6AA 47F0 C8C0               0000A6B8  14409          B     @L1441
0000A6AE                                   14410 @L1440   DS    0H
0000A6AE E3F0 C0E0 0004          00009ED8  14411          LG    15,@lit_1946_909
0000A6B4 41F0 F380               00000380  14412          LA    15,896(0,15)
0000A6B8                                   14413 @L1441   DS    0H
0000A6B8 E310 7100 0004          00000100  14414          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A6BE E310 1FD0 0004          00000FD0  14415          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
                                                                                                                           Page  288 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A6C4 4110 1210               00000210  14416          LA    1,528(0,1)
0000A6C8 E310 D368 0024          00000368  14417          STG   1,872(0,13)
0000A6CE E310 7100 0004          00000100  14418          LG    1,256(0,7)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000A6D4 E310 1FD0 0004          00000FD0  14419          LG    1,4048(0,1)
0000A6DA E310 D370 0024          00000370  14420          STG   1,880(0,13)
0000A6E0 4110 D258               00000258  14421          LA    1,600(0,13)
0000A6E4 E310 D378 0024          00000378  14422          STG   1,888(0,13)
0000A6EA B914 0013                         14423          LGFR  1,3
0000A6EE E310 D380 0024          00000380  14424          STG   1,896(0,13)
0000A6F4 D707 D388 D388 00000388 00000388  14425          XC    904(8,13),904(13)
0000A6FA E310 C0E0 0004          00009ED8  14426          LG    1,@lit_1946_909
0000A700 4130 13A4               000003A4  14427          LA    3,932(0,1)
0000A704 E330 D390 0024          00000390  14428          STG   3,912(0,13)
0000A70A 4110 13B0               000003B0  14429          LA    1,944(0,1)
0000A70E EB12 D398 0024          00000398  14430          STMG  1,2,920(13)
0000A714 4810 70BA               000000BA  14431          LH    1,186(0,7)
0000A718 B914 0011                         14432          LGFR  1,1
0000A71C E310 D3A8 0024          000003A8  14433          STG   1,936(0,13)
0000A722 E350 D3B0 0024          000003B0  14434          STG   5,944(0,13)
0000A728 E310 7098 0004          00000098  14435          LG    1,152(0,7)  ; offset of end in rd_slice_s
0000A72E E310 7090 000B          00000090  14436          SLG   1,144(0,7)
0000A734 E310 D3B8 0024          000003B8  14437          STG   1,952(0,13)
0000A73A E310 C0D8 0004          00009ED0  14438          LG    1,@lit_1946_910
0000A740 4110 121A               0000021A  14439          LA    1,538(0,1)
0000A744 E310 D3C0 0024          000003C0  14440          STG   1,960(0,13)
0000A74A E548 D3C8 0380          000003C8  14441          MVGHI 968(13),896
0000A750 E340 D3D0 0024          000003D0  14442          STG   4,976(0,13)
0000A756 E380 D3D8 0024          000003D8  14443          STG   8,984(0,13)
0000A75C E3F0 D3E0 0024          000003E0  14444          STG   15,992(0,13)
0000A762 41F0 D158               00000158  14445          LA    15,344(0,13)
0000A766 E3F0 D3E8 0024          000003E8  14446          STG   15,1000(0,13)
0000A76C 4110 D368               00000368  14447          LA    1,872(0,13)
0000A770 E3F0 C0D0 0004          00009EC8  14448          LG    15,@lit_1946_911 ; rd_kafka_log0
0000A776                                   14449 @@gen_label1320 DS    0H
0000A776 05EF                              14450          BALR  14,15
0000A778                                   14451 @@gen_label1321 DS    0H
0000A778                                   14452 @L1431   DS    0H
0000A778 E54C 7188 FF65          00000188  14453          MVHI  392(7),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000A77E E3C0 C0E8 001A          00009EE0  14454          ALGF  12,@lit_region_diff_1946_6_7
                                           14455          DROP  12
                        0000A7AA           14456          USING @REGION_1946_7,12
0000A784 47F0 C1A4               0000A94E  14457          B     @_err_parse@1946@2
                                           14458          DROP  12
                        00009DF8           14459          USING @REGION_1946_6,12
0000A788                                   14460 @L1427   DS    0H
0000A788                                   14461 @L1423   DS    0H
                                           14462 * ***
                                           14463 * ***
                                           14464 * ***           rko = rd_kafka_op_new_fetch_msg(&rkm,
                                           14465 * ***                                           rktp, msetr->msetr_tve\
                                           14466 * r->version, rkbuf,
                                           14467 * ***                                           hdr.Offset,
                                                                                                                           Page  289 
  Active Usings: @REGION_1946_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           14468 * ***                                           (size_t)(((&hdr.Key)->\
                                           14469 * len) == -1 ? 0:((&hdr.Key)->len)),
                                           14470 * ***                                           ((&hdr.Key)->len == -1\
                                           14471 * ) ?
                                           14472 * ***                                           (size_t)(((&hdr.Value)\
                                           14473 * ->len) == -1 ? 0:((&hdr.Value)->len)),
                                           14474 * ***                                           ((&hdr.Value)->len == \
                                           14475 * -1) ?
0000A788 E55C D108 FFFF          00000108  14476          CHSI  264(13),-1
0000A78E 4770 C9A8               0000A7A0  14477          BNE   @L1442
0000A792 A7F8 0000               00000000  14478          LHI   15,0        ; 0
0000A796 E3C0 C0E8 001A          00009EE0  14479          ALGF  12,@lit_region_diff_1946_6_7
                                           14480          DROP  12
                        0000A7AA           14481          USING @REGION_1946_7,12
0000A79C 47F0 C000               0000A7AA  14482          B     @L1443
                                           14483          DROP  12
                        00009DF8           14484          USING @REGION_1946_6,12
0000A7A0                                   14485 @L1442   DS    0H
0000A7A0 58F0 D108               00000108  14486          L     15,264(0,13) ; offset of Key in 0000157
0000A7A4 E3C0 C0E8 001A          00009EE0  14487          ALGF  12,@lit_region_diff_1946_6_7
0000A7AA                                   14488 @REGION_1946_7 DS 0H
                                           14489          DROP  12
                        0000A7AA           14490          USING @REGION_1946_7,12
0000A7AA                                   14491 @L1443   DS    0H
0000A7AA B914 00FF                         14492          LGFR  15,15
0000A7AE E55C D108 FFFF          00000108  14493          CHSI  264(13),-1
0000A7B4 4770 C02E               0000A7D8  14494          BNE   @L1444
                                           14495 * ***                                           ((void *)0) : hdr.Key.\
                                           14496 * data,
0000A7B8 A719 0000               00000000  14497          LGHI  1,0         ; 0
0000A7BC 47F0 C034               0000A7DE  14498          B     @L1445
0000A7C0                                   14499          DS    0D
0000A7C0 0000000000000000                  14500 @lit_1946_979 DC AD(rd_kafka_op_new_fetch_msg)
0000A7C8 00000000000026D0                  14501 @lit_1946_980 DC AD(rd_kafka_q_enq)
0000A7D0 00000000000002F0                  14502 @lit_1946_982 DC AD(rd_atomic64_add)
0000A7D8                                   14503 @L1444   DS    0H
0000A7D8 E310 D110 0004          00000110  14504          LG    1,272(0,13) ; offset of data in rd_kafkap_bytes_s
0000A7DE                                   14505 @L1445   DS    0H
0000A7DE E55C D120 FFFF          00000120  14506          CHSI  288(13),-1
0000A7E4 4770 C046               0000A7F0  14507          BNE   @L1446
0000A7E8 A738 0000               00000000  14508          LHI   3,0         ; 0
0000A7EC 47F0 C04A               0000A7F4  14509          B     @L1447
0000A7F0                                   14510 @L1446   DS    0H
0000A7F0 5830 D120               00000120  14511          L     3,288(0,13) ; offset of Value in 0000157
0000A7F4                                   14512 @L1447   DS    0H
0000A7F4 B914 0033                         14513          LGFR  3,3
0000A7F8 E55C D120 FFFF          00000120  14514          CHSI  288(13),-1
0000A7FE 4770 C060               0000A80A  14515          BNE   @L1448
                                           14516 * ***                                           ((void *)0) : hdr.Valu\
                                           14517 * e.data);
0000A802 A749 0000               00000000  14518          LGHI  4,0         ; 0
0000A806 47F0 C066               0000A810  14519          B     @L1449
                                                                                                                           Page  290 
  Active Usings: @REGION_1946_7,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A80A                                   14520 @L1448   DS    0H
0000A80A E340 D128 0004          00000128  14521          LG    4,296(0,13) ; offset of data in rd_kafkap_bytes_s
0000A810                                   14522 @L1449   DS    0H
0000A810 4150 D150               00000150  14523          LA    5,336(0,13)
0000A814 E350 D368 0024          00000368  14524          STG   5,872(0,13)
0000A81A E320 D370 0024          00000370  14525          STG   2,880(0,13)
0000A820 E320 6038 0004          00000038  14526          LG    2,56(0,6)   ; offset of msetr_tver in rd_kafka_msgset_re*
                                                                ader_s
0000A826 E320 2008 0014          00000008  14527          LGF   2,8(0,2)
0000A82C E320 D378 0024          00000378  14528          STG   2,888(0,13)
0000A832 E370 D380 0024          00000380  14529          STG   7,896(0,13)
0000A838 E320 D100 0004          00000100  14530          LG    2,256(0,13)
0000A83E E320 D388 0024          00000388  14531          STG   2,904(0,13)
0000A844 E3F0 D390 0024          00000390  14532          STG   15,912(0,13)
0000A84A E310 D398 0024          00000398  14533          STG   1,920(0,13)
0000A850 EB34 D3A0 0024          000003A0  14534          STMG  3,4,928(13)
0000A856 4110 D368               00000368  14535          LA    1,872(0,13)
0000A85A E3F0 C016 0004          0000A7C0  14536          LG    15,@lit_1946_979 ; rd_kafka_op_new_fetch_msg
0000A860                                   14537 @@gen_label1326 DS    0H
0000A860 05EF                              14538          BALR  14,15
0000A862                                   14539 @@gen_label1327 DS    0H
                                           14540 * ***
                                           14541 * ***           rkm->rkm_broker_id = msetr->msetr_broker_id;
0000A862 E310 D150 0004          00000150  14542          LG    1,336(0,13) ; rkm
0000A868 5820 6040               00000040  14543          L     2,64(0,6)   ; offset of msetr_broker_id in rd_kafka_msgs*
                                                                et_reader_s
0000A86C 5020 1074               00000074  14544          ST    2,116(0,1)  ; offset of rkm_broker_id in rd_kafka_msg_s
                                           14545 * ***
                                           14546 * ***
                                           14547 * ***
                                           14548 * ***
                                           14549 * ***
                                           14550 * ***           rkm->rkm_u.consumer.binhdrs.len  = hdr.Headers.len;
0000A870 E310 D150 0004          00000150  14551          LG    1,336(0,13) ; rkm
0000A876 5820 D138               00000138  14552          L     2,312(0,13) ; offset of Headers in 0000157
0000A87A 5020 1078               00000078  14553          ST    2,120(0,1)  ; offset of rkm_u in rd_kafka_msg_s
                                           14554 * ***           rkm->rkm_u.consumer.binhdrs.data = hdr.Headers.data;
0000A87E E310 D150 0004          00000150  14555          LG    1,336(0,13) ; rkm
0000A884 E320 D140 0004          00000140  14556          LG    2,320(0,13) ; offset of data in rd_kafkap_bytes_s
0000A88A E320 1080 0024          00000080  14557          STG   2,128(0,1)  ; offset of data in rd_kafkap_bytes_s
                                           14558 * ***
                                           14559 * ***
                                           14560 * ***   # 924 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           14561 * ***           if ((msetr->msetr_v2_hdr->Attributes &
                                           14562 * ***                (1 << 3)) ||
0000A890 E310 6028 0004          00000028  14563          LG    1,40(0,6)   ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
0000A896 4810 1018               00000018  14564          LH    1,24(0,1)
0000A89A A711 0008               00000008  14565          TML   1,8
0000A89E 4770 C100               0000A8AA  14566          BNZ   @L1451
                                           14567 * ***               (hdr.MsgAttributes & (1 << 3))) {
0000A8A2 9108 D0E8      000000E8 00000008  14568          TM    232(13),8
                                                                                                                           Page  291 
  Active Usings: @REGION_1946_7,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A8A6 4780 C128               0000A8D2  14569          BZ    @L1450
0000A8AA                                   14570 @L1451   DS    0H
                                           14571 * ***                   rkm->rkm_tstype = RD_KAFKA_TIMESTAMP_LOG_APPEN\
                                           14572 * D_TIME;
0000A8AA E310 D150 0004          00000150  14573          LG    1,336(0,13) ; rkm
0000A8B0 E54C 105C 0002          0000005C  14574          MVHI  92(1),2     ; offset of rkm_tstype in rd_kafka_msg_s
                                           14575 * ***                   rkm->rkm_timestamp = msetr->msetr_v2_hdr->MaxT\
                                           14576 * imestamp;
0000A8B6 E310 D150 0004          00000150  14577          LG    1,336(0,13) ; rkm
0000A8BC E320 6028 0004          00000028  14578          LG    2,40(0,6)   ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
0000A8C2 E320 2028 0004          00000028  14579          LG    2,40(0,2)   ; offset of MaxTimestamp in msgset_v2_hdr
0000A8C8 E320 1060 0024          00000060  14580          STG   2,96(0,1)   ; offset of rkm_timestamp in rd_kafka_msg_s
                                           14581 * ***           } else {
0000A8CE 47F0 C152               0000A8FC  14582          B     @L1452
0000A8D2                                   14583 @L1450   DS    0H
                                           14584 * ***                   rkm->rkm_tstype = RD_KAFKA_TIMESTAMP_CREATE_TI\
                                           14585 * ME;
0000A8D2 E310 D150 0004          00000150  14586          LG    1,336(0,13) ; rkm
0000A8D8 E54C 105C 0001          0000005C  14587          MVHI  92(1),1     ; offset of rkm_tstype in rd_kafka_msg_s
                                           14588 * ***                   rkm->rkm_timestamp =
                                           14589 * ***                           msetr->msetr_v2_hdr->BaseTimestamp + h\
                                           14590 * dr.TimestampDelta;
0000A8DE E310 D150 0004          00000150  14591          LG    1,336(0,13) ; rkm
0000A8E4 E320 6028 0004          00000028  14592          LG    2,40(0,6)   ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
0000A8EA E320 2020 0004          00000020  14593          LG    2,32(0,2)   ; offset of BaseTimestamp in msgset_v2_hdr
0000A8F0 E320 D0F0 0008          000000F0  14594          AG    2,240(0,13)
0000A8F6 E320 1060 0024          00000060  14595          STG   2,96(0,1)   ; offset of rkm_timestamp in rd_kafka_msg_s
                                           14596 * ***           }
0000A8FC                                   14597 @L1452   DS    0H
                                           14598 * ***
                                           14599 * ***
                                           14600 * ***
                                           14601 * ***           rd_kafka_q_enq(&msetr->msetr_rkq, rko);
0000A8FC 4110 6068               00000068  14602          LA    1,104(0,6)
0000A900 E310 D368 0024          00000368  14603          STG   1,872(0,13)
0000A906 E3F0 D370 0024          00000370  14604          STG   15,880(0,13)
0000A90C 4110 D368               00000368  14605          LA    1,872(0,13)
0000A910 E3F0 C01E 0004          0000A7C8  14606          LG    15,@lit_1946_980 ; rd_kafka_q_enq
0000A916                                   14607 @@gen_label1330 DS    0H
0000A916 05EF                              14608          BALR  14,15
0000A918                                   14609 @@gen_label1331 DS    0H
                                           14610 * ***           msetr->msetr_msgcnt++;
0000A918 58F0 6058               00000058  14611          L     15,88(0,6)
0000A91C A7FA 0001               00000001  14612          AHI   15,1
0000A920 50F0 6058               00000058  14613          ST    15,88(0,6)
                                           14614 * ***           msetr->msetr_msg_bytes += rkm->rkm_rkmessage.key_len +\
                                           14615 *  rkm->rkm_rkmessage.len;
0000A924 E3F0 6060 0004          00000060  14616          LG    15,96(0,6)
0000A92A E310 D150 0004          00000150  14617          LG    1,336(0,13) ; rkm
0000A930 E320 1030 0004          00000030  14618          LG    2,48(0,1)   ; offset of key_len in rd_kafka_message_s
                                                                                                                           Page  292 
  Active Usings: @REGION_1946_7,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A936 E320 1020 000A          00000020  14619          ALG   2,32(0,1)
0000A93C B90A 00F2                         14620          ALGR  15,2
0000A940 E3F0 6060 0024          00000060  14621          STG   15,96(0,6)
                                           14622 * ***
                                           14623 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
0000A946 A7F9 0000               00000000  14624          LGHI  15,0        ; 0
0000A94A 47F0 C1CC               0000A976  14625          B     @ret_lab_1946
                                           14626 * ***
                                           14627 * ***    err_parse:
                                           14628 * ***
                                           14629 * ***           rd_atomic64_add(&msetr->msetr_rkb->rkb_c.rx_partial, 1\
                                           14630 * );
0000A94E                                   14631 @_err_parse@1946@2 DS 0H
0000A94E E3F0 6048 0004          00000048  14632          LG    15,72(0,6)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000A954 41F0 F300               00000300  14633          LA    15,768(0,15)
0000A958 E3F0 D368 0024          00000368  14634          STG   15,872(0,13)
0000A95E E548 D370 0001          00000370  14635          MVGHI 880(13),1
0000A964 4110 D368               00000368  14636          LA    1,872(0,13)
0000A968 E3F0 C026 0004          0000A7D0  14637          LG    15,@lit_1946_982 ; rd_atomic64_add
0000A96E                                   14638 @@gen_label1332 DS    0H
0000A96E 05EF                              14639          BALR  14,15
0000A970                                   14640 @@gen_label1333 DS    0H
                                           14641 * ***           return rkbuf->rkbuf_err;
0000A970 E3F0 7188 0014          00000188  14642          LGF   15,392(0,7)
                                           14643 * ***   }
0000A976                                   14644 @ret_lab_1946 DS 0H
                                           14645 * * **** Start of Epilogue
                                           14646          DCCEPIL
0000A976                                   14647+         ds 0h                                                          01-DCCEP
                                           14648+* Epilog
0000A976 D707 D088 D088 00000088 00000088  14649+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000A97C E3D0 D080 0004          00000080  14650+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000A982 E3C0 D090 0004          00000090  14651+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000A988 E3B0 C018 0004          00000018  14652+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000A98E E3C0 B010 0021          00000010  14653+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000A994 E3E0 D008 0004          00000008  14654+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000A99A EB1C D020 0004          00000020  14655+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000A9A0 078E                              14656+         bcr 8,14                if same dsab, just return              01-DCCEP
0000A9A2 E3F0 D010 0024          00000010  14657+         stg 15,16(0,13)         save return code                       01-DCCEP
0000A9A8 E300 D018 0024          00000018  14658+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000A9AE E3F0 D090 0004          00000090  14659+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000A9B4 E3F0 F018 0004          00000018  14660+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000A9BA 47F0 F040               00000040  14661+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           14662+* End of Epilog
                                           14663 * * **** End of Epilogue
                                           14664          DROP  12
                                           14665 *
                                           14666 *   DSECT for automatic variables in "rd_kafka_msgset_reader_msg_v2"
                                           14667 *      (FUNCTION #1946)
                                           14668 *
00000000                00000000 00000368  14669 @AUTO#rd_kafka_msgset_reader_msg_v2 DSECT
                                                                                                                           Page  293 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                                   14670          DS    XL168
000000A8                                   14671 rd_kafka_msgset_reader_msg_v2#__len0#121 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  14672          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14673 rd_kafka_msgset_reader_msg_v2#_klen#120 DS 8XL1 ; _klen
000000B0                000000B0 000000A8  14674          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14675 rd_kafka_msgset_reader_msg_v2#__len0#114 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  14676          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14677 rd_kafka_msgset_reader_msg_v2#_r#108 DS 8XL1 ; _r
000000B0                000000B0 000000A8  14678          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14679 rd_kafka_msgset_reader_msg_v2#__len0#102 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  14680          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14681 rd_kafka_msgset_reader_msg_v2#_r#96 DS 8XL1 ; _r
000000B0                000000B0 000000A8  14682          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14683 rd_kafka_msgset_reader_msg_v2#__len0#78 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  14684          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14685 rd_kafka_msgset_reader_msg_v2#__len1#77 DS 8XL1 ; __len1
000000B0                000000B0 000000A8  14686          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14687 rd_kafka_msgset_reader_msg_v2#__len0#71 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  14688          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14689 rd_kafka_msgset_reader_msg_v2#__len2#70 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  14690          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14691 rd_kafka_msgset_reader_msg_v2#__len0#58 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  14692          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14693 rd_kafka_msgset_reader_msg_v2#__len1#57 DS 8XL1 ; __len1
000000B0                000000B0 000000A8  14694          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14695 rd_kafka_msgset_reader_msg_v2#__len0#47 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  14696          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14697 rd_kafka_msgset_reader_msg_v2#__len2#46 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  14698          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14699 rd_kafka_msgset_reader_msg_v2#_r#35 DS 8XL1 ; _r
000000B0                000000B0 000000A8  14700          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14701 rd_kafka_msgset_reader_msg_v2#aborted_txn_start_offset#34 DS 8XL1 ; abo*
                                                                rted_txn_start_offset
000000B0                000000B0 000000A8  14702          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14703 rd_kafka_msgset_reader_msg_v2#__len0#28 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  14704          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14705 rd_kafka_msgset_reader_msg_v2#__len1#27 DS 8XL1 ; __len1
000000B0                000000B0 000000A8  14706          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14707 rd_kafka_msgset_reader_msg_v2#_r#18 DS 8XL1 ; _r
000000B0                000000B0 000000A8  14708          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14709 rd_kafka_msgset_reader_msg_v2#_r#13 DS 8XL1 ; _r
000000B0                000000B0 000000A8  14710          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14711 rd_kafka_msgset_reader_msg_v2#__len0#7 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  14712          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14713 rd_kafka_msgset_reader_msg_v2#__len2#6 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  14714          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14715 rd_kafka_msgset_reader_msg_v2#_r#1 DS 8XL1 ; _r
000000B0                000000B0 000000A8  14716          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14717 rd_kafka_msgset_reader_msg_v2#_v#1 DS 8XL1 ; _v
000000B0                000000B0 000000A8  14718          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
000000A8                                   14719 rd_kafka_msgset_reader_msg_v2#message_end#0 DS 8XL1 ; message_end
000000B0                000000B0 000000A8  14720          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+168
                                                                                                                           Page  294 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000A8                                   14721 rd_kafka_msgset_reader_msg_v2#log_decode_errors#0 DS 1F ; log_decode_er*
                                                                rors
000000AC                000000AC 000000B0  14722          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+176
000000B0                                   14723 rd_kafka_msgset_reader_msg_v2#_v#13 DS 8XL1 ; _v
000000B8                000000B8 000000B8  14724          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+184
000000B8                                   14725 rd_kafka_msgset_reader_msg_v2#_v#18 DS 8XL1 ; _v
000000C0                000000C0 000000C0  14726          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+192
000000C0                                   14727 rd_kafka_msgset_reader_msg_v2#_v#35 DS 8XL1 ; _v
000000C8                000000C8 000000C8  14728          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+200
000000C8                                   14729 rd_kafka_msgset_reader_msg_v2#_v#45 DS 2XL1 ; _v
000000CA                000000CA 000000CA  14730          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+202
000000CA                                   14731 rd_kafka_msgset_reader_msg_v2#_v#69 DS 2XL1 ; _v
000000CC                000000CC 000000D0  14732          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+208
000000D0                                   14733 rd_kafka_msgset_reader_msg_v2#_len2#96 DS 8XL1 ; _len2
000000D8                000000D8 000000D8  14734          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+216
000000D8                                   14735 rd_kafka_msgset_reader_msg_v2#_len2#108 DS 8XL1 ; _len2
000000E0                000000E0 000000E0  14736          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+224
000000E0                                   14737 rd_kafka_msgset_reader_msg_v2#hdr#0 DS 112XL1 ; hdr
00000150                00000150 00000158  14738          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+344
00000158                                   14739 rd_kafka_msgset_reader_msg_v2#__tmpstr#125 DS 256XL1 ; __tmpstr
00000258                00000258 00000158  14740          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+344
00000158                                   14741 rd_kafka_msgset_reader_msg_v2#__tmpstr#118 DS 256XL1 ; __tmpstr
00000258                00000258 00000158  14742          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+344
00000158                                   14743 rd_kafka_msgset_reader_msg_v2#__tmpstr#111 DS 256XL1 ; __tmpstr
00000258                00000258 00000158  14744          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+344
00000158                                   14745 rd_kafka_msgset_reader_msg_v2#__tmpstr#106 DS 256XL1 ; __tmpstr
00000258                00000258 00000158  14746          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+344
00000158                                   14747 rd_kafka_msgset_reader_msg_v2#__tmpstr#99 DS 256XL1 ; __tmpstr
00000258                00000258 00000158  14748          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+344
00000158                                   14749 rd_kafka_msgset_reader_msg_v2#ctrl_data#34 DS 16XL1 ; ctrl_data
00000168                00000168 00000158  14750          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+344
00000158                                   14751 rd_kafka_msgset_reader_msg_v2#__tmpstr#32 DS 256XL1 ; __tmpstr
00000258                00000258 00000158  14752          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+344
00000158                                   14753 rd_kafka_msgset_reader_msg_v2#_logname#26 DS 256XL1 ; _logname
00000258                00000258 00000158  14754          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+344
00000158                                   14755 rd_kafka_msgset_reader_msg_v2#__tmpstr#21 DS 256XL1 ; __tmpstr
00000258                00000258 00000158  14756          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+344
00000158                                   14757 rd_kafka_msgset_reader_msg_v2#__tmpstr#16 DS 256XL1 ; __tmpstr
00000258                00000258 00000158  14758          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+344
00000158                                   14759 rd_kafka_msgset_reader_msg_v2#__tmpstr#11 DS 256XL1 ; __tmpstr
00000258                00000258 00000158  14760          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+344
00000158                                   14761 rd_kafka_msgset_reader_msg_v2#__tmpstr#4 DS 256XL1 ; __tmpstr
00000258                00000258 00000168  14762          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+360
00000168                                   14763 rd_kafka_msgset_reader_msg_v2#_logname#95 DS 256XL1 ; _logname
00000268                00000268 00000168  14764          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+360
00000168                                   14765 rd_kafka_msgset_reader_msg_v2#_logname#92 DS 256XL1 ; _logname
00000268                00000268 00000168  14766          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+360
00000168                                   14767 rd_kafka_msgset_reader_msg_v2#_logname#88 DS 256XL1 ; _logname
00000268                00000268 00000168  14768          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+360
00000168                                   14769 rd_kafka_msgset_reader_msg_v2#__tmpstr#82 DS 256XL1 ; __tmpstr
00000268                00000268 00000168  14770          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+360
00000168                                   14771 rd_kafka_msgset_reader_msg_v2#__tmpstr#75 DS 256XL1 ; __tmpstr
                                                                                                                           Page  295 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000268                00000268 00000168  14772          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+360
00000168                                   14773 rd_kafka_msgset_reader_msg_v2#_logname#68 DS 256XL1 ; _logname
00000268                00000268 00000168  14774          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+360
00000168                                   14775 rd_kafka_msgset_reader_msg_v2#_logname#67 DS 256XL1 ; _logname
00000268                00000268 00000168  14776          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+360
00000168                                   14777 rd_kafka_msgset_reader_msg_v2#__tmpstr#62 DS 256XL1 ; __tmpstr
00000268                00000268 00000168  14778          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+360
00000168                                   14779 rd_kafka_msgset_reader_msg_v2#_logname#56 DS 256XL1 ; _logname
00000268                00000268 00000168  14780          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+360
00000168                                   14781 rd_kafka_msgset_reader_msg_v2#__tmpstr#51 DS 256XL1 ; __tmpstr
00000268                00000268 00000168  14782          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+360
00000168                                   14783 rd_kafka_msgset_reader_msg_v2#_logname#44 DS 256XL1 ; _logname
00000268                00000268 00000168  14784          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+360
00000168                                   14785 rd_kafka_msgset_reader_msg_v2#_logname#43 DS 256XL1 ; _logname
00000268                00000268 00000168  14786          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+360
00000168                                   14787 rd_kafka_msgset_reader_msg_v2#__tmpstr#38 DS 256XL1 ; __tmpstr
00000268                00000268 00000258  14788          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+600
00000258                                   14789 rd_kafka_msgset_reader_msg_v2#_logname#126 DS 256XL1 ; _logname
00000358                00000358 00000258  14790          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+600
00000258                                   14791 rd_kafka_msgset_reader_msg_v2#_logname#119 DS 256XL1 ; _logname
00000358                00000358 00000258  14792          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+600
00000258                                   14793 rd_kafka_msgset_reader_msg_v2#_logname#112 DS 256XL1 ; _logname
00000358                00000358 00000258  14794          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+600
00000258                                   14795 rd_kafka_msgset_reader_msg_v2#_logname#107 DS 256XL1 ; _logname
00000358                00000358 00000258  14796          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+600
00000258                                   14797 rd_kafka_msgset_reader_msg_v2#_logname#100 DS 256XL1 ; _logname
00000358                00000358 00000258  14798          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+600
00000258                                   14799 rd_kafka_msgset_reader_msg_v2#_logname#33 DS 256XL1 ; _logname
00000358                00000358 00000258  14800          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+600
00000258                                   14801 rd_kafka_msgset_reader_msg_v2#_logname#22 DS 256XL1 ; _logname
00000358                00000358 00000258  14802          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+600
00000258                                   14803 rd_kafka_msgset_reader_msg_v2#_logname#17 DS 256XL1 ; _logname
00000358                00000358 00000258  14804          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+600
00000258                                   14805 rd_kafka_msgset_reader_msg_v2#_logname#12 DS 256XL1 ; _logname
00000358                00000358 00000258  14806          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+600
00000258                                   14807 rd_kafka_msgset_reader_msg_v2#_logname#5 DS 256XL1 ; _logname
00000358                00000358 00000268  14808          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+616
00000268                                   14809 rd_kafka_msgset_reader_msg_v2#_logname#83 DS 256XL1 ; _logname
00000368                00000368 00000268  14810          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+616
00000268                                   14811 rd_kafka_msgset_reader_msg_v2#_logname#76 DS 256XL1 ; _logname
00000368                00000368 00000268  14812          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+616
00000268                                   14813 rd_kafka_msgset_reader_msg_v2#_logname#63 DS 256XL1 ; _logname
00000368                00000368 00000268  14814          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+616
00000268                                   14815 rd_kafka_msgset_reader_msg_v2#_logname#52 DS 256XL1 ; _logname
00000368                00000368 00000268  14816          ORG   @AUTO#rd_kafka_msgset_reader_msg_v2+616
00000268                                   14817 rd_kafka_msgset_reader_msg_v2#_logname#39 DS 256XL1 ; _logname
                                           14818 *
0000A9BE                00000000 00012806  14819 @CODE    CSECT
                                           14820 *
                                           14821 *
                                           14822 *
                                           14823 * ....... start of rd_kafka_msgset_reader_msgs_v2
                                                                                                                           Page  296 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A9BE                                   14824 @LNAME1942 DS  0H
0000A9BE 0000001E                          14825          DC    X'0000001E'
0000A9C2 99846D9281869281                  14826          DC    C'rd_kafka_msgset_reader_msgs_v2'
0000A9E0 00                                14827          DC    X'00'
                                           14828 rd_kafka_msgset_reader_msgs_v2 DCCPRLG CINDEX=1942,BASER=12,FRAME=816,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1942
                                           14829          macro
                                           14830          dccextrn &m
                                           14831          gblc    &$dccext(1000)
                                           14832          gbla    &$dccexti
                                           14833          lcla    &i
                                           14834 &$dccext(&$dccexti+1) setc    '&m'
                                           14835 &i       seta    1
                                           14836 .loop    aif    (&i gt &$dccexti).around
                                           14837          aif    ('&$dccext(&i)' eq '&m').getout
                                           14838 &i       seta    &i+1
                                           14839          ago     .loop
                                           14840 .around  anop
                                           14841 &$dccexti seta &$dccexti+1
                                           14842          extrn  &m
                                           14843 .getout  anop
                                           14844          mend
0000A9E8                                   14845+$eye0121    ds    0d                                                    02-DCCCA
0000A9E8 C4C3C3                            14846+         dc cl3'DCC'                                                    02-DCCCA
0000A9EB 01                                14847+         dc xl1'01' format one                                          02-DCCCA
0000A9EC 00000000                          14848+         dc a(0)                                                        02-DCCCA
0000A9F0 000000000000AA5A                  14849+         dc ad(@PER_1942)                                               02-DCCCA
0000A9F8 0000000000000330                  14850+         dc ad(816)                                                     02-DCCCA
0000AA00 0000000000000000                  14851+         dc ad(0)                                                       02-DCCCA
0000AA08 0000000000001000                  14852+         dc ad(4096)                                                    02-DCCCA
0000AA10 20                                14853+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000AA11 03                                14854+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000AA12 03                                14855+         dc al1(3)                                                      02-DCCCA
0000AA13 08                                14856+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000AA14 00                                14857+         dc bl.8'00000000'                                              02-DCCCA
0000AA15 000000                            14858+         dc al3(0)                                                      02-DCCCA
0000AA18 000000000000A9BE                  14859+         dc ad(@LNAME1942)                                              02-DCCCA
0000AA20                                   14860+         ds 0d                                                          02-DCCCA
0000AA20 000000000000A9E8                  14861+         dc ad($eye0121)                                                02-DCCCA
0000AA28 0000000000000000                  14862+         dc ad(0)                                                       02-DCCCA
0000AA30                                   14863+         ds    0d                                                       01-DCCPR
0000AA30                                   14864+rd_kafka_msgset_reader_msgs_v2 ds 0d                                    01-DCCPR
0000AA30                                   14865+@REGION_1942_1 ds 0h                                                    01-DCCPR
0000AA30 EBEC D008 0024          00000008  14866+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000AA36 E3E0 D088 0004          00000088  14867+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000AA3C E3C0 D090 0004          00000090  14868+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000AA42 B904 002E                         14869+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000AA46 E3B0 C018 0004          00000018  14870+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000AA4C A7EB 0330               00000330  14871+         aghi  14,816              increase by frame size               01-DCCPR
0000AA50 E3E0 C020 0021          00000020  14872+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000AA56 4720 B020               00000020  14873+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000AA5A                                   14874+@PER_1942 ds   0h                                                       01-DCCPR
                                                                                                                           Page  297 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AA5A EBDE 2080 0024          00000080  14875+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000AA60 E3C0 2090 0024          00000090  14876+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000AA66 B904 00D2                         14877+         lgr   13,2                set real frame pointer               01-DCCPR
0000AA6A B904 00CF                         14878+         lgr   12,15               set base reg                         01-DCCPR
                        0000AA30           14879+         using @REGION_1942_1,12                                        01-DCCPR
                                           14880 * ******* End of Prologue
                                           14881 * *
                                           14882 * ***           rd_kafka_buf_t *rkbuf = msetr->msetr_rkbuf;
0000AA6E E330 1000 0004          00000000  14883          LG    3,0(0,1)    ; msetr
0000AA74 E340 3000 0004          00000000  14884          LG    4,0(0,3)    ; msetr
                                           14885 * ***           rd_kafka_toppar_t *rktp = msetr->msetr_rktp;
0000AA7A E350 3050 0004          00000050  14886          LG    5,80(0,3)   ; offset of msetr_rktp in rd_kafka_msgset_re*
                                                                ader_s
                                           14887 * ***
                                           14888 * ***           int log_decode_errors = (rkbuf->rkbuf_rkb->rkb_rk->rk_\
                                           14889 * conf.debug &
                                           14890 * ***                                    0x80) ? 7 : 0;
0000AA80 E3F0 4100 0004          00000100  14891          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000AA86 E3F0 FFD0 0004          00000FD0  14892          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000AA8C 9180 F323      00000323 00000080  14893          TM    803(15),128
0000AA90 4780 C0F0               0000AB20  14894          BZ    @L1453
0000AA94 A768 0007               00000007  14895          LHI   6,7         ; 7
0000AA98 47F0 C0F4               0000AB24  14896          B     @L1454
0000AAA0                                   14897          DS    0D
0000AAA0 00000330                          14898 @FRAMESIZE_1942 DC F'816'
0000AAA4 00000000
0000AAA8 00000000000112C0                  14899 @lit_1942_1039 DC AD(rd_kafka_aborted_txns_get_offset)
0000AAB0 0000000000000000                  14900 @lit_1942_1041 DC AD(mtx_lock)
0000AAB8 0000000000001668                  14901 @lit_1942_1043 DC AD(rd_strlcpy)
0000AAC0 0000000000000000                  14902 @lit_1942_1045 DC AD(mtx_unlock)
0000AAC8 0000000000000000                  14903 @lit_1942_1047 DC AD(rd_kafka_log0)
0000AAD0 0000000000012AB8                  14904 @lit_1942_1046 DC AD(@strings@)
0000AAD8 0000000000001210                  14905 @lit_1942_1048 DC AD(rd_slice_abs_offset)
0000AAE0 0000000000000000                  14906 @lit_1942_1049 DC AD(rd_slice_read)
0000AAE8 0000000000000000                  14907 @lit_1942_1053 DC AD(rd_kafka_crash)
0000AAF0 0000000000012808                  14908 @lit_1942_1052 DC AD(@DATA)
0000AAF8 0000000000000000                  14909 @lit_1942_1055 DC AD(snprintf)
0000AB00 00000000000014D0                  14910 @lit_1942_1062 DC AD(rd_kafka_$Api$Key2str)
0000AB08 00000000000012B8                  14911 @lit_1942_1063 DC AD(rd_slice_offset)
0000AB10 0000000000006DB0                  14912 @lit_1942_1070 DC AD(rd_kafka_msgset_reader_msg_v2)
0000AB18 00000000000002F0                  14913 @lit_1942_1073 DC AD(rd_atomic64_add)
0000AB20                                   14914 @L1453   DS    0H
0000AB20 A768 0000               00000000  14915          LHI   6,0         ; 0
0000AB24                                   14916 @L1454   DS    0H
                                           14917 * ***
                                           14918 * ***           if (msetr->msetr_aborted_txns != ((void *)0) &&
0000AB24 E3F0 3030 0002          00000030  14919          LTG   15,48(0,3)  ; offset of msetr_aborted_txns in rd_kafka_m*
                                                                sgset_reader_s
0000AB2A 4780 C60C               0000B03C  14920          BE    @L1489
                                           14921 * ***               (msetr->msetr_v2_hdr->Attributes &
                                           14922 * ***                ((1 << 4)|
                                           14923 * ***                 (1 << 5))) ==
                                                                                                                           Page  298 
  Active Usings: @REGION_1942_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           14924 * ***               (1 << 4)) {
0000AB2E E3F0 3028 0004          00000028  14925          LG    15,40(0,3)  ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
0000AB34 48F0 F018               00000018  14926          LH    15,24(0,15)
0000AB38 C0FB 0000 0030                    14927          NILF  15,X'00000030'
0000AB3E A7FE 0010               00000010  14928          CHI   15,16
0000AB42 4770 C60C               0000B03C  14929          BNE   @L1489
                                           14930 * ***
                                           14931 * ***
                                           14932 * ***                   int64_t txn_start_offset =
                                           14933 * ***                           rd_kafka_aborted_txns_get_offset(
                                           14934 * ***                                   msetr->msetr_aborted_txns,
                                           14935 * ***                                   msetr->msetr_v2_hdr->PID);
0000AB46 E3F0 3030 0004          00000030  14936          LG    15,48(0,3)
0000AB4C E3F0 D2A8 0024          000002A8  14937          STG   15,680(0,13)
0000AB52 E3F0 3028 0004          00000028  14938          LG    15,40(0,3)  ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
0000AB58 E3F0 F030 0004          00000030  14939          LG    15,48(0,15)
0000AB5E E3F0 D2B0 0024          000002B0  14940          STG   15,688(0,13)
0000AB64 4110 D2A8               000002A8  14941          LA    1,680(0,13)
0000AB68 E3F0 C078 0004          0000AAA8  14942          LG    15,@lit_1942_1039 ; rd_kafka_aborted_txns_get_offset
0000AB6E                                   14943 @@gen_label1337 DS    0H
0000AB6E 05EF                              14944          BALR  14,15
0000AB70                                   14945 @@gen_label1338 DS    0H
0000AB70 B904 002F                         14946          LGR   2,15
                                           14947 * ***
                                           14948 * ***                   if (txn_start_offset != -1 &&
0000AB74 A72F FFFF               0000FFFF  14949          CGHI  2,-1
0000AB78 4780 C5E8               0000B018  14950          BE    @L1456
                                           14951 * ***                       msetr->msetr_v2_hdr->BaseOffset >=
                                           14952 * ***                       txn_start_offset) {
0000AB7C E3F0 3028 0004          00000028  14953          LG    15,40(0,3)  ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
0000AB82 E3F0 F000 0004          00000000  14954          LG    15,0(0,15)
0000AB88 B920 00F2                         14955          CGR   15,2
0000AB8C 4740 C5E8               0000B018  14956          BL    @L1456
                                           14957 * ***
                                           14958 * ***                           do { if ((((msetr->msetr_rkb)->rkb_rk-\
                                           14959 * >rk_conf.debug & (0x40)))) { do { char _logname[256]; mtx_lock(&(mse\
                                           14960 * tr->msetr_rkb)->rkb_logname_lock); rd_strlcpy(_logname, msetr->msetr\
                                           14961 * _rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(msetr->msetr_rkb)\
                                           14962 * ->rkb_logname_lock); rd_kafka_log0(&(msetr->msetr_rkb)->rkb_rk->rk_c\
                                           14963 * onf, (msetr->msetr_rkb)->rkb_rk, _logname, 7, (0x40), "MSG", "%s [%"\
                                           14964 *  "d" "]: " "Skipping %" "d" " message(s) " "in aborted transaction "\
                                           14965 *  "at offset %" "lld" " for PID %" "lld", rktp->rktp_rkt->rkt_topic->\
                                           14966 * str, rktp->rktp_partition, msetr->msetr_v2_hdr->RecordCount, txn_sta\
                                           14967 * rt_offset, msetr->msetr_v2_hdr->PID); } while (0); } } while (0);
0000AB90                                   14968 @L1457   DS    0H
0000AB90 E3F0 3048 0004          00000048  14969          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000AB96 E3F0 FFD0 0004          00000FD0  14970          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000AB9C 9140 F323      00000323 00000040  14971          TM    803(15),64
                                                                                                                           Page  299 
  Active Usings: @REGION_1942_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000ABA0 4780 C294               0000ACC4  14972          BZ    @L1460
0000ABA4                                   14973 @L1461   DS    0H
0000ABA4 E3F0 3048 0004          00000048  14974          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000ABAA A779 1638               00001638  14975          LGHI  7,5688      ; 5688
0000ABAE 41F7 F000               00000000  14976          LA    15,0(7,15)
0000ABB2 E3F0 D2A8 0024          000002A8  14977          STG   15,680(0,13)
0000ABB8 4110 D2A8               000002A8  14978          LA    1,680(0,13)
0000ABBC E3F0 C080 0004          0000AAB0  14979          LG    15,@lit_1942_1041 ; mtx_lock
0000ABC2                                   14980 @@gen_label1342 DS    0H
0000ABC2 05EF                              14981          BALR  14,15
0000ABC4                                   14982 @@gen_label1343 DS    0H
0000ABC4 41F0 D0A8               000000A8  14983          LA    15,168(0,13)
0000ABC8 E3F0 D2A8 0024          000002A8  14984          STG   15,680(0,13)
0000ABCE E3F0 3048 0004          00000048  14985          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000ABD4 A719 1630               00001630  14986          LGHI  1,5680      ; 5680
0000ABD8 E3F1 F000 0004          00000000  14987          LG    15,0(1,15)
0000ABDE E3F0 D2B0 0024          000002B0  14988          STG   15,688(0,13)
0000ABE4 E548 D2B8 0100          000002B8  14989          MVGHI 696(13),256
0000ABEA 4110 D2A8               000002A8  14990          LA    1,680(0,13)
0000ABEE E3F0 C088 0004          0000AAB8  14991          LG    15,@lit_1942_1043 ; rd_strlcpy
0000ABF4                                   14992 @@gen_label1344 DS    0H
0000ABF4 05EF                              14993          BALR  14,15
0000ABF6                                   14994 @@gen_label1345 DS    0H
0000ABF6 E3F0 3048 0004          00000048  14995          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000ABFC 41F7 F000               00000000  14996          LA    15,0(7,15)
0000AC00 E3F0 D2A8 0024          000002A8  14997          STG   15,680(0,13)
0000AC06 4110 D2A8               000002A8  14998          LA    1,680(0,13)
0000AC0A E3F0 C090 0004          0000AAC0  14999          LG    15,@lit_1942_1045 ; mtx_unlock
0000AC10                                   15000 @@gen_label1346 DS    0H
0000AC10 05EF                              15001          BALR  14,15
0000AC12                                   15002 @@gen_label1347 DS    0H
0000AC12 E3F0 3048 0004          00000048  15003          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000AC18 E3F0 FFD0 0004          00000FD0  15004          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000AC1E 41F0 F210               00000210  15005          LA    15,528(0,15)
0000AC22 E3F0 D2A8 0024          000002A8  15006          STG   15,680(0,13)
0000AC28 E3F0 3048 0004          00000048  15007          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000AC2E E3F0 FFD0 0004          00000FD0  15008          LG    15,4048(0,15)
0000AC34 E3F0 D2B0 0024          000002B0  15009          STG   15,688(0,13)
0000AC3A 41F0 D0A8               000000A8  15010          LA    15,168(0,13)
0000AC3E E3F0 D2B8 0024          000002B8  15011          STG   15,696(0,13)
0000AC44 E548 D2C0 0007          000002C0  15012          MVGHI 704(13),7
0000AC4A E548 D2C8 0040          000002C8  15013          MVGHI 712(13),64
0000AC50 E3F0 C0A0 0004          0000AAD0  15014          LG    15,@lit_1942_1046
0000AC56 4110 F542               00000542  15015          LA    1,1346(0,15)
0000AC5A E310 D2D0 0024          000002D0  15016          STG   1,720(0,13)
0000AC60 41F0 F768               00000768  15017          LA    15,1896(0,15)
0000AC64 E3F0 D2D8 0024          000002D8  15018          STG   15,728(0,13)
                                                                                                                           Page  300 
  Active Usings: @REGION_1942_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AC6A E3F0 5060 0004          00000060  15019          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000AC70 E3F0 F080 0004          00000080  15020          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000AC76 E3F0 F008 0004          00000008  15021          LG    15,8(0,15)
0000AC7C E3F0 D2E0 0024          000002E0  15022          STG   15,736(0,13)
0000AC82 E3F0 5068 0014          00000068  15023          LGF   15,104(0,5)
0000AC88 E3F0 D2E8 0024          000002E8  15024          STG   15,744(0,13)
0000AC8E E3F0 3028 0004          00000028  15025          LG    15,40(0,3)  ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
0000AC94 E3F0 F040 0014          00000040  15026          LGF   15,64(0,15)
0000AC9A E3F0 D2F0 0024          000002F0  15027          STG   15,752(0,13)
0000ACA0 E320 D2F8 0024          000002F8  15028          STG   2,760(0,13)
0000ACA6 E3F0 3028 0004          00000028  15029          LG    15,40(0,3)  ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
0000ACAC E3F0 F030 0004          00000030  15030          LG    15,48(0,15)
0000ACB2 E3F0 D300 0024          00000300  15031          STG   15,768(0,13)
0000ACB8 4110 D2A8               000002A8  15032          LA    1,680(0,13)
0000ACBC E3F0 C098 0004          0000AAC8  15033          LG    15,@lit_1942_1047 ; rd_kafka_log0
0000ACC2                                   15034 @@gen_label1348 DS    0H
0000ACC2 05EF                              15035          BALR  14,15
0000ACC4                                   15036 @@gen_label1349 DS    0H
0000ACC4                                   15037 @L1460   DS    0H
                                           15038 * ***   # 987 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           15039 * ***                           do { size_t __len1 = (size_t)(((&msetr\
                                           15040 * ->msetr_rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&msetr->mset\
                                           15041 * r_rkbuf->rkbuf_reader))); if (__len1 && !rd_slice_read(&(msetr->mset\
                                           15042 * r_rkbuf)->rkbuf_reader, ((void *)0), __len1)) do { size_t __len0 = (\
                                           15043 * size_t)(__len1); if (((__len0 > ((&(msetr->msetr_rkbuf)->rkbuf_reade\
                                           15044 * r)->end - rd_slice_abs_offset(&(msetr->msetr_rkbuf)->rkbuf_reader)))\
                                           15045 * )) { do { if (log_decode_errors > 0) { do { if (((!(msetr->msetr_rkb\
                                           15046 * uf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdk\
                                           15047 * afka_msgset_reader.c",987, __FUNCTION__, (((void *)0)), "assert: " "\
                                           15048 * msetr->msetr_rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[256]; sn\
                                           15049 * printf(__tmpstr, sizeof(__tmpstr), ": "); if (__strlen(__tmpstr) == \
                                           15050 * 2) __tmpstr[0] = '\0'; do { char _logname[256]; mtx_lock(&(msetr->ms\
                                           15051 * etr_rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logname, msetr\
                                           15052 * ->msetr_rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock\
                                           15053 * (&(msetr->msetr_rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(\
                                           15054 * &(msetr->msetr_rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (msetr->msetr_rkb\
                                           15055 * uf->rkbuf_rkb)->rkb_rk, _logname, log_decode_errors, 0x0, "PROTOUFLO\
                                           15056 * W", "Protocol read buffer underflow " "for %s v%hd " "at %" "zu" "/%\
                                           15057 * " "zu" " (%s:%i): " "expected %" "zu" " bytes > " "%" "zu" " remaini\
                                           15058 * ng bytes (%s)%s", rd_kafka_ApiKey2str(msetr->msetr_rkbuf->rkbuf_reqh\
                                           15059 * dr. ApiKey), msetr->msetr_rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_o\
                                           15060 * ffset(&msetr->msetr_rkbuf->rkbuf_reader), ((&msetr->msetr_rkbuf->rkb\
                                           15061 * uf_reader)->end - (&msetr->msetr_rkbuf->rkbuf_reader)->start), __FUN\
                                           15062 * CTION__, 987, __len0, ((&msetr->msetr_rkbuf->rkbuf_reader)->end - rd\
                                           15063 * _slice_abs_offset(&msetr->msetr_rkbuf->rkbuf_reader)), msetr->msetr_\
                                           15064 * rkbuf->rkbuf_uflow_mitigation ? msetr->msetr_rkbuf->rkbuf_uflow_miti\
                                           15065 * gation : "incorrect broker.version.fallback?", __tmpstr); } while (0\
                                           15066 * ); } (msetr->msetr_rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW;\
                                           15067 *  goto err_parse; } while (0); } } while (0); } while (0);
0000ACC4                                   15068 @L1464   DS    0H
                                                                                                                           Page  301 
  Active Usings: @REGION_1942_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000ACC4 E3F0 3000 0004          00000000  15069          LG    15,0(0,3)   ; msetr
0000ACCA E320 F098 0004          00000098  15070          LG    2,152(0,15) ; offset of end in rd_slice_s
0000ACD0 E3F0 3000 0004          00000000  15071          LG    15,0(0,3)   ; msetr
0000ACD6 41F0 F078               00000078  15072          LA    15,120(0,15)
0000ACDA E3F0 D2A8 0024          000002A8  15073          STG   15,680(0,13)
0000ACE0 4110 D2A8               000002A8  15074          LA    1,680(0,13)
0000ACE4 E3F0 C0A8 0004          0000AAD8  15075          LG    15,@lit_1942_1048 ; rd_slice_abs_offset
0000ACEA                                   15076 @@gen_label1350 DS    0H
0000ACEA 05EF                              15077          BALR  14,15
0000ACEC                                   15078 @@gen_label1351 DS    0H
0000ACEC B90B 002F                         15079          SLGR  2,15
0000ACF0 B902 00F2                         15080          LTGR  15,2
0000ACF4 4780 C5E0               0000B010  15081          BZ    @L1467
0000ACF8 E3F0 3000 0004          00000000  15082          LG    15,0(0,3)   ; msetr
0000ACFE 41F0 F078               00000078  15083          LA    15,120(0,15)
0000AD02 E3F0 D2A8 0024          000002A8  15084          STG   15,680(0,13)
0000AD08 D707 D2B0 D2B0 000002B0 000002B0  15085          XC    688(8,13),688(13)
0000AD0E E320 D2B8 0024          000002B8  15086          STG   2,696(0,13)
0000AD14 4110 D2A8               000002A8  15087          LA    1,680(0,13)
0000AD18 E3F0 C0B0 0004          0000AAE0  15088          LG    15,@lit_1942_1049 ; rd_slice_read
0000AD1E                                   15089 @@gen_label1353 DS    0H
0000AD1E 05EF                              15090          BALR  14,15
0000AD20                                   15091 @@gen_label1354 DS    0H
0000AD20 B902 00FF                         15092          LTGR  15,15
0000AD24 4770 C5E0               0000B010  15093          BNZ   @L1467
0000AD28                                   15094 @L1468   DS    0H
0000AD28 E3F0 3000 0004          00000000  15095          LG    15,0(0,3)   ; msetr
0000AD2E E350 F098 0004          00000098  15096          LG    5,152(0,15) ; offset of end in rd_slice_s
0000AD34 E3F0 3000 0004          00000000  15097          LG    15,0(0,3)   ; msetr
0000AD3A 41F0 F078               00000078  15098          LA    15,120(0,15)
0000AD3E E3F0 D2A8 0024          000002A8  15099          STG   15,680(0,13)
0000AD44 4110 D2A8               000002A8  15100          LA    1,680(0,13)
0000AD48 E3F0 C0A8 0004          0000AAD8  15101          LG    15,@lit_1942_1048 ; rd_slice_abs_offset
0000AD4E                                   15102 @@gen_label1356 DS    0H
0000AD4E 05EF                              15103          BALR  14,15
0000AD50                                   15104 @@gen_label1357 DS    0H
0000AD50 B90B 005F                         15105          SLGR  5,15
0000AD54 B921 0025                         15106          CLGR  2,5
0000AD58 47D0 C5E0               0000B010  15107          BNH   @L1471
0000AD5C                                   15108 @L1472   DS    0H
0000AD5C 1266                              15109          LTR   6,6
0000AD5E 47D0 C5D0               0000B000  15110          BNH   @L1475
0000AD62                                   15111 @L1476   DS    0H
0000AD62 E3F0 3000 0004          00000000  15112          LG    15,0(0,3)   ; msetr
0000AD68 E3F0 F100 0002          00000100  15113          LTG   15,256(0,15) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000AD6E 4770 C384               0000ADB4  15114          BNZ   @L1479
0000AD72 E3F0 C0A0 0004          0000AAD0  15115          LG    15,@lit_1942_1046
0000AD78 4110 F2CE               000002CE  15116          LA    1,718(0,15)
0000AD7C E310 D2A8 0024          000002A8  15117          STG   1,680(0,13)
0000AD82 E548 D2B0 03DB          000002B0  15118          MVGHI 688(13),987
0000AD88 E310 C0C0 0004          0000AAF0  15119          LG    1,@lit_1942_1052
0000AD8E 4110 1238               00000238  15120          LA    1,568(0,1)
                                                                                                                           Page  302 
  Active Usings: @REGION_1942_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AD92 E310 D2B8 0024          000002B8  15121          STG   1,696(0,13)
0000AD98 D707 D2C0 D2C0 000002C0 000002C0  15122          XC    704(8,13),704(13)
0000AD9E 41F0 F7BC               000007BC  15123          LA    15,1980(0,15)
0000ADA2 E3F0 D2C8 0024          000002C8  15124          STG   15,712(0,13)
0000ADA8 4110 D2A8               000002A8  15125          LA    1,680(0,13)
0000ADAC E3F0 C0B8 0004          0000AAE8  15126          LG    15,@lit_1942_1053 ; rd_kafka_crash
0000ADB2                                   15127 @@gen_label1361 DS    0H
0000ADB2 05EF                              15128          BALR  14,15
0000ADB4                                   15129 @@gen_label1362 DS    0H
0000ADB4                                   15130 @L1479   DS    0H
0000ADB4 41F0 D0A8               000000A8  15131          LA    15,168(0,13)
0000ADB8 E3F0 D2A8 0024          000002A8  15132          STG   15,680(0,13)
0000ADBE E548 D2B0 0100          000002B0  15133          MVGHI 688(13),256
0000ADC4 E3F0 C0A0 0004          0000AAD0  15134          LG    15,@lit_1942_1046
0000ADCA 41F0 F37C               0000037C  15135          LA    15,892(0,15)
0000ADCE E3F0 D2B8 0024          000002B8  15136          STG   15,696(0,13)
0000ADD4 4110 D2A8               000002A8  15137          LA    1,680(0,13)
0000ADD8 E3F0 C0C8 0004          0000AAF8  15138          LG    15,@lit_1942_1055 ; snprintf
0000ADDE                                   15139 @@gen_label1363 DS    0H
0000ADDE 05EF                              15140          BALR  14,15
0000ADE0                                   15141 @@gen_label1364 DS    0H
0000ADE0 41F0 D0A8               000000A8  15142          LA    15,168(0,13)
0000ADE4 B904 001F                         15143          LGR   1,15
0000ADE8 A709 0000               00000000  15144          LGHI  0,0
0000ADEC                                   15145 @@gen_label1365 DS 0H
0000ADEC B25E 000F                         15146          SRST  0,15
0000ADF0 4710 C3BC               0000ADEC  15147          BC  1,@@gen_label1365
0000ADF4 B90B 0001                         15148          SLGR  0,1
0000ADF8 A70F 0002               00000002  15149          CGHI  0,2
0000ADFC 4770 C3D4               0000AE04  15150          BNE   @L1481
0000AE00 9200 D0A8      000000A8 00000000  15151          MVI   168(13),0
0000AE04                                   15152 @L1480   DS    0H
0000AE04                                   15153 @L1481   DS    0H
0000AE04 E3F0 3000 0004          00000000  15154          LG    15,0(0,3)   ; msetr
0000AE0A E3F0 F100 0004          00000100  15155          LG    15,256(0,15) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000AE10 A759 1638               00001638  15156          LGHI  5,5688      ; 5688
0000AE14 41F5 F000               00000000  15157          LA    15,0(5,15)
0000AE18 E3F0 D2A8 0024          000002A8  15158          STG   15,680(0,13)
0000AE1E 4110 D2A8               000002A8  15159          LA    1,680(0,13)
0000AE22 E3F0 C080 0004          0000AAB0  15160          LG    15,@lit_1942_1041 ; mtx_lock
0000AE28                                   15161 @@gen_label1367 DS    0H
0000AE28 05EF                              15162          BALR  14,15
0000AE2A                                   15163 @@gen_label1368 DS    0H
0000AE2A 41F0 D1A8               000001A8  15164          LA    15,424(0,13)
0000AE2E E3F0 D2A8 0024          000002A8  15165          STG   15,680(0,13)
0000AE34 E3F0 3000 0004          00000000  15166          LG    15,0(0,3)   ; msetr
0000AE3A E3F0 F100 0004          00000100  15167          LG    15,256(0,15) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000AE40 A719 1630               00001630  15168          LGHI  1,5680      ; 5680
0000AE44 E3F1 F000 0004          00000000  15169          LG    15,0(1,15)
0000AE4A E3F0 D2B0 0024          000002B0  15170          STG   15,688(0,13)
0000AE50 E548 D2B8 0100          000002B8  15171          MVGHI 696(13),256
0000AE56 4110 D2A8               000002A8  15172          LA    1,680(0,13)
                                                                                                                           Page  303 
  Active Usings: @REGION_1942_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AE5A E3F0 C088 0004          0000AAB8  15173          LG    15,@lit_1942_1043 ; rd_strlcpy
0000AE60                                   15174 @@gen_label1369 DS    0H
0000AE60 05EF                              15175          BALR  14,15
0000AE62                                   15176 @@gen_label1370 DS    0H
0000AE62 E3F0 3000 0004          00000000  15177          LG    15,0(0,3)   ; msetr
0000AE68 E3F0 F100 0004          00000100  15178          LG    15,256(0,15) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000AE6E 41F5 F000               00000000  15179          LA    15,0(5,15)
0000AE72 E3F0 D2A8 0024          000002A8  15180          STG   15,680(0,13)
0000AE78 4110 D2A8               000002A8  15181          LA    1,680(0,13)
0000AE7C E3F0 C090 0004          0000AAC0  15182          LG    15,@lit_1942_1045 ; mtx_unlock
0000AE82                                   15183 @@gen_label1371 DS    0H
0000AE82 05EF                              15184          BALR  14,15
0000AE84                                   15185 @@gen_label1372 DS    0H
0000AE84 E3F0 3000 0004          00000000  15186          LG    15,0(0,3)   ; msetr
0000AE8A E3F0 F0B8 0015          000000B8  15187          LGH   15,184(0,15)
0000AE90 E3F0 D2A8 0024          000002A8  15188          STG   15,680(0,13)
0000AE96 4110 D2A8               000002A8  15189          LA    1,680(0,13)
0000AE9A E3F0 C0D0 0004          0000AB00  15190          LG    15,@lit_1942_1062 ; rd_kafka_ApiKey2str
0000AEA0                                   15191 @@gen_label1373 DS    0H
0000AEA0 05EF                              15192          BALR  14,15
0000AEA2                                   15193 @@gen_label1374 DS    0H
0000AEA2 B904 005F                         15194          LGR   5,15
0000AEA6 E3F0 3000 0004          00000000  15195          LG    15,0(0,3)   ; msetr
0000AEAC 41F0 F078               00000078  15196          LA    15,120(0,15)
0000AEB0 E3F0 D2A8 0024          000002A8  15197          STG   15,680(0,13)
0000AEB6 4110 D2A8               000002A8  15198          LA    1,680(0,13)
0000AEBA E3F0 C0D8 0004          0000AB08  15199          LG    15,@lit_1942_1063 ; rd_slice_offset
0000AEC0                                   15200 @@gen_label1375 DS    0H
0000AEC0 05EF                              15201          BALR  14,15
0000AEC2                                   15202 @@gen_label1376 DS    0H
0000AEC2 B904 007F                         15203          LGR   7,15
0000AEC6 E3F0 3000 0004          00000000  15204          LG    15,0(0,3)   ; msetr
0000AECC E380 F098 0004          00000098  15205          LG    8,152(0,15) ; offset of end in rd_slice_s
0000AED2 E3F0 3000 0004          00000000  15206          LG    15,0(0,3)   ; msetr
0000AED8 41F0 F078               00000078  15207          LA    15,120(0,15)
0000AEDC E3F0 D2A8 0024          000002A8  15208          STG   15,680(0,13)
0000AEE2 4110 D2A8               000002A8  15209          LA    1,680(0,13)
0000AEE6 E3F0 C0A8 0004          0000AAD8  15210          LG    15,@lit_1942_1048 ; rd_slice_abs_offset
0000AEEC                                   15211 @@gen_label1377 DS    0H
0000AEEC 05EF                              15212          BALR  14,15
0000AEEE                                   15213 @@gen_label1378 DS    0H
0000AEEE B90B 008F                         15214          SLGR  8,15
0000AEF2 E3F0 3000 0004          00000000  15215          LG    15,0(0,3)   ; msetr
0000AEF8 E3F0 F1E8 0002          000001E8  15216          LTG   15,488(0,15) ; offset of rkbuf_uflow_mitigation in rd_ka*
                                                                fka_buf_s
0000AEFE 4780 C4E2               0000AF12  15217          BZ    @L1484
0000AF02 E3F0 3000 0004          00000000  15218          LG    15,0(0,3)   ; msetr
0000AF08 E3F0 F1E8 0004          000001E8  15219          LG    15,488(0,15) ; offset of rkbuf_uflow_mitigation in rd_ka*
                                                                fka_buf_s
0000AF0E 47F0 C4EC               0000AF1C  15220          B     @L1485
0000AF12                                   15221 @L1484   DS    0H
0000AF12 E3F0 C0A0 0004          0000AAD0  15222          LG    15,@lit_1942_1046
                                                                                                                           Page  304 
  Active Usings: @REGION_1942_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AF18 41F0 F380               00000380  15223          LA    15,896(0,15)
0000AF1C                                   15224 @L1485   DS    0H
0000AF1C E310 3000 0004          00000000  15225          LG    1,0(0,3)    ; msetr
0000AF22 E310 1100 0004          00000100  15226          LG    1,256(0,1)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000AF28 E310 1FD0 0004          00000FD0  15227          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000AF2E 4110 1210               00000210  15228          LA    1,528(0,1)
0000AF32 E310 D2A8 0024          000002A8  15229          STG   1,680(0,13)
0000AF38 E310 3000 0004          00000000  15230          LG    1,0(0,3)    ; msetr
0000AF3E E310 1100 0004          00000100  15231          LG    1,256(0,1)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000AF44 E310 1FD0 0004          00000FD0  15232          LG    1,4048(0,1)
0000AF4A E310 D2B0 0024          000002B0  15233          STG   1,688(0,13)
0000AF50 4110 D1A8               000001A8  15234          LA    1,424(0,13)
0000AF54 E310 D2B8 0024          000002B8  15235          STG   1,696(0,13)
0000AF5A B914 0016                         15236          LGFR  1,6
0000AF5E E310 D2C0 0024          000002C0  15237          STG   1,704(0,13)
0000AF64 D707 D2C8 D2C8 000002C8 000002C8  15238          XC    712(8,13),712(13)
0000AF6A E310 C0A0 0004          0000AAD0  15239          LG    1,@lit_1942_1046
0000AF70 4160 13A4               000003A4  15240          LA    6,932(0,1)
0000AF74 E360 D2D0 0024          000002D0  15241          STG   6,720(0,13)
0000AF7A 4110 13B0               000003B0  15242          LA    1,944(0,1)
0000AF7E E310 D2D8 0024          000002D8  15243          STG   1,728(0,13)
0000AF84 E350 D2E0 0024          000002E0  15244          STG   5,736(0,13)
0000AF8A E310 3000 0004          00000000  15245          LG    1,0(0,3)    ; msetr
0000AF90 4810 10BA               000000BA  15246          LH    1,186(0,1)
0000AF94 B914 0011                         15247          LGFR  1,1
0000AF98 E310 D2E8 0024          000002E8  15248          STG   1,744(0,13)
0000AF9E E370 D2F0 0024          000002F0  15249          STG   7,752(0,13)
0000AFA4 E310 3000 0004          00000000  15250          LG    1,0(0,3)    ; msetr
0000AFAA E310 1098 0004          00000098  15251          LG    1,152(0,1)  ; offset of end in rd_slice_s
0000AFB0 E350 3000 0004          00000000  15252          LG    5,0(0,3)    ; msetr
0000AFB6 E310 5090 000B          00000090  15253          SLG   1,144(0,5)
0000AFBC E310 D2F8 0024          000002F8  15254          STG   1,760(0,13)
0000AFC2 E310 C0C0 0004          0000AAF0  15255          LG    1,@lit_1942_1052
0000AFC8 4110 1238               00000238  15256          LA    1,568(0,1)
0000AFCC E310 D300 0024          00000300  15257          STG   1,768(0,13)
0000AFD2 E548 D308 03DB          00000308  15258          MVGHI 776(13),987
0000AFD8 E320 D310 0024          00000310  15259          STG   2,784(0,13)
0000AFDE E380 D318 0024          00000318  15260          STG   8,792(0,13)
0000AFE4 E3F0 D320 0024          00000320  15261          STG   15,800(0,13)
0000AFEA 41F0 D0A8               000000A8  15262          LA    15,168(0,13)
0000AFEE E3F0 D328 0024          00000328  15263          STG   15,808(0,13)
0000AFF4 4110 D2A8               000002A8  15264          LA    1,680(0,13)
0000AFF8 E3F0 C098 0004          0000AAC8  15265          LG    15,@lit_1942_1047 ; rd_kafka_log0
0000AFFE                                   15266 @@gen_label1380 DS    0H
0000AFFE 05EF                              15267          BALR  14,15
0000B000                                   15268 @@gen_label1381 DS    0H
0000B000                                   15269 @L1475   DS    0H
0000B000 E3F0 3000 0004          00000000  15270          LG    15,0(0,3)   ; msetr
0000B006 E54C F188 FF65          00000188  15271          MVHI  392(15),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000B00C 47F0 C644               0000B074  15272          B     @_err_parse@1942@3
0000B010                                   15273 @L1471   DS    0H
0000B010                                   15274 @L1467   DS    0H
                                                                                                                           Page  305 
  Active Usings: @REGION_1942_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           15275 * ***
                                           15276 * ***                           return RD_KAFKA_RESP_ERR_NO_ERROR;
0000B010 A7F9 0000               00000000  15277          LGHI  15,0        ; 0
0000B014 47F0 C676               0000B0A6  15278          B     @ret_lab_1942
                                           15279 * ***                   }
0000B018                                   15280 @L1456   DS    0H
                                           15281 * ***           }
0000B018                                   15282 @L1455   DS    0H
                                           15283 * ***
                                           15284 * ***           while (((&(msetr->msetr_rkbuf)->rkbuf_reader)->end - r\
                                           15285 * d_slice_abs_offset(&(msetr->msetr_rkbuf)->rkbuf_reader))) {
0000B018 47F0 C60C               0000B03C  15286          B     @L1489
0000B01C                                   15287 @L1488   DS    0H
                                           15288 * ***                   rd_kafka_resp_err_t err;
                                           15289 * ***                   err = rd_kafka_msgset_reader_msg_v2(msetr);
0000B01C E330 D2A8 0024          000002A8  15290          STG   3,680(0,13)
0000B022 4110 D2A8               000002A8  15291          LA    1,680(0,13)
0000B026 E3F0 C0E0 0004          0000AB10  15292          LG    15,@lit_1942_1070 ; rd_kafka_msgset_reader_msg_v2
0000B02C                                   15293 @@gen_label1382 DS    0H
0000B02C 05EF                              15294          BALR  14,15
0000B02E                                   15295 @@gen_label1383 DS    0H
                                           15296 * ***                   if (((err)))
0000B02E 12FF                              15297          LTR   15,15
0000B030 4780 C60C               0000B03C  15298          BZ    @L1490
                                           15299 * ***                           return err;
0000B034 B914 00FF                         15300          LGFR  15,15
0000B038 47F0 C676               0000B0A6  15301          B     @ret_lab_1942
0000B03C                                   15302 @L1490   DS    0H
                                           15303 * ***           }
0000B03C                                   15304 @L1489   DS    0H
0000B03C E3F0 3000 0004          00000000  15305          LG    15,0(0,3)   ; msetr
0000B042 E320 F098 0004          00000098  15306          LG    2,152(0,15) ; offset of end in rd_slice_s
0000B048 E3F0 3000 0004          00000000  15307          LG    15,0(0,3)   ; msetr
0000B04E 41F0 F078               00000078  15308          LA    15,120(0,15)
0000B052 E3F0 D2A8 0024          000002A8  15309          STG   15,680(0,13)
0000B058 4110 D2A8               000002A8  15310          LA    1,680(0,13)
0000B05C E3F0 C0A8 0004          0000AAD8  15311          LG    15,@lit_1942_1048 ; rd_slice_abs_offset
0000B062                                   15312 @@gen_label1385 DS    0H
0000B062 05EF                              15313          BALR  14,15
0000B064                                   15314 @@gen_label1386 DS    0H
0000B064 B90B 002F                         15315          SLGR  2,15
0000B068 4750 C5EC               0000B01C  15316          BC  5,@L1488
                                           15317 * ***
                                           15318 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
0000B06C A7F9 0000               00000000  15319          LGHI  15,0        ; 0
0000B070 47F0 C676               0000B0A6  15320          B     @ret_lab_1942
                                           15321 * ***
                                           15322 * ***   err_parse:
                                           15323 * ***
                                           15324 * ***           rd_atomic64_add(&msetr->msetr_rkb->rkb_c.rx_partial, 1\
                                           15325 * );
0000B074                                   15326 @_err_parse@1942@3 DS 0H
                                                                                                                           Page  306 
  Active Usings: @REGION_1942_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B074 E3F0 3048 0004          00000048  15327          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000B07A 41F0 F300               00000300  15328          LA    15,768(0,15)
0000B07E E3F0 D2A8 0024          000002A8  15329          STG   15,680(0,13)
0000B084 E548 D2B0 0001          000002B0  15330          MVGHI 688(13),1
0000B08A 4110 D2A8               000002A8  15331          LA    1,680(0,13)
0000B08E E3F0 C0E8 0004          0000AB18  15332          LG    15,@lit_1942_1073 ; rd_atomic64_add
0000B094                                   15333 @@gen_label1388 DS    0H
0000B094 05EF                              15334          BALR  14,15
0000B096                                   15335 @@gen_label1389 DS    0H
                                           15336 * ***           msetr->msetr_v2_hdr = ((void *)0);
0000B096 A7F9 0000               00000000  15337          LGHI  15,0        ; 0
0000B09A E3F0 3028 0024          00000028  15338          STG   15,40(0,3)  ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
                                           15339 * ***           return rkbuf->rkbuf_err;
0000B0A0 E3F0 4188 0014          00000188  15340          LGF   15,392(0,4)
                                           15341 * ***   }
0000B0A6                                   15342 @ret_lab_1942 DS 0H
                                           15343 * * **** Start of Epilogue
                                           15344          DCCEPIL
0000B0A6                                   15345+         ds 0h                                                          01-DCCEP
                                           15346+* Epilog
0000B0A6 D707 D088 D088 00000088 00000088  15347+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000B0AC E3D0 D080 0004          00000080  15348+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000B0B2 E3C0 D090 0004          00000090  15349+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000B0B8 E3B0 C018 0004          00000018  15350+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000B0BE E3C0 B010 0021          00000010  15351+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000B0C4 E3E0 D008 0004          00000008  15352+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000B0CA EB1C D020 0004          00000020  15353+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000B0D0 078E                              15354+         bcr 8,14                if same dsab, just return              01-DCCEP
0000B0D2 E3F0 D010 0024          00000010  15355+         stg 15,16(0,13)         save return code                       01-DCCEP
0000B0D8 E300 D018 0024          00000018  15356+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000B0DE E3F0 D090 0004          00000090  15357+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000B0E4 E3F0 F018 0004          00000018  15358+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000B0EA 47F0 F040               00000040  15359+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           15360+* End of Epilog
                                           15361 * * **** End of Epilogue
                                           15362          DROP  12
                                           15363 *
                                           15364 *   DSECT for automatic variables in "rd_kafka_msgset_reader_msgs_v2"
                                           15365 *      (FUNCTION #1942)
                                           15366 *
00000000                00000000 000002A8  15367 @AUTO#rd_kafka_msgset_reader_msgs_v2 DSECT
00000000                                   15368          DS    XL168
000000A8                                   15369 rd_kafka_msgset_reader_msgs_v2#err#13 DS 1F ; err
000000AC                000000AC 000000A8  15370          ORG   @AUTO#rd_kafka_msgset_reader_msgs_v2+168
000000A8                                   15371 rd_kafka_msgset_reader_msgs_v2#__tmpstr#11 DS 256XL1 ; __tmpstr
000001A8                000001A8 000000A8  15372          ORG   @AUTO#rd_kafka_msgset_reader_msgs_v2+168
000000A8                                   15373 rd_kafka_msgset_reader_msgs_v2#__len0#7 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  15374          ORG   @AUTO#rd_kafka_msgset_reader_msgs_v2+168
000000A8                                   15375 rd_kafka_msgset_reader_msgs_v2#__len1#6 DS 8XL1 ; __len1
000000B0                000000B0 000000A8  15376          ORG   @AUTO#rd_kafka_msgset_reader_msgs_v2+168
                                                                                                                           Page  307 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000A8                                   15377 rd_kafka_msgset_reader_msgs_v2#_logname#5 DS 256XL1 ; _logname
000001A8                000001A8 000000A8  15378          ORG   @AUTO#rd_kafka_msgset_reader_msgs_v2+168
000000A8                                   15379 rd_kafka_msgset_reader_msgs_v2#txn_start_offset#1 DS 8XL1 ; txn_start_o*
                                                                ffset
000000B0                000000B0 000000A8  15380          ORG   @AUTO#rd_kafka_msgset_reader_msgs_v2+168
000000A8                                   15381 rd_kafka_msgset_reader_msgs_v2#log_decode_errors#0 DS 1F ; log_decode_e*
                                                                rrors
000000AC                000000AC 000001A8  15382          ORG   @AUTO#rd_kafka_msgset_reader_msgs_v2+424
000001A8                                   15383 rd_kafka_msgset_reader_msgs_v2#_logname#12 DS 256XL1 ; _logname
                                           15384 *
0000B0EE                00000000 00012806  15385 @CODE    CSECT
                                           15386 *
                                           15387 *
                                           15388 *
                                           15389 * ....... start of rd_kafka_msgset_reader_v2
0000B0EE                                   15390 @LNAME1947 DS  0H
0000B0EE 00000019                          15391          DC    X'00000019'
0000B0F2 99846D9281869281                  15392          DC    C'rd_kafka_msgset_reader_v2'
0000B10B 00                                15393          DC    X'00'
                                           15394 rd_kafka_msgset_reader_v2 DCCPRLG CINDEX=1947,BASER=12,FRAME=1040,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1947
                                           15395          macro
                                           15396          dccextrn &m
                                           15397          gblc    &$dccext(1000)
                                           15398          gbla    &$dccexti
                                           15399          lcla    &i
                                           15400 &$dccext(&$dccexti+1) setc    '&m'
                                           15401 &i       seta    1
                                           15402 .loop    aif    (&i gt &$dccexti).around
                                           15403          aif    ('&$dccext(&i)' eq '&m').getout
                                           15404 &i       seta    &i+1
                                           15405          ago     .loop
                                           15406 .around  anop
                                           15407 &$dccexti seta &$dccexti+1
                                           15408          extrn  &m
                                           15409 .getout  anop
                                           15410          mend
0000B110                                   15411+$eye0124    ds    0d                                                    02-DCCCA
0000B110 C4C3C3                            15412+         dc cl3'DCC'                                                    02-DCCCA
0000B113 01                                15413+         dc xl1'01' format one                                          02-DCCCA
0000B114 00000000                          15414+         dc a(0)                                                        02-DCCCA
0000B118 000000000000B182                  15415+         dc ad(@PER_1947)                                               02-DCCCA
0000B120 0000000000000410                  15416+         dc ad(1040)                                                    02-DCCCA
0000B128 0000000000000000                  15417+         dc ad(0)                                                       02-DCCCA
0000B130 0000000000001000                  15418+         dc ad(4096)                                                    02-DCCCA
0000B138 20                                15419+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000B139 03                                15420+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000B13A 03                                15421+         dc al1(3)                                                      02-DCCCA
0000B13B 08                                15422+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000B13C 00                                15423+         dc bl.8'00000000'                                              02-DCCCA
0000B13D 000000                            15424+         dc al3(0)                                                      02-DCCCA
0000B140 000000000000B0EE                  15425+         dc ad(@LNAME1947)                                              02-DCCCA
                                                                                                                           Page  308 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B148                                   15426+         ds 0d                                                          02-DCCCA
0000B148 000000000000B110                  15427+         dc ad($eye0124)                                                02-DCCCA
0000B150 0000000000000000                  15428+         dc ad(0)                                                       02-DCCCA
0000B158                                   15429+         ds    0d                                                       01-DCCPR
0000B158                                   15430+rd_kafka_msgset_reader_v2 ds 0d                                         01-DCCPR
0000B158                                   15431+@REGION_1947_1 ds 0h                                                    01-DCCPR
0000B158 EBEC D008 0024          00000008  15432+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000B15E E3E0 D088 0004          00000088  15433+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000B164 E3C0 D090 0004          00000090  15434+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000B16A B904 002E                         15435+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000B16E E3B0 C018 0004          00000018  15436+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000B174 A7EB 0410               00000410  15437+         aghi  14,1040             increase by frame size               01-DCCPR
0000B178 E3E0 C020 0021          00000020  15438+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000B17E 4720 B020               00000020  15439+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000B182                                   15440+@PER_1947 ds   0h                                                       01-DCCPR
0000B182 EBDE 2080 0024          00000080  15441+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000B188 E3C0 2090 0024          00000090  15442+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000B18E B904 00D2                         15443+         lgr   13,2                set real frame pointer               01-DCCPR
0000B192 B904 00CF                         15444+         lgr   12,15               set base reg                         01-DCCPR
                        0000B158           15445+         using @REGION_1947_1,12                                        01-DCCPR
                                           15446 * ******* End of Prologue
                                           15447 * *
                                           15448 * ***           rd_kafka_buf_t *rkbuf = msetr->msetr_rkbuf;
0000B196 E330 1000 0004          00000000  15449          LG    3,0(0,1)    ; msetr
0000B19C E340 3000 0004          00000000  15450          LG    4,0(0,3)    ; msetr
                                           15451 * ***           rd_kafka_toppar_t *rktp = msetr->msetr_rktp;
0000B1A2 E350 3050 0004          00000050  15452          LG    5,80(0,3)   ; offset of msetr_rktp in rd_kafka_msgset_re*
                                                                ader_s
                                           15453 * ***           struct msgset_v2_hdr hdr;
                                           15454 * ***           rd_slice_t save_slice;
                                           15455 * ***           rd_kafka_resp_err_t err = RD_KAFKA_RESP_ERR_NO_ERROR;
0000B1A8 A788 0000               00000000  15456          LHI   8,0         ; 0
                                           15457 * ***           size_t len_start;
                                           15458 * ***           size_t payload_size;
                                           15459 * ***           int64_t LastOffset;
                                           15460 * ***
                                           15461 * ***           int log_decode_errors = (rkbuf->rkbuf_rkb->rkb_rk->rk_\
                                           15462 * conf.debug &
                                           15463 * ***                                    0x80) ? 7 : 0;
0000B1AC E3F0 4100 0004          00000100  15464          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B1B2 E3F0 FFD0 0004          00000FD0  15465          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000B1B8 9180 F323      00000323 00000080  15466          TM    803(15),128
0000B1BC 4780 C0E0               0000B238  15467          BZ    @L1491
0000B1C0 A788 0007               00000007  15468          LHI   8,7         ; 7
0000B1C4 47F0 C0E0               0000B238  15469          B     @L1492
0000B1C8                                   15470          DS    0D
0000B1C8 00000410                          15471 @FRAMESIZE_1947 DC F'1040'
0000B1CC 00000000
0000B1D0 0000000000000000                  15472 @lit_1947_1080 DC AD(rd_slice_read)
0000B1D8 0000000000001210                  15473 @lit_1947_1081 DC AD(rd_slice_abs_offset)
0000B1E0 0000000000000000                  15474 @lit_1947_1084 DC AD(rd_kafka_crash)
0000B1E8 0000000000012808                  15475 @lit_1947_1083 DC AD(@DATA)
                                                                                                                           Page  309 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B1F0 0000000000012AB8                  15476 @lit_1947_1082 DC AD(@strings@)
0000B1F8 0000000000000000                  15477 @lit_1947_1086 DC AD(snprintf)
0000B200 0000000000000000                  15478 @lit_1947_1088 DC AD(mtx_lock)
0000B208 0000000000001668                  15479 @lit_1947_1090 DC AD(rd_strlcpy)
0000B210 0000000000000000                  15480 @lit_1947_1092 DC AD(mtx_unlock)
0000B218 00000000000014D0                  15481 @lit_1947_1093 DC AD(rd_kafka_$Api$Key2str)
0000B220 00000000000012B8                  15482 @lit_1947_1094 DC AD(rd_slice_offset)
0000B228 0000000000000000                  15483 @lit_1947_1099 DC AD(rd_kafka_log0)
0000B230 000039D2                          15484 @lit_region_diff_1947_1_7  DC A(@REGION_1947_7-@REGION_1947_1)
0000B234 000008C4                          15485 @lit_region_diff_1947_1_2  DC A(@REGION_1947_2-@REGION_1947_1)
0000B238                                   15486 @L1491   DS    0H
0000B238                                   15487 @L1492   DS    0H
                                           15488 * ***
                                           15489 * ***           do { int64_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           15490 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           15491 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           15492 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           15493 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           15494 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                           15495 * 1028, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); }\
                                           15496 *  while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr),\
                                           15497 *  ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _\
                                           15498 * logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_st\
                                           15499 * rlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mt\
                                           15500 * x_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb\
                                           15501 * uf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lognam\
                                           15502 * e, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer under\
                                           15503 * flow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %\
                                           15504 * " "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiK\
                                           15505 * ey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion,\
                                           15506 *  rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end\
                                           15507 *  - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1028, __len0, ((&rk\
                                           15508 * buf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader))\
                                           15509 * , rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "i\
                                           15510 * ncorrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf\
                                           15511 * )->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while\
                                           15512 *  (0); } } while (0); } while (0); *(&hdr.BaseOffset) = (_v); } while\
                                           15513 *  (0);
0000B238                                   15514 @L1493   DS    0H
0000B238                                   15515 @L1496   DS    0H
0000B238 A729 0008               00000008  15516          LGHI  2,8         ; 8
0000B23C 41F0 4078               00000078  15517          LA    15,120(0,4)
0000B240 E3F0 D388 0024          00000388  15518          STG   15,904(0,13)
0000B246 41F0 D0A8               000000A8  15519          LA    15,168(0,13)
0000B24A E3F0 D390 0024          00000390  15520          STG   15,912(0,13)
0000B250 E320 D398 0024          00000398  15521          STG   2,920(0,13)
0000B256 4110 D388               00000388  15522          LA    1,904(0,13)
0000B25A E3F0 C078 0004          0000B1D0  15523          LG    15,@lit_1947_1080 ; rd_slice_read
0000B260                                   15524 @@gen_label1391 DS    0H
0000B260 05EF                              15525          BALR  14,15
0000B262                                   15526 @@gen_label1392 DS    0H
0000B262 B902 00FF                         15527          LTGR  15,15
                                                                                                                           Page  310 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B266 4770 C394               0000B4EC  15528          BNZ   @L1499
0000B26A                                   15529 @L1500   DS    0H
0000B26A E360 4098 0004          00000098  15530          LG    6,152(0,4)  ; offset of end in rd_slice_s
0000B270 41F0 4078               00000078  15531          LA    15,120(0,4)
0000B274 E3F0 D388 0024          00000388  15532          STG   15,904(0,13)
0000B27A 4110 D388               00000388  15533          LA    1,904(0,13)
0000B27E E3F0 C080 0004          0000B1D8  15534          LG    15,@lit_1947_1081 ; rd_slice_abs_offset
0000B284                                   15535 @@gen_label1394 DS    0H
0000B284 05EF                              15536          BALR  14,15
0000B286                                   15537 @@gen_label1395 DS    0H
0000B286 B90B 006F                         15538          SLGR  6,15
0000B28A B921 0026                         15539          CLGR  2,6
0000B28E 47D0 C394               0000B4EC  15540          BNH   @L1503
0000B292                                   15541 @L1504   DS    0H
0000B292 1288                              15542          LTR   8,8
0000B294 47D0 C384               0000B4DC  15543          BNH   @L1507
0000B298                                   15544 @L1508   DS    0H
0000B298 E3F0 4100 0002          00000100  15545          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B29E 4770 C18C               0000B2E4  15546          BNZ   @L1511
0000B2A2 E3F0 C098 0004          0000B1F0  15547          LG    15,@lit_1947_1082
0000B2A8 4110 F2CE               000002CE  15548          LA    1,718(0,15)
0000B2AC E310 D388 0024          00000388  15549          STG   1,904(0,13)
0000B2B2 E548 D390 0404          00000390  15550          MVGHI 912(13),1028
0000B2B8 E310 C090 0004          0000B1E8  15551          LG    1,@lit_1947_1083
0000B2BE 4110 1258               00000258  15552          LA    1,600(0,1)
0000B2C2 E310 D398 0024          00000398  15553          STG   1,920(0,13)
0000B2C8 D707 D3A0 D3A0 000003A0 000003A0  15554          XC    928(8,13),928(13)
0000B2CE 41F0 F362               00000362  15555          LA    15,866(0,15)
0000B2D2 E3F0 D3A8 0024          000003A8  15556          STG   15,936(0,13)
0000B2D8 4110 D388               00000388  15557          LA    1,904(0,13)
0000B2DC E3F0 C088 0004          0000B1E0  15558          LG    15,@lit_1947_1084 ; rd_kafka_crash
0000B2E2                                   15559 @@gen_label1399 DS    0H
0000B2E2 05EF                              15560          BALR  14,15
0000B2E4                                   15561 @@gen_label1400 DS    0H
0000B2E4                                   15562 @L1511   DS    0H
0000B2E4 41F0 D160               00000160  15563          LA    15,352(0,13)
0000B2E8 E3F0 D388 0024          00000388  15564          STG   15,904(0,13)
0000B2EE E548 D390 0100          00000390  15565          MVGHI 912(13),256
0000B2F4 E3F0 C098 0004          0000B1F0  15566          LG    15,@lit_1947_1082
0000B2FA 41F0 F37C               0000037C  15567          LA    15,892(0,15)
0000B2FE E3F0 D398 0024          00000398  15568          STG   15,920(0,13)
0000B304 4110 D388               00000388  15569          LA    1,904(0,13)
0000B308 E3F0 C0A0 0004          0000B1F8  15570          LG    15,@lit_1947_1086 ; snprintf
0000B30E                                   15571 @@gen_label1401 DS    0H
0000B30E 05EF                              15572          BALR  14,15
0000B310                                   15573 @@gen_label1402 DS    0H
0000B310 41F0 D160               00000160  15574          LA    15,352(0,13)
0000B314 B904 001F                         15575          LGR   1,15
0000B318 A709 0000               00000000  15576          LGHI  0,0
0000B31C                                   15577 @@gen_label1403 DS 0H
0000B31C B25E 000F                         15578          SRST  0,15
0000B320 4710 C1C4               0000B31C  15579          BC  1,@@gen_label1403
                                                                                                                           Page  311 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B324 B90B 0001                         15580          SLGR  0,1
0000B328 A70F 0002               00000002  15581          CGHI  0,2
0000B32C 4770 C1DC               0000B334  15582          BNE   @L1513
0000B330 9200 D160      00000160 00000000  15583          MVI   352(13),0
0000B334                                   15584 @L1512   DS    0H
0000B334                                   15585 @L1513   DS    0H
0000B334 E3F0 4100 0004          00000100  15586          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B33A A759 1638               00001638  15587          LGHI  5,5688      ; 5688
0000B33E 41F5 F000               00000000  15588          LA    15,0(5,15)
0000B342 E3F0 D388 0024          00000388  15589          STG   15,904(0,13)
0000B348 4110 D388               00000388  15590          LA    1,904(0,13)
0000B34C E3F0 C0A8 0004          0000B200  15591          LG    15,@lit_1947_1088 ; mtx_lock
0000B352                                   15592 @@gen_label1405 DS    0H
0000B352 05EF                              15593          BALR  14,15
0000B354                                   15594 @@gen_label1406 DS    0H
0000B354 41F0 D260               00000260  15595          LA    15,608(0,13)
0000B358 E3F0 D388 0024          00000388  15596          STG   15,904(0,13)
0000B35E E3F0 4100 0004          00000100  15597          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B364 A719 1630               00001630  15598          LGHI  1,5680      ; 5680
0000B368 E3F1 F000 0004          00000000  15599          LG    15,0(1,15)
0000B36E E3F0 D390 0024          00000390  15600          STG   15,912(0,13)
0000B374 E548 D398 0100          00000398  15601          MVGHI 920(13),256
0000B37A 4110 D388               00000388  15602          LA    1,904(0,13)
0000B37E E3F0 C0B0 0004          0000B208  15603          LG    15,@lit_1947_1090 ; rd_strlcpy
0000B384                                   15604 @@gen_label1407 DS    0H
0000B384 05EF                              15605          BALR  14,15
0000B386                                   15606 @@gen_label1408 DS    0H
0000B386 E3F0 4100 0004          00000100  15607          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B38C 41F5 F000               00000000  15608          LA    15,0(5,15)
0000B390 E3F0 D388 0024          00000388  15609          STG   15,904(0,13)
0000B396 4110 D388               00000388  15610          LA    1,904(0,13)
0000B39A E3F0 C0B8 0004          0000B210  15611          LG    15,@lit_1947_1092 ; mtx_unlock
0000B3A0                                   15612 @@gen_label1409 DS    0H
0000B3A0 05EF                              15613          BALR  14,15
0000B3A2                                   15614 @@gen_label1410 DS    0H
0000B3A2 E3F0 40B8 0015          000000B8  15615          LGH   15,184(0,4)
0000B3A8 E3F0 D388 0024          00000388  15616          STG   15,904(0,13)
0000B3AE 4110 D388               00000388  15617          LA    1,904(0,13)
0000B3B2 E3F0 C0C0 0004          0000B218  15618          LG    15,@lit_1947_1093 ; rd_kafka_ApiKey2str
0000B3B8                                   15619 @@gen_label1411 DS    0H
0000B3B8 05EF                              15620          BALR  14,15
0000B3BA                                   15621 @@gen_label1412 DS    0H
0000B3BA B904 005F                         15622          LGR   5,15
0000B3BE 41F0 4078               00000078  15623          LA    15,120(0,4)
0000B3C2 E3F0 D388 0024          00000388  15624          STG   15,904(0,13)
0000B3C8 4110 D388               00000388  15625          LA    1,904(0,13)
0000B3CC E3F0 C0C8 0004          0000B220  15626          LG    15,@lit_1947_1094 ; rd_slice_offset
0000B3D2                                   15627 @@gen_label1413 DS    0H
0000B3D2 05EF                              15628          BALR  14,15
0000B3D4                                   15629 @@gen_label1414 DS    0H
0000B3D4 B904 006F                         15630          LGR   6,15
0000B3D8 E370 4098 0004          00000098  15631          LG    7,152(0,4)  ; offset of end in rd_slice_s
                                                                                                                           Page  312 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B3DE 41F0 4078               00000078  15632          LA    15,120(0,4)
0000B3E2 E3F0 D388 0024          00000388  15633          STG   15,904(0,13)
0000B3E8 4110 D388               00000388  15634          LA    1,904(0,13)
0000B3EC E3F0 C080 0004          0000B1D8  15635          LG    15,@lit_1947_1081 ; rd_slice_abs_offset
0000B3F2                                   15636 @@gen_label1415 DS    0H
0000B3F2 05EF                              15637          BALR  14,15
0000B3F4                                   15638 @@gen_label1416 DS    0H
0000B3F4 B90B 007F                         15639          SLGR  7,15
0000B3F8 E3F0 41E8 0002          000001E8  15640          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000B3FE 4780 C2B4               0000B40C  15641          BZ    @L1516
0000B402 E3F0 41E8 0004          000001E8  15642          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000B408 47F0 C2BE               0000B416  15643          B     @L1517
0000B40C                                   15644 @L1516   DS    0H
0000B40C E3F0 C098 0004          0000B1F0  15645          LG    15,@lit_1947_1082
0000B412 41F0 F380               00000380  15646          LA    15,896(0,15)
0000B416                                   15647 @L1517   DS    0H
0000B416 E310 4100 0004          00000100  15648          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B41C E310 1FD0 0004          00000FD0  15649          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000B422 4110 1210               00000210  15650          LA    1,528(0,1)
0000B426 E310 D388 0024          00000388  15651          STG   1,904(0,13)
0000B42C E310 4100 0004          00000100  15652          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B432 E310 1FD0 0004          00000FD0  15653          LG    1,4048(0,1)
0000B438 E310 D390 0024          00000390  15654          STG   1,912(0,13)
0000B43E 4110 D260               00000260  15655          LA    1,608(0,13)
0000B442 E310 D398 0024          00000398  15656          STG   1,920(0,13)
0000B448 B914 0018                         15657          LGFR  1,8
0000B44C E310 D3A0 0024          000003A0  15658          STG   1,928(0,13)
0000B452 D707 D3A8 D3A8 000003A8 000003A8  15659          XC    936(8,13),936(13)
0000B458 E310 C098 0004          0000B1F0  15660          LG    1,@lit_1947_1082
0000B45E 4180 13A4               000003A4  15661          LA    8,932(0,1)
0000B462 E380 D3B0 0024          000003B0  15662          STG   8,944(0,13)
0000B468 4110 13B0               000003B0  15663          LA    1,944(0,1)
0000B46C E310 D3B8 0024          000003B8  15664          STG   1,952(0,13)
0000B472 E350 D3C0 0024          000003C0  15665          STG   5,960(0,13)
0000B478 4810 40BA               000000BA  15666          LH    1,186(0,4)
0000B47C B914 0011                         15667          LGFR  1,1
0000B480 E310 D3C8 0024          000003C8  15668          STG   1,968(0,13)
0000B486 E360 D3D0 0024          000003D0  15669          STG   6,976(0,13)
0000B48C E310 4098 0004          00000098  15670          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000B492 E310 4090 000B          00000090  15671          SLG   1,144(0,4)
0000B498 E310 D3D8 0024          000003D8  15672          STG   1,984(0,13)
0000B49E E310 C090 0004          0000B1E8  15673          LG    1,@lit_1947_1083
0000B4A4 4110 1258               00000258  15674          LA    1,600(0,1)
0000B4A8 E310 D3E0 0024          000003E0  15675          STG   1,992(0,13)
0000B4AE E548 D3E8 0404          000003E8  15676          MVGHI 1000(13),1028
0000B4B4 E320 D3F0 0024          000003F0  15677          STG   2,1008(0,13)
0000B4BA E370 D3F8 0024          000003F8  15678          STG   7,1016(0,13)
0000B4C0 E3F0 D400 0024          00000400  15679          STG   15,1024(0,13)
0000B4C6 41F0 D160               00000160  15680          LA    15,352(0,13)
0000B4CA E3F0 D408 0024          00000408  15681          STG   15,1032(0,13)
                                                                                                                           Page  313 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B4D0 4110 D388               00000388  15682          LA    1,904(0,13)
0000B4D4 E3F0 C0D0 0004          0000B228  15683          LG    15,@lit_1947_1099 ; rd_kafka_log0
0000B4DA                                   15684 @@gen_label1418 DS    0H
0000B4DA 05EF                              15685          BALR  14,15
0000B4DC                                   15686 @@gen_label1419 DS    0H
0000B4DC                                   15687 @L1507   DS    0H
0000B4DC E54C 4188 FF65          00000188  15688          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000B4E2 E3C0 C0D8 001A          0000B230  15689          ALGF  12,@lit_region_diff_1947_1_7
                                           15690          DROP  12
                        0000EB2A           15691          USING @REGION_1947_7,12
0000B4E8 47F0 C164               0000EC8E  15692          B     @_err_parse@1947@4
                                           15693          DROP  12
                        0000B158           15694          USING @REGION_1947_1,12
0000B4EC                                   15695 @L1503   DS    0H
0000B4EC                                   15696 @L1499   DS    0H
0000B4EC E3F0 D0A8 0004          000000A8  15697          LG    15,168(0,13) ; _v
0000B4F2 E3F0 D0F0 0024          000000F0  15698          STG   15,240(0,13)
                                           15699 * ***           do { int32_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           15700 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           15701 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           15702 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           15703 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           15704 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                           15705 * 1029, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); }\
                                           15706 *  while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr),\
                                           15707 *  ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _\
                                           15708 * logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_st\
                                           15709 * rlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mt\
                                           15710 * x_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb\
                                           15711 * uf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lognam\
                                           15712 * e, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer under\
                                           15713 * flow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %\
                                           15714 * " "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiK\
                                           15715 * ey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion,\
                                           15716 *  rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end\
                                           15717 *  - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1029, __len0, ((&rk\
                                           15718 * buf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader))\
                                           15719 * , rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "i\
                                           15720 * ncorrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf\
                                           15721 * )->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while\
                                           15722 *  (0); } } while (0); } while (0); *(&hdr.Length) = (_v); } while (0)\
                                           15723 * ;
0000B4F8                                   15724 @L1518   DS    0H
0000B4F8                                   15725 @L1521   DS    0H
0000B4F8 A729 0004               00000004  15726          LGHI  2,4         ; 4
0000B4FC 41F0 4078               00000078  15727          LA    15,120(0,4)
0000B500 E3F0 D388 0024          00000388  15728          STG   15,904(0,13)
0000B506 41F0 D0B0               000000B0  15729          LA    15,176(0,13)
0000B50A E3F0 D390 0024          00000390  15730          STG   15,912(0,13)
0000B510 E320 D398 0024          00000398  15731          STG   2,920(0,13)
0000B516 4110 D388               00000388  15732          LA    1,904(0,13)
0000B51A E3F0 C078 0004          0000B1D0  15733          LG    15,@lit_1947_1080 ; rd_slice_read
                                                                                                                           Page  314 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B520                                   15734 @@gen_label1420 DS    0H
0000B520 05EF                              15735          BALR  14,15
0000B522                                   15736 @@gen_label1421 DS    0H
0000B522 B902 00FF                         15737          LTGR  15,15
0000B526 4770 C654               0000B7AC  15738          BNZ   @L1524
0000B52A                                   15739 @L1525   DS    0H
0000B52A E360 4098 0004          00000098  15740          LG    6,152(0,4)  ; offset of end in rd_slice_s
0000B530 41F0 4078               00000078  15741          LA    15,120(0,4)
0000B534 E3F0 D388 0024          00000388  15742          STG   15,904(0,13)
0000B53A 4110 D388               00000388  15743          LA    1,904(0,13)
0000B53E E3F0 C080 0004          0000B1D8  15744          LG    15,@lit_1947_1081 ; rd_slice_abs_offset
0000B544                                   15745 @@gen_label1423 DS    0H
0000B544 05EF                              15746          BALR  14,15
0000B546                                   15747 @@gen_label1424 DS    0H
0000B546 B90B 006F                         15748          SLGR  6,15
0000B54A B921 0026                         15749          CLGR  2,6
0000B54E 47D0 C654               0000B7AC  15750          BNH   @L1528
0000B552                                   15751 @L1529   DS    0H
0000B552 1288                              15752          LTR   8,8
0000B554 47D0 C644               0000B79C  15753          BNH   @L1532
0000B558                                   15754 @L1533   DS    0H
0000B558 E3F0 4100 0002          00000100  15755          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B55E 4770 C44C               0000B5A4  15756          BNZ   @L1536
0000B562 E3F0 C098 0004          0000B1F0  15757          LG    15,@lit_1947_1082
0000B568 4110 F2CE               000002CE  15758          LA    1,718(0,15)
0000B56C E310 D388 0024          00000388  15759          STG   1,904(0,13)
0000B572 E548 D390 0405          00000390  15760          MVGHI 912(13),1029
0000B578 E310 C090 0004          0000B1E8  15761          LG    1,@lit_1947_1083
0000B57E 4110 1258               00000258  15762          LA    1,600(0,1)
0000B582 E310 D398 0024          00000398  15763          STG   1,920(0,13)
0000B588 D707 D3A0 D3A0 000003A0 000003A0  15764          XC    928(8,13),928(13)
0000B58E 41F0 F362               00000362  15765          LA    15,866(0,15)
0000B592 E3F0 D3A8 0024          000003A8  15766          STG   15,936(0,13)
0000B598 4110 D388               00000388  15767          LA    1,904(0,13)
0000B59C E3F0 C088 0004          0000B1E0  15768          LG    15,@lit_1947_1084 ; rd_kafka_crash
0000B5A2                                   15769 @@gen_label1428 DS    0H
0000B5A2 05EF                              15770          BALR  14,15
0000B5A4                                   15771 @@gen_label1429 DS    0H
0000B5A4                                   15772 @L1536   DS    0H
0000B5A4 41F0 D160               00000160  15773          LA    15,352(0,13)
0000B5A8 E3F0 D388 0024          00000388  15774          STG   15,904(0,13)
0000B5AE E548 D390 0100          00000390  15775          MVGHI 912(13),256
0000B5B4 E3F0 C098 0004          0000B1F0  15776          LG    15,@lit_1947_1082
0000B5BA 41F0 F37C               0000037C  15777          LA    15,892(0,15)
0000B5BE E3F0 D398 0024          00000398  15778          STG   15,920(0,13)
0000B5C4 4110 D388               00000388  15779          LA    1,904(0,13)
0000B5C8 E3F0 C0A0 0004          0000B1F8  15780          LG    15,@lit_1947_1086 ; snprintf
0000B5CE                                   15781 @@gen_label1430 DS    0H
0000B5CE 05EF                              15782          BALR  14,15
0000B5D0                                   15783 @@gen_label1431 DS    0H
0000B5D0 41F0 D160               00000160  15784          LA    15,352(0,13)
0000B5D4 B904 001F                         15785          LGR   1,15
                                                                                                                           Page  315 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B5D8 A709 0000               00000000  15786          LGHI  0,0
0000B5DC                                   15787 @@gen_label1432 DS 0H
0000B5DC B25E 000F                         15788          SRST  0,15
0000B5E0 4710 C484               0000B5DC  15789          BC  1,@@gen_label1432
0000B5E4 B90B 0001                         15790          SLGR  0,1
0000B5E8 A70F 0002               00000002  15791          CGHI  0,2
0000B5EC 4770 C49C               0000B5F4  15792          BNE   @L1538
0000B5F0 9200 D160      00000160 00000000  15793          MVI   352(13),0
0000B5F4                                   15794 @L1537   DS    0H
0000B5F4                                   15795 @L1538   DS    0H
0000B5F4 E3F0 4100 0004          00000100  15796          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B5FA A759 1638               00001638  15797          LGHI  5,5688      ; 5688
0000B5FE 41F5 F000               00000000  15798          LA    15,0(5,15)
0000B602 E3F0 D388 0024          00000388  15799          STG   15,904(0,13)
0000B608 4110 D388               00000388  15800          LA    1,904(0,13)
0000B60C E3F0 C0A8 0004          0000B200  15801          LG    15,@lit_1947_1088 ; mtx_lock
0000B612                                   15802 @@gen_label1434 DS    0H
0000B612 05EF                              15803          BALR  14,15
0000B614                                   15804 @@gen_label1435 DS    0H
0000B614 41F0 D260               00000260  15805          LA    15,608(0,13)
0000B618 E3F0 D388 0024          00000388  15806          STG   15,904(0,13)
0000B61E E3F0 4100 0004          00000100  15807          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B624 A719 1630               00001630  15808          LGHI  1,5680      ; 5680
0000B628 E3F1 F000 0004          00000000  15809          LG    15,0(1,15)
0000B62E E3F0 D390 0024          00000390  15810          STG   15,912(0,13)
0000B634 E548 D398 0100          00000398  15811          MVGHI 920(13),256
0000B63A 4110 D388               00000388  15812          LA    1,904(0,13)
0000B63E E3F0 C0B0 0004          0000B208  15813          LG    15,@lit_1947_1090 ; rd_strlcpy
0000B644                                   15814 @@gen_label1436 DS    0H
0000B644 05EF                              15815          BALR  14,15
0000B646                                   15816 @@gen_label1437 DS    0H
0000B646 E3F0 4100 0004          00000100  15817          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B64C 41F5 F000               00000000  15818          LA    15,0(5,15)
0000B650 E3F0 D388 0024          00000388  15819          STG   15,904(0,13)
0000B656 4110 D388               00000388  15820          LA    1,904(0,13)
0000B65A E3F0 C0B8 0004          0000B210  15821          LG    15,@lit_1947_1092 ; mtx_unlock
0000B660                                   15822 @@gen_label1438 DS    0H
0000B660 05EF                              15823          BALR  14,15
0000B662                                   15824 @@gen_label1439 DS    0H
0000B662 E3F0 40B8 0015          000000B8  15825          LGH   15,184(0,4)
0000B668 E3F0 D388 0024          00000388  15826          STG   15,904(0,13)
0000B66E 4110 D388               00000388  15827          LA    1,904(0,13)
0000B672 E3F0 C0C0 0004          0000B218  15828          LG    15,@lit_1947_1093 ; rd_kafka_ApiKey2str
0000B678                                   15829 @@gen_label1440 DS    0H
0000B678 05EF                              15830          BALR  14,15
0000B67A                                   15831 @@gen_label1441 DS    0H
0000B67A B904 005F                         15832          LGR   5,15
0000B67E 41F0 4078               00000078  15833          LA    15,120(0,4)
0000B682 E3F0 D388 0024          00000388  15834          STG   15,904(0,13)
0000B688 4110 D388               00000388  15835          LA    1,904(0,13)
0000B68C E3F0 C0C8 0004          0000B220  15836          LG    15,@lit_1947_1094 ; rd_slice_offset
0000B692                                   15837 @@gen_label1442 DS    0H
                                                                                                                           Page  316 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B692 05EF                              15838          BALR  14,15
0000B694                                   15839 @@gen_label1443 DS    0H
0000B694 B904 006F                         15840          LGR   6,15
0000B698 E370 4098 0004          00000098  15841          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000B69E 41F0 4078               00000078  15842          LA    15,120(0,4)
0000B6A2 E3F0 D388 0024          00000388  15843          STG   15,904(0,13)
0000B6A8 4110 D388               00000388  15844          LA    1,904(0,13)
0000B6AC E3F0 C080 0004          0000B1D8  15845          LG    15,@lit_1947_1081 ; rd_slice_abs_offset
0000B6B2                                   15846 @@gen_label1444 DS    0H
0000B6B2 05EF                              15847          BALR  14,15
0000B6B4                                   15848 @@gen_label1445 DS    0H
0000B6B4 B90B 007F                         15849          SLGR  7,15
0000B6B8 E3F0 41E8 0002          000001E8  15850          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000B6BE 4780 C574               0000B6CC  15851          BZ    @L1541
0000B6C2 E3F0 41E8 0004          000001E8  15852          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000B6C8 47F0 C57E               0000B6D6  15853          B     @L1542
0000B6CC                                   15854 @L1541   DS    0H
0000B6CC E3F0 C098 0004          0000B1F0  15855          LG    15,@lit_1947_1082
0000B6D2 41F0 F380               00000380  15856          LA    15,896(0,15)
0000B6D6                                   15857 @L1542   DS    0H
0000B6D6 E310 4100 0004          00000100  15858          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B6DC E310 1FD0 0004          00000FD0  15859          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000B6E2 4110 1210               00000210  15860          LA    1,528(0,1)
0000B6E6 E310 D388 0024          00000388  15861          STG   1,904(0,13)
0000B6EC E310 4100 0004          00000100  15862          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B6F2 E310 1FD0 0004          00000FD0  15863          LG    1,4048(0,1)
0000B6F8 E310 D390 0024          00000390  15864          STG   1,912(0,13)
0000B6FE 4110 D260               00000260  15865          LA    1,608(0,13)
0000B702 E310 D398 0024          00000398  15866          STG   1,920(0,13)
0000B708 B914 0018                         15867          LGFR  1,8
0000B70C E310 D3A0 0024          000003A0  15868          STG   1,928(0,13)
0000B712 D707 D3A8 D3A8 000003A8 000003A8  15869          XC    936(8,13),936(13)
0000B718 E310 C098 0004          0000B1F0  15870          LG    1,@lit_1947_1082
0000B71E 4180 13A4               000003A4  15871          LA    8,932(0,1)
0000B722 E380 D3B0 0024          000003B0  15872          STG   8,944(0,13)
0000B728 4110 13B0               000003B0  15873          LA    1,944(0,1)
0000B72C E310 D3B8 0024          000003B8  15874          STG   1,952(0,13)
0000B732 E350 D3C0 0024          000003C0  15875          STG   5,960(0,13)
0000B738 4810 40BA               000000BA  15876          LH    1,186(0,4)
0000B73C B914 0011                         15877          LGFR  1,1
0000B740 E310 D3C8 0024          000003C8  15878          STG   1,968(0,13)
0000B746 E360 D3D0 0024          000003D0  15879          STG   6,976(0,13)
0000B74C E310 4098 0004          00000098  15880          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000B752 E310 4090 000B          00000090  15881          SLG   1,144(0,4)
0000B758 E310 D3D8 0024          000003D8  15882          STG   1,984(0,13)
0000B75E E310 C090 0004          0000B1E8  15883          LG    1,@lit_1947_1083
0000B764 4110 1258               00000258  15884          LA    1,600(0,1)
0000B768 E310 D3E0 0024          000003E0  15885          STG   1,992(0,13)
0000B76E E548 D3E8 0405          000003E8  15886          MVGHI 1000(13),1029
0000B774 E320 D3F0 0024          000003F0  15887          STG   2,1008(0,13)
                                                                                                                           Page  317 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B77A E370 D3F8 0024          000003F8  15888          STG   7,1016(0,13)
0000B780 E3F0 D400 0024          00000400  15889          STG   15,1024(0,13)
0000B786 41F0 D160               00000160  15890          LA    15,352(0,13)
0000B78A E3F0 D408 0024          00000408  15891          STG   15,1032(0,13)
0000B790 4110 D388               00000388  15892          LA    1,904(0,13)
0000B794 E3F0 C0D0 0004          0000B228  15893          LG    15,@lit_1947_1099 ; rd_kafka_log0
0000B79A                                   15894 @@gen_label1447 DS    0H
0000B79A 05EF                              15895          BALR  14,15
0000B79C                                   15896 @@gen_label1448 DS    0H
0000B79C                                   15897 @L1532   DS    0H
0000B79C E54C 4188 FF65          00000188  15898          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000B7A2 E3C0 C0D8 001A          0000B230  15899          ALGF  12,@lit_region_diff_1947_1_7
                                           15900          DROP  12
                        0000EB2A           15901          USING @REGION_1947_7,12
0000B7A8 47F0 C164               0000EC8E  15902          B     @_err_parse@1947@4
                                           15903          DROP  12
                        0000B158           15904          USING @REGION_1947_1,12
0000B7AC                                   15905 @L1528   DS    0H
0000B7AC                                   15906 @L1524   DS    0H
0000B7AC 58F0 D0B0               000000B0  15907          L     15,176(0,13) ; _v
0000B7B0 50F0 D0F8               000000F8  15908          ST    15,248(0,13) ; offset of Length in msgset_v2_hdr
                                           15909 * ***           len_start  = rd_slice_offset(&rkbuf->rkbuf_reader);
0000B7B4 41F0 4078               00000078  15910          LA    15,120(0,4)
0000B7B8 E3F0 D388 0024          00000388  15911          STG   15,904(0,13)
0000B7BE 4110 D388               00000388  15912          LA    1,904(0,13)
0000B7C2 E3F0 C0C8 0004          0000B220  15913          LG    15,@lit_1947_1094 ; rd_slice_offset
0000B7C8                                   15914 @@gen_label1449 DS    0H
0000B7C8 05EF                              15915          BALR  14,15
0000B7CA                                   15916 @@gen_label1450 DS    0H
0000B7CA B904 006F                         15917          LGR   6,15
                                           15918 * ***
                                           15919 * ***           if (((hdr.Length < (8+4+4+1+4+2+4+8+8+8+2+4+4) - 8 - 4\
                                           15920 * )))
0000B7CE E55C D0F8 0031          000000F8  15921          CHSI  248(13),49
0000B7D4 4740 C68A               0000B7E2  15922          BL    *+14  Around region break
0000B7D8 E3C0 C0DC 001A          0000B234  15923          ALGF  12,@lit_region_diff_1947_1_2
                                           15924          DROP  12
                        0000BA1C           15925          USING @REGION_1947_2,12
0000B7DE 47F0 C134               0000BB50  15926          B     @L1563
                                           15927          DROP  12
                        0000B158           15928          USING @REGION_1947_1,12
                                           15929 * ***                   do { if (log_decode_errors > 0) { do { if (((!\
                                           15930 * (rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\
                                           15931 * \rdkafka_msgset_reader.c",1033, __FUNCTION__, (((void *)0)), "assert\
                                           15932 * : " "rkbuf->rkbuf_rkb"); } while (0); do { char _logname[256]; mtx_l\
                                           15933 * ock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logname, rkb\
                                           15934 * uf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkbuf->r\
                                           15935 * kbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb\
                                           15936 * _rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decode_error\
                                           15937 * s, 0x0, "PROTOERR", "Protocol parse failure for %s v%hd%s " "at %" "\
                                           15938 * zu" "/%" "zu" " (%s:%i) " "(incorrect broker.version.fallback?)", rd\
                                           15939 * _kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.\
                                                                                                                           Page  318 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           15940 * ApiVersion, (rkbuf->rkbuf_flags&0x40? "(flex)":""), rd_slice_offset(\
                                           15941 * &rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf\
                                           15942 * _reader)->start), __FUNCTION__, 1033); } while (0); do { char _logna\
                                           15943 * me[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy\
                                           15944 * (_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unl\
                                           15945 * ock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->r\
                                           15946 * kbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, lo\
                                           15947 * g_decode_errors, 0x0, "PROTOERR", "%s [%" "d" "] " "MessageSet at of\
                                           15948 * fset %" "lld" " length %" "d" " < header size %d", rktp->rktp_rkt->r\
                                           15949 * kt_topic->str, rktp->rktp_partition, hdr.BaseOffset, hdr.Length, (8+\
                                           15950 * 4+4+1+4+2+4+8+8+8+2+4+4) - 8 - 4); } while (0); } (rkbuf)->rkbuf_err\
                                           15951 *  = RD_KAFKA_RESP_ERR__BAD_MSG; goto err_parse; } while (0);
0000B7E2                                   15952 @L1544   DS    0H
0000B7E2 1288                              15953          LTR   8,8
0000B7E4 4720 C69A               0000B7F2  15954          BH    *+14  Around region break
0000B7E8 E3C0 C0DC 001A          0000B234  15955          ALGF  12,@lit_region_diff_1947_1_2
                                           15956          DROP  12
                        0000BA1C           15957          USING @REGION_1947_2,12
0000B7EE 47F0 C0AA               0000BAC6  15958          B     @L1547
                                           15959          DROP  12
                        0000B158           15960          USING @REGION_1947_1,12
0000B7F2                                   15961 @L1548   DS    0H
0000B7F2 E3F0 4100 0002          00000100  15962          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B7F8 4770 C6E6               0000B83E  15963          BNZ   @L1551
0000B7FC E3F0 C098 0004          0000B1F0  15964          LG    15,@lit_1947_1082
0000B802 4110 F2CE               000002CE  15965          LA    1,718(0,15)
0000B806 E310 D388 0024          00000388  15966          STG   1,904(0,13)
0000B80C E548 D390 0409          00000390  15967          MVGHI 912(13),1033
0000B812 E310 C090 0004          0000B1E8  15968          LG    1,@lit_1947_1083
0000B818 4110 1258               00000258  15969          LA    1,600(0,1)
0000B81C E310 D398 0024          00000398  15970          STG   1,920(0,13)
0000B822 D707 D3A0 D3A0 000003A0 000003A0  15971          XC    928(8,13),928(13)
0000B828 41F0 F362               00000362  15972          LA    15,866(0,15)
0000B82C E3F0 D3A8 0024          000003A8  15973          STG   15,936(0,13)
0000B832 4110 D388               00000388  15974          LA    1,904(0,13)
0000B836 E3F0 C088 0004          0000B1E0  15975          LG    15,@lit_1947_1084 ; rd_kafka_crash
0000B83C                                   15976 @@gen_label1454 DS    0H
0000B83C 05EF                              15977          BALR  14,15
0000B83E                                   15978 @@gen_label1455 DS    0H
0000B83E                                   15979 @L1551   DS    0H
0000B83E                                   15980 @L1552   DS    0H
0000B83E E3F0 4100 0004          00000100  15981          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B844 A729 1638               00001638  15982          LGHI  2,5688      ; 5688
0000B848 41F2 F000               00000000  15983          LA    15,0(2,15)
0000B84C E3F0 D388 0024          00000388  15984          STG   15,904(0,13)
0000B852 4110 D388               00000388  15985          LA    1,904(0,13)
0000B856 E3F0 C0A8 0004          0000B200  15986          LG    15,@lit_1947_1088 ; mtx_lock
0000B85C                                   15987 @@gen_label1456 DS    0H
0000B85C 05EF                              15988          BALR  14,15
0000B85E                                   15989 @@gen_label1457 DS    0H
0000B85E 41F0 D160               00000160  15990          LA    15,352(0,13)
0000B862 E3F0 D388 0024          00000388  15991          STG   15,904(0,13)
                                                                                                                           Page  319 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B868 E3F0 4100 0004          00000100  15992          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B86E A719 1630               00001630  15993          LGHI  1,5680      ; 5680
0000B872 E3F1 F000 0004          00000000  15994          LG    15,0(1,15)
0000B878 E3F0 D390 0024          00000390  15995          STG   15,912(0,13)
0000B87E E548 D398 0100          00000398  15996          MVGHI 920(13),256
0000B884 4110 D388               00000388  15997          LA    1,904(0,13)
0000B888 E3F0 C0B0 0004          0000B208  15998          LG    15,@lit_1947_1090 ; rd_strlcpy
0000B88E                                   15999 @@gen_label1458 DS    0H
0000B88E 05EF                              16000          BALR  14,15
0000B890                                   16001 @@gen_label1459 DS    0H
0000B890 E3F0 4100 0004          00000100  16002          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B896 41F2 F000               00000000  16003          LA    15,0(2,15)
0000B89A E3F0 D388 0024          00000388  16004          STG   15,904(0,13)
0000B8A0 4110 D388               00000388  16005          LA    1,904(0,13)
0000B8A4 E3F0 C0B8 0004          0000B210  16006          LG    15,@lit_1947_1092 ; mtx_unlock
0000B8AA                                   16007 @@gen_label1460 DS    0H
0000B8AA 05EF                              16008          BALR  14,15
0000B8AC                                   16009 @@gen_label1461 DS    0H
0000B8AC E3F0 40B8 0015          000000B8  16010          LGH   15,184(0,4)
0000B8B2 E3F0 D388 0024          00000388  16011          STG   15,904(0,13)
0000B8B8 4110 D388               00000388  16012          LA    1,904(0,13)
0000B8BC E3F0 C0C0 0004          0000B218  16013          LG    15,@lit_1947_1093 ; rd_kafka_ApiKey2str
0000B8C2                                   16014 @@gen_label1462 DS    0H
0000B8C2 05EF                              16015          BALR  14,15
0000B8C4                                   16016 @@gen_label1463 DS    0H
0000B8C4 B904 002F                         16017          LGR   2,15
0000B8C8 9140 4023      00000023 00000040  16018          TM    35(4),64
0000B8CC 4780 C786               0000B8DE  16019          BZ    @L1555
0000B8D0 E3F0 C098 0004          0000B1F0  16020          LG    15,@lit_1947_1082
0000B8D6 4160 F42A               0000042A  16021          LA    6,1066(0,15)
0000B8DA 47F0 C790               0000B8E8  16022          B     @L1556
0000B8DE                                   16023 @L1555   DS    0H
0000B8DE E3F0 C098 0004          0000B1F0  16024          LG    15,@lit_1947_1082
0000B8E4 4160 F0A8               000000A8  16025          LA    6,168(0,15)
0000B8E8                                   16026 @L1556   DS    0H
0000B8E8 41F0 4078               00000078  16027          LA    15,120(0,4)
0000B8EC E3F0 D388 0024          00000388  16028          STG   15,904(0,13)
0000B8F2 4110 D388               00000388  16029          LA    1,904(0,13)
0000B8F6 E3F0 C0C8 0004          0000B220  16030          LG    15,@lit_1947_1094 ; rd_slice_offset
0000B8FC                                   16031 @@gen_label1465 DS    0H
0000B8FC 05EF                              16032          BALR  14,15
0000B8FE                                   16033 @@gen_label1466 DS    0H
0000B8FE E310 4100 0004          00000100  16034          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B904 E310 1FD0 0004          00000FD0  16035          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000B90A 4110 1210               00000210  16036          LA    1,528(0,1)
0000B90E E310 D388 0024          00000388  16037          STG   1,904(0,13)
0000B914 E310 4100 0004          00000100  16038          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B91A E310 1FD0 0004          00000FD0  16039          LG    1,4048(0,1)
0000B920 E310 D390 0024          00000390  16040          STG   1,912(0,13)
0000B926 4110 D160               00000160  16041          LA    1,352(0,13)
0000B92A E310 D398 0024          00000398  16042          STG   1,920(0,13)
0000B930 B914 0018                         16043          LGFR  1,8
                                                                                                                           Page  320 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B934 E310 D3A0 0024          000003A0  16044          STG   1,928(0,13)
0000B93A D707 D3A8 D3A8 000003A8 000003A8  16045          XC    936(8,13),936(13)
0000B940 E310 C098 0004          0000B1F0  16046          LG    1,@lit_1947_1082
0000B946 4170 1432               00000432  16047          LA    7,1074(0,1)
0000B94A E370 D3B0 0024          000003B0  16048          STG   7,944(0,13)
0000B950 4110 143C               0000043C  16049          LA    1,1084(0,1)
0000B954 EB12 D3B8 0024          000003B8  16050          STMG  1,2,952(13)
0000B95A 4810 40BA               000000BA  16051          LH    1,186(0,4)
0000B95E B914 0011                         16052          LGFR  1,1
0000B962 E310 D3C8 0024          000003C8  16053          STG   1,968(0,13)
0000B968 E360 D3D0 0024          000003D0  16054          STG   6,976(0,13)
0000B96E E3F0 D3D8 0024          000003D8  16055          STG   15,984(0,13)
0000B974 E3F0 4098 0004          00000098  16056          LG    15,152(0,4) ; offset of end in rd_slice_s
0000B97A E3F0 4090 000B          00000090  16057          SLG   15,144(0,4)
0000B980 E3F0 D3E0 0024          000003E0  16058          STG   15,992(0,13)
0000B986 E3F0 C090 0004          0000B1E8  16059          LG    15,@lit_1947_1083
0000B98C 41F0 F258               00000258  16060          LA    15,600(0,15)
0000B990 E3F0 D3E8 0024          000003E8  16061          STG   15,1000(0,13)
0000B996 E548 D3F0 0409          000003F0  16062          MVGHI 1008(13),1033
0000B99C 4110 D388               00000388  16063          LA    1,904(0,13)
0000B9A0 E3F0 C0D0 0004          0000B228  16064          LG    15,@lit_1947_1099 ; rd_kafka_log0
0000B9A6                                   16065 @@gen_label1467 DS    0H
0000B9A6 05EF                              16066          BALR  14,15
0000B9A8                                   16067 @@gen_label1468 DS    0H
0000B9A8                                   16068 @L1557   DS    0H
0000B9A8 E3F0 4100 0004          00000100  16069          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B9AE A729 1638               00001638  16070          LGHI  2,5688      ; 5688
0000B9B2 41F2 F000               00000000  16071          LA    15,0(2,15)
0000B9B6 E3F0 D388 0024          00000388  16072          STG   15,904(0,13)
0000B9BC 4110 D388               00000388  16073          LA    1,904(0,13)
0000B9C0 E3F0 C0A8 0004          0000B200  16074          LG    15,@lit_1947_1088 ; mtx_lock
0000B9C6                                   16075 @@gen_label1469 DS    0H
0000B9C6 05EF                              16076          BALR  14,15
0000B9C8                                   16077 @@gen_label1470 DS    0H
0000B9C8 41F0 D160               00000160  16078          LA    15,352(0,13)
0000B9CC E3F0 D388 0024          00000388  16079          STG   15,904(0,13)
0000B9D2 E3F0 4100 0004          00000100  16080          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000B9D8 A719 1630               00001630  16081          LGHI  1,5680      ; 5680
0000B9DC E3F1 F000 0004          00000000  16082          LG    15,0(1,15)
0000B9E2 E3F0 D390 0024          00000390  16083          STG   15,912(0,13)
0000B9E8 E548 D398 0100          00000398  16084          MVGHI 920(13),256
0000B9EE 4110 D388               00000388  16085          LA    1,904(0,13)
0000B9F2 E3F0 C0B0 0004          0000B208  16086          LG    15,@lit_1947_1090 ; rd_strlcpy
0000B9F8                                   16087 @@gen_label1471 DS    0H
0000B9F8 05EF                              16088          BALR  14,15
0000B9FA                                   16089 @@gen_label1472 DS    0H
0000B9FA E3F0 4100 0004          00000100  16090          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000BA00 41F2 F000               00000000  16091          LA    15,0(2,15)
0000BA04 E3F0 D388 0024          00000388  16092          STG   15,904(0,13)
0000BA0A 4110 D388               00000388  16093          LA    1,904(0,13)
0000BA0E E3F0 C0B8 0004          0000B210  16094          LG    15,@lit_1947_1092 ; mtx_unlock
0000BA14                                   16095 @@gen_label1473 DS    0H
                                                                                                                           Page  321 
  Active Usings: @REGION_1947_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BA14 05EF                              16096          BALR  14,15
0000BA16                                   16097 @@gen_label1474 DS    0H
0000BA16 E3C0 C0DC 001A          0000B234  16098          ALGF  12,@lit_region_diff_1947_1_2
0000BA1C                                   16099 @REGION_1947_2 DS 0H
                                           16100          DROP  12
                        0000BA1C           16101          USING @REGION_1947_2,12
0000BA1C E3F0 4100 0004          00000100  16102          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000BA22 E3F0 FFD0 0004          00000FD0  16103          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000BA28 41F0 F210               00000210  16104          LA    15,528(0,15)
0000BA2C E3F0 D388 0024          00000388  16105          STG   15,904(0,13)
0000BA32 E3F0 4100 0004          00000100  16106          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000BA38 E3F0 FFD0 0004          00000FD0  16107          LG    15,4048(0,15)
0000BA3E E3F0 D390 0024          00000390  16108          STG   15,912(0,13)
0000BA44 41F0 D160               00000160  16109          LA    15,352(0,13)
0000BA48 E3F0 D398 0024          00000398  16110          STG   15,920(0,13)
0000BA4E B914 00F8                         16111          LGFR  15,8
0000BA52 E3F0 D3A0 0024          000003A0  16112          STG   15,928(0,13)
0000BA58 D707 D3A8 D3A8 000003A8 000003A8  16113          XC    936(8,13),936(13)
0000BA5E E3F0 C0C4 0004          0000BAE0  16114          LG    15,@lit_1947_1144
0000BA64 4110 F432               00000432  16115          LA    1,1074(0,15)
0000BA68 E310 D3B0 0024          000003B0  16116          STG   1,944(0,13)
0000BA6E 41F0 F7E2               000007E2  16117          LA    15,2018(0,15)
0000BA72 E3F0 D3B8 0024          000003B8  16118          STG   15,952(0,13)
0000BA78 E3F0 5060 0004          00000060  16119          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000BA7E E3F0 F080 0004          00000080  16120          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000BA84 E3F0 F008 0004          00000008  16121          LG    15,8(0,15)
0000BA8A E3F0 D3C0 0024          000003C0  16122          STG   15,960(0,13)
0000BA90 E3F0 5068 0014          00000068  16123          LGF   15,104(0,5)
0000BA96 E3F0 D3C8 0024          000003C8  16124          STG   15,968(0,13)
0000BA9C E3F0 D0F0 0004          000000F0  16125          LG    15,240(0,13)
0000BAA2 E3F0 D3D0 0024          000003D0  16126          STG   15,976(0,13)
0000BAA8 E3F0 D0F8 0014          000000F8  16127          LGF   15,248(0,13)
0000BAAE E3F0 D3D8 0024          000003D8  16128          STG   15,984(0,13)
0000BAB4 E548 D3E0 0031          000003E0  16129          MVGHI 992(13),49
0000BABA 4110 D388               00000388  16130          LA    1,904(0,13)
0000BABE E3F0 C0BC 0004          0000BAD8  16131          LG    15,@lit_1947_1145 ; rd_kafka_log0
0000BAC4                                   16132 @@gen_label1475 DS    0H
0000BAC4 05EF                              16133          BALR  14,15
0000BAC6                                   16134 @@gen_label1476 DS    0H
0000BAC6                                   16135 @L1547   DS    0H
0000BAC6 E54C 4188 FF39          00000188  16136          MVHI  392(4),-199 ; offset of rkbuf_err in rd_kafka_buf_s
0000BACC E3C0 C0CC 001A          0000BAE8  16137          ALGF  12,@lit_region_diff_1947_2_7
                                           16138          DROP  12
                        0000EB2A           16139          USING @REGION_1947_7,12
0000BAD2 47F0 C164               0000EC8E  16140          B     @_err_parse@1947@4
                                           16141          DROP  12
                        0000BA1C           16142          USING @REGION_1947_2,12
0000BAD8                                   16143          DS    0D
0000BAD8 0000000000000000                  16144 @lit_1947_1145 DC AD(rd_kafka_log0)
0000BAE0 0000000000012AB8                  16145 @lit_1947_1144 DC AD(@strings@)
0000BAE8 0000310E                          16146 @lit_region_diff_1947_2_7  DC A(@REGION_1947_7-@REGION_1947_2)
0000BAEC 00000000
                                                                                                                           Page  322 
  Active Usings: @REGION_1947_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BAF0 0000000000000000                  16147 @lit_1947_1147 DC AD(rd_slice_read)
0000BAF8 0000000000001210                  16148 @lit_1947_1148 DC AD(rd_slice_abs_offset)
0000BB00 0000000000000000                  16149 @lit_1947_1151 DC AD(rd_kafka_crash)
0000BB08 0000000000012808                  16150 @lit_1947_1150 DC AD(@DATA)
0000BB10 0000000000000000                  16151 @lit_1947_1153 DC AD(snprintf)
0000BB18 0000000000000000                  16152 @lit_1947_1155 DC AD(mtx_lock)
0000BB20 0000000000001668                  16153 @lit_1947_1157 DC AD(rd_strlcpy)
0000BB28 0000000000000000                  16154 @lit_1947_1159 DC AD(mtx_unlock)
0000BB30 00000000000014D0                  16155 @lit_1947_1160 DC AD(rd_kafka_$Api$Key2str)
0000BB38 00000000000012B8                  16156 @lit_1947_1161 DC AD(rd_slice_offset)
0000BB40 00000A02                          16157 @lit_region_diff_1947_2_3  DC A(@REGION_1947_3-@REGION_1947_2)
0000BB44 00000000
0000BB48 0000000000000000                  16158 @lit_1947_1209 DC AD(rd_slice_narrow_copy_relative)
                                           16159 * ***
                                           16160 * ***   # 1042 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           16161 * ***           do { int32_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           16162 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           16163 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           16164 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           16165 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           16166 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                           16167 * 1042, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); }\
                                           16168 *  while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr),\
                                           16169 *  ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _\
                                           16170 * logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_st\
                                           16171 * rlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mt\
                                           16172 * x_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb\
                                           16173 * uf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lognam\
                                           16174 * e, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer under\
                                           16175 * flow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %\
                                           16176 * " "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiK\
                                           16177 * ey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion,\
                                           16178 *  rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end\
                                           16179 *  - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1042, __len0, ((&rk\
                                           16180 * buf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader))\
                                           16181 * , rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "i\
                                           16182 * ncorrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf\
                                           16183 * )->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while\
                                           16184 *  (0); } } while (0); } while (0); *(&hdr.PartitionLeaderEpoch) = (_v\
                                           16185 * ); } while (0);
0000BB50                                   16186 @L1563   DS    0H
0000BB50 A729 0004               00000004  16187          LGHI  2,4         ; 4
0000BB54 41F0 4078               00000078  16188          LA    15,120(0,4)
0000BB58 E3F0 D388 0024          00000388  16189          STG   15,904(0,13)
0000BB5E 41F0 D0B4               000000B4  16190          LA    15,180(0,13)
0000BB62 E3F0 D390 0024          00000390  16191          STG   15,912(0,13)
0000BB68 E320 D398 0024          00000398  16192          STG   2,920(0,13)
0000BB6E 4110 D388               00000388  16193          LA    1,904(0,13)
0000BB72 E3F0 C0D4 0004          0000BAF0  16194          LG    15,@lit_1947_1147 ; rd_slice_read
0000BB78                                   16195 @@gen_label1477 DS    0H
0000BB78 05EF                              16196          BALR  14,15
0000BB7A                                   16197 @@gen_label1478 DS    0H
                                                                                                                           Page  323 
  Active Usings: @REGION_1947_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BB7A B902 00FF                         16198          LTGR  15,15
0000BB7E 4770 C3E8               0000BE04  16199          BNZ   @L1566
0000BB82                                   16200 @L1567   DS    0H
0000BB82 E370 4098 0004          00000098  16201          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000BB88 41F0 4078               00000078  16202          LA    15,120(0,4)
0000BB8C E3F0 D388 0024          00000388  16203          STG   15,904(0,13)
0000BB92 4110 D388               00000388  16204          LA    1,904(0,13)
0000BB96 E3F0 C0DC 0004          0000BAF8  16205          LG    15,@lit_1947_1148 ; rd_slice_abs_offset
0000BB9C                                   16206 @@gen_label1480 DS    0H
0000BB9C 05EF                              16207          BALR  14,15
0000BB9E                                   16208 @@gen_label1481 DS    0H
0000BB9E B90B 007F                         16209          SLGR  7,15
0000BBA2 B921 0027                         16210          CLGR  2,7
0000BBA6 47D0 C3E8               0000BE04  16211          BNH   @L1570
0000BBAA                                   16212 @L1571   DS    0H
0000BBAA 1288                              16213          LTR   8,8
0000BBAC 47D0 C3D8               0000BDF4  16214          BNH   @L1574
0000BBB0                                   16215 @L1575   DS    0H
0000BBB0 E3F0 4100 0002          00000100  16216          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000BBB6 4770 C1E0               0000BBFC  16217          BNZ   @L1578
0000BBBA E3F0 C0C4 0004          0000BAE0  16218          LG    15,@lit_1947_1144
0000BBC0 4110 F2CE               000002CE  16219          LA    1,718(0,15)
0000BBC4 E310 D388 0024          00000388  16220          STG   1,904(0,13)
0000BBCA E548 D390 0412          00000390  16221          MVGHI 912(13),1042
0000BBD0 E310 C0EC 0004          0000BB08  16222          LG    1,@lit_1947_1150
0000BBD6 4110 1258               00000258  16223          LA    1,600(0,1)
0000BBDA E310 D398 0024          00000398  16224          STG   1,920(0,13)
0000BBE0 D707 D3A0 D3A0 000003A0 000003A0  16225          XC    928(8,13),928(13)
0000BBE6 41F0 F362               00000362  16226          LA    15,866(0,15)
0000BBEA E3F0 D3A8 0024          000003A8  16227          STG   15,936(0,13)
0000BBF0 4110 D388               00000388  16228          LA    1,904(0,13)
0000BBF4 E3F0 C0E4 0004          0000BB00  16229          LG    15,@lit_1947_1151 ; rd_kafka_crash
0000BBFA                                   16230 @@gen_label1485 DS    0H
0000BBFA 05EF                              16231          BALR  14,15
0000BBFC                                   16232 @@gen_label1486 DS    0H
0000BBFC                                   16233 @L1578   DS    0H
0000BBFC 41F0 D160               00000160  16234          LA    15,352(0,13)
0000BC00 E3F0 D388 0024          00000388  16235          STG   15,904(0,13)
0000BC06 E548 D390 0100          00000390  16236          MVGHI 912(13),256
0000BC0C E3F0 C0C4 0004          0000BAE0  16237          LG    15,@lit_1947_1144
0000BC12 41F0 F37C               0000037C  16238          LA    15,892(0,15)
0000BC16 E3F0 D398 0024          00000398  16239          STG   15,920(0,13)
0000BC1C 4110 D388               00000388  16240          LA    1,904(0,13)
0000BC20 E3F0 C0F4 0004          0000BB10  16241          LG    15,@lit_1947_1153 ; snprintf
0000BC26                                   16242 @@gen_label1487 DS    0H
0000BC26 05EF                              16243          BALR  14,15
0000BC28                                   16244 @@gen_label1488 DS    0H
0000BC28 41F0 D160               00000160  16245          LA    15,352(0,13)
0000BC2C B904 001F                         16246          LGR   1,15
0000BC30 A709 0000               00000000  16247          LGHI  0,0
0000BC34                                   16248 @@gen_label1489 DS 0H
0000BC34 B25E 000F                         16249          SRST  0,15
                                                                                                                           Page  324 
  Active Usings: @REGION_1947_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BC38 4710 C218               0000BC34  16250          BC  1,@@gen_label1489
0000BC3C B90B 0001                         16251          SLGR  0,1
0000BC40 A70F 0002               00000002  16252          CGHI  0,2
0000BC44 4770 C230               0000BC4C  16253          BNE   @L1580
0000BC48 9200 D160      00000160 00000000  16254          MVI   352(13),0
0000BC4C                                   16255 @L1579   DS    0H
0000BC4C                                   16256 @L1580   DS    0H
0000BC4C E3F0 4100 0004          00000100  16257          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000BC52 A759 1638               00001638  16258          LGHI  5,5688      ; 5688
0000BC56 41F5 F000               00000000  16259          LA    15,0(5,15)
0000BC5A E3F0 D388 0024          00000388  16260          STG   15,904(0,13)
0000BC60 4110 D388               00000388  16261          LA    1,904(0,13)
0000BC64 E3F0 C0FC 0004          0000BB18  16262          LG    15,@lit_1947_1155 ; mtx_lock
0000BC6A                                   16263 @@gen_label1491 DS    0H
0000BC6A 05EF                              16264          BALR  14,15
0000BC6C                                   16265 @@gen_label1492 DS    0H
0000BC6C 41F0 D260               00000260  16266          LA    15,608(0,13)
0000BC70 E3F0 D388 0024          00000388  16267          STG   15,904(0,13)
0000BC76 E3F0 4100 0004          00000100  16268          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000BC7C A719 1630               00001630  16269          LGHI  1,5680      ; 5680
0000BC80 E3F1 F000 0004          00000000  16270          LG    15,0(1,15)
0000BC86 E3F0 D390 0024          00000390  16271          STG   15,912(0,13)
0000BC8C E548 D398 0100          00000398  16272          MVGHI 920(13),256
0000BC92 4110 D388               00000388  16273          LA    1,904(0,13)
0000BC96 E3F0 C104 0004          0000BB20  16274          LG    15,@lit_1947_1157 ; rd_strlcpy
0000BC9C                                   16275 @@gen_label1493 DS    0H
0000BC9C 05EF                              16276          BALR  14,15
0000BC9E                                   16277 @@gen_label1494 DS    0H
0000BC9E E3F0 4100 0004          00000100  16278          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000BCA4 41F5 F000               00000000  16279          LA    15,0(5,15)
0000BCA8 E3F0 D388 0024          00000388  16280          STG   15,904(0,13)
0000BCAE 4110 D388               00000388  16281          LA    1,904(0,13)
0000BCB2 E3F0 C10C 0004          0000BB28  16282          LG    15,@lit_1947_1159 ; mtx_unlock
0000BCB8                                   16283 @@gen_label1495 DS    0H
0000BCB8 05EF                              16284          BALR  14,15
0000BCBA                                   16285 @@gen_label1496 DS    0H
0000BCBA E3F0 40B8 0015          000000B8  16286          LGH   15,184(0,4)
0000BCC0 E3F0 D388 0024          00000388  16287          STG   15,904(0,13)
0000BCC6 4110 D388               00000388  16288          LA    1,904(0,13)
0000BCCA E3F0 C114 0004          0000BB30  16289          LG    15,@lit_1947_1160 ; rd_kafka_ApiKey2str
0000BCD0                                   16290 @@gen_label1497 DS    0H
0000BCD0 05EF                              16291          BALR  14,15
0000BCD2                                   16292 @@gen_label1498 DS    0H
0000BCD2 B904 005F                         16293          LGR   5,15
0000BCD6 41F0 4078               00000078  16294          LA    15,120(0,4)
0000BCDA E3F0 D388 0024          00000388  16295          STG   15,904(0,13)
0000BCE0 4110 D388               00000388  16296          LA    1,904(0,13)
0000BCE4 E3F0 C11C 0004          0000BB38  16297          LG    15,@lit_1947_1161 ; rd_slice_offset
0000BCEA                                   16298 @@gen_label1499 DS    0H
0000BCEA 05EF                              16299          BALR  14,15
0000BCEC                                   16300 @@gen_label1500 DS    0H
0000BCEC B904 006F                         16301          LGR   6,15
                                                                                                                           Page  325 
  Active Usings: @REGION_1947_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BCF0 E370 4098 0004          00000098  16302          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000BCF6 41F0 4078               00000078  16303          LA    15,120(0,4)
0000BCFA E3F0 D388 0024          00000388  16304          STG   15,904(0,13)
0000BD00 4110 D388               00000388  16305          LA    1,904(0,13)
0000BD04 E3F0 C0DC 0004          0000BAF8  16306          LG    15,@lit_1947_1148 ; rd_slice_abs_offset
0000BD0A                                   16307 @@gen_label1501 DS    0H
0000BD0A 05EF                              16308          BALR  14,15
0000BD0C                                   16309 @@gen_label1502 DS    0H
0000BD0C B90B 007F                         16310          SLGR  7,15
0000BD10 E3F0 41E8 0002          000001E8  16311          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000BD16 4780 C308               0000BD24  16312          BZ    @L1583
0000BD1A E3F0 41E8 0004          000001E8  16313          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000BD20 47F0 C312               0000BD2E  16314          B     @L1584
0000BD24                                   16315 @L1583   DS    0H
0000BD24 E3F0 C0C4 0004          0000BAE0  16316          LG    15,@lit_1947_1144
0000BD2A 41F0 F380               00000380  16317          LA    15,896(0,15)
0000BD2E                                   16318 @L1584   DS    0H
0000BD2E E310 4100 0004          00000100  16319          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000BD34 E310 1FD0 0004          00000FD0  16320          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000BD3A 4110 1210               00000210  16321          LA    1,528(0,1)
0000BD3E E310 D388 0024          00000388  16322          STG   1,904(0,13)
0000BD44 E310 4100 0004          00000100  16323          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000BD4A E310 1FD0 0004          00000FD0  16324          LG    1,4048(0,1)
0000BD50 E310 D390 0024          00000390  16325          STG   1,912(0,13)
0000BD56 4110 D260               00000260  16326          LA    1,608(0,13)
0000BD5A E310 D398 0024          00000398  16327          STG   1,920(0,13)
0000BD60 B914 0018                         16328          LGFR  1,8
0000BD64 E310 D3A0 0024          000003A0  16329          STG   1,928(0,13)
0000BD6A D707 D3A8 D3A8 000003A8 000003A8  16330          XC    936(8,13),936(13)
0000BD70 E310 C0C4 0004          0000BAE0  16331          LG    1,@lit_1947_1144
0000BD76 4180 13A4               000003A4  16332          LA    8,932(0,1)
0000BD7A E380 D3B0 0024          000003B0  16333          STG   8,944(0,13)
0000BD80 4110 13B0               000003B0  16334          LA    1,944(0,1)
0000BD84 E310 D3B8 0024          000003B8  16335          STG   1,952(0,13)
0000BD8A E350 D3C0 0024          000003C0  16336          STG   5,960(0,13)
0000BD90 4810 40BA               000000BA  16337          LH    1,186(0,4)
0000BD94 B914 0011                         16338          LGFR  1,1
0000BD98 E310 D3C8 0024          000003C8  16339          STG   1,968(0,13)
0000BD9E E360 D3D0 0024          000003D0  16340          STG   6,976(0,13)
0000BDA4 E310 4098 0004          00000098  16341          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000BDAA E310 4090 000B          00000090  16342          SLG   1,144(0,4)
0000BDB0 E310 D3D8 0024          000003D8  16343          STG   1,984(0,13)
0000BDB6 E310 C0EC 0004          0000BB08  16344          LG    1,@lit_1947_1150
0000BDBC 4110 1258               00000258  16345          LA    1,600(0,1)
0000BDC0 E310 D3E0 0024          000003E0  16346          STG   1,992(0,13)
0000BDC6 E548 D3E8 0412          000003E8  16347          MVGHI 1000(13),1042
0000BDCC E320 D3F0 0024          000003F0  16348          STG   2,1008(0,13)
0000BDD2 E370 D3F8 0024          000003F8  16349          STG   7,1016(0,13)
0000BDD8 E3F0 D400 0024          00000400  16350          STG   15,1024(0,13)
0000BDDE 41F0 D160               00000160  16351          LA    15,352(0,13)
                                                                                                                           Page  326 
  Active Usings: @REGION_1947_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BDE2 E3F0 D408 0024          00000408  16352          STG   15,1032(0,13)
0000BDE8 4110 D388               00000388  16353          LA    1,904(0,13)
0000BDEC E3F0 C0BC 0004          0000BAD8  16354          LG    15,@lit_1947_1145 ; rd_kafka_log0
0000BDF2                                   16355 @@gen_label1504 DS    0H
0000BDF2 05EF                              16356          BALR  14,15
0000BDF4                                   16357 @@gen_label1505 DS    0H
0000BDF4                                   16358 @L1574   DS    0H
0000BDF4 E54C 4188 FF65          00000188  16359          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000BDFA E3C0 C0CC 001A          0000BAE8  16360          ALGF  12,@lit_region_diff_1947_2_7
                                           16361          DROP  12
                        0000EB2A           16362          USING @REGION_1947_7,12
0000BE00 47F0 C164               0000EC8E  16363          B     @_err_parse@1947@4
                                           16364          DROP  12
                        0000BA1C           16365          USING @REGION_1947_2,12
0000BE04                                   16366 @L1570   DS    0H
0000BE04                                   16367 @L1566   DS    0H
0000BE04 58F0 D0B4               000000B4  16368          L     15,180(0,13) ; _v
0000BE08 50F0 D0FC               000000FC  16369          ST    15,252(0,13) ; offset of PartitionLeaderEpoch in msgset_*
                                                                v2_hdr
                                           16370 * ***           do { size_t __len2 = (size_t)(1); if (!rd_slice_read(&\
                                           16371 * (rkbuf)->rkbuf_reader, &hdr.MagicByte, __len2)) do { size_t __len0 =\
                                           16372 *  (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - r\
                                           16373 * d_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { if (log_decode\
                                           16374 * _errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\
                                           16375 * \asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",1043, __FUNCTIO\
                                           16376 * N__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); cha\
                                           16377 * r __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); if (__s\
                                           16378 * trlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[256]; m\
                                           16379 * tx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logname,\
                                           16380 *  rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkbu\
                                           16381 * f->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)-\
                                           16382 * >rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decode_e\
                                           16383 * rrors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "for %s \
                                           16384 * v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " bytes \
                                           16385 * > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf->r\
                                           16386 * kbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_offse\
                                           16387 * t(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkb\
                                           16388 * uf_reader)->start), __FUNCTION__, 1043, __len0, ((&rkbuf->rkbuf_read\
                                           16389 * er)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_\
                                           16390 * uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect broker\
                                           16391 * .version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_err = \
                                           16392 * RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } while\
                                           16393 *  (0); } while (0);
0000BE0C                                   16394 @L1585   DS    0H
0000BE0C A729 0001               00000001  16395          LGHI  2,1         ; 1
0000BE10 41F0 4078               00000078  16396          LA    15,120(0,4)
0000BE14 E3F0 D388 0024          00000388  16397          STG   15,904(0,13)
0000BE1A 41F0 D100               00000100  16398          LA    15,256(0,13)
0000BE1E E3F0 D390 0024          00000390  16399          STG   15,912(0,13)
0000BE24 E320 D398 0024          00000398  16400          STG   2,920(0,13)
0000BE2A 4110 D388               00000388  16401          LA    1,904(0,13)
0000BE2E E3F0 C0D4 0004          0000BAF0  16402          LG    15,@lit_1947_1147 ; rd_slice_read
                                                                                                                           Page  327 
  Active Usings: @REGION_1947_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BE34                                   16403 @@gen_label1506 DS    0H
0000BE34 05EF                              16404          BALR  14,15
0000BE36                                   16405 @@gen_label1507 DS    0H
0000BE36 B902 00FF                         16406          LTGR  15,15
0000BE3A 4770 C6A4               0000C0C0  16407          BNZ   @L1588
0000BE3E                                   16408 @L1589   DS    0H
0000BE3E E370 4098 0004          00000098  16409          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000BE44 41F0 4078               00000078  16410          LA    15,120(0,4)
0000BE48 E3F0 D388 0024          00000388  16411          STG   15,904(0,13)
0000BE4E 4110 D388               00000388  16412          LA    1,904(0,13)
0000BE52 E3F0 C0DC 0004          0000BAF8  16413          LG    15,@lit_1947_1148 ; rd_slice_abs_offset
0000BE58                                   16414 @@gen_label1509 DS    0H
0000BE58 05EF                              16415          BALR  14,15
0000BE5A                                   16416 @@gen_label1510 DS    0H
0000BE5A B90B 007F                         16417          SLGR  7,15
0000BE5E B921 0027                         16418          CLGR  2,7
0000BE62 47D0 C6A4               0000C0C0  16419          BNH   @L1592
0000BE66                                   16420 @L1593   DS    0H
0000BE66 1288                              16421          LTR   8,8
0000BE68 47D0 C694               0000C0B0  16422          BNH   @L1596
0000BE6C                                   16423 @L1597   DS    0H
0000BE6C E3F0 4100 0002          00000100  16424          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000BE72 4770 C49C               0000BEB8  16425          BNZ   @L1600
0000BE76 E3F0 C0C4 0004          0000BAE0  16426          LG    15,@lit_1947_1144
0000BE7C 4110 F2CE               000002CE  16427          LA    1,718(0,15)
0000BE80 E310 D388 0024          00000388  16428          STG   1,904(0,13)
0000BE86 E548 D390 0413          00000390  16429          MVGHI 912(13),1043
0000BE8C E310 C0EC 0004          0000BB08  16430          LG    1,@lit_1947_1150
0000BE92 4110 1258               00000258  16431          LA    1,600(0,1)
0000BE96 E310 D398 0024          00000398  16432          STG   1,920(0,13)
0000BE9C D707 D3A0 D3A0 000003A0 000003A0  16433          XC    928(8,13),928(13)
0000BEA2 41F0 F362               00000362  16434          LA    15,866(0,15)
0000BEA6 E3F0 D3A8 0024          000003A8  16435          STG   15,936(0,13)
0000BEAC 4110 D388               00000388  16436          LA    1,904(0,13)
0000BEB0 E3F0 C0E4 0004          0000BB00  16437          LG    15,@lit_1947_1151 ; rd_kafka_crash
0000BEB6                                   16438 @@gen_label1514 DS    0H
0000BEB6 05EF                              16439          BALR  14,15
0000BEB8                                   16440 @@gen_label1515 DS    0H
0000BEB8                                   16441 @L1600   DS    0H
0000BEB8 41F0 D160               00000160  16442          LA    15,352(0,13)
0000BEBC E3F0 D388 0024          00000388  16443          STG   15,904(0,13)
0000BEC2 E548 D390 0100          00000390  16444          MVGHI 912(13),256
0000BEC8 E3F0 C0C4 0004          0000BAE0  16445          LG    15,@lit_1947_1144
0000BECE 41F0 F37C               0000037C  16446          LA    15,892(0,15)
0000BED2 E3F0 D398 0024          00000398  16447          STG   15,920(0,13)
0000BED8 4110 D388               00000388  16448          LA    1,904(0,13)
0000BEDC E3F0 C0F4 0004          0000BB10  16449          LG    15,@lit_1947_1153 ; snprintf
0000BEE2                                   16450 @@gen_label1516 DS    0H
0000BEE2 05EF                              16451          BALR  14,15
0000BEE4                                   16452 @@gen_label1517 DS    0H
0000BEE4 41F0 D160               00000160  16453          LA    15,352(0,13)
0000BEE8 B904 001F                         16454          LGR   1,15
                                                                                                                           Page  328 
  Active Usings: @REGION_1947_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BEEC A709 0000               00000000  16455          LGHI  0,0
0000BEF0                                   16456 @@gen_label1518 DS 0H
0000BEF0 B25E 000F                         16457          SRST  0,15
0000BEF4 4710 C4D4               0000BEF0  16458          BC  1,@@gen_label1518
0000BEF8 B90B 0001                         16459          SLGR  0,1
0000BEFC A70F 0002               00000002  16460          CGHI  0,2
0000BF00 4770 C4EC               0000BF08  16461          BNE   @L1602
0000BF04 9200 D160      00000160 00000000  16462          MVI   352(13),0
0000BF08                                   16463 @L1601   DS    0H
0000BF08                                   16464 @L1602   DS    0H
0000BF08 E3F0 4100 0004          00000100  16465          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000BF0E A759 1638               00001638  16466          LGHI  5,5688      ; 5688
0000BF12 41F5 F000               00000000  16467          LA    15,0(5,15)
0000BF16 E3F0 D388 0024          00000388  16468          STG   15,904(0,13)
0000BF1C 4110 D388               00000388  16469          LA    1,904(0,13)
0000BF20 E3F0 C0FC 0004          0000BB18  16470          LG    15,@lit_1947_1155 ; mtx_lock
0000BF26                                   16471 @@gen_label1520 DS    0H
0000BF26 05EF                              16472          BALR  14,15
0000BF28                                   16473 @@gen_label1521 DS    0H
0000BF28 41F0 D260               00000260  16474          LA    15,608(0,13)
0000BF2C E3F0 D388 0024          00000388  16475          STG   15,904(0,13)
0000BF32 E3F0 4100 0004          00000100  16476          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000BF38 A719 1630               00001630  16477          LGHI  1,5680      ; 5680
0000BF3C E3F1 F000 0004          00000000  16478          LG    15,0(1,15)
0000BF42 E3F0 D390 0024          00000390  16479          STG   15,912(0,13)
0000BF48 E548 D398 0100          00000398  16480          MVGHI 920(13),256
0000BF4E 4110 D388               00000388  16481          LA    1,904(0,13)
0000BF52 E3F0 C104 0004          0000BB20  16482          LG    15,@lit_1947_1157 ; rd_strlcpy
0000BF58                                   16483 @@gen_label1522 DS    0H
0000BF58 05EF                              16484          BALR  14,15
0000BF5A                                   16485 @@gen_label1523 DS    0H
0000BF5A E3F0 4100 0004          00000100  16486          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000BF60 41F5 F000               00000000  16487          LA    15,0(5,15)
0000BF64 E3F0 D388 0024          00000388  16488          STG   15,904(0,13)
0000BF6A 4110 D388               00000388  16489          LA    1,904(0,13)
0000BF6E E3F0 C10C 0004          0000BB28  16490          LG    15,@lit_1947_1159 ; mtx_unlock
0000BF74                                   16491 @@gen_label1524 DS    0H
0000BF74 05EF                              16492          BALR  14,15
0000BF76                                   16493 @@gen_label1525 DS    0H
0000BF76 E3F0 40B8 0015          000000B8  16494          LGH   15,184(0,4)
0000BF7C E3F0 D388 0024          00000388  16495          STG   15,904(0,13)
0000BF82 4110 D388               00000388  16496          LA    1,904(0,13)
0000BF86 E3F0 C114 0004          0000BB30  16497          LG    15,@lit_1947_1160 ; rd_kafka_ApiKey2str
0000BF8C                                   16498 @@gen_label1526 DS    0H
0000BF8C 05EF                              16499          BALR  14,15
0000BF8E                                   16500 @@gen_label1527 DS    0H
0000BF8E B904 005F                         16501          LGR   5,15
0000BF92 41F0 4078               00000078  16502          LA    15,120(0,4)
0000BF96 E3F0 D388 0024          00000388  16503          STG   15,904(0,13)
0000BF9C 4110 D388               00000388  16504          LA    1,904(0,13)
0000BFA0 E3F0 C11C 0004          0000BB38  16505          LG    15,@lit_1947_1161 ; rd_slice_offset
0000BFA6                                   16506 @@gen_label1528 DS    0H
                                                                                                                           Page  329 
  Active Usings: @REGION_1947_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BFA6 05EF                              16507          BALR  14,15
0000BFA8                                   16508 @@gen_label1529 DS    0H
0000BFA8 B904 006F                         16509          LGR   6,15
0000BFAC E370 4098 0004          00000098  16510          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000BFB2 41F0 4078               00000078  16511          LA    15,120(0,4)
0000BFB6 E3F0 D388 0024          00000388  16512          STG   15,904(0,13)
0000BFBC 4110 D388               00000388  16513          LA    1,904(0,13)
0000BFC0 E3F0 C0DC 0004          0000BAF8  16514          LG    15,@lit_1947_1148 ; rd_slice_abs_offset
0000BFC6                                   16515 @@gen_label1530 DS    0H
0000BFC6 05EF                              16516          BALR  14,15
0000BFC8                                   16517 @@gen_label1531 DS    0H
0000BFC8 B90B 007F                         16518          SLGR  7,15
0000BFCC E3F0 41E8 0002          000001E8  16519          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000BFD2 4780 C5C4               0000BFE0  16520          BZ    @L1605
0000BFD6 E3F0 41E8 0004          000001E8  16521          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000BFDC 47F0 C5CE               0000BFEA  16522          B     @L1606
0000BFE0                                   16523 @L1605   DS    0H
0000BFE0 E3F0 C0C4 0004          0000BAE0  16524          LG    15,@lit_1947_1144
0000BFE6 41F0 F380               00000380  16525          LA    15,896(0,15)
0000BFEA                                   16526 @L1606   DS    0H
0000BFEA E310 4100 0004          00000100  16527          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000BFF0 E310 1FD0 0004          00000FD0  16528          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000BFF6 4110 1210               00000210  16529          LA    1,528(0,1)
0000BFFA E310 D388 0024          00000388  16530          STG   1,904(0,13)
0000C000 E310 4100 0004          00000100  16531          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C006 E310 1FD0 0004          00000FD0  16532          LG    1,4048(0,1)
0000C00C E310 D390 0024          00000390  16533          STG   1,912(0,13)
0000C012 4110 D260               00000260  16534          LA    1,608(0,13)
0000C016 E310 D398 0024          00000398  16535          STG   1,920(0,13)
0000C01C B914 0018                         16536          LGFR  1,8
0000C020 E310 D3A0 0024          000003A0  16537          STG   1,928(0,13)
0000C026 D707 D3A8 D3A8 000003A8 000003A8  16538          XC    936(8,13),936(13)
0000C02C E310 C0C4 0004          0000BAE0  16539          LG    1,@lit_1947_1144
0000C032 4180 13A4               000003A4  16540          LA    8,932(0,1)
0000C036 E380 D3B0 0024          000003B0  16541          STG   8,944(0,13)
0000C03C 4110 13B0               000003B0  16542          LA    1,944(0,1)
0000C040 E310 D3B8 0024          000003B8  16543          STG   1,952(0,13)
0000C046 E350 D3C0 0024          000003C0  16544          STG   5,960(0,13)
0000C04C 4810 40BA               000000BA  16545          LH    1,186(0,4)
0000C050 B914 0011                         16546          LGFR  1,1
0000C054 E310 D3C8 0024          000003C8  16547          STG   1,968(0,13)
0000C05A E360 D3D0 0024          000003D0  16548          STG   6,976(0,13)
0000C060 E310 4098 0004          00000098  16549          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000C066 E310 4090 000B          00000090  16550          SLG   1,144(0,4)
0000C06C E310 D3D8 0024          000003D8  16551          STG   1,984(0,13)
0000C072 E310 C0EC 0004          0000BB08  16552          LG    1,@lit_1947_1150
0000C078 4110 1258               00000258  16553          LA    1,600(0,1)
0000C07C E310 D3E0 0024          000003E0  16554          STG   1,992(0,13)
0000C082 E548 D3E8 0413          000003E8  16555          MVGHI 1000(13),1043
0000C088 E320 D3F0 0024          000003F0  16556          STG   2,1008(0,13)
                                                                                                                           Page  330 
  Active Usings: @REGION_1947_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C08E E370 D3F8 0024          000003F8  16557          STG   7,1016(0,13)
0000C094 E3F0 D400 0024          00000400  16558          STG   15,1024(0,13)
0000C09A 41F0 D160               00000160  16559          LA    15,352(0,13)
0000C09E E3F0 D408 0024          00000408  16560          STG   15,1032(0,13)
0000C0A4 4110 D388               00000388  16561          LA    1,904(0,13)
0000C0A8 E3F0 C0BC 0004          0000BAD8  16562          LG    15,@lit_1947_1145 ; rd_kafka_log0
0000C0AE                                   16563 @@gen_label1533 DS    0H
0000C0AE 05EF                              16564          BALR  14,15
0000C0B0                                   16565 @@gen_label1534 DS    0H
0000C0B0                                   16566 @L1596   DS    0H
0000C0B0 E54C 4188 FF65          00000188  16567          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000C0B6 E3C0 C0CC 001A          0000BAE8  16568          ALGF  12,@lit_region_diff_1947_2_7
                                           16569          DROP  12
                        0000EB2A           16570          USING @REGION_1947_7,12
0000C0BC 47F0 C164               0000EC8E  16571          B     @_err_parse@1947@4
                                           16572          DROP  12
                        0000BA1C           16573          USING @REGION_1947_2,12
0000C0C0                                   16574 @L1592   DS    0H
0000C0C0                                   16575 @L1588   DS    0H
                                           16576 * ***           do { int32_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           16577 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           16578 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           16579 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           16580 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           16581 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                           16582 * 1044, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); }\
                                           16583 *  while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr),\
                                           16584 *  ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _\
                                           16585 * logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_st\
                                           16586 * rlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mt\
                                           16587 * x_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb\
                                           16588 * uf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lognam\
                                           16589 * e, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer under\
                                           16590 * flow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %\
                                           16591 * " "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiK\
                                           16592 * ey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion,\
                                           16593 *  rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end\
                                           16594 *  - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1044, __len0, ((&rk\
                                           16595 * buf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader))\
                                           16596 * , rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "i\
                                           16597 * ncorrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf\
                                           16598 * )->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while\
                                           16599 *  (0); } } while (0); } while (0); *(&hdr.Crc) = (_v); } while (0);
0000C0C0                                   16600 @L1607   DS    0H
0000C0C0                                   16601 @L1610   DS    0H
0000C0C0 A729 0004               00000004  16602          LGHI  2,4         ; 4
0000C0C4 41F0 4078               00000078  16603          LA    15,120(0,4)
0000C0C8 E3F0 D388 0024          00000388  16604          STG   15,904(0,13)
0000C0CE 41F0 D0B8               000000B8  16605          LA    15,184(0,13)
0000C0D2 E3F0 D390 0024          00000390  16606          STG   15,912(0,13)
0000C0D8 E320 D398 0024          00000398  16607          STG   2,920(0,13)
0000C0DE 4110 D388               00000388  16608          LA    1,904(0,13)
                                                                                                                           Page  331 
  Active Usings: @REGION_1947_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C0E2 E3F0 C0D4 0004          0000BAF0  16609          LG    15,@lit_1947_1147 ; rd_slice_read
0000C0E8                                   16610 @@gen_label1535 DS    0H
0000C0E8 05EF                              16611          BALR  14,15
0000C0EA                                   16612 @@gen_label1536 DS    0H
0000C0EA B902 00FF                         16613          LTGR  15,15
0000C0EE 4770 C958               0000C374  16614          BNZ   @L1613
0000C0F2                                   16615 @L1614   DS    0H
0000C0F2 E370 4098 0004          00000098  16616          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000C0F8 41F0 4078               00000078  16617          LA    15,120(0,4)
0000C0FC E3F0 D388 0024          00000388  16618          STG   15,904(0,13)
0000C102 4110 D388               00000388  16619          LA    1,904(0,13)
0000C106 E3F0 C0DC 0004          0000BAF8  16620          LG    15,@lit_1947_1148 ; rd_slice_abs_offset
0000C10C                                   16621 @@gen_label1538 DS    0H
0000C10C 05EF                              16622          BALR  14,15
0000C10E                                   16623 @@gen_label1539 DS    0H
0000C10E B90B 007F                         16624          SLGR  7,15
0000C112 B921 0027                         16625          CLGR  2,7
0000C116 47D0 C958               0000C374  16626          BNH   @L1617
0000C11A                                   16627 @L1618   DS    0H
0000C11A 1288                              16628          LTR   8,8
0000C11C 47D0 C948               0000C364  16629          BNH   @L1621
0000C120                                   16630 @L1622   DS    0H
0000C120 E3F0 4100 0002          00000100  16631          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C126 4770 C750               0000C16C  16632          BNZ   @L1625
0000C12A E3F0 C0C4 0004          0000BAE0  16633          LG    15,@lit_1947_1144
0000C130 4110 F2CE               000002CE  16634          LA    1,718(0,15)
0000C134 E310 D388 0024          00000388  16635          STG   1,904(0,13)
0000C13A E548 D390 0414          00000390  16636          MVGHI 912(13),1044
0000C140 E310 C0EC 0004          0000BB08  16637          LG    1,@lit_1947_1150
0000C146 4110 1258               00000258  16638          LA    1,600(0,1)
0000C14A E310 D398 0024          00000398  16639          STG   1,920(0,13)
0000C150 D707 D3A0 D3A0 000003A0 000003A0  16640          XC    928(8,13),928(13)
0000C156 41F0 F362               00000362  16641          LA    15,866(0,15)
0000C15A E3F0 D3A8 0024          000003A8  16642          STG   15,936(0,13)
0000C160 4110 D388               00000388  16643          LA    1,904(0,13)
0000C164 E3F0 C0E4 0004          0000BB00  16644          LG    15,@lit_1947_1151 ; rd_kafka_crash
0000C16A                                   16645 @@gen_label1543 DS    0H
0000C16A 05EF                              16646          BALR  14,15
0000C16C                                   16647 @@gen_label1544 DS    0H
0000C16C                                   16648 @L1625   DS    0H
0000C16C 41F0 D160               00000160  16649          LA    15,352(0,13)
0000C170 E3F0 D388 0024          00000388  16650          STG   15,904(0,13)
0000C176 E548 D390 0100          00000390  16651          MVGHI 912(13),256
0000C17C E3F0 C0C4 0004          0000BAE0  16652          LG    15,@lit_1947_1144
0000C182 41F0 F37C               0000037C  16653          LA    15,892(0,15)
0000C186 E3F0 D398 0024          00000398  16654          STG   15,920(0,13)
0000C18C 4110 D388               00000388  16655          LA    1,904(0,13)
0000C190 E3F0 C0F4 0004          0000BB10  16656          LG    15,@lit_1947_1153 ; snprintf
0000C196                                   16657 @@gen_label1545 DS    0H
0000C196 05EF                              16658          BALR  14,15
0000C198                                   16659 @@gen_label1546 DS    0H
0000C198 41F0 D160               00000160  16660          LA    15,352(0,13)
                                                                                                                           Page  332 
  Active Usings: @REGION_1947_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C19C B904 001F                         16661          LGR   1,15
0000C1A0 A709 0000               00000000  16662          LGHI  0,0
0000C1A4                                   16663 @@gen_label1547 DS 0H
0000C1A4 B25E 000F                         16664          SRST  0,15
0000C1A8 4710 C788               0000C1A4  16665          BC  1,@@gen_label1547
0000C1AC B90B 0001                         16666          SLGR  0,1
0000C1B0 A70F 0002               00000002  16667          CGHI  0,2
0000C1B4 4770 C7A0               0000C1BC  16668          BNE   @L1627
0000C1B8 9200 D160      00000160 00000000  16669          MVI   352(13),0
0000C1BC                                   16670 @L1626   DS    0H
0000C1BC                                   16671 @L1627   DS    0H
0000C1BC E3F0 4100 0004          00000100  16672          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C1C2 A759 1638               00001638  16673          LGHI  5,5688      ; 5688
0000C1C6 41F5 F000               00000000  16674          LA    15,0(5,15)
0000C1CA E3F0 D388 0024          00000388  16675          STG   15,904(0,13)
0000C1D0 4110 D388               00000388  16676          LA    1,904(0,13)
0000C1D4 E3F0 C0FC 0004          0000BB18  16677          LG    15,@lit_1947_1155 ; mtx_lock
0000C1DA                                   16678 @@gen_label1549 DS    0H
0000C1DA 05EF                              16679          BALR  14,15
0000C1DC                                   16680 @@gen_label1550 DS    0H
0000C1DC 41F0 D260               00000260  16681          LA    15,608(0,13)
0000C1E0 E3F0 D388 0024          00000388  16682          STG   15,904(0,13)
0000C1E6 E3F0 4100 0004          00000100  16683          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C1EC A719 1630               00001630  16684          LGHI  1,5680      ; 5680
0000C1F0 E3F1 F000 0004          00000000  16685          LG    15,0(1,15)
0000C1F6 E3F0 D390 0024          00000390  16686          STG   15,912(0,13)
0000C1FC E548 D398 0100          00000398  16687          MVGHI 920(13),256
0000C202 4110 D388               00000388  16688          LA    1,904(0,13)
0000C206 E3F0 C104 0004          0000BB20  16689          LG    15,@lit_1947_1157 ; rd_strlcpy
0000C20C                                   16690 @@gen_label1551 DS    0H
0000C20C 05EF                              16691          BALR  14,15
0000C20E                                   16692 @@gen_label1552 DS    0H
0000C20E E3F0 4100 0004          00000100  16693          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C214 41F5 F000               00000000  16694          LA    15,0(5,15)
0000C218 E3F0 D388 0024          00000388  16695          STG   15,904(0,13)
0000C21E 4110 D388               00000388  16696          LA    1,904(0,13)
0000C222 E3F0 C10C 0004          0000BB28  16697          LG    15,@lit_1947_1159 ; mtx_unlock
0000C228                                   16698 @@gen_label1553 DS    0H
0000C228 05EF                              16699          BALR  14,15
0000C22A                                   16700 @@gen_label1554 DS    0H
0000C22A E3F0 40B8 0015          000000B8  16701          LGH   15,184(0,4)
0000C230 E3F0 D388 0024          00000388  16702          STG   15,904(0,13)
0000C236 4110 D388               00000388  16703          LA    1,904(0,13)
0000C23A E3F0 C114 0004          0000BB30  16704          LG    15,@lit_1947_1160 ; rd_kafka_ApiKey2str
0000C240                                   16705 @@gen_label1555 DS    0H
0000C240 05EF                              16706          BALR  14,15
0000C242                                   16707 @@gen_label1556 DS    0H
0000C242 B904 005F                         16708          LGR   5,15
0000C246 41F0 4078               00000078  16709          LA    15,120(0,4)
0000C24A E3F0 D388 0024          00000388  16710          STG   15,904(0,13)
0000C250 4110 D388               00000388  16711          LA    1,904(0,13)
0000C254 E3F0 C11C 0004          0000BB38  16712          LG    15,@lit_1947_1161 ; rd_slice_offset
                                                                                                                           Page  333 
  Active Usings: @REGION_1947_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C25A                                   16713 @@gen_label1557 DS    0H
0000C25A 05EF                              16714          BALR  14,15
0000C25C                                   16715 @@gen_label1558 DS    0H
0000C25C B904 006F                         16716          LGR   6,15
0000C260 E370 4098 0004          00000098  16717          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000C266 41F0 4078               00000078  16718          LA    15,120(0,4)
0000C26A E3F0 D388 0024          00000388  16719          STG   15,904(0,13)
0000C270 4110 D388               00000388  16720          LA    1,904(0,13)
0000C274 E3F0 C0DC 0004          0000BAF8  16721          LG    15,@lit_1947_1148 ; rd_slice_abs_offset
0000C27A                                   16722 @@gen_label1559 DS    0H
0000C27A 05EF                              16723          BALR  14,15
0000C27C                                   16724 @@gen_label1560 DS    0H
0000C27C B90B 007F                         16725          SLGR  7,15
0000C280 E3F0 41E8 0002          000001E8  16726          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000C286 4780 C878               0000C294  16727          BZ    @L1630
0000C28A E3F0 41E8 0004          000001E8  16728          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000C290 47F0 C882               0000C29E  16729          B     @L1631
0000C294                                   16730 @L1630   DS    0H
0000C294 E3F0 C0C4 0004          0000BAE0  16731          LG    15,@lit_1947_1144
0000C29A 41F0 F380               00000380  16732          LA    15,896(0,15)
0000C29E                                   16733 @L1631   DS    0H
0000C29E E310 4100 0004          00000100  16734          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C2A4 E310 1FD0 0004          00000FD0  16735          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000C2AA 4110 1210               00000210  16736          LA    1,528(0,1)
0000C2AE E310 D388 0024          00000388  16737          STG   1,904(0,13)
0000C2B4 E310 4100 0004          00000100  16738          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C2BA E310 1FD0 0004          00000FD0  16739          LG    1,4048(0,1)
0000C2C0 E310 D390 0024          00000390  16740          STG   1,912(0,13)
0000C2C6 4110 D260               00000260  16741          LA    1,608(0,13)
0000C2CA E310 D398 0024          00000398  16742          STG   1,920(0,13)
0000C2D0 B914 0018                         16743          LGFR  1,8
0000C2D4 E310 D3A0 0024          000003A0  16744          STG   1,928(0,13)
0000C2DA D707 D3A8 D3A8 000003A8 000003A8  16745          XC    936(8,13),936(13)
0000C2E0 E310 C0C4 0004          0000BAE0  16746          LG    1,@lit_1947_1144
0000C2E6 4180 13A4               000003A4  16747          LA    8,932(0,1)
0000C2EA E380 D3B0 0024          000003B0  16748          STG   8,944(0,13)
0000C2F0 4110 13B0               000003B0  16749          LA    1,944(0,1)
0000C2F4 E310 D3B8 0024          000003B8  16750          STG   1,952(0,13)
0000C2FA E350 D3C0 0024          000003C0  16751          STG   5,960(0,13)
0000C300 4810 40BA               000000BA  16752          LH    1,186(0,4)
0000C304 B914 0011                         16753          LGFR  1,1
0000C308 E310 D3C8 0024          000003C8  16754          STG   1,968(0,13)
0000C30E E360 D3D0 0024          000003D0  16755          STG   6,976(0,13)
0000C314 E310 4098 0004          00000098  16756          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000C31A E310 4090 000B          00000090  16757          SLG   1,144(0,4)
0000C320 E310 D3D8 0024          000003D8  16758          STG   1,984(0,13)
0000C326 E310 C0EC 0004          0000BB08  16759          LG    1,@lit_1947_1150
0000C32C 4110 1258               00000258  16760          LA    1,600(0,1)
0000C330 E310 D3E0 0024          000003E0  16761          STG   1,992(0,13)
0000C336 E548 D3E8 0414          000003E8  16762          MVGHI 1000(13),1044
                                                                                                                           Page  334 
  Active Usings: @REGION_1947_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C33C E320 D3F0 0024          000003F0  16763          STG   2,1008(0,13)
0000C342 E370 D3F8 0024          000003F8  16764          STG   7,1016(0,13)
0000C348 E3F0 D400 0024          00000400  16765          STG   15,1024(0,13)
0000C34E 41F0 D160               00000160  16766          LA    15,352(0,13)
0000C352 E3F0 D408 0024          00000408  16767          STG   15,1032(0,13)
0000C358 4110 D388               00000388  16768          LA    1,904(0,13)
0000C35C E3F0 C0BC 0004          0000BAD8  16769          LG    15,@lit_1947_1145 ; rd_kafka_log0
0000C362                                   16770 @@gen_label1562 DS    0H
0000C362 05EF                              16771          BALR  14,15
0000C364                                   16772 @@gen_label1563 DS    0H
0000C364                                   16773 @L1621   DS    0H
0000C364 E54C 4188 FF65          00000188  16774          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000C36A E3C0 C0CC 001A          0000BAE8  16775          ALGF  12,@lit_region_diff_1947_2_7
                                           16776          DROP  12
                        0000EB2A           16777          USING @REGION_1947_7,12
0000C370 47F0 C164               0000EC8E  16778          B     @_err_parse@1947@4
                                           16779          DROP  12
                        0000BA1C           16780          USING @REGION_1947_2,12
0000C374                                   16781 @L1617   DS    0H
0000C374                                   16782 @L1613   DS    0H
0000C374 58F0 D0B8               000000B8  16783          L     15,184(0,13) ; _v
0000C378 50F0 D104               00000104  16784          ST    15,260(0,13) ; offset of Crc in msgset_v2_hdr
                                           16785 * ***
                                           16786 * ***           if (msetr->msetr_rkb->rkb_rk->rk_conf.check_crcs) {
0000C37C E3F0 3048 0004          00000048  16787          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000C382 E3F0 FFD0 0004          00000FD0  16788          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000C388 E3F0 F70C 0012          0000070C  16789          LT    15,1804(0,15) ; offset of check_crcs in rd_kafka_conf_s
0000C38E 4770 C980               0000C39C  16790          BNZ   *+14  Around region break
0000C392 E3C0 C124 001A          0000BB40  16791          ALGF  12,@lit_region_diff_1947_2_3
                                           16792          DROP  12
                        0000C41E           16793          USING @REGION_1947_3,12
0000C398 47F0 C68A               0000CAA8  16794          B     @L1678
                                           16795          DROP  12
                        0000BA1C           16796          USING @REGION_1947_2,12
                                           16797 * ***
                                           16798 * ***                   uint32_t calc_crc;
                                           16799 * ***                   rd_slice_t crc_slice;
                                           16800 * ***                   size_t crc_len = hdr.Length-4-1-4;
0000C39C 58F0 D0F8               000000F8  16801          L     15,248(0,13) ; offset of Length in msgset_v2_hdr
0000C3A0 A7FA FFFC               0000FFFC  16802          AHI   15,-4
0000C3A4 A7FA FFFF               0000FFFF  16803          AHI   15,-1
0000C3A8 A7FA FFFC               0000FFFC  16804          AHI   15,-4
0000C3AC B914 002F                         16805          LGFR  2,15
                                           16806 * ***
                                           16807 * ***                   if (!rd_slice_narrow_copy_relative(
                                           16808 * ***                               &rkbuf->rkbuf_reader,
                                           16809 * ***                               &crc_slice, crc_len))
0000C3B0 41F0 4078               00000078  16810          LA    15,120(0,4)
0000C3B4 E3F0 D388 0024          00000388  16811          STG   15,904(0,13)
0000C3BA 41F0 D160               00000160  16812          LA    15,352(0,13)
0000C3BE E3F0 D390 0024          00000390  16813          STG   15,912(0,13)
                                                                                                                           Page  335 
  Active Usings: @REGION_1947_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C3C4 E320 D398 0024          00000398  16814          STG   2,920(0,13)
0000C3CA 4110 D388               00000388  16815          LA    1,904(0,13)
0000C3CE E3F0 C12C 0004          0000BB48  16816          LG    15,@lit_1947_1209 ; rd_slice_narrow_copy_relative
0000C3D4                                   16817 @@gen_label1565 DS    0H
0000C3D4 05EF                              16818          BALR  14,15
0000C3D6                                   16819 @@gen_label1566 DS    0H
0000C3D6 12FF                              16820          LTR   15,15
0000C3D8 4780 C9CA               0000C3E6  16821          BZ    *+14  Around region break
0000C3DC E3C0 C124 001A          0000BB40  16822          ALGF  12,@lit_region_diff_1947_2_3
                                           16823          DROP  12
                        0000C41E           16824          USING @REGION_1947_3,12
0000C3E2 47F0 C2DE               0000C6FC  16825          B     @L1633
                                           16826          DROP  12
                        0000BA1C           16827          USING @REGION_1947_2,12
                                           16828 * ***                           do { size_t __len0 = (size_t)(crc_len)\
                                           16829 * ; if (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_offse\
                                           16830 * t(&(rkbuf)->rkbuf_reader))))) { do { if (log_decode_errors > 0) { do\
                                           16831 *  { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdk\
                                           16832 * afka\\src\\rdkafka_msgset_reader.c",1055, __FUNCTION__, (((void *)0)\
                                           16833 * ), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[256]; \
                                           16834 * snprintf(__tmpstr, sizeof(__tmpstr), ": "); if (__strlen(__tmpstr) =\
                                           16835 * = 2) __tmpstr[0] = '\0'; do { char _logname[256]; mtx_lock(&(rkbuf->\
                                           16836 * rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb\
                                           16837 * ->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rk\
                                           16838 * b_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf,\
                                           16839 *  (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decode_errors, 0x0, "PROT\
                                           16840 * OUFLOW", "Protocol read buffer underflow " "for %s v%hd " "at %" "zu\
                                           16841 * " "/%" "zu" " (%s:%i): " "expected %" "zu" " bytes > " "%" "zu" " re\
                                           16842 * maining bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiK\
                                           16843 * ey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_offset(&rkbuf->rkbuf_r\
                                           16844 * eader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_reader)->start\
                                           16845 * ), __FUNCTION__, 1055, __len0, ((&rkbuf->rkbuf_reader)->end - rd_sli\
                                           16846 * ce_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_uflow_mitigation \
                                           16847 * ? rkbuf->rkbuf_uflow_mitigation : "incorrect broker.version.fallback\
                                           16848 * ?", __tmpstr); } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR\
                                           16849 * __UNDERFLOW; goto err_parse; } while (0); } } while (0);
0000C3E6                                   16850 @L1634   DS    0H
0000C3E6 E370 4098 0004          00000098  16851          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000C3EC 41F0 4078               00000078  16852          LA    15,120(0,4)
0000C3F0 E3F0 D388 0024          00000388  16853          STG   15,904(0,13)
0000C3F6 4110 D388               00000388  16854          LA    1,904(0,13)
0000C3FA E3F0 C0DC 0004          0000BAF8  16855          LG    15,@lit_1947_1148 ; rd_slice_abs_offset
0000C400                                   16856 @@gen_label1568 DS    0H
0000C400 05EF                              16857          BALR  14,15
0000C402                                   16858 @@gen_label1569 DS    0H
0000C402 B90B 007F                         16859          SLGR  7,15
0000C406 B921 0027                         16860          CLGR  2,7
0000C40A 4720 C9FC               0000C418  16861          BH    *+14  Around region break
0000C40E E3C0 C124 001A          0000BB40  16862          ALGF  12,@lit_region_diff_1947_2_3
                                           16863          DROP  12
                        0000C41E           16864          USING @REGION_1947_3,12
0000C414 47F0 C2DE               0000C6FC  16865          B     @L1637
                                                                                                                           Page  336 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           16866          DROP  12
                        0000BA1C           16867          USING @REGION_1947_2,12
0000C418 E3C0 C124 001A          0000BB40  16868          ALGF  12,@lit_region_diff_1947_2_3
0000C41E                                   16869 @REGION_1947_3 DS 0H
                                           16870          DROP  12
                        0000C41E           16871          USING @REGION_1947_3,12
0000C41E                                   16872 @L1638   DS    0H
0000C41E 1288                              16873          LTR   8,8
0000C420 47D0 C2CE               0000C6EC  16874          BNH   @L1641
0000C424                                   16875 @L1642   DS    0H
0000C424 E3F0 4100 0002          00000100  16876          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C42A 4770 C052               0000C470  16877          BNZ   @L1645
0000C42E E3F0 C18A 0004          0000C5A8  16878          LG    15,@lit_1947_1211
0000C434 4110 F2CE               000002CE  16879          LA    1,718(0,15)
0000C438 E310 D388 0024          00000388  16880          STG   1,904(0,13)
0000C43E E548 D390 041F          00000390  16881          MVGHI 912(13),1055
0000C444 E310 C182 0004          0000C5A0  16882          LG    1,@lit_1947_1212
0000C44A 4110 1258               00000258  16883          LA    1,600(0,1)
0000C44E E310 D398 0024          00000398  16884          STG   1,920(0,13)
0000C454 D707 D3A0 D3A0 000003A0 000003A0  16885          XC    928(8,13),928(13)
0000C45A 41F0 F362               00000362  16886          LA    15,866(0,15)
0000C45E E3F0 D3A8 0024          000003A8  16887          STG   15,936(0,13)
0000C464 4110 D388               00000388  16888          LA    1,904(0,13)
0000C468 E3F0 C17A 0004          0000C598  16889          LG    15,@lit_1947_1213 ; rd_kafka_crash
0000C46E                                   16890 @@gen_label1573 DS    0H
0000C46E 05EF                              16891          BALR  14,15
0000C470                                   16892 @@gen_label1574 DS    0H
0000C470                                   16893 @L1645   DS    0H
0000C470 41F0 D188               00000188  16894          LA    15,392(0,13)
0000C474 E3F0 D388 0024          00000388  16895          STG   15,904(0,13)
0000C47A E548 D390 0100          00000390  16896          MVGHI 912(13),256
0000C480 E3F0 C18A 0004          0000C5A8  16897          LG    15,@lit_1947_1211
0000C486 41F0 F37C               0000037C  16898          LA    15,892(0,15)
0000C48A E3F0 D398 0024          00000398  16899          STG   15,920(0,13)
0000C490 4110 D388               00000388  16900          LA    1,904(0,13)
0000C494 E3F0 C192 0004          0000C5B0  16901          LG    15,@lit_1947_1215 ; snprintf
0000C49A                                   16902 @@gen_label1575 DS    0H
0000C49A 05EF                              16903          BALR  14,15
0000C49C                                   16904 @@gen_label1576 DS    0H
0000C49C 41F0 D188               00000188  16905          LA    15,392(0,13)
0000C4A0 B904 001F                         16906          LGR   1,15
0000C4A4 A709 0000               00000000  16907          LGHI  0,0
0000C4A8                                   16908 @@gen_label1577 DS 0H
0000C4A8 B25E 000F                         16909          SRST  0,15
0000C4AC 4710 C08A               0000C4A8  16910          BC  1,@@gen_label1577
0000C4B0 B90B 0001                         16911          SLGR  0,1
0000C4B4 A70F 0002               00000002  16912          CGHI  0,2
0000C4B8 4770 C0A2               0000C4C0  16913          BNE   @L1647
0000C4BC 9200 D188      00000188 00000000  16914          MVI   392(13),0
0000C4C0                                   16915 @L1646   DS    0H
0000C4C0                                   16916 @L1647   DS    0H
0000C4C0 E3F0 4100 0004          00000100  16917          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
                                                                                                                           Page  337 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C4C6 A759 1638               00001638  16918          LGHI  5,5688      ; 5688
0000C4CA 41F5 F000               00000000  16919          LA    15,0(5,15)
0000C4CE E3F0 D388 0024          00000388  16920          STG   15,904(0,13)
0000C4D4 4110 D388               00000388  16921          LA    1,904(0,13)
0000C4D8 E3F0 C19A 0004          0000C5B8  16922          LG    15,@lit_1947_1217 ; mtx_lock
0000C4DE                                   16923 @@gen_label1579 DS    0H
0000C4DE 05EF                              16924          BALR  14,15
0000C4E0                                   16925 @@gen_label1580 DS    0H
0000C4E0 41F0 D288               00000288  16926          LA    15,648(0,13)
0000C4E4 E3F0 D388 0024          00000388  16927          STG   15,904(0,13)
0000C4EA E3F0 4100 0004          00000100  16928          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C4F0 A719 1630               00001630  16929          LGHI  1,5680      ; 5680
0000C4F4 E3F1 F000 0004          00000000  16930          LG    15,0(1,15)
0000C4FA E3F0 D390 0024          00000390  16931          STG   15,912(0,13)
0000C500 E548 D398 0100          00000398  16932          MVGHI 920(13),256
0000C506 4110 D388               00000388  16933          LA    1,904(0,13)
0000C50A E3F0 C1A2 0004          0000C5C0  16934          LG    15,@lit_1947_1219 ; rd_strlcpy
0000C510                                   16935 @@gen_label1581 DS    0H
0000C510 05EF                              16936          BALR  14,15
0000C512                                   16937 @@gen_label1582 DS    0H
0000C512 E3F0 4100 0004          00000100  16938          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C518 41F5 F000               00000000  16939          LA    15,0(5,15)
0000C51C E3F0 D388 0024          00000388  16940          STG   15,904(0,13)
0000C522 4110 D388               00000388  16941          LA    1,904(0,13)
0000C526 E3F0 C1AA 0004          0000C5C8  16942          LG    15,@lit_1947_1221 ; mtx_unlock
0000C52C                                   16943 @@gen_label1583 DS    0H
0000C52C 05EF                              16944          BALR  14,15
0000C52E                                   16945 @@gen_label1584 DS    0H
0000C52E E3F0 40B8 0015          000000B8  16946          LGH   15,184(0,4)
0000C534 E3F0 D388 0024          00000388  16947          STG   15,904(0,13)
0000C53A 4110 D388               00000388  16948          LA    1,904(0,13)
0000C53E E3F0 C1B2 0004          0000C5D0  16949          LG    15,@lit_1947_1222 ; rd_kafka_ApiKey2str
0000C544                                   16950 @@gen_label1585 DS    0H
0000C544 05EF                              16951          BALR  14,15
0000C546                                   16952 @@gen_label1586 DS    0H
0000C546 B904 005F                         16953          LGR   5,15
0000C54A 41F0 4078               00000078  16954          LA    15,120(0,4)
0000C54E E3F0 D388 0024          00000388  16955          STG   15,904(0,13)
0000C554 4110 D388               00000388  16956          LA    1,904(0,13)
0000C558 E3F0 C1BA 0004          0000C5D8  16957          LG    15,@lit_1947_1223 ; rd_slice_offset
0000C55E                                   16958 @@gen_label1587 DS    0H
0000C55E 05EF                              16959          BALR  14,15
0000C560                                   16960 @@gen_label1588 DS    0H
0000C560 B904 006F                         16961          LGR   6,15
0000C564 E370 4098 0004          00000098  16962          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000C56A 41F0 4078               00000078  16963          LA    15,120(0,4)
0000C56E E3F0 D388 0024          00000388  16964          STG   15,904(0,13)
0000C574 4110 D388               00000388  16965          LA    1,904(0,13)
0000C578 E3F0 C1C2 0004          0000C5E0  16966          LG    15,@lit_1947_1224 ; rd_slice_abs_offset
0000C57E                                   16967 @@gen_label1589 DS    0H
0000C57E 05EF                              16968          BALR  14,15
0000C580                                   16969 @@gen_label1590 DS    0H
                                                                                                                           Page  338 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C580 B90B 007F                         16970          SLGR  7,15
0000C584 E3F0 41E8 0002          000001E8  16971          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000C58A 4780 C1FE               0000C61C  16972          BZ    @L1650
0000C58E E3F0 41E8 0004          000001E8  16973          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000C594 47F0 C208               0000C626  16974          B     @L1651
0000C598                                   16975          DS    0D
0000C598 0000000000000000                  16976 @lit_1947_1213 DC AD(rd_kafka_crash)
0000C5A0 0000000000012808                  16977 @lit_1947_1212 DC AD(@DATA)
0000C5A8 0000000000012AB8                  16978 @lit_1947_1211 DC AD(@strings@)
0000C5B0 0000000000000000                  16979 @lit_1947_1215 DC AD(snprintf)
0000C5B8 0000000000000000                  16980 @lit_1947_1217 DC AD(mtx_lock)
0000C5C0 0000000000001668                  16981 @lit_1947_1219 DC AD(rd_strlcpy)
0000C5C8 0000000000000000                  16982 @lit_1947_1221 DC AD(mtx_unlock)
0000C5D0 00000000000014D0                  16983 @lit_1947_1222 DC AD(rd_kafka_$Api$Key2str)
0000C5D8 00000000000012B8                  16984 @lit_1947_1223 DC AD(rd_slice_offset)
0000C5E0 0000000000001210                  16985 @lit_1947_1224 DC AD(rd_slice_abs_offset)
0000C5E8 0000000000000000                  16986 @lit_1947_1228 DC AD(rd_kafka_log0)
0000C5F0 0000270C                          16987 @lit_region_diff_1947_3_7  DC A(@REGION_1947_7-@REGION_1947_3)
0000C5F4 00000000
0000C5F8 0000000000000000                  16988 @lit_1947_1229 DC AD(rd_slice_crc32c)
0000C600 0000000000000000                  16989 @lit_1947_1231 DC AD(rd_kafka_consumer_err)
0000C608 0000000000000000                  16990 @lit_1947_1233 DC AD(rd_slice_read)
0000C610 00000000000002F0                  16991 @lit_1947_1253 DC AD(rd_atomic64_add)
0000C618 000009DC                          16992 @lit_region_diff_1947_3_4  DC A(@REGION_1947_4-@REGION_1947_3)
0000C61C                                   16993 @L1650   DS    0H
0000C61C E3F0 C18A 0004          0000C5A8  16994          LG    15,@lit_1947_1211
0000C622 41F0 F380               00000380  16995          LA    15,896(0,15)
0000C626                                   16996 @L1651   DS    0H
0000C626 E310 4100 0004          00000100  16997          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C62C E310 1FD0 0004          00000FD0  16998          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000C632 4110 1210               00000210  16999          LA    1,528(0,1)
0000C636 E310 D388 0024          00000388  17000          STG   1,904(0,13)
0000C63C E310 4100 0004          00000100  17001          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C642 E310 1FD0 0004          00000FD0  17002          LG    1,4048(0,1)
0000C648 E310 D390 0024          00000390  17003          STG   1,912(0,13)
0000C64E 4110 D288               00000288  17004          LA    1,648(0,13)
0000C652 E310 D398 0024          00000398  17005          STG   1,920(0,13)
0000C658 B914 0018                         17006          LGFR  1,8
0000C65C E310 D3A0 0024          000003A0  17007          STG   1,928(0,13)
0000C662 D707 D3A8 D3A8 000003A8 000003A8  17008          XC    936(8,13),936(13)
0000C668 E310 C18A 0004          0000C5A8  17009          LG    1,@lit_1947_1211
0000C66E 4180 13A4               000003A4  17010          LA    8,932(0,1)
0000C672 E380 D3B0 0024          000003B0  17011          STG   8,944(0,13)
0000C678 4110 13B0               000003B0  17012          LA    1,944(0,1)
0000C67C E310 D3B8 0024          000003B8  17013          STG   1,952(0,13)
0000C682 E350 D3C0 0024          000003C0  17014          STG   5,960(0,13)
0000C688 4810 40BA               000000BA  17015          LH    1,186(0,4)
0000C68C B914 0011                         17016          LGFR  1,1
0000C690 E310 D3C8 0024          000003C8  17017          STG   1,968(0,13)
0000C696 E360 D3D0 0024          000003D0  17018          STG   6,976(0,13)
                                                                                                                           Page  339 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C69C E310 4098 0004          00000098  17019          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000C6A2 E310 4090 000B          00000090  17020          SLG   1,144(0,4)
0000C6A8 E310 D3D8 0024          000003D8  17021          STG   1,984(0,13)
0000C6AE E310 C182 0004          0000C5A0  17022          LG    1,@lit_1947_1212
0000C6B4 4110 1258               00000258  17023          LA    1,600(0,1)
0000C6B8 E310 D3E0 0024          000003E0  17024          STG   1,992(0,13)
0000C6BE E548 D3E8 041F          000003E8  17025          MVGHI 1000(13),1055
0000C6C4 E320 D3F0 0024          000003F0  17026          STG   2,1008(0,13)
0000C6CA E370 D3F8 0024          000003F8  17027          STG   7,1016(0,13)
0000C6D0 E3F0 D400 0024          00000400  17028          STG   15,1024(0,13)
0000C6D6 41F0 D188               00000188  17029          LA    15,392(0,13)
0000C6DA E3F0 D408 0024          00000408  17030          STG   15,1032(0,13)
0000C6E0 4110 D388               00000388  17031          LA    1,904(0,13)
0000C6E4 E3F0 C1CA 0004          0000C5E8  17032          LG    15,@lit_1947_1228 ; rd_kafka_log0
0000C6EA                                   17033 @@gen_label1592 DS    0H
0000C6EA 05EF                              17034          BALR  14,15
0000C6EC                                   17035 @@gen_label1593 DS    0H
0000C6EC                                   17036 @L1641   DS    0H
0000C6EC E54C 4188 FF65          00000188  17037          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000C6F2 E3C0 C1D2 001A          0000C5F0  17038          ALGF  12,@lit_region_diff_1947_3_7
                                           17039          DROP  12
                        0000EB2A           17040          USING @REGION_1947_7,12
0000C6F8 47F0 C164               0000EC8E  17041          B     @_err_parse@1947@4
                                           17042          DROP  12
                        0000C41E           17043          USING @REGION_1947_3,12
0000C6FC                                   17044 @L1637   DS    0H
                                           17045 * ***
                                           17046 * ***                   calc_crc = rd_slice_crc32c(&crc_slice);
0000C6FC                                   17047 @L1633   DS    0H
0000C6FC 41F0 D160               00000160  17048          LA    15,352(0,13)
0000C700 E3F0 D388 0024          00000388  17049          STG   15,904(0,13)
0000C706 4110 D388               00000388  17050          LA    1,904(0,13)
0000C70A E3F0 C1DA 0004          0000C5F8  17051          LG    15,@lit_1947_1229 ; rd_slice_crc32c
0000C710                                   17052 @@gen_label1594 DS    0H
0000C710 05EF                              17053          BALR  14,15
0000C712                                   17054 @@gen_label1595 DS    0H
                                           17055 * ***
                                           17056 * ***                   if ((((uint32_t)hdr.Crc != calc_crc))) {
0000C712 55F0 D104               00000104  17057          CL    15,260(0,13)
0000C716 4780 C68A               0000CAA8  17058          BE    @L1652
                                           17059 * ***
                                           17060 * ***
                                           17061 * ***                           rd_kafka_consumer_err(&msetr->msetr_rk\
                                           17062 * q,
                                           17063 * ***                                                 msetr->msetr_bro\
                                           17064 * ker_id,
                                           17065 * ***                                                 RD_KAFKA_RESP_ER\
                                           17066 * R__BAD_MSG,
                                           17067 * ***                                                 msetr->msetr_tve\
                                           17068 * r->version,
                                           17069 * ***                                                 ((void *)0), rkt\
                                           17070 * p,
                                                                                                                           Page  340 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           17071 * ***                                                 hdr.BaseOffset,
                                           17072 * ***                                                 "MessageSet at o\
                                           17073 * ffset %" "lld"
                                           17074 * ***                                                 hdr.BaseOffset,
                                           17075 * ***                                                 hdr.Length, hdr.\
                                           17076 * Crc, calc_crc);
0000C71A 4110 3068               00000068  17077          LA    1,104(0,3)
0000C71E E310 D388 0024          00000388  17078          STG   1,904(0,13)
0000C724 E310 3040 0014          00000040  17079          LGF   1,64(0,3)
0000C72A E310 D390 0024          00000390  17080          STG   1,912(0,13)
0000C730 E548 D398 FF39          00000398  17081          MVGHI 920(13),-199
0000C736 E310 3038 0004          00000038  17082          LG    1,56(0,3)   ; offset of msetr_tver in rd_kafka_msgset_re*
                                                                ader_s
0000C73C E310 1008 0014          00000008  17083          LGF   1,8(0,1)
0000C742 E310 D3A0 0024          000003A0  17084          STG   1,928(0,13)
0000C748 D707 D3A8 D3A8 000003A8 000003A8  17085          XC    936(8,13),936(13)
0000C74E E350 D3B0 0024          000003B0  17086          STG   5,944(0,13)
0000C754 E310 D0F0 0004          000000F0  17087          LG    1,240(0,13)
0000C75A E310 D3B8 0024          000003B8  17088          STG   1,952(0,13)
                                           17089 * ***                                                 " (%" "d" " byte\
                                           17090 * s) "
                                           17091 * ***                                                 "failed CRC32C c\
                                           17092 * heck "
                                           17093 * ***                                                 "(original 0x%" \
                                           17094 * "x" " != "
                                           17095 * ***                                                 "calculated 0x%"\
                                           17096 *  "x" ")",
0000C760 E310 C18A 0004          0000C5A8  17097          LG    1,@lit_1947_1211
0000C766 4110 1820               00000820  17098          LA    1,2080(0,1)
0000C76A E310 D3C0 0024          000003C0  17099          STG   1,960(0,13)
0000C770 E310 D0F0 0004          000000F0  17100          LG    1,240(0,13)
0000C776 E310 D3C8 0024          000003C8  17101          STG   1,968(0,13)
0000C77C E310 D0F8 0014          000000F8  17102          LGF   1,248(0,13)
0000C782 E310 D3D0 0024          000003D0  17103          STG   1,976(0,13)
0000C788 E310 D104 0014          00000104  17104          LGF   1,260(0,13)
0000C78E E310 D3D8 0024          000003D8  17105          STG   1,984(0,13)
0000C794 B916 00FF                         17106          LLGFR 15,15
0000C798 E3F0 D3E0 0024          000003E0  17107          STG   15,992(0,13)
0000C79E 4110 D388               00000388  17108          LA    1,904(0,13)
0000C7A2 E3F0 C1E2 0004          0000C600  17109          LG    15,@lit_1947_1231 ; rd_kafka_consumer_err
0000C7A8                                   17110 @@gen_label1597 DS    0H
0000C7A8 05EF                              17111          BALR  14,15
0000C7AA                                   17112 @@gen_label1598 DS    0H
                                           17113 * ***                           do { size_t __len1 = (size_t)(crc_len)\
                                           17114 *  - rd_slice_offset(&(rkbuf)->rkbuf_reader); if (__len1 && !rd_slice_\
                                           17115 * read(&(rkbuf)->rkbuf_reader, ((void *)0), __len1)) do { size_t __len\
                                           17116 * 0 = (size_t)(__len1); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->end \
                                           17117 * - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do { if (log_dec\
                                           17118 * ode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("\
                                           17119 * C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",1075, __FUNC\
                                           17120 * TION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); \
                                           17121 * char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); if (\
                                                                                                                           Page  341 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           17122 * __strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[256]\
                                           17123 * ; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logna\
                                           17124 * me, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(r\
                                           17125 * kbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rk\
                                           17126 * b)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decod\
                                           17127 * e_errors, 0x0, "PROTOUFLOW", "Protocol read buffer underflow " "for \
                                           17128 * %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " byt\
                                           17129 * es > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf\
                                           17130 * ->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_of\
                                           17131 * fset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->\
                                           17132 * rkbuf_reader)->start), __FUNCTION__, 1075, __len0, ((&rkbuf->rkbuf_r\
                                           17133 * eader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rkb\
                                           17134 * uf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect bro\
                                           17135 * ker.version.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_err\
                                           17136 *  = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0); } } wh\
                                           17137 * ile (0); } while (0);
0000C7AA                                   17138 @L1653   DS    0H
0000C7AA 41F0 4078               00000078  17139          LA    15,120(0,4)
0000C7AE E3F0 D388 0024          00000388  17140          STG   15,904(0,13)
0000C7B4 4110 D388               00000388  17141          LA    1,904(0,13)
0000C7B8 E3F0 C1BA 0004          0000C5D8  17142          LG    15,@lit_1947_1223 ; rd_slice_offset
0000C7BE                                   17143 @@gen_label1599 DS    0H
0000C7BE 05EF                              17144          BALR  14,15
0000C7C0                                   17145 @@gen_label1600 DS    0H
0000C7C0 B90B 002F                         17146          SLGR  2,15
0000C7C4 B902 00F2                         17147          LTGR  15,2
0000C7C8 4780 C65A               0000CA78  17148          BZ    @L1656
0000C7CC 41F0 4078               00000078  17149          LA    15,120(0,4)
0000C7D0 E3F0 D388 0024          00000388  17150          STG   15,904(0,13)
0000C7D6 D707 D390 D390 00000390 00000390  17151          XC    912(8,13),912(13)
0000C7DC E320 D398 0024          00000398  17152          STG   2,920(0,13)
0000C7E2 4110 D388               00000388  17153          LA    1,904(0,13)
0000C7E6 E3F0 C1EA 0004          0000C608  17154          LG    15,@lit_1947_1233 ; rd_slice_read
0000C7EC                                   17155 @@gen_label1602 DS    0H
0000C7EC 05EF                              17156          BALR  14,15
0000C7EE                                   17157 @@gen_label1603 DS    0H
0000C7EE B902 00FF                         17158          LTGR  15,15
0000C7F2 4770 C65A               0000CA78  17159          BNZ   @L1656
0000C7F6                                   17160 @L1657   DS    0H
0000C7F6 E350 4098 0004          00000098  17161          LG    5,152(0,4)  ; offset of end in rd_slice_s
0000C7FC 41F0 4078               00000078  17162          LA    15,120(0,4)
0000C800 E3F0 D388 0024          00000388  17163          STG   15,904(0,13)
0000C806 4110 D388               00000388  17164          LA    1,904(0,13)
0000C80A E3F0 C1C2 0004          0000C5E0  17165          LG    15,@lit_1947_1224 ; rd_slice_abs_offset
0000C810                                   17166 @@gen_label1605 DS    0H
0000C810 05EF                              17167          BALR  14,15
0000C812                                   17168 @@gen_label1606 DS    0H
0000C812 B90B 005F                         17169          SLGR  5,15
0000C816 B921 0025                         17170          CLGR  2,5
0000C81A 47D0 C65A               0000CA78  17171          BNH   @L1660
0000C81E                                   17172 @L1661   DS    0H
0000C81E 1288                              17173          LTR   8,8
                                                                                                                           Page  342 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C820 47D0 C64A               0000CA68  17174          BNH   @L1664
0000C824                                   17175 @L1665   DS    0H
0000C824 E3F0 4100 0002          00000100  17176          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C82A 4770 C452               0000C870  17177          BNZ   @L1668
0000C82E E3F0 C18A 0004          0000C5A8  17178          LG    15,@lit_1947_1211
0000C834 4110 F2CE               000002CE  17179          LA    1,718(0,15)
0000C838 E310 D388 0024          00000388  17180          STG   1,904(0,13)
0000C83E E548 D390 0433          00000390  17181          MVGHI 912(13),1075
0000C844 E310 C182 0004          0000C5A0  17182          LG    1,@lit_1947_1212
0000C84A 4110 1258               00000258  17183          LA    1,600(0,1)
0000C84E E310 D398 0024          00000398  17184          STG   1,920(0,13)
0000C854 D707 D3A0 D3A0 000003A0 000003A0  17185          XC    928(8,13),928(13)
0000C85A 41F0 F362               00000362  17186          LA    15,866(0,15)
0000C85E E3F0 D3A8 0024          000003A8  17187          STG   15,936(0,13)
0000C864 4110 D388               00000388  17188          LA    1,904(0,13)
0000C868 E3F0 C17A 0004          0000C598  17189          LG    15,@lit_1947_1213 ; rd_kafka_crash
0000C86E                                   17190 @@gen_label1610 DS    0H
0000C86E 05EF                              17191          BALR  14,15
0000C870                                   17192 @@gen_label1611 DS    0H
0000C870                                   17193 @L1668   DS    0H
0000C870 41F0 D188               00000188  17194          LA    15,392(0,13)
0000C874 E3F0 D388 0024          00000388  17195          STG   15,904(0,13)
0000C87A E548 D390 0100          00000390  17196          MVGHI 912(13),256
0000C880 E3F0 C18A 0004          0000C5A8  17197          LG    15,@lit_1947_1211
0000C886 41F0 F37C               0000037C  17198          LA    15,892(0,15)
0000C88A E3F0 D398 0024          00000398  17199          STG   15,920(0,13)
0000C890 4110 D388               00000388  17200          LA    1,904(0,13)
0000C894 E3F0 C192 0004          0000C5B0  17201          LG    15,@lit_1947_1215 ; snprintf
0000C89A                                   17202 @@gen_label1612 DS    0H
0000C89A 05EF                              17203          BALR  14,15
0000C89C                                   17204 @@gen_label1613 DS    0H
0000C89C 41F0 D188               00000188  17205          LA    15,392(0,13)
0000C8A0 B904 001F                         17206          LGR   1,15
0000C8A4 A709 0000               00000000  17207          LGHI  0,0
0000C8A8                                   17208 @@gen_label1614 DS 0H
0000C8A8 B25E 000F                         17209          SRST  0,15
0000C8AC 4710 C48A               0000C8A8  17210          BC  1,@@gen_label1614
0000C8B0 B90B 0001                         17211          SLGR  0,1
0000C8B4 A70F 0002               00000002  17212          CGHI  0,2
0000C8B8 4770 C4A2               0000C8C0  17213          BNE   @L1670
0000C8BC 9200 D188      00000188 00000000  17214          MVI   392(13),0
0000C8C0                                   17215 @L1669   DS    0H
0000C8C0                                   17216 @L1670   DS    0H
0000C8C0 E3F0 4100 0004          00000100  17217          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C8C6 A759 1638               00001638  17218          LGHI  5,5688      ; 5688
0000C8CA 41F5 F000               00000000  17219          LA    15,0(5,15)
0000C8CE E3F0 D388 0024          00000388  17220          STG   15,904(0,13)
0000C8D4 4110 D388               00000388  17221          LA    1,904(0,13)
0000C8D8 E3F0 C19A 0004          0000C5B8  17222          LG    15,@lit_1947_1217 ; mtx_lock
0000C8DE                                   17223 @@gen_label1616 DS    0H
0000C8DE 05EF                              17224          BALR  14,15
0000C8E0                                   17225 @@gen_label1617 DS    0H
                                                                                                                           Page  343 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C8E0 41F0 D288               00000288  17226          LA    15,648(0,13)
0000C8E4 E3F0 D388 0024          00000388  17227          STG   15,904(0,13)
0000C8EA E3F0 4100 0004          00000100  17228          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C8F0 A719 1630               00001630  17229          LGHI  1,5680      ; 5680
0000C8F4 E3F1 F000 0004          00000000  17230          LG    15,0(1,15)
0000C8FA E3F0 D390 0024          00000390  17231          STG   15,912(0,13)
0000C900 E548 D398 0100          00000398  17232          MVGHI 920(13),256
0000C906 4110 D388               00000388  17233          LA    1,904(0,13)
0000C90A E3F0 C1A2 0004          0000C5C0  17234          LG    15,@lit_1947_1219 ; rd_strlcpy
0000C910                                   17235 @@gen_label1618 DS    0H
0000C910 05EF                              17236          BALR  14,15
0000C912                                   17237 @@gen_label1619 DS    0H
0000C912 E3F0 4100 0004          00000100  17238          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C918 41F5 F000               00000000  17239          LA    15,0(5,15)
0000C91C E3F0 D388 0024          00000388  17240          STG   15,904(0,13)
0000C922 4110 D388               00000388  17241          LA    1,904(0,13)
0000C926 E3F0 C1AA 0004          0000C5C8  17242          LG    15,@lit_1947_1221 ; mtx_unlock
0000C92C                                   17243 @@gen_label1620 DS    0H
0000C92C 05EF                              17244          BALR  14,15
0000C92E                                   17245 @@gen_label1621 DS    0H
0000C92E E3F0 40B8 0015          000000B8  17246          LGH   15,184(0,4)
0000C934 E3F0 D388 0024          00000388  17247          STG   15,904(0,13)
0000C93A 4110 D388               00000388  17248          LA    1,904(0,13)
0000C93E E3F0 C1B2 0004          0000C5D0  17249          LG    15,@lit_1947_1222 ; rd_kafka_ApiKey2str
0000C944                                   17250 @@gen_label1622 DS    0H
0000C944 05EF                              17251          BALR  14,15
0000C946                                   17252 @@gen_label1623 DS    0H
0000C946 B904 005F                         17253          LGR   5,15
0000C94A 41F0 4078               00000078  17254          LA    15,120(0,4)
0000C94E E3F0 D388 0024          00000388  17255          STG   15,904(0,13)
0000C954 4110 D388               00000388  17256          LA    1,904(0,13)
0000C958 E3F0 C1BA 0004          0000C5D8  17257          LG    15,@lit_1947_1223 ; rd_slice_offset
0000C95E                                   17258 @@gen_label1624 DS    0H
0000C95E 05EF                              17259          BALR  14,15
0000C960                                   17260 @@gen_label1625 DS    0H
0000C960 B904 006F                         17261          LGR   6,15
0000C964 E370 4098 0004          00000098  17262          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000C96A 41F0 4078               00000078  17263          LA    15,120(0,4)
0000C96E E3F0 D388 0024          00000388  17264          STG   15,904(0,13)
0000C974 4110 D388               00000388  17265          LA    1,904(0,13)
0000C978 E3F0 C1C2 0004          0000C5E0  17266          LG    15,@lit_1947_1224 ; rd_slice_abs_offset
0000C97E                                   17267 @@gen_label1626 DS    0H
0000C97E 05EF                              17268          BALR  14,15
0000C980                                   17269 @@gen_label1627 DS    0H
0000C980 B90B 007F                         17270          SLGR  7,15
0000C984 E3F0 41E8 0002          000001E8  17271          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000C98A 4780 C57A               0000C998  17272          BZ    @L1673
0000C98E E3F0 41E8 0004          000001E8  17273          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000C994 47F0 C584               0000C9A2  17274          B     @L1674
0000C998                                   17275 @L1673   DS    0H
                                                                                                                           Page  344 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C998 E3F0 C18A 0004          0000C5A8  17276          LG    15,@lit_1947_1211
0000C99E 41F0 F380               00000380  17277          LA    15,896(0,15)
0000C9A2                                   17278 @L1674   DS    0H
0000C9A2 E310 4100 0004          00000100  17279          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C9A8 E310 1FD0 0004          00000FD0  17280          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000C9AE 4110 1210               00000210  17281          LA    1,528(0,1)
0000C9B2 E310 D388 0024          00000388  17282          STG   1,904(0,13)
0000C9B8 E310 4100 0004          00000100  17283          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000C9BE E310 1FD0 0004          00000FD0  17284          LG    1,4048(0,1)
0000C9C4 E310 D390 0024          00000390  17285          STG   1,912(0,13)
0000C9CA 4110 D288               00000288  17286          LA    1,648(0,13)
0000C9CE E310 D398 0024          00000398  17287          STG   1,920(0,13)
0000C9D4 B914 0018                         17288          LGFR  1,8
0000C9D8 E310 D3A0 0024          000003A0  17289          STG   1,928(0,13)
0000C9DE D707 D3A8 D3A8 000003A8 000003A8  17290          XC    936(8,13),936(13)
0000C9E4 E310 C18A 0004          0000C5A8  17291          LG    1,@lit_1947_1211
0000C9EA 4180 13A4               000003A4  17292          LA    8,932(0,1)
0000C9EE E380 D3B0 0024          000003B0  17293          STG   8,944(0,13)
0000C9F4 4110 13B0               000003B0  17294          LA    1,944(0,1)
0000C9F8 E310 D3B8 0024          000003B8  17295          STG   1,952(0,13)
0000C9FE E350 D3C0 0024          000003C0  17296          STG   5,960(0,13)
0000CA04 4810 40BA               000000BA  17297          LH    1,186(0,4)
0000CA08 B914 0011                         17298          LGFR  1,1
0000CA0C E310 D3C8 0024          000003C8  17299          STG   1,968(0,13)
0000CA12 E360 D3D0 0024          000003D0  17300          STG   6,976(0,13)
0000CA18 E310 4098 0004          00000098  17301          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000CA1E E310 4090 000B          00000090  17302          SLG   1,144(0,4)
0000CA24 E310 D3D8 0024          000003D8  17303          STG   1,984(0,13)
0000CA2A E310 C182 0004          0000C5A0  17304          LG    1,@lit_1947_1212
0000CA30 4110 1258               00000258  17305          LA    1,600(0,1)
0000CA34 E310 D3E0 0024          000003E0  17306          STG   1,992(0,13)
0000CA3A E548 D3E8 0433          000003E8  17307          MVGHI 1000(13),1075
0000CA40 E320 D3F0 0024          000003F0  17308          STG   2,1008(0,13)
0000CA46 E370 D3F8 0024          000003F8  17309          STG   7,1016(0,13)
0000CA4C E3F0 D400 0024          00000400  17310          STG   15,1024(0,13)
0000CA52 41F0 D188               00000188  17311          LA    15,392(0,13)
0000CA56 E3F0 D408 0024          00000408  17312          STG   15,1032(0,13)
0000CA5C 4110 D388               00000388  17313          LA    1,904(0,13)
0000CA60 E3F0 C1CA 0004          0000C5E8  17314          LG    15,@lit_1947_1228 ; rd_kafka_log0
0000CA66                                   17315 @@gen_label1629 DS    0H
0000CA66 05EF                              17316          BALR  14,15
0000CA68                                   17317 @@gen_label1630 DS    0H
0000CA68                                   17318 @L1664   DS    0H
0000CA68 E54C 4188 FF65          00000188  17319          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000CA6E E3C0 C1D2 001A          0000C5F0  17320          ALGF  12,@lit_region_diff_1947_3_7
                                           17321          DROP  12
                        0000EB2A           17322          USING @REGION_1947_7,12
0000CA74 47F0 C164               0000EC8E  17323          B     @_err_parse@1947@4
                                           17324          DROP  12
                        0000C41E           17325          USING @REGION_1947_3,12
0000CA78                                   17326 @L1660   DS    0H
0000CA78                                   17327 @L1656   DS    0H
                                                                                                                           Page  345 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           17328 * ***                           rd_atomic64_add(&msetr->msetr_rkb->rkb\
                                           17329 * _c.rx_err, 1);
0000CA78 E3F0 3048 0004          00000048  17330          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000CA7E 41F0 F2A0               000002A0  17331          LA    15,672(0,15)
0000CA82 E3F0 D388 0024          00000388  17332          STG   15,904(0,13)
0000CA88 E548 D390 0001          00000390  17333          MVGHI 912(13),1
0000CA8E 4110 D388               00000388  17334          LA    1,904(0,13)
0000CA92 E3F0 C1F2 0004          0000C610  17335          LG    15,@lit_1947_1253 ; rd_atomic64_add
0000CA98                                   17336 @@gen_label1631 DS    0H
0000CA98 05EF                              17337          BALR  14,15
0000CA9A                                   17338 @@gen_label1632 DS    0H
                                           17339 * ***                           return RD_KAFKA_RESP_ERR_NO_ERROR;
0000CA9A A7F9 0000               00000000  17340          LGHI  15,0        ; 0
0000CA9E E3C0 C1D2 001A          0000C5F0  17341          ALGF  12,@lit_region_diff_1947_3_7
                                           17342          DROP  12
                        0000EB2A           17343          USING @REGION_1947_7,12
0000CAA4 47F0 C198               0000ECC2  17344          B     @ret_lab_1947
                                           17345          DROP  12
                        0000C41E           17346          USING @REGION_1947_3,12
                                           17347 * ***                   }
0000CAA8                                   17348 @L1652   DS    0H
                                           17349 * ***           }
0000CAA8                                   17350 @L1632   DS    0H
                                           17351 * ***
                                           17352 * ***           do { int16_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           17353 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           17354 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           17355 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           17356 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           17357 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                           17358 * 1081, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); }\
                                           17359 *  while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr),\
                                           17360 *  ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _\
                                           17361 * logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_st\
                                           17362 * rlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mt\
                                           17363 * x_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb\
                                           17364 * uf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lognam\
                                           17365 * e, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer under\
                                           17366 * flow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %\
                                           17367 * " "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiK\
                                           17368 * ey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion,\
                                           17369 *  rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end\
                                           17370 *  - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1081, __len0, ((&rk\
                                           17371 * buf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader))\
                                           17372 * , rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "i\
                                           17373 * ncorrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf\
                                           17374 * )->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while\
                                           17375 *  (0); } } while (0); } while (0); *(&hdr.Attributes) = (int16_t)(_v)\
                                           17376 * ; } while (0);
0000CAA8                                   17377 @L1675   DS    0H
0000CAA8                                   17378 @L1678   DS    0H
                                                                                                                           Page  346 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CAA8 A729 0002               00000002  17379          LGHI  2,2         ; 2
0000CAAC 41F0 4078               00000078  17380          LA    15,120(0,4)
0000CAB0 E3F0 D388 0024          00000388  17381          STG   15,904(0,13)
0000CAB6 41F0 D0BC               000000BC  17382          LA    15,188(0,13)
0000CABA E3F0 D390 0024          00000390  17383          STG   15,912(0,13)
0000CAC0 E320 D398 0024          00000398  17384          STG   2,920(0,13)
0000CAC6 4110 D388               00000388  17385          LA    1,904(0,13)
0000CACA E3F0 C1EA 0004          0000C608  17386          LG    15,@lit_1947_1233 ; rd_slice_read
0000CAD0                                   17387 @@gen_label1633 DS    0H
0000CAD0 05EF                              17388          BALR  14,15
0000CAD2                                   17389 @@gen_label1634 DS    0H
0000CAD2 B902 00FF                         17390          LTGR  15,15
0000CAD6 4770 C93E               0000CD5C  17391          BNZ   @L1681
0000CADA                                   17392 @L1682   DS    0H
0000CADA E370 4098 0004          00000098  17393          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000CAE0 41F0 4078               00000078  17394          LA    15,120(0,4)
0000CAE4 E3F0 D388 0024          00000388  17395          STG   15,904(0,13)
0000CAEA 4110 D388               00000388  17396          LA    1,904(0,13)
0000CAEE E3F0 C1C2 0004          0000C5E0  17397          LG    15,@lit_1947_1224 ; rd_slice_abs_offset
0000CAF4                                   17398 @@gen_label1636 DS    0H
0000CAF4 05EF                              17399          BALR  14,15
0000CAF6                                   17400 @@gen_label1637 DS    0H
0000CAF6 B90B 007F                         17401          SLGR  7,15
0000CAFA B921 0027                         17402          CLGR  2,7
0000CAFE 47D0 C93E               0000CD5C  17403          BNH   @L1685
0000CB02                                   17404 @L1686   DS    0H
0000CB02 1288                              17405          LTR   8,8
0000CB04 47D0 C92E               0000CD4C  17406          BNH   @L1689
0000CB08                                   17407 @L1690   DS    0H
0000CB08 E3F0 4100 0002          00000100  17408          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000CB0E 4770 C736               0000CB54  17409          BNZ   @L1693
0000CB12 E3F0 C18A 0004          0000C5A8  17410          LG    15,@lit_1947_1211
0000CB18 4110 F2CE               000002CE  17411          LA    1,718(0,15)
0000CB1C E310 D388 0024          00000388  17412          STG   1,904(0,13)
0000CB22 E548 D390 0439          00000390  17413          MVGHI 912(13),1081
0000CB28 E310 C182 0004          0000C5A0  17414          LG    1,@lit_1947_1212
0000CB2E 4110 1258               00000258  17415          LA    1,600(0,1)
0000CB32 E310 D398 0024          00000398  17416          STG   1,920(0,13)
0000CB38 D707 D3A0 D3A0 000003A0 000003A0  17417          XC    928(8,13),928(13)
0000CB3E 41F0 F362               00000362  17418          LA    15,866(0,15)
0000CB42 E3F0 D3A8 0024          000003A8  17419          STG   15,936(0,13)
0000CB48 4110 D388               00000388  17420          LA    1,904(0,13)
0000CB4C E3F0 C17A 0004          0000C598  17421          LG    15,@lit_1947_1213 ; rd_kafka_crash
0000CB52                                   17422 @@gen_label1641 DS    0H
0000CB52 05EF                              17423          BALR  14,15
0000CB54                                   17424 @@gen_label1642 DS    0H
0000CB54                                   17425 @L1693   DS    0H
0000CB54 41F0 D160               00000160  17426          LA    15,352(0,13)
0000CB58 E3F0 D388 0024          00000388  17427          STG   15,904(0,13)
0000CB5E E548 D390 0100          00000390  17428          MVGHI 912(13),256
0000CB64 E3F0 C18A 0004          0000C5A8  17429          LG    15,@lit_1947_1211
0000CB6A 41F0 F37C               0000037C  17430          LA    15,892(0,15)
                                                                                                                           Page  347 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CB6E E3F0 D398 0024          00000398  17431          STG   15,920(0,13)
0000CB74 4110 D388               00000388  17432          LA    1,904(0,13)
0000CB78 E3F0 C192 0004          0000C5B0  17433          LG    15,@lit_1947_1215 ; snprintf
0000CB7E                                   17434 @@gen_label1643 DS    0H
0000CB7E 05EF                              17435          BALR  14,15
0000CB80                                   17436 @@gen_label1644 DS    0H
0000CB80 41F0 D160               00000160  17437          LA    15,352(0,13)
0000CB84 B904 001F                         17438          LGR   1,15
0000CB88 A709 0000               00000000  17439          LGHI  0,0
0000CB8C                                   17440 @@gen_label1645 DS 0H
0000CB8C B25E 000F                         17441          SRST  0,15
0000CB90 4710 C76E               0000CB8C  17442          BC  1,@@gen_label1645
0000CB94 B90B 0001                         17443          SLGR  0,1
0000CB98 A70F 0002               00000002  17444          CGHI  0,2
0000CB9C 4770 C786               0000CBA4  17445          BNE   @L1695
0000CBA0 9200 D160      00000160 00000000  17446          MVI   352(13),0
0000CBA4                                   17447 @L1694   DS    0H
0000CBA4                                   17448 @L1695   DS    0H
0000CBA4 E3F0 4100 0004          00000100  17449          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000CBAA A759 1638               00001638  17450          LGHI  5,5688      ; 5688
0000CBAE 41F5 F000               00000000  17451          LA    15,0(5,15)
0000CBB2 E3F0 D388 0024          00000388  17452          STG   15,904(0,13)
0000CBB8 4110 D388               00000388  17453          LA    1,904(0,13)
0000CBBC E3F0 C19A 0004          0000C5B8  17454          LG    15,@lit_1947_1217 ; mtx_lock
0000CBC2                                   17455 @@gen_label1647 DS    0H
0000CBC2 05EF                              17456          BALR  14,15
0000CBC4                                   17457 @@gen_label1648 DS    0H
0000CBC4 41F0 D260               00000260  17458          LA    15,608(0,13)
0000CBC8 E3F0 D388 0024          00000388  17459          STG   15,904(0,13)
0000CBCE E3F0 4100 0004          00000100  17460          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000CBD4 A719 1630               00001630  17461          LGHI  1,5680      ; 5680
0000CBD8 E3F1 F000 0004          00000000  17462          LG    15,0(1,15)
0000CBDE E3F0 D390 0024          00000390  17463          STG   15,912(0,13)
0000CBE4 E548 D398 0100          00000398  17464          MVGHI 920(13),256
0000CBEA 4110 D388               00000388  17465          LA    1,904(0,13)
0000CBEE E3F0 C1A2 0004          0000C5C0  17466          LG    15,@lit_1947_1219 ; rd_strlcpy
0000CBF4                                   17467 @@gen_label1649 DS    0H
0000CBF4 05EF                              17468          BALR  14,15
0000CBF6                                   17469 @@gen_label1650 DS    0H
0000CBF6 E3F0 4100 0004          00000100  17470          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000CBFC 41F5 F000               00000000  17471          LA    15,0(5,15)
0000CC00 E3F0 D388 0024          00000388  17472          STG   15,904(0,13)
0000CC06 4110 D388               00000388  17473          LA    1,904(0,13)
0000CC0A E3F0 C1AA 0004          0000C5C8  17474          LG    15,@lit_1947_1221 ; mtx_unlock
0000CC10                                   17475 @@gen_label1651 DS    0H
0000CC10 05EF                              17476          BALR  14,15
0000CC12                                   17477 @@gen_label1652 DS    0H
0000CC12 E3F0 40B8 0015          000000B8  17478          LGH   15,184(0,4)
0000CC18 E3F0 D388 0024          00000388  17479          STG   15,904(0,13)
0000CC1E 4110 D388               00000388  17480          LA    1,904(0,13)
0000CC22 E3F0 C1B2 0004          0000C5D0  17481          LG    15,@lit_1947_1222 ; rd_kafka_ApiKey2str
0000CC28                                   17482 @@gen_label1653 DS    0H
                                                                                                                           Page  348 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CC28 05EF                              17483          BALR  14,15
0000CC2A                                   17484 @@gen_label1654 DS    0H
0000CC2A B904 005F                         17485          LGR   5,15
0000CC2E 41F0 4078               00000078  17486          LA    15,120(0,4)
0000CC32 E3F0 D388 0024          00000388  17487          STG   15,904(0,13)
0000CC38 4110 D388               00000388  17488          LA    1,904(0,13)
0000CC3C E3F0 C1BA 0004          0000C5D8  17489          LG    15,@lit_1947_1223 ; rd_slice_offset
0000CC42                                   17490 @@gen_label1655 DS    0H
0000CC42 05EF                              17491          BALR  14,15
0000CC44                                   17492 @@gen_label1656 DS    0H
0000CC44 B904 006F                         17493          LGR   6,15
0000CC48 E370 4098 0004          00000098  17494          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000CC4E 41F0 4078               00000078  17495          LA    15,120(0,4)
0000CC52 E3F0 D388 0024          00000388  17496          STG   15,904(0,13)
0000CC58 4110 D388               00000388  17497          LA    1,904(0,13)
0000CC5C E3F0 C1C2 0004          0000C5E0  17498          LG    15,@lit_1947_1224 ; rd_slice_abs_offset
0000CC62                                   17499 @@gen_label1657 DS    0H
0000CC62 05EF                              17500          BALR  14,15
0000CC64                                   17501 @@gen_label1658 DS    0H
0000CC64 B90B 007F                         17502          SLGR  7,15
0000CC68 E3F0 41E8 0002          000001E8  17503          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000CC6E 4780 C85E               0000CC7C  17504          BZ    @L1698
0000CC72 E3F0 41E8 0004          000001E8  17505          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000CC78 47F0 C868               0000CC86  17506          B     @L1699
0000CC7C                                   17507 @L1698   DS    0H
0000CC7C E3F0 C18A 0004          0000C5A8  17508          LG    15,@lit_1947_1211
0000CC82 41F0 F380               00000380  17509          LA    15,896(0,15)
0000CC86                                   17510 @L1699   DS    0H
0000CC86 E310 4100 0004          00000100  17511          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000CC8C E310 1FD0 0004          00000FD0  17512          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000CC92 4110 1210               00000210  17513          LA    1,528(0,1)
0000CC96 E310 D388 0024          00000388  17514          STG   1,904(0,13)
0000CC9C E310 4100 0004          00000100  17515          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000CCA2 E310 1FD0 0004          00000FD0  17516          LG    1,4048(0,1)
0000CCA8 E310 D390 0024          00000390  17517          STG   1,912(0,13)
0000CCAE 4110 D260               00000260  17518          LA    1,608(0,13)
0000CCB2 E310 D398 0024          00000398  17519          STG   1,920(0,13)
0000CCB8 B914 0018                         17520          LGFR  1,8
0000CCBC E310 D3A0 0024          000003A0  17521          STG   1,928(0,13)
0000CCC2 D707 D3A8 D3A8 000003A8 000003A8  17522          XC    936(8,13),936(13)
0000CCC8 E310 C18A 0004          0000C5A8  17523          LG    1,@lit_1947_1211
0000CCCE 4180 13A4               000003A4  17524          LA    8,932(0,1)
0000CCD2 E380 D3B0 0024          000003B0  17525          STG   8,944(0,13)
0000CCD8 4110 13B0               000003B0  17526          LA    1,944(0,1)
0000CCDC E310 D3B8 0024          000003B8  17527          STG   1,952(0,13)
0000CCE2 E350 D3C0 0024          000003C0  17528          STG   5,960(0,13)
0000CCE8 4810 40BA               000000BA  17529          LH    1,186(0,4)
0000CCEC B914 0011                         17530          LGFR  1,1
0000CCF0 E310 D3C8 0024          000003C8  17531          STG   1,968(0,13)
0000CCF6 E360 D3D0 0024          000003D0  17532          STG   6,976(0,13)
                                                                                                                           Page  349 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CCFC E310 4098 0004          00000098  17533          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000CD02 E310 4090 000B          00000090  17534          SLG   1,144(0,4)
0000CD08 E310 D3D8 0024          000003D8  17535          STG   1,984(0,13)
0000CD0E E310 C182 0004          0000C5A0  17536          LG    1,@lit_1947_1212
0000CD14 4110 1258               00000258  17537          LA    1,600(0,1)
0000CD18 E310 D3E0 0024          000003E0  17538          STG   1,992(0,13)
0000CD1E E548 D3E8 0439          000003E8  17539          MVGHI 1000(13),1081
0000CD24 E320 D3F0 0024          000003F0  17540          STG   2,1008(0,13)
0000CD2A E370 D3F8 0024          000003F8  17541          STG   7,1016(0,13)
0000CD30 E3F0 D400 0024          00000400  17542          STG   15,1024(0,13)
0000CD36 41F0 D160               00000160  17543          LA    15,352(0,13)
0000CD3A E3F0 D408 0024          00000408  17544          STG   15,1032(0,13)
0000CD40 4110 D388               00000388  17545          LA    1,904(0,13)
0000CD44 E3F0 C1CA 0004          0000C5E8  17546          LG    15,@lit_1947_1228 ; rd_kafka_log0
0000CD4A                                   17547 @@gen_label1660 DS    0H
0000CD4A 05EF                              17548          BALR  14,15
0000CD4C                                   17549 @@gen_label1661 DS    0H
0000CD4C                                   17550 @L1689   DS    0H
0000CD4C E54C 4188 FF65          00000188  17551          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000CD52 E3C0 C1D2 001A          0000C5F0  17552          ALGF  12,@lit_region_diff_1947_3_7
                                           17553          DROP  12
                        0000EB2A           17554          USING @REGION_1947_7,12
0000CD58 47F0 C164               0000EC8E  17555          B     @_err_parse@1947@4
                                           17556          DROP  12
                        0000C41E           17557          USING @REGION_1947_3,12
0000CD5C                                   17558 @L1685   DS    0H
0000CD5C                                   17559 @L1681   DS    0H
0000CD5C D201 D108 D0BC 00000108 000000BC  17560          MVC   264(2,13),188(13)
                                           17561 * ***           do { int32_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           17562 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           17563 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           17564 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           17565 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           17566 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                           17567 * 1082, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); }\
                                           17568 *  while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr),\
                                           17569 *  ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _\
                                           17570 * logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_st\
                                           17571 * rlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mt\
                                           17572 * x_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb\
                                           17573 * uf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lognam\
                                           17574 * e, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer under\
                                           17575 * flow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %\
                                           17576 * " "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiK\
                                           17577 * ey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion,\
                                           17578 *  rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end\
                                           17579 *  - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1082, __len0, ((&rk\
                                           17580 * buf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader))\
                                           17581 * , rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "i\
                                           17582 * ncorrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf\
                                           17583 * )->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while\
                                           17584 *  (0); } } while (0); } while (0); *(&hdr.LastOffsetDelta) = (_v); } \
                                                                                                                           Page  350 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           17585 * while (0);
0000CD62                                   17586 @L1700   DS    0H
0000CD62                                   17587 @L1703   DS    0H
0000CD62 A729 0004               00000004  17588          LGHI  2,4         ; 4
0000CD66 41F0 4078               00000078  17589          LA    15,120(0,4)
0000CD6A E3F0 D388 0024          00000388  17590          STG   15,904(0,13)
0000CD70 41F0 D0C0               000000C0  17591          LA    15,192(0,13)
0000CD74 E3F0 D390 0024          00000390  17592          STG   15,912(0,13)
0000CD7A E320 D398 0024          00000398  17593          STG   2,920(0,13)
0000CD80 4110 D388               00000388  17594          LA    1,904(0,13)
0000CD84 E3F0 C1EA 0004          0000C608  17595          LG    15,@lit_1947_1233 ; rd_slice_read
0000CD8A                                   17596 @@gen_label1662 DS    0H
0000CD8A 05EF                              17597          BALR  14,15
0000CD8C                                   17598 @@gen_label1663 DS    0H
0000CD8C B902 00FF                         17599          LTGR  15,15
0000CD90 4780 C980               0000CD9E  17600          BZ    *+14  Around region break
0000CD94 E3C0 C1FA 001A          0000C618  17601          ALGF  12,@lit_region_diff_1947_3_4
                                           17602          DROP  12
                        0000CDFA           17603          USING @REGION_1947_4,12
0000CD9A 47F0 C2BA               0000D0B4  17604          B     @L1706
                                           17605          DROP  12
                        0000C41E           17606          USING @REGION_1947_3,12
0000CD9E                                   17607 @L1707   DS    0H
0000CD9E E370 4098 0004          00000098  17608          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000CDA4 41F0 4078               00000078  17609          LA    15,120(0,4)
0000CDA8 E3F0 D388 0024          00000388  17610          STG   15,904(0,13)
0000CDAE 4110 D388               00000388  17611          LA    1,904(0,13)
0000CDB2 E3F0 C1C2 0004          0000C5E0  17612          LG    15,@lit_1947_1224 ; rd_slice_abs_offset
0000CDB8                                   17613 @@gen_label1665 DS    0H
0000CDB8 05EF                              17614          BALR  14,15
0000CDBA                                   17615 @@gen_label1666 DS    0H
0000CDBA B90B 007F                         17616          SLGR  7,15
0000CDBE B921 0027                         17617          CLGR  2,7
0000CDC2 4720 C9B2               0000CDD0  17618          BH    *+14  Around region break
0000CDC6 E3C0 C1FA 001A          0000C618  17619          ALGF  12,@lit_region_diff_1947_3_4
                                           17620          DROP  12
                        0000CDFA           17621          USING @REGION_1947_4,12
0000CDCC 47F0 C2BA               0000D0B4  17622          B     @L1710
                                           17623          DROP  12
                        0000C41E           17624          USING @REGION_1947_3,12
0000CDD0                                   17625 @L1711   DS    0H
0000CDD0 1288                              17626          LTR   8,8
0000CDD2 4720 C9C2               0000CDE0  17627          BH    *+14  Around region break
0000CDD6 E3C0 C1FA 001A          0000C618  17628          ALGF  12,@lit_region_diff_1947_3_4
                                           17629          DROP  12
                        0000CDFA           17630          USING @REGION_1947_4,12
0000CDDC 47F0 C2AA               0000D0A4  17631          B     @L1714
                                           17632          DROP  12
                        0000C41E           17633          USING @REGION_1947_3,12
0000CDE0                                   17634 @L1715   DS    0H
0000CDE0 E3F0 4100 0002          00000100  17635          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000CDE6 4780 C9D6               0000CDF4  17636          BZ    *+14  Around region break
                                                                                                                           Page  351 
  Active Usings: @REGION_1947_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CDEA E3C0 C1FA 001A          0000C618  17637          ALGF  12,@lit_region_diff_1947_3_4
                                           17638          DROP  12
                        0000CDFA           17639          USING @REGION_1947_4,12
0000CDF0 47F0 C042               0000CE3C  17640          B     @L1718
                                           17641          DROP  12
                        0000C41E           17642          USING @REGION_1947_3,12
0000CDF4 E3C0 C1FA 001A          0000C618  17643          ALGF  12,@lit_region_diff_1947_3_4
0000CDFA                                   17644 @REGION_1947_4 DS 0H
                                           17645          DROP  12
                        0000CDFA           17646          USING @REGION_1947_4,12
0000CDFA E3F0 C17E 0004          0000CF78  17647          LG    15,@lit_1947_1279
0000CE00 4110 F2CE               000002CE  17648          LA    1,718(0,15)
0000CE04 E310 D388 0024          00000388  17649          STG   1,904(0,13)
0000CE0A E548 D390 043A          00000390  17650          MVGHI 912(13),1082
0000CE10 E310 C176 0004          0000CF70  17651          LG    1,@lit_1947_1280
0000CE16 4110 1258               00000258  17652          LA    1,600(0,1)
0000CE1A E310 D398 0024          00000398  17653          STG   1,920(0,13)
0000CE20 D707 D3A0 D3A0 000003A0 000003A0  17654          XC    928(8,13),928(13)
0000CE26 41F0 F362               00000362  17655          LA    15,866(0,15)
0000CE2A E3F0 D3A8 0024          000003A8  17656          STG   15,936(0,13)
0000CE30 4110 D388               00000388  17657          LA    1,904(0,13)
0000CE34 E3F0 C16E 0004          0000CF68  17658          LG    15,@lit_1947_1281 ; rd_kafka_crash
0000CE3A                                   17659 @@gen_label1670 DS    0H
0000CE3A 05EF                              17660          BALR  14,15
0000CE3C                                   17661 @@gen_label1671 DS    0H
0000CE3C                                   17662 @L1718   DS    0H
0000CE3C 41F0 D160               00000160  17663          LA    15,352(0,13)
0000CE40 E3F0 D388 0024          00000388  17664          STG   15,904(0,13)
0000CE46 E548 D390 0100          00000390  17665          MVGHI 912(13),256
0000CE4C E3F0 C17E 0004          0000CF78  17666          LG    15,@lit_1947_1279
0000CE52 41F0 F37C               0000037C  17667          LA    15,892(0,15)
0000CE56 E3F0 D398 0024          00000398  17668          STG   15,920(0,13)
0000CE5C 4110 D388               00000388  17669          LA    1,904(0,13)
0000CE60 E3F0 C186 0004          0000CF80  17670          LG    15,@lit_1947_1283 ; snprintf
0000CE66                                   17671 @@gen_label1672 DS    0H
0000CE66 05EF                              17672          BALR  14,15
0000CE68                                   17673 @@gen_label1673 DS    0H
0000CE68 41F0 D160               00000160  17674          LA    15,352(0,13)
0000CE6C B904 001F                         17675          LGR   1,15
0000CE70 A709 0000               00000000  17676          LGHI  0,0
0000CE74                                   17677 @@gen_label1674 DS 0H
0000CE74 B25E 000F                         17678          SRST  0,15
0000CE78 4710 C07A               0000CE74  17679          BC  1,@@gen_label1674
0000CE7C B90B 0001                         17680          SLGR  0,1
0000CE80 A70F 0002               00000002  17681          CGHI  0,2
0000CE84 4770 C092               0000CE8C  17682          BNE   @L1720
0000CE88 9200 D160      00000160 00000000  17683          MVI   352(13),0
0000CE8C                                   17684 @L1719   DS    0H
0000CE8C                                   17685 @L1720   DS    0H
0000CE8C E3F0 4100 0004          00000100  17686          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000CE92 A759 1638               00001638  17687          LGHI  5,5688      ; 5688
0000CE96 41F5 F000               00000000  17688          LA    15,0(5,15)
                                                                                                                           Page  352 
  Active Usings: @REGION_1947_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CE9A E3F0 D388 0024          00000388  17689          STG   15,904(0,13)
0000CEA0 4110 D388               00000388  17690          LA    1,904(0,13)
0000CEA4 E3F0 C18E 0004          0000CF88  17691          LG    15,@lit_1947_1285 ; mtx_lock
0000CEAA                                   17692 @@gen_label1676 DS    0H
0000CEAA 05EF                              17693          BALR  14,15
0000CEAC                                   17694 @@gen_label1677 DS    0H
0000CEAC 41F0 D260               00000260  17695          LA    15,608(0,13)
0000CEB0 E3F0 D388 0024          00000388  17696          STG   15,904(0,13)
0000CEB6 E3F0 4100 0004          00000100  17697          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000CEBC A719 1630               00001630  17698          LGHI  1,5680      ; 5680
0000CEC0 E3F1 F000 0004          00000000  17699          LG    15,0(1,15)
0000CEC6 E3F0 D390 0024          00000390  17700          STG   15,912(0,13)
0000CECC E548 D398 0100          00000398  17701          MVGHI 920(13),256
0000CED2 4110 D388               00000388  17702          LA    1,904(0,13)
0000CED6 E3F0 C196 0004          0000CF90  17703          LG    15,@lit_1947_1287 ; rd_strlcpy
0000CEDC                                   17704 @@gen_label1678 DS    0H
0000CEDC 05EF                              17705          BALR  14,15
0000CEDE                                   17706 @@gen_label1679 DS    0H
0000CEDE E3F0 4100 0004          00000100  17707          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000CEE4 41F5 F000               00000000  17708          LA    15,0(5,15)
0000CEE8 E3F0 D388 0024          00000388  17709          STG   15,904(0,13)
0000CEEE 4110 D388               00000388  17710          LA    1,904(0,13)
0000CEF2 E3F0 C19E 0004          0000CF98  17711          LG    15,@lit_1947_1289 ; mtx_unlock
0000CEF8                                   17712 @@gen_label1680 DS    0H
0000CEF8 05EF                              17713          BALR  14,15
0000CEFA                                   17714 @@gen_label1681 DS    0H
0000CEFA E3F0 40B8 0015          000000B8  17715          LGH   15,184(0,4)
0000CF00 E3F0 D388 0024          00000388  17716          STG   15,904(0,13)
0000CF06 4110 D388               00000388  17717          LA    1,904(0,13)
0000CF0A E3F0 C1A6 0004          0000CFA0  17718          LG    15,@lit_1947_1290 ; rd_kafka_ApiKey2str
0000CF10                                   17719 @@gen_label1682 DS    0H
0000CF10 05EF                              17720          BALR  14,15
0000CF12                                   17721 @@gen_label1683 DS    0H
0000CF12 B904 005F                         17722          LGR   5,15
0000CF16 41F0 4078               00000078  17723          LA    15,120(0,4)
0000CF1A E3F0 D388 0024          00000388  17724          STG   15,904(0,13)
0000CF20 4110 D388               00000388  17725          LA    1,904(0,13)
0000CF24 E3F0 C1AE 0004          0000CFA8  17726          LG    15,@lit_1947_1291 ; rd_slice_offset
0000CF2A                                   17727 @@gen_label1684 DS    0H
0000CF2A 05EF                              17728          BALR  14,15
0000CF2C                                   17729 @@gen_label1685 DS    0H
0000CF2C B904 006F                         17730          LGR   6,15
0000CF30 E370 4098 0004          00000098  17731          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000CF36 41F0 4078               00000078  17732          LA    15,120(0,4)
0000CF3A E3F0 D388 0024          00000388  17733          STG   15,904(0,13)
0000CF40 4110 D388               00000388  17734          LA    1,904(0,13)
0000CF44 E3F0 C1B6 0004          0000CFB0  17735          LG    15,@lit_1947_1292 ; rd_slice_abs_offset
0000CF4A                                   17736 @@gen_label1686 DS    0H
0000CF4A 05EF                              17737          BALR  14,15
0000CF4C                                   17738 @@gen_label1687 DS    0H
0000CF4C B90B 007F                         17739          SLGR  7,15
0000CF50 E3F0 41E8 0002          000001E8  17740          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                                                                           Page  353 
  Active Usings: @REGION_1947_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                ka_buf_s
0000CF56 4780 C1DA               0000CFD4  17741          BZ    @L1723
0000CF5A E3F0 41E8 0004          000001E8  17742          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000CF60 47F0 C1E4               0000CFDE  17743          B     @L1724
0000CF68                                   17744          DS    0D
0000CF68 0000000000000000                  17745 @lit_1947_1281 DC AD(rd_kafka_crash)
0000CF70 0000000000012808                  17746 @lit_1947_1280 DC AD(@DATA)
0000CF78 0000000000012AB8                  17747 @lit_1947_1279 DC AD(@strings@)
0000CF80 0000000000000000                  17748 @lit_1947_1283 DC AD(snprintf)
0000CF88 0000000000000000                  17749 @lit_1947_1285 DC AD(mtx_lock)
0000CF90 0000000000001668                  17750 @lit_1947_1287 DC AD(rd_strlcpy)
0000CF98 0000000000000000                  17751 @lit_1947_1289 DC AD(mtx_unlock)
0000CFA0 00000000000014D0                  17752 @lit_1947_1290 DC AD(rd_kafka_$Api$Key2str)
0000CFA8 00000000000012B8                  17753 @lit_1947_1291 DC AD(rd_slice_offset)
0000CFB0 0000000000001210                  17754 @lit_1947_1292 DC AD(rd_slice_abs_offset)
0000CFB8 0000000000000000                  17755 @lit_1947_1296 DC AD(rd_kafka_log0)
0000CFC0 00001D30                          17756 @lit_region_diff_1947_4_7  DC A(@REGION_1947_7-@REGION_1947_4)
0000CFC4 00000000
0000CFC8 0000000000000000                  17757 @lit_1947_1298 DC AD(rd_slice_read)
0000CFD0 0000098E                          17758 @lit_region_diff_1947_4_5  DC A(@REGION_1947_5-@REGION_1947_4)
0000CFD4                                   17759 @L1723   DS    0H
0000CFD4 E3F0 C17E 0004          0000CF78  17760          LG    15,@lit_1947_1279
0000CFDA 41F0 F380               00000380  17761          LA    15,896(0,15)
0000CFDE                                   17762 @L1724   DS    0H
0000CFDE E310 4100 0004          00000100  17763          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000CFE4 E310 1FD0 0004          00000FD0  17764          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000CFEA 4110 1210               00000210  17765          LA    1,528(0,1)
0000CFEE E310 D388 0024          00000388  17766          STG   1,904(0,13)
0000CFF4 E310 4100 0004          00000100  17767          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000CFFA E310 1FD0 0004          00000FD0  17768          LG    1,4048(0,1)
0000D000 E310 D390 0024          00000390  17769          STG   1,912(0,13)
0000D006 4110 D260               00000260  17770          LA    1,608(0,13)
0000D00A E310 D398 0024          00000398  17771          STG   1,920(0,13)
0000D010 B914 0018                         17772          LGFR  1,8
0000D014 E310 D3A0 0024          000003A0  17773          STG   1,928(0,13)
0000D01A D707 D3A8 D3A8 000003A8 000003A8  17774          XC    936(8,13),936(13)
0000D020 E310 C17E 0004          0000CF78  17775          LG    1,@lit_1947_1279
0000D026 4180 13A4               000003A4  17776          LA    8,932(0,1)
0000D02A E380 D3B0 0024          000003B0  17777          STG   8,944(0,13)
0000D030 4110 13B0               000003B0  17778          LA    1,944(0,1)
0000D034 E310 D3B8 0024          000003B8  17779          STG   1,952(0,13)
0000D03A E350 D3C0 0024          000003C0  17780          STG   5,960(0,13)
0000D040 4810 40BA               000000BA  17781          LH    1,186(0,4)
0000D044 B914 0011                         17782          LGFR  1,1
0000D048 E310 D3C8 0024          000003C8  17783          STG   1,968(0,13)
0000D04E E360 D3D0 0024          000003D0  17784          STG   6,976(0,13)
0000D054 E310 4098 0004          00000098  17785          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000D05A E310 4090 000B          00000090  17786          SLG   1,144(0,4)
0000D060 E310 D3D8 0024          000003D8  17787          STG   1,984(0,13)
0000D066 E310 C176 0004          0000CF70  17788          LG    1,@lit_1947_1280
0000D06C 4110 1258               00000258  17789          LA    1,600(0,1)
                                                                                                                           Page  354 
  Active Usings: @REGION_1947_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D070 E310 D3E0 0024          000003E0  17790          STG   1,992(0,13)
0000D076 E548 D3E8 043A          000003E8  17791          MVGHI 1000(13),1082
0000D07C E320 D3F0 0024          000003F0  17792          STG   2,1008(0,13)
0000D082 E370 D3F8 0024          000003F8  17793          STG   7,1016(0,13)
0000D088 E3F0 D400 0024          00000400  17794          STG   15,1024(0,13)
0000D08E 41F0 D160               00000160  17795          LA    15,352(0,13)
0000D092 E3F0 D408 0024          00000408  17796          STG   15,1032(0,13)
0000D098 4110 D388               00000388  17797          LA    1,904(0,13)
0000D09C E3F0 C1BE 0004          0000CFB8  17798          LG    15,@lit_1947_1296 ; rd_kafka_log0
0000D0A2                                   17799 @@gen_label1689 DS    0H
0000D0A2 05EF                              17800          BALR  14,15
0000D0A4                                   17801 @@gen_label1690 DS    0H
0000D0A4                                   17802 @L1714   DS    0H
0000D0A4 E54C 4188 FF65          00000188  17803          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000D0AA E3C0 C1C6 001A          0000CFC0  17804          ALGF  12,@lit_region_diff_1947_4_7
                                           17805          DROP  12
                        0000EB2A           17806          USING @REGION_1947_7,12
0000D0B0 47F0 C164               0000EC8E  17807          B     @_err_parse@1947@4
                                           17808          DROP  12
                        0000CDFA           17809          USING @REGION_1947_4,12
0000D0B4                                   17810 @L1710   DS    0H
0000D0B4                                   17811 @L1706   DS    0H
0000D0B4 58F0 D0C0               000000C0  17812          L     15,192(0,13) ; _v
0000D0B8 50F0 D10C               0000010C  17813          ST    15,268(0,13) ; offset of LastOffsetDelta in msgset_v2_hd*
                                                                r
                                           17814 * ***           LastOffset = hdr.BaseOffset + hdr.LastOffsetDelta;
0000D0BC E370 D0F0 0004          000000F0  17815          LG    7,240(0,13)
0000D0C2 E370 D10C 0018          0000010C  17816          AGF   7,268(0,13)
                                           17817 * ***           do { int64_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           17818 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           17819 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           17820 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           17821 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           17822 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                           17823 * 1084, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); }\
                                           17824 *  while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr),\
                                           17825 *  ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _\
                                           17826 * logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_st\
                                           17827 * rlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mt\
                                           17828 * x_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb\
                                           17829 * uf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lognam\
                                           17830 * e, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer under\
                                           17831 * flow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %\
                                           17832 * " "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiK\
                                           17833 * ey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion,\
                                           17834 *  rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end\
                                           17835 *  - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1084, __len0, ((&rk\
                                           17836 * buf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader))\
                                           17837 * , rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "i\
                                           17838 * ncorrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf\
                                           17839 * )->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while\
                                           17840 *  (0); } } while (0); } while (0); *(&hdr.BaseTimestamp) = (_v); } wh\
                                                                                                                           Page  355 
  Active Usings: @REGION_1947_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           17841 * ile (0);
0000D0C8                                   17842 @L1725   DS    0H
0000D0C8                                   17843 @L1728   DS    0H
0000D0C8 A729 0008               00000008  17844          LGHI  2,8         ; 8
0000D0CC 41F0 4078               00000078  17845          LA    15,120(0,4)
0000D0D0 E3F0 D388 0024          00000388  17846          STG   15,904(0,13)
0000D0D6 41F0 D0C8               000000C8  17847          LA    15,200(0,13)
0000D0DA E3F0 D390 0024          00000390  17848          STG   15,912(0,13)
0000D0E0 E320 D398 0024          00000398  17849          STG   2,920(0,13)
0000D0E6 4110 D388               00000388  17850          LA    1,904(0,13)
0000D0EA E3F0 C1CE 0004          0000CFC8  17851          LG    15,@lit_1947_1298 ; rd_slice_read
0000D0F0                                   17852 @@gen_label1691 DS    0H
0000D0F0 05EF                              17853          BALR  14,15
0000D0F2                                   17854 @@gen_label1692 DS    0H
0000D0F2 B902 00FF                         17855          LTGR  15,15
0000D0F6 4770 C582               0000D37C  17856          BNZ   @L1731
0000D0FA                                   17857 @L1732   DS    0H
0000D0FA E390 4098 0004          00000098  17858          LG    9,152(0,4)  ; offset of end in rd_slice_s
0000D100 41F0 4078               00000078  17859          LA    15,120(0,4)
0000D104 E3F0 D388 0024          00000388  17860          STG   15,904(0,13)
0000D10A 4110 D388               00000388  17861          LA    1,904(0,13)
0000D10E E3F0 C1B6 0004          0000CFB0  17862          LG    15,@lit_1947_1292 ; rd_slice_abs_offset
0000D114                                   17863 @@gen_label1694 DS    0H
0000D114 05EF                              17864          BALR  14,15
0000D116                                   17865 @@gen_label1695 DS    0H
0000D116 B90B 009F                         17866          SLGR  9,15
0000D11A B921 0029                         17867          CLGR  2,9
0000D11E 47D0 C582               0000D37C  17868          BNH   @L1735
0000D122                                   17869 @L1736   DS    0H
0000D122 1288                              17870          LTR   8,8
0000D124 47D0 C572               0000D36C  17871          BNH   @L1739
0000D128                                   17872 @L1740   DS    0H
0000D128 E3F0 4100 0002          00000100  17873          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D12E 4770 C37A               0000D174  17874          BNZ   @L1743
0000D132 E3F0 C17E 0004          0000CF78  17875          LG    15,@lit_1947_1279
0000D138 4110 F2CE               000002CE  17876          LA    1,718(0,15)
0000D13C E310 D388 0024          00000388  17877          STG   1,904(0,13)
0000D142 E548 D390 043C          00000390  17878          MVGHI 912(13),1084
0000D148 E310 C176 0004          0000CF70  17879          LG    1,@lit_1947_1280
0000D14E 4110 1258               00000258  17880          LA    1,600(0,1)
0000D152 E310 D398 0024          00000398  17881          STG   1,920(0,13)
0000D158 D707 D3A0 D3A0 000003A0 000003A0  17882          XC    928(8,13),928(13)
0000D15E 41F0 F362               00000362  17883          LA    15,866(0,15)
0000D162 E3F0 D3A8 0024          000003A8  17884          STG   15,936(0,13)
0000D168 4110 D388               00000388  17885          LA    1,904(0,13)
0000D16C E3F0 C16E 0004          0000CF68  17886          LG    15,@lit_1947_1281 ; rd_kafka_crash
0000D172                                   17887 @@gen_label1699 DS    0H
0000D172 05EF                              17888          BALR  14,15
0000D174                                   17889 @@gen_label1700 DS    0H
0000D174                                   17890 @L1743   DS    0H
0000D174 41F0 D160               00000160  17891          LA    15,352(0,13)
0000D178 E3F0 D388 0024          00000388  17892          STG   15,904(0,13)
                                                                                                                           Page  356 
  Active Usings: @REGION_1947_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D17E E548 D390 0100          00000390  17893          MVGHI 912(13),256
0000D184 E3F0 C17E 0004          0000CF78  17894          LG    15,@lit_1947_1279
0000D18A 41F0 F37C               0000037C  17895          LA    15,892(0,15)
0000D18E E3F0 D398 0024          00000398  17896          STG   15,920(0,13)
0000D194 4110 D388               00000388  17897          LA    1,904(0,13)
0000D198 E3F0 C186 0004          0000CF80  17898          LG    15,@lit_1947_1283 ; snprintf
0000D19E                                   17899 @@gen_label1701 DS    0H
0000D19E 05EF                              17900          BALR  14,15
0000D1A0                                   17901 @@gen_label1702 DS    0H
0000D1A0 41F0 D160               00000160  17902          LA    15,352(0,13)
0000D1A4 B904 001F                         17903          LGR   1,15
0000D1A8 A709 0000               00000000  17904          LGHI  0,0
0000D1AC                                   17905 @@gen_label1703 DS 0H
0000D1AC B25E 000F                         17906          SRST  0,15
0000D1B0 4710 C3B2               0000D1AC  17907          BC  1,@@gen_label1703
0000D1B4 B90B 0001                         17908          SLGR  0,1
0000D1B8 A70F 0002               00000002  17909          CGHI  0,2
0000D1BC 4770 C3CA               0000D1C4  17910          BNE   @L1745
0000D1C0 9200 D160      00000160 00000000  17911          MVI   352(13),0
0000D1C4                                   17912 @L1744   DS    0H
0000D1C4                                   17913 @L1745   DS    0H
0000D1C4 E3F0 4100 0004          00000100  17914          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D1CA A759 1638               00001638  17915          LGHI  5,5688      ; 5688
0000D1CE 41F5 F000               00000000  17916          LA    15,0(5,15)
0000D1D2 E3F0 D388 0024          00000388  17917          STG   15,904(0,13)
0000D1D8 4110 D388               00000388  17918          LA    1,904(0,13)
0000D1DC E3F0 C18E 0004          0000CF88  17919          LG    15,@lit_1947_1285 ; mtx_lock
0000D1E2                                   17920 @@gen_label1705 DS    0H
0000D1E2 05EF                              17921          BALR  14,15
0000D1E4                                   17922 @@gen_label1706 DS    0H
0000D1E4 41F0 D260               00000260  17923          LA    15,608(0,13)
0000D1E8 E3F0 D388 0024          00000388  17924          STG   15,904(0,13)
0000D1EE E3F0 4100 0004          00000100  17925          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D1F4 A719 1630               00001630  17926          LGHI  1,5680      ; 5680
0000D1F8 E3F1 F000 0004          00000000  17927          LG    15,0(1,15)
0000D1FE E3F0 D390 0024          00000390  17928          STG   15,912(0,13)
0000D204 E548 D398 0100          00000398  17929          MVGHI 920(13),256
0000D20A 4110 D388               00000388  17930          LA    1,904(0,13)
0000D20E E3F0 C196 0004          0000CF90  17931          LG    15,@lit_1947_1287 ; rd_strlcpy
0000D214                                   17932 @@gen_label1707 DS    0H
0000D214 05EF                              17933          BALR  14,15
0000D216                                   17934 @@gen_label1708 DS    0H
0000D216 E3F0 4100 0004          00000100  17935          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D21C 41F5 F000               00000000  17936          LA    15,0(5,15)
0000D220 E3F0 D388 0024          00000388  17937          STG   15,904(0,13)
0000D226 4110 D388               00000388  17938          LA    1,904(0,13)
0000D22A E3F0 C19E 0004          0000CF98  17939          LG    15,@lit_1947_1289 ; mtx_unlock
0000D230                                   17940 @@gen_label1709 DS    0H
0000D230 05EF                              17941          BALR  14,15
0000D232                                   17942 @@gen_label1710 DS    0H
0000D232 E3F0 40B8 0015          000000B8  17943          LGH   15,184(0,4)
0000D238 E3F0 D388 0024          00000388  17944          STG   15,904(0,13)
                                                                                                                           Page  357 
  Active Usings: @REGION_1947_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D23E 4110 D388               00000388  17945          LA    1,904(0,13)
0000D242 E3F0 C1A6 0004          0000CFA0  17946          LG    15,@lit_1947_1290 ; rd_kafka_ApiKey2str
0000D248                                   17947 @@gen_label1711 DS    0H
0000D248 05EF                              17948          BALR  14,15
0000D24A                                   17949 @@gen_label1712 DS    0H
0000D24A B904 005F                         17950          LGR   5,15
0000D24E 41F0 4078               00000078  17951          LA    15,120(0,4)
0000D252 E3F0 D388 0024          00000388  17952          STG   15,904(0,13)
0000D258 4110 D388               00000388  17953          LA    1,904(0,13)
0000D25C E3F0 C1AE 0004          0000CFA8  17954          LG    15,@lit_1947_1291 ; rd_slice_offset
0000D262                                   17955 @@gen_label1713 DS    0H
0000D262 05EF                              17956          BALR  14,15
0000D264                                   17957 @@gen_label1714 DS    0H
0000D264 B904 006F                         17958          LGR   6,15
0000D268 E370 4098 0004          00000098  17959          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000D26E 41F0 4078               00000078  17960          LA    15,120(0,4)
0000D272 E3F0 D388 0024          00000388  17961          STG   15,904(0,13)
0000D278 4110 D388               00000388  17962          LA    1,904(0,13)
0000D27C E3F0 C1B6 0004          0000CFB0  17963          LG    15,@lit_1947_1292 ; rd_slice_abs_offset
0000D282                                   17964 @@gen_label1715 DS    0H
0000D282 05EF                              17965          BALR  14,15
0000D284                                   17966 @@gen_label1716 DS    0H
0000D284 B90B 007F                         17967          SLGR  7,15
0000D288 E3F0 41E8 0002          000001E8  17968          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000D28E 4780 C4A2               0000D29C  17969          BZ    @L1748
0000D292 E3F0 41E8 0004          000001E8  17970          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000D298 47F0 C4AC               0000D2A6  17971          B     @L1749
0000D29C                                   17972 @L1748   DS    0H
0000D29C E3F0 C17E 0004          0000CF78  17973          LG    15,@lit_1947_1279
0000D2A2 41F0 F380               00000380  17974          LA    15,896(0,15)
0000D2A6                                   17975 @L1749   DS    0H
0000D2A6 E310 4100 0004          00000100  17976          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D2AC E310 1FD0 0004          00000FD0  17977          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000D2B2 4110 1210               00000210  17978          LA    1,528(0,1)
0000D2B6 E310 D388 0024          00000388  17979          STG   1,904(0,13)
0000D2BC E310 4100 0004          00000100  17980          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D2C2 E310 1FD0 0004          00000FD0  17981          LG    1,4048(0,1)
0000D2C8 E310 D390 0024          00000390  17982          STG   1,912(0,13)
0000D2CE 4110 D260               00000260  17983          LA    1,608(0,13)
0000D2D2 E310 D398 0024          00000398  17984          STG   1,920(0,13)
0000D2D8 B914 0018                         17985          LGFR  1,8
0000D2DC E310 D3A0 0024          000003A0  17986          STG   1,928(0,13)
0000D2E2 D707 D3A8 D3A8 000003A8 000003A8  17987          XC    936(8,13),936(13)
0000D2E8 E310 C17E 0004          0000CF78  17988          LG    1,@lit_1947_1279
0000D2EE 4180 13A4               000003A4  17989          LA    8,932(0,1)
0000D2F2 E380 D3B0 0024          000003B0  17990          STG   8,944(0,13)
0000D2F8 4110 13B0               000003B0  17991          LA    1,944(0,1)
0000D2FC E310 D3B8 0024          000003B8  17992          STG   1,952(0,13)
0000D302 E350 D3C0 0024          000003C0  17993          STG   5,960(0,13)
0000D308 4810 40BA               000000BA  17994          LH    1,186(0,4)
                                                                                                                           Page  358 
  Active Usings: @REGION_1947_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D30C B914 0011                         17995          LGFR  1,1
0000D310 E310 D3C8 0024          000003C8  17996          STG   1,968(0,13)
0000D316 E360 D3D0 0024          000003D0  17997          STG   6,976(0,13)
0000D31C E310 4098 0004          00000098  17998          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000D322 E310 4090 000B          00000090  17999          SLG   1,144(0,4)
0000D328 E310 D3D8 0024          000003D8  18000          STG   1,984(0,13)
0000D32E E310 C176 0004          0000CF70  18001          LG    1,@lit_1947_1280
0000D334 4110 1258               00000258  18002          LA    1,600(0,1)
0000D338 E310 D3E0 0024          000003E0  18003          STG   1,992(0,13)
0000D33E E548 D3E8 043C          000003E8  18004          MVGHI 1000(13),1084
0000D344 E320 D3F0 0024          000003F0  18005          STG   2,1008(0,13)
0000D34A E370 D3F8 0024          000003F8  18006          STG   7,1016(0,13)
0000D350 E3F0 D400 0024          00000400  18007          STG   15,1024(0,13)
0000D356 41F0 D160               00000160  18008          LA    15,352(0,13)
0000D35A E3F0 D408 0024          00000408  18009          STG   15,1032(0,13)
0000D360 4110 D388               00000388  18010          LA    1,904(0,13)
0000D364 E3F0 C1BE 0004          0000CFB8  18011          LG    15,@lit_1947_1296 ; rd_kafka_log0
0000D36A                                   18012 @@gen_label1718 DS    0H
0000D36A 05EF                              18013          BALR  14,15
0000D36C                                   18014 @@gen_label1719 DS    0H
0000D36C                                   18015 @L1739   DS    0H
0000D36C E54C 4188 FF65          00000188  18016          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000D372 E3C0 C1C6 001A          0000CFC0  18017          ALGF  12,@lit_region_diff_1947_4_7
                                           18018          DROP  12
                        0000EB2A           18019          USING @REGION_1947_7,12
0000D378 47F0 C164               0000EC8E  18020          B     @_err_parse@1947@4
                                           18021          DROP  12
                        0000CDFA           18022          USING @REGION_1947_4,12
0000D37C                                   18023 @L1735   DS    0H
0000D37C                                   18024 @L1731   DS    0H
0000D37C E3F0 D0C8 0004          000000C8  18025          LG    15,200(0,13) ; _v
0000D382 E3F0 D110 0024          00000110  18026          STG   15,272(0,13) ; offset of BaseTimestamp in msgset_v2_hdr
                                           18027 * ***           do { int64_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           18028 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           18029 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           18030 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           18031 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           18032 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                           18033 * 1085, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); }\
                                           18034 *  while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr),\
                                           18035 *  ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _\
                                           18036 * logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_st\
                                           18037 * rlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mt\
                                           18038 * x_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb\
                                           18039 * uf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lognam\
                                           18040 * e, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer under\
                                           18041 * flow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %\
                                           18042 * " "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiK\
                                           18043 * ey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion,\
                                           18044 *  rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end\
                                           18045 *  - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1085, __len0, ((&rk\
                                           18046 * buf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader))\
                                                                                                                           Page  359 
  Active Usings: @REGION_1947_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           18047 * , rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "i\
                                           18048 * ncorrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf\
                                           18049 * )->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while\
                                           18050 *  (0); } } while (0); } while (0); *(&hdr.MaxTimestamp) = (_v); } whi\
                                           18051 * le (0);
0000D388                                   18052 @L1750   DS    0H
0000D388                                   18053 @L1753   DS    0H
0000D388 A729 0008               00000008  18054          LGHI  2,8         ; 8
0000D38C 41F0 4078               00000078  18055          LA    15,120(0,4)
0000D390 E3F0 D388 0024          00000388  18056          STG   15,904(0,13)
0000D396 41F0 D0D0               000000D0  18057          LA    15,208(0,13)
0000D39A E3F0 D390 0024          00000390  18058          STG   15,912(0,13)
0000D3A0 E320 D398 0024          00000398  18059          STG   2,920(0,13)
0000D3A6 4110 D388               00000388  18060          LA    1,904(0,13)
0000D3AA E3F0 C1CE 0004          0000CFC8  18061          LG    15,@lit_1947_1298 ; rd_slice_read
0000D3B0                                   18062 @@gen_label1720 DS    0H
0000D3B0 05EF                              18063          BALR  14,15
0000D3B2                                   18064 @@gen_label1721 DS    0H
0000D3B2 B902 00FF                         18065          LTGR  15,15
0000D3B6 4770 C842               0000D63C  18066          BNZ   @L1756
0000D3BA                                   18067 @L1757   DS    0H
0000D3BA E390 4098 0004          00000098  18068          LG    9,152(0,4)  ; offset of end in rd_slice_s
0000D3C0 41F0 4078               00000078  18069          LA    15,120(0,4)
0000D3C4 E3F0 D388 0024          00000388  18070          STG   15,904(0,13)
0000D3CA 4110 D388               00000388  18071          LA    1,904(0,13)
0000D3CE E3F0 C1B6 0004          0000CFB0  18072          LG    15,@lit_1947_1292 ; rd_slice_abs_offset
0000D3D4                                   18073 @@gen_label1723 DS    0H
0000D3D4 05EF                              18074          BALR  14,15
0000D3D6                                   18075 @@gen_label1724 DS    0H
0000D3D6 B90B 009F                         18076          SLGR  9,15
0000D3DA B921 0029                         18077          CLGR  2,9
0000D3DE 47D0 C842               0000D63C  18078          BNH   @L1760
0000D3E2                                   18079 @L1761   DS    0H
0000D3E2 1288                              18080          LTR   8,8
0000D3E4 47D0 C832               0000D62C  18081          BNH   @L1764
0000D3E8                                   18082 @L1765   DS    0H
0000D3E8 E3F0 4100 0002          00000100  18083          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D3EE 4770 C63A               0000D434  18084          BNZ   @L1768
0000D3F2 E3F0 C17E 0004          0000CF78  18085          LG    15,@lit_1947_1279
0000D3F8 4110 F2CE               000002CE  18086          LA    1,718(0,15)
0000D3FC E310 D388 0024          00000388  18087          STG   1,904(0,13)
0000D402 E548 D390 043D          00000390  18088          MVGHI 912(13),1085
0000D408 E310 C176 0004          0000CF70  18089          LG    1,@lit_1947_1280
0000D40E 4110 1258               00000258  18090          LA    1,600(0,1)
0000D412 E310 D398 0024          00000398  18091          STG   1,920(0,13)
0000D418 D707 D3A0 D3A0 000003A0 000003A0  18092          XC    928(8,13),928(13)
0000D41E 41F0 F362               00000362  18093          LA    15,866(0,15)
0000D422 E3F0 D3A8 0024          000003A8  18094          STG   15,936(0,13)
0000D428 4110 D388               00000388  18095          LA    1,904(0,13)
0000D42C E3F0 C16E 0004          0000CF68  18096          LG    15,@lit_1947_1281 ; rd_kafka_crash
0000D432                                   18097 @@gen_label1728 DS    0H
0000D432 05EF                              18098          BALR  14,15
                                                                                                                           Page  360 
  Active Usings: @REGION_1947_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D434                                   18099 @@gen_label1729 DS    0H
0000D434                                   18100 @L1768   DS    0H
0000D434 41F0 D160               00000160  18101          LA    15,352(0,13)
0000D438 E3F0 D388 0024          00000388  18102          STG   15,904(0,13)
0000D43E E548 D390 0100          00000390  18103          MVGHI 912(13),256
0000D444 E3F0 C17E 0004          0000CF78  18104          LG    15,@lit_1947_1279
0000D44A 41F0 F37C               0000037C  18105          LA    15,892(0,15)
0000D44E E3F0 D398 0024          00000398  18106          STG   15,920(0,13)
0000D454 4110 D388               00000388  18107          LA    1,904(0,13)
0000D458 E3F0 C186 0004          0000CF80  18108          LG    15,@lit_1947_1283 ; snprintf
0000D45E                                   18109 @@gen_label1730 DS    0H
0000D45E 05EF                              18110          BALR  14,15
0000D460                                   18111 @@gen_label1731 DS    0H
0000D460 41F0 D160               00000160  18112          LA    15,352(0,13)
0000D464 B904 001F                         18113          LGR   1,15
0000D468 A709 0000               00000000  18114          LGHI  0,0
0000D46C                                   18115 @@gen_label1732 DS 0H
0000D46C B25E 000F                         18116          SRST  0,15
0000D470 4710 C672               0000D46C  18117          BC  1,@@gen_label1732
0000D474 B90B 0001                         18118          SLGR  0,1
0000D478 A70F 0002               00000002  18119          CGHI  0,2
0000D47C 4770 C68A               0000D484  18120          BNE   @L1770
0000D480 9200 D160      00000160 00000000  18121          MVI   352(13),0
0000D484                                   18122 @L1769   DS    0H
0000D484                                   18123 @L1770   DS    0H
0000D484 E3F0 4100 0004          00000100  18124          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D48A A759 1638               00001638  18125          LGHI  5,5688      ; 5688
0000D48E 41F5 F000               00000000  18126          LA    15,0(5,15)
0000D492 E3F0 D388 0024          00000388  18127          STG   15,904(0,13)
0000D498 4110 D388               00000388  18128          LA    1,904(0,13)
0000D49C E3F0 C18E 0004          0000CF88  18129          LG    15,@lit_1947_1285 ; mtx_lock
0000D4A2                                   18130 @@gen_label1734 DS    0H
0000D4A2 05EF                              18131          BALR  14,15
0000D4A4                                   18132 @@gen_label1735 DS    0H
0000D4A4 41F0 D260               00000260  18133          LA    15,608(0,13)
0000D4A8 E3F0 D388 0024          00000388  18134          STG   15,904(0,13)
0000D4AE E3F0 4100 0004          00000100  18135          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D4B4 A719 1630               00001630  18136          LGHI  1,5680      ; 5680
0000D4B8 E3F1 F000 0004          00000000  18137          LG    15,0(1,15)
0000D4BE E3F0 D390 0024          00000390  18138          STG   15,912(0,13)
0000D4C4 E548 D398 0100          00000398  18139          MVGHI 920(13),256
0000D4CA 4110 D388               00000388  18140          LA    1,904(0,13)
0000D4CE E3F0 C196 0004          0000CF90  18141          LG    15,@lit_1947_1287 ; rd_strlcpy
0000D4D4                                   18142 @@gen_label1736 DS    0H
0000D4D4 05EF                              18143          BALR  14,15
0000D4D6                                   18144 @@gen_label1737 DS    0H
0000D4D6 E3F0 4100 0004          00000100  18145          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D4DC 41F5 F000               00000000  18146          LA    15,0(5,15)
0000D4E0 E3F0 D388 0024          00000388  18147          STG   15,904(0,13)
0000D4E6 4110 D388               00000388  18148          LA    1,904(0,13)
0000D4EA E3F0 C19E 0004          0000CF98  18149          LG    15,@lit_1947_1289 ; mtx_unlock
0000D4F0                                   18150 @@gen_label1738 DS    0H
                                                                                                                           Page  361 
  Active Usings: @REGION_1947_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D4F0 05EF                              18151          BALR  14,15
0000D4F2                                   18152 @@gen_label1739 DS    0H
0000D4F2 E3F0 40B8 0015          000000B8  18153          LGH   15,184(0,4)
0000D4F8 E3F0 D388 0024          00000388  18154          STG   15,904(0,13)
0000D4FE 4110 D388               00000388  18155          LA    1,904(0,13)
0000D502 E3F0 C1A6 0004          0000CFA0  18156          LG    15,@lit_1947_1290 ; rd_kafka_ApiKey2str
0000D508                                   18157 @@gen_label1740 DS    0H
0000D508 05EF                              18158          BALR  14,15
0000D50A                                   18159 @@gen_label1741 DS    0H
0000D50A B904 005F                         18160          LGR   5,15
0000D50E 41F0 4078               00000078  18161          LA    15,120(0,4)
0000D512 E3F0 D388 0024          00000388  18162          STG   15,904(0,13)
0000D518 4110 D388               00000388  18163          LA    1,904(0,13)
0000D51C E3F0 C1AE 0004          0000CFA8  18164          LG    15,@lit_1947_1291 ; rd_slice_offset
0000D522                                   18165 @@gen_label1742 DS    0H
0000D522 05EF                              18166          BALR  14,15
0000D524                                   18167 @@gen_label1743 DS    0H
0000D524 B904 006F                         18168          LGR   6,15
0000D528 E370 4098 0004          00000098  18169          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000D52E 41F0 4078               00000078  18170          LA    15,120(0,4)
0000D532 E3F0 D388 0024          00000388  18171          STG   15,904(0,13)
0000D538 4110 D388               00000388  18172          LA    1,904(0,13)
0000D53C E3F0 C1B6 0004          0000CFB0  18173          LG    15,@lit_1947_1292 ; rd_slice_abs_offset
0000D542                                   18174 @@gen_label1744 DS    0H
0000D542 05EF                              18175          BALR  14,15
0000D544                                   18176 @@gen_label1745 DS    0H
0000D544 B90B 007F                         18177          SLGR  7,15
0000D548 E3F0 41E8 0002          000001E8  18178          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000D54E 4780 C762               0000D55C  18179          BZ    @L1773
0000D552 E3F0 41E8 0004          000001E8  18180          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000D558 47F0 C76C               0000D566  18181          B     @L1774
0000D55C                                   18182 @L1773   DS    0H
0000D55C E3F0 C17E 0004          0000CF78  18183          LG    15,@lit_1947_1279
0000D562 41F0 F380               00000380  18184          LA    15,896(0,15)
0000D566                                   18185 @L1774   DS    0H
0000D566 E310 4100 0004          00000100  18186          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D56C E310 1FD0 0004          00000FD0  18187          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000D572 4110 1210               00000210  18188          LA    1,528(0,1)
0000D576 E310 D388 0024          00000388  18189          STG   1,904(0,13)
0000D57C E310 4100 0004          00000100  18190          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D582 E310 1FD0 0004          00000FD0  18191          LG    1,4048(0,1)
0000D588 E310 D390 0024          00000390  18192          STG   1,912(0,13)
0000D58E 4110 D260               00000260  18193          LA    1,608(0,13)
0000D592 E310 D398 0024          00000398  18194          STG   1,920(0,13)
0000D598 B914 0018                         18195          LGFR  1,8
0000D59C E310 D3A0 0024          000003A0  18196          STG   1,928(0,13)
0000D5A2 D707 D3A8 D3A8 000003A8 000003A8  18197          XC    936(8,13),936(13)
0000D5A8 E310 C17E 0004          0000CF78  18198          LG    1,@lit_1947_1279
0000D5AE 4180 13A4               000003A4  18199          LA    8,932(0,1)
0000D5B2 E380 D3B0 0024          000003B0  18200          STG   8,944(0,13)
                                                                                                                           Page  362 
  Active Usings: @REGION_1947_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D5B8 4110 13B0               000003B0  18201          LA    1,944(0,1)
0000D5BC E310 D3B8 0024          000003B8  18202          STG   1,952(0,13)
0000D5C2 E350 D3C0 0024          000003C0  18203          STG   5,960(0,13)
0000D5C8 4810 40BA               000000BA  18204          LH    1,186(0,4)
0000D5CC B914 0011                         18205          LGFR  1,1
0000D5D0 E310 D3C8 0024          000003C8  18206          STG   1,968(0,13)
0000D5D6 E360 D3D0 0024          000003D0  18207          STG   6,976(0,13)
0000D5DC E310 4098 0004          00000098  18208          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000D5E2 E310 4090 000B          00000090  18209          SLG   1,144(0,4)
0000D5E8 E310 D3D8 0024          000003D8  18210          STG   1,984(0,13)
0000D5EE E310 C176 0004          0000CF70  18211          LG    1,@lit_1947_1280
0000D5F4 4110 1258               00000258  18212          LA    1,600(0,1)
0000D5F8 E310 D3E0 0024          000003E0  18213          STG   1,992(0,13)
0000D5FE E548 D3E8 043D          000003E8  18214          MVGHI 1000(13),1085
0000D604 E320 D3F0 0024          000003F0  18215          STG   2,1008(0,13)
0000D60A E370 D3F8 0024          000003F8  18216          STG   7,1016(0,13)
0000D610 E3F0 D400 0024          00000400  18217          STG   15,1024(0,13)
0000D616 41F0 D160               00000160  18218          LA    15,352(0,13)
0000D61A E3F0 D408 0024          00000408  18219          STG   15,1032(0,13)
0000D620 4110 D388               00000388  18220          LA    1,904(0,13)
0000D624 E3F0 C1BE 0004          0000CFB8  18221          LG    15,@lit_1947_1296 ; rd_kafka_log0
0000D62A                                   18222 @@gen_label1747 DS    0H
0000D62A 05EF                              18223          BALR  14,15
0000D62C                                   18224 @@gen_label1748 DS    0H
0000D62C                                   18225 @L1764   DS    0H
0000D62C E54C 4188 FF65          00000188  18226          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000D632 E3C0 C1C6 001A          0000CFC0  18227          ALGF  12,@lit_region_diff_1947_4_7
                                           18228          DROP  12
                        0000EB2A           18229          USING @REGION_1947_7,12
0000D638 47F0 C164               0000EC8E  18230          B     @_err_parse@1947@4
                                           18231          DROP  12
                        0000CDFA           18232          USING @REGION_1947_4,12
0000D63C                                   18233 @L1760   DS    0H
0000D63C                                   18234 @L1756   DS    0H
0000D63C E3F0 D0D0 0004          000000D0  18235          LG    15,208(0,13) ; _v
0000D642 E3F0 D118 0024          00000118  18236          STG   15,280(0,13) ; offset of MaxTimestamp in msgset_v2_hdr
                                           18237 * ***           do { int64_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           18238 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           18239 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           18240 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           18241 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           18242 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                           18243 * 1086, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); }\
                                           18244 *  while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr),\
                                           18245 *  ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _\
                                           18246 * logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_st\
                                           18247 * rlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mt\
                                           18248 * x_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb\
                                           18249 * uf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lognam\
                                           18250 * e, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer under\
                                           18251 * flow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %\
                                           18252 * " "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiK\
                                                                                                                           Page  363 
  Active Usings: @REGION_1947_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           18253 * ey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion,\
                                           18254 *  rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end\
                                           18255 *  - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1086, __len0, ((&rk\
                                           18256 * buf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader))\
                                           18257 * , rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "i\
                                           18258 * ncorrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf\
                                           18259 * )->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while\
                                           18260 *  (0); } } while (0); } while (0); *(&hdr.PID) = (_v); } while (0);
0000D648                                   18261 @L1775   DS    0H
0000D648                                   18262 @L1778   DS    0H
0000D648 A729 0008               00000008  18263          LGHI  2,8         ; 8
0000D64C 41F0 4078               00000078  18264          LA    15,120(0,4)
0000D650 E3F0 D388 0024          00000388  18265          STG   15,904(0,13)
0000D656 41F0 D0D8               000000D8  18266          LA    15,216(0,13)
0000D65A E3F0 D390 0024          00000390  18267          STG   15,912(0,13)
0000D660 E320 D398 0024          00000398  18268          STG   2,920(0,13)
0000D666 4110 D388               00000388  18269          LA    1,904(0,13)
0000D66A E3F0 C1CE 0004          0000CFC8  18270          LG    15,@lit_1947_1298 ; rd_slice_read
0000D670                                   18271 @@gen_label1749 DS    0H
0000D670 05EF                              18272          BALR  14,15
0000D672                                   18273 @@gen_label1750 DS    0H
0000D672 B902 00FF                         18274          LTGR  15,15
0000D676 4780 C88A               0000D684  18275          BZ    *+14  Around region break
0000D67A E3C0 C1D6 001A          0000CFD0  18276          ALGF  12,@lit_region_diff_1947_4_5
                                           18277          DROP  12
                        0000D788           18278          USING @REGION_1947_5,12
0000D680 47F0 C204               0000D98C  18279          B     @L1781
                                           18280          DROP  12
                        0000CDFA           18281          USING @REGION_1947_4,12
0000D684                                   18282 @L1782   DS    0H
0000D684 E390 4098 0004          00000098  18283          LG    9,152(0,4)  ; offset of end in rd_slice_s
0000D68A 41F0 4078               00000078  18284          LA    15,120(0,4)
0000D68E E3F0 D388 0024          00000388  18285          STG   15,904(0,13)
0000D694 4110 D388               00000388  18286          LA    1,904(0,13)
0000D698 E3F0 C1B6 0004          0000CFB0  18287          LG    15,@lit_1947_1292 ; rd_slice_abs_offset
0000D69E                                   18288 @@gen_label1752 DS    0H
0000D69E 05EF                              18289          BALR  14,15
0000D6A0                                   18290 @@gen_label1753 DS    0H
0000D6A0 B90B 009F                         18291          SLGR  9,15
0000D6A4 B921 0029                         18292          CLGR  2,9
0000D6A8 4720 C8BC               0000D6B6  18293          BH    *+14  Around region break
0000D6AC E3C0 C1D6 001A          0000CFD0  18294          ALGF  12,@lit_region_diff_1947_4_5
                                           18295          DROP  12
                        0000D788           18296          USING @REGION_1947_5,12
0000D6B2 47F0 C204               0000D98C  18297          B     @L1785
                                           18298          DROP  12
                        0000CDFA           18299          USING @REGION_1947_4,12
0000D6B6                                   18300 @L1786   DS    0H
0000D6B6 1288                              18301          LTR   8,8
0000D6B8 4720 C8CC               0000D6C6  18302          BH    *+14  Around region break
0000D6BC E3C0 C1D6 001A          0000CFD0  18303          ALGF  12,@lit_region_diff_1947_4_5
                                           18304          DROP  12
                                                                                                                           Page  364 
  Active Usings: @REGION_1947_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        0000D788           18305          USING @REGION_1947_5,12
0000D6C2 47F0 C1F4               0000D97C  18306          B     @L1789
                                           18307          DROP  12
                        0000CDFA           18308          USING @REGION_1947_4,12
0000D6C6                                   18309 @L1790   DS    0H
0000D6C6 E3F0 4100 0002          00000100  18310          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D6CC 4770 C918               0000D712  18311          BNZ   @L1793
0000D6D0 E3F0 C17E 0004          0000CF78  18312          LG    15,@lit_1947_1279
0000D6D6 4110 F2CE               000002CE  18313          LA    1,718(0,15)
0000D6DA E310 D388 0024          00000388  18314          STG   1,904(0,13)
0000D6E0 E548 D390 043E          00000390  18315          MVGHI 912(13),1086
0000D6E6 E310 C176 0004          0000CF70  18316          LG    1,@lit_1947_1280
0000D6EC 4110 1258               00000258  18317          LA    1,600(0,1)
0000D6F0 E310 D398 0024          00000398  18318          STG   1,920(0,13)
0000D6F6 D707 D3A0 D3A0 000003A0 000003A0  18319          XC    928(8,13),928(13)
0000D6FC 41F0 F362               00000362  18320          LA    15,866(0,15)
0000D700 E3F0 D3A8 0024          000003A8  18321          STG   15,936(0,13)
0000D706 4110 D388               00000388  18322          LA    1,904(0,13)
0000D70A E3F0 C16E 0004          0000CF68  18323          LG    15,@lit_1947_1281 ; rd_kafka_crash
0000D710                                   18324 @@gen_label1757 DS    0H
0000D710 05EF                              18325          BALR  14,15
0000D712                                   18326 @@gen_label1758 DS    0H
0000D712                                   18327 @L1793   DS    0H
0000D712 41F0 D160               00000160  18328          LA    15,352(0,13)
0000D716 E3F0 D388 0024          00000388  18329          STG   15,904(0,13)
0000D71C E548 D390 0100          00000390  18330          MVGHI 912(13),256
0000D722 E3F0 C17E 0004          0000CF78  18331          LG    15,@lit_1947_1279
0000D728 41F0 F37C               0000037C  18332          LA    15,892(0,15)
0000D72C E3F0 D398 0024          00000398  18333          STG   15,920(0,13)
0000D732 4110 D388               00000388  18334          LA    1,904(0,13)
0000D736 E3F0 C186 0004          0000CF80  18335          LG    15,@lit_1947_1283 ; snprintf
0000D73C                                   18336 @@gen_label1759 DS    0H
0000D73C 05EF                              18337          BALR  14,15
0000D73E                                   18338 @@gen_label1760 DS    0H
0000D73E 41F0 D160               00000160  18339          LA    15,352(0,13)
0000D742 B904 001F                         18340          LGR   1,15
0000D746 A709 0000               00000000  18341          LGHI  0,0
0000D74A                                   18342 @@gen_label1761 DS 0H
0000D74A B25E 000F                         18343          SRST  0,15
0000D74E 4710 C950               0000D74A  18344          BC  1,@@gen_label1761
0000D752 B90B 0001                         18345          SLGR  0,1
0000D756 A70F 0002               00000002  18346          CGHI  0,2
0000D75A 4770 C968               0000D762  18347          BNE   @L1795
0000D75E 9200 D160      00000160 00000000  18348          MVI   352(13),0
0000D762                                   18349 @L1794   DS    0H
0000D762                                   18350 @L1795   DS    0H
0000D762 E3F0 4100 0004          00000100  18351          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D768 A759 1638               00001638  18352          LGHI  5,5688      ; 5688
0000D76C 41F5 F000               00000000  18353          LA    15,0(5,15)
0000D770 E3F0 D388 0024          00000388  18354          STG   15,904(0,13)
0000D776 4110 D388               00000388  18355          LA    1,904(0,13)
0000D77A E3F0 C18E 0004          0000CF88  18356          LG    15,@lit_1947_1285 ; mtx_lock
                                                                                                                           Page  365 
  Active Usings: @REGION_1947_4,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D780                                   18357 @@gen_label1763 DS    0H
0000D780 05EF                              18358          BALR  14,15
0000D782                                   18359 @@gen_label1764 DS    0H
0000D782 E3C0 C1D6 001A          0000CFD0  18360          ALGF  12,@lit_region_diff_1947_4_5
0000D788                                   18361 @REGION_1947_5 DS 0H
                                           18362          DROP  12
                        0000D788           18363          USING @REGION_1947_5,12
0000D788 41F0 D260               00000260  18364          LA    15,608(0,13)
0000D78C E3F0 D388 0024          00000388  18365          STG   15,904(0,13)
0000D792 E3F0 4100 0004          00000100  18366          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D798 A719 1630               00001630  18367          LGHI  1,5680      ; 5680
0000D79C E3F1 F000 0004          00000000  18368          LG    15,0(1,15)
0000D7A2 E3F0 D390 0024          00000390  18369          STG   15,912(0,13)
0000D7A8 E548 D398 0100          00000398  18370          MVGHI 920(13),256
0000D7AE 4110 D388               00000388  18371          LA    1,904(0,13)
0000D7B2 E3F0 C0B8 0004          0000D840  18372          LG    15,@lit_1947_1350 ; rd_strlcpy
0000D7B8                                   18373 @@gen_label1765 DS    0H
0000D7B8 05EF                              18374          BALR  14,15
0000D7BA                                   18375 @@gen_label1766 DS    0H
0000D7BA E3F0 4100 0004          00000100  18376          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D7C0 41F5 F000               00000000  18377          LA    15,0(5,15)
0000D7C4 E3F0 D388 0024          00000388  18378          STG   15,904(0,13)
0000D7CA 4110 D388               00000388  18379          LA    1,904(0,13)
0000D7CE E3F0 C0C0 0004          0000D848  18380          LG    15,@lit_1947_1352 ; mtx_unlock
0000D7D4                                   18381 @@gen_label1767 DS    0H
0000D7D4 05EF                              18382          BALR  14,15
0000D7D6                                   18383 @@gen_label1768 DS    0H
0000D7D6 E3F0 40B8 0015          000000B8  18384          LGH   15,184(0,4)
0000D7DC E3F0 D388 0024          00000388  18385          STG   15,904(0,13)
0000D7E2 4110 D388               00000388  18386          LA    1,904(0,13)
0000D7E6 E3F0 C0C8 0004          0000D850  18387          LG    15,@lit_1947_1353 ; rd_kafka_ApiKey2str
0000D7EC                                   18388 @@gen_label1769 DS    0H
0000D7EC 05EF                              18389          BALR  14,15
0000D7EE                                   18390 @@gen_label1770 DS    0H
0000D7EE B904 005F                         18391          LGR   5,15
0000D7F2 41F0 4078               00000078  18392          LA    15,120(0,4)
0000D7F6 E3F0 D388 0024          00000388  18393          STG   15,904(0,13)
0000D7FC 4110 D388               00000388  18394          LA    1,904(0,13)
0000D800 E3F0 C0D0 0004          0000D858  18395          LG    15,@lit_1947_1354 ; rd_slice_offset
0000D806                                   18396 @@gen_label1771 DS    0H
0000D806 05EF                              18397          BALR  14,15
0000D808                                   18398 @@gen_label1772 DS    0H
0000D808 B904 006F                         18399          LGR   6,15
0000D80C E370 4098 0004          00000098  18400          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000D812 41F0 4078               00000078  18401          LA    15,120(0,4)
0000D816 E3F0 D388 0024          00000388  18402          STG   15,904(0,13)
0000D81C 4110 D388               00000388  18403          LA    1,904(0,13)
0000D820 E3F0 C0D8 0004          0000D860  18404          LG    15,@lit_1947_1355 ; rd_slice_abs_offset
0000D826                                   18405 @@gen_label1773 DS    0H
0000D826 05EF                              18406          BALR  14,15
0000D828                                   18407 @@gen_label1774 DS    0H
0000D828 B90B 007F                         18408          SLGR  7,15
                                                                                                                           Page  366 
  Active Usings: @REGION_1947_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D82C E3F0 41E8 0002          000001E8  18409          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000D832 4780 C124               0000D8AC  18410          BZ    @L1798
0000D836 E3F0 41E8 0004          000001E8  18411          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000D83C 47F0 C12E               0000D8B6  18412          B     @L1799
0000D840                                   18413          DS    0D
0000D840 0000000000001668                  18414 @lit_1947_1350 DC AD(rd_strlcpy)
0000D848 0000000000000000                  18415 @lit_1947_1352 DC AD(mtx_unlock)
0000D850 00000000000014D0                  18416 @lit_1947_1353 DC AD(rd_kafka_$Api$Key2str)
0000D858 00000000000012B8                  18417 @lit_1947_1354 DC AD(rd_slice_offset)
0000D860 0000000000001210                  18418 @lit_1947_1355 DC AD(rd_slice_abs_offset)
0000D868 0000000000012AB8                  18419 @lit_1947_1356 DC AD(@strings@)
0000D870 0000000000000000                  18420 @lit_1947_1359 DC AD(rd_kafka_log0)
0000D878 0000000000012808                  18421 @lit_1947_1358 DC AD(@DATA)
0000D880 000013A2                          18422 @lit_region_diff_1947_5_7  DC A(@REGION_1947_7-@REGION_1947_5)
0000D884 00000000
0000D888 0000000000000000                  18423 @lit_1947_1361 DC AD(rd_slice_read)
0000D890 0000000000000000                  18424 @lit_1947_1365 DC AD(rd_kafka_crash)
0000D898 0000000000000000                  18425 @lit_1947_1367 DC AD(snprintf)
0000D8A0 0000000000000000                  18426 @lit_1947_1369 DC AD(mtx_lock)
0000D8A8 0000098E                          18427 @lit_region_diff_1947_5_6  DC A(@REGION_1947_6-@REGION_1947_5)
0000D8AC                                   18428 @L1798   DS    0H
0000D8AC E3F0 C0E0 0004          0000D868  18429          LG    15,@lit_1947_1356
0000D8B2 41F0 F380               00000380  18430          LA    15,896(0,15)
0000D8B6                                   18431 @L1799   DS    0H
0000D8B6 E310 4100 0004          00000100  18432          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D8BC E310 1FD0 0004          00000FD0  18433          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000D8C2 4110 1210               00000210  18434          LA    1,528(0,1)
0000D8C6 E310 D388 0024          00000388  18435          STG   1,904(0,13)
0000D8CC E310 4100 0004          00000100  18436          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D8D2 E310 1FD0 0004          00000FD0  18437          LG    1,4048(0,1)
0000D8D8 E310 D390 0024          00000390  18438          STG   1,912(0,13)
0000D8DE 4110 D260               00000260  18439          LA    1,608(0,13)
0000D8E2 E310 D398 0024          00000398  18440          STG   1,920(0,13)
0000D8E8 B914 0018                         18441          LGFR  1,8
0000D8EC E310 D3A0 0024          000003A0  18442          STG   1,928(0,13)
0000D8F2 D707 D3A8 D3A8 000003A8 000003A8  18443          XC    936(8,13),936(13)
0000D8F8 E310 C0E0 0004          0000D868  18444          LG    1,@lit_1947_1356
0000D8FE 4180 13A4               000003A4  18445          LA    8,932(0,1)
0000D902 E380 D3B0 0024          000003B0  18446          STG   8,944(0,13)
0000D908 4110 13B0               000003B0  18447          LA    1,944(0,1)
0000D90C E310 D3B8 0024          000003B8  18448          STG   1,952(0,13)
0000D912 E350 D3C0 0024          000003C0  18449          STG   5,960(0,13)
0000D918 4810 40BA               000000BA  18450          LH    1,186(0,4)
0000D91C B914 0011                         18451          LGFR  1,1
0000D920 E310 D3C8 0024          000003C8  18452          STG   1,968(0,13)
0000D926 E360 D3D0 0024          000003D0  18453          STG   6,976(0,13)
0000D92C E310 4098 0004          00000098  18454          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000D932 E310 4090 000B          00000090  18455          SLG   1,144(0,4)
0000D938 E310 D3D8 0024          000003D8  18456          STG   1,984(0,13)
0000D93E E310 C0F0 0004          0000D878  18457          LG    1,@lit_1947_1358
                                                                                                                           Page  367 
  Active Usings: @REGION_1947_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D944 4110 1258               00000258  18458          LA    1,600(0,1)
0000D948 E310 D3E0 0024          000003E0  18459          STG   1,992(0,13)
0000D94E E548 D3E8 043E          000003E8  18460          MVGHI 1000(13),1086
0000D954 E320 D3F0 0024          000003F0  18461          STG   2,1008(0,13)
0000D95A E370 D3F8 0024          000003F8  18462          STG   7,1016(0,13)
0000D960 E3F0 D400 0024          00000400  18463          STG   15,1024(0,13)
0000D966 41F0 D160               00000160  18464          LA    15,352(0,13)
0000D96A E3F0 D408 0024          00000408  18465          STG   15,1032(0,13)
0000D970 4110 D388               00000388  18466          LA    1,904(0,13)
0000D974 E3F0 C0E8 0004          0000D870  18467          LG    15,@lit_1947_1359 ; rd_kafka_log0
0000D97A                                   18468 @@gen_label1776 DS    0H
0000D97A 05EF                              18469          BALR  14,15
0000D97C                                   18470 @@gen_label1777 DS    0H
0000D97C                                   18471 @L1789   DS    0H
0000D97C E54C 4188 FF65          00000188  18472          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000D982 E3C0 C0F8 001A          0000D880  18473          ALGF  12,@lit_region_diff_1947_5_7
                                           18474          DROP  12
                        0000EB2A           18475          USING @REGION_1947_7,12
0000D988 47F0 C164               0000EC8E  18476          B     @_err_parse@1947@4
                                           18477          DROP  12
                        0000D788           18478          USING @REGION_1947_5,12
0000D98C                                   18479 @L1785   DS    0H
0000D98C                                   18480 @L1781   DS    0H
0000D98C E3F0 D0D8 0004          000000D8  18481          LG    15,216(0,13) ; _v
0000D992 E3F0 D120 0024          00000120  18482          STG   15,288(0,13) ; offset of PID in msgset_v2_hdr
                                           18483 * ***           do { int16_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           18484 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           18485 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           18486 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           18487 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           18488 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                           18489 * 1087, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); }\
                                           18490 *  while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr),\
                                           18491 *  ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _\
                                           18492 * logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_st\
                                           18493 * rlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mt\
                                           18494 * x_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb\
                                           18495 * uf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lognam\
                                           18496 * e, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer under\
                                           18497 * flow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %\
                                           18498 * " "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiK\
                                           18499 * ey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion,\
                                           18500 *  rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end\
                                           18501 *  - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1087, __len0, ((&rk\
                                           18502 * buf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader))\
                                           18503 * , rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "i\
                                           18504 * ncorrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf\
                                           18505 * )->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while\
                                           18506 *  (0); } } while (0); } while (0); *(&hdr.ProducerEpoch) = (int16_t)(\
                                           18507 * _v); } while (0);
0000D998                                   18508 @L1800   DS    0H
0000D998                                   18509 @L1803   DS    0H
                                                                                                                           Page  368 
  Active Usings: @REGION_1947_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D998 A729 0002               00000002  18510          LGHI  2,2         ; 2
0000D99C 41F0 4078               00000078  18511          LA    15,120(0,4)
0000D9A0 E3F0 D388 0024          00000388  18512          STG   15,904(0,13)
0000D9A6 41F0 D0E0               000000E0  18513          LA    15,224(0,13)
0000D9AA E3F0 D390 0024          00000390  18514          STG   15,912(0,13)
0000D9B0 E320 D398 0024          00000398  18515          STG   2,920(0,13)
0000D9B6 4110 D388               00000388  18516          LA    1,904(0,13)
0000D9BA E3F0 C100 0004          0000D888  18517          LG    15,@lit_1947_1361 ; rd_slice_read
0000D9C0                                   18518 @@gen_label1778 DS    0H
0000D9C0 05EF                              18519          BALR  14,15
0000D9C2                                   18520 @@gen_label1779 DS    0H
0000D9C2 B902 00FF                         18521          LTGR  15,15
0000D9C6 4770 C4C4               0000DC4C  18522          BNZ   @L1806
0000D9CA                                   18523 @L1807   DS    0H
0000D9CA E390 4098 0004          00000098  18524          LG    9,152(0,4)  ; offset of end in rd_slice_s
0000D9D0 41F0 4078               00000078  18525          LA    15,120(0,4)
0000D9D4 E3F0 D388 0024          00000388  18526          STG   15,904(0,13)
0000D9DA 4110 D388               00000388  18527          LA    1,904(0,13)
0000D9DE E3F0 C0D8 0004          0000D860  18528          LG    15,@lit_1947_1355 ; rd_slice_abs_offset
0000D9E4                                   18529 @@gen_label1781 DS    0H
0000D9E4 05EF                              18530          BALR  14,15
0000D9E6                                   18531 @@gen_label1782 DS    0H
0000D9E6 B90B 009F                         18532          SLGR  9,15
0000D9EA B921 0029                         18533          CLGR  2,9
0000D9EE 47D0 C4C4               0000DC4C  18534          BNH   @L1810
0000D9F2                                   18535 @L1811   DS    0H
0000D9F2 1288                              18536          LTR   8,8
0000D9F4 47D0 C4B4               0000DC3C  18537          BNH   @L1814
0000D9F8                                   18538 @L1815   DS    0H
0000D9F8 E3F0 4100 0002          00000100  18539          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000D9FE 4770 C2BC               0000DA44  18540          BNZ   @L1818
0000DA02 E3F0 C0E0 0004          0000D868  18541          LG    15,@lit_1947_1356
0000DA08 4110 F2CE               000002CE  18542          LA    1,718(0,15)
0000DA0C E310 D388 0024          00000388  18543          STG   1,904(0,13)
0000DA12 E548 D390 043F          00000390  18544          MVGHI 912(13),1087
0000DA18 E310 C0F0 0004          0000D878  18545          LG    1,@lit_1947_1358
0000DA1E 4110 1258               00000258  18546          LA    1,600(0,1)
0000DA22 E310 D398 0024          00000398  18547          STG   1,920(0,13)
0000DA28 D707 D3A0 D3A0 000003A0 000003A0  18548          XC    928(8,13),928(13)
0000DA2E 41F0 F362               00000362  18549          LA    15,866(0,15)
0000DA32 E3F0 D3A8 0024          000003A8  18550          STG   15,936(0,13)
0000DA38 4110 D388               00000388  18551          LA    1,904(0,13)
0000DA3C E3F0 C108 0004          0000D890  18552          LG    15,@lit_1947_1365 ; rd_kafka_crash
0000DA42                                   18553 @@gen_label1786 DS    0H
0000DA42 05EF                              18554          BALR  14,15
0000DA44                                   18555 @@gen_label1787 DS    0H
0000DA44                                   18556 @L1818   DS    0H
0000DA44 41F0 D160               00000160  18557          LA    15,352(0,13)
0000DA48 E3F0 D388 0024          00000388  18558          STG   15,904(0,13)
0000DA4E E548 D390 0100          00000390  18559          MVGHI 912(13),256
0000DA54 E3F0 C0E0 0004          0000D868  18560          LG    15,@lit_1947_1356
0000DA5A 41F0 F37C               0000037C  18561          LA    15,892(0,15)
                                                                                                                           Page  369 
  Active Usings: @REGION_1947_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DA5E E3F0 D398 0024          00000398  18562          STG   15,920(0,13)
0000DA64 4110 D388               00000388  18563          LA    1,904(0,13)
0000DA68 E3F0 C110 0004          0000D898  18564          LG    15,@lit_1947_1367 ; snprintf
0000DA6E                                   18565 @@gen_label1788 DS    0H
0000DA6E 05EF                              18566          BALR  14,15
0000DA70                                   18567 @@gen_label1789 DS    0H
0000DA70 41F0 D160               00000160  18568          LA    15,352(0,13)
0000DA74 B904 001F                         18569          LGR   1,15
0000DA78 A709 0000               00000000  18570          LGHI  0,0
0000DA7C                                   18571 @@gen_label1790 DS 0H
0000DA7C B25E 000F                         18572          SRST  0,15
0000DA80 4710 C2F4               0000DA7C  18573          BC  1,@@gen_label1790
0000DA84 B90B 0001                         18574          SLGR  0,1
0000DA88 A70F 0002               00000002  18575          CGHI  0,2
0000DA8C 4770 C30C               0000DA94  18576          BNE   @L1820
0000DA90 9200 D160      00000160 00000000  18577          MVI   352(13),0
0000DA94                                   18578 @L1819   DS    0H
0000DA94                                   18579 @L1820   DS    0H
0000DA94 E3F0 4100 0004          00000100  18580          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DA9A A759 1638               00001638  18581          LGHI  5,5688      ; 5688
0000DA9E 41F5 F000               00000000  18582          LA    15,0(5,15)
0000DAA2 E3F0 D388 0024          00000388  18583          STG   15,904(0,13)
0000DAA8 4110 D388               00000388  18584          LA    1,904(0,13)
0000DAAC E3F0 C118 0004          0000D8A0  18585          LG    15,@lit_1947_1369 ; mtx_lock
0000DAB2                                   18586 @@gen_label1792 DS    0H
0000DAB2 05EF                              18587          BALR  14,15
0000DAB4                                   18588 @@gen_label1793 DS    0H
0000DAB4 41F0 D260               00000260  18589          LA    15,608(0,13)
0000DAB8 E3F0 D388 0024          00000388  18590          STG   15,904(0,13)
0000DABE E3F0 4100 0004          00000100  18591          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DAC4 A719 1630               00001630  18592          LGHI  1,5680      ; 5680
0000DAC8 E3F1 F000 0004          00000000  18593          LG    15,0(1,15)
0000DACE E3F0 D390 0024          00000390  18594          STG   15,912(0,13)
0000DAD4 E548 D398 0100          00000398  18595          MVGHI 920(13),256
0000DADA 4110 D388               00000388  18596          LA    1,904(0,13)
0000DADE E3F0 C0B8 0004          0000D840  18597          LG    15,@lit_1947_1350 ; rd_strlcpy
0000DAE4                                   18598 @@gen_label1794 DS    0H
0000DAE4 05EF                              18599          BALR  14,15
0000DAE6                                   18600 @@gen_label1795 DS    0H
0000DAE6 E3F0 4100 0004          00000100  18601          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DAEC 41F5 F000               00000000  18602          LA    15,0(5,15)
0000DAF0 E3F0 D388 0024          00000388  18603          STG   15,904(0,13)
0000DAF6 4110 D388               00000388  18604          LA    1,904(0,13)
0000DAFA E3F0 C0C0 0004          0000D848  18605          LG    15,@lit_1947_1352 ; mtx_unlock
0000DB00                                   18606 @@gen_label1796 DS    0H
0000DB00 05EF                              18607          BALR  14,15
0000DB02                                   18608 @@gen_label1797 DS    0H
0000DB02 E3F0 40B8 0015          000000B8  18609          LGH   15,184(0,4)
0000DB08 E3F0 D388 0024          00000388  18610          STG   15,904(0,13)
0000DB0E 4110 D388               00000388  18611          LA    1,904(0,13)
0000DB12 E3F0 C0C8 0004          0000D850  18612          LG    15,@lit_1947_1353 ; rd_kafka_ApiKey2str
0000DB18                                   18613 @@gen_label1798 DS    0H
                                                                                                                           Page  370 
  Active Usings: @REGION_1947_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DB18 05EF                              18614          BALR  14,15
0000DB1A                                   18615 @@gen_label1799 DS    0H
0000DB1A B904 005F                         18616          LGR   5,15
0000DB1E 41F0 4078               00000078  18617          LA    15,120(0,4)
0000DB22 E3F0 D388 0024          00000388  18618          STG   15,904(0,13)
0000DB28 4110 D388               00000388  18619          LA    1,904(0,13)
0000DB2C E3F0 C0D0 0004          0000D858  18620          LG    15,@lit_1947_1354 ; rd_slice_offset
0000DB32                                   18621 @@gen_label1800 DS    0H
0000DB32 05EF                              18622          BALR  14,15
0000DB34                                   18623 @@gen_label1801 DS    0H
0000DB34 B904 006F                         18624          LGR   6,15
0000DB38 E370 4098 0004          00000098  18625          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000DB3E 41F0 4078               00000078  18626          LA    15,120(0,4)
0000DB42 E3F0 D388 0024          00000388  18627          STG   15,904(0,13)
0000DB48 4110 D388               00000388  18628          LA    1,904(0,13)
0000DB4C E3F0 C0D8 0004          0000D860  18629          LG    15,@lit_1947_1355 ; rd_slice_abs_offset
0000DB52                                   18630 @@gen_label1802 DS    0H
0000DB52 05EF                              18631          BALR  14,15
0000DB54                                   18632 @@gen_label1803 DS    0H
0000DB54 B90B 007F                         18633          SLGR  7,15
0000DB58 E3F0 41E8 0002          000001E8  18634          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000DB5E 4780 C3E4               0000DB6C  18635          BZ    @L1823
0000DB62 E3F0 41E8 0004          000001E8  18636          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000DB68 47F0 C3EE               0000DB76  18637          B     @L1824
0000DB6C                                   18638 @L1823   DS    0H
0000DB6C E3F0 C0E0 0004          0000D868  18639          LG    15,@lit_1947_1356
0000DB72 41F0 F380               00000380  18640          LA    15,896(0,15)
0000DB76                                   18641 @L1824   DS    0H
0000DB76 E310 4100 0004          00000100  18642          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DB7C E310 1FD0 0004          00000FD0  18643          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000DB82 4110 1210               00000210  18644          LA    1,528(0,1)
0000DB86 E310 D388 0024          00000388  18645          STG   1,904(0,13)
0000DB8C E310 4100 0004          00000100  18646          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DB92 E310 1FD0 0004          00000FD0  18647          LG    1,4048(0,1)
0000DB98 E310 D390 0024          00000390  18648          STG   1,912(0,13)
0000DB9E 4110 D260               00000260  18649          LA    1,608(0,13)
0000DBA2 E310 D398 0024          00000398  18650          STG   1,920(0,13)
0000DBA8 B914 0018                         18651          LGFR  1,8
0000DBAC E310 D3A0 0024          000003A0  18652          STG   1,928(0,13)
0000DBB2 D707 D3A8 D3A8 000003A8 000003A8  18653          XC    936(8,13),936(13)
0000DBB8 E310 C0E0 0004          0000D868  18654          LG    1,@lit_1947_1356
0000DBBE 4180 13A4               000003A4  18655          LA    8,932(0,1)
0000DBC2 E380 D3B0 0024          000003B0  18656          STG   8,944(0,13)
0000DBC8 4110 13B0               000003B0  18657          LA    1,944(0,1)
0000DBCC E310 D3B8 0024          000003B8  18658          STG   1,952(0,13)
0000DBD2 E350 D3C0 0024          000003C0  18659          STG   5,960(0,13)
0000DBD8 4810 40BA               000000BA  18660          LH    1,186(0,4)
0000DBDC B914 0011                         18661          LGFR  1,1
0000DBE0 E310 D3C8 0024          000003C8  18662          STG   1,968(0,13)
0000DBE6 E360 D3D0 0024          000003D0  18663          STG   6,976(0,13)
                                                                                                                           Page  371 
  Active Usings: @REGION_1947_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DBEC E310 4098 0004          00000098  18664          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000DBF2 E310 4090 000B          00000090  18665          SLG   1,144(0,4)
0000DBF8 E310 D3D8 0024          000003D8  18666          STG   1,984(0,13)
0000DBFE E310 C0F0 0004          0000D878  18667          LG    1,@lit_1947_1358
0000DC04 4110 1258               00000258  18668          LA    1,600(0,1)
0000DC08 E310 D3E0 0024          000003E0  18669          STG   1,992(0,13)
0000DC0E E548 D3E8 043F          000003E8  18670          MVGHI 1000(13),1087
0000DC14 E320 D3F0 0024          000003F0  18671          STG   2,1008(0,13)
0000DC1A E370 D3F8 0024          000003F8  18672          STG   7,1016(0,13)
0000DC20 E3F0 D400 0024          00000400  18673          STG   15,1024(0,13)
0000DC26 41F0 D160               00000160  18674          LA    15,352(0,13)
0000DC2A E3F0 D408 0024          00000408  18675          STG   15,1032(0,13)
0000DC30 4110 D388               00000388  18676          LA    1,904(0,13)
0000DC34 E3F0 C0E8 0004          0000D870  18677          LG    15,@lit_1947_1359 ; rd_kafka_log0
0000DC3A                                   18678 @@gen_label1805 DS    0H
0000DC3A 05EF                              18679          BALR  14,15
0000DC3C                                   18680 @@gen_label1806 DS    0H
0000DC3C                                   18681 @L1814   DS    0H
0000DC3C E54C 4188 FF65          00000188  18682          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000DC42 E3C0 C0F8 001A          0000D880  18683          ALGF  12,@lit_region_diff_1947_5_7
                                           18684          DROP  12
                        0000EB2A           18685          USING @REGION_1947_7,12
0000DC48 47F0 C164               0000EC8E  18686          B     @_err_parse@1947@4
                                           18687          DROP  12
                        0000D788           18688          USING @REGION_1947_5,12
0000DC4C                                   18689 @L1810   DS    0H
0000DC4C                                   18690 @L1806   DS    0H
0000DC4C D201 D128 D0E0 00000128 000000E0  18691          MVC   296(2,13),224(13)
                                           18692 * ***           do { int32_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           18693 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           18694 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           18695 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           18696 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           18697 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                           18698 * 1088, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); }\
                                           18699 *  while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr),\
                                           18700 *  ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _\
                                           18701 * logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_st\
                                           18702 * rlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mt\
                                           18703 * x_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb\
                                           18704 * uf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lognam\
                                           18705 * e, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer under\
                                           18706 * flow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %\
                                           18707 * " "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiK\
                                           18708 * ey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion,\
                                           18709 *  rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end\
                                           18710 *  - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1088, __len0, ((&rk\
                                           18711 * buf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader))\
                                           18712 * , rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "i\
                                           18713 * ncorrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf\
                                           18714 * )->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while\
                                           18715 *  (0); } } while (0); } while (0); *(&hdr.BaseSequence) = (_v); } whi\
                                                                                                                           Page  372 
  Active Usings: @REGION_1947_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           18716 * le (0);
0000DC52                                   18717 @L1825   DS    0H
0000DC52                                   18718 @L1828   DS    0H
0000DC52 A729 0004               00000004  18719          LGHI  2,4         ; 4
0000DC56 41F0 4078               00000078  18720          LA    15,120(0,4)
0000DC5A E3F0 D388 0024          00000388  18721          STG   15,904(0,13)
0000DC60 41F0 D0E4               000000E4  18722          LA    15,228(0,13)
0000DC64 E3F0 D390 0024          00000390  18723          STG   15,912(0,13)
0000DC6A E320 D398 0024          00000398  18724          STG   2,920(0,13)
0000DC70 4110 D388               00000388  18725          LA    1,904(0,13)
0000DC74 E3F0 C100 0004          0000D888  18726          LG    15,@lit_1947_1361 ; rd_slice_read
0000DC7A                                   18727 @@gen_label1807 DS    0H
0000DC7A 05EF                              18728          BALR  14,15
0000DC7C                                   18729 @@gen_label1808 DS    0H
0000DC7C B902 00FF                         18730          LTGR  15,15
0000DC80 4770 C77E               0000DF06  18731          BNZ   @L1831
0000DC84                                   18732 @L1832   DS    0H
0000DC84 E390 4098 0004          00000098  18733          LG    9,152(0,4)  ; offset of end in rd_slice_s
0000DC8A 41F0 4078               00000078  18734          LA    15,120(0,4)
0000DC8E E3F0 D388 0024          00000388  18735          STG   15,904(0,13)
0000DC94 4110 D388               00000388  18736          LA    1,904(0,13)
0000DC98 E3F0 C0D8 0004          0000D860  18737          LG    15,@lit_1947_1355 ; rd_slice_abs_offset
0000DC9E                                   18738 @@gen_label1810 DS    0H
0000DC9E 05EF                              18739          BALR  14,15
0000DCA0                                   18740 @@gen_label1811 DS    0H
0000DCA0 B90B 009F                         18741          SLGR  9,15
0000DCA4 B921 0029                         18742          CLGR  2,9
0000DCA8 47D0 C77E               0000DF06  18743          BNH   @L1835
0000DCAC                                   18744 @L1836   DS    0H
0000DCAC 1288                              18745          LTR   8,8
0000DCAE 47D0 C76E               0000DEF6  18746          BNH   @L1839
0000DCB2                                   18747 @L1840   DS    0H
0000DCB2 E3F0 4100 0002          00000100  18748          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DCB8 4770 C576               0000DCFE  18749          BNZ   @L1843
0000DCBC E3F0 C0E0 0004          0000D868  18750          LG    15,@lit_1947_1356
0000DCC2 4110 F2CE               000002CE  18751          LA    1,718(0,15)
0000DCC6 E310 D388 0024          00000388  18752          STG   1,904(0,13)
0000DCCC E548 D390 0440          00000390  18753          MVGHI 912(13),1088
0000DCD2 E310 C0F0 0004          0000D878  18754          LG    1,@lit_1947_1358
0000DCD8 4110 1258               00000258  18755          LA    1,600(0,1)
0000DCDC E310 D398 0024          00000398  18756          STG   1,920(0,13)
0000DCE2 D707 D3A0 D3A0 000003A0 000003A0  18757          XC    928(8,13),928(13)
0000DCE8 41F0 F362               00000362  18758          LA    15,866(0,15)
0000DCEC E3F0 D3A8 0024          000003A8  18759          STG   15,936(0,13)
0000DCF2 4110 D388               00000388  18760          LA    1,904(0,13)
0000DCF6 E3F0 C108 0004          0000D890  18761          LG    15,@lit_1947_1365 ; rd_kafka_crash
0000DCFC                                   18762 @@gen_label1815 DS    0H
0000DCFC 05EF                              18763          BALR  14,15
0000DCFE                                   18764 @@gen_label1816 DS    0H
0000DCFE                                   18765 @L1843   DS    0H
0000DCFE 41F0 D160               00000160  18766          LA    15,352(0,13)
0000DD02 E3F0 D388 0024          00000388  18767          STG   15,904(0,13)
                                                                                                                           Page  373 
  Active Usings: @REGION_1947_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DD08 E548 D390 0100          00000390  18768          MVGHI 912(13),256
0000DD0E E3F0 C0E0 0004          0000D868  18769          LG    15,@lit_1947_1356
0000DD14 41F0 F37C               0000037C  18770          LA    15,892(0,15)
0000DD18 E3F0 D398 0024          00000398  18771          STG   15,920(0,13)
0000DD1E 4110 D388               00000388  18772          LA    1,904(0,13)
0000DD22 E3F0 C110 0004          0000D898  18773          LG    15,@lit_1947_1367 ; snprintf
0000DD28                                   18774 @@gen_label1817 DS    0H
0000DD28 05EF                              18775          BALR  14,15
0000DD2A                                   18776 @@gen_label1818 DS    0H
0000DD2A 41F0 D160               00000160  18777          LA    15,352(0,13)
0000DD2E B904 001F                         18778          LGR   1,15
0000DD32 A709 0000               00000000  18779          LGHI  0,0
0000DD36                                   18780 @@gen_label1819 DS 0H
0000DD36 B25E 000F                         18781          SRST  0,15
0000DD3A 4710 C5AE               0000DD36  18782          BC  1,@@gen_label1819
0000DD3E B90B 0001                         18783          SLGR  0,1
0000DD42 A70F 0002               00000002  18784          CGHI  0,2
0000DD46 4770 C5C6               0000DD4E  18785          BNE   @L1845
0000DD4A 9200 D160      00000160 00000000  18786          MVI   352(13),0
0000DD4E                                   18787 @L1844   DS    0H
0000DD4E                                   18788 @L1845   DS    0H
0000DD4E E3F0 4100 0004          00000100  18789          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DD54 A759 1638               00001638  18790          LGHI  5,5688      ; 5688
0000DD58 41F5 F000               00000000  18791          LA    15,0(5,15)
0000DD5C E3F0 D388 0024          00000388  18792          STG   15,904(0,13)
0000DD62 4110 D388               00000388  18793          LA    1,904(0,13)
0000DD66 E3F0 C118 0004          0000D8A0  18794          LG    15,@lit_1947_1369 ; mtx_lock
0000DD6C                                   18795 @@gen_label1821 DS    0H
0000DD6C 05EF                              18796          BALR  14,15
0000DD6E                                   18797 @@gen_label1822 DS    0H
0000DD6E 41F0 D260               00000260  18798          LA    15,608(0,13)
0000DD72 E3F0 D388 0024          00000388  18799          STG   15,904(0,13)
0000DD78 E3F0 4100 0004          00000100  18800          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DD7E A719 1630               00001630  18801          LGHI  1,5680      ; 5680
0000DD82 E3F1 F000 0004          00000000  18802          LG    15,0(1,15)
0000DD88 E3F0 D390 0024          00000390  18803          STG   15,912(0,13)
0000DD8E E548 D398 0100          00000398  18804          MVGHI 920(13),256
0000DD94 4110 D388               00000388  18805          LA    1,904(0,13)
0000DD98 E3F0 C0B8 0004          0000D840  18806          LG    15,@lit_1947_1350 ; rd_strlcpy
0000DD9E                                   18807 @@gen_label1823 DS    0H
0000DD9E 05EF                              18808          BALR  14,15
0000DDA0                                   18809 @@gen_label1824 DS    0H
0000DDA0 E3F0 4100 0004          00000100  18810          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DDA6 41F5 F000               00000000  18811          LA    15,0(5,15)
0000DDAA E3F0 D388 0024          00000388  18812          STG   15,904(0,13)
0000DDB0 4110 D388               00000388  18813          LA    1,904(0,13)
0000DDB4 E3F0 C0C0 0004          0000D848  18814          LG    15,@lit_1947_1352 ; mtx_unlock
0000DDBA                                   18815 @@gen_label1825 DS    0H
0000DDBA 05EF                              18816          BALR  14,15
0000DDBC                                   18817 @@gen_label1826 DS    0H
0000DDBC E3F0 40B8 0015          000000B8  18818          LGH   15,184(0,4)
0000DDC2 E3F0 D388 0024          00000388  18819          STG   15,904(0,13)
                                                                                                                           Page  374 
  Active Usings: @REGION_1947_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DDC8 4110 D388               00000388  18820          LA    1,904(0,13)
0000DDCC E3F0 C0C8 0004          0000D850  18821          LG    15,@lit_1947_1353 ; rd_kafka_ApiKey2str
0000DDD2                                   18822 @@gen_label1827 DS    0H
0000DDD2 05EF                              18823          BALR  14,15
0000DDD4                                   18824 @@gen_label1828 DS    0H
0000DDD4 B904 005F                         18825          LGR   5,15
0000DDD8 41F0 4078               00000078  18826          LA    15,120(0,4)
0000DDDC E3F0 D388 0024          00000388  18827          STG   15,904(0,13)
0000DDE2 4110 D388               00000388  18828          LA    1,904(0,13)
0000DDE6 E3F0 C0D0 0004          0000D858  18829          LG    15,@lit_1947_1354 ; rd_slice_offset
0000DDEC                                   18830 @@gen_label1829 DS    0H
0000DDEC 05EF                              18831          BALR  14,15
0000DDEE                                   18832 @@gen_label1830 DS    0H
0000DDEE B904 006F                         18833          LGR   6,15
0000DDF2 E370 4098 0004          00000098  18834          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000DDF8 41F0 4078               00000078  18835          LA    15,120(0,4)
0000DDFC E3F0 D388 0024          00000388  18836          STG   15,904(0,13)
0000DE02 4110 D388               00000388  18837          LA    1,904(0,13)
0000DE06 E3F0 C0D8 0004          0000D860  18838          LG    15,@lit_1947_1355 ; rd_slice_abs_offset
0000DE0C                                   18839 @@gen_label1831 DS    0H
0000DE0C 05EF                              18840          BALR  14,15
0000DE0E                                   18841 @@gen_label1832 DS    0H
0000DE0E B90B 007F                         18842          SLGR  7,15
0000DE12 E3F0 41E8 0002          000001E8  18843          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000DE18 4780 C69E               0000DE26  18844          BZ    @L1848
0000DE1C E3F0 41E8 0004          000001E8  18845          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000DE22 47F0 C6A8               0000DE30  18846          B     @L1849
0000DE26                                   18847 @L1848   DS    0H
0000DE26 E3F0 C0E0 0004          0000D868  18848          LG    15,@lit_1947_1356
0000DE2C 41F0 F380               00000380  18849          LA    15,896(0,15)
0000DE30                                   18850 @L1849   DS    0H
0000DE30 E310 4100 0004          00000100  18851          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DE36 E310 1FD0 0004          00000FD0  18852          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000DE3C 4110 1210               00000210  18853          LA    1,528(0,1)
0000DE40 E310 D388 0024          00000388  18854          STG   1,904(0,13)
0000DE46 E310 4100 0004          00000100  18855          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DE4C E310 1FD0 0004          00000FD0  18856          LG    1,4048(0,1)
0000DE52 E310 D390 0024          00000390  18857          STG   1,912(0,13)
0000DE58 4110 D260               00000260  18858          LA    1,608(0,13)
0000DE5C E310 D398 0024          00000398  18859          STG   1,920(0,13)
0000DE62 B914 0018                         18860          LGFR  1,8
0000DE66 E310 D3A0 0024          000003A0  18861          STG   1,928(0,13)
0000DE6C D707 D3A8 D3A8 000003A8 000003A8  18862          XC    936(8,13),936(13)
0000DE72 E310 C0E0 0004          0000D868  18863          LG    1,@lit_1947_1356
0000DE78 4180 13A4               000003A4  18864          LA    8,932(0,1)
0000DE7C E380 D3B0 0024          000003B0  18865          STG   8,944(0,13)
0000DE82 4110 13B0               000003B0  18866          LA    1,944(0,1)
0000DE86 E310 D3B8 0024          000003B8  18867          STG   1,952(0,13)
0000DE8C E350 D3C0 0024          000003C0  18868          STG   5,960(0,13)
0000DE92 4810 40BA               000000BA  18869          LH    1,186(0,4)
                                                                                                                           Page  375 
  Active Usings: @REGION_1947_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DE96 B914 0011                         18870          LGFR  1,1
0000DE9A E310 D3C8 0024          000003C8  18871          STG   1,968(0,13)
0000DEA0 E360 D3D0 0024          000003D0  18872          STG   6,976(0,13)
0000DEA6 E310 4098 0004          00000098  18873          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000DEAC E310 4090 000B          00000090  18874          SLG   1,144(0,4)
0000DEB2 E310 D3D8 0024          000003D8  18875          STG   1,984(0,13)
0000DEB8 E310 C0F0 0004          0000D878  18876          LG    1,@lit_1947_1358
0000DEBE 4110 1258               00000258  18877          LA    1,600(0,1)
0000DEC2 E310 D3E0 0024          000003E0  18878          STG   1,992(0,13)
0000DEC8 E548 D3E8 0440          000003E8  18879          MVGHI 1000(13),1088
0000DECE E320 D3F0 0024          000003F0  18880          STG   2,1008(0,13)
0000DED4 E370 D3F8 0024          000003F8  18881          STG   7,1016(0,13)
0000DEDA E3F0 D400 0024          00000400  18882          STG   15,1024(0,13)
0000DEE0 41F0 D160               00000160  18883          LA    15,352(0,13)
0000DEE4 E3F0 D408 0024          00000408  18884          STG   15,1032(0,13)
0000DEEA 4110 D388               00000388  18885          LA    1,904(0,13)
0000DEEE E3F0 C0E8 0004          0000D870  18886          LG    15,@lit_1947_1359 ; rd_kafka_log0
0000DEF4                                   18887 @@gen_label1834 DS    0H
0000DEF4 05EF                              18888          BALR  14,15
0000DEF6                                   18889 @@gen_label1835 DS    0H
0000DEF6                                   18890 @L1839   DS    0H
0000DEF6 E54C 4188 FF65          00000188  18891          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000DEFC E3C0 C0F8 001A          0000D880  18892          ALGF  12,@lit_region_diff_1947_5_7
                                           18893          DROP  12
                        0000EB2A           18894          USING @REGION_1947_7,12
0000DF02 47F0 C164               0000EC8E  18895          B     @_err_parse@1947@4
                                           18896          DROP  12
                        0000D788           18897          USING @REGION_1947_5,12
0000DF06                                   18898 @L1835   DS    0H
0000DF06                                   18899 @L1831   DS    0H
0000DF06 58F0 D0E4               000000E4  18900          L     15,228(0,13) ; _v
0000DF0A 50F0 D12C               0000012C  18901          ST    15,300(0,13) ; offset of BaseSequence in msgset_v2_hdr
                                           18902 * ***           do { int32_t _v; do { size_t __len2 = (size_t)(sizeof(\
                                           18903 * _v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2)) do { \
                                           18904 * size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)->rkbuf_r\
                                           18905 * eader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) { do {\
                                           18906 *  if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)))) rd_k\
                                           18907 * afka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c",\
                                           18908 * 1089, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb"); }\
                                           18909 *  while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmpstr),\
                                           18910 *  ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { char _\
                                           18911 * logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_st\
                                           18912 * rlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)); mt\
                                           18913 * x_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(&(rkb\
                                           18914 * uf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _lognam\
                                           18915 * e, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer under\
                                           18916 * flow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expected %\
                                           18917 * " "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka_ApiK\
                                           18918 * ey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion,\
                                           18919 *  rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end\
                                           18920 *  - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1089, __len0, ((&rk\
                                           18921 * buf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader))\
                                                                                                                           Page  376 
  Active Usings: @REGION_1947_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           18922 * , rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation : "i\
                                           18923 * ncorrect broker.version.fallback?", __tmpstr); } while (0); } (rkbuf\
                                           18924 * )->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while\
                                           18925 *  (0); } } while (0); } while (0); *(&hdr.RecordCount) = (_v); } whil\
                                           18926 * e (0);
0000DF0E                                   18927 @L1850   DS    0H
0000DF0E                                   18928 @L1853   DS    0H
0000DF0E A729 0004               00000004  18929          LGHI  2,4         ; 4
0000DF12 41F0 4078               00000078  18930          LA    15,120(0,4)
0000DF16 E3F0 D388 0024          00000388  18931          STG   15,904(0,13)
0000DF1C 41F0 D0E8               000000E8  18932          LA    15,232(0,13)
0000DF20 E3F0 D390 0024          00000390  18933          STG   15,912(0,13)
0000DF26 E320 D398 0024          00000398  18934          STG   2,920(0,13)
0000DF2C 4110 D388               00000388  18935          LA    1,904(0,13)
0000DF30 E3F0 C100 0004          0000D888  18936          LG    15,@lit_1947_1361 ; rd_slice_read
0000DF36                                   18937 @@gen_label1836 DS    0H
0000DF36 05EF                              18938          BALR  14,15
0000DF38                                   18939 @@gen_label1837 DS    0H
0000DF38 B902 00FF                         18940          LTGR  15,15
0000DF3C 4780 C7C2               0000DF4A  18941          BZ    *+14  Around region break
0000DF40 E3C0 C120 001A          0000D8A8  18942          ALGF  12,@lit_region_diff_1947_5_6
                                           18943          DROP  12
                        0000E116           18944          USING @REGION_1947_6,12
0000DF46 47F0 C162               0000E278  18945          B     @L1856
                                           18946          DROP  12
                        0000D788           18947          USING @REGION_1947_5,12
0000DF4A                                   18948 @L1857   DS    0H
0000DF4A E390 4098 0004          00000098  18949          LG    9,152(0,4)  ; offset of end in rd_slice_s
0000DF50 41F0 4078               00000078  18950          LA    15,120(0,4)
0000DF54 E3F0 D388 0024          00000388  18951          STG   15,904(0,13)
0000DF5A 4110 D388               00000388  18952          LA    1,904(0,13)
0000DF5E E3F0 C0D8 0004          0000D860  18953          LG    15,@lit_1947_1355 ; rd_slice_abs_offset
0000DF64                                   18954 @@gen_label1839 DS    0H
0000DF64 05EF                              18955          BALR  14,15
0000DF66                                   18956 @@gen_label1840 DS    0H
0000DF66 B90B 009F                         18957          SLGR  9,15
0000DF6A B921 0029                         18958          CLGR  2,9
0000DF6E 4720 C7F4               0000DF7C  18959          BH    *+14  Around region break
0000DF72 E3C0 C120 001A          0000D8A8  18960          ALGF  12,@lit_region_diff_1947_5_6
                                           18961          DROP  12
                        0000E116           18962          USING @REGION_1947_6,12
0000DF78 47F0 C162               0000E278  18963          B     @L1860
                                           18964          DROP  12
                        0000D788           18965          USING @REGION_1947_5,12
0000DF7C                                   18966 @L1861   DS    0H
0000DF7C 1288                              18967          LTR   8,8
0000DF7E 4720 C804               0000DF8C  18968          BH    *+14  Around region break
0000DF82 E3C0 C120 001A          0000D8A8  18969          ALGF  12,@lit_region_diff_1947_5_6
                                           18970          DROP  12
                        0000E116           18971          USING @REGION_1947_6,12
0000DF88 47F0 C0C6               0000E1DC  18972          B     @L1864
                                           18973          DROP  12
                                                                                                                           Page  377 
  Active Usings: @REGION_1947_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        0000D788           18974          USING @REGION_1947_5,12
0000DF8C                                   18975 @L1865   DS    0H
0000DF8C E3F0 4100 0002          00000100  18976          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000DF92 4770 C850               0000DFD8  18977          BNZ   @L1868
0000DF96 E3F0 C0E0 0004          0000D868  18978          LG    15,@lit_1947_1356
0000DF9C 4110 F2CE               000002CE  18979          LA    1,718(0,15)
0000DFA0 E310 D388 0024          00000388  18980          STG   1,904(0,13)
0000DFA6 E548 D390 0441          00000390  18981          MVGHI 912(13),1089
0000DFAC E310 C0F0 0004          0000D878  18982          LG    1,@lit_1947_1358
0000DFB2 4110 1258               00000258  18983          LA    1,600(0,1)
0000DFB6 E310 D398 0024          00000398  18984          STG   1,920(0,13)
0000DFBC D707 D3A0 D3A0 000003A0 000003A0  18985          XC    928(8,13),928(13)
0000DFC2 41F0 F362               00000362  18986          LA    15,866(0,15)
0000DFC6 E3F0 D3A8 0024          000003A8  18987          STG   15,936(0,13)
0000DFCC 4110 D388               00000388  18988          LA    1,904(0,13)
0000DFD0 E3F0 C108 0004          0000D890  18989          LG    15,@lit_1947_1365 ; rd_kafka_crash
0000DFD6                                   18990 @@gen_label1844 DS    0H
0000DFD6 05EF                              18991          BALR  14,15
0000DFD8                                   18992 @@gen_label1845 DS    0H
0000DFD8                                   18993 @L1868   DS    0H
0000DFD8 41F0 D160               00000160  18994          LA    15,352(0,13)
0000DFDC E3F0 D388 0024          00000388  18995          STG   15,904(0,13)
0000DFE2 E548 D390 0100          00000390  18996          MVGHI 912(13),256
0000DFE8 E3F0 C0E0 0004          0000D868  18997          LG    15,@lit_1947_1356
0000DFEE 41F0 F37C               0000037C  18998          LA    15,892(0,15)
0000DFF2 E3F0 D398 0024          00000398  18999          STG   15,920(0,13)
0000DFF8 4110 D388               00000388  19000          LA    1,904(0,13)
0000DFFC E3F0 C110 0004          0000D898  19001          LG    15,@lit_1947_1367 ; snprintf
0000E002                                   19002 @@gen_label1846 DS    0H
0000E002 05EF                              19003          BALR  14,15
0000E004                                   19004 @@gen_label1847 DS    0H
0000E004 41F0 D160               00000160  19005          LA    15,352(0,13)
0000E008 B904 001F                         19006          LGR   1,15
0000E00C A709 0000               00000000  19007          LGHI  0,0
0000E010                                   19008 @@gen_label1848 DS 0H
0000E010 B25E 000F                         19009          SRST  0,15
0000E014 4710 C888               0000E010  19010          BC  1,@@gen_label1848
0000E018 B90B 0001                         19011          SLGR  0,1
0000E01C A70F 0002               00000002  19012          CGHI  0,2
0000E020 4770 C8A0               0000E028  19013          BNE   @L1870
0000E024 9200 D160      00000160 00000000  19014          MVI   352(13),0
0000E028                                   19015 @L1869   DS    0H
0000E028                                   19016 @L1870   DS    0H
0000E028 E3F0 4100 0004          00000100  19017          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E02E A759 1638               00001638  19018          LGHI  5,5688      ; 5688
0000E032 41F5 F000               00000000  19019          LA    15,0(5,15)
0000E036 E3F0 D388 0024          00000388  19020          STG   15,904(0,13)
0000E03C 4110 D388               00000388  19021          LA    1,904(0,13)
0000E040 E3F0 C118 0004          0000D8A0  19022          LG    15,@lit_1947_1369 ; mtx_lock
0000E046                                   19023 @@gen_label1850 DS    0H
0000E046 05EF                              19024          BALR  14,15
0000E048                                   19025 @@gen_label1851 DS    0H
                                                                                                                           Page  378 
  Active Usings: @REGION_1947_5,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E048 41F0 D260               00000260  19026          LA    15,608(0,13)
0000E04C E3F0 D388 0024          00000388  19027          STG   15,904(0,13)
0000E052 E3F0 4100 0004          00000100  19028          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E058 A719 1630               00001630  19029          LGHI  1,5680      ; 5680
0000E05C E3F1 F000 0004          00000000  19030          LG    15,0(1,15)
0000E062 E3F0 D390 0024          00000390  19031          STG   15,912(0,13)
0000E068 E548 D398 0100          00000398  19032          MVGHI 920(13),256
0000E06E 4110 D388               00000388  19033          LA    1,904(0,13)
0000E072 E3F0 C0B8 0004          0000D840  19034          LG    15,@lit_1947_1350 ; rd_strlcpy
0000E078                                   19035 @@gen_label1852 DS    0H
0000E078 05EF                              19036          BALR  14,15
0000E07A                                   19037 @@gen_label1853 DS    0H
0000E07A E3F0 4100 0004          00000100  19038          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E080 41F5 F000               00000000  19039          LA    15,0(5,15)
0000E084 E3F0 D388 0024          00000388  19040          STG   15,904(0,13)
0000E08A 4110 D388               00000388  19041          LA    1,904(0,13)
0000E08E E3F0 C0C0 0004          0000D848  19042          LG    15,@lit_1947_1352 ; mtx_unlock
0000E094                                   19043 @@gen_label1854 DS    0H
0000E094 05EF                              19044          BALR  14,15
0000E096                                   19045 @@gen_label1855 DS    0H
0000E096 E3F0 40B8 0015          000000B8  19046          LGH   15,184(0,4)
0000E09C E3F0 D388 0024          00000388  19047          STG   15,904(0,13)
0000E0A2 4110 D388               00000388  19048          LA    1,904(0,13)
0000E0A6 E3F0 C0C8 0004          0000D850  19049          LG    15,@lit_1947_1353 ; rd_kafka_ApiKey2str
0000E0AC                                   19050 @@gen_label1856 DS    0H
0000E0AC 05EF                              19051          BALR  14,15
0000E0AE                                   19052 @@gen_label1857 DS    0H
0000E0AE B904 005F                         19053          LGR   5,15
0000E0B2 41F0 4078               00000078  19054          LA    15,120(0,4)
0000E0B6 E3F0 D388 0024          00000388  19055          STG   15,904(0,13)
0000E0BC 4110 D388               00000388  19056          LA    1,904(0,13)
0000E0C0 E3F0 C0D0 0004          0000D858  19057          LG    15,@lit_1947_1354 ; rd_slice_offset
0000E0C6                                   19058 @@gen_label1858 DS    0H
0000E0C6 05EF                              19059          BALR  14,15
0000E0C8                                   19060 @@gen_label1859 DS    0H
0000E0C8 B904 006F                         19061          LGR   6,15
0000E0CC E370 4098 0004          00000098  19062          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000E0D2 41F0 4078               00000078  19063          LA    15,120(0,4)
0000E0D6 E3F0 D388 0024          00000388  19064          STG   15,904(0,13)
0000E0DC 4110 D388               00000388  19065          LA    1,904(0,13)
0000E0E0 E3F0 C0D8 0004          0000D860  19066          LG    15,@lit_1947_1355 ; rd_slice_abs_offset
0000E0E6                                   19067 @@gen_label1860 DS    0H
0000E0E6 05EF                              19068          BALR  14,15
0000E0E8                                   19069 @@gen_label1861 DS    0H
0000E0E8 B90B 007F                         19070          SLGR  7,15
0000E0EC E3F0 41E8 0002          000001E8  19071          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000E0F2 4780 C97E               0000E106  19072          BZ    @L1873
0000E0F6 E3F0 41E8 0004          000001E8  19073          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000E0FC E3C0 C120 001A          0000D8A8  19074          ALGF  12,@lit_region_diff_1947_5_6
                                           19075          DROP  12
                                                                                                                           Page  379 
  Active Usings: @REGION_1947_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        0000E116           19076          USING @REGION_1947_6,12
0000E102 47F0 C000               0000E116  19077          B     @L1874
                                           19078          DROP  12
                        0000D788           19079          USING @REGION_1947_5,12
0000E106                                   19080 @L1873   DS    0H
0000E106 E3F0 C0E0 0004          0000D868  19081          LG    15,@lit_1947_1356
0000E10C 41F0 F380               00000380  19082          LA    15,896(0,15)
0000E110 E3C0 C120 001A          0000D8A8  19083          ALGF  12,@lit_region_diff_1947_5_6
0000E116                                   19084 @REGION_1947_6 DS 0H
                                           19085          DROP  12
                        0000E116           19086          USING @REGION_1947_6,12
0000E116                                   19087 @L1874   DS    0H
0000E116 E310 4100 0004          00000100  19088          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E11C E310 1FD0 0004          00000FD0  19089          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000E122 4110 1210               00000210  19090          LA    1,528(0,1)
0000E126 E310 D388 0024          00000388  19091          STG   1,904(0,13)
0000E12C E310 4100 0004          00000100  19092          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E132 E310 1FD0 0004          00000FD0  19093          LG    1,4048(0,1)
0000E138 E310 D390 0024          00000390  19094          STG   1,912(0,13)
0000E13E 4110 D260               00000260  19095          LA    1,608(0,13)
0000E142 E310 D398 0024          00000398  19096          STG   1,920(0,13)
0000E148 B914 0018                         19097          LGFR  1,8
0000E14C E310 D3A0 0024          000003A0  19098          STG   1,928(0,13)
0000E152 D707 D3A8 D3A8 000003A8 000003A8  19099          XC    936(8,13),936(13)
0000E158 E310 C0EA 0004          0000E200  19100          LG    1,@lit_1947_1420
0000E15E 4180 13A4               000003A4  19101          LA    8,932(0,1)
0000E162 E380 D3B0 0024          000003B0  19102          STG   8,944(0,13)
0000E168 4110 13B0               000003B0  19103          LA    1,944(0,1)
0000E16C E310 D3B8 0024          000003B8  19104          STG   1,952(0,13)
0000E172 E350 D3C0 0024          000003C0  19105          STG   5,960(0,13)
0000E178 4810 40BA               000000BA  19106          LH    1,186(0,4)
0000E17C B914 0011                         19107          LGFR  1,1
0000E180 E310 D3C8 0024          000003C8  19108          STG   1,968(0,13)
0000E186 E360 D3D0 0024          000003D0  19109          STG   6,976(0,13)
0000E18C E310 4098 0004          00000098  19110          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000E192 E310 4090 000B          00000090  19111          SLG   1,144(0,4)
0000E198 E310 D3D8 0024          000003D8  19112          STG   1,984(0,13)
0000E19E E310 C0E2 0004          0000E1F8  19113          LG    1,@lit_1947_1421
0000E1A4 4110 1258               00000258  19114          LA    1,600(0,1)
0000E1A8 E310 D3E0 0024          000003E0  19115          STG   1,992(0,13)
0000E1AE E548 D3E8 0441          000003E8  19116          MVGHI 1000(13),1089
0000E1B4 E320 D3F0 0024          000003F0  19117          STG   2,1008(0,13)
0000E1BA E370 D3F8 0024          000003F8  19118          STG   7,1016(0,13)
0000E1C0 E3F0 D400 0024          00000400  19119          STG   15,1024(0,13)
0000E1C6 41F0 D160               00000160  19120          LA    15,352(0,13)
0000E1CA E3F0 D408 0024          00000408  19121          STG   15,1032(0,13)
0000E1D0 4110 D388               00000388  19122          LA    1,904(0,13)
0000E1D4 E3F0 C0DA 0004          0000E1F0  19123          LG    15,@lit_1947_1422 ; rd_kafka_log0
0000E1DA                                   19124 @@gen_label1863 DS    0H
0000E1DA 05EF                              19125          BALR  14,15
0000E1DC                                   19126 @@gen_label1864 DS    0H
0000E1DC                                   19127 @L1864   DS    0H
                                                                                                                           Page  380 
  Active Usings: @REGION_1947_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E1DC E54C 4188 FF65          00000188  19128          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000E1E2 E3C0 C0F2 001A          0000E208  19129          ALGF  12,@lit_region_diff_1947_6_7
                                           19130          DROP  12
                        0000EB2A           19131          USING @REGION_1947_7,12
0000E1E8 47F0 C164               0000EC8E  19132          B     @_err_parse@1947@4
                                           19133          DROP  12
                        0000E116           19134          USING @REGION_1947_6,12
0000E1F0                                   19135          DS    0D
0000E1F0 0000000000000000                  19136 @lit_1947_1422 DC AD(rd_kafka_log0)
0000E1F8 0000000000012808                  19137 @lit_1947_1421 DC AD(@DATA)
0000E200 0000000000012AB8                  19138 @lit_1947_1420 DC AD(@strings@)
0000E208 00000A14                          19139 @lit_region_diff_1947_6_7  DC A(@REGION_1947_7-@REGION_1947_6)
0000E20C 00000000
0000E210 00000000000012B8                  19140 @lit_1947_1423 DC AD(rd_slice_offset)
0000E218 0000000000001210                  19141 @lit_1947_1424 DC AD(rd_slice_abs_offset)
0000E220 0000000000000000                  19142 @lit_1947_1427 DC AD(rd_kafka_crash)
0000E228 0000000000000000                  19143 @lit_1947_1429 DC AD(snprintf)
0000E230 0000000000000000                  19144 @lit_1947_1431 DC AD(mtx_lock)
0000E238 0000000000001668                  19145 @lit_1947_1433 DC AD(rd_strlcpy)
0000E240 0000000000000000                  19146 @lit_1947_1435 DC AD(mtx_unlock)
0000E248 00000000000014D0                  19147 @lit_1947_1436 DC AD(rd_kafka_$Api$Key2str)
0000E250 0000000000000000                  19148 @lit_1947_1443 DC AD(rd_slice_read)
0000E258 0000000000000000                  19149 @lit_1947_1463 DC AD(rd_slice_ensure_contig)
0000E260 0000000000000000                  19150 @lit_1947_1466 DC AD(__assert)
0000E268 00000000000032E8                  19151 @lit_1947_1467 DC AD(rd_kafka_msgset_reader_decompress)
0000E270 0000000000000000                  19152 @lit_1947_1468 DC AD(rd_slice_narrow_relative)
0000E278                                   19153 @L1860   DS    0H
0000E278                                   19154 @L1856   DS    0H
0000E278 58F0 D0E8               000000E8  19155          L     15,232(0,13) ; _v
0000E27C 50F0 D130               00000130  19156          ST    15,304(0,13) ; offset of RecordCount in msgset_v2_hdr
                                           19157 * ***
                                           19158 * ***
                                           19159 * ***           payload_size = hdr.Length - (rd_slice_offset(&rkbuf->r\
                                           19160 * kbuf_reader) -
0000E280 E320 D0F8 0014          000000F8  19161          LGF   2,248(0,13)
0000E286 41F0 4078               00000078  19162          LA    15,120(0,4)
0000E28A E3F0 D388 0024          00000388  19163          STG   15,904(0,13)
0000E290 4110 D388               00000388  19164          LA    1,904(0,13)
0000E294 E3F0 C0FA 0004          0000E210  19165          LG    15,@lit_1947_1423 ; rd_slice_offset
0000E29A                                   19166 @@gen_label1865 DS    0H
0000E29A 05EF                              19167          BALR  14,15
0000E29C                                   19168 @@gen_label1866 DS    0H
                                           19169 * ***                                        len_start);
0000E29C B90B 00F6                         19170          SLGR  15,6
0000E2A0 B90B 002F                         19171          SLGR  2,15
0000E2A4 B904 0062                         19172          LGR   6,2         ; payload_size
                                           19173 * ***
                                           19174 * ***           if (((payload_size > ((&(rkbuf)->rkbuf_reader)->end - \
                                           19175 * rd_slice_abs_offset(&(rkbuf)->rkbuf_reader)))))
0000E2A8 E390 4098 0004          00000098  19176          LG    9,152(0,4)  ; offset of end in rd_slice_s
0000E2AE 41F0 4078               00000078  19177          LA    15,120(0,4)
0000E2B2 E3F0 D388 0024          00000388  19178          STG   15,904(0,13)
                                                                                                                           Page  381 
  Active Usings: @REGION_1947_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E2B8 4110 D388               00000388  19179          LA    1,904(0,13)
0000E2BC E3F0 C102 0004          0000E218  19180          LG    15,@lit_1947_1424 ; rd_slice_abs_offset
0000E2C2                                   19181 @@gen_label1867 DS    0H
0000E2C2 05EF                              19182          BALR  14,15
0000E2C4                                   19183 @@gen_label1868 DS    0H
0000E2C4 B90B 009F                         19184          SLGR  9,15
0000E2C8 B921 0029                         19185          CLGR  2,9
0000E2CC 47D0 C43E               0000E554  19186          BNH   @L1875
                                           19187 * ***                   do { if (log_decode_errors > 0) { do { if (((!\
                                           19188 * (rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\
                                           19189 * \rdkafka_msgset_reader.c",1096, __FUNCTION__, (((void *)0)), "assert\
                                           19190 * : " "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[256]; snprintf(_\
                                           19191 * _tmpstr, sizeof(__tmpstr), ": " "%s [%" "d" "] " "MessageSet at offs\
                                           19192 * et %" "lld" " payload size %" "zu", rktp->rktp_rkt->rkt_topic->str, \
                                           19193 * rktp->rktp_partition, hdr.BaseOffset, payload_size); if (__strlen(__\
                                           19194 * tmpstr) == 2) __tmpstr[0] = '\0'; do { char _logname[256]; mtx_lock(\
                                           19195 * &(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logname, rkbuf->\
                                           19196 * rkbuf_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkbuf->rkbuf\
                                           19197 * _rkb)->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk-\
                                           19198 * >rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decode_errors, 0\
                                           19199 * x0, "PROTOUFLOW", "Protocol read buffer underflow " "for %s v%hd " "\
                                           19200 * at %" "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " bytes > " "%" \
                                           19201 * "zu" " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf_req\
                                           19202 * hdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_offset(&rkbuf\
                                           19203 * ->rkbuf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_reade\
                                           19204 * r)->start), __FUNCTION__, 1096, payload_size, ((&rkbuf->rkbuf_reader\
                                           19205 * )->end - rd_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_uf\
                                           19206 * low_mitigation ? rkbuf->rkbuf_uflow_mitigation : "incorrect broker.v\
                                           19207 * ersion.fallback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_err = RD\
                                           19208 * _KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } while (0);
0000E2D0                                   19209 @L1876   DS    0H
0000E2D0 1288                              19210          LTR   8,8
0000E2D2 47D0 C42E               0000E544  19211          BNH   @L1879
0000E2D6                                   19212 @L1880   DS    0H
0000E2D6 E3F0 4100 0002          00000100  19213          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E2DC 4770 C20C               0000E322  19214          BNZ   @L1883
0000E2E0 E3F0 C0EA 0004          0000E200  19215          LG    15,@lit_1947_1420
0000E2E6 4110 F2CE               000002CE  19216          LA    1,718(0,15)
0000E2EA E310 D388 0024          00000388  19217          STG   1,904(0,13)
0000E2F0 E548 D390 0448          00000390  19218          MVGHI 912(13),1096
0000E2F6 E310 C0E2 0004          0000E1F8  19219          LG    1,@lit_1947_1421
0000E2FC 4110 1258               00000258  19220          LA    1,600(0,1)
0000E300 E310 D398 0024          00000398  19221          STG   1,920(0,13)
0000E306 D707 D3A0 D3A0 000003A0 000003A0  19222          XC    928(8,13),928(13)
0000E30C 41F0 F362               00000362  19223          LA    15,866(0,15)
0000E310 E3F0 D3A8 0024          000003A8  19224          STG   15,936(0,13)
0000E316 4110 D388               00000388  19225          LA    1,904(0,13)
0000E31A E3F0 C10A 0004          0000E220  19226          LG    15,@lit_1947_1427 ; rd_kafka_crash
0000E320                                   19227 @@gen_label1872 DS    0H
0000E320 05EF                              19228          BALR  14,15
0000E322                                   19229 @@gen_label1873 DS    0H
0000E322                                   19230 @L1883   DS    0H
                                                                                                                           Page  382 
  Active Usings: @REGION_1947_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E322 41F0 D160               00000160  19231          LA    15,352(0,13)
0000E326 E3F0 D388 0024          00000388  19232          STG   15,904(0,13)
0000E32C E548 D390 0100          00000390  19233          MVGHI 912(13),256
0000E332 E3F0 C0EA 0004          0000E200  19234          LG    15,@lit_1947_1420
0000E338 41F0 F87C               0000087C  19235          LA    15,2172(0,15)
0000E33C E3F0 D398 0024          00000398  19236          STG   15,920(0,13)
0000E342 E3F0 5060 0004          00000060  19237          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000E348 E3F0 F080 0004          00000080  19238          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000E34E E3F0 F008 0004          00000008  19239          LG    15,8(0,15)
0000E354 E3F0 D3A0 0024          000003A0  19240          STG   15,928(0,13)
0000E35A E3F0 5068 0014          00000068  19241          LGF   15,104(0,5)
0000E360 E3F0 D3A8 0024          000003A8  19242          STG   15,936(0,13)
0000E366 E3F0 D0F0 0004          000000F0  19243          LG    15,240(0,13)
0000E36C E3F0 D3B0 0024          000003B0  19244          STG   15,944(0,13)
0000E372 E360 D3B8 0024          000003B8  19245          STG   6,952(0,13)
0000E378 4110 D388               00000388  19246          LA    1,904(0,13)
0000E37C E3F0 C112 0004          0000E228  19247          LG    15,@lit_1947_1429 ; snprintf
0000E382                                   19248 @@gen_label1874 DS    0H
0000E382 05EF                              19249          BALR  14,15
0000E384                                   19250 @@gen_label1875 DS    0H
0000E384 41F0 D160               00000160  19251          LA    15,352(0,13)
0000E388 B904 001F                         19252          LGR   1,15
0000E38C A709 0000               00000000  19253          LGHI  0,0
0000E390                                   19254 @@gen_label1876 DS 0H
0000E390 B25E 000F                         19255          SRST  0,15
0000E394 4710 C27A               0000E390  19256          BC  1,@@gen_label1876
0000E398 B90B 0001                         19257          SLGR  0,1
0000E39C A70F 0002               00000002  19258          CGHI  0,2
0000E3A0 4770 C292               0000E3A8  19259          BNE   @L1885
0000E3A4 9200 D160      00000160 00000000  19260          MVI   352(13),0
0000E3A8                                   19261 @L1884   DS    0H
0000E3A8                                   19262 @L1885   DS    0H
0000E3A8 E3F0 4100 0004          00000100  19263          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E3AE A729 1638               00001638  19264          LGHI  2,5688      ; 5688
0000E3B2 41F2 F000               00000000  19265          LA    15,0(2,15)
0000E3B6 E3F0 D388 0024          00000388  19266          STG   15,904(0,13)
0000E3BC 4110 D388               00000388  19267          LA    1,904(0,13)
0000E3C0 E3F0 C11A 0004          0000E230  19268          LG    15,@lit_1947_1431 ; mtx_lock
0000E3C6                                   19269 @@gen_label1878 DS    0H
0000E3C6 05EF                              19270          BALR  14,15
0000E3C8                                   19271 @@gen_label1879 DS    0H
0000E3C8 41F0 D260               00000260  19272          LA    15,608(0,13)
0000E3CC E3F0 D388 0024          00000388  19273          STG   15,904(0,13)
0000E3D2 E3F0 4100 0004          00000100  19274          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E3D8 A719 1630               00001630  19275          LGHI  1,5680      ; 5680
0000E3DC E3F1 F000 0004          00000000  19276          LG    15,0(1,15)
0000E3E2 E3F0 D390 0024          00000390  19277          STG   15,912(0,13)
0000E3E8 E548 D398 0100          00000398  19278          MVGHI 920(13),256
0000E3EE 4110 D388               00000388  19279          LA    1,904(0,13)
0000E3F2 E3F0 C122 0004          0000E238  19280          LG    15,@lit_1947_1433 ; rd_strlcpy
0000E3F8                                   19281 @@gen_label1880 DS    0H
0000E3F8 05EF                              19282          BALR  14,15
                                                                                                                           Page  383 
  Active Usings: @REGION_1947_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E3FA                                   19283 @@gen_label1881 DS    0H
0000E3FA E3F0 4100 0004          00000100  19284          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E400 41F2 F000               00000000  19285          LA    15,0(2,15)
0000E404 E3F0 D388 0024          00000388  19286          STG   15,904(0,13)
0000E40A 4110 D388               00000388  19287          LA    1,904(0,13)
0000E40E E3F0 C12A 0004          0000E240  19288          LG    15,@lit_1947_1435 ; mtx_unlock
0000E414                                   19289 @@gen_label1882 DS    0H
0000E414 05EF                              19290          BALR  14,15
0000E416                                   19291 @@gen_label1883 DS    0H
0000E416 E3F0 40B8 0015          000000B8  19292          LGH   15,184(0,4)
0000E41C E3F0 D388 0024          00000388  19293          STG   15,904(0,13)
0000E422 4110 D388               00000388  19294          LA    1,904(0,13)
0000E426 E3F0 C132 0004          0000E248  19295          LG    15,@lit_1947_1436 ; rd_kafka_ApiKey2str
0000E42C                                   19296 @@gen_label1884 DS    0H
0000E42C 05EF                              19297          BALR  14,15
0000E42E                                   19298 @@gen_label1885 DS    0H
0000E42E B904 002F                         19299          LGR   2,15
0000E432 41F0 4078               00000078  19300          LA    15,120(0,4)
0000E436 E3F0 D388 0024          00000388  19301          STG   15,904(0,13)
0000E43C 4110 D388               00000388  19302          LA    1,904(0,13)
0000E440 E3F0 C0FA 0004          0000E210  19303          LG    15,@lit_1947_1423 ; rd_slice_offset
0000E446                                   19304 @@gen_label1886 DS    0H
0000E446 05EF                              19305          BALR  14,15
0000E448                                   19306 @@gen_label1887 DS    0H
0000E448 B904 005F                         19307          LGR   5,15
0000E44C E370 4098 0004          00000098  19308          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000E452 41F0 4078               00000078  19309          LA    15,120(0,4)
0000E456 E3F0 D388 0024          00000388  19310          STG   15,904(0,13)
0000E45C 4110 D388               00000388  19311          LA    1,904(0,13)
0000E460 E3F0 C102 0004          0000E218  19312          LG    15,@lit_1947_1424 ; rd_slice_abs_offset
0000E466                                   19313 @@gen_label1888 DS    0H
0000E466 05EF                              19314          BALR  14,15
0000E468                                   19315 @@gen_label1889 DS    0H
0000E468 B90B 007F                         19316          SLGR  7,15
0000E46C E3F0 41E8 0002          000001E8  19317          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000E472 4780 C36A               0000E480  19318          BZ    @L1888
0000E476 E3F0 41E8 0004          000001E8  19319          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000E47C 47F0 C374               0000E48A  19320          B     @L1889
0000E480                                   19321 @L1888   DS    0H
0000E480 E3F0 C0EA 0004          0000E200  19322          LG    15,@lit_1947_1420
0000E486 41F0 F380               00000380  19323          LA    15,896(0,15)
0000E48A                                   19324 @L1889   DS    0H
0000E48A E310 4100 0004          00000100  19325          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E490 E310 1FD0 0004          00000FD0  19326          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000E496 4110 1210               00000210  19327          LA    1,528(0,1)
0000E49A E310 D388 0024          00000388  19328          STG   1,904(0,13)
0000E4A0 E310 4100 0004          00000100  19329          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E4A6 E310 1FD0 0004          00000FD0  19330          LG    1,4048(0,1)
0000E4AC E310 D390 0024          00000390  19331          STG   1,912(0,13)
0000E4B2 4110 D260               00000260  19332          LA    1,608(0,13)
                                                                                                                           Page  384 
  Active Usings: @REGION_1947_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E4B6 E310 D398 0024          00000398  19333          STG   1,920(0,13)
0000E4BC B914 0018                         19334          LGFR  1,8
0000E4C0 E310 D3A0 0024          000003A0  19335          STG   1,928(0,13)
0000E4C6 D707 D3A8 D3A8 000003A8 000003A8  19336          XC    936(8,13),936(13)
0000E4CC E310 C0EA 0004          0000E200  19337          LG    1,@lit_1947_1420
0000E4D2 4180 13A4               000003A4  19338          LA    8,932(0,1)
0000E4D6 E380 D3B0 0024          000003B0  19339          STG   8,944(0,13)
0000E4DC 4110 13B0               000003B0  19340          LA    1,944(0,1)
0000E4E0 EB12 D3B8 0024          000003B8  19341          STMG  1,2,952(13)
0000E4E6 4810 40BA               000000BA  19342          LH    1,186(0,4)
0000E4EA B914 0011                         19343          LGFR  1,1
0000E4EE E310 D3C8 0024          000003C8  19344          STG   1,968(0,13)
0000E4F4 E350 D3D0 0024          000003D0  19345          STG   5,976(0,13)
0000E4FA E310 4098 0004          00000098  19346          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000E500 E310 4090 000B          00000090  19347          SLG   1,144(0,4)
0000E506 E310 D3D8 0024          000003D8  19348          STG   1,984(0,13)
0000E50C E310 C0E2 0004          0000E1F8  19349          LG    1,@lit_1947_1421
0000E512 4110 1258               00000258  19350          LA    1,600(0,1)
0000E516 E310 D3E0 0024          000003E0  19351          STG   1,992(0,13)
0000E51C E548 D3E8 0448          000003E8  19352          MVGHI 1000(13),1096
0000E522 EB67 D3F0 0024          000003F0  19353          STMG  6,7,1008(13)
0000E528 E3F0 D400 0024          00000400  19354          STG   15,1024(0,13)
0000E52E 41F0 D160               00000160  19355          LA    15,352(0,13)
0000E532 E3F0 D408 0024          00000408  19356          STG   15,1032(0,13)
0000E538 4110 D388               00000388  19357          LA    1,904(0,13)
0000E53C E3F0 C0DA 0004          0000E1F0  19358          LG    15,@lit_1947_1422 ; rd_kafka_log0
0000E542                                   19359 @@gen_label1891 DS    0H
0000E542 05EF                              19360          BALR  14,15
0000E544                                   19361 @@gen_label1892 DS    0H
0000E544                                   19362 @L1879   DS    0H
0000E544 E54C 4188 FF65          00000188  19363          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000E54A E3C0 C0F2 001A          0000E208  19364          ALGF  12,@lit_region_diff_1947_6_7
                                           19365          DROP  12
                        0000EB2A           19366          USING @REGION_1947_7,12
0000E550 47F0 C164               0000EC8E  19367          B     @_err_parse@1947@4
                                           19368          DROP  12
                        0000E116           19369          USING @REGION_1947_6,12
                                           19370 * ***
                                           19371 * ***   # 1104 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           19372 * ***
                                           19373 * ***           if (LastOffset < rktp->rktp_offsets.fetch_offset) {
0000E554                                   19374 @L1875   DS    0H
0000E554 E370 5238 0020          00000238  19375          CG    7,568(0,5)
0000E55A 47B0 C71E               0000E834  19376          BNL   @L1890
                                           19377 * ***                   do { size_t __len1 = (size_t)(payload_size); i\
                                           19378 * f (__len1 && !rd_slice_read(&(rkbuf)->rkbuf_reader, ((void *)0), __l\
                                           19379 * en1)) do { size_t __len0 = (size_t)(__len1); if (((__len0 > ((&(rkbu\
                                           19380 * f)->rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader)\
                                           19381 * )))) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_r\
                                           19382 * kb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset\
                                           19383 * _reader.c",1106, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkb\
                                           19384 * uf_rkb"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof\
                                                                                                                           Page  385 
  Active Usings: @REGION_1947_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           19385 * (__tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; \
                                           19386 * do { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_l\
                                           19387 * ock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_lo\
                                           19388 * gname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka\
                                           19389 * _log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_\
                                           19390 * rk, _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read b\
                                           19391 * uffer underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " \
                                           19392 * "expected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd\
                                           19393 * _kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.\
                                           19394 * ApiVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_r\
                                           19395 * eader)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1106, __\
                                           19396 * len0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkb\
                                           19397 * uf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_miti\
                                           19398 * gation : "incorrect broker.version.fallback?", __tmpstr); } while (0\
                                           19399 * ); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_par\
                                           19400 * se; } while (0); } } while (0); } while (0);
0000E55E                                   19401 @L1891   DS    0H
0000E55E B904 0026                         19402          LGR   2,6         ; __len1
0000E562 B902 00F6                         19403          LTGR  15,6
0000E566 4770 C45E               0000E574  19404          BNZ   *+14  Around region break
0000E56A E3C0 C0F2 001A          0000E208  19405          ALGF  12,@lit_region_diff_1947_6_7
                                           19406          DROP  12
                        0000EB2A           19407          USING @REGION_1947_7,12
0000E570 47F0 C14C               0000EC76  19408          B     @_done@1947@5
                                           19409          DROP  12
                        0000E116           19410          USING @REGION_1947_6,12
0000E574 41F0 4078               00000078  19411          LA    15,120(0,4)
0000E578 E3F0 D388 0024          00000388  19412          STG   15,904(0,13)
0000E57E D707 D390 D390 00000390 00000390  19413          XC    912(8,13),912(13)
0000E584 E320 D398 0024          00000398  19414          STG   2,920(0,13)
0000E58A 4110 D388               00000388  19415          LA    1,904(0,13)
0000E58E E3F0 C13A 0004          0000E250  19416          LG    15,@lit_1947_1443 ; rd_slice_read
0000E594                                   19417 @@gen_label1895 DS    0H
0000E594 05EF                              19418          BALR  14,15
0000E596                                   19419 @@gen_label1896 DS    0H
0000E596 B902 00FF                         19420          LTGR  15,15
0000E59A 4780 C492               0000E5A8  19421          BZ    *+14  Around region break
0000E59E E3C0 C0F2 001A          0000E208  19422          ALGF  12,@lit_region_diff_1947_6_7
                                           19423          DROP  12
                        0000EB2A           19424          USING @REGION_1947_7,12
0000E5A4 47F0 C14C               0000EC76  19425          B     @_done@1947@5
                                           19426          DROP  12
                        0000E116           19427          USING @REGION_1947_6,12
0000E5A8                                   19428 @L1895   DS    0H
0000E5A8 E350 4098 0004          00000098  19429          LG    5,152(0,4)  ; offset of end in rd_slice_s
0000E5AE 41F0 4078               00000078  19430          LA    15,120(0,4)
0000E5B2 E3F0 D388 0024          00000388  19431          STG   15,904(0,13)
0000E5B8 4110 D388               00000388  19432          LA    1,904(0,13)
0000E5BC E3F0 C102 0004          0000E218  19433          LG    15,@lit_1947_1424 ; rd_slice_abs_offset
0000E5C2                                   19434 @@gen_label1898 DS    0H
0000E5C2 05EF                              19435          BALR  14,15
0000E5C4                                   19436 @@gen_label1899 DS    0H
                                                                                                                           Page  386 
  Active Usings: @REGION_1947_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E5C4 B90B 005F                         19437          SLGR  5,15
0000E5C8 B921 0025                         19438          CLGR  2,5
0000E5CC 47D0 C714               0000E82A  19439          BNH   @L1898
0000E5D0                                   19440 @L1899   DS    0H
0000E5D0 1288                              19441          LTR   8,8
0000E5D2 47D0 C704               0000E81A  19442          BNH   @L1902
0000E5D6                                   19443 @L1903   DS    0H
0000E5D6 E3F0 4100 0002          00000100  19444          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E5DC 4770 C50C               0000E622  19445          BNZ   @L1906
0000E5E0 E3F0 C0EA 0004          0000E200  19446          LG    15,@lit_1947_1420
0000E5E6 4110 F2CE               000002CE  19447          LA    1,718(0,15)
0000E5EA E310 D388 0024          00000388  19448          STG   1,904(0,13)
0000E5F0 E548 D390 0452          00000390  19449          MVGHI 912(13),1106
0000E5F6 E310 C0E2 0004          0000E1F8  19450          LG    1,@lit_1947_1421
0000E5FC 4110 1258               00000258  19451          LA    1,600(0,1)
0000E600 E310 D398 0024          00000398  19452          STG   1,920(0,13)
0000E606 D707 D3A0 D3A0 000003A0 000003A0  19453          XC    928(8,13),928(13)
0000E60C 41F0 F362               00000362  19454          LA    15,866(0,15)
0000E610 E3F0 D3A8 0024          000003A8  19455          STG   15,936(0,13)
0000E616 4110 D388               00000388  19456          LA    1,904(0,13)
0000E61A E3F0 C10A 0004          0000E220  19457          LG    15,@lit_1947_1427 ; rd_kafka_crash
0000E620                                   19458 @@gen_label1903 DS    0H
0000E620 05EF                              19459          BALR  14,15
0000E622                                   19460 @@gen_label1904 DS    0H
0000E622                                   19461 @L1906   DS    0H
0000E622 41F0 D160               00000160  19462          LA    15,352(0,13)
0000E626 E3F0 D388 0024          00000388  19463          STG   15,904(0,13)
0000E62C E548 D390 0100          00000390  19464          MVGHI 912(13),256
0000E632 E3F0 C0EA 0004          0000E200  19465          LG    15,@lit_1947_1420
0000E638 41F0 F37C               0000037C  19466          LA    15,892(0,15)
0000E63C E3F0 D398 0024          00000398  19467          STG   15,920(0,13)
0000E642 4110 D388               00000388  19468          LA    1,904(0,13)
0000E646 E3F0 C112 0004          0000E228  19469          LG    15,@lit_1947_1429 ; snprintf
0000E64C                                   19470 @@gen_label1905 DS    0H
0000E64C 05EF                              19471          BALR  14,15
0000E64E                                   19472 @@gen_label1906 DS    0H
0000E64E 41F0 D160               00000160  19473          LA    15,352(0,13)
0000E652 B904 001F                         19474          LGR   1,15
0000E656 A709 0000               00000000  19475          LGHI  0,0
0000E65A                                   19476 @@gen_label1907 DS 0H
0000E65A B25E 000F                         19477          SRST  0,15
0000E65E 4710 C544               0000E65A  19478          BC  1,@@gen_label1907
0000E662 B90B 0001                         19479          SLGR  0,1
0000E666 A70F 0002               00000002  19480          CGHI  0,2
0000E66A 4770 C55C               0000E672  19481          BNE   @L1908
0000E66E 9200 D160      00000160 00000000  19482          MVI   352(13),0
0000E672                                   19483 @L1907   DS    0H
0000E672                                   19484 @L1908   DS    0H
0000E672 E3F0 4100 0004          00000100  19485          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E678 A759 1638               00001638  19486          LGHI  5,5688      ; 5688
0000E67C 41F5 F000               00000000  19487          LA    15,0(5,15)
0000E680 E3F0 D388 0024          00000388  19488          STG   15,904(0,13)
                                                                                                                           Page  387 
  Active Usings: @REGION_1947_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E686 4110 D388               00000388  19489          LA    1,904(0,13)
0000E68A E3F0 C11A 0004          0000E230  19490          LG    15,@lit_1947_1431 ; mtx_lock
0000E690                                   19491 @@gen_label1909 DS    0H
0000E690 05EF                              19492          BALR  14,15
0000E692                                   19493 @@gen_label1910 DS    0H
0000E692 41F0 D260               00000260  19494          LA    15,608(0,13)
0000E696 E3F0 D388 0024          00000388  19495          STG   15,904(0,13)
0000E69C E3F0 4100 0004          00000100  19496          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E6A2 A719 1630               00001630  19497          LGHI  1,5680      ; 5680
0000E6A6 E3F1 F000 0004          00000000  19498          LG    15,0(1,15)
0000E6AC E3F0 D390 0024          00000390  19499          STG   15,912(0,13)
0000E6B2 E548 D398 0100          00000398  19500          MVGHI 920(13),256
0000E6B8 4110 D388               00000388  19501          LA    1,904(0,13)
0000E6BC E3F0 C122 0004          0000E238  19502          LG    15,@lit_1947_1433 ; rd_strlcpy
0000E6C2                                   19503 @@gen_label1911 DS    0H
0000E6C2 05EF                              19504          BALR  14,15
0000E6C4                                   19505 @@gen_label1912 DS    0H
0000E6C4 E3F0 4100 0004          00000100  19506          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E6CA 41F5 F000               00000000  19507          LA    15,0(5,15)
0000E6CE E3F0 D388 0024          00000388  19508          STG   15,904(0,13)
0000E6D4 4110 D388               00000388  19509          LA    1,904(0,13)
0000E6D8 E3F0 C12A 0004          0000E240  19510          LG    15,@lit_1947_1435 ; mtx_unlock
0000E6DE                                   19511 @@gen_label1913 DS    0H
0000E6DE 05EF                              19512          BALR  14,15
0000E6E0                                   19513 @@gen_label1914 DS    0H
0000E6E0 E3F0 40B8 0015          000000B8  19514          LGH   15,184(0,4)
0000E6E6 E3F0 D388 0024          00000388  19515          STG   15,904(0,13)
0000E6EC 4110 D388               00000388  19516          LA    1,904(0,13)
0000E6F0 E3F0 C132 0004          0000E248  19517          LG    15,@lit_1947_1436 ; rd_kafka_ApiKey2str
0000E6F6                                   19518 @@gen_label1915 DS    0H
0000E6F6 05EF                              19519          BALR  14,15
0000E6F8                                   19520 @@gen_label1916 DS    0H
0000E6F8 B904 005F                         19521          LGR   5,15
0000E6FC 41F0 4078               00000078  19522          LA    15,120(0,4)
0000E700 E3F0 D388 0024          00000388  19523          STG   15,904(0,13)
0000E706 4110 D388               00000388  19524          LA    1,904(0,13)
0000E70A E3F0 C0FA 0004          0000E210  19525          LG    15,@lit_1947_1423 ; rd_slice_offset
0000E710                                   19526 @@gen_label1917 DS    0H
0000E710 05EF                              19527          BALR  14,15
0000E712                                   19528 @@gen_label1918 DS    0H
0000E712 B904 006F                         19529          LGR   6,15
0000E716 E370 4098 0004          00000098  19530          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000E71C 41F0 4078               00000078  19531          LA    15,120(0,4)
0000E720 E3F0 D388 0024          00000388  19532          STG   15,904(0,13)
0000E726 4110 D388               00000388  19533          LA    1,904(0,13)
0000E72A E3F0 C102 0004          0000E218  19534          LG    15,@lit_1947_1424 ; rd_slice_abs_offset
0000E730                                   19535 @@gen_label1919 DS    0H
0000E730 05EF                              19536          BALR  14,15
0000E732                                   19537 @@gen_label1920 DS    0H
0000E732 B90B 007F                         19538          SLGR  7,15
0000E736 E3F0 41E8 0002          000001E8  19539          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
                                                                                                                           Page  388 
  Active Usings: @REGION_1947_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E73C 4780 C634               0000E74A  19540          BZ    @L1911
0000E740 E3F0 41E8 0004          000001E8  19541          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000E746 47F0 C63E               0000E754  19542          B     @L1912
0000E74A                                   19543 @L1911   DS    0H
0000E74A E3F0 C0EA 0004          0000E200  19544          LG    15,@lit_1947_1420
0000E750 41F0 F380               00000380  19545          LA    15,896(0,15)
0000E754                                   19546 @L1912   DS    0H
0000E754 E310 4100 0004          00000100  19547          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E75A E310 1FD0 0004          00000FD0  19548          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000E760 4110 1210               00000210  19549          LA    1,528(0,1)
0000E764 E310 D388 0024          00000388  19550          STG   1,904(0,13)
0000E76A E310 4100 0004          00000100  19551          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E770 E310 1FD0 0004          00000FD0  19552          LG    1,4048(0,1)
0000E776 E310 D390 0024          00000390  19553          STG   1,912(0,13)
0000E77C 4110 D260               00000260  19554          LA    1,608(0,13)
0000E780 E310 D398 0024          00000398  19555          STG   1,920(0,13)
0000E786 B914 0018                         19556          LGFR  1,8
0000E78A E310 D3A0 0024          000003A0  19557          STG   1,928(0,13)
0000E790 D707 D3A8 D3A8 000003A8 000003A8  19558          XC    936(8,13),936(13)
0000E796 E310 C0EA 0004          0000E200  19559          LG    1,@lit_1947_1420
0000E79C 4180 13A4               000003A4  19560          LA    8,932(0,1)
0000E7A0 E380 D3B0 0024          000003B0  19561          STG   8,944(0,13)
0000E7A6 4110 13B0               000003B0  19562          LA    1,944(0,1)
0000E7AA E310 D3B8 0024          000003B8  19563          STG   1,952(0,13)
0000E7B0 E350 D3C0 0024          000003C0  19564          STG   5,960(0,13)
0000E7B6 4810 40BA               000000BA  19565          LH    1,186(0,4)
0000E7BA B914 0011                         19566          LGFR  1,1
0000E7BE E310 D3C8 0024          000003C8  19567          STG   1,968(0,13)
0000E7C4 E360 D3D0 0024          000003D0  19568          STG   6,976(0,13)
0000E7CA E310 4098 0004          00000098  19569          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000E7D0 E310 4090 000B          00000090  19570          SLG   1,144(0,4)
0000E7D6 E310 D3D8 0024          000003D8  19571          STG   1,984(0,13)
0000E7DC E310 C0E2 0004          0000E1F8  19572          LG    1,@lit_1947_1421
0000E7E2 4110 1258               00000258  19573          LA    1,600(0,1)
0000E7E6 E310 D3E0 0024          000003E0  19574          STG   1,992(0,13)
0000E7EC E548 D3E8 0452          000003E8  19575          MVGHI 1000(13),1106
0000E7F2 E320 D3F0 0024          000003F0  19576          STG   2,1008(0,13)
0000E7F8 E370 D3F8 0024          000003F8  19577          STG   7,1016(0,13)
0000E7FE E3F0 D400 0024          00000400  19578          STG   15,1024(0,13)
0000E804 41F0 D160               00000160  19579          LA    15,352(0,13)
0000E808 E3F0 D408 0024          00000408  19580          STG   15,1032(0,13)
0000E80E 4110 D388               00000388  19581          LA    1,904(0,13)
0000E812 E3F0 C0DA 0004          0000E1F0  19582          LG    15,@lit_1947_1422 ; rd_kafka_log0
0000E818                                   19583 @@gen_label1922 DS    0H
0000E818 05EF                              19584          BALR  14,15
0000E81A                                   19585 @@gen_label1923 DS    0H
0000E81A                                   19586 @L1902   DS    0H
0000E81A E54C 4188 FF65          00000188  19587          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000E820 E3C0 C0F2 001A          0000E208  19588          ALGF  12,@lit_region_diff_1947_6_7
                                           19589          DROP  12
                        0000EB2A           19590          USING @REGION_1947_7,12
                                                                                                                           Page  389 
  Active Usings: @REGION_1947_7,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E826 47F0 C164               0000EC8E  19591          B     @_err_parse@1947@4
                                           19592          DROP  12
                        0000E116           19593          USING @REGION_1947_6,12
0000E82A                                   19594 @L1898   DS    0H
0000E82A                                   19595 @L1894   DS    0H
                                           19596 * ***                   goto done;
0000E82A E3C0 C0F2 001A          0000E208  19597          ALGF  12,@lit_region_diff_1947_6_7
                                           19598          DROP  12
                        0000EB2A           19599          USING @REGION_1947_7,12
0000E830 47F0 C14C               0000EC76  19600          B     @_done@1947@5
                                           19601          DROP  12
                        0000E116           19602          USING @REGION_1947_6,12
                                           19603 * ***           }
0000E834                                   19604 @L1890   DS    0H
                                           19605 * ***
                                           19606 * ***           if (hdr.Attributes & (1 << 5))
0000E834 48F0 D108               00000108  19607          LH    15,264(0,13)
0000E838 A7F1 0020               00000020  19608          TML   15,32
0000E83C 4780 C736               0000E84C  19609          BZ    @L1913
                                           19610 * ***                   msetr->msetr_ctrl_cnt++;
0000E840 58F0 3128               00000128  19611          L     15,296(0,3)
0000E844 A7FA 0001               00000001  19612          AHI   15,1
0000E848 50F0 3128               00000128  19613          ST    15,296(0,3)
0000E84C                                   19614 @L1913   DS    0H
                                           19615 * ***
                                           19616 * ***           msetr->msetr_v2_hdr = &hdr;
0000E84C 41F0 D0F0               000000F0  19617          LA    15,240(0,13)
0000E850 E3F0 3028 0024          00000028  19618          STG   15,40(0,3)  ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
                                           19619 * ***
                                           19620 * ***
                                           19621 * ***           if (hdr.Attributes & 0x7) {
0000E856 48F0 D108               00000108  19622          LH    15,264(0,13)
0000E85A A7F1 0007               00000007  19623          TML   15,7
0000E85E 4780 C814               0000E92A  19624          BZ    @L1914
                                           19625 * ***                   const void *compressed;
                                           19626 * ***
                                           19627 * ***                   compressed = rd_slice_ensure_contig(&rkbuf->rk\
                                           19628 * buf_reader,
                                           19629 * ***                                                       payload_si\
                                           19630 * ze);
0000E862 41F0 4078               00000078  19631          LA    15,120(0,4)
0000E866 E3F0 D388 0024          00000388  19632          STG   15,904(0,13)
0000E86C E360 D390 0024          00000390  19633          STG   6,912(0,13)
0000E872 4110 D388               00000388  19634          LA    1,904(0,13)
0000E876 E3F0 C142 0004          0000E258  19635          LG    15,@lit_1947_1463 ; rd_slice_ensure_contig
0000E87C                                   19636 @@gen_label1926 DS    0H
0000E87C 05EF                              19637          BALR  14,15
0000E87E                                   19638 @@gen_label1927 DS    0H
0000E87E B904 002F                         19639          LGR   2,15
                                           19640 * ***                   ((compressed) ? (void)0 : __assert(__func__, "\
                                           19641 * C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c", 1121, "comp\
                                                                                                                           Page  390 
  Active Usings: @REGION_1947_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           19642 * ressed"));
0000E882 B902 00F2                         19643          LTGR  15,2
0000E886 4770 C7B0               0000E8C6  19644          BNZ   @L1916
0000E88A                                   19645 @L1915   DS    0H
0000E88A E3F0 C0E2 0004          0000E1F8  19646          LG    15,@lit_1947_1421
0000E890 41F0 F258               00000258  19647          LA    15,600(0,15)
0000E894 E3F0 D388 0024          00000388  19648          STG   15,904(0,13)
0000E89A E3F0 C0EA 0004          0000E200  19649          LG    15,@lit_1947_1420
0000E8A0 4110 F2CE               000002CE  19650          LA    1,718(0,15)
0000E8A4 E310 D390 0024          00000390  19651          STG   1,912(0,13)
0000E8AA E548 D398 0461          00000398  19652          MVGHI 920(13),1121
0000E8B0 41F0 F8B2               000008B2  19653          LA    15,2226(0,15)
0000E8B4 E3F0 D3A0 0024          000003A0  19654          STG   15,928(0,13)
0000E8BA 4110 D388               00000388  19655          LA    1,904(0,13)
0000E8BE E3F0 C14A 0004          0000E260  19656          LG    15,@lit_1947_1466 ; __assert
0000E8C4                                   19657 @@gen_label1929 DS    0H
0000E8C4 05EF                              19658          BALR  14,15
0000E8C6                                   19659 @@gen_label1930 DS    0H
0000E8C6                                   19660 @L1916   DS    0H
                                           19661 * ***
                                           19662 * ***                   err = rd_kafka_msgset_reader_decompress(
                                           19663 * ***                           msetr, 2, hdr.Attributes,
                                           19664 * ***                           hdr.BaseTimestamp, hdr.BaseOffset,
                                           19665 * ***                           compressed, payload_size);
0000E8C6 E330 D388 0024          00000388  19666          STG   3,904(0,13)
0000E8CC E548 D390 0002          00000390  19667          MVGHI 912(13),2
0000E8D2 48F0 D108               00000108  19668          LH    15,264(0,13)
0000E8D6 B914 00FF                         19669          LGFR  15,15
0000E8DA E3F0 D398 0024          00000398  19670          STG   15,920(0,13)
0000E8E0 E3F0 D110 0004          00000110  19671          LG    15,272(0,13)
0000E8E6 E3F0 D3A0 0024          000003A0  19672          STG   15,928(0,13)
0000E8EC E3F0 D0F0 0004          000000F0  19673          LG    15,240(0,13)
0000E8F2 E3F0 D3A8 0024          000003A8  19674          STG   15,936(0,13)
0000E8F8 E320 D3B0 0024          000003B0  19675          STG   2,944(0,13)
0000E8FE E360 D3B8 0024          000003B8  19676          STG   6,952(0,13)
0000E904 4110 D388               00000388  19677          LA    1,904(0,13)
0000E908 E3F0 C152 0004          0000E268  19678          LG    15,@lit_1947_1467 ; rd_kafka_msgset_reader_decompress
0000E90E                                   19679 @@gen_label1931 DS    0H
0000E90E 05EF                              19680          BALR  14,15
0000E910                                   19681 @@gen_label1932 DS    0H
0000E910 122F                              19682          LTR   2,15        ; err
                                           19683 * ***                   if (err)
0000E912 4770 C80A               0000E920  19684          BNZ   *+14  Around region break
0000E916 E3C0 C0F2 001A          0000E208  19685          ALGF  12,@lit_region_diff_1947_6_7
                                           19686          DROP  12
                        0000EB2A           19687          USING @REGION_1947_7,12
0000E91C 47F0 C14C               0000EC76  19688          B     @_done@1947@5
                                           19689          DROP  12
                        0000E116           19690          USING @REGION_1947_6,12
                                           19691 * ***                           goto err;
0000E920 E3C0 C0F2 001A          0000E208  19692          ALGF  12,@lit_region_diff_1947_6_7
                                           19693          DROP  12
                                                                                                                           Page  391 
  Active Usings: @REGION_1947_7,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        0000EB2A           19694          USING @REGION_1947_7,12
0000E926 47F0 C18A               0000ECB4  19695          B     @_err@1947@6
                                           19696          DROP  12
                        0000E116           19697          USING @REGION_1947_6,12
0000E92A                                   19698 @L1917   DS    0H
                                           19699 * ***
                                           19700 * ***           } else {
0000E92A                                   19701 @L1914   DS    0H
                                           19702 * ***
                                           19703 * ***
                                           19704 * ***
                                           19705 * ***
                                           19706 * ***
                                           19707 * ***                   if (!rd_slice_narrow_relative(&rkbuf->rkbuf_re\
                                           19708 * ader,
                                           19709 * ***                                                 &save_slice, pay\
                                           19710 * load_size))
0000E92A 41F0 4078               00000078  19711          LA    15,120(0,4)
0000E92E E3F0 D388 0024          00000388  19712          STG   15,904(0,13)
0000E934 41F0 D138               00000138  19713          LA    15,312(0,13)
0000E938 E3F0 D390 0024          00000390  19714          STG   15,912(0,13)
0000E93E E360 D398 0024          00000398  19715          STG   6,920(0,13)
0000E944 4110 D388               00000388  19716          LA    1,904(0,13)
0000E948 E3F0 C15A 0004          0000E270  19717          LG    15,@lit_1947_1468 ; rd_slice_narrow_relative
0000E94E                                   19718 @@gen_label1934 DS    0H
0000E94E 05EF                              19719          BALR  14,15
0000E950                                   19720 @@gen_label1935 DS    0H
0000E950 12FF                              19721          LTR   15,15
0000E952 4780 C84A               0000E960  19722          BZ    *+14  Around region break
0000E956 E3C0 C0F2 001A          0000E208  19723          ALGF  12,@lit_region_diff_1947_6_7
                                           19724          DROP  12
                        0000EB2A           19725          USING @REGION_1947_7,12
0000E95C 47F0 C10E               0000EC38  19726          B     @L1919
                                           19727          DROP  12
                        0000E116           19728          USING @REGION_1947_6,12
                                           19729 * ***                           do { size_t __len0 = (size_t)(payload_\
                                           19730 * size); if (((__len0 > ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_\
                                           19731 * offset(&(rkbuf)->rkbuf_reader))))) { do { if (log_decode_errors > 0)\
                                           19732 *  { do { if (((!(rkbuf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\l\
                                           19733 * ibrdkafka\\src\\rdkafka_msgset_reader.c",1138, __FUNCTION__, (((void\
                                           19734 *  *)0)), "assert: " "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[2\
                                           19735 * 56]; snprintf(__tmpstr, sizeof(__tmpstr), ": "); if (__strlen(__tmps\
                                           19736 * tr) == 2) __tmpstr[0] = '\0'; do { char _logname[256]; mtx_lock(&(rk\
                                           19737 * buf->rkbuf_rkb)->rkb_logname_lock); rd_strlcpy(_logname, rkbuf->rkbu\
                                           19738 * f_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(rkbuf->rkbuf_rkb\
                                           19739 * )->rkb_logname_lock); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_\
                                           19740 * conf, (rkbuf->rkbuf_rkb)->rkb_rk, _logname, log_decode_errors, 0x0, \
                                           19741 * "PROTOUFLOW", "Protocol read buffer underflow " "for %s v%hd " "at %\
                                           19742 * " "zu" "/%" "zu" " (%s:%i): " "expected %" "zu" " bytes > " "%" "zu"\
                                           19743 *  " remaining bytes (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr.\
                                           19744 *  ApiKey), rkbuf->rkbuf_reqhdr.ApiVersion, rd_slice_offset(&rkbuf->rk\
                                           19745 * buf_reader), ((&rkbuf->rkbuf_reader)->end - (&rkbuf->rkbuf_reader)->\
                                                                                                                           Page  392 
  Active Usings: @REGION_1947_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           19746 * start), __FUNCTION__, 1138, __len0, ((&rkbuf->rkbuf_reader)->end - r\
                                           19747 * d_slice_abs_offset(&rkbuf->rkbuf_reader)), rkbuf->rkbuf_uflow_mitiga\
                                           19748 * tion ? rkbuf->rkbuf_uflow_mitigation : "incorrect broker.version.fal\
                                           19749 * lback?", __tmpstr); } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RES\
                                           19750 * P_ERR__UNDERFLOW; goto err_parse; } while (0); } } while (0);
0000E960                                   19751 @L1920   DS    0H
0000E960 B904 0026                         19752          LGR   2,6         ; __len0
0000E964 E350 4098 0004          00000098  19753          LG    5,152(0,4)  ; offset of end in rd_slice_s
0000E96A 41F0 4078               00000078  19754          LA    15,120(0,4)
0000E96E E3F0 D388 0024          00000388  19755          STG   15,904(0,13)
0000E974 4110 D388               00000388  19756          LA    1,904(0,13)
0000E978 E3F0 C102 0004          0000E218  19757          LG    15,@lit_1947_1424 ; rd_slice_abs_offset
0000E97E                                   19758 @@gen_label1937 DS    0H
0000E97E 05EF                              19759          BALR  14,15
0000E980                                   19760 @@gen_label1938 DS    0H
0000E980 B90B 005F                         19761          SLGR  5,15
0000E984 B921 0065                         19762          CLGR  6,5
0000E988 4720 C880               0000E996  19763          BH    *+14  Around region break
0000E98C E3C0 C0F2 001A          0000E208  19764          ALGF  12,@lit_region_diff_1947_6_7
                                           19765          DROP  12
                        0000EB2A           19766          USING @REGION_1947_7,12
0000E992 47F0 C10E               0000EC38  19767          B     @L1923
                                           19768          DROP  12
                        0000E116           19769          USING @REGION_1947_6,12
0000E996                                   19770 @L1924   DS    0H
0000E996 1288                              19771          LTR   8,8
0000E998 4720 C890               0000E9A6  19772          BH    *+14  Around region break
0000E99C E3C0 C0F2 001A          0000E208  19773          ALGF  12,@lit_region_diff_1947_6_7
                                           19774          DROP  12
                        0000EB2A           19775          USING @REGION_1947_7,12
0000E9A2 47F0 C0D0               0000EBFA  19776          B     @L1927
                                           19777          DROP  12
                        0000E116           19778          USING @REGION_1947_6,12
0000E9A6                                   19779 @L1928   DS    0H
0000E9A6 E3F0 4100 0002          00000100  19780          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000E9AC 4770 C8DC               0000E9F2  19781          BNZ   @L1931
0000E9B0 E3F0 C0EA 0004          0000E200  19782          LG    15,@lit_1947_1420
0000E9B6 4110 F2CE               000002CE  19783          LA    1,718(0,15)
0000E9BA E310 D388 0024          00000388  19784          STG   1,904(0,13)
0000E9C0 E548 D390 0472          00000390  19785          MVGHI 912(13),1138
0000E9C6 E310 C0E2 0004          0000E1F8  19786          LG    1,@lit_1947_1421
0000E9CC 4110 1258               00000258  19787          LA    1,600(0,1)
0000E9D0 E310 D398 0024          00000398  19788          STG   1,920(0,13)
0000E9D6 D707 D3A0 D3A0 000003A0 000003A0  19789          XC    928(8,13),928(13)
0000E9DC 41F0 F362               00000362  19790          LA    15,866(0,15)
0000E9E0 E3F0 D3A8 0024          000003A8  19791          STG   15,936(0,13)
0000E9E6 4110 D388               00000388  19792          LA    1,904(0,13)
0000E9EA E3F0 C10A 0004          0000E220  19793          LG    15,@lit_1947_1427 ; rd_kafka_crash
0000E9F0                                   19794 @@gen_label1942 DS    0H
0000E9F0 05EF                              19795          BALR  14,15
0000E9F2                                   19796 @@gen_label1943 DS    0H
0000E9F2                                   19797 @L1931   DS    0H
                                                                                                                           Page  393 
  Active Usings: @REGION_1947_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E9F2 41F0 D160               00000160  19798          LA    15,352(0,13)
0000E9F6 E3F0 D388 0024          00000388  19799          STG   15,904(0,13)
0000E9FC E548 D390 0100          00000390  19800          MVGHI 912(13),256
0000EA02 E3F0 C0EA 0004          0000E200  19801          LG    15,@lit_1947_1420
0000EA08 41F0 F37C               0000037C  19802          LA    15,892(0,15)
0000EA0C E3F0 D398 0024          00000398  19803          STG   15,920(0,13)
0000EA12 4110 D388               00000388  19804          LA    1,904(0,13)
0000EA16 E3F0 C112 0004          0000E228  19805          LG    15,@lit_1947_1429 ; snprintf
0000EA1C                                   19806 @@gen_label1944 DS    0H
0000EA1C 05EF                              19807          BALR  14,15
0000EA1E                                   19808 @@gen_label1945 DS    0H
0000EA1E 41F0 D160               00000160  19809          LA    15,352(0,13)
0000EA22 B904 001F                         19810          LGR   1,15
0000EA26 A709 0000               00000000  19811          LGHI  0,0
0000EA2A                                   19812 @@gen_label1946 DS 0H
0000EA2A B25E 000F                         19813          SRST  0,15
0000EA2E 4710 C914               0000EA2A  19814          BC  1,@@gen_label1946
0000EA32 B90B 0001                         19815          SLGR  0,1
0000EA36 A70F 0002               00000002  19816          CGHI  0,2
0000EA3A 4770 C92C               0000EA42  19817          BNE   @L1933
0000EA3E 9200 D160      00000160 00000000  19818          MVI   352(13),0
0000EA42                                   19819 @L1932   DS    0H
0000EA42                                   19820 @L1933   DS    0H
0000EA42 E3F0 4100 0004          00000100  19821          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000EA48 A759 1638               00001638  19822          LGHI  5,5688      ; 5688
0000EA4C 41F5 F000               00000000  19823          LA    15,0(5,15)
0000EA50 E3F0 D388 0024          00000388  19824          STG   15,904(0,13)
0000EA56 4110 D388               00000388  19825          LA    1,904(0,13)
0000EA5A E3F0 C11A 0004          0000E230  19826          LG    15,@lit_1947_1431 ; mtx_lock
0000EA60                                   19827 @@gen_label1948 DS    0H
0000EA60 05EF                              19828          BALR  14,15
0000EA62                                   19829 @@gen_label1949 DS    0H
0000EA62 41F0 D260               00000260  19830          LA    15,608(0,13)
0000EA66 E3F0 D388 0024          00000388  19831          STG   15,904(0,13)
0000EA6C E3F0 4100 0004          00000100  19832          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000EA72 A719 1630               00001630  19833          LGHI  1,5680      ; 5680
0000EA76 E3F1 F000 0004          00000000  19834          LG    15,0(1,15)
0000EA7C E3F0 D390 0024          00000390  19835          STG   15,912(0,13)
0000EA82 E548 D398 0100          00000398  19836          MVGHI 920(13),256
0000EA88 4110 D388               00000388  19837          LA    1,904(0,13)
0000EA8C E3F0 C122 0004          0000E238  19838          LG    15,@lit_1947_1433 ; rd_strlcpy
0000EA92                                   19839 @@gen_label1950 DS    0H
0000EA92 05EF                              19840          BALR  14,15
0000EA94                                   19841 @@gen_label1951 DS    0H
0000EA94 E3F0 4100 0004          00000100  19842          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000EA9A 41F5 F000               00000000  19843          LA    15,0(5,15)
0000EA9E E3F0 D388 0024          00000388  19844          STG   15,904(0,13)
0000EAA4 4110 D388               00000388  19845          LA    1,904(0,13)
0000EAA8 E3F0 C12A 0004          0000E240  19846          LG    15,@lit_1947_1435 ; mtx_unlock
0000EAAE                                   19847 @@gen_label1952 DS    0H
0000EAAE 05EF                              19848          BALR  14,15
0000EAB0                                   19849 @@gen_label1953 DS    0H
                                                                                                                           Page  394 
  Active Usings: @REGION_1947_6,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000EAB0 E3F0 40B8 0015          000000B8  19850          LGH   15,184(0,4)
0000EAB6 E3F0 D388 0024          00000388  19851          STG   15,904(0,13)
0000EABC 4110 D388               00000388  19852          LA    1,904(0,13)
0000EAC0 E3F0 C132 0004          0000E248  19853          LG    15,@lit_1947_1436 ; rd_kafka_ApiKey2str
0000EAC6                                   19854 @@gen_label1954 DS    0H
0000EAC6 05EF                              19855          BALR  14,15
0000EAC8                                   19856 @@gen_label1955 DS    0H
0000EAC8 B904 005F                         19857          LGR   5,15
0000EACC 41F0 4078               00000078  19858          LA    15,120(0,4)
0000EAD0 E3F0 D388 0024          00000388  19859          STG   15,904(0,13)
0000EAD6 4110 D388               00000388  19860          LA    1,904(0,13)
0000EADA E3F0 C0FA 0004          0000E210  19861          LG    15,@lit_1947_1423 ; rd_slice_offset
0000EAE0                                   19862 @@gen_label1956 DS    0H
0000EAE0 05EF                              19863          BALR  14,15
0000EAE2                                   19864 @@gen_label1957 DS    0H
0000EAE2 B904 006F                         19865          LGR   6,15
0000EAE6 E370 4098 0004          00000098  19866          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000EAEC 41F0 4078               00000078  19867          LA    15,120(0,4)
0000EAF0 E3F0 D388 0024          00000388  19868          STG   15,904(0,13)
0000EAF6 4110 D388               00000388  19869          LA    1,904(0,13)
0000EAFA E3F0 C102 0004          0000E218  19870          LG    15,@lit_1947_1424 ; rd_slice_abs_offset
0000EB00                                   19871 @@gen_label1958 DS    0H
0000EB00 05EF                              19872          BALR  14,15
0000EB02                                   19873 @@gen_label1959 DS    0H
0000EB02 B90B 007F                         19874          SLGR  7,15
0000EB06 E3F0 41E8 0002          000001E8  19875          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000EB0C 4770 CA04               0000EB1A  19876          BNZ   *+14  Around region break
0000EB10 E3C0 C0F2 001A          0000E208  19877          ALGF  12,@lit_region_diff_1947_6_7
                                           19878          DROP  12
                        0000EB2A           19879          USING @REGION_1947_7,12
0000EB16 47F0 C000               0000EB2A  19880          B     @L1936
                                           19881          DROP  12
                        0000E116           19882          USING @REGION_1947_6,12
0000EB1A E3F0 41E8 0004          000001E8  19883          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000EB20 E3C0 C0F2 001A          0000E208  19884          ALGF  12,@lit_region_diff_1947_6_7
                                           19885          DROP  12
                        0000EB2A           19886          USING @REGION_1947_7,12
0000EB26 47F0 C00A               0000EB34  19887          B     @L1937
                                           19888          DROP  12
                        0000E116           19889          USING @REGION_1947_6,12
0000EB2A                                   19890 @REGION_1947_7 DS 0H
                                           19891          DROP  12
                        0000EB2A           19892          USING @REGION_1947_7,12
0000EB2A                                   19893 @L1936   DS    0H
0000EB2A E3F0 C0DE 0004          0000EC08  19894          LG    15,@lit_1947_1484
0000EB30 41F0 F380               00000380  19895          LA    15,896(0,15)
0000EB34                                   19896 @L1937   DS    0H
0000EB34 E310 4100 0004          00000100  19897          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000EB3A E310 1FD0 0004          00000FD0  19898          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000EB40 4110 1210               00000210  19899          LA    1,528(0,1)
                                                                                                                           Page  395 
  Active Usings: @REGION_1947_7,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000EB44 E310 D388 0024          00000388  19900          STG   1,904(0,13)
0000EB4A E310 4100 0004          00000100  19901          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000EB50 E310 1FD0 0004          00000FD0  19902          LG    1,4048(0,1)
0000EB56 E310 D390 0024          00000390  19903          STG   1,912(0,13)
0000EB5C 4110 D260               00000260  19904          LA    1,608(0,13)
0000EB60 E310 D398 0024          00000398  19905          STG   1,920(0,13)
0000EB66 B914 0018                         19906          LGFR  1,8
0000EB6A E310 D3A0 0024          000003A0  19907          STG   1,928(0,13)
0000EB70 D707 D3A8 D3A8 000003A8 000003A8  19908          XC    936(8,13),936(13)
0000EB76 E310 C0DE 0004          0000EC08  19909          LG    1,@lit_1947_1484
0000EB7C 4180 13A4               000003A4  19910          LA    8,932(0,1)
0000EB80 E380 D3B0 0024          000003B0  19911          STG   8,944(0,13)
0000EB86 4110 13B0               000003B0  19912          LA    1,944(0,1)
0000EB8A E310 D3B8 0024          000003B8  19913          STG   1,952(0,13)
0000EB90 E350 D3C0 0024          000003C0  19914          STG   5,960(0,13)
0000EB96 4810 40BA               000000BA  19915          LH    1,186(0,4)
0000EB9A B914 0011                         19916          LGFR  1,1
0000EB9E E310 D3C8 0024          000003C8  19917          STG   1,968(0,13)
0000EBA4 E360 D3D0 0024          000003D0  19918          STG   6,976(0,13)
0000EBAA E310 4098 0004          00000098  19919          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000EBB0 E310 4090 000B          00000090  19920          SLG   1,144(0,4)
0000EBB6 E310 D3D8 0024          000003D8  19921          STG   1,984(0,13)
0000EBBC E310 C0EE 0004          0000EC18  19922          LG    1,@lit_1947_1486
0000EBC2 4110 1258               00000258  19923          LA    1,600(0,1)
0000EBC6 E310 D3E0 0024          000003E0  19924          STG   1,992(0,13)
0000EBCC E548 D3E8 0472          000003E8  19925          MVGHI 1000(13),1138
0000EBD2 E320 D3F0 0024          000003F0  19926          STG   2,1008(0,13)
0000EBD8 E370 D3F8 0024          000003F8  19927          STG   7,1016(0,13)
0000EBDE E3F0 D400 0024          00000400  19928          STG   15,1024(0,13)
0000EBE4 41F0 D160               00000160  19929          LA    15,352(0,13)
0000EBE8 E3F0 D408 0024          00000408  19930          STG   15,1032(0,13)
0000EBEE 4110 D388               00000388  19931          LA    1,904(0,13)
0000EBF2 E3F0 C0E6 0004          0000EC10  19932          LG    15,@lit_1947_1487 ; rd_kafka_log0
0000EBF8                                   19933 @@gen_label1961 DS    0H
0000EBF8 05EF                              19934          BALR  14,15
0000EBFA                                   19935 @@gen_label1962 DS    0H
0000EBFA                                   19936 @L1927   DS    0H
0000EBFA E54C 4188 FF65          00000188  19937          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000EC00 47F0 C164               0000EC8E  19938          B     @_err_parse@1947@4
0000EC08                                   19939          DS    0D
0000EC08 0000000000012AB8                  19940 @lit_1947_1484 DC AD(@strings@)
0000EC10 0000000000000000                  19941 @lit_1947_1487 DC AD(rd_kafka_log0)
0000EC18 0000000000012808                  19942 @lit_1947_1486 DC AD(@DATA)
0000EC20 000000000000AA30                  19943 @lit_1947_1488 DC AD(rd_kafka_msgset_reader_msgs_v2)
0000EC28 0000000000000000                  19944 @lit_1947_1489 DC AD(rd_slice_widen)
0000EC30 00000000000002F0                  19945 @lit_1947_1492 DC AD(rd_atomic64_add)
0000EC38                                   19946 @L1923   DS    0H
                                           19947 * ***
                                           19948 * ***
                                           19949 * ***                   err = rd_kafka_msgset_reader_msgs_v2(msetr);
0000EC38                                   19950 @L1919   DS    0H
0000EC38 E330 D388 0024          00000388  19951          STG   3,904(0,13)
                                                                                                                           Page  396 
  Active Usings: @REGION_1947_7,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000EC3E 4110 D388               00000388  19952          LA    1,904(0,13)
0000EC42 E3F0 C0F6 0004          0000EC20  19953          LG    15,@lit_1947_1488 ; rd_kafka_msgset_reader_msgs_v2
0000EC48                                   19954 @@gen_label1963 DS    0H
0000EC48 05EF                              19955          BALR  14,15
0000EC4A                                   19956 @@gen_label1964 DS    0H
0000EC4A 182F                              19957          LR    2,15        ; err
                                           19958 * ***
                                           19959 * ***
                                           19960 * ***                   rd_slice_widen(&rkbuf->rkbuf_reader, &save_sli\
                                           19961 * ce);
0000EC4C 41F0 4078               00000078  19962          LA    15,120(0,4)
0000EC50 E3F0 D388 0024          00000388  19963          STG   15,904(0,13)
0000EC56 41F0 D138               00000138  19964          LA    15,312(0,13)
0000EC5A E3F0 D390 0024          00000390  19965          STG   15,912(0,13)
0000EC60 4110 D388               00000388  19966          LA    1,904(0,13)
0000EC64 E3F0 C0FE 0004          0000EC28  19967          LG    15,@lit_1947_1489 ; rd_slice_widen
0000EC6A                                   19968 @@gen_label1965 DS    0H
0000EC6A 05EF                              19969          BALR  14,15
0000EC6C                                   19970 @@gen_label1966 DS    0H
                                           19971 * ***
                                           19972 * ***                   if (((err)))
0000EC6C 1222                              19973          LTR   2,2
0000EC6E 4780 C14C               0000EC76  19974          BZ    @_done@1947@5
                                           19975 * ***                           goto err;
0000EC72 47F0 C18A               0000ECB4  19976          B     @_err@1947@6
                                           19977 * ***           }
                                           19978 * ***
                                           19979 * ***
                                           19980 * ***    done:
                                           19981 * ***
                                           19982 * ***
                                           19983 * ***
                                           19984 * ***
                                           19985 * ***           msetr->msetr_next_offset = LastOffset + 1;
0000EC76                                   19986 @_done@1947@5 DS 0H
0000EC76 A77B 0001               00000001  19987          AGHI  7,1
0000EC7A E370 3120 0024          00000120  19988          STG   7,288(0,3)  ; offset of msetr_next_offset in rd_kafka_ms*
                                                                gset_reader_s
                                           19989 * ***
                                           19990 * ***           msetr->msetr_v2_hdr = ((void *)0);
0000EC80 A7F9 0000               00000000  19991          LGHI  15,0        ; 0
0000EC84 E3F0 3028 0024          00000028  19992          STG   15,40(0,3)  ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
                                           19993 * ***
                                           19994 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
0000EC8A 47F0 C198               0000ECC2  19995          B     @ret_lab_1947
                                           19996 * ***
                                           19997 * ***    err_parse:
                                           19998 * ***
                                           19999 * ***           rd_atomic64_add(&msetr->msetr_rkb->rkb_c.rx_partial, 1\
                                           20000 * );
0000EC8E                                   20001 @_err_parse@1947@4 DS 0H
                                                                                                                           Page  397 
  Active Usings: @REGION_1947_7,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000EC8E E3F0 3048 0004          00000048  20002          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000EC94 41F0 F300               00000300  20003          LA    15,768(0,15)
0000EC98 E3F0 D388 0024          00000388  20004          STG   15,904(0,13)
0000EC9E E548 D390 0001          00000390  20005          MVGHI 912(13),1
0000ECA4 4110 D388               00000388  20006          LA    1,904(0,13)
0000ECA8 E3F0 C106 0004          0000EC30  20007          LG    15,@lit_1947_1492 ; rd_atomic64_add
0000ECAE                                   20008 @@gen_label1968 DS    0H
0000ECAE 05EF                              20009          BALR  14,15
0000ECB0                                   20010 @@gen_label1969 DS    0H
                                           20011 * ***           err = rkbuf->rkbuf_err;
0000ECB0 5820 4188               00000188  20012          L     2,392(0,4)  ; offset of rkbuf_err in rd_kafka_buf_s
                                           20013 * ***
                                           20014 * ***    err:
                                           20015 * ***           msetr->msetr_v2_hdr = ((void *)0);
0000ECB4                                   20016 @_err@1947@6 DS 0H
0000ECB4 A7F9 0000               00000000  20017          LGHI  15,0        ; 0
0000ECB8 E3F0 3028 0024          00000028  20018          STG   15,40(0,3)  ; offset of msetr_v2_hdr in rd_kafka_msgset_*
                                                                reader_s
                                           20019 * ***           return err;
0000ECBE B914 00F2                         20020          LGFR  15,2
                                           20021 * ***   }
0000ECC2                                   20022 @ret_lab_1947 DS 0H
                                           20023 * * **** Start of Epilogue
                                           20024          DCCEPIL
0000ECC2                                   20025+         ds 0h                                                          01-DCCEP
                                           20026+* Epilog
0000ECC2 D707 D088 D088 00000088 00000088  20027+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000ECC8 E3D0 D080 0004          00000080  20028+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000ECCE E3C0 D090 0004          00000090  20029+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000ECD4 E3B0 C018 0004          00000018  20030+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000ECDA E3C0 B010 0021          00000010  20031+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000ECE0 E3E0 D008 0004          00000008  20032+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000ECE6 EB1C D020 0004          00000020  20033+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000ECEC 078E                              20034+         bcr 8,14                if same dsab, just return              01-DCCEP
0000ECEE E3F0 D010 0024          00000010  20035+         stg 15,16(0,13)         save return code                       01-DCCEP
0000ECF4 E300 D018 0024          00000018  20036+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000ECFA E3F0 D090 0004          00000090  20037+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000ED00 E3F0 F018 0004          00000018  20038+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000ED06 47F0 F040               00000040  20039+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           20040+* End of Epilog
                                           20041 * * **** End of Epilogue
                                           20042          DROP  12
                                           20043 *
                                           20044 *   DSECT for automatic variables in "rd_kafka_msgset_reader_v2"
                                           20045 *      (FUNCTION #1947)
                                           20046 *
00000000                00000000 00000388  20047 @AUTO#rd_kafka_msgset_reader_v2 DSECT
00000000                                   20048          DS    XL168
000000A8                                   20049 rd_kafka_msgset_reader_v2#__len0#138 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20050          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20051 rd_kafka_msgset_reader_v2#__len0#130 DS 8XL1 ; __len0
                                                                                                                           Page  398 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000B0                000000B0 000000A8  20052          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20053 rd_kafka_msgset_reader_v2#__len1#129 DS 8XL1 ; __len1
000000B0                000000B0 000000A8  20054          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20055 rd_kafka_msgset_reader_v2#__len0#118 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20056          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20057 rd_kafka_msgset_reader_v2#__len2#117 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  20058          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20059 rd_kafka_msgset_reader_v2#__len0#110 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20060          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20061 rd_kafka_msgset_reader_v2#__len2#109 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  20062          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20063 rd_kafka_msgset_reader_v2#__len0#102 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20064          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20065 rd_kafka_msgset_reader_v2#__len2#101 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  20066          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20067 rd_kafka_msgset_reader_v2#__len0#94 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20068          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20069 rd_kafka_msgset_reader_v2#__len2#93 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  20070          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20071 rd_kafka_msgset_reader_v2#__len0#86 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20072          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20073 rd_kafka_msgset_reader_v2#__len2#85 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  20074          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20075 rd_kafka_msgset_reader_v2#__len0#78 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20076          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20077 rd_kafka_msgset_reader_v2#__len2#77 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  20078          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20079 rd_kafka_msgset_reader_v2#__len0#70 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20080          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20081 rd_kafka_msgset_reader_v2#__len2#69 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  20082          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20083 rd_kafka_msgset_reader_v2#__len0#62 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20084          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20085 rd_kafka_msgset_reader_v2#__len2#61 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  20086          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20087 rd_kafka_msgset_reader_v2#__len0#54 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20088          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20089 rd_kafka_msgset_reader_v2#__len1#53 DS 8XL1 ; __len1
000000B0                000000B0 000000A8  20090          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20091 rd_kafka_msgset_reader_v2#__len0#46 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20092          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20093 rd_kafka_msgset_reader_v2#crc_len#45 DS 8XL1 ; crc_len
000000B0                000000B0 000000A8  20094          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20095 rd_kafka_msgset_reader_v2#calc_crc#45 DS 1F ; calc_crc
000000AC                000000AC 000000A8  20096          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20097 rd_kafka_msgset_reader_v2#__len0#39 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20098          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20099 rd_kafka_msgset_reader_v2#__len2#38 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  20100          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20101 rd_kafka_msgset_reader_v2#__len0#31 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20102          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20103 rd_kafka_msgset_reader_v2#__len2#30 DS 8XL1 ; __len2
                                                                                                                           Page  399 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000B0                000000B0 000000A8  20104          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20105 rd_kafka_msgset_reader_v2#__len0#24 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20106          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20107 rd_kafka_msgset_reader_v2#__len2#23 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  20108          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20109 rd_kafka_msgset_reader_v2#__len0#11 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20110          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20111 rd_kafka_msgset_reader_v2#__len2#10 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  20112          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20113 rd_kafka_msgset_reader_v2#__len0#3 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  20114          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20115 rd_kafka_msgset_reader_v2#__len2#2 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  20116          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20117 rd_kafka_msgset_reader_v2#_v#1 DS 8XL1 ; _v
000000B0                000000B0 000000A8  20118          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20119 rd_kafka_msgset_reader_v2#log_decode_errors#0 DS 1F ; log_decode_errors
000000AC                000000AC 000000A8  20120          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20121 rd_kafka_msgset_reader_v2#$Last$Offset#0 DS 8XL1 ; LastOffset
000000B0                000000B0 000000A8  20122          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20123 rd_kafka_msgset_reader_v2#payload_size#0 DS 8XL1 ; payload_size
000000B0                000000B0 000000A8  20124          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20125 rd_kafka_msgset_reader_v2#len_start#0 DS 8XL1 ; len_start
000000B0                000000B0 000000A8  20126          ORG   @AUTO#rd_kafka_msgset_reader_v2+168
000000A8                                   20127 rd_kafka_msgset_reader_v2#err#0 DS 1F ; err
000000AC                000000AC 000000B0  20128          ORG   @AUTO#rd_kafka_msgset_reader_v2+176
000000B0                                   20129 rd_kafka_msgset_reader_v2#_v#9 DS 1F ; _v
000000B4                000000B4 000000B4  20130          ORG   @AUTO#rd_kafka_msgset_reader_v2+180
000000B4                                   20131 rd_kafka_msgset_reader_v2#_v#22 DS 1F ; _v
000000B8                000000B8 000000B8  20132          ORG   @AUTO#rd_kafka_msgset_reader_v2+184
000000B8                                   20133 rd_kafka_msgset_reader_v2#_v#37 DS 1F ; _v
000000BC                000000BC 000000BC  20134          ORG   @AUTO#rd_kafka_msgset_reader_v2+188
000000BC                                   20135 rd_kafka_msgset_reader_v2#_v#60 DS 2XL1 ; _v
000000BE                000000BE 000000C0  20136          ORG   @AUTO#rd_kafka_msgset_reader_v2+192
000000C0                                   20137 rd_kafka_msgset_reader_v2#_v#68 DS 1F ; _v
000000C4                000000C4 000000C8  20138          ORG   @AUTO#rd_kafka_msgset_reader_v2+200
000000C8                                   20139 rd_kafka_msgset_reader_v2#_v#76 DS 8XL1 ; _v
000000D0                000000D0 000000D0  20140          ORG   @AUTO#rd_kafka_msgset_reader_v2+208
000000D0                                   20141 rd_kafka_msgset_reader_v2#_v#84 DS 8XL1 ; _v
000000D8                000000D8 000000D8  20142          ORG   @AUTO#rd_kafka_msgset_reader_v2+216
000000D8                                   20143 rd_kafka_msgset_reader_v2#_v#92 DS 8XL1 ; _v
000000E0                000000E0 000000E0  20144          ORG   @AUTO#rd_kafka_msgset_reader_v2+224
000000E0                                   20145 rd_kafka_msgset_reader_v2#_v#100 DS 2XL1 ; _v
000000E2                000000E2 000000E4  20146          ORG   @AUTO#rd_kafka_msgset_reader_v2+228
000000E4                                   20147 rd_kafka_msgset_reader_v2#_v#108 DS 1F ; _v
000000E8                000000E8 000000E8  20148          ORG   @AUTO#rd_kafka_msgset_reader_v2+232
000000E8                                   20149 rd_kafka_msgset_reader_v2#_v#116 DS 1F ; _v
000000EC                000000EC 000000F0  20150          ORG   @AUTO#rd_kafka_msgset_reader_v2+240
000000F0                                   20151 rd_kafka_msgset_reader_v2#hdr#0 DS 72XL1 ; hdr
00000138                00000138 00000138  20152          ORG   @AUTO#rd_kafka_msgset_reader_v2+312
00000138                                   20153 rd_kafka_msgset_reader_v2#save_slice#0 DS 40XL1 ; save_slice
00000160                00000160 00000160  20154          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20155 rd_kafka_msgset_reader_v2#__tmpstr#142 DS 256XL1 ; __tmpstr
                                                                                                                           Page  400 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000260                00000260 00000160  20156          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20157 rd_kafka_msgset_reader_v2#__tmpstr#134 DS 256XL1 ; __tmpstr
00000260                00000260 00000160  20158          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20159 rd_kafka_msgset_reader_v2#__tmpstr#126 DS 256XL1 ; __tmpstr
00000260                00000260 00000160  20160          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20161 rd_kafka_msgset_reader_v2#__tmpstr#122 DS 256XL1 ; __tmpstr
00000260                00000260 00000160  20162          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20163 rd_kafka_msgset_reader_v2#__tmpstr#114 DS 256XL1 ; __tmpstr
00000260                00000260 00000160  20164          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20165 rd_kafka_msgset_reader_v2#__tmpstr#106 DS 256XL1 ; __tmpstr
00000260                00000260 00000160  20166          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20167 rd_kafka_msgset_reader_v2#__tmpstr#98 DS 256XL1 ; __tmpstr
00000260                00000260 00000160  20168          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20169 rd_kafka_msgset_reader_v2#__tmpstr#90 DS 256XL1 ; __tmpstr
00000260                00000260 00000160  20170          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20171 rd_kafka_msgset_reader_v2#__tmpstr#82 DS 256XL1 ; __tmpstr
00000260                00000260 00000160  20172          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20173 rd_kafka_msgset_reader_v2#__tmpstr#74 DS 256XL1 ; __tmpstr
00000260                00000260 00000160  20174          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20175 rd_kafka_msgset_reader_v2#__tmpstr#66 DS 256XL1 ; __tmpstr
00000260                00000260 00000160  20176          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20177 rd_kafka_msgset_reader_v2#crc_slice#45 DS 40XL1 ; crc_slice
00000188                00000188 00000160  20178          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20179 rd_kafka_msgset_reader_v2#__tmpstr#43 DS 256XL1 ; __tmpstr
00000260                00000260 00000160  20180          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20181 rd_kafka_msgset_reader_v2#__tmpstr#35 DS 256XL1 ; __tmpstr
00000260                00000260 00000160  20182          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20183 rd_kafka_msgset_reader_v2#__tmpstr#28 DS 256XL1 ; __tmpstr
00000260                00000260 00000160  20184          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20185 rd_kafka_msgset_reader_v2#_logname#21 DS 256XL1 ; _logname
00000260                00000260 00000160  20186          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20187 rd_kafka_msgset_reader_v2#_logname#20 DS 256XL1 ; _logname
00000260                00000260 00000160  20188          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20189 rd_kafka_msgset_reader_v2#__tmpstr#15 DS 256XL1 ; __tmpstr
00000260                00000260 00000160  20190          ORG   @AUTO#rd_kafka_msgset_reader_v2+352
00000160                                   20191 rd_kafka_msgset_reader_v2#__tmpstr#7 DS 256XL1 ; __tmpstr
00000260                00000260 00000188  20192          ORG   @AUTO#rd_kafka_msgset_reader_v2+392
00000188                                   20193 rd_kafka_msgset_reader_v2#__tmpstr#58 DS 256XL1 ; __tmpstr
00000288                00000288 00000188  20194          ORG   @AUTO#rd_kafka_msgset_reader_v2+392
00000188                                   20195 rd_kafka_msgset_reader_v2#__tmpstr#50 DS 256XL1 ; __tmpstr
00000288                00000288 00000260  20196          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20197 rd_kafka_msgset_reader_v2#_logname#143 DS 256XL1 ; _logname
00000360                00000360 00000260  20198          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20199 rd_kafka_msgset_reader_v2#_logname#135 DS 256XL1 ; _logname
00000360                00000360 00000260  20200          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20201 rd_kafka_msgset_reader_v2#_logname#127 DS 256XL1 ; _logname
00000360                00000360 00000260  20202          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20203 rd_kafka_msgset_reader_v2#_logname#123 DS 256XL1 ; _logname
00000360                00000360 00000260  20204          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20205 rd_kafka_msgset_reader_v2#_logname#115 DS 256XL1 ; _logname
00000360                00000360 00000260  20206          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20207 rd_kafka_msgset_reader_v2#_logname#107 DS 256XL1 ; _logname
                                                                                                                           Page  401 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000360                00000360 00000260  20208          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20209 rd_kafka_msgset_reader_v2#_logname#99 DS 256XL1 ; _logname
00000360                00000360 00000260  20210          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20211 rd_kafka_msgset_reader_v2#_logname#91 DS 256XL1 ; _logname
00000360                00000360 00000260  20212          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20213 rd_kafka_msgset_reader_v2#_logname#83 DS 256XL1 ; _logname
00000360                00000360 00000260  20214          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20215 rd_kafka_msgset_reader_v2#_logname#75 DS 256XL1 ; _logname
00000360                00000360 00000260  20216          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20217 rd_kafka_msgset_reader_v2#_logname#67 DS 256XL1 ; _logname
00000360                00000360 00000260  20218          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20219 rd_kafka_msgset_reader_v2#_logname#44 DS 256XL1 ; _logname
00000360                00000360 00000260  20220          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20221 rd_kafka_msgset_reader_v2#_logname#36 DS 256XL1 ; _logname
00000360                00000360 00000260  20222          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20223 rd_kafka_msgset_reader_v2#_logname#29 DS 256XL1 ; _logname
00000360                00000360 00000260  20224          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20225 rd_kafka_msgset_reader_v2#_logname#16 DS 256XL1 ; _logname
00000360                00000360 00000260  20226          ORG   @AUTO#rd_kafka_msgset_reader_v2+608
00000260                                   20227 rd_kafka_msgset_reader_v2#_logname#8 DS 256XL1 ; _logname
00000360                00000360 00000288  20228          ORG   @AUTO#rd_kafka_msgset_reader_v2+648
00000288                                   20229 rd_kafka_msgset_reader_v2#_logname#59 DS 256XL1 ; _logname
00000388                00000388 00000288  20230          ORG   @AUTO#rd_kafka_msgset_reader_v2+648
00000288                                   20231 rd_kafka_msgset_reader_v2#_logname#51 DS 256XL1 ; _logname
                                           20232 *
0000ED0A                00000000 00012806  20233 @CODE    CSECT
                                           20234 *
                                           20235 *
                                           20236 *
                                           20237 * ....... start of rd_kafka_msgset_reader_peek_msg_version
0000ED0A                                   20238 @LNAME1948 DS  0H
0000ED0A 00000027                          20239          DC    X'00000027'
0000ED0E 99846D9281869281                  20240          DC    C'rd_kafka_msgset_reader_peek_msg_'
0000ED2E A58599A2899695                    20241          DC    C'version'
0000ED35 00                                20242          DC    X'00'
                                           20243 rd_kafka_msgset_reader_peek_msg_version DCCPRLG CINDEX=1948,BASER=12,FR*
                                                                AME=848,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1948
                                           20244          macro
                                           20245          dccextrn &m
                                           20246          gblc    &$dccext(1000)
                                           20247          gbla    &$dccexti
                                           20248          lcla    &i
                                           20249 &$dccext(&$dccexti+1) setc    '&m'
                                           20250 &i       seta    1
                                           20251 .loop    aif    (&i gt &$dccexti).around
                                           20252          aif    ('&$dccext(&i)' eq '&m').getout
                                           20253 &i       seta    &i+1
                                           20254          ago     .loop
                                           20255 .around  anop
                                           20256 &$dccexti seta &$dccexti+1
                                           20257          extrn  &m
                                           20258 .getout  anop
                                                                                                                           Page  402 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           20259          mend
0000ED38                                   20260+$eye0127    ds    0d                                                    02-DCCCA
0000ED38 C4C3C3                            20261+         dc cl3'DCC'                                                    02-DCCCA
0000ED3B 01                                20262+         dc xl1'01' format one                                          02-DCCCA
0000ED3C 00000000                          20263+         dc a(0)                                                        02-DCCCA
0000ED40 000000000000EDAA                  20264+         dc ad(@PER_1948)                                               02-DCCCA
0000ED48 0000000000000350                  20265+         dc ad(848)                                                     02-DCCCA
0000ED50 0000000000000000                  20266+         dc ad(0)                                                       02-DCCCA
0000ED58 0000000000001000                  20267+         dc ad(4096)                                                    02-DCCCA
0000ED60 20                                20268+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000ED61 03                                20269+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000ED62 03                                20270+         dc al1(3)                                                      02-DCCCA
0000ED63 08                                20271+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000ED64 00                                20272+         dc bl.8'00000000'                                              02-DCCCA
0000ED65 000000                            20273+         dc al3(0)                                                      02-DCCCA
0000ED68 000000000000ED0A                  20274+         dc ad(@LNAME1948)                                              02-DCCCA
0000ED70                                   20275+         ds 0d                                                          02-DCCCA
0000ED70 000000000000ED38                  20276+         dc ad($eye0127)                                                02-DCCCA
0000ED78 0000000000000000                  20277+         dc ad(0)                                                       02-DCCCA
0000ED80                                   20278+         ds    0d                                                       01-DCCPR
0000ED80                                   20279+rd_kafka_msgset_reader_peek_msg_version ds 0d                           01-DCCPR
0000ED80                                   20280+@REGION_1948_1 ds 0h                                                    01-DCCPR
0000ED80 EBEC D008 0024          00000008  20281+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000ED86 E3E0 D088 0004          00000088  20282+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000ED8C E3C0 D090 0004          00000090  20283+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000ED92 B904 002E                         20284+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000ED96 E3B0 C018 0004          00000018  20285+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000ED9C A7EB 0350               00000350  20286+         aghi  14,848              increase by frame size               01-DCCPR
0000EDA0 E3E0 C020 0021          00000020  20287+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000EDA6 4720 B020               00000020  20288+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000EDAA                                   20289+@PER_1948 ds   0h                                                       01-DCCPR
0000EDAA EBDE 2080 0024          00000080  20290+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000EDB0 E3C0 2090 0024          00000090  20291+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000EDB6 B904 00D2                         20292+         lgr   13,2                set real frame pointer               01-DCCPR
0000EDBA B904 00CF                         20293+         lgr   12,15               set base reg                         01-DCCPR
                        0000ED80           20294+         using @REGION_1948_1,12                                        01-DCCPR
                                           20295 * ******* End of Prologue
                                           20296 * *
                                           20297 * ***           rd_kafka_buf_t *rkbuf = msetr->msetr_rkbuf;
0000EDBE EB23 1000 0004          00000000  20298          LMG   2,3,0(1)    ; msetr
0000EDC4 E340 2000 0004          00000000  20299          LG    4,0(0,2)    ; msetr
                                           20300 * ***           rd_kafka_toppar_t *rktp = msetr->msetr_rktp;
0000EDCA E350 2050 0004          00000050  20301          LG    5,80(0,2)   ; offset of msetr_rktp in rd_kafka_msgset_re*
                                                                ader_s
                                           20302 * ***
                                           20303 * ***           int log_decode_errors = (rkbuf->rkbuf_rkb->rkb_rk->rk_\
                                           20304 * conf.debug &
                                           20305 * ***                                    0x80) ? 7 : 0;
0000EDD0 E3F0 4100 0004          00000100  20306          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000EDD6 E3F0 FFD0 0004          00000FD0  20307          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000EDDC 9180 F323      00000323 00000080  20308          TM    803(15),128
0000EDE0 4780 C0F0               0000EE70  20309          BZ    @L1939
                                                                                                                           Page  403 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000EDE4 A768 0007               00000007  20310          LHI   6,7         ; 7
0000EDE8 47F0 C0F4               0000EE74  20311          B     @L1940
0000EDF0                                   20312          DS    0D
0000EDF0 00000350                          20313 @FRAMESIZE_1948 DC F'848'
0000EDF4 00000000
0000EDF8 00000000000012B8                  20314 @lit_1948_1547 DC AD(rd_slice_offset)
0000EE00 0000000000000000                  20315 @lit_1948_1549 DC AD(rd_slice_peek)
0000EE08 0000000000001210                  20316 @lit_1948_1550 DC AD(rd_slice_abs_offset)
0000EE10 0000000000000000                  20317 @lit_1948_1553 DC AD(rd_kafka_crash)
0000EE18 0000000000012808                  20318 @lit_1948_1552 DC AD(@DATA)
0000EE20 0000000000012AB8                  20319 @lit_1948_1551 DC AD(@strings@)
0000EE28 0000000000000000                  20320 @lit_1948_1555 DC AD(snprintf)
0000EE30 0000000000000000                  20321 @lit_1948_1557 DC AD(mtx_lock)
0000EE38 0000000000001668                  20322 @lit_1948_1559 DC AD(rd_strlcpy)
0000EE40 0000000000000000                  20323 @lit_1948_1561 DC AD(mtx_unlock)
0000EE48 00000000000014D0                  20324 @lit_1948_1562 DC AD(rd_kafka_$Api$Key2str)
0000EE50 0000000000000000                  20325 @lit_1948_1568 DC AD(rd_kafka_log0)
0000EE58 0000092C                          20326 @lit_region_diff_1948_1_2  DC A(@REGION_1948_2-@REGION_1948_1)
0000EE5C 00000000
0000EE60 0000000000000000                  20327 @lit_1948_1570 DC AD(rd_slice_read)
0000EE68 0000000000000000                  20328 @lit_1948_1599 DC AD(rd_kafka_consumer_err)
0000EE70                                   20329 @L1939   DS    0H
0000EE70 A768 0000               00000000  20330          LHI   6,0         ; 0
0000EE74                                   20331 @L1940   DS    0H
                                           20332 * ***           size_t read_offset = rd_slice_offset(&rkbuf->rkbuf_rea\
                                           20333 * der);
0000EE74 41F0 4078               00000078  20334          LA    15,120(0,4)
0000EE78 E3F0 D2C8 0024          000002C8  20335          STG   15,712(0,13)
0000EE7E 4110 D2C8               000002C8  20336          LA    1,712(0,13)
0000EE82 E3F0 C078 0004          0000EDF8  20337          LG    15,@lit_1948_1547 ; rd_slice_offset
0000EE88                                   20338 @@gen_label1971 DS    0H
0000EE88 05EF                              20339          BALR  14,15
0000EE8A                                   20340 @@gen_label1972 DS    0H
0000EE8A B904 007F                         20341          LGR   7,15
                                           20342 * ***
                                           20343 * ***           do { size_t __len2 = (size_t)(1); if (!rd_slice_peek(&\
                                           20344 * (rkbuf)->rkbuf_reader, read_offset+8+4+4, MagicBytep, __len2)) do { \
                                           20345 * size_t __len0 = (size_t)((read_offset+8+4+4)+(__len2)); if (((__len0\
                                           20346 *  > ((&(rkbuf)->rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rk\
                                           20347 * buf_reader))))) { do { if (log_decode_errors > 0) { do { if (((!(rkb\
                                           20348 * uf->rkbuf_rkb)))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdk\
                                           20349 * afka_msgset_reader.c",1191, __FUNCTION__, (((void *)0)), "assert: " \
                                           20350 * "rkbuf->rkbuf_rkb"); } while (0); char __tmpstr[256]; snprintf(__tmp\
                                           20351 * str, sizeof(__tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[\
                                           20352 * 0] = '\0'; do { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rk\
                                           20353 * b_logname_lock); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname,\
                                           20354 *  sizeof(_logname)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock\
                                           20355 * ); rd_kafka_log0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf\
                                           20356 * _rkb)->rkb_rk, _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Prot\
                                           20357 * ocol read buffer underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " \
                                           20358 * (%s:%i): " "expected %" "zu" " bytes > " "%" "zu" " remaining bytes \
                                           20359 * (%s)%s", rd_kafka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rk\
                                                                                                                           Page  404 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           20360 * buf_reqhdr.ApiVersion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkb\
                                           20361 * uf->rkbuf_reader)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION_\
                                           20362 * _, 1191, __len0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(\
                                           20363 * &rkbuf->rkbuf_reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf\
                                           20364 * _uflow_mitigation : "incorrect broker.version.fallback?", __tmpstr);\
                                           20365 *  } while (0); } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; g\
                                           20366 * oto err_parse; } while (0); } } while (0); } while (0);
0000EE8E                                   20367 @L1941   DS    0H
0000EE8E A789 0001               00000001  20368          LGHI  8,1         ; 1
0000EE92 41F0 4078               00000078  20369          LA    15,120(0,4)
0000EE96 E3F0 D2C8 0024          000002C8  20370          STG   15,712(0,13)
0000EE9C B904 00F7                         20371          LGR   15,7
0000EEA0 A7FB 0008               00000008  20372          AGHI  15,8
0000EEA4 A7FB 0004               00000004  20373          AGHI  15,4
0000EEA8 A7FB 0004               00000004  20374          AGHI  15,4
0000EEAC E3F0 D2D0 0024          000002D0  20375          STG   15,720(0,13)
0000EEB2 E330 D2D8 0024          000002D8  20376          STG   3,728(0,13)
0000EEB8 E380 D2E0 0024          000002E0  20377          STG   8,736(0,13)
0000EEBE 4110 D2C8               000002C8  20378          LA    1,712(0,13)
0000EEC2 E3F0 C080 0004          0000EE00  20379          LG    15,@lit_1948_1549 ; rd_slice_peek
0000EEC8                                   20380 @@gen_label1973 DS    0H
0000EEC8 05EF                              20381          BALR  14,15
0000EECA                                   20382 @@gen_label1974 DS    0H
0000EECA B902 00FF                         20383          LTGR  15,15
0000EECE 4770 C3E6               0000F166  20384          BNZ   @L1944
0000EED2                                   20385 @L1945   DS    0H
0000EED2 B904 00F7                         20386          LGR   15,7
0000EED6 A7FB 0008               00000008  20387          AGHI  15,8
0000EEDA A7FB 0004               00000004  20388          AGHI  15,4
0000EEDE A7FB 0004               00000004  20389          AGHI  15,4
0000EEE2 B90A 00F8                         20390          ALGR  15,8
0000EEE6 B904 008F                         20391          LGR   8,15
0000EEEA E390 4098 0004          00000098  20392          LG    9,152(0,4)  ; offset of end in rd_slice_s
0000EEF0 41F0 4078               00000078  20393          LA    15,120(0,4)
0000EEF4 E3F0 D2C8 0024          000002C8  20394          STG   15,712(0,13)
0000EEFA 4110 D2C8               000002C8  20395          LA    1,712(0,13)
0000EEFE E3F0 C088 0004          0000EE08  20396          LG    15,@lit_1948_1550 ; rd_slice_abs_offset
0000EF04                                   20397 @@gen_label1976 DS    0H
0000EF04 05EF                              20398          BALR  14,15
0000EF06                                   20399 @@gen_label1977 DS    0H
0000EF06 B90B 009F                         20400          SLGR  9,15
0000EF0A B921 0089                         20401          CLGR  8,9
0000EF0E 47D0 C3E6               0000F166  20402          BNH   @L1948
0000EF12                                   20403 @L1949   DS    0H
0000EF12 1266                              20404          LTR   6,6
0000EF14 47D0 C3D6               0000F156  20405          BNH   @L1952
0000EF18                                   20406 @L1953   DS    0H
0000EF18 E3F0 4100 0002          00000100  20407          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000EF1E 4770 C1E4               0000EF64  20408          BNZ   @L1956
0000EF22 E3F0 C0A0 0004          0000EE20  20409          LG    15,@lit_1948_1551
0000EF28 4110 F2CE               000002CE  20410          LA    1,718(0,15)
0000EF2C E310 D2C8 0024          000002C8  20411          STG   1,712(0,13)
                                                                                                                           Page  405 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000EF32 E548 D2D0 04A7          000002D0  20412          MVGHI 720(13),1191
0000EF38 E310 C098 0004          0000EE18  20413          LG    1,@lit_1948_1552
0000EF3E 4110 1272               00000272  20414          LA    1,626(0,1)
0000EF42 E310 D2D8 0024          000002D8  20415          STG   1,728(0,13)
0000EF48 D707 D2E0 D2E0 000002E0 000002E0  20416          XC    736(8,13),736(13)
0000EF4E 41F0 F362               00000362  20417          LA    15,866(0,15)
0000EF52 E3F0 D2E8 0024          000002E8  20418          STG   15,744(0,13)
0000EF58 4110 D2C8               000002C8  20419          LA    1,712(0,13)
0000EF5C E3F0 C090 0004          0000EE10  20420          LG    15,@lit_1948_1553 ; rd_kafka_crash
0000EF62                                   20421 @@gen_label1981 DS    0H
0000EF62 05EF                              20422          BALR  14,15
0000EF64                                   20423 @@gen_label1982 DS    0H
0000EF64                                   20424 @L1956   DS    0H
0000EF64 41F0 D0C4               000000C4  20425          LA    15,196(0,13)
0000EF68 E3F0 D2C8 0024          000002C8  20426          STG   15,712(0,13)
0000EF6E E548 D2D0 0100          000002D0  20427          MVGHI 720(13),256
0000EF74 E3F0 C0A0 0004          0000EE20  20428          LG    15,@lit_1948_1551
0000EF7A 41F0 F37C               0000037C  20429          LA    15,892(0,15)
0000EF7E E3F0 D2D8 0024          000002D8  20430          STG   15,728(0,13)
0000EF84 4110 D2C8               000002C8  20431          LA    1,712(0,13)
0000EF88 E3F0 C0A8 0004          0000EE28  20432          LG    15,@lit_1948_1555 ; snprintf
0000EF8E                                   20433 @@gen_label1983 DS    0H
0000EF8E 05EF                              20434          BALR  14,15
0000EF90                                   20435 @@gen_label1984 DS    0H
0000EF90 41F0 D0C4               000000C4  20436          LA    15,196(0,13)
0000EF94 B904 001F                         20437          LGR   1,15
0000EF98 A709 0000               00000000  20438          LGHI  0,0
0000EF9C                                   20439 @@gen_label1985 DS 0H
0000EF9C B25E 000F                         20440          SRST  0,15
0000EFA0 4710 C21C               0000EF9C  20441          BC  1,@@gen_label1985
0000EFA4 B90B 0001                         20442          SLGR  0,1
0000EFA8 A70F 0002               00000002  20443          CGHI  0,2
0000EFAC 4770 C234               0000EFB4  20444          BNE   @L1958
0000EFB0 9200 D0C4      000000C4 00000000  20445          MVI   196(13),0
0000EFB4                                   20446 @L1957   DS    0H
0000EFB4                                   20447 @L1958   DS    0H
0000EFB4 E3F0 4100 0004          00000100  20448          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000EFBA A729 1638               00001638  20449          LGHI  2,5688      ; 5688
0000EFBE 41F2 F000               00000000  20450          LA    15,0(2,15)
0000EFC2 E3F0 D2C8 0024          000002C8  20451          STG   15,712(0,13)
0000EFC8 4110 D2C8               000002C8  20452          LA    1,712(0,13)
0000EFCC E3F0 C0B0 0004          0000EE30  20453          LG    15,@lit_1948_1557 ; mtx_lock
0000EFD2                                   20454 @@gen_label1987 DS    0H
0000EFD2 05EF                              20455          BALR  14,15
0000EFD4                                   20456 @@gen_label1988 DS    0H
0000EFD4 41F0 D1C4               000001C4  20457          LA    15,452(0,13)
0000EFD8 E3F0 D2C8 0024          000002C8  20458          STG   15,712(0,13)
0000EFDE E3F0 4100 0004          00000100  20459          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000EFE4 A719 1630               00001630  20460          LGHI  1,5680      ; 5680
0000EFE8 E3F1 F000 0004          00000000  20461          LG    15,0(1,15)
0000EFEE E3F0 D2D0 0024          000002D0  20462          STG   15,720(0,13)
0000EFF4 E548 D2D8 0100          000002D8  20463          MVGHI 728(13),256
                                                                                                                           Page  406 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000EFFA 4110 D2C8               000002C8  20464          LA    1,712(0,13)
0000EFFE E3F0 C0B8 0004          0000EE38  20465          LG    15,@lit_1948_1559 ; rd_strlcpy
0000F004                                   20466 @@gen_label1989 DS    0H
0000F004 05EF                              20467          BALR  14,15
0000F006                                   20468 @@gen_label1990 DS    0H
0000F006 E3F0 4100 0004          00000100  20469          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F00C 41F2 F000               00000000  20470          LA    15,0(2,15)
0000F010 E3F0 D2C8 0024          000002C8  20471          STG   15,712(0,13)
0000F016 4110 D2C8               000002C8  20472          LA    1,712(0,13)
0000F01A E3F0 C0C0 0004          0000EE40  20473          LG    15,@lit_1948_1561 ; mtx_unlock
0000F020                                   20474 @@gen_label1991 DS    0H
0000F020 05EF                              20475          BALR  14,15
0000F022                                   20476 @@gen_label1992 DS    0H
0000F022 E3F0 40B8 0015          000000B8  20477          LGH   15,184(0,4)
0000F028 E3F0 D2C8 0024          000002C8  20478          STG   15,712(0,13)
0000F02E 4110 D2C8               000002C8  20479          LA    1,712(0,13)
0000F032 E3F0 C0C8 0004          0000EE48  20480          LG    15,@lit_1948_1562 ; rd_kafka_ApiKey2str
0000F038                                   20481 @@gen_label1993 DS    0H
0000F038 05EF                              20482          BALR  14,15
0000F03A                                   20483 @@gen_label1994 DS    0H
0000F03A B904 002F                         20484          LGR   2,15
0000F03E 41F0 4078               00000078  20485          LA    15,120(0,4)
0000F042 E3F0 D2C8 0024          000002C8  20486          STG   15,712(0,13)
0000F048 4110 D2C8               000002C8  20487          LA    1,712(0,13)
0000F04C E3F0 C078 0004          0000EDF8  20488          LG    15,@lit_1948_1547 ; rd_slice_offset
0000F052                                   20489 @@gen_label1995 DS    0H
0000F052 05EF                              20490          BALR  14,15
0000F054                                   20491 @@gen_label1996 DS    0H
0000F054 B904 003F                         20492          LGR   3,15
0000F058 E350 4098 0004          00000098  20493          LG    5,152(0,4)  ; offset of end in rd_slice_s
0000F05E 41F0 4078               00000078  20494          LA    15,120(0,4)
0000F062 E3F0 D2C8 0024          000002C8  20495          STG   15,712(0,13)
0000F068 4110 D2C8               000002C8  20496          LA    1,712(0,13)
0000F06C E3F0 C088 0004          0000EE08  20497          LG    15,@lit_1948_1550 ; rd_slice_abs_offset
0000F072                                   20498 @@gen_label1997 DS    0H
0000F072 05EF                              20499          BALR  14,15
0000F074                                   20500 @@gen_label1998 DS    0H
0000F074 B90B 005F                         20501          SLGR  5,15
0000F078 E3F0 41E8 0002          000001E8  20502          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000F07E 4780 C30C               0000F08C  20503          BZ    @L1961
0000F082 E3F0 41E8 0004          000001E8  20504          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000F088 47F0 C316               0000F096  20505          B     @L1962
0000F08C                                   20506 @L1961   DS    0H
0000F08C E3F0 C0A0 0004          0000EE20  20507          LG    15,@lit_1948_1551
0000F092 41F0 F380               00000380  20508          LA    15,896(0,15)
0000F096                                   20509 @L1962   DS    0H
0000F096 E310 4100 0004          00000100  20510          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F09C E310 1FD0 0004          00000FD0  20511          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000F0A2 4110 1210               00000210  20512          LA    1,528(0,1)
0000F0A6 E310 D2C8 0024          000002C8  20513          STG   1,712(0,13)
                                                                                                                           Page  407 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F0AC E310 4100 0004          00000100  20514          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F0B2 E310 1FD0 0004          00000FD0  20515          LG    1,4048(0,1)
0000F0B8 E310 D2D0 0024          000002D0  20516          STG   1,720(0,13)
0000F0BE 4110 D1C4               000001C4  20517          LA    1,452(0,13)
0000F0C2 E310 D2D8 0024          000002D8  20518          STG   1,728(0,13)
0000F0C8 B914 0016                         20519          LGFR  1,6
0000F0CC E310 D2E0 0024          000002E0  20520          STG   1,736(0,13)
0000F0D2 D707 D2E8 D2E8 000002E8 000002E8  20521          XC    744(8,13),744(13)
0000F0D8 E310 C0A0 0004          0000EE20  20522          LG    1,@lit_1948_1551
0000F0DE 4160 13A4               000003A4  20523          LA    6,932(0,1)
0000F0E2 E360 D2F0 0024          000002F0  20524          STG   6,752(0,13)
0000F0E8 4110 13B0               000003B0  20525          LA    1,944(0,1)
0000F0EC EB12 D2F8 0024          000002F8  20526          STMG  1,2,760(13)
0000F0F2 4810 40BA               000000BA  20527          LH    1,186(0,4)
0000F0F6 B914 0011                         20528          LGFR  1,1
0000F0FA E310 D308 0024          00000308  20529          STG   1,776(0,13)
0000F100 E330 D310 0024          00000310  20530          STG   3,784(0,13)
0000F106 E310 4098 0004          00000098  20531          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000F10C E310 4090 000B          00000090  20532          SLG   1,144(0,4)
0000F112 E310 D318 0024          00000318  20533          STG   1,792(0,13)
0000F118 E310 C098 0004          0000EE18  20534          LG    1,@lit_1948_1552
0000F11E 4110 1272               00000272  20535          LA    1,626(0,1)
0000F122 E310 D320 0024          00000320  20536          STG   1,800(0,13)
0000F128 E548 D328 04A7          00000328  20537          MVGHI 808(13),1191
0000F12E E380 D330 0024          00000330  20538          STG   8,816(0,13)
0000F134 E350 D338 0024          00000338  20539          STG   5,824(0,13)
0000F13A E3F0 D340 0024          00000340  20540          STG   15,832(0,13)
0000F140 41F0 D0C4               000000C4  20541          LA    15,196(0,13)
0000F144 E3F0 D348 0024          00000348  20542          STG   15,840(0,13)
0000F14A 4110 D2C8               000002C8  20543          LA    1,712(0,13)
0000F14E E3F0 C0D0 0004          0000EE50  20544          LG    15,@lit_1948_1568 ; rd_kafka_log0
0000F154                                   20545 @@gen_label2000 DS    0H
0000F154 05EF                              20546          BALR  14,15
0000F156                                   20547 @@gen_label2001 DS    0H
0000F156                                   20548 @L1952   DS    0H
0000F156 E54C 4188 FF65          00000188  20549          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000F15C E3C0 C0D8 001A          0000EE58  20550          ALGF  12,@lit_region_diff_1948_1_2
                                           20551          DROP  12
                        0000F6AC           20552          USING @REGION_1948_2,12
0000F162 47F0 C57A               0000FC26  20553          B     @_err_parse@1948@7
                                           20554          DROP  12
                        0000ED80           20555          USING @REGION_1948_1,12
0000F166                                   20556 @L1948   DS    0H
0000F166                                   20557 @L1944   DS    0H
                                           20558 * ***
                                           20559 * ***           if (((*MagicBytep < 0 || *MagicBytep > 2))) {
0000F166 E3F0 3000 0076          00000000  20560          LB    15,0(0,3)
0000F16C 12FF                              20561          LTR   15,15
0000F16E 4740 C40A               0000F18A  20562          BL    @L1968
0000F172 E3F0 3000 0076          00000000  20563          LB    15,0(0,3)
0000F178 A7FE 0002               00000002  20564          CHI   15,2
0000F17C 4720 C40A               0000F18A  20565          BH    *+14  Around region break
                                                                                                                           Page  408 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F180 E3C0 C0D8 001A          0000EE58  20566          ALGF  12,@lit_region_diff_1948_1_2
                                           20567          DROP  12
                        0000F6AC           20568          USING @REGION_1948_2,12
0000F186 47F0 C572               0000FC1E  20569          B     @L1963
                                           20570          DROP  12
                        0000ED80           20571          USING @REGION_1948_1,12
0000F18A                                   20572 @L1964   DS    0H
                                           20573 * ***                   int64_t Offset;
                                           20574 * ***                   int32_t Length;
                                           20575 * ***
                                           20576 * ***                   do { int64_t _v; do { size_t __len2 = (size_t)\
                                           20577 * (sizeof(_v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2\
                                           20578 * )) do { size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)-\
                                           20579 * >rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))\
                                           20580 * ) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)\
                                           20581 * ))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_re\
                                           20582 * ader.c",1197, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_\
                                           20583 * rkb"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__\
                                           20584 * tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do \
                                           20585 * { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock\
                                           20586 * ); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logna\
                                           20587 * me)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_lo\
                                           20588 * g0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk,\
                                           20589 *  _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buff\
                                           20590 * er underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "ex\
                                           20591 * pected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_ka\
                                           20592 * fka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.Api\
                                           20593 * Version, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_read\
                                           20594 * er)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1197, __len\
                                           20595 * 0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_\
                                           20596 * reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigat\
                                           20597 * ion : "incorrect broker.version.fallback?", __tmpstr); } while (0); \
                                           20598 * } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse;\
                                           20599 *  } while (0); } } while (0); } while (0); *(&Offset) = (_v); } while\
                                           20600 *  (0);
0000F18A                                   20601 @L1965   DS    0H
0000F18A                                   20602 @L1968   DS    0H
0000F18A A789 0008               00000008  20603          LGHI  8,8         ; 8
0000F18E 41F0 4078               00000078  20604          LA    15,120(0,4)
0000F192 E3F0 D2C8 0024          000002C8  20605          STG   15,712(0,13)
0000F198 41F0 D0B8               000000B8  20606          LA    15,184(0,13)
0000F19C E3F0 D2D0 0024          000002D0  20607          STG   15,720(0,13)
0000F1A2 E380 D2D8 0024          000002D8  20608          STG   8,728(0,13)
0000F1A8 4110 D2C8               000002C8  20609          LA    1,712(0,13)
0000F1AC E3F0 C0E0 0004          0000EE60  20610          LG    15,@lit_1948_1570 ; rd_slice_read
0000F1B2                                   20611 @@gen_label2004 DS    0H
0000F1B2 05EF                              20612          BALR  14,15
0000F1B4                                   20613 @@gen_label2005 DS    0H
0000F1B4 B902 00FF                         20614          LTGR  15,15
0000F1B8 4770 C6B8               0000F438  20615          BNZ   @L1971
0000F1BC                                   20616 @L1972   DS    0H
0000F1BC E390 4098 0004          00000098  20617          LG    9,152(0,4)  ; offset of end in rd_slice_s
                                                                                                                           Page  409 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F1C2 41F0 4078               00000078  20618          LA    15,120(0,4)
0000F1C6 E3F0 D2C8 0024          000002C8  20619          STG   15,712(0,13)
0000F1CC 4110 D2C8               000002C8  20620          LA    1,712(0,13)
0000F1D0 E3F0 C088 0004          0000EE08  20621          LG    15,@lit_1948_1550 ; rd_slice_abs_offset
0000F1D6                                   20622 @@gen_label2007 DS    0H
0000F1D6 05EF                              20623          BALR  14,15
0000F1D8                                   20624 @@gen_label2008 DS    0H
0000F1D8 B90B 009F                         20625          SLGR  9,15
0000F1DC B921 0089                         20626          CLGR  8,9
0000F1E0 47D0 C6B8               0000F438  20627          BNH   @L1975
0000F1E4                                   20628 @L1976   DS    0H
0000F1E4 1266                              20629          LTR   6,6
0000F1E6 47D0 C6A8               0000F428  20630          BNH   @L1979
0000F1EA                                   20631 @L1980   DS    0H
0000F1EA E3F0 4100 0002          00000100  20632          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F1F0 4770 C4B6               0000F236  20633          BNZ   @L1983
0000F1F4 E3F0 C0A0 0004          0000EE20  20634          LG    15,@lit_1948_1551
0000F1FA 4110 F2CE               000002CE  20635          LA    1,718(0,15)
0000F1FE E310 D2C8 0024          000002C8  20636          STG   1,712(0,13)
0000F204 E548 D2D0 04AD          000002D0  20637          MVGHI 720(13),1197
0000F20A E310 C098 0004          0000EE18  20638          LG    1,@lit_1948_1552
0000F210 4110 1272               00000272  20639          LA    1,626(0,1)
0000F214 E310 D2D8 0024          000002D8  20640          STG   1,728(0,13)
0000F21A D707 D2E0 D2E0 000002E0 000002E0  20641          XC    736(8,13),736(13)
0000F220 41F0 F362               00000362  20642          LA    15,866(0,15)
0000F224 E3F0 D2E8 0024          000002E8  20643          STG   15,744(0,13)
0000F22A 4110 D2C8               000002C8  20644          LA    1,712(0,13)
0000F22E E3F0 C090 0004          0000EE10  20645          LG    15,@lit_1948_1553 ; rd_kafka_crash
0000F234                                   20646 @@gen_label2012 DS    0H
0000F234 05EF                              20647          BALR  14,15
0000F236                                   20648 @@gen_label2013 DS    0H
0000F236                                   20649 @L1983   DS    0H
0000F236 41F0 D0C4               000000C4  20650          LA    15,196(0,13)
0000F23A E3F0 D2C8 0024          000002C8  20651          STG   15,712(0,13)
0000F240 E548 D2D0 0100          000002D0  20652          MVGHI 720(13),256
0000F246 E3F0 C0A0 0004          0000EE20  20653          LG    15,@lit_1948_1551
0000F24C 41F0 F37C               0000037C  20654          LA    15,892(0,15)
0000F250 E3F0 D2D8 0024          000002D8  20655          STG   15,728(0,13)
0000F256 4110 D2C8               000002C8  20656          LA    1,712(0,13)
0000F25A E3F0 C0A8 0004          0000EE28  20657          LG    15,@lit_1948_1555 ; snprintf
0000F260                                   20658 @@gen_label2014 DS    0H
0000F260 05EF                              20659          BALR  14,15
0000F262                                   20660 @@gen_label2015 DS    0H
0000F262 41F0 D0C4               000000C4  20661          LA    15,196(0,13)
0000F266 B904 001F                         20662          LGR   1,15
0000F26A A709 0000               00000000  20663          LGHI  0,0
0000F26E                                   20664 @@gen_label2016 DS 0H
0000F26E B25E 000F                         20665          SRST  0,15
0000F272 4710 C4EE               0000F26E  20666          BC  1,@@gen_label2016
0000F276 B90B 0001                         20667          SLGR  0,1
0000F27A A70F 0002               00000002  20668          CGHI  0,2
0000F27E 4770 C506               0000F286  20669          BNE   @L1985
                                                                                                                           Page  410 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F282 9200 D0C4      000000C4 00000000  20670          MVI   196(13),0
0000F286                                   20671 @L1984   DS    0H
0000F286                                   20672 @L1985   DS    0H
0000F286 E3F0 4100 0004          00000100  20673          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F28C A729 1638               00001638  20674          LGHI  2,5688      ; 5688
0000F290 41F2 F000               00000000  20675          LA    15,0(2,15)
0000F294 E3F0 D2C8 0024          000002C8  20676          STG   15,712(0,13)
0000F29A 4110 D2C8               000002C8  20677          LA    1,712(0,13)
0000F29E E3F0 C0B0 0004          0000EE30  20678          LG    15,@lit_1948_1557 ; mtx_lock
0000F2A4                                   20679 @@gen_label2018 DS    0H
0000F2A4 05EF                              20680          BALR  14,15
0000F2A6                                   20681 @@gen_label2019 DS    0H
0000F2A6 41F0 D1C4               000001C4  20682          LA    15,452(0,13)
0000F2AA E3F0 D2C8 0024          000002C8  20683          STG   15,712(0,13)
0000F2B0 E3F0 4100 0004          00000100  20684          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F2B6 A719 1630               00001630  20685          LGHI  1,5680      ; 5680
0000F2BA E3F1 F000 0004          00000000  20686          LG    15,0(1,15)
0000F2C0 E3F0 D2D0 0024          000002D0  20687          STG   15,720(0,13)
0000F2C6 E548 D2D8 0100          000002D8  20688          MVGHI 728(13),256
0000F2CC 4110 D2C8               000002C8  20689          LA    1,712(0,13)
0000F2D0 E3F0 C0B8 0004          0000EE38  20690          LG    15,@lit_1948_1559 ; rd_strlcpy
0000F2D6                                   20691 @@gen_label2020 DS    0H
0000F2D6 05EF                              20692          BALR  14,15
0000F2D8                                   20693 @@gen_label2021 DS    0H
0000F2D8 E3F0 4100 0004          00000100  20694          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F2DE 41F2 F000               00000000  20695          LA    15,0(2,15)
0000F2E2 E3F0 D2C8 0024          000002C8  20696          STG   15,712(0,13)
0000F2E8 4110 D2C8               000002C8  20697          LA    1,712(0,13)
0000F2EC E3F0 C0C0 0004          0000EE40  20698          LG    15,@lit_1948_1561 ; mtx_unlock
0000F2F2                                   20699 @@gen_label2022 DS    0H
0000F2F2 05EF                              20700          BALR  14,15
0000F2F4                                   20701 @@gen_label2023 DS    0H
0000F2F4 E3F0 40B8 0015          000000B8  20702          LGH   15,184(0,4)
0000F2FA E3F0 D2C8 0024          000002C8  20703          STG   15,712(0,13)
0000F300 4110 D2C8               000002C8  20704          LA    1,712(0,13)
0000F304 E3F0 C0C8 0004          0000EE48  20705          LG    15,@lit_1948_1562 ; rd_kafka_ApiKey2str
0000F30A                                   20706 @@gen_label2024 DS    0H
0000F30A 05EF                              20707          BALR  14,15
0000F30C                                   20708 @@gen_label2025 DS    0H
0000F30C B904 002F                         20709          LGR   2,15
0000F310 41F0 4078               00000078  20710          LA    15,120(0,4)
0000F314 E3F0 D2C8 0024          000002C8  20711          STG   15,712(0,13)
0000F31A 4110 D2C8               000002C8  20712          LA    1,712(0,13)
0000F31E E3F0 C078 0004          0000EDF8  20713          LG    15,@lit_1948_1547 ; rd_slice_offset
0000F324                                   20714 @@gen_label2026 DS    0H
0000F324 05EF                              20715          BALR  14,15
0000F326                                   20716 @@gen_label2027 DS    0H
0000F326 B904 003F                         20717          LGR   3,15
0000F32A E350 4098 0004          00000098  20718          LG    5,152(0,4)  ; offset of end in rd_slice_s
0000F330 41F0 4078               00000078  20719          LA    15,120(0,4)
0000F334 E3F0 D2C8 0024          000002C8  20720          STG   15,712(0,13)
0000F33A 4110 D2C8               000002C8  20721          LA    1,712(0,13)
                                                                                                                           Page  411 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F33E E3F0 C088 0004          0000EE08  20722          LG    15,@lit_1948_1550 ; rd_slice_abs_offset
0000F344                                   20723 @@gen_label2028 DS    0H
0000F344 05EF                              20724          BALR  14,15
0000F346                                   20725 @@gen_label2029 DS    0H
0000F346 B90B 005F                         20726          SLGR  5,15
0000F34A E3F0 41E8 0002          000001E8  20727          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000F350 4780 C5DE               0000F35E  20728          BZ    @L1988
0000F354 E3F0 41E8 0004          000001E8  20729          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000F35A 47F0 C5E8               0000F368  20730          B     @L1989
0000F35E                                   20731 @L1988   DS    0H
0000F35E E3F0 C0A0 0004          0000EE20  20732          LG    15,@lit_1948_1551
0000F364 41F0 F380               00000380  20733          LA    15,896(0,15)
0000F368                                   20734 @L1989   DS    0H
0000F368 E310 4100 0004          00000100  20735          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F36E E310 1FD0 0004          00000FD0  20736          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000F374 4110 1210               00000210  20737          LA    1,528(0,1)
0000F378 E310 D2C8 0024          000002C8  20738          STG   1,712(0,13)
0000F37E E310 4100 0004          00000100  20739          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F384 E310 1FD0 0004          00000FD0  20740          LG    1,4048(0,1)
0000F38A E310 D2D0 0024          000002D0  20741          STG   1,720(0,13)
0000F390 4110 D1C4               000001C4  20742          LA    1,452(0,13)
0000F394 E310 D2D8 0024          000002D8  20743          STG   1,728(0,13)
0000F39A B914 0016                         20744          LGFR  1,6
0000F39E E310 D2E0 0024          000002E0  20745          STG   1,736(0,13)
0000F3A4 D707 D2E8 D2E8 000002E8 000002E8  20746          XC    744(8,13),744(13)
0000F3AA E310 C0A0 0004          0000EE20  20747          LG    1,@lit_1948_1551
0000F3B0 4160 13A4               000003A4  20748          LA    6,932(0,1)
0000F3B4 E360 D2F0 0024          000002F0  20749          STG   6,752(0,13)
0000F3BA 4110 13B0               000003B0  20750          LA    1,944(0,1)
0000F3BE EB12 D2F8 0024          000002F8  20751          STMG  1,2,760(13)
0000F3C4 4810 40BA               000000BA  20752          LH    1,186(0,4)
0000F3C8 B914 0011                         20753          LGFR  1,1
0000F3CC E310 D308 0024          00000308  20754          STG   1,776(0,13)
0000F3D2 E330 D310 0024          00000310  20755          STG   3,784(0,13)
0000F3D8 E310 4098 0004          00000098  20756          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000F3DE E310 4090 000B          00000090  20757          SLG   1,144(0,4)
0000F3E4 E310 D318 0024          00000318  20758          STG   1,792(0,13)
0000F3EA E310 C098 0004          0000EE18  20759          LG    1,@lit_1948_1552
0000F3F0 4110 1272               00000272  20760          LA    1,626(0,1)
0000F3F4 E310 D320 0024          00000320  20761          STG   1,800(0,13)
0000F3FA E548 D328 04AD          00000328  20762          MVGHI 808(13),1197
0000F400 E380 D330 0024          00000330  20763          STG   8,816(0,13)
0000F406 E350 D338 0024          00000338  20764          STG   5,824(0,13)
0000F40C E3F0 D340 0024          00000340  20765          STG   15,832(0,13)
0000F412 41F0 D0C4               000000C4  20766          LA    15,196(0,13)
0000F416 E3F0 D348 0024          00000348  20767          STG   15,840(0,13)
0000F41C 4110 D2C8               000002C8  20768          LA    1,712(0,13)
0000F420 E3F0 C0D0 0004          0000EE50  20769          LG    15,@lit_1948_1568 ; rd_kafka_log0
0000F426                                   20770 @@gen_label2031 DS    0H
0000F426 05EF                              20771          BALR  14,15
                                                                                                                           Page  412 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F428                                   20772 @@gen_label2032 DS    0H
0000F428                                   20773 @L1979   DS    0H
0000F428 E54C 4188 FF65          00000188  20774          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000F42E E3C0 C0D8 001A          0000EE58  20775          ALGF  12,@lit_region_diff_1948_1_2
                                           20776          DROP  12
                        0000F6AC           20777          USING @REGION_1948_2,12
0000F434 47F0 C57A               0000FC26  20778          B     @_err_parse@1948@7
                                           20779          DROP  12
                        0000ED80           20780          USING @REGION_1948_1,12
0000F438                                   20781 @L1975   DS    0H
0000F438                                   20782 @L1971   DS    0H
0000F438 E3F0 D0B8 0004          000000B8  20783          LG    15,184(0,13) ; _v
0000F43E E3F0 D0A8 0024          000000A8  20784          STG   15,168(0,13)
                                           20785 * ***
                                           20786 * ***                   do { if ((((msetr->msetr_rkb)->rkb_rk->rk_conf\
                                           20787 * .debug & (0x40 | 0x80 | 0x400)))) { do { char _logname[256]; mtx_loc\
                                           20788 * k(&(msetr->msetr_rkb)->rkb_logname_lock); rd_strlcpy(_logname, msetr\
                                           20789 * ->msetr_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(msetr->mse\
                                           20790 * tr_rkb)->rkb_logname_lock); rd_kafka_log0(&(msetr->msetr_rkb)->rkb_r\
                                           20791 * k->rk_conf, (msetr->msetr_rkb)->rkb_rk, _logname, 7, (0x40 | 0x80 | \
                                           20792 * 0x400), "MAGICBYTE", "%s [%" "d" "]: " "Unsupported Message(Set) Mag\
                                           20793 * icByte %d at " "offset %" "lld" " " "(buffer position %" "zu" "/%" "\
                                           20794 * zu" "): skipping", rktp->rktp_rkt->rkt_topic->str, rktp->rktp_partit\
                                           20795 * ion, (int)*MagicBytep, Offset, read_offset, ((&rkbuf->rkbuf_reader)-\
                                           20796 * >end - (&rkbuf->rkbuf_reader)->start)); } while (0); } } while (0);
0000F444                                   20797 @L1990   DS    0H
0000F444 E3F0 2048 0004          00000048  20798          LG    15,72(0,2)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000F44A E3F0 FFD0 0004          00000FD0  20799          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000F450 58F0 F320               00000320  20800          L     15,800(0,15)
0000F454 C0FB 0000 04C0                    20801          NILF  15,X'000004C0'
0000F45A 12FF                              20802          LTR   15,15
0000F45C 4780 C80A               0000F58A  20803          BZ    @L1993
0000F460                                   20804 @L1994   DS    0H
0000F460 E3F0 2048 0004          00000048  20805          LG    15,72(0,2)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000F466 A789 1638               00001638  20806          LGHI  8,5688      ; 5688
0000F46A 41F8 F000               00000000  20807          LA    15,0(8,15)
0000F46E E3F0 D2C8 0024          000002C8  20808          STG   15,712(0,13)
0000F474 4110 D2C8               000002C8  20809          LA    1,712(0,13)
0000F478 E3F0 C0B0 0004          0000EE30  20810          LG    15,@lit_1948_1557 ; mtx_lock
0000F47E                                   20811 @@gen_label2034 DS    0H
0000F47E 05EF                              20812          BALR  14,15
0000F480                                   20813 @@gen_label2035 DS    0H
0000F480 41F0 D0C4               000000C4  20814          LA    15,196(0,13)
0000F484 E3F0 D2C8 0024          000002C8  20815          STG   15,712(0,13)
0000F48A E3F0 2048 0004          00000048  20816          LG    15,72(0,2)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000F490 A719 1630               00001630  20817          LGHI  1,5680      ; 5680
0000F494 E3F1 F000 0004          00000000  20818          LG    15,0(1,15)
0000F49A E3F0 D2D0 0024          000002D0  20819          STG   15,720(0,13)
0000F4A0 E548 D2D8 0100          000002D8  20820          MVGHI 728(13),256
                                                                                                                           Page  413 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F4A6 4110 D2C8               000002C8  20821          LA    1,712(0,13)
0000F4AA E3F0 C0B8 0004          0000EE38  20822          LG    15,@lit_1948_1559 ; rd_strlcpy
0000F4B0                                   20823 @@gen_label2036 DS    0H
0000F4B0 05EF                              20824          BALR  14,15
0000F4B2                                   20825 @@gen_label2037 DS    0H
0000F4B2 E3F0 2048 0004          00000048  20826          LG    15,72(0,2)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000F4B8 41F8 F000               00000000  20827          LA    15,0(8,15)
0000F4BC E3F0 D2C8 0024          000002C8  20828          STG   15,712(0,13)
0000F4C2 4110 D2C8               000002C8  20829          LA    1,712(0,13)
0000F4C6 E3F0 C0C0 0004          0000EE40  20830          LG    15,@lit_1948_1561 ; mtx_unlock
0000F4CC                                   20831 @@gen_label2038 DS    0H
0000F4CC 05EF                              20832          BALR  14,15
0000F4CE                                   20833 @@gen_label2039 DS    0H
0000F4CE E3F0 2048 0004          00000048  20834          LG    15,72(0,2)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000F4D4 E3F0 FFD0 0004          00000FD0  20835          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0000F4DA 41F0 F210               00000210  20836          LA    15,528(0,15)
0000F4DE E3F0 D2C8 0024          000002C8  20837          STG   15,712(0,13)
0000F4E4 E3F0 2048 0004          00000048  20838          LG    15,72(0,2)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0000F4EA E3F0 FFD0 0004          00000FD0  20839          LG    15,4048(0,15)
0000F4F0 E3F0 D2D0 0024          000002D0  20840          STG   15,720(0,13)
0000F4F6 41F0 D0C4               000000C4  20841          LA    15,196(0,13)
0000F4FA E3F0 D2D8 0024          000002D8  20842          STG   15,728(0,13)
0000F500 E548 D2E0 0007          000002E0  20843          MVGHI 736(13),7
0000F506 E548 D2E8 04C0          000002E8  20844          MVGHI 744(13),1216
0000F50C E3F0 C0A0 0004          0000EE20  20845          LG    15,@lit_1948_1551
0000F512 4110 F8BE               000008BE  20846          LA    1,2238(0,15)
0000F516 E310 D2F0 0024          000002F0  20847          STG   1,752(0,13)
0000F51C 41F0 F8C8               000008C8  20848          LA    15,2248(0,15)
0000F520 E3F0 D2F8 0024          000002F8  20849          STG   15,760(0,13)
0000F526 E3F0 5060 0004          00000060  20850          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000F52C E3F0 F080 0004          00000080  20851          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000F532 E3F0 F008 0004          00000008  20852          LG    15,8(0,15)
0000F538 E3F0 D300 0024          00000300  20853          STG   15,768(0,13)
0000F53E E3F0 5068 0014          00000068  20854          LGF   15,104(0,5)
0000F544 E3F0 D308 0024          00000308  20855          STG   15,776(0,13)
0000F54A E3F0 3000 0076          00000000  20856          LB    15,0(0,3)
0000F550 B914 00FF                         20857          LGFR  15,15
0000F554 E3F0 D310 0024          00000310  20858          STG   15,784(0,13)
0000F55A E3F0 D0A8 0004          000000A8  20859          LG    15,168(0,13) ; Offset
0000F560 E3F0 D318 0024          00000318  20860          STG   15,792(0,13)
0000F566 E370 D320 0024          00000320  20861          STG   7,800(0,13)
0000F56C E3F0 4098 0004          00000098  20862          LG    15,152(0,4) ; offset of end in rd_slice_s
0000F572 E3F0 4090 000B          00000090  20863          SLG   15,144(0,4)
0000F578 E3F0 D328 0024          00000328  20864          STG   15,808(0,13)
0000F57E 4110 D2C8               000002C8  20865          LA    1,712(0,13)
0000F582 E3F0 C0D0 0004          0000EE50  20866          LG    15,@lit_1948_1568 ; rd_kafka_log0
0000F588                                   20867 @@gen_label2040 DS    0H
0000F588 05EF                              20868          BALR  14,15
0000F58A                                   20869 @@gen_label2041 DS    0H
                                                                                                                           Page  414 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F58A                                   20870 @L1993   DS    0H
                                           20871 * ***
                                           20872 * ***   # 1211 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           20873 * ***                   if (Offset >= msetr->msetr_rktp->rktp_offsets.\
                                           20874 * fetch_offset) {
0000F58A E3F0 D0A8 0004          000000A8  20875          LG    15,168(0,13) ; Offset
0000F590 E310 2050 0004          00000050  20876          LG    1,80(0,2)   ; offset of msetr_rktp in rd_kafka_msgset_re*
                                                                ader_s
0000F596 E3F0 1238 0020          00000238  20877          CG    15,568(0,1)
0000F59C 4740 C8A8               0000F628  20878          BL    @L2001
                                           20879 * ***                           rd_kafka_consumer_err(
                                           20880 * ***                                   &msetr->msetr_rkq,
                                           20881 * ***                                   msetr->msetr_broker_id,
                                           20882 * ***                                   RD_KAFKA_RESP_ERR__NOT_IMPLEME\
                                           20883 * NTED,
                                           20884 * ***                                   msetr->msetr_tver->version, ((\
                                           20885 * void *)0), rktp, Offset,
                                           20886 * ***                                   "Unsupported Message(Set) Magi\
                                           20887 * cByte %d "
                                           20888 * ***                                   (int)*MagicBytep, Offset);
0000F5A0 4110 2068               00000068  20889          LA    1,104(0,2)
0000F5A4 E310 D2C8 0024          000002C8  20890          STG   1,712(0,13)
0000F5AA E310 2040 0014          00000040  20891          LGF   1,64(0,2)
0000F5B0 E310 D2D0 0024          000002D0  20892          STG   1,720(0,13)
0000F5B6 E548 D2D8 FF56          000002D8  20893          MVGHI 728(13),-170
0000F5BC E310 2038 0004          00000038  20894          LG    1,56(0,2)   ; offset of msetr_tver in rd_kafka_msgset_re*
                                                                ader_s
0000F5C2 E310 1008 0014          00000008  20895          LGF   1,8(0,1)
0000F5C8 E310 D2E0 0024          000002E0  20896          STG   1,736(0,13)
0000F5CE D707 D2E8 D2E8 000002E8 000002E8  20897          XC    744(8,13),744(13)
0000F5D4 E350 D2F0 0024          000002F0  20898          STG   5,752(0,13)
0000F5DA E3F0 D2F8 0024          000002F8  20899          STG   15,760(0,13)
                                           20900 * ***                                   "at offset %" "lld",
0000F5E0 E310 C0A0 0004          0000EE20  20901          LG    1,@lit_1948_1551
0000F5E6 4110 192A               0000092A  20902          LA    1,2346(0,1)
0000F5EA E310 D300 0024          00000300  20903          STG   1,768(0,13)
0000F5F0 E310 3000 0076          00000000  20904          LB    1,0(0,3)
0000F5F6 B914 0011                         20905          LGFR  1,1
0000F5FA E310 D308 0024          00000308  20906          STG   1,776(0,13)
0000F600 E3F0 D310 0024          00000310  20907          STG   15,784(0,13)
0000F606 4110 D2C8               000002C8  20908          LA    1,712(0,13)
0000F60A E3F0 C0E8 0004          0000EE68  20909          LG    15,@lit_1948_1599 ; rd_kafka_consumer_err
0000F610                                   20910 @@gen_label2043 DS    0H
0000F610 05EF                              20911          BALR  14,15
0000F612                                   20912 @@gen_label2044 DS    0H
                                           20913 * ***
                                           20914 * ***                           msetr->msetr_rktp->rktp_offsets.fetch_\
                                           20915 * offset = Offset+1;
0000F612 E3F0 2050 0004          00000050  20916          LG    15,80(0,2)  ; offset of msetr_rktp in rd_kafka_msgset_re*
                                                                ader_s
0000F618 A719 0001               00000001  20917          LGHI  1,1         ; 1
0000F61C E310 D0A8 0008          000000A8  20918          AG    1,168(0,13)
                                                                                                                           Page  415 
  Active Usings: @REGION_1948_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F622 E310 F238 0024          00000238  20919          STG   1,568(0,15) ; offset of rktp_offsets in rd_kafka_toppar_*
                                                                s
                                           20920 * ***                   }
0000F628                                   20921 @L1997   DS    0H
                                           20922 * ***
                                           20923 * ***
                                           20924 * ***
                                           20925 * ***
                                           20926 * ***                   do { int32_t _v; do { size_t __len2 = (size_t)\
                                           20927 * (sizeof(_v)); if (!rd_slice_read(&(rkbuf)->rkbuf_reader, &_v, __len2\
                                           20928 * )) do { size_t __len0 = (size_t)(__len2); if (((__len0 > ((&(rkbuf)-\
                                           20929 * >rkbuf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))\
                                           20930 * ) { do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb)\
                                           20931 * ))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_re\
                                           20932 * ader.c",1227, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_\
                                           20933 * rkb"); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__\
                                           20934 * tmpstr), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do \
                                           20935 * { char _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock\
                                           20936 * ); rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logna\
                                           20937 * me)); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_lo\
                                           20938 * g0(&(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk,\
                                           20939 *  _logname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buff\
                                           20940 * er underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "ex\
                                           20941 * pected %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_ka\
                                           20942 * fka_ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.Api\
                                           20943 * Version, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_read\
                                           20944 * er)->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1227, __len\
                                           20945 * 0, ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_\
                                           20946 * reader)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigat\
                                           20947 * ion : "incorrect broker.version.fallback?", __tmpstr); } while (0); \
                                           20948 * } (rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse;\
                                           20949 *  } while (0); } } while (0); } while (0); *(&Length) = (_v); } while\
                                           20950 *  (0);
0000F628                                   20951 @L1998   DS    0H
0000F628                                   20952 @L2001   DS    0H
0000F628 A729 0004               00000004  20953          LGHI  2,4         ; 4
0000F62C 41F0 4078               00000078  20954          LA    15,120(0,4)
0000F630 E3F0 D2C8 0024          000002C8  20955          STG   15,712(0,13)
0000F636 41F0 D0C0               000000C0  20956          LA    15,192(0,13)
0000F63A E3F0 D2D0 0024          000002D0  20957          STG   15,720(0,13)
0000F640 E320 D2D8 0024          000002D8  20958          STG   2,728(0,13)
0000F646 4110 D2C8               000002C8  20959          LA    1,712(0,13)
0000F64A E3F0 C0E0 0004          0000EE60  20960          LG    15,@lit_1948_1570 ; rd_slice_read
0000F650                                   20961 @@gen_label2045 DS    0H
0000F650 05EF                              20962          BALR  14,15
0000F652                                   20963 @@gen_label2046 DS    0H
0000F652 B902 00FF                         20964          LTGR  15,15
0000F656 4780 C8E4               0000F664  20965          BZ    *+14  Around region break
0000F65A E3C0 C0D8 001A          0000EE58  20966          ALGF  12,@lit_region_diff_1948_1_2
                                           20967          DROP  12
                        0000F6AC           20968          USING @REGION_1948_2,12
0000F660 47F0 C2AE               0000F95A  20969          B     @L2004
                                                                                                                           Page  416 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           20970          DROP  12
                        0000ED80           20971          USING @REGION_1948_1,12
0000F664                                   20972 @L2005   DS    0H
0000F664 E330 4098 0004          00000098  20973          LG    3,152(0,4)  ; offset of end in rd_slice_s
0000F66A 41F0 4078               00000078  20974          LA    15,120(0,4)
0000F66E E3F0 D2C8 0024          000002C8  20975          STG   15,712(0,13)
0000F674 4110 D2C8               000002C8  20976          LA    1,712(0,13)
0000F678 E3F0 C088 0004          0000EE08  20977          LG    15,@lit_1948_1550 ; rd_slice_abs_offset
0000F67E                                   20978 @@gen_label2048 DS    0H
0000F67E 05EF                              20979          BALR  14,15
0000F680                                   20980 @@gen_label2049 DS    0H
0000F680 B90B 003F                         20981          SLGR  3,15
0000F684 B921 0023                         20982          CLGR  2,3
0000F688 4720 C916               0000F696  20983          BH    *+14  Around region break
0000F68C E3C0 C0D8 001A          0000EE58  20984          ALGF  12,@lit_region_diff_1948_1_2
                                           20985          DROP  12
                        0000F6AC           20986          USING @REGION_1948_2,12
0000F692 47F0 C2AE               0000F95A  20987          B     @L2008
                                           20988          DROP  12
                        0000ED80           20989          USING @REGION_1948_1,12
0000F696                                   20990 @L2009   DS    0H
0000F696 1266                              20991          LTR   6,6
0000F698 4720 C926               0000F6A6  20992          BH    *+14  Around region break
0000F69C E3C0 C0D8 001A          0000EE58  20993          ALGF  12,@lit_region_diff_1948_1_2
                                           20994          DROP  12
                        0000F6AC           20995          USING @REGION_1948_2,12
0000F6A2 47F0 C2A4               0000F950  20996          B     @L2012
                                           20997          DROP  12
                        0000ED80           20998          USING @REGION_1948_1,12
0000F6A6 E3C0 C0D8 001A          0000EE58  20999          ALGF  12,@lit_region_diff_1948_1_2
0000F6AC                                   21000 @REGION_1948_2 DS 0H
                                           21001          DROP  12
                        0000F6AC           21002          USING @REGION_1948_2,12
0000F6AC                                   21003 @L2013   DS    0H
0000F6AC E3F0 4100 0002          00000100  21004          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F6B2 4770 C04C               0000F6F8  21005          BNZ   @L2016
0000F6B6 E3F0 C184 0004          0000F830  21006          LG    15,@lit_1948_1604
0000F6BC 4110 F2CE               000002CE  21007          LA    1,718(0,15)
0000F6C0 E310 D2C8 0024          000002C8  21008          STG   1,712(0,13)
0000F6C6 E548 D2D0 04CB          000002D0  21009          MVGHI 720(13),1227
0000F6CC E310 C17C 0004          0000F828  21010          LG    1,@lit_1948_1605
0000F6D2 4110 1272               00000272  21011          LA    1,626(0,1)
0000F6D6 E310 D2D8 0024          000002D8  21012          STG   1,728(0,13)
0000F6DC D707 D2E0 D2E0 000002E0 000002E0  21013          XC    736(8,13),736(13)
0000F6E2 41F0 F362               00000362  21014          LA    15,866(0,15)
0000F6E6 E3F0 D2E8 0024          000002E8  21015          STG   15,744(0,13)
0000F6EC 4110 D2C8               000002C8  21016          LA    1,712(0,13)
0000F6F0 E3F0 C174 0004          0000F820  21017          LG    15,@lit_1948_1606 ; rd_kafka_crash
0000F6F6                                   21018 @@gen_label2053 DS    0H
0000F6F6 05EF                              21019          BALR  14,15
0000F6F8                                   21020 @@gen_label2054 DS    0H
0000F6F8                                   21021 @L2016   DS    0H
                                                                                                                           Page  417 
  Active Usings: @REGION_1948_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F6F8 41F0 D0C4               000000C4  21022          LA    15,196(0,13)
0000F6FC E3F0 D2C8 0024          000002C8  21023          STG   15,712(0,13)
0000F702 E548 D2D0 0100          000002D0  21024          MVGHI 720(13),256
0000F708 E3F0 C184 0004          0000F830  21025          LG    15,@lit_1948_1604
0000F70E 41F0 F37C               0000037C  21026          LA    15,892(0,15)
0000F712 E3F0 D2D8 0024          000002D8  21027          STG   15,728(0,13)
0000F718 4110 D2C8               000002C8  21028          LA    1,712(0,13)
0000F71C E3F0 C18C 0004          0000F838  21029          LG    15,@lit_1948_1608 ; snprintf
0000F722                                   21030 @@gen_label2055 DS    0H
0000F722 05EF                              21031          BALR  14,15
0000F724                                   21032 @@gen_label2056 DS    0H
0000F724 41F0 D0C4               000000C4  21033          LA    15,196(0,13)
0000F728 B904 001F                         21034          LGR   1,15
0000F72C A709 0000               00000000  21035          LGHI  0,0
0000F730                                   21036 @@gen_label2057 DS 0H
0000F730 B25E 000F                         21037          SRST  0,15
0000F734 4710 C084               0000F730  21038          BC  1,@@gen_label2057
0000F738 B90B 0001                         21039          SLGR  0,1
0000F73C A70F 0002               00000002  21040          CGHI  0,2
0000F740 4770 C09C               0000F748  21041          BNE   @L2018
0000F744 9200 D0C4      000000C4 00000000  21042          MVI   196(13),0
0000F748                                   21043 @L2017   DS    0H
0000F748                                   21044 @L2018   DS    0H
0000F748 E3F0 4100 0004          00000100  21045          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F74E A739 1638               00001638  21046          LGHI  3,5688      ; 5688
0000F752 41F3 F000               00000000  21047          LA    15,0(3,15)
0000F756 E3F0 D2C8 0024          000002C8  21048          STG   15,712(0,13)
0000F75C 4110 D2C8               000002C8  21049          LA    1,712(0,13)
0000F760 E3F0 C194 0004          0000F840  21050          LG    15,@lit_1948_1610 ; mtx_lock
0000F766                                   21051 @@gen_label2059 DS    0H
0000F766 05EF                              21052          BALR  14,15
0000F768                                   21053 @@gen_label2060 DS    0H
0000F768 41F0 D1C4               000001C4  21054          LA    15,452(0,13)
0000F76C E3F0 D2C8 0024          000002C8  21055          STG   15,712(0,13)
0000F772 E3F0 4100 0004          00000100  21056          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F778 A719 1630               00001630  21057          LGHI  1,5680      ; 5680
0000F77C E3F1 F000 0004          00000000  21058          LG    15,0(1,15)
0000F782 E3F0 D2D0 0024          000002D0  21059          STG   15,720(0,13)
0000F788 E548 D2D8 0100          000002D8  21060          MVGHI 728(13),256
0000F78E 4110 D2C8               000002C8  21061          LA    1,712(0,13)
0000F792 E3F0 C19C 0004          0000F848  21062          LG    15,@lit_1948_1612 ; rd_strlcpy
0000F798                                   21063 @@gen_label2061 DS    0H
0000F798 05EF                              21064          BALR  14,15
0000F79A                                   21065 @@gen_label2062 DS    0H
0000F79A E3F0 4100 0004          00000100  21066          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F7A0 41F3 F000               00000000  21067          LA    15,0(3,15)
0000F7A4 E3F0 D2C8 0024          000002C8  21068          STG   15,712(0,13)
0000F7AA 4110 D2C8               000002C8  21069          LA    1,712(0,13)
0000F7AE E3F0 C1A4 0004          0000F850  21070          LG    15,@lit_1948_1614 ; mtx_unlock
0000F7B4                                   21071 @@gen_label2063 DS    0H
0000F7B4 05EF                              21072          BALR  14,15
0000F7B6                                   21073 @@gen_label2064 DS    0H
                                                                                                                           Page  418 
  Active Usings: @REGION_1948_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F7B6 E3F0 40B8 0015          000000B8  21074          LGH   15,184(0,4)
0000F7BC E3F0 D2C8 0024          000002C8  21075          STG   15,712(0,13)
0000F7C2 4110 D2C8               000002C8  21076          LA    1,712(0,13)
0000F7C6 E3F0 C1AC 0004          0000F858  21077          LG    15,@lit_1948_1615 ; rd_kafka_ApiKey2str
0000F7CC                                   21078 @@gen_label2065 DS    0H
0000F7CC 05EF                              21079          BALR  14,15
0000F7CE                                   21080 @@gen_label2066 DS    0H
0000F7CE B904 003F                         21081          LGR   3,15
0000F7D2 41F0 4078               00000078  21082          LA    15,120(0,4)
0000F7D6 E3F0 D2C8 0024          000002C8  21083          STG   15,712(0,13)
0000F7DC 4110 D2C8               000002C8  21084          LA    1,712(0,13)
0000F7E0 E3F0 C1B4 0004          0000F860  21085          LG    15,@lit_1948_1616 ; rd_slice_offset
0000F7E6                                   21086 @@gen_label2067 DS    0H
0000F7E6 05EF                              21087          BALR  14,15
0000F7E8                                   21088 @@gen_label2068 DS    0H
0000F7E8 B904 005F                         21089          LGR   5,15
0000F7EC E370 4098 0004          00000098  21090          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000F7F2 41F0 4078               00000078  21091          LA    15,120(0,4)
0000F7F6 E3F0 D2C8 0024          000002C8  21092          STG   15,712(0,13)
0000F7FC 4110 D2C8               000002C8  21093          LA    1,712(0,13)
0000F800 E3F0 C1BC 0004          0000F868  21094          LG    15,@lit_1948_1617 ; rd_slice_abs_offset
0000F806                                   21095 @@gen_label2069 DS    0H
0000F806 05EF                              21096          BALR  14,15
0000F808                                   21097 @@gen_label2070 DS    0H
0000F808 B90B 007F                         21098          SLGR  7,15
0000F80C E3F0 41E8 0002          000001E8  21099          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000F812 4780 C1D4               0000F880  21100          BZ    @L2021
0000F816 E3F0 41E8 0004          000001E8  21101          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000F81C 47F0 C1DE               0000F88A  21102          B     @L2022
0000F820                                   21103          DS    0D
0000F820 0000000000000000                  21104 @lit_1948_1606 DC AD(rd_kafka_crash)
0000F828 0000000000012808                  21105 @lit_1948_1605 DC AD(@DATA)
0000F830 0000000000012AB8                  21106 @lit_1948_1604 DC AD(@strings@)
0000F838 0000000000000000                  21107 @lit_1948_1608 DC AD(snprintf)
0000F840 0000000000000000                  21108 @lit_1948_1610 DC AD(mtx_lock)
0000F848 0000000000001668                  21109 @lit_1948_1612 DC AD(rd_strlcpy)
0000F850 0000000000000000                  21110 @lit_1948_1614 DC AD(mtx_unlock)
0000F858 00000000000014D0                  21111 @lit_1948_1615 DC AD(rd_kafka_$Api$Key2str)
0000F860 00000000000012B8                  21112 @lit_1948_1616 DC AD(rd_slice_offset)
0000F868 0000000000001210                  21113 @lit_1948_1617 DC AD(rd_slice_abs_offset)
0000F870 0000000000000000                  21114 @lit_1948_1621 DC AD(rd_kafka_log0)
0000F878 0000000000000000                  21115 @lit_1948_1622 DC AD(rd_slice_read)
0000F880                                   21116 @L2021   DS    0H
0000F880 E3F0 C184 0004          0000F830  21117          LG    15,@lit_1948_1604
0000F886 41F0 F380               00000380  21118          LA    15,896(0,15)
0000F88A                                   21119 @L2022   DS    0H
0000F88A E310 4100 0004          00000100  21120          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F890 E310 1FD0 0004          00000FD0  21121          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000F896 4110 1210               00000210  21122          LA    1,528(0,1)
0000F89A E310 D2C8 0024          000002C8  21123          STG   1,712(0,13)
                                                                                                                           Page  419 
  Active Usings: @REGION_1948_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F8A0 E310 4100 0004          00000100  21124          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F8A6 E310 1FD0 0004          00000FD0  21125          LG    1,4048(0,1)
0000F8AC E310 D2D0 0024          000002D0  21126          STG   1,720(0,13)
0000F8B2 4110 D1C4               000001C4  21127          LA    1,452(0,13)
0000F8B6 E310 D2D8 0024          000002D8  21128          STG   1,728(0,13)
0000F8BC B914 0016                         21129          LGFR  1,6
0000F8C0 E310 D2E0 0024          000002E0  21130          STG   1,736(0,13)
0000F8C6 D707 D2E8 D2E8 000002E8 000002E8  21131          XC    744(8,13),744(13)
0000F8CC E310 C184 0004          0000F830  21132          LG    1,@lit_1948_1604
0000F8D2 4160 13A4               000003A4  21133          LA    6,932(0,1)
0000F8D6 E360 D2F0 0024          000002F0  21134          STG   6,752(0,13)
0000F8DC 4110 13B0               000003B0  21135          LA    1,944(0,1)
0000F8E0 E310 D2F8 0024          000002F8  21136          STG   1,760(0,13)
0000F8E6 E330 D300 0024          00000300  21137          STG   3,768(0,13)
0000F8EC 4810 40BA               000000BA  21138          LH    1,186(0,4)
0000F8F0 B914 0011                         21139          LGFR  1,1
0000F8F4 E310 D308 0024          00000308  21140          STG   1,776(0,13)
0000F8FA E350 D310 0024          00000310  21141          STG   5,784(0,13)
0000F900 E310 4098 0004          00000098  21142          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000F906 E310 4090 000B          00000090  21143          SLG   1,144(0,4)
0000F90C E310 D318 0024          00000318  21144          STG   1,792(0,13)
0000F912 E310 C17C 0004          0000F828  21145          LG    1,@lit_1948_1605
0000F918 4110 1272               00000272  21146          LA    1,626(0,1)
0000F91C E310 D320 0024          00000320  21147          STG   1,800(0,13)
0000F922 E548 D328 04CB          00000328  21148          MVGHI 808(13),1227
0000F928 E320 D330 0024          00000330  21149          STG   2,816(0,13)
0000F92E E370 D338 0024          00000338  21150          STG   7,824(0,13)
0000F934 E3F0 D340 0024          00000340  21151          STG   15,832(0,13)
0000F93A 41F0 D0C4               000000C4  21152          LA    15,196(0,13)
0000F93E E3F0 D348 0024          00000348  21153          STG   15,840(0,13)
0000F944 4110 D2C8               000002C8  21154          LA    1,712(0,13)
0000F948 E3F0 C1C4 0004          0000F870  21155          LG    15,@lit_1948_1621 ; rd_kafka_log0
0000F94E                                   21156 @@gen_label2072 DS    0H
0000F94E 05EF                              21157          BALR  14,15
0000F950                                   21158 @@gen_label2073 DS    0H
0000F950                                   21159 @L2012   DS    0H
0000F950 E54C 4188 FF65          00000188  21160          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000F956 47F0 C57A               0000FC26  21161          B     @_err_parse@1948@7
0000F95A                                   21162 @L2008   DS    0H
0000F95A                                   21163 @L2004   DS    0H
0000F95A 58F0 D0C0               000000C0  21164          L     15,192(0,13) ; _v
0000F95E 50F0 D0B0               000000B0  21165          ST    15,176(0,13)
                                           21166 * ***                   do { size_t __len1 = (size_t)(Length); if (__l\
                                           21167 * en1 && !rd_slice_read(&(rkbuf)->rkbuf_reader, ((void *)0), __len1)) \
                                           21168 * do { size_t __len0 = (size_t)(__len1); if (((__len0 > ((&(rkbuf)->rk\
                                           21169 * buf_reader)->end - rd_slice_abs_offset(&(rkbuf)->rkbuf_reader))))) {\
                                           21170 *  do { if (log_decode_errors > 0) { do { if (((!(rkbuf->rkbuf_rkb))))\
                                           21171 *  rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reade\
                                           21172 * r.c",1228, __FUNCTION__, (((void *)0)), "assert: " "rkbuf->rkbuf_rkb\
                                           21173 * "); } while (0); char __tmpstr[256]; snprintf(__tmpstr, sizeof(__tmp\
                                           21174 * str), ": "); if (__strlen(__tmpstr) == 2) __tmpstr[0] = '\0'; do { c\
                                           21175 * har _logname[256]; mtx_lock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); \
                                                                                                                           Page  420 
  Active Usings: @REGION_1948_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           21176 * rd_strlcpy(_logname, rkbuf->rkbuf_rkb->rkb_logname, sizeof(_logname)\
                                           21177 * ); mtx_unlock(&(rkbuf->rkbuf_rkb)->rkb_logname_lock); rd_kafka_log0(\
                                           21178 * &(rkbuf->rkbuf_rkb)->rkb_rk->rk_conf, (rkbuf->rkbuf_rkb)->rkb_rk, _l\
                                           21179 * ogname, log_decode_errors, 0x0, "PROTOUFLOW", "Protocol read buffer \
                                           21180 * underflow " "for %s v%hd " "at %" "zu" "/%" "zu" " (%s:%i): " "expec\
                                           21181 * ted %" "zu" " bytes > " "%" "zu" " remaining bytes (%s)%s", rd_kafka\
                                           21182 * _ApiKey2str(rkbuf->rkbuf_reqhdr. ApiKey), rkbuf->rkbuf_reqhdr.ApiVer\
                                           21183 * sion, rd_slice_offset(&rkbuf->rkbuf_reader), ((&rkbuf->rkbuf_reader)\
                                           21184 * ->end - (&rkbuf->rkbuf_reader)->start), __FUNCTION__, 1228, __len0, \
                                           21185 * ((&rkbuf->rkbuf_reader)->end - rd_slice_abs_offset(&rkbuf->rkbuf_rea\
                                           21186 * der)), rkbuf->rkbuf_uflow_mitigation ? rkbuf->rkbuf_uflow_mitigation\
                                           21187 *  : "incorrect broker.version.fallback?", __tmpstr); } while (0); } (\
                                           21188 * rkbuf)->rkbuf_err = RD_KAFKA_RESP_ERR__UNDERFLOW; goto err_parse; } \
                                           21189 * while (0); } } while (0); } while (0);
0000F962                                   21190 @L2023   DS    0H
0000F962 E320 D0B0 0014          000000B0  21191          LGF   2,176(0,13) ; Length
0000F968 B902 00F2                         21192          LTGR  15,2
0000F96C 4780 C56A               0000FC16  21193          BZ    @L2026
0000F970 41F0 4078               00000078  21194          LA    15,120(0,4)
0000F974 E3F0 D2C8 0024          000002C8  21195          STG   15,712(0,13)
0000F97A D707 D2D0 D2D0 000002D0 000002D0  21196          XC    720(8,13),720(13)
0000F980 E320 D2D8 0024          000002D8  21197          STG   2,728(0,13)
0000F986 4110 D2C8               000002C8  21198          LA    1,712(0,13)
0000F98A E3F0 C1CC 0004          0000F878  21199          LG    15,@lit_1948_1622 ; rd_slice_read
0000F990                                   21200 @@gen_label2075 DS    0H
0000F990 05EF                              21201          BALR  14,15
0000F992                                   21202 @@gen_label2076 DS    0H
0000F992 B902 00FF                         21203          LTGR  15,15
0000F996 4770 C56A               0000FC16  21204          BNZ   @L2026
0000F99A                                   21205 @L2027   DS    0H
0000F99A E330 4098 0004          00000098  21206          LG    3,152(0,4)  ; offset of end in rd_slice_s
0000F9A0 41F0 4078               00000078  21207          LA    15,120(0,4)
0000F9A4 E3F0 D2C8 0024          000002C8  21208          STG   15,712(0,13)
0000F9AA 4110 D2C8               000002C8  21209          LA    1,712(0,13)
0000F9AE E3F0 C1BC 0004          0000F868  21210          LG    15,@lit_1948_1617 ; rd_slice_abs_offset
0000F9B4                                   21211 @@gen_label2078 DS    0H
0000F9B4 05EF                              21212          BALR  14,15
0000F9B6                                   21213 @@gen_label2079 DS    0H
0000F9B6 B90B 003F                         21214          SLGR  3,15
0000F9BA B921 0023                         21215          CLGR  2,3
0000F9BE 47D0 C56A               0000FC16  21216          BNH   @L2030
0000F9C2                                   21217 @L2031   DS    0H
0000F9C2 1266                              21218          LTR   6,6
0000F9C4 47D0 C560               0000FC0C  21219          BNH   @L2034
0000F9C8                                   21220 @L2035   DS    0H
0000F9C8 E3F0 4100 0002          00000100  21221          LTG   15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000F9CE 4770 C368               0000FA14  21222          BNZ   @L2038
0000F9D2 E3F0 C184 0004          0000F830  21223          LG    15,@lit_1948_1604
0000F9D8 4110 F2CE               000002CE  21224          LA    1,718(0,15)
0000F9DC E310 D2C8 0024          000002C8  21225          STG   1,712(0,13)
0000F9E2 E548 D2D0 04CC          000002D0  21226          MVGHI 720(13),1228
0000F9E8 E310 C17C 0004          0000F828  21227          LG    1,@lit_1948_1605
                                                                                                                           Page  421 
  Active Usings: @REGION_1948_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000F9EE 4110 1272               00000272  21228          LA    1,626(0,1)
0000F9F2 E310 D2D8 0024          000002D8  21229          STG   1,728(0,13)
0000F9F8 D707 D2E0 D2E0 000002E0 000002E0  21230          XC    736(8,13),736(13)
0000F9FE 41F0 F362               00000362  21231          LA    15,866(0,15)
0000FA02 E3F0 D2E8 0024          000002E8  21232          STG   15,744(0,13)
0000FA08 4110 D2C8               000002C8  21233          LA    1,712(0,13)
0000FA0C E3F0 C174 0004          0000F820  21234          LG    15,@lit_1948_1606 ; rd_kafka_crash
0000FA12                                   21235 @@gen_label2083 DS    0H
0000FA12 05EF                              21236          BALR  14,15
0000FA14                                   21237 @@gen_label2084 DS    0H
0000FA14                                   21238 @L2038   DS    0H
0000FA14 41F0 D0C4               000000C4  21239          LA    15,196(0,13)
0000FA18 E3F0 D2C8 0024          000002C8  21240          STG   15,712(0,13)
0000FA1E E548 D2D0 0100          000002D0  21241          MVGHI 720(13),256
0000FA24 E3F0 C184 0004          0000F830  21242          LG    15,@lit_1948_1604
0000FA2A 41F0 F37C               0000037C  21243          LA    15,892(0,15)
0000FA2E E3F0 D2D8 0024          000002D8  21244          STG   15,728(0,13)
0000FA34 4110 D2C8               000002C8  21245          LA    1,712(0,13)
0000FA38 E3F0 C18C 0004          0000F838  21246          LG    15,@lit_1948_1608 ; snprintf
0000FA3E                                   21247 @@gen_label2085 DS    0H
0000FA3E 05EF                              21248          BALR  14,15
0000FA40                                   21249 @@gen_label2086 DS    0H
0000FA40 41F0 D0C4               000000C4  21250          LA    15,196(0,13)
0000FA44 B904 001F                         21251          LGR   1,15
0000FA48 A709 0000               00000000  21252          LGHI  0,0
0000FA4C                                   21253 @@gen_label2087 DS 0H
0000FA4C B25E 000F                         21254          SRST  0,15
0000FA50 4710 C3A0               0000FA4C  21255          BC  1,@@gen_label2087
0000FA54 B90B 0001                         21256          SLGR  0,1
0000FA58 A70F 0002               00000002  21257          CGHI  0,2
0000FA5C 4770 C3B8               0000FA64  21258          BNE   @L2040
0000FA60 9200 D0C4      000000C4 00000000  21259          MVI   196(13),0
0000FA64                                   21260 @L2039   DS    0H
0000FA64                                   21261 @L2040   DS    0H
0000FA64 E3F0 4100 0004          00000100  21262          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000FA6A A739 1638               00001638  21263          LGHI  3,5688      ; 5688
0000FA6E 41F3 F000               00000000  21264          LA    15,0(3,15)
0000FA72 E3F0 D2C8 0024          000002C8  21265          STG   15,712(0,13)
0000FA78 4110 D2C8               000002C8  21266          LA    1,712(0,13)
0000FA7C E3F0 C194 0004          0000F840  21267          LG    15,@lit_1948_1610 ; mtx_lock
0000FA82                                   21268 @@gen_label2089 DS    0H
0000FA82 05EF                              21269          BALR  14,15
0000FA84                                   21270 @@gen_label2090 DS    0H
0000FA84 41F0 D1C4               000001C4  21271          LA    15,452(0,13)
0000FA88 E3F0 D2C8 0024          000002C8  21272          STG   15,712(0,13)
0000FA8E E3F0 4100 0004          00000100  21273          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000FA94 A719 1630               00001630  21274          LGHI  1,5680      ; 5680
0000FA98 E3F1 F000 0004          00000000  21275          LG    15,0(1,15)
0000FA9E E3F0 D2D0 0024          000002D0  21276          STG   15,720(0,13)
0000FAA4 E548 D2D8 0100          000002D8  21277          MVGHI 728(13),256
0000FAAA 4110 D2C8               000002C8  21278          LA    1,712(0,13)
0000FAAE E3F0 C19C 0004          0000F848  21279          LG    15,@lit_1948_1612 ; rd_strlcpy
                                                                                                                           Page  422 
  Active Usings: @REGION_1948_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000FAB4                                   21280 @@gen_label2091 DS    0H
0000FAB4 05EF                              21281          BALR  14,15
0000FAB6                                   21282 @@gen_label2092 DS    0H
0000FAB6 E3F0 4100 0004          00000100  21283          LG    15,256(0,4) ; offset of rkbuf_rkb in rd_kafka_buf_s
0000FABC 41F3 F000               00000000  21284          LA    15,0(3,15)
0000FAC0 E3F0 D2C8 0024          000002C8  21285          STG   15,712(0,13)
0000FAC6 4110 D2C8               000002C8  21286          LA    1,712(0,13)
0000FACA E3F0 C1A4 0004          0000F850  21287          LG    15,@lit_1948_1614 ; mtx_unlock
0000FAD0                                   21288 @@gen_label2093 DS    0H
0000FAD0 05EF                              21289          BALR  14,15
0000FAD2                                   21290 @@gen_label2094 DS    0H
0000FAD2 E3F0 40B8 0015          000000B8  21291          LGH   15,184(0,4)
0000FAD8 E3F0 D2C8 0024          000002C8  21292          STG   15,712(0,13)
0000FADE 4110 D2C8               000002C8  21293          LA    1,712(0,13)
0000FAE2 E3F0 C1AC 0004          0000F858  21294          LG    15,@lit_1948_1615 ; rd_kafka_ApiKey2str
0000FAE8                                   21295 @@gen_label2095 DS    0H
0000FAE8 05EF                              21296          BALR  14,15
0000FAEA                                   21297 @@gen_label2096 DS    0H
0000FAEA B904 003F                         21298          LGR   3,15
0000FAEE 41F0 4078               00000078  21299          LA    15,120(0,4)
0000FAF2 E3F0 D2C8 0024          000002C8  21300          STG   15,712(0,13)
0000FAF8 4110 D2C8               000002C8  21301          LA    1,712(0,13)
0000FAFC E3F0 C1B4 0004          0000F860  21302          LG    15,@lit_1948_1616 ; rd_slice_offset
0000FB02                                   21303 @@gen_label2097 DS    0H
0000FB02 05EF                              21304          BALR  14,15
0000FB04                                   21305 @@gen_label2098 DS    0H
0000FB04 B904 005F                         21306          LGR   5,15
0000FB08 E370 4098 0004          00000098  21307          LG    7,152(0,4)  ; offset of end in rd_slice_s
0000FB0E 41F0 4078               00000078  21308          LA    15,120(0,4)
0000FB12 E3F0 D2C8 0024          000002C8  21309          STG   15,712(0,13)
0000FB18 4110 D2C8               000002C8  21310          LA    1,712(0,13)
0000FB1C E3F0 C1BC 0004          0000F868  21311          LG    15,@lit_1948_1617 ; rd_slice_abs_offset
0000FB22                                   21312 @@gen_label2099 DS    0H
0000FB22 05EF                              21313          BALR  14,15
0000FB24                                   21314 @@gen_label2100 DS    0H
0000FB24 B90B 007F                         21315          SLGR  7,15
0000FB28 E3F0 41E8 0002          000001E8  21316          LTG   15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000FB2E 4780 C490               0000FB3C  21317          BZ    @L2043
0000FB32 E3F0 41E8 0004          000001E8  21318          LG    15,488(0,4) ; offset of rkbuf_uflow_mitigation in rd_kaf*
                                                                ka_buf_s
0000FB38 47F0 C49A               0000FB46  21319          B     @L2044
0000FB3C                                   21320 @L2043   DS    0H
0000FB3C E3F0 C184 0004          0000F830  21321          LG    15,@lit_1948_1604
0000FB42 41F0 F380               00000380  21322          LA    15,896(0,15)
0000FB46                                   21323 @L2044   DS    0H
0000FB46 E310 4100 0004          00000100  21324          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000FB4C E310 1FD0 0004          00000FD0  21325          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0000FB52 4110 1210               00000210  21326          LA    1,528(0,1)
0000FB56 E310 D2C8 0024          000002C8  21327          STG   1,712(0,13)
0000FB5C E310 4100 0004          00000100  21328          LG    1,256(0,4)  ; offset of rkbuf_rkb in rd_kafka_buf_s
0000FB62 E310 1FD0 0004          00000FD0  21329          LG    1,4048(0,1)
                                                                                                                           Page  423 
  Active Usings: @REGION_1948_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000FB68 E310 D2D0 0024          000002D0  21330          STG   1,720(0,13)
0000FB6E 4110 D1C4               000001C4  21331          LA    1,452(0,13)
0000FB72 E310 D2D8 0024          000002D8  21332          STG   1,728(0,13)
0000FB78 B914 0016                         21333          LGFR  1,6
0000FB7C E310 D2E0 0024          000002E0  21334          STG   1,736(0,13)
0000FB82 D707 D2E8 D2E8 000002E8 000002E8  21335          XC    744(8,13),744(13)
0000FB88 E310 C184 0004          0000F830  21336          LG    1,@lit_1948_1604
0000FB8E 4160 13A4               000003A4  21337          LA    6,932(0,1)
0000FB92 E360 D2F0 0024          000002F0  21338          STG   6,752(0,13)
0000FB98 4110 13B0               000003B0  21339          LA    1,944(0,1)
0000FB9C E310 D2F8 0024          000002F8  21340          STG   1,760(0,13)
0000FBA2 E330 D300 0024          00000300  21341          STG   3,768(0,13)
0000FBA8 4810 40BA               000000BA  21342          LH    1,186(0,4)
0000FBAC B914 0011                         21343          LGFR  1,1
0000FBB0 E310 D308 0024          00000308  21344          STG   1,776(0,13)
0000FBB6 E350 D310 0024          00000310  21345          STG   5,784(0,13)
0000FBBC E310 4098 0004          00000098  21346          LG    1,152(0,4)  ; offset of end in rd_slice_s
0000FBC2 E310 4090 000B          00000090  21347          SLG   1,144(0,4)
0000FBC8 E310 D318 0024          00000318  21348          STG   1,792(0,13)
0000FBCE E310 C17C 0004          0000F828  21349          LG    1,@lit_1948_1605
0000FBD4 4110 1272               00000272  21350          LA    1,626(0,1)
0000FBD8 E310 D320 0024          00000320  21351          STG   1,800(0,13)
0000FBDE E548 D328 04CC          00000328  21352          MVGHI 808(13),1228
0000FBE4 E320 D330 0024          00000330  21353          STG   2,816(0,13)
0000FBEA E370 D338 0024          00000338  21354          STG   7,824(0,13)
0000FBF0 E3F0 D340 0024          00000340  21355          STG   15,832(0,13)
0000FBF6 41F0 D0C4               000000C4  21356          LA    15,196(0,13)
0000FBFA E3F0 D348 0024          00000348  21357          STG   15,840(0,13)
0000FC00 4110 D2C8               000002C8  21358          LA    1,712(0,13)
0000FC04 E3F0 C1C4 0004          0000F870  21359          LG    15,@lit_1948_1621 ; rd_kafka_log0
0000FC0A                                   21360 @@gen_label2102 DS    0H
0000FC0A 05EF                              21361          BALR  14,15
0000FC0C                                   21362 @@gen_label2103 DS    0H
0000FC0C                                   21363 @L2034   DS    0H
0000FC0C E54C 4188 FF65          00000188  21364          MVHI  392(4),-155 ; offset of rkbuf_err in rd_kafka_buf_s
0000FC12 47F0 C57A               0000FC26  21365          B     @_err_parse@1948@7
0000FC16                                   21366 @L2030   DS    0H
0000FC16                                   21367 @L2026   DS    0H
                                           21368 * ***
                                           21369 * ***                   return RD_KAFKA_RESP_ERR__NOT_IMPLEMENTED;
0000FC16 A7F9 FF56               0000FF56  21370          LGHI  15,-170     ; -170
0000FC1A 47F0 C57E               0000FC2A  21371          B     @ret_lab_1948
                                           21372 * ***           }
0000FC1E                                   21373 @L1963   DS    0H
                                           21374 * ***
                                           21375 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
0000FC1E A7F9 0000               00000000  21376          LGHI  15,0        ; 0
0000FC22 47F0 C57E               0000FC2A  21377          B     @ret_lab_1948
                                           21378 * ***
                                           21379 * ***    err_parse:
                                           21380 * ***           return RD_KAFKA_RESP_ERR__BAD_MSG;
0000FC26                                   21381 @_err_parse@1948@7 DS 0H
                                                                                                                           Page  424 
  Active Usings: @REGION_1948_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000FC26 A7F9 FF39               0000FF39  21382          LGHI  15,-199     ; -199
                                           21383 * ***   }
0000FC2A                                   21384 @ret_lab_1948 DS 0H
                                           21385 * * **** Start of Epilogue
                                           21386          DCCEPIL
0000FC2A                                   21387+         ds 0h                                                          01-DCCEP
                                           21388+* Epilog
0000FC2A D707 D088 D088 00000088 00000088  21389+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000FC30 E3D0 D080 0004          00000080  21390+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000FC36 E3C0 D090 0004          00000090  21391+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000FC3C E3B0 C018 0004          00000018  21392+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000FC42 E3C0 B010 0021          00000010  21393+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000FC48 E3E0 D008 0004          00000008  21394+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000FC4E EB1C D020 0004          00000020  21395+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000FC54 078E                              21396+         bcr 8,14                if same dsab, just return              01-DCCEP
0000FC56 E3F0 D010 0024          00000010  21397+         stg 15,16(0,13)         save return code                       01-DCCEP
0000FC5C E300 D018 0024          00000018  21398+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000FC62 E3F0 D090 0004          00000090  21399+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000FC68 E3F0 F018 0004          00000018  21400+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000FC6E 47F0 F040               00000040  21401+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           21402+* End of Epilog
                                           21403 * * **** End of Epilogue
                                           21404          DROP  12
                                           21405 *
                                           21406 *   DSECT for automatic variables in "rd_kafka_msgset_reader_peek_msg_
                                           21407 *           version"
                                           21408 *      (FUNCTION #1948)
                                           21409 *
00000000                00000000 000002C4  21410 @AUTO#rd_kafka_msgset_reader_peek_msg_version DSECT
00000000                                   21411          DS    XL168
000000A8                                   21412 rd_kafka_msgset_reader_peek_msg_version#__len0#30 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  21413          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+168
000000A8                                   21414 rd_kafka_msgset_reader_peek_msg_version#__len1#29 DS 8XL1 ; __len1
000000B0                000000B0 000000A8  21415          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+168
000000A8                                   21416 rd_kafka_msgset_reader_peek_msg_version#__len0#23 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  21417          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+168
000000A8                                   21418 rd_kafka_msgset_reader_peek_msg_version#__len2#22 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  21419          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+168
000000A8                                   21420 rd_kafka_msgset_reader_peek_msg_version#__len0#11 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  21421          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+168
000000A8                                   21422 rd_kafka_msgset_reader_peek_msg_version#__len2#10 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  21423          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+168
000000A8                                   21424 rd_kafka_msgset_reader_peek_msg_version#$Offset#8 DS 8XL1 ; Offset
000000B0                000000B0 000000A8  21425          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+168
000000A8                                   21426 rd_kafka_msgset_reader_peek_msg_version#__len0#2 DS 8XL1 ; __len0
000000B0                000000B0 000000A8  21427          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+168
000000A8                                   21428 rd_kafka_msgset_reader_peek_msg_version#__len2#1 DS 8XL1 ; __len2
000000B0                000000B0 000000A8  21429          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+168
000000A8                                   21430 rd_kafka_msgset_reader_peek_msg_version#read_offset#0 DS 8XL1 ; read_of*
                                                                fset
000000B0                000000B0 000000A8  21431          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+168
000000A8                                   21432 rd_kafka_msgset_reader_peek_msg_version#log_decode_errors#0 DS 1F ; log*
                                                                                                                           Page  425 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                _decode_errors
000000AC                000000AC 000000B0  21433          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+176
000000B0                                   21434 rd_kafka_msgset_reader_peek_msg_version#$Length#8 DS 1F ; Length
000000B4                000000B4 000000B8  21435          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+184
000000B8                                   21436 rd_kafka_msgset_reader_peek_msg_version#_v#9 DS 8XL1 ; _v
000000C0                000000C0 000000C0  21437          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+192
000000C0                                   21438 rd_kafka_msgset_reader_peek_msg_version#_v#21 DS 1F ; _v
000000C4                000000C4 000000C4  21439          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+196
000000C4                                   21440 rd_kafka_msgset_reader_peek_msg_version#__tmpstr#34 DS 256XL1 ; __tmpst*
                                                                r
000001C4                000001C4 000000C4  21441          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+196
000000C4                                   21442 rd_kafka_msgset_reader_peek_msg_version#__tmpstr#27 DS 256XL1 ; __tmpst*
                                                                r
000001C4                000001C4 000000C4  21443          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+196
000000C4                                   21444 rd_kafka_msgset_reader_peek_msg_version#_logname#19 DS 256XL1 ; _lognam*
                                                                e
000001C4                000001C4 000000C4  21445          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+196
000000C4                                   21446 rd_kafka_msgset_reader_peek_msg_version#__tmpstr#15 DS 256XL1 ; __tmpst*
                                                                r
000001C4                000001C4 000000C4  21447          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+196
000000C4                                   21448 rd_kafka_msgset_reader_peek_msg_version#__tmpstr#6 DS 256XL1 ; __tmpstr
000001C4                000001C4 000001C4  21449          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+452
000001C4                                   21450 rd_kafka_msgset_reader_peek_msg_version#_logname#35 DS 256XL1 ; _lognam*
                                                                e
000002C4                000002C4 000001C4  21451          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+452
000001C4                                   21452 rd_kafka_msgset_reader_peek_msg_version#_logname#28 DS 256XL1 ; _lognam*
                                                                e
000002C4                000002C4 000001C4  21453          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+452
000001C4                                   21454 rd_kafka_msgset_reader_peek_msg_version#_logname#16 DS 256XL1 ; _lognam*
                                                                e
000002C4                000002C4 000001C4  21455          ORG   @AUTO#rd_kafka_msgset_reader_peek_msg_version+452
000001C4                                   21456 rd_kafka_msgset_reader_peek_msg_version#_logname#7 DS 256XL1 ; _logname
                                           21457 *
0000FC72                00000000 00012806  21458 @CODE    CSECT
                                           21459 *
                                           21460 *
                                           21461 *
                                           21462 * ....... start of rd_kafka_msgset_reader
0000FC72                                   21463 @LNAME1949 DS  0H
0000FC72 00000016                          21464          DC    X'00000016'
0000FC76 99846D9281869281                  21465          DC    C'rd_kafka_msgset_reader'
0000FC8C 00                                21466          DC    X'00'
                                           21467 rd_kafka_msgset_reader DCCPRLG CINDEX=1949,BASER=12,FRAME=216,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1949
                                           21468          macro
                                           21469          dccextrn &m
                                           21470          gblc    &$dccext(1000)
                                           21471          gbla    &$dccexti
                                           21472          lcla    &i
                                           21473 &$dccext(&$dccexti+1) setc    '&m'
                                           21474 &i       seta    1
                                           21475 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page  426 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           21476          aif    ('&$dccext(&i)' eq '&m').getout
                                           21477 &i       seta    &i+1
                                           21478          ago     .loop
                                           21479 .around  anop
                                           21480 &$dccexti seta &$dccexti+1
                                           21481          extrn  &m
                                           21482 .getout  anop
                                           21483          mend
0000FC90                                   21484+$eye0130    ds    0d                                                    02-DCCCA
0000FC90 C4C3C3                            21485+         dc cl3'DCC'                                                    02-DCCCA
0000FC93 01                                21486+         dc xl1'01' format one                                          02-DCCCA
0000FC94 00000000                          21487+         dc a(0)                                                        02-DCCCA
0000FC98 000000000000FD02                  21488+         dc ad(@PER_1949)                                               02-DCCCA
0000FCA0 00000000000000D8                  21489+         dc ad(216)                                                     02-DCCCA
0000FCA8 0000000000000000                  21490+         dc ad(0)                                                       02-DCCCA
0000FCB0 0000000000001000                  21491+         dc ad(4096)                                                    02-DCCCA
0000FCB8 20                                21492+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000FCB9 03                                21493+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000FCBA 03                                21494+         dc al1(3)                                                      02-DCCCA
0000FCBB 08                                21495+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000FCBC 00                                21496+         dc bl.8'00000000'                                              02-DCCCA
0000FCBD 000000                            21497+         dc al3(0)                                                      02-DCCCA
0000FCC0 000000000000FC72                  21498+         dc ad(@LNAME1949)                                              02-DCCCA
0000FCC8                                   21499+         ds 0d                                                          02-DCCCA
0000FCC8 000000000000FC90                  21500+         dc ad($eye0130)                                                02-DCCCA
0000FCD0 0000000000000000                  21501+         dc ad(0)                                                       02-DCCCA
0000FCD8                                   21502+         ds    0d                                                       01-DCCPR
0000FCD8                                   21503+rd_kafka_msgset_reader ds 0d                                            01-DCCPR
0000FCD8                                   21504+@REGION_1949_1 ds 0h                                                    01-DCCPR
0000FCD8 EBEC D008 0024          00000008  21505+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000FCDE E3E0 D088 0004          00000088  21506+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000FCE4 E3C0 D090 0004          00000090  21507+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000FCEA B904 002E                         21508+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000FCEE E3B0 C018 0004          00000018  21509+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000FCF4 A7EB 00D8               000000D8  21510+         aghi  14,216              increase by frame size               01-DCCPR
0000FCF8 E3E0 C020 0021          00000020  21511+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000FCFE 4720 B020               00000020  21512+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000FD02                                   21513+@PER_1949 ds   0h                                                       01-DCCPR
0000FD02 EBDE 2080 0024          00000080  21514+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000FD08 E3C0 2090 0024          00000090  21515+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000FD0E B904 00D2                         21516+         lgr   13,2                set real frame pointer               01-DCCPR
0000FD12 B904 00CF                         21517+         lgr   12,15               set base reg                         01-DCCPR
                        0000FCD8           21518+         using @REGION_1949_1,12                                        01-DCCPR
                                           21519 * ******* End of Prologue
                                           21520 * *
                                           21521 * ***           rd_kafka_buf_t *rkbuf = msetr->msetr_rkbuf;
0000FD16 E330 1000 0004          00000000  21522          LG    3,0(0,1)    ; msetr
0000FD1C E340 3000 0004          00000000  21523          LG    4,0(0,3)    ; msetr
                                           21524 * ***           rd_kafka_resp_err_t (*reader[])
                                           21525 * ***                   (rd_kafka_msgset_reader_t *) = {
                                           21526 * ***
                                           21527 * ***
                                                                                                                           Page  427 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           21528 * ***                   [0] = rd_kafka_msgset_reader_msg_v0_1,
0000FD22 E3F0 C0B0 0004          0000FD88  21529          LG    15,@lit_1949_1653 ; rd_kafka_msgset_reader_msg_v0_1
0000FD28 E3F0 D0B0 0024          000000B0  21530          STG   15,176(0,13)
                                           21531 * ***                   [1] = rd_kafka_msgset_reader_msg_v0_1,
0000FD2E E3F0 D0B8 0024          000000B8  21532          STG   15,184(0,13)
                                           21533 * ***                   [2] = rd_kafka_msgset_reader_v2
                                           21534 * ***           };
0000FD34 E3F0 C0A8 0004          0000FD80  21535          LG    15,@lit_1949_1655 ; rd_kafka_msgset_reader_v2
0000FD3A E3F0 D0C0 0024          000000C0  21536          STG   15,192(0,13)
                                           21537 * ***           rd_kafka_resp_err_t err;
                                           21538 * ***
                                           21539 * ***
                                           21540 * ***
                                           21541 * ***           do {
0000FD40                                   21542 @L2045   DS    0H
                                           21543 * ***                   int8_t MagicByte;
                                           21544 * ***
                                           21545 * ***
                                           21546 * ***
                                           21547 * ***
                                           21548 * ***                   err = rd_kafka_msgset_reader_peek_msg_version(\
                                           21549 * msetr,
                                           21550 * ***                                                                 \
                                           21551 * &MagicByte);
0000FD40 E330 D0C8 0024          000000C8  21552          STG   3,200(0,13)
0000FD46 41F0 D0A8               000000A8  21553          LA    15,168(0,13)
0000FD4A E3F0 D0D0 0024          000000D0  21554          STG   15,208(0,13)
0000FD50 4110 D0C8               000000C8  21555          LA    1,200(0,13)
0000FD54 E3F0 C0B8 0004          0000FD90  21556          LG    15,@lit_1949_1656 ; rd_kafka_msgset_reader_peek_msg_vers*
                                                                ion
0000FD5A                                   21557 @@gen_label2104 DS    0H
0000FD5A 05EF                              21558          BALR  14,15
0000FD5C                                   21559 @@gen_label2105 DS    0H
0000FD5C 122F                              21560          LTR   2,15        ; err
                                           21561 * ***                   if (((err))) {
0000FD5E 4780 C0C8               0000FDA0  21562          BZ    @L2048
                                           21563 * ***                           if (err == RD_KAFKA_RESP_ERR__BAD_MSG)
0000FD62 A72E FF39               0000FF39  21564          CHI   2,-199
0000FD66 4770 C0EC               0000FDC4  21565          BNE   @L2047
                                           21566 * ***
                                           21567 * ***
                                           21568 * ***
                                           21569 * ***                                   return RD_KAFKA_RESP_ERR_NO_ER\
                                           21570 * ROR;
0000FD6A A7F9 0000               00000000  21571          LGHI  15,0        ; 0
0000FD6E 47F0 C120               0000FDF8  21572          B     @ret_lab_1949
0000FD78                                   21573          DS    0D
0000FD78 000000D8                          21574 @FRAMESIZE_1949 DC F'216'
0000FD7C 00000000
0000FD80 000000000000B158                  21575 @lit_1949_1655 DC AD(rd_kafka_msgset_reader_v2)
0000FD88 0000000000003EB0                  21576 @lit_1949_1653 DC AD(rd_kafka_msgset_reader_msg_v0_1)
0000FD90 000000000000ED80                  21577 @lit_1949_1656 DC AD(rd_kafka_msgset_reader_peek_msg_version)
                                                                                                                           Page  428 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000FD98 0000000000001210                  21578 @lit_1949_1658 DC AD(rd_slice_abs_offset)
                                           21579 * ***
                                           21580 * ***
                                           21581 * ***
                                           21582 * ***                           continue;
                                           21583 * ***                   }
0000FDA0                                   21584 @L2048   DS    0H
                                           21585 * ***
                                           21586 * ***
                                           21587 * ***                   err = reader[(int)MagicByte](msetr);
0000FDA0 E330 D0C8 0024          000000C8  21588          STG   3,200(0,13)
0000FDA6 E3F0 D0A8 0076          000000A8  21589          LB    15,168(0,13) ; MagicByte
0000FDAC B914 00FF                         21590          LGFR  15,15
0000FDB0 EBFF 0003 000D          00000003  21591          SLLG  15,15,3(0)  ; *0x8
0000FDB6 E3FF D0B0 0004          000000B0  21592          LG    15,176(15,13)
0000FDBC 4110 D0C8               000000C8  21593          LA    1,200(0,13)
0000FDC0                                   21594 @@gen_label2108 DS    0H
0000FDC0 05EF                              21595          BALR  14,15
0000FDC2                                   21596 @@gen_label2109 DS    0H
0000FDC2 182F                              21597          LR    2,15        ; err
                                           21598 * ***
                                           21599 * ***           } while (!err && ((&rkbuf->rkbuf_reader)->end - rd_sli\
                                           21600 * ce_abs_offset(&rkbuf->rkbuf_reader)) > 0);
0000FDC4                                   21601 @L2047   DS    0H
0000FDC4 1222                              21602          LTR   2,2
0000FDC6 4770 C11C               0000FDF4  21603          BNZ   @L2050
0000FDCA E350 4098 0004          00000098  21604          LG    5,152(0,4)  ; offset of end in rd_slice_s
0000FDD0 41F0 4078               00000078  21605          LA    15,120(0,4)
0000FDD4 E3F0 D0C8 0024          000000C8  21606          STG   15,200(0,13)
0000FDDA 4110 D0C8               000000C8  21607          LA    1,200(0,13)
0000FDDE E3F0 C0C0 0004          0000FD98  21608          LG    15,@lit_1949_1658 ; rd_slice_abs_offset
0000FDE4                                   21609 @@gen_label2111 DS    0H
0000FDE4 05EF                              21610          BALR  14,15
0000FDE6                                   21611 @@gen_label2112 DS    0H
0000FDE6 B90B 005F                         21612          SLGR  5,15
0000FDEA C25E 0000 0000                    21613          CLGFI 5,X'00000000'
0000FDF0 4720 C068               0000FD40  21614          BH    @L2045
0000FDF4                                   21615 @L2050   DS    0H
                                           21616 * ***
                                           21617 * ***           return err;
0000FDF4 B914 00F2                         21618          LGFR  15,2
                                           21619 * ***   }
0000FDF8                                   21620 @ret_lab_1949 DS 0H
                                           21621 * * **** Start of Epilogue
                                           21622          DCCEPIL
0000FDF8                                   21623+         ds 0h                                                          01-DCCEP
                                           21624+* Epilog
0000FDF8 D707 D088 D088 00000088 00000088  21625+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000FDFE E3D0 D080 0004          00000080  21626+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000FE04 E3C0 D090 0004          00000090  21627+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000FE0A E3B0 C018 0004          00000018  21628+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000FE10 E3C0 B010 0021          00000010  21629+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page  429 
  Active Usings: @REGION_1949_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000FE16 E3E0 D008 0004          00000008  21630+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000FE1C EB1C D020 0004          00000020  21631+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000FE22 078E                              21632+         bcr 8,14                if same dsab, just return              01-DCCEP
0000FE24 E3F0 D010 0024          00000010  21633+         stg 15,16(0,13)         save return code                       01-DCCEP
0000FE2A E300 D018 0024          00000018  21634+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000FE30 E3F0 D090 0004          00000090  21635+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000FE36 E3F0 F018 0004          00000018  21636+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000FE3C 47F0 F040               00000040  21637+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           21638+* End of Epilog
                                           21639 * * **** End of Epilogue
                                           21640          DROP  12
                                           21641 *
                                           21642 *   DSECT for automatic variables in "rd_kafka_msgset_reader"
                                           21643 *      (FUNCTION #1949)
                                           21644 *
00000000                00000000 000000C8  21645 @AUTO#rd_kafka_msgset_reader DSECT
00000000                                   21646          DS    XL168
000000A8                                   21647 rd_kafka_msgset_reader#$Magic$Byte#1 DS 1CL1 ; MagicByte
000000A9                000000A9 000000A8  21648          ORG   @AUTO#rd_kafka_msgset_reader+168
000000A8                                   21649 rd_kafka_msgset_reader#err#0 DS 1F ; err
000000AC                000000AC 000000B0  21650          ORG   @AUTO#rd_kafka_msgset_reader+176
000000B0                                   21651 rd_kafka_msgset_reader#reader#0 DS 24XL1 ; reader
                                           21652 *
0000FE40                00000000 00012806  21653 @CODE    CSECT
                                           21654 *
                                           21655 *
                                           21656 *
                                           21657 * ....... start of rd_kafka_msgset_reader_postproc
0000FE40                                   21658 @LNAME1950 DS  0H
0000FE40 0000001F                          21659          DC    X'0000001F'
0000FE44 99846D9281869281                  21660          DC    C'rd_kafka_msgset_reader_postproc'
0000FE63 00                                21661          DC    X'00'
                                           21662 rd_kafka_msgset_reader_postproc DCCPRLG CINDEX=1950,BASER=12,FRAME=200,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1950
                                           21663          macro
                                           21664          dccextrn &m
                                           21665          gblc    &$dccext(1000)
                                           21666          gbla    &$dccexti
                                           21667          lcla    &i
                                           21668 &$dccext(&$dccexti+1) setc    '&m'
                                           21669 &i       seta    1
                                           21670 .loop    aif    (&i gt &$dccexti).around
                                           21671          aif    ('&$dccext(&i)' eq '&m').getout
                                           21672 &i       seta    &i+1
                                           21673          ago     .loop
                                           21674 .around  anop
                                           21675 &$dccexti seta &$dccexti+1
                                           21676          extrn  &m
                                           21677 .getout  anop
                                           21678          mend
0000FE68                                   21679+$eye0133    ds    0d                                                    02-DCCCA
0000FE68 C4C3C3                            21680+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page  430 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000FE6B 01                                21681+         dc xl1'01' format one                                          02-DCCCA
0000FE6C 00000000                          21682+         dc a(0)                                                        02-DCCCA
0000FE70 000000000000FEDA                  21683+         dc ad(@PER_1950)                                               02-DCCCA
0000FE78 00000000000000C8                  21684+         dc ad(200)                                                     02-DCCCA
0000FE80 0000000000000000                  21685+         dc ad(0)                                                       02-DCCCA
0000FE88 0000000000001000                  21686+         dc ad(4096)                                                    02-DCCCA
0000FE90 20                                21687+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000FE91 03                                21688+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000FE92 03                                21689+         dc al1(3)                                                      02-DCCCA
0000FE93 08                                21690+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000FE94 00                                21691+         dc bl.8'00000000'                                              02-DCCCA
0000FE95 000000                            21692+         dc al3(0)                                                      02-DCCCA
0000FE98 000000000000FE40                  21693+         dc ad(@LNAME1950)                                              02-DCCCA
0000FEA0                                   21694+         ds 0d                                                          02-DCCCA
0000FEA0 000000000000FE68                  21695+         dc ad($eye0133)                                                02-DCCCA
0000FEA8 0000000000000000                  21696+         dc ad(0)                                                       02-DCCCA
0000FEB0                                   21697+         ds    0d                                                       01-DCCPR
0000FEB0                                   21698+rd_kafka_msgset_reader_postproc ds 0d                                   01-DCCPR
0000FEB0                                   21699+@REGION_1950_1 ds 0h                                                    01-DCCPR
0000FEB0 EBEC D008 0024          00000008  21700+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000FEB6 E3E0 D088 0004          00000088  21701+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000FEBC E3C0 D090 0004          00000090  21702+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000FEC2 B904 002E                         21703+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000FEC6 E3B0 C018 0004          00000018  21704+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000FECC A7EB 00C8               000000C8  21705+         aghi  14,200              increase by frame size               01-DCCPR
0000FED0 E3E0 C020 0021          00000020  21706+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000FED6 4720 B020               00000020  21707+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000FEDA                                   21708+@PER_1950 ds   0h                                                       01-DCCPR
0000FEDA EBDE 2080 0024          00000080  21709+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000FEE0 E3C0 2090 0024          00000090  21710+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000FEE6 B904 00D2                         21711+         lgr   13,2                set real frame pointer               01-DCCPR
0000FEEA B904 00CF                         21712+         lgr   12,15               set base reg                         01-DCCPR
                        0000FEB0           21713+         using @REGION_1950_1,12                                        01-DCCPR
                                           21714 * ******* End of Prologue
                                           21715 * *
0000FEEE EB23 1000 0004          00000000  21716          LMG   2,3,0(1)    ; msetr
                                           21717 * ***           rd_kafka_op_t *rko;
                                           21718 * ***
                                           21719 * ***           rko = rd_kafka_q_last(&msetr->msetr_rkq,
                                           21720 * ***                                 RD_KAFKA_OP_FETCH,
                                           21721 * ***                                 0 );
0000FEF4 41F0 2068               00000068  21722          LA    15,104(0,2)
0000FEF8 E3F0 D0B0 0024          000000B0  21723          STG   15,176(0,13)
0000FEFE E548 D0B8 0001          000000B8  21724          MVGHI 184(13),1
0000FF04 D707 D0C0 D0C0 000000C0 000000C0  21725          XC    192(8,13),192(13)
0000FF0A 4110 D0B0               000000B0  21726          LA    1,176(0,13)
0000FF0E E3F0 C118 0004          0000FFC8  21727          LG    15,@lit_1950_1660 ; rd_kafka_q_last
0000FF14                                   21728 @@gen_label2114 DS    0H
0000FF14 05EF                              21729          BALR  14,15
0000FF16                                   21730 @@gen_label2115 DS    0H
                                           21731 * ***           if (rko) {
0000FF16 B902 001F                         21732          LTGR  1,15
                                                                                                                           Page  431 
  Active Usings: @REGION_1950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000FF1A 4780 C0C8               0000FF78  21733          BZ    @L2051
                                           21734 * ***               *last_offsetp = rko->rko_u.fetch.rkm. rkm_rkmessag\
                                           21735 * e.offset;
0000FF1E E3F0 F0B0 0004          000000B0  21736          LG    15,176(0,15) ; offset of offset in rd_kafka_message_s
0000FF24 E3F0 3000 0024          00000000  21737          STG   15,0(0,3)   ; last_offsetp
                                           21738 * ***
                                           21739 * ***               if (*last_offsetp != -1 && msetr->msetr_relative_o\
                                           21740 * ffsets) {
0000FF2A E558 3000 FFFF          00000000  21741          CGHSI 0(3),-1
0000FF30 4780 C0C8               0000FF78  21742          BE    @L2051
0000FF34 E3F0 2008 0012          00000008  21743          LT    15,8(0,2)   ; offset of msetr_relative_offsets in rd_kaf*
                                                                ka_msgset_reader_s
0000FF3A 4780 C0C8               0000FF78  21744          BZ    @L2051
                                           21745 * ***
                                           21746 * ***
                                           21747 * ***
                                           21748 * ***                   rd_kafka_q_fix_offsets(&msetr->msetr_rkq,
                                           21749 * ***                                          msetr->msetr_rktp->rktp\
                                           21750 * _offsets.
                                           21751 * ***                                          msetr->msetr_outer.offs\
                                           21752 * et -
0000FF3E 41F0 2068               00000068  21753          LA    15,104(0,2)
0000FF42 E3F0 D0B0 0024          000000B0  21754          STG   15,176(0,13)
                                           21755 * ***                                          fetch_offset,
0000FF48 E3F0 2050 0004          00000050  21756          LG    15,80(0,2)  ; offset of msetr_rktp in rd_kafka_msgset_re*
                                                                ader_s
0000FF4E E3F0 F238 0004          00000238  21757          LG    15,568(0,15)
0000FF54 E3F0 D0B8 0024          000000B8  21758          STG   15,184(0,13)
                                           21759 * ***                                          *last_offsetp);
0000FF5A E3F0 2010 0004          00000010  21760          LG    15,16(0,2)  ; offset of msetr_outer in rd_kafka_msgset_r*
                                                                eader_s
0000FF60 E3F0 3000 0009          00000000  21761          SG    15,0(0,3)
0000FF66 E3F0 D0C0 0024          000000C0  21762          STG   15,192(0,13)
0000FF6C 4110 D0B0               000000B0  21763          LA    1,176(0,13)
0000FF70 E3F0 C120 0004          0000FFD0  21764          LG    15,@lit_1950_1661 ; rd_kafka_q_fix_offsets
0000FF76                                   21765 @@gen_label2119 DS    0H
0000FF76 05EF                              21766          BALR  14,15
0000FF78                                   21767 @@gen_label2120 DS    0H
                                           21768 * ***               }
0000FF78                                   21769 @L2052   DS    0H
                                           21770 * ***           }
0000FF78                                   21771 @L2051   DS    0H
                                           21772 * ***   }
0000FF78                                   21773 @ret_lab_1950 DS 0H
                                           21774 * * **** Start of Epilogue
                                           21775          DCCEPIL
0000FF78                                   21776+         ds 0h                                                          01-DCCEP
                                           21777+* Epilog
0000FF78 D707 D088 D088 00000088 00000088  21778+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000FF7E E3D0 D080 0004          00000080  21779+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000FF84 E3C0 D090 0004          00000090  21780+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000FF8A E3B0 C018 0004          00000018  21781+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page  432 
  Active Usings: @REGION_1950_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000FF90 E3C0 B010 0021          00000010  21782+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000FF96 E3E0 D008 0004          00000008  21783+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000FF9C EB1C D020 0004          00000020  21784+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000FFA2 078E                              21785+         bcr 8,14                if same dsab, just return              01-DCCEP
0000FFA4 E3F0 D010 0024          00000010  21786+         stg 15,16(0,13)         save return code                       01-DCCEP
0000FFAA E300 D018 0024          00000018  21787+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000FFB0 E3F0 D090 0004          00000090  21788+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000FFB6 E3F0 F018 0004          00000018  21789+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000FFBC 47F0 F040               00000040  21790+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           21791+* End of Epilog
                                           21792 * * **** End of Epilogue
0000FFC0                                   21793          DS    0D
0000FFC0 000000C8                          21794 @FRAMESIZE_1950 DC F'200'
0000FFC4 00000000
0000FFC8 0000000000002E80                  21795 @lit_1950_1660 DC AD(rd_kafka_q_last)
0000FFD0 0000000000000000                  21796 @lit_1950_1661 DC AD(rd_kafka_q_fix_offsets)
                                           21797          DROP  12
                                           21798 *
                                           21799 *   DSECT for automatic variables in "rd_kafka_msgset_reader_postproc"
                                           21800 *      (FUNCTION #1950)
                                           21801 *
00000000                00000000 000000A8  21802 @AUTO#rd_kafka_msgset_reader_postproc DSECT
00000000                                   21803          DS    XL168
                                           21804 *
0000FFD8                00000000 00012806  21805 @CODE    CSECT
                                           21806 *
                                           21807 *
                                           21808 *
                                           21809 * ....... start of rd_kafka_msgset_reader_run
0000FFD8                                   21810 @LNAME1941 DS  0H
0000FFD8 0000001A                          21811          DC    X'0000001A'
0000FFDC 99846D9281869281                  21812          DC    C'rd_kafka_msgset_reader_run'
0000FFF6 00                                21813          DC    X'00'
                                           21814 rd_kafka_msgset_reader_run DCCPRLG CINDEX=1941,BASER=12,FRAME=576,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1941
                                           21815          macro
                                           21816          dccextrn &m
                                           21817          gblc    &$dccext(1000)
                                           21818          gbla    &$dccexti
                                           21819          lcla    &i
                                           21820 &$dccext(&$dccexti+1) setc    '&m'
                                           21821 &i       seta    1
                                           21822 .loop    aif    (&i gt &$dccexti).around
                                           21823          aif    ('&$dccext(&i)' eq '&m').getout
                                           21824 &i       seta    &i+1
                                           21825          ago     .loop
                                           21826 .around  anop
                                           21827 &$dccexti seta &$dccexti+1
                                           21828          extrn  &m
                                           21829 .getout  anop
                                           21830          mend
0000FFF8                                   21831+$eye0136    ds    0d                                                    02-DCCCA
                                                                                                                           Page  433 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000FFF8 C4C3C3                            21832+         dc cl3'DCC'                                                    02-DCCCA
0000FFFB 01                                21833+         dc xl1'01' format one                                          02-DCCCA
0000FFFC 00000000                          21834+         dc a(0)                                                        02-DCCCA
00010000 000000000001006A                  21835+         dc ad(@PER_1941)                                               02-DCCCA
00010008 0000000000000240                  21836+         dc ad(576)                                                     02-DCCCA
00010010 0000000000000000                  21837+         dc ad(0)                                                       02-DCCCA
00010018 0000000000001000                  21838+         dc ad(4096)                                                    02-DCCCA
00010020 20                                21839+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00010021 03                                21840+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00010022 03                                21841+         dc al1(3)                                                      02-DCCCA
00010023 08                                21842+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00010024 00                                21843+         dc bl.8'00000000'                                              02-DCCCA
00010025 000000                            21844+         dc al3(0)                                                      02-DCCCA
00010028 000000000000FFD8                  21845+         dc ad(@LNAME1941)                                              02-DCCCA
00010030                                   21846+         ds 0d                                                          02-DCCCA
00010030 000000000000FFF8                  21847+         dc ad($eye0136)                                                02-DCCCA
00010038 0000000000000000                  21848+         dc ad(0)                                                       02-DCCCA
00010040                                   21849+         ds    0d                                                       01-DCCPR
00010040                                   21850+rd_kafka_msgset_reader_run ds 0d                                        01-DCCPR
00010040                                   21851+@REGION_1941_1 ds 0h                                                    01-DCCPR
00010040 EBEC D008 0024          00000008  21852+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00010046 E3E0 D088 0004          00000088  21853+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0001004C E3C0 D090 0004          00000090  21854+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00010052 B904 002E                         21855+         lgr   2,14                copy addr of our savearea            01-DCCPR
00010056 E3B0 C018 0004          00000018  21856+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0001005C A7EB 0240               00000240  21857+         aghi  14,576              increase by frame size               01-DCCPR
00010060 E3E0 C020 0021          00000020  21858+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00010066 4720 B020               00000020  21859+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0001006A                                   21860+@PER_1941 ds   0h                                                       01-DCCPR
0001006A EBDE 2080 0024          00000080  21861+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00010070 E3C0 2090 0024          00000090  21862+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00010076 B904 00D2                         21863+         lgr   13,2                set real frame pointer               01-DCCPR
0001007A B904 00CF                         21864+         lgr   12,15               set base reg                         01-DCCPR
                        00010040           21865+         using @REGION_1941_1,12                                        01-DCCPR
                                           21866 * ******* End of Prologue
                                           21867 * *
                                           21868 * ***           rd_kafka_toppar_t *rktp = msetr->msetr_rktp;
0001007E E330 1000 0004          00000000  21869          LG    3,0(0,1)    ; msetr
00010084 E340 3050 0004          00000050  21870          LG    4,80(0,3)   ; offset of msetr_rktp in rd_kafka_msgset_re*
                                                                ader_s
                                           21871 * ***           rd_kafka_resp_err_t err;
                                           21872 * ***           int64_t last_offset = -1;
0001008A E548 D0A8 FFFF          000000A8  21873          MVGHI 168(13),-1  ; last_offset
                                           21874 * ***
                                           21875 * ***
                                           21876 * ***           err = rd_kafka_msgset_reader(msetr);
00010090 E330 D1B0 0024          000001B0  21877          STG   3,432(0,13)
00010096 4110 D1B0               000001B0  21878          LA    1,432(0,13)
0001009A E3F0 C1C8 0004          00010208  21879          LG    15,@lit_1941_1663 ; rd_kafka_msgset_reader
000100A0                                   21880 @@gen_label2121 DS    0H
000100A0 05EF                              21881          BALR  14,15
000100A2                                   21882 @@gen_label2122 DS    0H
                                                                                                                           Page  434 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000100A2 182F                              21883          LR    2,15        ; err
                                           21884 * ***
                                           21885 * ***           if (((rd_kafka_q_len(&msetr->msetr_rkq) == 0))) {
000100A4 41F0 3068               00000068  21886          LA    15,104(0,3)
000100A8 E3F0 D1B0 0024          000001B0  21887          STG   15,432(0,13)
000100AE 4110 D1B0               000001B0  21888          LA    1,432(0,13)
000100B2 E3F0 C1D0 0004          00010210  21889          LG    15,@lit_1941_1664 ; rd_kafka_q_len
000100B8                                   21890 @@gen_label2123 DS    0H
000100B8 05EF                              21891          BALR  14,15
000100BA                                   21892 @@gen_label2124 DS    0H
000100BA 12FF                              21893          LTR   15,15
000100BC 4770 C2B0               000102F0  21894          BNE   @L2053
                                           21895 * ***
                                           21896 * ***   # 1348 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           21897 * ***                   if (msetr->msetr_ctrl_cnt > 0) {
000100C0 E55C 3128 0000          00000128  21898          CHSI  296(3),0
000100C6 4720 C2E2               00010322  21899          BH    @L2068
                                           21900 * ***
                                           21901 * ***
                                           21902 * ***                   } else  if (rktp->rktp_fetch_msg_max_bytes < (\
                                           21903 * 1 << 30)) {
000100CA                                   21904 @L2054   DS    0H
000100CA 58F0 41EC               000001EC  21905          L     15,492(0,4)
000100CE C2FD 4000 0000                    21906          CFI   15,X'40000000'
000100D4 47B0 C238               00010278  21907          BNL   @L2056
                                           21908 * ***                           rktp->rktp_fetch_msg_max_bytes *= 2;
000100D8 58F0 41EC               000001EC  21909          L     15,492(0,4)
000100DC 1AFF                              21910          AR    15,15       ; *0x2
000100DE 50F0 41EC               000001EC  21911          ST    15,492(0,4)
                                           21912 * ***                           do { if ((((msetr->msetr_rkb)->rkb_rk-\
                                           21913 * >rk_conf.debug & (0x400)))) { do { char _logname[256]; mtx_lock(&(ms\
                                           21914 * etr->msetr_rkb)->rkb_logname_lock); rd_strlcpy(_logname, msetr->mset\
                                           21915 * r_rkb->rkb_logname, sizeof(_logname)); mtx_unlock(&(msetr->msetr_rkb\
                                           21916 * )->rkb_logname_lock); rd_kafka_log0(&(msetr->msetr_rkb)->rkb_rk->rk_\
                                           21917 * conf, (msetr->msetr_rkb)->rkb_rk, _logname, 7, (0x400), "CONSUME", "\
                                           21918 * Topic %s [%" "d" "]: Increasing " "max fetch bytes to %" "d", rktp->\
                                           21919 * rktp_rkt->rkt_topic->str, rktp->rktp_partition, rktp->rktp_fetch_msg\
                                           21920 * _max_bytes); } while (0); } } while (0);
000100E2                                   21921 @L2057   DS    0H
000100E2 E3F0 3048 0004          00000048  21922          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000100E8 E3F0 FFD0 0004          00000FD0  21923          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
000100EE 9104 F322      00000322 00000004  21924          TM    802(15),4
000100F2 4780 C2E2               00010322  21925          BZ    @L2068
000100F6                                   21926 @L2061   DS    0H
000100F6 E3F0 3048 0004          00000048  21927          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
000100FC A759 1638               00001638  21928          LGHI  5,5688      ; 5688
00010100 41F5 F000               00000000  21929          LA    15,0(5,15)
00010104 E3F0 D1B0 0024          000001B0  21930          STG   15,432(0,13)
0001010A 4110 D1B0               000001B0  21931          LA    1,432(0,13)
0001010E E3F0 C1D8 0004          00010218  21932          LG    15,@lit_1941_1666 ; mtx_lock
                                                                                                                           Page  435 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010114                                   21933 @@gen_label2129 DS    0H
00010114 05EF                              21934          BALR  14,15
00010116                                   21935 @@gen_label2130 DS    0H
00010116 41F0 D0B0               000000B0  21936          LA    15,176(0,13)
0001011A E3F0 D1B0 0024          000001B0  21937          STG   15,432(0,13)
00010120 E3F0 3048 0004          00000048  21938          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00010126 A719 1630               00001630  21939          LGHI  1,5680      ; 5680
0001012A E3F1 F000 0004          00000000  21940          LG    15,0(1,15)
00010130 E3F0 D1B8 0024          000001B8  21941          STG   15,440(0,13)
00010136 E548 D1C0 0100          000001C0  21942          MVGHI 448(13),256
0001013C 4110 D1B0               000001B0  21943          LA    1,432(0,13)
00010140 E3F0 C1E0 0004          00010220  21944          LG    15,@lit_1941_1668 ; rd_strlcpy
00010146                                   21945 @@gen_label2131 DS    0H
00010146 05EF                              21946          BALR  14,15
00010148                                   21947 @@gen_label2132 DS    0H
00010148 E3F0 3048 0004          00000048  21948          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0001014E 41F5 F000               00000000  21949          LA    15,0(5,15)
00010152 E3F0 D1B0 0024          000001B0  21950          STG   15,432(0,13)
00010158 4110 D1B0               000001B0  21951          LA    1,432(0,13)
0001015C E3F0 C1E8 0004          00010228  21952          LG    15,@lit_1941_1670 ; mtx_unlock
00010162                                   21953 @@gen_label2133 DS    0H
00010162 05EF                              21954          BALR  14,15
00010164                                   21955 @@gen_label2134 DS    0H
00010164 E3F0 3048 0004          00000048  21956          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0001016A E3F0 FFD0 0004          00000FD0  21957          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
00010170 41F0 F210               00000210  21958          LA    15,528(0,15)
00010174 E3F0 D1B0 0024          000001B0  21959          STG   15,432(0,13)
0001017A E3F0 3048 0004          00000048  21960          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00010180 E3F0 FFD0 0004          00000FD0  21961          LG    15,4048(0,15)
00010186 E3F0 D1B8 0024          000001B8  21962          STG   15,440(0,13)
0001018C 41F0 D0B0               000000B0  21963          LA    15,176(0,13)
00010190 E3F0 D1C0 0024          000001C0  21964          STG   15,448(0,13)
00010196 E548 D1C8 0007          000001C8  21965          MVGHI 456(13),7
0001019C E548 D1D0 0400          000001D0  21966          MVGHI 464(13),1024
000101A2 E3F0 C1F8 0004          00010238  21967          LG    15,@lit_1941_1671
000101A8 4110 F960               00000960  21968          LA    1,2400(0,15)
000101AC E310 D1D8 0024          000001D8  21969          STG   1,472(0,13)
000101B2 41F0 F968               00000968  21970          LA    15,2408(0,15)
000101B6 E3F0 D1E0 0024          000001E0  21971          STG   15,480(0,13)
000101BC E3F0 4060 0004          00000060  21972          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
000101C2 E3F0 F080 0004          00000080  21973          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
000101C8 E3F0 F008 0004          00000008  21974          LG    15,8(0,15)
000101CE E3F0 D1E8 0024          000001E8  21975          STG   15,488(0,13)
000101D4 E3F0 4068 0014          00000068  21976          LGF   15,104(0,4)
000101DA E3F0 D1F0 0024          000001F0  21977          STG   15,496(0,13)
000101E0 E3F0 41EC 0014          000001EC  21978          LGF   15,492(0,4)
000101E6 E3F0 D1F8 0024          000001F8  21979          STG   15,504(0,13)
000101EC 4110 D1B0               000001B0  21980          LA    1,432(0,13)
                                                                                                                           Page  436 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000101F0 E3F0 C1F0 0004          00010230  21981          LG    15,@lit_1941_1672 ; rd_kafka_log0
000101F6                                   21982 @@gen_label2135 DS    0H
000101F6 05EF                              21983          BALR  14,15
000101F8                                   21984 @@gen_label2136 DS    0H
000101F8                                   21985 @L2060   DS    0H
                                           21986 * ***   # 1359 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           21987 * ***                   } else if (!err) {
000101F8 47F0 C2E2               00010322  21988          B     @L2068
00010200                                   21989          DS    0D
00010200 00000240                          21990 @FRAMESIZE_1941 DC F'576'
00010204 00000000
00010208 000000000000FCD8                  21991 @lit_1941_1663 DC AD(rd_kafka_msgset_reader)
00010210 0000000000002CD0                  21992 @lit_1941_1664 DC AD(rd_kafka_q_len)
00010218 0000000000000000                  21993 @lit_1941_1666 DC AD(mtx_lock)
00010220 0000000000001668                  21994 @lit_1941_1668 DC AD(rd_strlcpy)
00010228 0000000000000000                  21995 @lit_1941_1670 DC AD(mtx_unlock)
00010230 0000000000000000                  21996 @lit_1941_1672 DC AD(rd_kafka_log0)
00010238 0000000000012AB8                  21997 @lit_1941_1671 DC AD(@strings@)
00010240 0000000000000000                  21998 @lit_1941_1674 DC AD(rd_kafka_consumer_err)
00010248 000000000000FEB0                  21999 @lit_1941_1675 DC AD(rd_kafka_msgset_reader_postproc)
00010250 0000000000002F60                  22000 @lit_1941_1685 DC AD(rd_kafka_compression2str)
00010258 00000000000028A8                  22001 @lit_1941_1689 DC AD(rd_kafka_q_concat0)
00010260 0000000000001C10                  22002 @lit_1941_1691 DC AD(rd_kafka_q_destroy_owner)
00010268 0000000000001210                  22003 @lit_1941_1692 DC AD(rd_slice_abs_offset)
00010270 0000000000000000                  22004 @lit_1941_1693 DC AD(rd_slice_read)
00010278                                   22005 @L2056   DS    0H
00010278 1222                              22006          LTR   2,2
0001027A 4770 C2E2               00010322  22007          BNZ   @L2068
                                           22008 * ***                           rd_kafka_consumer_err(
                                           22009 * ***                                   &msetr->msetr_rkq,
                                           22010 * ***                                   msetr->msetr_broker_id,
                                           22011 * ***                                   RD_KAFKA_RESP_ERR_MSG_SIZE_TOO\
                                           22012 * _LARGE,
                                           22013 * ***                                   msetr->msetr_tver->version,
                                           22014 * ***                                   ((void *)0), rktp,
                                           22015 * ***                                   rktp->rktp_offsets.fetch_offse\
                                           22016 * t,
                                           22017 * ***                                   "Message at offset %" "lld" " \
                                           22018 * "
                                           22019 * ***                                   rktp->rktp_offsets.fetch_offse\
                                           22020 * t);
0001027E 41F0 3068               00000068  22021          LA    15,104(0,3)
00010282 E3F0 D1B0 0024          000001B0  22022          STG   15,432(0,13)
00010288 E3F0 3040 0014          00000040  22023          LGF   15,64(0,3)
0001028E E3F0 D1B8 0024          000001B8  22024          STG   15,440(0,13)
00010294 E548 D1C0 000A          000001C0  22025          MVGHI 448(13),10
0001029A E3F0 3038 0004          00000038  22026          LG    15,56(0,3)  ; offset of msetr_tver in rd_kafka_msgset_re*
                                                                ader_s
000102A0 E3F0 F008 0014          00000008  22027          LGF   15,8(0,15)
000102A6 E3F0 D1C8 0024          000001C8  22028          STG   15,456(0,13)
000102AC D707 D1D0 D1D0 000001D0 000001D0  22029          XC    464(8,13),464(13)
000102B2 E340 D1D8 0024          000001D8  22030          STG   4,472(0,13)
                                                                                                                           Page  437 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000102B8 E3F0 4238 0004          00000238  22031          LG    15,568(0,4)
000102BE E3F0 D1E0 0024          000001E0  22032          STG   15,480(0,13)
                                           22033 * ***                                   "might be too large to fetch, \
                                           22034 * try increasing "
                                           22035 * ***                                   "receive.message.max.bytes",
000102C4 E3F0 C1F8 0004          00010238  22036          LG    15,@lit_1941_1671
000102CA 41F0 F998               00000998  22037          LA    15,2456(0,15)
000102CE E3F0 D1E8 0024          000001E8  22038          STG   15,488(0,13)
000102D4 E3F0 4238 0004          00000238  22039          LG    15,568(0,4)
000102DA E3F0 D1F0 0024          000001F0  22040          STG   15,496(0,13)
000102E0 4110 D1B0               000001B0  22041          LA    1,432(0,13)
000102E4 E3F0 C200 0004          00010240  22042          LG    15,@lit_1941_1674 ; rd_kafka_consumer_err
000102EA                                   22043 @@gen_label2138 DS    0H
000102EA 05EF                              22044          BALR  14,15
000102EC                                   22045 @@gen_label2139 DS    0H
                                           22046 * ***                   }
000102EC                                   22047 @L2065   DS    0H
                                           22048 * ***
                                           22049 * ***           } else {
000102EC                                   22050 @L2064   DS    0H
000102EC                                   22051 @L2055   DS    0H
000102EC 47F0 C2E2               00010322  22052          B     @L2068
000102F0                                   22053 @L2053   DS    0H
                                           22054 * ***
                                           22055 * ***                   rd_kafka_msgset_reader_postproc(msetr, &last_o\
                                           22056 * ffset);
000102F0 E330 D1B0 0024          000001B0  22057          STG   3,432(0,13)
000102F6 41F0 D0A8               000000A8  22058          LA    15,168(0,13)
000102FA E3F0 D1B8 0024          000001B8  22059          STG   15,440(0,13)
00010300 4110 D1B0               000001B0  22060          LA    1,432(0,13)
00010304 E3F0 C208 0004          00010248  22061          LG    15,@lit_1941_1675 ; rd_kafka_msgset_reader_postproc
0001030A                                   22062 @@gen_label2140 DS    0H
0001030A 05EF                              22063          BALR  14,15
0001030C                                   22064 @@gen_label2141 DS    0H
                                           22065 * ***
                                           22066 * ***
                                           22067 * ***
                                           22068 * ***
                                           22069 * ***                   if (err == RD_KAFKA_RESP_ERR__UNDERFLOW &&
0001030C A72E FF65               0000FF65  22070          CHI   2,-155
00010310 4770 C2E2               00010322  22071          BNE   @L2068
                                           22072 * ***                       msetr->msetr_msgcnt > 0)
00010314 E55C 3058 0000          00000058  22073          CHSI  88(3),0
0001031A 47D0 C2E2               00010322  22074          BNH   @L2068
                                           22075 * ***                           err = RD_KAFKA_RESP_ERR_NO_ERROR;
0001031E A728 0000               00000000  22076          LHI   2,0         ; 0
00010322                                   22077 @L2067   DS    0H
                                           22078 * ***           }
00010322                                   22079 @L2066   DS    0H
                                           22080 * ***
                                           22081 * ***           do { if ((((msetr->msetr_rkb)->rkb_rk->rk_conf.debug &\
                                           22082 *  (0x40 | 0x400)))) { do { char _logname[256]; mtx_lock(&(msetr->mset\
                                                                                                                           Page  438 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           22083 * r_rkb)->rkb_logname_lock); rd_strlcpy(_logname, msetr->msetr_rkb->rk\
                                           22084 * b_logname, sizeof(_logname)); mtx_unlock(&(msetr->msetr_rkb)->rkb_lo\
                                           22085 * gname_lock); rd_kafka_log0(&(msetr->msetr_rkb)->rkb_rk->rk_conf, (ms\
                                           22086 * etr->msetr_rkb)->rkb_rk, _logname, 7, (0x40 | 0x400), "CONSUME", "En\
                                           22087 * queue %i %smessage(s) (%" "lld" " bytes, %d ops) on " "%s [%" "d" "]\
                                           22088 *  " "fetch queue (qlen %d, v%d, last_offset %" "lld" ", %d ctrl msgs,\
                                           22089 *  %s)", msetr->msetr_msgcnt, msetr->msetr_srcname, msetr->msetr_msg_b\
                                           22090 * ytes, rd_kafka_q_len(&msetr->msetr_rkq), rktp->rktp_rkt->rkt_topic->\
                                           22091 * str, rktp->rktp_partition, rd_kafka_q_len(msetr->msetr_par_rkq), mse\
                                           22092 * tr->msetr_tver->version, last_offset, msetr->msetr_ctrl_cnt, msetr->\
                                           22093 * msetr_compression ? rd_kafka_compression2str(msetr->msetr_compressio\
                                           22094 * n) : "uncompressed"); } while (0); } } while (0);
00010322                                   22095 @L2068   DS    0H
00010322 E3F0 3048 0004          00000048  22096          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00010328 E3F0 FFD0 0004          00000FD0  22097          LG    15,4048(0,15) ; offset of rkb_rk in rd_kafka_broker_s
0001032E 58F0 F320               00000320  22098          L     15,800(0,15)
00010332 C0FB 0000 0440                    22099          NILF  15,X'00000440'
00010338 12FF                              22100          LTR   15,15
0001033A 4780 C4C0               00010500  22101          BZ    @L2071
0001033E                                   22102 @L2072   DS    0H
0001033E E3F0 3048 0004          00000048  22103          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00010344 A759 1638               00001638  22104          LGHI  5,5688      ; 5688
00010348 41F5 F000               00000000  22105          LA    15,0(5,15)
0001034C E3F0 D1B0 0024          000001B0  22106          STG   15,432(0,13)
00010352 4110 D1B0               000001B0  22107          LA    1,432(0,13)
00010356 E3F0 C1D8 0004          00010218  22108          LG    15,@lit_1941_1666 ; mtx_lock
0001035C                                   22109 @@gen_label2145 DS    0H
0001035C 05EF                              22110          BALR  14,15
0001035E                                   22111 @@gen_label2146 DS    0H
0001035E 41F0 D0B0               000000B0  22112          LA    15,176(0,13)
00010362 E3F0 D1B0 0024          000001B0  22113          STG   15,432(0,13)
00010368 E3F0 3048 0004          00000048  22114          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0001036E A719 1630               00001630  22115          LGHI  1,5680      ; 5680
00010372 E3F1 F000 0004          00000000  22116          LG    15,0(1,15)
00010378 E3F0 D1B8 0024          000001B8  22117          STG   15,440(0,13)
0001037E E548 D1C0 0100          000001C0  22118          MVGHI 448(13),256
00010384 4110 D1B0               000001B0  22119          LA    1,432(0,13)
00010388 E3F0 C1E0 0004          00010220  22120          LG    15,@lit_1941_1668 ; rd_strlcpy
0001038E                                   22121 @@gen_label2147 DS    0H
0001038E 05EF                              22122          BALR  14,15
00010390                                   22123 @@gen_label2148 DS    0H
00010390 E3F0 3048 0004          00000048  22124          LG    15,72(0,3)  ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00010396 41F5 F000               00000000  22125          LA    15,0(5,15)
0001039A E3F0 D1B0 0024          000001B0  22126          STG   15,432(0,13)
000103A0 4110 D1B0               000001B0  22127          LA    1,432(0,13)
000103A4 E3F0 C1E8 0004          00010228  22128          LG    15,@lit_1941_1670 ; mtx_unlock
000103AA                                   22129 @@gen_label2149 DS    0H
000103AA 05EF                              22130          BALR  14,15
                                                                                                                           Page  439 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000103AC                                   22131 @@gen_label2150 DS    0H
000103AC 41F0 3068               00000068  22132          LA    15,104(0,3)
000103B0 E3F0 D1B0 0024          000001B0  22133          STG   15,432(0,13)
000103B6 4110 D1B0               000001B0  22134          LA    1,432(0,13)
000103BA E350 C1D0 0004          00010210  22135          LG    5,@lit_1941_1664 ; rd_kafka_q_len
000103C0 B904 00F5                         22136          LGR   15,5
000103C4                                   22137 @@gen_label2151 DS    0H
000103C4 05EF                              22138          BALR  14,15
000103C6                                   22139 @@gen_label2152 DS    0H
000103C6 186F                              22140          LR    6,15
000103C8 E3F0 3118 0004          00000118  22141          LG    15,280(0,3)
000103CE E3F0 D1B0 0024          000001B0  22142          STG   15,432(0,13)
000103D4 4110 D1B0               000001B0  22143          LA    1,432(0,13)
000103D8 B904 00F5                         22144          LGR   15,5
000103DC                                   22145 @@gen_label2153 DS    0H
000103DC 05EF                              22146          BALR  14,15
000103DE                                   22147 @@gen_label2154 DS    0H
000103DE 185F                              22148          LR    5,15
000103E0 E3F0 3138 0012          00000138  22149          LT    15,312(0,3) ; offset of msetr_compression in rd_kafka_ms*
                                                                gset_reader_s
000103E6 4780 C3C6               00010406  22150          BZ    @L2075
000103EA E3F0 3138 0014          00000138  22151          LGF   15,312(0,3)
000103F0 E3F0 D1B0 0024          000001B0  22152          STG   15,432(0,13)
000103F6 4110 D1B0               000001B0  22153          LA    1,432(0,13)
000103FA E3F0 C210 0004          00010250  22154          LG    15,@lit_1941_1685 ; rd_kafka_compression2str
00010400                                   22155 @@gen_label2156 DS    0H
00010400 05EF                              22156          BALR  14,15
00010402                                   22157 @@gen_label2157 DS    0H
00010402 47F0 C3D0               00010410  22158          B     @L2076
00010406                                   22159 @L2075   DS    0H
00010406 E3F0 C1F8 0004          00010238  22160          LG    15,@lit_1941_1671
0001040C 41F0 F9F6               000009F6  22161          LA    15,2550(0,15)
00010410                                   22162 @L2076   DS    0H
00010410 E310 3048 0004          00000048  22163          LG    1,72(0,3)   ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
00010416 E310 1FD0 0004          00000FD0  22164          LG    1,4048(0,1) ; offset of rkb_rk in rd_kafka_broker_s
0001041C 4110 1210               00000210  22165          LA    1,528(0,1)
00010420 E310 D1B0 0024          000001B0  22166          STG   1,432(0,13)
00010426 E310 3048 0004          00000048  22167          LG    1,72(0,3)   ; offset of msetr_rkb in rd_kafka_msgset_rea*
                                                                der_s
0001042C E310 1FD0 0004          00000FD0  22168          LG    1,4048(0,1)
00010432 E310 D1B8 0024          000001B8  22169          STG   1,440(0,13)
00010438 4110 D0B0               000000B0  22170          LA    1,176(0,13)
0001043C E310 D1C0 0024          000001C0  22171          STG   1,448(0,13)
00010442 E548 D1C8 0007          000001C8  22172          MVGHI 456(13),7
00010448 E548 D1D0 0440          000001D0  22173          MVGHI 464(13),1088
0001044E E310 C1F8 0004          00010238  22174          LG    1,@lit_1941_1671
00010454 4170 1960               00000960  22175          LA    7,2400(0,1)
00010458 E370 D1D8 0024          000001D8  22176          STG   7,472(0,13)
0001045E 4110 1A04               00000A04  22177          LA    1,2564(0,1)
00010462 E310 D1E0 0024          000001E0  22178          STG   1,480(0,13)
00010468 E310 3058 0014          00000058  22179          LGF   1,88(0,3)
                                                                                                                           Page  440 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0001046E E310 D1E8 0024          000001E8  22180          STG   1,488(0,13)
00010474 E310 3130 0004          00000130  22181          LG    1,304(0,3)
0001047A E310 D1F0 0024          000001F0  22182          STG   1,496(0,13)
00010480 E310 3060 0004          00000060  22183          LG    1,96(0,3)
00010486 E310 D1F8 0024          000001F8  22184          STG   1,504(0,13)
0001048C B914 0016                         22185          LGFR  1,6
00010490 E310 D200 0024          00000200  22186          STG   1,512(0,13)
00010496 E310 4060 0004          00000060  22187          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
0001049C E310 1080 0004          00000080  22188          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
000104A2 E310 1008 0004          00000008  22189          LG    1,8(0,1)
000104A8 E310 D208 0024          00000208  22190          STG   1,520(0,13)
000104AE E310 4068 0014          00000068  22191          LGF   1,104(0,4)
000104B4 E310 D210 0024          00000210  22192          STG   1,528(0,13)
000104BA B914 0015                         22193          LGFR  1,5
000104BE E310 D218 0024          00000218  22194          STG   1,536(0,13)
000104C4 E310 3038 0004          00000038  22195          LG    1,56(0,3)   ; offset of msetr_tver in rd_kafka_msgset_re*
                                                                ader_s
000104CA E310 1008 0014          00000008  22196          LGF   1,8(0,1)
000104D0 E310 D220 0024          00000220  22197          STG   1,544(0,13)
000104D6 E310 D0A8 0004          000000A8  22198          LG    1,168(0,13) ; last_offset
000104DC E310 D228 0024          00000228  22199          STG   1,552(0,13)
000104E2 E310 3128 0014          00000128  22200          LGF   1,296(0,3)
000104E8 E310 D230 0024          00000230  22201          STG   1,560(0,13)
000104EE E3F0 D238 0024          00000238  22202          STG   15,568(0,13)
000104F4 4110 D1B0               000001B0  22203          LA    1,432(0,13)
000104F8 E3F0 C1F0 0004          00010230  22204          LG    15,@lit_1941_1672 ; rd_kafka_log0
000104FE                                   22205 @@gen_label2158 DS    0H
000104FE 05EF                              22206          BALR  14,15
00010500                                   22207 @@gen_label2159 DS    0H
00010500                                   22208 @L2071   DS    0H
                                           22209 * ***
                                           22210 * ***   # 1401 "C:\asgkafka\librdkafka\src\rdkafka_msgset_reader.c"
                                           22211 * ***
                                           22212 * ***
                                           22213 * ***           if (rd_kafka_q_concat0(msetr->msetr_par_rkq,&msetr->ms\
                                           22214 * etr_rkq,1 ) != -1) {
00010500 E3F0 3118 0004          00000118  22215          LG    15,280(0,3)
00010506 E3F0 D1B0 0024          000001B0  22216          STG   15,432(0,13)
0001050C 41F0 3068               00000068  22217          LA    15,104(0,3)
00010510 E3F0 D1B8 0024          000001B8  22218          STG   15,440(0,13)
00010516 E548 D1C0 0001          000001C0  22219          MVGHI 448(13),1
0001051C 4110 D1B0               000001B0  22220          LA    1,432(0,13)
00010520 E3F0 C218 0004          00010258  22221          LG    15,@lit_1941_1689 ; rd_kafka_q_concat0
00010526                                   22222 @@gen_label2160 DS    0H
00010526 05EF                              22223          BALR  14,15
00010528                                   22224 @@gen_label2161 DS    0H
00010528 A7FE FFFF               0000FFFF  22225          CHI   15,-1
0001052C 4780 C50A               0001054A  22226          BE    @L2077
                                           22227 * ***
                                           22228 * ***
                                           22229 * ***                   if (((last_offset != -1)))
00010530 E558 D0A8 FFFF          000000A8  22230          CGHSI 168(13),-1
                                                                                                                           Page  441 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010536 4780 C50A               0001054A  22231          BE    @L2077
                                           22232 * ***                           rktp->rktp_offsets.fetch_offset = last\
                                           22233 * _offset + 1;
0001053A A7F9 0001               00000001  22234          LGHI  15,1        ; 1
0001053E E3F0 D0A8 0008          000000A8  22235          AG    15,168(0,13)
00010544 E3F0 4238 0024          00000238  22236          STG   15,568(0,4) ; offset of rktp_offsets in rd_kafka_toppar_*
                                                                s
0001054A                                   22237 @L2078   DS    0H
                                           22238 * ***           }
0001054A                                   22239 @L2077   DS    0H
                                           22240 * ***
                                           22241 * ***
                                           22242 * ***
                                           22243 * ***           if (msetr->msetr_next_offset > rktp->rktp_offsets.fetc\
                                           22244 * h_offset)
0001054A E3F0 3120 0004          00000120  22245          LG    15,288(0,3) ; offset of msetr_next_offset in rd_kafka_ms*
                                                                gset_reader_s
00010550 E3F0 4238 0020          00000238  22246          CG    15,568(0,4)
00010556 47D0 C526               00010566  22247          BNH   @L2079
                                           22248 * ***                   rktp->rktp_offsets.fetch_offset = msetr->msetr\
                                           22249 * _next_offset;
0001055A E3F0 3120 0004          00000120  22250          LG    15,288(0,3) ; offset of msetr_next_offset in rd_kafka_ms*
                                                                gset_reader_s
00010560 E3F0 4238 0024          00000238  22251          STG   15,568(0,4) ; offset of rktp_offsets in rd_kafka_toppar_*
                                                                s
00010566                                   22252 @L2079   DS    0H
                                           22253 * ***
                                           22254 * ***           rd_kafka_q_destroy_owner(&msetr->msetr_rkq);
00010566 41F0 3068               00000068  22255          LA    15,104(0,3)
0001056A E3F0 D1B0 0024          000001B0  22256          STG   15,432(0,13)
00010570 4110 D1B0               000001B0  22257          LA    1,432(0,13)
00010574 E3F0 C220 0004          00010260  22258          LG    15,@lit_1941_1691 ; rd_kafka_q_destroy_owner
0001057A                                   22259 @@gen_label2165 DS    0H
0001057A 05EF                              22260          BALR  14,15
0001057C                                   22261 @@gen_label2166 DS    0H
                                           22262 * ***
                                           22263 * ***
                                           22264 * ***
                                           22265 * ***           rd_slice_read(&msetr->msetr_rkbuf->rkbuf_reader, ((voi\
                                           22266 * d *)0),
                                           22267 * ***                         ((&msetr->msetr_rkbuf->rkbuf_reader)->en\
                                           22268 * d - rd_slice_abs_offset(&msetr->msetr_rkbuf->rkbuf_reader)));
0001057C E3F0 3000 0004          00000000  22269          LG    15,0(0,3)   ; msetr
00010582 E340 F098 0004          00000098  22270          LG    4,152(0,15) ; offset of end in rd_slice_s
00010588 E3F0 3000 0004          00000000  22271          LG    15,0(0,3)   ; msetr
0001058E 41F0 F078               00000078  22272          LA    15,120(0,15)
00010592 E3F0 D1B0 0024          000001B0  22273          STG   15,432(0,13)
00010598 4110 D1B0               000001B0  22274          LA    1,432(0,13)
0001059C E3F0 C228 0004          00010268  22275          LG    15,@lit_1941_1692 ; rd_slice_abs_offset
000105A2                                   22276 @@gen_label2167 DS    0H
000105A2 05EF                              22277          BALR  14,15
000105A4                                   22278 @@gen_label2168 DS    0H
                                                                                                                           Page  442 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000105A4 B90B 004F                         22279          SLGR  4,15
000105A8 E3F0 3000 0004          00000000  22280          LG    15,0(0,3)   ; msetr
000105AE 41F0 F078               00000078  22281          LA    15,120(0,15)
000105B2 E3F0 D1B0 0024          000001B0  22282          STG   15,432(0,13)
000105B8 D707 D1B8 D1B8 000001B8 000001B8  22283          XC    440(8,13),440(13)
000105BE E340 D1C0 0024          000001C0  22284          STG   4,448(0,13)
000105C4 4110 D1B0               000001B0  22285          LA    1,432(0,13)
000105C8 E3F0 C230 0004          00010270  22286          LG    15,@lit_1941_1693 ; rd_slice_read
000105CE                                   22287 @@gen_label2169 DS    0H
000105CE 05EF                              22288          BALR  14,15
000105D0                                   22289 @@gen_label2170 DS    0H
                                           22290 * ***           return err;
000105D0 B914 00F2                         22291          LGFR  15,2
                                           22292 * ***   }
                                           22293 * * **** Start of Epilogue
                                           22294          DCCEPIL
000105D4                                   22295+         ds 0h                                                          01-DCCEP
                                           22296+* Epilog
000105D4 D707 D088 D088 00000088 00000088  22297+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000105DA E3D0 D080 0004          00000080  22298+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000105E0 E3C0 D090 0004          00000090  22299+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000105E6 E3B0 C018 0004          00000018  22300+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000105EC E3C0 B010 0021          00000010  22301+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000105F2 E3E0 D008 0004          00000008  22302+         lg  14,8(0,13)          load up return address                 01-DCCEP
000105F8 EB1C D020 0004          00000020  22303+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000105FE 078E                              22304+         bcr 8,14                if same dsab, just return              01-DCCEP
00010600 E3F0 D010 0024          00000010  22305+         stg 15,16(0,13)         save return code                       01-DCCEP
00010606 E300 D018 0024          00000018  22306+         stg 0,24(0,13)          save more return code                  01-DCCEP
0001060C E3F0 D090 0004          00000090  22307+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00010612 E3F0 F018 0004          00000018  22308+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00010618 47F0 F040               00000040  22309+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           22310+* End of Epilog
                                           22311 * * **** End of Epilogue
                                           22312          DROP  12
                                           22313 *
                                           22314 *   DSECT for automatic variables in "rd_kafka_msgset_reader_run"
                                           22315 *      (FUNCTION #1941)
                                           22316 *
00000000                00000000 000001B0  22317 @AUTO#rd_kafka_msgset_reader_run DSECT
00000000                                   22318          DS    XL168
000000A8                                   22319 rd_kafka_msgset_reader_run#last_offset#0 DS 8XL1 ; last_offset
000000B0                000000B0 000000A8  22320          ORG   @AUTO#rd_kafka_msgset_reader_run+168
000000A8                                   22321 rd_kafka_msgset_reader_run#err#0 DS 1F ; err
000000AC                000000AC 000000B0  22322          ORG   @AUTO#rd_kafka_msgset_reader_run+176
000000B0                                   22323 rd_kafka_msgset_reader_run#_logname#11 DS 256XL1 ; _logname
000001B0                000001B0 000000B0  22324          ORG   @AUTO#rd_kafka_msgset_reader_run+176
000000B0                                   22325 rd_kafka_msgset_reader_run#_logname#6 DS 256XL1 ; _logname
                                           22326 *
0001061C                00000000 00012806  22327 @CODE    CSECT
                                           22328 *
                                           22329 *
                                           22330 *
                                                                                                                           Page  443 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           22331 * ....... start of rd_kafka_msgset_parse
                                           22332 rd_kafka_msgset_parse ALIAS X'99846D92818692816D94A287A285A36D978199A28*
                                                                5'
0001061C                                   22333 @LNAME1923 DS  0H
0001061C 00000015                          22334          DC    X'00000015'
00010620 99846D9281869281                  22335          DC    C'rd_kafka_msgset_parse'
00010635 00                                22336          DC    X'00'
                                           22337 rd_kafka_msgset_parse DCCPRLG CINDEX=1923,BASER=12,FRAME=536,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1923
                                           22338          macro
                                           22339          dccextrn &m
                                           22340          gblc    &$dccext(1000)
                                           22341          gbla    &$dccexti
                                           22342          lcla    &i
                                           22343 &$dccext(&$dccexti+1) setc    '&m'
                                           22344 &i       seta    1
                                           22345 .loop    aif    (&i gt &$dccexti).around
                                           22346          aif    ('&$dccext(&i)' eq '&m').getout
                                           22347 &i       seta    &i+1
                                           22348          ago     .loop
                                           22349 .around  anop
                                           22350 &$dccexti seta &$dccexti+1
                                           22351          extrn  &m
                                           22352 .getout  anop
                                           22353          mend
00010638                                   22354+$eye0139    ds    0d                                                    02-DCCCA
00010638 C4C3C3                            22355+         dc cl3'DCC'                                                    02-DCCCA
0001063B 01                                22356+         dc xl1'01' format one                                          02-DCCCA
0001063C 00000000                          22357+         dc a(0)                                                        02-DCCCA
00010640 00000000000106AA                  22358+         dc ad(@PER_1923)                                               02-DCCCA
00010648 0000000000000218                  22359+         dc ad(536)                                                     02-DCCCA
00010650 0000000000000000                  22360+         dc ad(0)                                                       02-DCCCA
00010658 0000000000001000                  22361+         dc ad(4096)                                                    02-DCCCA
00010660 20                                22362+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00010661 03                                22363+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00010662 03                                22364+         dc al1(3)                                                      02-DCCCA
00010663 08                                22365+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00010664 00                                22366+         dc bl.8'00000000'                                              02-DCCCA
00010665 000000                            22367+         dc al3(0)                                                      02-DCCCA
00010668 000000000001061C                  22368+         dc ad(@LNAME1923)                                              02-DCCCA
00010670                                   22369+         ds 0d                                                          02-DCCCA
00010670 0000000000010638                  22370+         dc ad($eye0139)                                                02-DCCCA
00010678 0000000000000000                  22371+         dc ad(0)                                                       02-DCCCA
00010680                                   22372+         ds    0d                                                       01-DCCPR
                                           22373+         entry rd_kafka_msgset_parse                                    01-DCCPR
00010680                                   22374+rd_kafka_msgset_parse ds 0d                                             01-DCCPR
00010680                                   22375+@REGION_1923_1 ds 0h                                                    01-DCCPR
00010680 EBEC D008 0024          00000008  22376+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00010686 E3E0 D088 0004          00000088  22377+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0001068C E3C0 D090 0004          00000090  22378+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00010692 B904 002E                         22379+         lgr   2,14                copy addr of our savearea            01-DCCPR
00010696 E3B0 C018 0004          00000018  22380+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page  444 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0001069C A7EB 0218               00000218  22381+         aghi  14,536              increase by frame size               01-DCCPR
000106A0 E3E0 C020 0021          00000020  22382+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000106A6 4720 B020               00000020  22383+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000106AA                                   22384+@PER_1923 ds   0h                                                       01-DCCPR
000106AA EBDE 2080 0024          00000080  22385+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000106B0 E3C0 2090 0024          00000090  22386+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000106B6 B904 00D2                         22387+         lgr   13,2                set real frame pointer               01-DCCPR
000106BA B904 00CF                         22388+         lgr   12,15               set base reg                         01-DCCPR
                        00010680           22389+         using @REGION_1923_1,12                                        01-DCCPR
                                           22390 * ******* End of Prologue
                                           22391 * *
000106BE E320 1010 0004          00000010  22392          LG    2,16(0,1)   ; rktp
                                           22393 * ***           rd_kafka_msgset_reader_t msetr;
                                           22394 * ***           rd_kafka_resp_err_t err;
                                           22395 * ***
                                           22396 * ***           rd_kafka_msgset_reader_init(&msetr, rkbuf, rktp, tver,
                                           22397 * ***                                       aborted_txns,
                                           22398 * ***                                       rktp->rktp_fetchq);
000106C4 41F0 D0A8               000000A8  22399          LA    15,168(0,13)
000106C8 E3F0 D1E8 0024          000001E8  22400          STG   15,488(0,13)
000106CE E3F0 1000 0004          00000000  22401          LG    15,0(0,1)   ; rkbuf
000106D4 E3F0 D1F0 0024          000001F0  22402          STG   15,496(0,13)
000106DA E320 D1F8 0024          000001F8  22403          STG   2,504(0,13)
000106E0 E3F0 1020 0004          00000020  22404          LG    15,32(0,1)  ; tver
000106E6 E3F0 D200 0024          00000200  22405          STG   15,512(0,13)
000106EC E3F0 1018 0004          00000018  22406          LG    15,24(0,1)  ; aborted_txns
000106F2 E3F0 D208 0024          00000208  22407          STG   15,520(0,13)
000106F8 E3F0 2138 0004          00000138  22408          LG    15,312(0,2)
000106FE E3F0 D210 0024          00000210  22409          STG   15,528(0,13)
00010704 4110 D1E8               000001E8  22410          LA    1,488(0,13)
00010708 E3F0 C198 0004          00010818  22411          LG    15,@lit_1923_1695 ; rd_kafka_msgset_reader_init
0001070E                                   22412 @@gen_label2171 DS    0H
0001070E 05EF                              22413          BALR  14,15
00010710                                   22414 @@gen_label2172 DS    0H
                                           22415 * ***
                                           22416 * ***
                                           22417 * ***           err = rd_kafka_msgset_reader_run(&msetr);
00010710 41F0 D0A8               000000A8  22418          LA    15,168(0,13)
00010714 E3F0 D1E8 0024          000001E8  22419          STG   15,488(0,13)
0001071A 4110 D1E8               000001E8  22420          LA    1,488(0,13)
0001071E E3F0 C1A0 0004          00010820  22421          LG    15,@lit_1923_1696 ; rd_kafka_msgset_reader_run
00010724                                   22422 @@gen_label2173 DS    0H
00010724 05EF                              22423          BALR  14,15
00010726                                   22424 @@gen_label2174 DS    0H
00010726 183F                              22425          LR    3,15
                                           22426 * ***
                                           22427 * ***           rd_atomic64_add(&rktp->rktp_c.rx_msgs, msetr.msetr_msg\
                                           22428 * cnt);
00010728 41F0 2480               00000480  22429          LA    15,1152(0,2)
0001072C E3F0 D1E8 0024          000001E8  22430          STG   15,488(0,13)
00010732 E3F0 D100 0014          00000100  22431          LGF   15,256(0,13)
00010738 E3F0 D1F0 0024          000001F0  22432          STG   15,496(0,13)
                                                                                                                           Page  445 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0001073E 4110 D1E8               000001E8  22433          LA    1,488(0,13)
00010742 E340 C1A8 0004          00010828  22434          LG    4,@lit_1923_1697 ; rd_atomic64_add
00010748 B904 00F4                         22435          LGR   15,4
0001074C                                   22436 @@gen_label2175 DS    0H
0001074C 05EF                              22437          BALR  14,15
0001074E                                   22438 @@gen_label2176 DS    0H
                                           22439 * ***           rd_atomic64_add(&rktp->rktp_c.rx_msg_bytes, msetr.mset\
                                           22440 * r_msg_bytes);
0001074E 41F0 24B0               000004B0  22441          LA    15,1200(0,2)
00010752 E3F0 D1E8 0024          000001E8  22442          STG   15,488(0,13)
00010758 E3F0 D108 0004          00000108  22443          LG    15,264(0,13)
0001075E E3F0 D1F0 0024          000001F0  22444          STG   15,496(0,13)
00010764 4110 D1E8               000001E8  22445          LA    1,488(0,13)
00010768 B904 00F4                         22446          LGR   15,4
0001076C                                   22447 @@gen_label2177 DS    0H
0001076C 05EF                              22448          BALR  14,15
0001076E                                   22449 @@gen_label2178 DS    0H
                                           22450 * ***
                                           22451 * ***           rd_avg_add(&rktp->rktp_rkt->rkt_avg_batchcnt,
                                           22452 * ***                      (int64_t)msetr.msetr_msgcnt);
0001076E E3F0 2060 0004          00000060  22453          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00010774 41F0 F208               00000208  22454          LA    15,520(0,15)
00010778 E3F0 D1E8 0024          000001E8  22455          STG   15,488(0,13)
0001077E E3F0 D100 0014          00000100  22456          LGF   15,256(0,13)
00010784 E3F0 D1F0 0024          000001F0  22457          STG   15,496(0,13)
0001078A 4110 D1E8               000001E8  22458          LA    1,488(0,13)
0001078E E340 C1B0 0004          00010830  22459          LG    4,@lit_1923_1699 ; rd_avg_add
00010794 B904 00F4                         22460          LGR   15,4
00010798                                   22461 @@gen_label2179 DS    0H
00010798 05EF                              22462          BALR  14,15
0001079A                                   22463 @@gen_label2180 DS    0H
                                           22464 * ***           rd_avg_add(&rktp->rktp_rkt->rkt_avg_batchsize,
                                           22465 * ***                      (int64_t)msetr.msetr_msg_bytes);
0001079A E3F0 2060 0004          00000060  22466          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
000107A0 41F0 F150               00000150  22467          LA    15,336(0,15)
000107A4 E3F0 D1E8 0024          000001E8  22468          STG   15,488(0,13)
000107AA E3F0 D108 0004          00000108  22469          LG    15,264(0,13)
000107B0 E3F0 D1F0 0024          000001F0  22470          STG   15,496(0,13)
000107B6 4110 D1E8               000001E8  22471          LA    1,488(0,13)
000107BA B904 00F4                         22472          LGR   15,4
000107BE                                   22473 @@gen_label2181 DS    0H
000107BE 05EF                              22474          BALR  14,15
000107C0                                   22475 @@gen_label2182 DS    0H
                                           22476 * ***
                                           22477 * ***           return err;
000107C0 B914 00F3                         22478          LGFR  15,3
                                           22479 * ***
                                           22480 * ***   }
                                           22481 * * **** Start of Epilogue
                                           22482          DCCEPIL
000107C4                                   22483+         ds 0h                                                          01-DCCEP
                                           22484+* Epilog
                                                                                                                           Page  446 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000107C4 D707 D088 D088 00000088 00000088  22485+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000107CA E3D0 D080 0004          00000080  22486+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000107D0 E3C0 D090 0004          00000090  22487+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000107D6 E3B0 C018 0004          00000018  22488+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000107DC E3C0 B010 0021          00000010  22489+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000107E2 E3E0 D008 0004          00000008  22490+         lg  14,8(0,13)          load up return address                 01-DCCEP
000107E8 EB1C D020 0004          00000020  22491+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000107EE 078E                              22492+         bcr 8,14                if same dsab, just return              01-DCCEP
000107F0 E3F0 D010 0024          00000010  22493+         stg 15,16(0,13)         save return code                       01-DCCEP
000107F6 E300 D018 0024          00000018  22494+         stg 0,24(0,13)          save more return code                  01-DCCEP
000107FC E3F0 D090 0004          00000090  22495+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00010802 E3F0 F018 0004          00000018  22496+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00010808 47F0 F040               00000040  22497+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           22498+* End of Epilog
                                           22499 * * **** End of Epilogue
00010810                                   22500          DS    0D
00010810 00000218                          22501 @FRAMESIZE_1923 DC F'536'
00010814 00000000
00010818 00000000000030E8                  22502 @lit_1923_1695 DC AD(rd_kafka_msgset_reader_init)
00010820 0000000000010040                  22503 @lit_1923_1696 DC AD(rd_kafka_msgset_reader_run)
00010828 00000000000002F0                  22504 @lit_1923_1697 DC AD(rd_atomic64_add)
00010830 0000000000001048                  22505 @lit_1923_1699 DC AD(rd_avg_add)
                                           22506          DROP  12
                                           22507 *
                                           22508 *   DSECT for automatic variables in "rd_kafka_msgset_parse"
                                           22509 *      (FUNCTION #1923)
                                           22510 *
00000000                00000000 000001E8  22511 @AUTO#rd_kafka_msgset_parse DSECT
00000000                                   22512          DS    XL168
000000A8                                   22513 rd_kafka_msgset_parse#err#0 DS 1F ; err
000000AC                000000AC 000000A8  22514          ORG   @AUTO#rd_kafka_msgset_parse+168
000000A8                                   22515 rd_kafka_msgset_parse#msetr#0 DS 320XL1 ; msetr
                                           22516 *
00010838                00000000 00012806  22517 @CODE    CSECT
                                           22518 *
                                           22519 *
                                           22520 *
                                           22521 * ....... start of rd_kafka_offset_cmp
00010838                                   22522 @LNAME1951 DS  0H
00010838 00000013                          22523          DC    X'00000013'
0001083C 99846D9281869281                  22524          DC    C'rd_kafka_offset_cmp'
0001084F 00                                22525          DC    X'00'
                                           22526 rd_kafka_offset_cmp DCCPRLG CINDEX=1951,BASER=12,FRAME=176,SAVEAREA=NO,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1951
                                           22527          macro
                                           22528          dccextrn &m
                                           22529          gblc    &$dccext(1000)
                                           22530          gbla    &$dccexti
                                           22531          lcla    &i
                                           22532 &$dccext(&$dccexti+1) setc    '&m'
                                           22533 &i       seta    1
                                           22534 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page  447 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           22535          aif    ('&$dccext(&i)' eq '&m').getout
                                           22536 &i       seta    &i+1
                                           22537          ago     .loop
                                           22538 .around  anop
                                           22539 &$dccexti seta &$dccexti+1
                                           22540          extrn  &m
                                           22541 .getout  anop
                                           22542          mend
00010850                                   22543+$eye0142    ds    0d                                                    02-DCCCA
00010850 C4C3C3                            22544+         dc cl3'DCC'                                                    02-DCCCA
00010853 01                                22545+         dc xl1'01' format one                                          02-DCCCA
00010854 00000000                          22546+         dc a(0)                                                        02-DCCCA
00010858 0000000000000000                  22547+         dc ad(0)                                                       02-DCCCA
00010860 00000000000000B0                  22548+         dc ad(176)                                                     02-DCCCA
00010868 0000000000000000                  22549+         dc ad(0)                                                       02-DCCCA
00010870 0000000000001000                  22550+         dc ad(4096)                                                    02-DCCCA
00010878 20                                22551+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00010879 03                                22552+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0001087A 03                                22553+         dc al1(3)                                                      02-DCCCA
0001087B 08                                22554+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0001087C 00                                22555+         dc bl.8'00000000'                                              02-DCCCA
0001087D 000000                            22556+         dc al3(0)                                                      02-DCCCA
00010880 0000000000010838                  22557+         dc ad(@LNAME1951)                                              02-DCCCA
00010888                                   22558+         ds 0d                                                          02-DCCCA
00010888 0000000000010850                  22559+         dc ad($eye0142)                                                02-DCCCA
00010890 0000000000000000                  22560+         dc ad(0)                                                       02-DCCCA
00010898                                   22561+         ds    0d                                                       01-DCCPR
00010898                                   22562+rd_kafka_offset_cmp ds 0d                                               01-DCCPR
00010898                                   22563+@REGION_1951_1 ds 0h                                                    01-DCCPR
00010898 EBEC D008 0024          00000008  22564+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0001089E B904 00CF                         22565+         lgr   12,15               set base reg                         01-DCCPR
                        00010898           22566+         using @REGION_1951_1,12                                        01-DCCPR
                                           22567 * ******* End of Prologue
                                           22568 * *
                                           22569 * ***           const int64_t *a = _a, *b = _b;
000108A2 E3F0 1000 0004          00000000  22570          LG    15,0(0,1)   ; _a
000108A8 E310 1008 0004          00000008  22571          LG    1,8(0,1)    ; _b
                                           22572 * ***           return (*a > *b) - (*a < *b);
000108AE E320 F000 0004          00000000  22573          LG    2,0(0,15)   ; a
000108B4 E320 1000 0020          00000000  22574          CG    2,0(0,1)
000108BA 47D0 C02E               000108C6  22575          BNH   @@gen_label2183
000108BE A728 0001               00000001  22576          LHI   2,1
000108C2 47F0 C032               000108CA  22577          B     @@gen_label2184
000108C6                                   22578 @@gen_label2183 DS 0H
000108C6 A728 0000               00000000  22579          LHI   2,0
000108CA                                   22580 @@gen_label2184 DS 0H
000108CA E3F0 F000 0004          00000000  22581          LG    15,0(0,15)  ; a
000108D0 E3F0 1000 0020          00000000  22582          CG    15,0(0,1)
000108D6 47B0 C04A               000108E2  22583          BNL   @@gen_label2185
000108DA A7F8 0001               00000001  22584          LHI   15,1
000108DE 47F0 C04E               000108E6  22585          B     @@gen_label2186
000108E2                                   22586 @@gen_label2185 DS 0H
                                                                                                                           Page  448 
  Active Usings: @REGION_1951_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000108E2 A7F8 0000               00000000  22587          LHI   15,0
000108E6                                   22588 @@gen_label2186 DS 0H
000108E6 1B2F                              22589          SR    2,15
000108E8 B914 00F2                         22590          LGFR  15,2
                                           22591 * ***   }
                                           22592 * * **** Start of Epilogue
                                           22593          DCCEPIL
000108EC                                   22594+         ds 0h                                                          01-DCCEP
                                           22595+* Epilog
                                           22596+* Epilog
000108EC E3E0 D008 0004          00000008  22597+         lg    14,8(,13) restore the reg                                01-DCCEP
000108F2 EB1C D020 0004          00000020  22598+         lmg   1,12,32(13)                                              01-DCCEP
000108F8 07FE                              22599+         br   14                                                        01-DCCEP
                                           22600+* End of Epilog
                                           22601 * * **** End of Epilogue
                                           22602          DROP  12
                                           22603 *
                                           22604 *   DSECT for automatic variables in "rd_kafka_offset_cmp"
                                           22605 *      (FUNCTION #1951)
                                           22606 *
00000000                00000000 000000A8  22607 @AUTO#rd_kafka_offset_cmp DSECT
00000000                                   22608          DS    XL168
                                           22609 *
000108FA                00000000 00012806  22610 @CODE    CSECT
                                           22611 *
                                           22612 *
                                           22613 *
                                           22614 * ....... start of rd_kafka_aborted_txn_cmp_by_pid
000108FA                                   22615 @LNAME1952 DS  0H
000108FA 0000001F                          22616          DC    X'0000001F'
000108FE 99846D9281869281                  22617          DC    C'rd_kafka_aborted_txn_cmp_by_pid'
0001091D 00                                22618          DC    X'00'
                                           22619 rd_kafka_aborted_txn_cmp_by_pid DCCPRLG CINDEX=1952,BASER=12,FRAME=176,*
                                                                SAVEAREA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1952
                                           22620          macro
                                           22621          dccextrn &m
                                           22622          gblc    &$dccext(1000)
                                           22623          gbla    &$dccexti
                                           22624          lcla    &i
                                           22625 &$dccext(&$dccexti+1) setc    '&m'
                                           22626 &i       seta    1
                                           22627 .loop    aif    (&i gt &$dccexti).around
                                           22628          aif    ('&$dccext(&i)' eq '&m').getout
                                           22629 &i       seta    &i+1
                                           22630          ago     .loop
                                           22631 .around  anop
                                           22632 &$dccexti seta &$dccexti+1
                                           22633          extrn  &m
                                           22634 .getout  anop
                                           22635          mend
00010920                                   22636+$eye0145    ds    0d                                                    02-DCCCA
00010920 C4C3C3                            22637+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page  449 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010923 01                                22638+         dc xl1'01' format one                                          02-DCCCA
00010924 00000000                          22639+         dc a(0)                                                        02-DCCCA
00010928 0000000000000000                  22640+         dc ad(0)                                                       02-DCCCA
00010930 00000000000000B0                  22641+         dc ad(176)                                                     02-DCCCA
00010938 0000000000000000                  22642+         dc ad(0)                                                       02-DCCCA
00010940 0000000000001000                  22643+         dc ad(4096)                                                    02-DCCCA
00010948 20                                22644+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00010949 03                                22645+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0001094A 03                                22646+         dc al1(3)                                                      02-DCCCA
0001094B 08                                22647+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0001094C 00                                22648+         dc bl.8'00000000'                                              02-DCCCA
0001094D 000000                            22649+         dc al3(0)                                                      02-DCCCA
00010950 00000000000108FA                  22650+         dc ad(@LNAME1952)                                              02-DCCCA
00010958                                   22651+         ds 0d                                                          02-DCCCA
00010958 0000000000010920                  22652+         dc ad($eye0145)                                                02-DCCCA
00010960 0000000000000000                  22653+         dc ad(0)                                                       02-DCCCA
00010968                                   22654+         ds    0d                                                       01-DCCPR
00010968                                   22655+rd_kafka_aborted_txn_cmp_by_pid ds 0d                                   01-DCCPR
00010968                                   22656+@REGION_1952_1 ds 0h                                                    01-DCCPR
00010968 EBEC D008 0024          00000008  22657+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0001096E B904 00CF                         22658+         lgr   12,15               set base reg                         01-DCCPR
                        00010968           22659+         using @REGION_1952_1,12                                        01-DCCPR
                                           22660 * ******* End of Prologue
                                           22661 * *
                                           22662 * ***           const rd_kafka_aborted_txn_start_offsets_t *a = _a, *b\
                                           22663 *  = _b;
00010972 E3F0 1000 0004          00000000  22664          LG    15,0(0,1)   ; _a
00010978 E310 1008 0004          00000008  22665          LG    1,8(0,1)    ; _b
                                           22666 * ***           return (a->pid > b->pid) - (a->pid < b->pid);
0001097E E320 F020 0004          00000020  22667          LG    2,32(0,15)  ; offset of pid in rd_kafka_aborted_txn_star*
                                                                t_offsets_s
00010984 E320 1020 0020          00000020  22668          CG    2,32(0,1)
0001098A 47D0 C02E               00010996  22669          BNH   @@gen_label2187
0001098E A728 0001               00000001  22670          LHI   2,1
00010992 47F0 C032               0001099A  22671          B     @@gen_label2188
00010996                                   22672 @@gen_label2187 DS 0H
00010996 A728 0000               00000000  22673          LHI   2,0
0001099A                                   22674 @@gen_label2188 DS 0H
0001099A E3F0 F020 0004          00000020  22675          LG    15,32(0,15) ; offset of pid in rd_kafka_aborted_txn_star*
                                                                t_offsets_s
000109A0 E3F0 1020 0020          00000020  22676          CG    15,32(0,1)
000109A6 47B0 C04A               000109B2  22677          BNL   @@gen_label2189
000109AA A7F8 0001               00000001  22678          LHI   15,1
000109AE 47F0 C04E               000109B6  22679          B     @@gen_label2190
000109B2                                   22680 @@gen_label2189 DS 0H
000109B2 A7F8 0000               00000000  22681          LHI   15,0
000109B6                                   22682 @@gen_label2190 DS 0H
000109B6 1B2F                              22683          SR    2,15
000109B8 B914 00F2                         22684          LGFR  15,2
                                           22685 * ***   }
                                           22686 * * **** Start of Epilogue
                                           22687          DCCEPIL
                                                                                                                           Page  450 
  Active Usings: @REGION_1952_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000109BC                                   22688+         ds 0h                                                          01-DCCEP
                                           22689+* Epilog
                                           22690+* Epilog
000109BC E3E0 D008 0004          00000008  22691+         lg    14,8(,13) restore the reg                                01-DCCEP
000109C2 EB1C D020 0004          00000020  22692+         lmg   1,12,32(13)                                              01-DCCEP
000109C8 07FE                              22693+         br   14                                                        01-DCCEP
                                           22694+* End of Epilog
                                           22695 * * **** End of Epilogue
                                           22696          DROP  12
                                           22697 *
                                           22698 *   DSECT for automatic variables in "rd_kafka_aborted_txn_cmp_by_pid"
                                           22699 *      (FUNCTION #1952)
                                           22700 *
00000000                00000000 000000A8  22701 @AUTO#rd_kafka_aborted_txn_cmp_by_pid DSECT
00000000                                   22702          DS    XL168
                                           22703 *
000109CA                00000000 00012806  22704 @CODE    CSECT
                                           22705 *
                                           22706 *
                                           22707 *
                                           22708 * ....... start of rd_kafka_aborted_txn_node_destroy
000109CA                                   22709 @LNAME1953 DS  0H
000109CA 00000021                          22710          DC    X'00000021'
000109CE 99846D9281869281                  22711          DC    C'rd_kafka_aborted_txn_node_destro'
000109EE A8                                22712          DC    C'y'
000109EF 00                                22713          DC    X'00'
                                           22714 rd_kafka_aborted_txn_node_destroy DCCPRLG CINDEX=1953,BASER=12,FRAME=18*
                                                                4,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1953
                                           22715          macro
                                           22716          dccextrn &m
                                           22717          gblc    &$dccext(1000)
                                           22718          gbla    &$dccexti
                                           22719          lcla    &i
                                           22720 &$dccext(&$dccexti+1) setc    '&m'
                                           22721 &i       seta    1
                                           22722 .loop    aif    (&i gt &$dccexti).around
                                           22723          aif    ('&$dccext(&i)' eq '&m').getout
                                           22724 &i       seta    &i+1
                                           22725          ago     .loop
                                           22726 .around  anop
                                           22727 &$dccexti seta &$dccexti+1
                                           22728          extrn  &m
                                           22729 .getout  anop
                                           22730          mend
000109F0                                   22731+$eye0148    ds    0d                                                    02-DCCCA
000109F0 C4C3C3                            22732+         dc cl3'DCC'                                                    02-DCCCA
000109F3 01                                22733+         dc xl1'01' format one                                          02-DCCCA
000109F4 00000000                          22734+         dc a(0)                                                        02-DCCCA
000109F8 0000000000010A62                  22735+         dc ad(@PER_1953)                                               02-DCCCA
00010A00 00000000000000B8                  22736+         dc ad(184)                                                     02-DCCCA
00010A08 0000000000000000                  22737+         dc ad(0)                                                       02-DCCCA
00010A10 0000000000001000                  22738+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page  451 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010A18 20                                22739+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00010A19 03                                22740+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00010A1A 03                                22741+         dc al1(3)                                                      02-DCCCA
00010A1B 08                                22742+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00010A1C 00                                22743+         dc bl.8'00000000'                                              02-DCCCA
00010A1D 000000                            22744+         dc al3(0)                                                      02-DCCCA
00010A20 00000000000109CA                  22745+         dc ad(@LNAME1953)                                              02-DCCCA
00010A28                                   22746+         ds 0d                                                          02-DCCCA
00010A28 00000000000109F0                  22747+         dc ad($eye0148)                                                02-DCCCA
00010A30 0000000000000000                  22748+         dc ad(0)                                                       02-DCCCA
00010A38                                   22749+         ds    0d                                                       01-DCCPR
00010A38                                   22750+rd_kafka_aborted_txn_node_destroy ds 0d                                 01-DCCPR
00010A38                                   22751+@REGION_1953_1 ds 0h                                                    01-DCCPR
00010A38 EBEC D008 0024          00000008  22752+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00010A3E E3E0 D088 0004          00000088  22753+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00010A44 E3C0 D090 0004          00000090  22754+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00010A4A B904 002E                         22755+         lgr   2,14                copy addr of our savearea            01-DCCPR
00010A4E E3B0 C018 0004          00000018  22756+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00010A54 A7EB 00B8               000000B8  22757+         aghi  14,184              increase by frame size               01-DCCPR
00010A58 E3E0 C020 0021          00000020  22758+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00010A5E 4720 B020               00000020  22759+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00010A62                                   22760+@PER_1953 ds   0h                                                       01-DCCPR
00010A62 EBDE 2080 0024          00000080  22761+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00010A68 E3C0 2090 0024          00000090  22762+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00010A6E B904 00D2                         22763+         lgr   13,2                set real frame pointer               01-DCCPR
00010A72 B904 00CF                         22764+         lgr   12,15               set base reg                         01-DCCPR
                        00010A38           22765+         using @REGION_1953_1,12                                        01-DCCPR
                                           22766 * ******* End of Prologue
                                           22767 * *
                                           22768 * ***           rd_kafka_aborted_txn_start_offsets_t *node_ptr = _node\
                                           22769 * _ptr;
00010A76 E320 1000 0004          00000000  22770          LG    2,0(0,1)    ; _node_ptr
                                           22771 * ***           rd_list_destroy(&node_ptr->offsets);
00010A7C 41F0 2030               00000030  22772          LA    15,48(0,2)
00010A80 E3F0 D0B0 0024          000000B0  22773          STG   15,176(0,13)
00010A86 4110 D0B0               000000B0  22774          LA    1,176(0,13)
00010A8A E3F0 C0C0 0004          00010AF8  22775          LG    15,@lit_1953_1702 ; rd_list_destroy
00010A90                                   22776 @@gen_label2191 DS    0H
00010A90 05EF                              22777          BALR  14,15
00010A92                                   22778 @@gen_label2192 DS    0H
                                           22779 * ***           rd_free(node_ptr);
00010A92 E320 D0B0 0024          000000B0  22780          STG   2,176(0,13)
00010A98 4110 D0B0               000000B0  22781          LA    1,176(0,13)
00010A9C E3F0 C0C8 0004          00010B00  22782          LG    15,@lit_1953_1703 ; rd_free
00010AA2                                   22783 @@gen_label2193 DS    0H
00010AA2 05EF                              22784          BALR  14,15
00010AA4                                   22785 @@gen_label2194 DS    0H
                                           22786 * ***   }
00010AA4                                   22787 @ret_lab_1953 DS 0H
                                           22788 * * **** Start of Epilogue
                                           22789          DCCEPIL
00010AA4                                   22790+         ds 0h                                                          01-DCCEP
                                                                                                                           Page  452 
  Active Usings: @REGION_1953_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           22791+* Epilog
00010AA4 D707 D088 D088 00000088 00000088  22792+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00010AAA E3D0 D080 0004          00000080  22793+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00010AB0 E3C0 D090 0004          00000090  22794+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00010AB6 E3B0 C018 0004          00000018  22795+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00010ABC E3C0 B010 0021          00000010  22796+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00010AC2 E3E0 D008 0004          00000008  22797+         lg  14,8(0,13)          load up return address                 01-DCCEP
00010AC8 EB1C D020 0004          00000020  22798+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00010ACE 078E                              22799+         bcr 8,14                if same dsab, just return              01-DCCEP
00010AD0 E3F0 D010 0024          00000010  22800+         stg 15,16(0,13)         save return code                       01-DCCEP
00010AD6 E300 D018 0024          00000018  22801+         stg 0,24(0,13)          save more return code                  01-DCCEP
00010ADC E3F0 D090 0004          00000090  22802+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00010AE2 E3F0 F018 0004          00000018  22803+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00010AE8 47F0 F040               00000040  22804+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           22805+* End of Epilog
                                           22806 * * **** End of Epilogue
00010AF0                                   22807          DS    0D
00010AF0 000000B8                          22808 @FRAMESIZE_1953 DC F'184'
00010AF4 00000000
00010AF8 0000000000000000                  22809 @lit_1953_1702 DC AD(rd_list_destroy)
00010B00 00000000000005A0                  22810 @lit_1953_1703 DC AD(rd_free)
                                           22811          DROP  12
                                           22812 *
                                           22813 *   DSECT for automatic variables in "rd_kafka_aborted_txn_node_destro
                                           22814 *           y"
                                           22815 *      (FUNCTION #1953)
                                           22816 *
00000000                00000000 000000A8  22817 @AUTO#rd_kafka_aborted_txn_node_destroy DSECT
00000000                                   22818          DS    XL168
                                           22819 *
00010B08                00000000 00012806  22820 @CODE    CSECT
                                           22821 *
                                           22822 *
                                           22823 *
                                           22824 * ....... start of rd_kafka_aborted_txns_new
                                           22825 rd_kafka_aborted_txns_new ALIAS X'99846D92818692816D81829699A385846DA3A*
                                                                795A26D9585A6'
00010B08                                   22826 @LNAME1918 DS  0H
00010B08 00000019                          22827          DC    X'00000019'
00010B0C 99846D9281869281                  22828          DC    C'rd_kafka_aborted_txns_new'
00010B25 00                                22829          DC    X'00'
                                           22830 rd_kafka_aborted_txns_new DCCPRLG CINDEX=1918,BASER=12,FRAME=200,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME1918
                                           22831          macro
                                           22832          dccextrn &m
                                           22833          gblc    &$dccext(1000)
                                           22834          gbla    &$dccexti
                                           22835          lcla    &i
                                           22836 &$dccext(&$dccexti+1) setc    '&m'
                                           22837 &i       seta    1
                                           22838 .loop    aif    (&i gt &$dccexti).around
                                           22839          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page  453 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           22840 &i       seta    &i+1
                                           22841          ago     .loop
                                           22842 .around  anop
                                           22843 &$dccexti seta &$dccexti+1
                                           22844          extrn  &m
                                           22845 .getout  anop
                                           22846          mend
00010B28                                   22847+$eye0151    ds    0d                                                    02-DCCCA
00010B28 C4C3C3                            22848+         dc cl3'DCC'                                                    02-DCCCA
00010B2B 01                                22849+         dc xl1'01' format one                                          02-DCCCA
00010B2C 00000000                          22850+         dc a(0)                                                        02-DCCCA
00010B30 0000000000010B9A                  22851+         dc ad(@PER_1918)                                               02-DCCCA
00010B38 00000000000000C8                  22852+         dc ad(200)                                                     02-DCCCA
00010B40 0000000000000000                  22853+         dc ad(0)                                                       02-DCCCA
00010B48 0000000000001000                  22854+         dc ad(4096)                                                    02-DCCCA
00010B50 20                                22855+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00010B51 03                                22856+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00010B52 03                                22857+         dc al1(3)                                                      02-DCCCA
00010B53 08                                22858+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00010B54 00                                22859+         dc bl.8'00000000'                                              02-DCCCA
00010B55 000000                            22860+         dc al3(0)                                                      02-DCCCA
00010B58 0000000000010B08                  22861+         dc ad(@LNAME1918)                                              02-DCCCA
00010B60                                   22862+         ds 0d                                                          02-DCCCA
00010B60 0000000000010B28                  22863+         dc ad($eye0151)                                                02-DCCCA
00010B68 0000000000000000                  22864+         dc ad(0)                                                       02-DCCCA
00010B70                                   22865+         ds    0d                                                       01-DCCPR
                                           22866+         entry rd_kafka_aborted_txns_new                                01-DCCPR
00010B70                                   22867+rd_kafka_aborted_txns_new ds 0d                                         01-DCCPR
00010B70                                   22868+@REGION_1918_1 ds 0h                                                    01-DCCPR
00010B70 EBEC D008 0024          00000008  22869+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00010B76 E3E0 D088 0004          00000088  22870+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00010B7C E3C0 D090 0004          00000090  22871+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00010B82 B904 002E                         22872+         lgr   2,14                copy addr of our savearea            01-DCCPR
00010B86 E3B0 C018 0004          00000018  22873+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00010B8C A7EB 00C8               000000C8  22874+         aghi  14,200              increase by frame size               01-DCCPR
00010B90 E3E0 C020 0021          00000020  22875+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00010B96 4720 B020               00000020  22876+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00010B9A                                   22877+@PER_1918 ds   0h                                                       01-DCCPR
00010B9A EBDE 2080 0024          00000080  22878+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00010BA0 E3C0 2090 0024          00000090  22879+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00010BA6 B904 00D2                         22880+         lgr   13,2                set real frame pointer               01-DCCPR
00010BAA B904 00CF                         22881+         lgr   12,15               set base reg                         01-DCCPR
                        00010B70           22882+         using @REGION_1918_1,12                                        01-DCCPR
00010BAE B904 0031                         22883          LGR   3,1         ; ptr to parm area
                                           22884 * ******* End of Prologue
                                           22885 * *
                                           22886 * ***           rd_kafka_aborted_txns_t *aborted_txns;
                                           22887 * ***           aborted_txns = rd_malloc(sizeof(*aborted_txns));
00010BB2 E548 D0B0 0080          000000B0  22888          MVGHI 176(13),128
00010BB8 4110 D0B0               000000B0  22889          LA    1,176(0,13)
00010BBC E3F0 C108 0004          00010C78  22890          LG    15,@lit_1918_1705 ; rd_malloc
00010BC2                                   22891 @@gen_label2195 DS    0H
                                                                                                                           Page  454 
  Active Usings: @REGION_1918_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010BC2 05EF                              22892          BALR  14,15
00010BC4                                   22893 @@gen_label2196 DS    0H
00010BC4 B904 002F                         22894          LGR   2,15
                                           22895 * ***           rd_avl_init(&aborted_txns->avl, rd_kafka_aborted_txn_c\
                                           22896 * mp_by_pid, 0);
00010BC8 E320 D0B0 0024          000000B0  22897          STG   2,176(0,13)
00010BCE E3F0 C118 0004          00010C88  22898          LG    15,@lit_1918_1706 ; rd_kafka_aborted_txn_cmp_by_pid
00010BD4 E3F0 D0B8 0024          000000B8  22899          STG   15,184(0,13)
00010BDA D707 D0C0 D0C0 000000C0 000000C0  22900          XC    192(8,13),192(13)
00010BE0 4110 D0B0               000000B0  22901          LA    1,176(0,13)
00010BE4 E3F0 C110 0004          00010C80  22902          LG    15,@lit_1918_1707 ; rd_avl_init
00010BEA                                   22903 @@gen_label2197 DS    0H
00010BEA 05EF                              22904          BALR  14,15
00010BEC                                   22905 @@gen_label2198 DS    0H
                                           22906 * ***           rd_list_init(&aborted_txns->list, txn_cnt,
                                           22907 * ***                        rd_kafka_aborted_txn_node_destroy);
00010BEC 41F0 2050               00000050  22908          LA    15,80(0,2)
00010BF0 E3F0 D0B0 0024          000000B0  22909          STG   15,176(0,13)
00010BF6 E3F0 3004 0014          00000004  22910          LGF   15,4(0,3)   ; txn_cnt
00010BFC E3F0 D0B8 0024          000000B8  22911          STG   15,184(0,13)
00010C02 E3F0 C128 0004          00010C98  22912          LG    15,@lit_1918_1708 ; rd_kafka_aborted_txn_node_destroy
00010C08 E3F0 D0C0 0024          000000C0  22913          STG   15,192(0,13)
00010C0E 4110 D0B0               000000B0  22914          LA    1,176(0,13)
00010C12 E3F0 C120 0004          00010C90  22915          LG    15,@lit_1918_1709 ; rd_list_init
00010C18                                   22916 @@gen_label2199 DS    0H
00010C18 05EF                              22917          BALR  14,15
00010C1A                                   22918 @@gen_label2200 DS    0H
                                           22919 * ***           aborted_txns->cnt = txn_cnt;
00010C1A 58F0 3004               00000004  22920          L     15,4(0,3)   ; txn_cnt
00010C1E 50F0 2078               00000078  22921          ST    15,120(0,2) ; offset of cnt in rd_kafka_aborted_txns_s
                                           22922 * ***           return aborted_txns;
00010C22 B904 00F2                         22923          LGR   15,2
                                           22924 * ***   }
                                           22925 * * **** Start of Epilogue
                                           22926          DCCEPIL
00010C26                                   22927+         ds 0h                                                          01-DCCEP
                                           22928+* Epilog
00010C26 D707 D088 D088 00000088 00000088  22929+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00010C2C E3D0 D080 0004          00000080  22930+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00010C32 E3C0 D090 0004          00000090  22931+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00010C38 E3B0 C018 0004          00000018  22932+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00010C3E E3C0 B010 0021          00000010  22933+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00010C44 E3E0 D008 0004          00000008  22934+         lg  14,8(0,13)          load up return address                 01-DCCEP
00010C4A EB1C D020 0004          00000020  22935+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00010C50 078E                              22936+         bcr 8,14                if same dsab, just return              01-DCCEP
00010C52 E3F0 D010 0024          00000010  22937+         stg 15,16(0,13)         save return code                       01-DCCEP
00010C58 E300 D018 0024          00000018  22938+         stg 0,24(0,13)          save more return code                  01-DCCEP
00010C5E E3F0 D090 0004          00000090  22939+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00010C64 E3F0 F018 0004          00000018  22940+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00010C6A 47F0 F040               00000040  22941+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           22942+* End of Epilog
                                           22943 * * **** End of Epilogue
                                                                                                                           Page  455 
  Active Usings: @REGION_1918_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010C70                                   22944          DS    0D
00010C70 000000C8                          22945 @FRAMESIZE_1918 DC F'200'
00010C74 00000000
00010C78 0000000000000438                  22946 @lit_1918_1705 DC AD(rd_malloc)
00010C80 0000000000000000                  22947 @lit_1918_1707 DC AD(rd_avl_init)
00010C88 0000000000010968                  22948 @lit_1918_1706 DC AD(rd_kafka_aborted_txn_cmp_by_pid)
00010C90 0000000000000000                  22949 @lit_1918_1709 DC AD(rd_list_init)
00010C98 0000000000010A38                  22950 @lit_1918_1708 DC AD(rd_kafka_aborted_txn_node_destroy)
                                           22951          DROP  12
                                           22952 *
                                           22953 *   DSECT for automatic variables in "rd_kafka_aborted_txns_new"
                                           22954 *      (FUNCTION #1918)
                                           22955 *
00000000                00000000 000000A8  22956 @AUTO#rd_kafka_aborted_txns_new DSECT
00000000                                   22957          DS    XL168
                                           22958 *
00010CA0                00000000 00012806  22959 @CODE    CSECT
                                           22960 *
                                           22961 *
                                           22962 *
                                           22963 * ....... start of rd_kafka_aborted_txns_destroy
                                           22964 rd_kafka_aborted_txns_destroy ALIAS X'99846D92818692816D81829699A385846*
                                                                DA3A795A26D8485A2A39996A8'
00010CA0                                   22965 @LNAME1919 DS  0H
00010CA0 0000001D                          22966          DC    X'0000001D'
00010CA4 99846D9281869281                  22967          DC    C'rd_kafka_aborted_txns_destroy'
00010CC1 00                                22968          DC    X'00'
                                           22969 rd_kafka_aborted_txns_destroy DCCPRLG CINDEX=1919,BASER=12,FRAME=176,EN*
                                                                TRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1919
                                           22970          macro
                                           22971          dccextrn &m
                                           22972          gblc    &$dccext(1000)
                                           22973          gbla    &$dccexti
                                           22974          lcla    &i
                                           22975 &$dccext(&$dccexti+1) setc    '&m'
                                           22976 &i       seta    1
                                           22977 .loop    aif    (&i gt &$dccexti).around
                                           22978          aif    ('&$dccext(&i)' eq '&m').getout
                                           22979 &i       seta    &i+1
                                           22980          ago     .loop
                                           22981 .around  anop
                                           22982 &$dccexti seta &$dccexti+1
                                           22983          extrn  &m
                                           22984 .getout  anop
                                           22985          mend
00010CC8                                   22986+$eye0154    ds    0d                                                    02-DCCCA
00010CC8 C4C3C3                            22987+         dc cl3'DCC'                                                    02-DCCCA
00010CCB 01                                22988+         dc xl1'01' format one                                          02-DCCCA
00010CCC 00000000                          22989+         dc a(0)                                                        02-DCCCA
00010CD0 0000000000010D3A                  22990+         dc ad(@PER_1919)                                               02-DCCCA
00010CD8 00000000000000B0                  22991+         dc ad(176)                                                     02-DCCCA
00010CE0 0000000000000000                  22992+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  456 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010CE8 0000000000001000                  22993+         dc ad(4096)                                                    02-DCCCA
00010CF0 20                                22994+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00010CF1 03                                22995+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00010CF2 03                                22996+         dc al1(3)                                                      02-DCCCA
00010CF3 08                                22997+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00010CF4 00                                22998+         dc bl.8'00000000'                                              02-DCCCA
00010CF5 000000                            22999+         dc al3(0)                                                      02-DCCCA
00010CF8 0000000000010CA0                  23000+         dc ad(@LNAME1919)                                              02-DCCCA
00010D00                                   23001+         ds 0d                                                          02-DCCCA
00010D00 0000000000010CC8                  23002+         dc ad($eye0154)                                                02-DCCCA
00010D08 0000000000000000                  23003+         dc ad(0)                                                       02-DCCCA
00010D10                                   23004+         ds    0d                                                       01-DCCPR
                                           23005+         entry rd_kafka_aborted_txns_destroy                            01-DCCPR
00010D10                                   23006+rd_kafka_aborted_txns_destroy ds 0d                                     01-DCCPR
00010D10                                   23007+@REGION_1919_1 ds 0h                                                    01-DCCPR
00010D10 EBEC D008 0024          00000008  23008+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00010D16 E3E0 D088 0004          00000088  23009+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00010D1C E3C0 D090 0004          00000090  23010+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00010D22 B904 002E                         23011+         lgr   2,14                copy addr of our savearea            01-DCCPR
00010D26 E3B0 C018 0004          00000018  23012+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00010D2C A7EB 00B0               000000B0  23013+         aghi  14,176              increase by frame size               01-DCCPR
00010D30 E3E0 C020 0021          00000020  23014+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00010D36 4720 B020               00000020  23015+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00010D3A                                   23016+@PER_1919 ds   0h                                                       01-DCCPR
00010D3A EBDE 2080 0024          00000080  23017+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00010D40 E3C0 2090 0024          00000090  23018+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00010D46 B904 00D2                         23019+         lgr   13,2                set real frame pointer               01-DCCPR
00010D4A B904 00CF                         23020+         lgr   12,15               set base reg                         01-DCCPR
                        00010D10           23021+         using @REGION_1919_1,12                                        01-DCCPR
                                           23022 * ******* End of Prologue
                                           23023 * *
                                           23024 * ***           rd_list_destroy(&aborted_txns->list);
00010D4E E320 1000 0004          00000000  23025          LG    2,0(0,1)    ; aborted_txns
00010D54 41F0 2050               00000050  23026          LA    15,80(0,2)
00010D58 E3F0 D0A8 0024          000000A8  23027          STG   15,168(0,13)
00010D5E 4110 D0A8               000000A8  23028          LA    1,168(0,13)
00010D62 E3F0 C0D0 0004          00010DE0  23029          LG    15,@lit_1919_1711 ; rd_list_destroy
00010D68                                   23030 @@gen_label2201 DS    0H
00010D68 05EF                              23031          BALR  14,15
00010D6A                                   23032 @@gen_label2202 DS    0H
                                           23033 * ***           rd_avl_destroy(&aborted_txns->avl);
00010D6A E320 D0A8 0024          000000A8  23034          STG   2,168(0,13)
00010D70 4110 D0A8               000000A8  23035          LA    1,168(0,13)
00010D74 E3F0 C0D8 0004          00010DE8  23036          LG    15,@lit_1919_1712 ; rd_avl_destroy
00010D7A                                   23037 @@gen_label2203 DS    0H
00010D7A 05EF                              23038          BALR  14,15
00010D7C                                   23039 @@gen_label2204 DS    0H
                                           23040 * ***           rd_free(aborted_txns);
00010D7C E320 D0A8 0024          000000A8  23041          STG   2,168(0,13)
00010D82 4110 D0A8               000000A8  23042          LA    1,168(0,13)
00010D86 E3F0 C0E0 0004          00010DF0  23043          LG    15,@lit_1919_1713 ; rd_free
00010D8C                                   23044 @@gen_label2205 DS    0H
                                                                                                                           Page  457 
  Active Usings: @REGION_1919_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010D8C 05EF                              23045          BALR  14,15
00010D8E                                   23046 @@gen_label2206 DS    0H
                                           23047 * ***   }
00010D8E                                   23048 @ret_lab_1919 DS 0H
                                           23049 * * **** Start of Epilogue
                                           23050          DCCEPIL
00010D8E                                   23051+         ds 0h                                                          01-DCCEP
                                           23052+* Epilog
00010D8E D707 D088 D088 00000088 00000088  23053+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00010D94 E3D0 D080 0004          00000080  23054+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00010D9A E3C0 D090 0004          00000090  23055+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00010DA0 E3B0 C018 0004          00000018  23056+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00010DA6 E3C0 B010 0021          00000010  23057+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00010DAC E3E0 D008 0004          00000008  23058+         lg  14,8(0,13)          load up return address                 01-DCCEP
00010DB2 EB1C D020 0004          00000020  23059+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00010DB8 078E                              23060+         bcr 8,14                if same dsab, just return              01-DCCEP
00010DBA E3F0 D010 0024          00000010  23061+         stg 15,16(0,13)         save return code                       01-DCCEP
00010DC0 E300 D018 0024          00000018  23062+         stg 0,24(0,13)          save more return code                  01-DCCEP
00010DC6 E3F0 D090 0004          00000090  23063+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00010DCC E3F0 F018 0004          00000018  23064+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00010DD2 47F0 F040               00000040  23065+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           23066+* End of Epilog
                                           23067 * * **** End of Epilogue
00010DD8                                   23068          DS    0D
00010DD8 000000B0                          23069 @FRAMESIZE_1919 DC F'176'
00010DDC 00000000
00010DE0 0000000000000000                  23070 @lit_1919_1711 DC AD(rd_list_destroy)
00010DE8 0000000000000000                  23071 @lit_1919_1712 DC AD(rd_avl_destroy)
00010DF0 00000000000005A0                  23072 @lit_1919_1713 DC AD(rd_free)
                                           23073          DROP  12
                                           23074 *
                                           23075 *   DSECT for automatic variables in "rd_kafka_aborted_txns_destroy"
                                           23076 *      (FUNCTION #1919)
                                           23077 *
00000000                00000000 000000A8  23078 @AUTO#rd_kafka_aborted_txns_destroy DSECT
00000000                                   23079          DS    XL168
                                           23080 *
00010DF8                00000000 00012806  23081 @CODE    CSECT
                                           23082 *
                                           23083 *
                                           23084 *
                                           23085 * ....... start of rd_kafka_aborted_txns_offsets_for_pid
00010DF8                                   23086 @LNAME1954 DS  0H
00010DF8 00000025                          23087          DC    X'00000025'
00010DFC 99846D9281869281                  23088          DC    C'rd_kafka_aborted_txns_offsets_fo'
00010E1C 996D978984                        23089          DC    C'r_pid'
00010E21 00                                23090          DC    X'00'
                                           23091 rd_kafka_aborted_txns_offsets_for_pid DCCPRLG CINDEX=1954,BASER=12,FRAM*
                                                                E=280,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1954
                                           23092          macro
                                           23093          dccextrn &m
                                           23094          gblc    &$dccext(1000)
                                                                                                                           Page  458 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           23095          gbla    &$dccexti
                                           23096          lcla    &i
                                           23097 &$dccext(&$dccexti+1) setc    '&m'
                                           23098 &i       seta    1
                                           23099 .loop    aif    (&i gt &$dccexti).around
                                           23100          aif    ('&$dccext(&i)' eq '&m').getout
                                           23101 &i       seta    &i+1
                                           23102          ago     .loop
                                           23103 .around  anop
                                           23104 &$dccexti seta &$dccexti+1
                                           23105          extrn  &m
                                           23106 .getout  anop
                                           23107          mend
00010E28                                   23108+$eye0157    ds    0d                                                    02-DCCCA
00010E28 C4C3C3                            23109+         dc cl3'DCC'                                                    02-DCCCA
00010E2B 01                                23110+         dc xl1'01' format one                                          02-DCCCA
00010E2C 00000000                          23111+         dc a(0)                                                        02-DCCCA
00010E30 0000000000010E9A                  23112+         dc ad(@PER_1954)                                               02-DCCCA
00010E38 0000000000000118                  23113+         dc ad(280)                                                     02-DCCCA
00010E40 0000000000000000                  23114+         dc ad(0)                                                       02-DCCCA
00010E48 0000000000001000                  23115+         dc ad(4096)                                                    02-DCCCA
00010E50 20                                23116+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00010E51 03                                23117+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00010E52 03                                23118+         dc al1(3)                                                      02-DCCCA
00010E53 08                                23119+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00010E54 00                                23120+         dc bl.8'00000000'                                              02-DCCCA
00010E55 000000                            23121+         dc al3(0)                                                      02-DCCCA
00010E58 0000000000010DF8                  23122+         dc ad(@LNAME1954)                                              02-DCCCA
00010E60                                   23123+         ds 0d                                                          02-DCCCA
00010E60 0000000000010E28                  23124+         dc ad($eye0157)                                                02-DCCCA
00010E68 0000000000000000                  23125+         dc ad(0)                                                       02-DCCCA
00010E70                                   23126+         ds    0d                                                       01-DCCPR
00010E70                                   23127+rd_kafka_aborted_txns_offsets_for_pid ds 0d                             01-DCCPR
00010E70                                   23128+@REGION_1954_1 ds 0h                                                    01-DCCPR
00010E70 EBEC D008 0024          00000008  23129+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00010E76 E3E0 D088 0004          00000088  23130+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00010E7C E3C0 D090 0004          00000090  23131+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00010E82 B904 002E                         23132+         lgr   2,14                copy addr of our savearea            01-DCCPR
00010E86 E3B0 C018 0004          00000018  23133+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00010E8C A7EB 0118               00000118  23134+         aghi  14,280              increase by frame size               01-DCCPR
00010E90 E3E0 C020 0021          00000020  23135+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00010E96 4720 B020               00000020  23136+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00010E9A                                   23137+@PER_1954 ds   0h                                                       01-DCCPR
00010E9A EBDE 2080 0024          00000080  23138+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00010EA0 E3C0 2090 0024          00000090  23139+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00010EA6 B904 00D2                         23140+         lgr   13,2                set real frame pointer               01-DCCPR
00010EAA B904 00CF                         23141+         lgr   12,15               set base reg                         01-DCCPR
                        00010E70           23142+         using @REGION_1954_1,12                                        01-DCCPR
                                           23143 * ******* End of Prologue
                                           23144 * *
                                           23145 * ***           rd_kafka_aborted_txn_start_offsets_t node;
                                           23146 * ***           node.pid = pid;
                                                                                                                           Page  459 
  Active Usings: @REGION_1954_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010EAE E3F0 1008 0004          00000008  23147          LG    15,8(0,1)   ; pid
00010EB4 E3F0 D0C8 0024          000000C8  23148          STG   15,200(0,13) ; offset of pid in rd_kafka_aborted_txn_sta*
                                                                rt_offsets_s
                                           23149 * ***           return rd_avl_find(&aborted_txns->avl, &node, 1);
00010EBA E3F0 1000 0004          00000000  23150          LG    15,0(0,1)   ; aborted_txns
00010EC0 E3F0 D100 0024          00000100  23151          STG   15,256(0,13)
00010EC6 41F0 D0A8               000000A8  23152          LA    15,168(0,13)
00010ECA E3F0 D108 0024          00000108  23153          STG   15,264(0,13)
00010ED0 E548 D110 0001          00000110  23154          MVGHI 272(13),1
00010ED6 4110 D100               00000100  23155          LA    1,256(0,13)
00010EDA E3F0 C0C8 0004          00010F38  23156          LG    15,@lit_1954_1715 ; rd_avl_find
00010EE0                                   23157 @@gen_label2207 DS    0H
00010EE0 05EF                              23158          BALR  14,15
00010EE2                                   23159 @@gen_label2208 DS    0H
                                           23160 * ***   }
                                           23161 * * **** Start of Epilogue
                                           23162          DCCEPIL
00010EE2                                   23163+         ds 0h                                                          01-DCCEP
                                           23164+* Epilog
00010EE2 D707 D088 D088 00000088 00000088  23165+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00010EE8 E3D0 D080 0004          00000080  23166+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00010EEE E3C0 D090 0004          00000090  23167+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00010EF4 E3B0 C018 0004          00000018  23168+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00010EFA E3C0 B010 0021          00000010  23169+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00010F00 E3E0 D008 0004          00000008  23170+         lg  14,8(0,13)          load up return address                 01-DCCEP
00010F06 EB1C D020 0004          00000020  23171+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00010F0C 078E                              23172+         bcr 8,14                if same dsab, just return              01-DCCEP
00010F0E E3F0 D010 0024          00000010  23173+         stg 15,16(0,13)         save return code                       01-DCCEP
00010F14 E300 D018 0024          00000018  23174+         stg 0,24(0,13)          save more return code                  01-DCCEP
00010F1A E3F0 D090 0004          00000090  23175+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00010F20 E3F0 F018 0004          00000018  23176+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00010F26 47F0 F040               00000040  23177+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           23178+* End of Epilog
                                           23179 * * **** End of Epilogue
00010F30                                   23180          DS    0D
00010F30 00000118                          23181 @FRAMESIZE_1954 DC F'280'
00010F34 00000000
00010F38 0000000000000E50                  23182 @lit_1954_1715 DC AD(rd_avl_find)
                                           23183          DROP  12
                                           23184 *
                                           23185 *   DSECT for automatic variables in "rd_kafka_aborted_txns_offsets_fo
                                           23186 *           r_pid"
                                           23187 *      (FUNCTION #1954)
                                           23188 *
00000000                00000000 00000100  23189 @AUTO#rd_kafka_aborted_txns_offsets_for_pid DSECT
00000000                                   23190          DS    XL168
000000A8                                   23191 rd_kafka_aborted_txns_offsets_for_pid#node#0 DS 88XL1 ; node
                                           23192 *
00010F40                00000000 00012806  23193 @CODE    CSECT
                                           23194 *
                                           23195 *
                                           23196 *
                                                                                                                           Page  460 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           23197 * ....... start of rd_kafka_aborted_txns_next_offset
00010F40                                   23198 @LNAME1955 DS  0H
00010F40 00000021                          23199          DC    X'00000021'
00010F44 99846D9281869281                  23200          DC    C'rd_kafka_aborted_txns_next_offse'
00010F64 A3                                23201          DC    C't'
00010F65 00                                23202          DC    X'00'
                                           23203 rd_kafka_aborted_txns_next_offset DCCPRLG CINDEX=1955,BASER=12,FRAME=19*
                                                                2,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1955
                                           23204          macro
                                           23205          dccextrn &m
                                           23206          gblc    &$dccext(1000)
                                           23207          gbla    &$dccexti
                                           23208          lcla    &i
                                           23209 &$dccext(&$dccexti+1) setc    '&m'
                                           23210 &i       seta    1
                                           23211 .loop    aif    (&i gt &$dccexti).around
                                           23212          aif    ('&$dccext(&i)' eq '&m').getout
                                           23213 &i       seta    &i+1
                                           23214          ago     .loop
                                           23215 .around  anop
                                           23216 &$dccexti seta &$dccexti+1
                                           23217          extrn  &m
                                           23218 .getout  anop
                                           23219          mend
00010F68                                   23220+$eye0160    ds    0d                                                    02-DCCCA
00010F68 C4C3C3                            23221+         dc cl3'DCC'                                                    02-DCCCA
00010F6B 01                                23222+         dc xl1'01' format one                                          02-DCCCA
00010F6C 00000000                          23223+         dc a(0)                                                        02-DCCCA
00010F70 0000000000010FDA                  23224+         dc ad(@PER_1955)                                               02-DCCCA
00010F78 00000000000000C0                  23225+         dc ad(192)                                                     02-DCCCA
00010F80 0000000000000000                  23226+         dc ad(0)                                                       02-DCCCA
00010F88 0000000000001000                  23227+         dc ad(4096)                                                    02-DCCCA
00010F90 20                                23228+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00010F91 03                                23229+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00010F92 03                                23230+         dc al1(3)                                                      02-DCCCA
00010F93 08                                23231+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00010F94 00                                23232+         dc bl.8'00000000'                                              02-DCCCA
00010F95 000000                            23233+         dc al3(0)                                                      02-DCCCA
00010F98 0000000000010F40                  23234+         dc ad(@LNAME1955)                                              02-DCCCA
00010FA0                                   23235+         ds 0d                                                          02-DCCCA
00010FA0 0000000000010F68                  23236+         dc ad($eye0160)                                                02-DCCCA
00010FA8 0000000000000000                  23237+         dc ad(0)                                                       02-DCCCA
00010FB0                                   23238+         ds    0d                                                       01-DCCPR
00010FB0                                   23239+rd_kafka_aborted_txns_next_offset ds 0d                                 01-DCCPR
00010FB0                                   23240+@REGION_1955_1 ds 0h                                                    01-DCCPR
00010FB0 EBEC D008 0024          00000008  23241+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00010FB6 E3E0 D088 0004          00000088  23242+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00010FBC E3C0 D090 0004          00000090  23243+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00010FC2 B904 002E                         23244+         lgr   2,14                copy addr of our savearea            01-DCCPR
00010FC6 E3B0 C018 0004          00000018  23245+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00010FCC A7EB 00C0               000000C0  23246+         aghi  14,192              increase by frame size               01-DCCPR
00010FD0 E3E0 C020 0021          00000020  23247+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page  461 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00010FD6 4720 B020               00000020  23248+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00010FDA                                   23249+@PER_1955 ds   0h                                                       01-DCCPR
00010FDA EBDE 2080 0024          00000080  23250+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00010FE0 E3C0 2090 0024          00000090  23251+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00010FE6 B904 00D2                         23252+         lgr   13,2                set real frame pointer               01-DCCPR
00010FEA B904 00CF                         23253+         lgr   12,15               set base reg                         01-DCCPR
                        00010FB0           23254+         using @REGION_1955_1,12                                        01-DCCPR
00010FEE B904 0031                         23255          LGR   3,1         ; ptr to parm area
                                           23256 * ******* End of Prologue
                                           23257 * *
                                           23258 * ***           int64_t abort_start_offset;
                                           23259 * ***           rd_kafka_aborted_txn_start_offsets_t *node_ptr
                                           23260 * ***                   = rd_kafka_aborted_txns_offsets_for_pid(aborte\
                                           23261 * d_txns, pid);
00010FF2 E3F0 3000 0004          00000000  23262          LG    15,0(0,3)   ; aborted_txns
00010FF8 E3F0 D0B0 0024          000000B0  23263          STG   15,176(0,13)
00010FFE E3F0 3008 0004          00000008  23264          LG    15,8(0,3)   ; pid
00011004 E3F0 D0B8 0024          000000B8  23265          STG   15,184(0,13)
0001100A 4110 D0B0               000000B0  23266          LA    1,176(0,13)
0001100E E3F0 C088 0004          00011038  23267          LG    15,@lit_1955_1717 ; rd_kafka_aborted_txns_offsets_for_pi*
                                                                d
00011014                                   23268 @@gen_label2209 DS    0H
00011014 05EF                              23269          BALR  14,15
00011016                                   23270 @@gen_label2210 DS    0H
00011016 B904 002F                         23271          LGR   2,15
                                           23272 * ***
                                           23273 * ***           if (node_ptr == ((void *)0))
0001101A B902 00F2                         23274          LTGR  15,2
0001101E 4770 C0A0               00011050  23275          BNE   @L2080
                                           23276 * ***                   return -1;
00011022 A7F9 FFFF               0000FFFF  23277          LGHI  15,-1       ; -1
00011026 47F0 C116               000110C6  23278          B     @ret_lab_1955
00011030                                   23279          DS    0D
00011030 000000C0                          23280 @FRAMESIZE_1955 DC F'192'
00011034 00000000
00011038 0000000000010E70                  23281 @lit_1955_1717 DC AD(rd_kafka_aborted_txns_offsets_for_pid)
00011040 0000000000000FD0                  23282 @lit_1955_1719 DC AD(rd_list_cnt)
00011048 0000000000000000                  23283 @lit_1955_1721 DC AD(rd_list_elem)
00011050                                   23284 @L2080   DS    0H
                                           23285 * ***
                                           23286 * ***           if (((node_ptr->offsets_idx >= rd_list_cnt(&node_ptr->\
                                           23287 * offsets))))
00011050 5840 2028               00000028  23288          L     4,40(0,2)   ; offset of offsets_idx in rd_kafka_aborted_*
                                                                txn_start_offsets_s
00011054 41F0 2030               00000030  23289          LA    15,48(0,2)
00011058 E3F0 D0B0 0024          000000B0  23290          STG   15,176(0,13)
0001105E 4110 D0B0               000000B0  23291          LA    1,176(0,13)
00011062 E3F0 C090 0004          00011040  23292          LG    15,@lit_1955_1719 ; rd_list_cnt
00011068                                   23293 @@gen_label2212 DS    0H
00011068 05EF                              23294          BALR  14,15
0001106A                                   23295 @@gen_label2213 DS    0H
0001106A 194F                              23296          CR    4,15
                                                                                                                           Page  462 
  Active Usings: @REGION_1955_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0001106C 4740 C0C8               00011078  23297          BL    @L2081
                                           23298 * ***                   return -1;
00011070 A7F9 FFFF               0000FFFF  23299          LGHI  15,-1       ; -1
00011074 47F0 C116               000110C6  23300          B     @ret_lab_1955
00011078                                   23301 @L2081   DS    0H
                                           23302 * ***
                                           23303 * ***           abort_start_offset =
                                           23304 * ***                   *((int64_t *)rd_list_elem(&node_ptr->offsets,
                                           23305 * ***                                             node_ptr->offsets_id\
                                           23306 * x));
00011078 41F0 2030               00000030  23307          LA    15,48(0,2)
0001107C E3F0 D0B0 0024          000000B0  23308          STG   15,176(0,13)
00011082 E3F0 2028 0014          00000028  23309          LGF   15,40(0,2)
00011088 E3F0 D0B8 0024          000000B8  23310          STG   15,184(0,13)
0001108E 4110 D0B0               000000B0  23311          LA    1,176(0,13)
00011092 E3F0 C098 0004          00011048  23312          LG    15,@lit_1955_1721 ; rd_list_elem
00011098                                   23313 @@gen_label2215 DS    0H
00011098 05EF                              23314          BALR  14,15
0001109A                                   23315 @@gen_label2216 DS    0H
0001109A E3F0 F000 0004          00000000  23316          LG    15,0(0,15)
                                           23317 * ***
                                           23318 * ***           if (((abort_start_offset > max_offset)))
000110A0 E3F0 3018 0020          00000018  23319          CG    15,24(0,3)
000110A6 47D0 C102               000110B2  23320          BNH   @L2082
                                           23321 * ***                   return -1;
000110AA A7F9 FFFF               0000FFFF  23322          LGHI  15,-1       ; -1
000110AE 47F0 C116               000110C6  23323          B     @ret_lab_1955
000110B2                                   23324 @L2082   DS    0H
                                           23325 * ***
                                           23326 * ***           if (increment_idx)
000110B2 9500 3017      00000017 00000000  23327          CLI   23(3),0
000110B6 4780 C116               000110C6  23328          BE    @L2083
                                           23329 * ***                   node_ptr->offsets_idx++;
000110BA 5810 2028               00000028  23330          L     1,40(0,2)
000110BE A71A 0001               00000001  23331          AHI   1,1
000110C2 5010 2028               00000028  23332          ST    1,40(0,2)
000110C6                                   23333 @L2083   DS    0H
                                           23334 * ***
                                           23335 * ***           return abort_start_offset;
                                           23336 * ***   }
000110C6                                   23337 @ret_lab_1955 DS 0H
                                           23338 * * **** Start of Epilogue
                                           23339          DCCEPIL
000110C6                                   23340+         ds 0h                                                          01-DCCEP
                                           23341+* Epilog
000110C6 D707 D088 D088 00000088 00000088  23342+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000110CC E3D0 D080 0004          00000080  23343+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000110D2 E3C0 D090 0004          00000090  23344+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000110D8 E3B0 C018 0004          00000018  23345+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000110DE E3C0 B010 0021          00000010  23346+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000110E4 E3E0 D008 0004          00000008  23347+         lg  14,8(0,13)          load up return address                 01-DCCEP
000110EA EB1C D020 0004          00000020  23348+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page  463 
  Active Usings: @REGION_1955_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000110F0 078E                              23349+         bcr 8,14                if same dsab, just return              01-DCCEP
000110F2 E3F0 D010 0024          00000010  23350+         stg 15,16(0,13)         save return code                       01-DCCEP
000110F8 E300 D018 0024          00000018  23351+         stg 0,24(0,13)          save more return code                  01-DCCEP
000110FE E3F0 D090 0004          00000090  23352+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00011104 E3F0 F018 0004          00000018  23353+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0001110A 47F0 F040               00000040  23354+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           23355+* End of Epilog
                                           23356 * * **** End of Epilogue
                                           23357          DROP  12
                                           23358 *
                                           23359 *   DSECT for automatic variables in "rd_kafka_aborted_txns_next_offse
                                           23360 *           t"
                                           23361 *      (FUNCTION #1955)
                                           23362 *
00000000                00000000 000000B0  23363 @AUTO#rd_kafka_aborted_txns_next_offset DSECT
00000000                                   23364          DS    XL168
000000A8                                   23365 rd_kafka_aborted_txns_next_offset#abort_start_offset#0 DS 8XL1 ; abort_*
                                                                start_offset
                                           23366 *
0001110E                00000000 00012806  23367 @CODE    CSECT
                                           23368 *
                                           23369 *
                                           23370 *
                                           23371 * ....... start of rd_kafka_aborted_txns_pop_offset
0001110E                                   23372 @LNAME1939 DS  0H
0001110E 00000020                          23373          DC    X'00000020'
00011112 99846D9281869281                  23374          DC    C'rd_kafka_aborted_txns_pop_offset'
00011132 00                                23375          DC    X'00'
                                           23376 rd_kafka_aborted_txns_pop_offset DCCPRLG CINDEX=1939,BASER=12,FRAME=200*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1939
                                           23377          macro
                                           23378          dccextrn &m
                                           23379          gblc    &$dccext(1000)
                                           23380          gbla    &$dccexti
                                           23381          lcla    &i
                                           23382 &$dccext(&$dccexti+1) setc    '&m'
                                           23383 &i       seta    1
                                           23384 .loop    aif    (&i gt &$dccexti).around
                                           23385          aif    ('&$dccext(&i)' eq '&m').getout
                                           23386 &i       seta    &i+1
                                           23387          ago     .loop
                                           23388 .around  anop
                                           23389 &$dccexti seta &$dccexti+1
                                           23390          extrn  &m
                                           23391 .getout  anop
                                           23392          mend
00011138                                   23393+$eye0163    ds    0d                                                    02-DCCCA
00011138 C4C3C3                            23394+         dc cl3'DCC'                                                    02-DCCCA
0001113B 01                                23395+         dc xl1'01' format one                                          02-DCCCA
0001113C 00000000                          23396+         dc a(0)                                                        02-DCCCA
00011140 00000000000111AA                  23397+         dc ad(@PER_1939)                                               02-DCCCA
00011148 00000000000000C8                  23398+         dc ad(200)                                                     02-DCCCA
                                                                                                                           Page  464 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00011150 0000000000000000                  23399+         dc ad(0)                                                       02-DCCCA
00011158 0000000000001000                  23400+         dc ad(4096)                                                    02-DCCCA
00011160 20                                23401+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00011161 03                                23402+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00011162 03                                23403+         dc al1(3)                                                      02-DCCCA
00011163 08                                23404+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00011164 00                                23405+         dc bl.8'00000000'                                              02-DCCCA
00011165 000000                            23406+         dc al3(0)                                                      02-DCCCA
00011168 000000000001110E                  23407+         dc ad(@LNAME1939)                                              02-DCCCA
00011170                                   23408+         ds 0d                                                          02-DCCCA
00011170 0000000000011138                  23409+         dc ad($eye0163)                                                02-DCCCA
00011178 0000000000000000                  23410+         dc ad(0)                                                       02-DCCCA
00011180                                   23411+         ds    0d                                                       01-DCCPR
00011180                                   23412+rd_kafka_aborted_txns_pop_offset ds 0d                                  01-DCCPR
00011180                                   23413+@REGION_1939_1 ds 0h                                                    01-DCCPR
00011180 EBEC D008 0024          00000008  23414+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00011186 E3E0 D088 0004          00000088  23415+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0001118C E3C0 D090 0004          00000090  23416+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00011192 B904 002E                         23417+         lgr   2,14                copy addr of our savearea            01-DCCPR
00011196 E3B0 C018 0004          00000018  23418+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0001119C A7EB 00C8               000000C8  23419+         aghi  14,200              increase by frame size               01-DCCPR
000111A0 E3E0 C020 0021          00000020  23420+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000111A6 4720 B020               00000020  23421+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000111AA                                   23422+@PER_1939 ds   0h                                                       01-DCCPR
000111AA EBDE 2080 0024          00000080  23423+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000111B0 E3C0 2090 0024          00000090  23424+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000111B6 B904 00D2                         23425+         lgr   13,2                set real frame pointer               01-DCCPR
000111BA B904 00CF                         23426+         lgr   12,15               set base reg                         01-DCCPR
                        00011180           23427+         using @REGION_1939_1,12                                        01-DCCPR
                                           23428 * ******* End of Prologue
                                           23429 * *
                                           23430 * ***           return rd_kafka_aborted_txns_next_offset(aborted_txns,\
                                           23431 *  pid, 1,
                                           23432 * ***                                                    max_offset);
000111BE E3F0 1000 0004          00000000  23433          LG    15,0(0,1)   ; aborted_txns
000111C4 E3F0 D0A8 0024          000000A8  23434          STG   15,168(0,13)
000111CA E3F0 1008 0004          00000008  23435          LG    15,8(0,1)   ; pid
000111D0 E3F0 D0B0 0024          000000B0  23436          STG   15,176(0,13)
000111D6 E548 D0B8 0001          000000B8  23437          MVGHI 184(13),1
000111DC E3F0 1010 0004          00000010  23438          LG    15,16(0,1)  ; max_offset
000111E2 E3F0 D0C0 0024          000000C0  23439          STG   15,192(0,13)
000111E8 4110 D0A8               000000A8  23440          LA    1,168(0,13)
000111EC E3F0 C0C8 0004          00011248  23441          LG    15,@lit_1939_1724 ; rd_kafka_aborted_txns_next_offset
000111F2                                   23442 @@gen_label2219 DS    0H
000111F2 05EF                              23443          BALR  14,15
000111F4                                   23444 @@gen_label2220 DS    0H
                                           23445 * ***   }
                                           23446 * * **** Start of Epilogue
                                           23447          DCCEPIL
000111F4                                   23448+         ds 0h                                                          01-DCCEP
                                           23449+* Epilog
000111F4 D707 D088 D088 00000088 00000088  23450+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
                                                                                                                           Page  465 
  Active Usings: @REGION_1939_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000111FA E3D0 D080 0004          00000080  23451+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00011200 E3C0 D090 0004          00000090  23452+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00011206 E3B0 C018 0004          00000018  23453+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0001120C E3C0 B010 0021          00000010  23454+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00011212 E3E0 D008 0004          00000008  23455+         lg  14,8(0,13)          load up return address                 01-DCCEP
00011218 EB1C D020 0004          00000020  23456+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0001121E 078E                              23457+         bcr 8,14                if same dsab, just return              01-DCCEP
00011220 E3F0 D010 0024          00000010  23458+         stg 15,16(0,13)         save return code                       01-DCCEP
00011226 E300 D018 0024          00000018  23459+         stg 0,24(0,13)          save more return code                  01-DCCEP
0001122C E3F0 D090 0004          00000090  23460+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00011232 E3F0 F018 0004          00000018  23461+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00011238 47F0 F040               00000040  23462+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           23463+* End of Epilog
                                           23464 * * **** End of Epilogue
00011240                                   23465          DS    0D
00011240 000000C8                          23466 @FRAMESIZE_1939 DC F'200'
00011244 00000000
00011248 0000000000010FB0                  23467 @lit_1939_1724 DC AD(rd_kafka_aborted_txns_next_offset)
                                           23468          DROP  12
                                           23469 *
                                           23470 *   DSECT for automatic variables in "rd_kafka_aborted_txns_pop_offset"
                                           23471 *      (FUNCTION #1939)
                                           23472 *
00000000                00000000 000000A8  23473 @AUTO#rd_kafka_aborted_txns_pop_offset DSECT
00000000                                   23474          DS    XL168
                                           23475 *
00011250                00000000 00012806  23476 @CODE    CSECT
                                           23477 *
                                           23478 *
                                           23479 *
                                           23480 * ....... start of rd_kafka_aborted_txns_get_offset
00011250                                   23481 @LNAME1940 DS  0H
00011250 00000020                          23482          DC    X'00000020'
00011254 99846D9281869281                  23483          DC    C'rd_kafka_aborted_txns_get_offset'
00011274 00                                23484          DC    X'00'
                                           23485 rd_kafka_aborted_txns_get_offset DCCPRLG CINDEX=1940,BASER=12,FRAME=200*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1940
                                           23486          macro
                                           23487          dccextrn &m
                                           23488          gblc    &$dccext(1000)
                                           23489          gbla    &$dccexti
                                           23490          lcla    &i
                                           23491 &$dccext(&$dccexti+1) setc    '&m'
                                           23492 &i       seta    1
                                           23493 .loop    aif    (&i gt &$dccexti).around
                                           23494          aif    ('&$dccext(&i)' eq '&m').getout
                                           23495 &i       seta    &i+1
                                           23496          ago     .loop
                                           23497 .around  anop
                                           23498 &$dccexti seta &$dccexti+1
                                           23499          extrn  &m
                                           23500 .getout  anop
                                                                                                                           Page  466 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           23501          mend
00011278                                   23502+$eye0166    ds    0d                                                    02-DCCCA
00011278 C4C3C3                            23503+         dc cl3'DCC'                                                    02-DCCCA
0001127B 01                                23504+         dc xl1'01' format one                                          02-DCCCA
0001127C 00000000                          23505+         dc a(0)                                                        02-DCCCA
00011280 00000000000112EA                  23506+         dc ad(@PER_1940)                                               02-DCCCA
00011288 00000000000000C8                  23507+         dc ad(200)                                                     02-DCCCA
00011290 0000000000000000                  23508+         dc ad(0)                                                       02-DCCCA
00011298 0000000000001000                  23509+         dc ad(4096)                                                    02-DCCCA
000112A0 20                                23510+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000112A1 03                                23511+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000112A2 03                                23512+         dc al1(3)                                                      02-DCCCA
000112A3 08                                23513+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000112A4 00                                23514+         dc bl.8'00000000'                                              02-DCCCA
000112A5 000000                            23515+         dc al3(0)                                                      02-DCCCA
000112A8 0000000000011250                  23516+         dc ad(@LNAME1940)                                              02-DCCCA
000112B0                                   23517+         ds 0d                                                          02-DCCCA
000112B0 0000000000011278                  23518+         dc ad($eye0166)                                                02-DCCCA
000112B8 0000000000000000                  23519+         dc ad(0)                                                       02-DCCCA
000112C0                                   23520+         ds    0d                                                       01-DCCPR
000112C0                                   23521+rd_kafka_aborted_txns_get_offset ds 0d                                  01-DCCPR
000112C0                                   23522+@REGION_1940_1 ds 0h                                                    01-DCCPR
000112C0 EBEC D008 0024          00000008  23523+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000112C6 E3E0 D088 0004          00000088  23524+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000112CC E3C0 D090 0004          00000090  23525+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000112D2 B904 002E                         23526+         lgr   2,14                copy addr of our savearea            01-DCCPR
000112D6 E3B0 C018 0004          00000018  23527+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000112DC A7EB 00C8               000000C8  23528+         aghi  14,200              increase by frame size               01-DCCPR
000112E0 E3E0 C020 0021          00000020  23529+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000112E6 4720 B020               00000020  23530+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000112EA                                   23531+@PER_1940 ds   0h                                                       01-DCCPR
000112EA EBDE 2080 0024          00000080  23532+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000112F0 E3C0 2090 0024          00000090  23533+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000112F6 B904 00D2                         23534+         lgr   13,2                set real frame pointer               01-DCCPR
000112FA B904 00CF                         23535+         lgr   12,15               set base reg                         01-DCCPR
                        000112C0           23536+         using @REGION_1940_1,12                                        01-DCCPR
                                           23537 * ******* End of Prologue
                                           23538 * *
                                           23539 * ***           return rd_kafka_aborted_txns_next_offset(
                                           23540 * ***                   (rd_kafka_aborted_txns_t *)aborted_txns, pid, \
                                           23541 * 0,
                                           23542 * ***                   0x7fffffffffffffffLL);
000112FE E3F0 1000 0004          00000000  23543          LG    15,0(0,1)   ; aborted_txns
00011304 E3F0 D0A8 0024          000000A8  23544          STG   15,168(0,13)
0001130A E3F0 1008 0004          00000008  23545          LG    15,8(0,1)   ; pid
00011310 E3F0 D0B0 0024          000000B0  23546          STG   15,176(0,13)
00011316 D707 D0B8 D0B8 000000B8 000000B8  23547          XC    184(8,13),184(13)
0001131C E3F0 C0D0 0004          00011390  23548          LG    15,@lit_1940_1727 ; 9223372036854775807
00011322 E3F0 D0C0 0024          000000C0  23549          STG   15,192(0,13)
00011328 4110 D0A8               000000A8  23550          LA    1,168(0,13)
0001132C E3F0 C0C8 0004          00011388  23551          LG    15,@lit_1940_1728 ; rd_kafka_aborted_txns_next_offset
00011332                                   23552 @@gen_label2221 DS    0H
                                                                                                                           Page  467 
  Active Usings: @REGION_1940_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00011332 05EF                              23553          BALR  14,15
00011334                                   23554 @@gen_label2222 DS    0H
                                           23555 * ***   }
                                           23556 * * **** Start of Epilogue
                                           23557          DCCEPIL
00011334                                   23558+         ds 0h                                                          01-DCCEP
                                           23559+* Epilog
00011334 D707 D088 D088 00000088 00000088  23560+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0001133A E3D0 D080 0004          00000080  23561+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00011340 E3C0 D090 0004          00000090  23562+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00011346 E3B0 C018 0004          00000018  23563+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0001134C E3C0 B010 0021          00000010  23564+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00011352 E3E0 D008 0004          00000008  23565+         lg  14,8(0,13)          load up return address                 01-DCCEP
00011358 EB1C D020 0004          00000020  23566+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0001135E 078E                              23567+         bcr 8,14                if same dsab, just return              01-DCCEP
00011360 E3F0 D010 0024          00000010  23568+         stg 15,16(0,13)         save return code                       01-DCCEP
00011366 E300 D018 0024          00000018  23569+         stg 0,24(0,13)          save more return code                  01-DCCEP
0001136C E3F0 D090 0004          00000090  23570+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00011372 E3F0 F018 0004          00000018  23571+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00011378 47F0 F040               00000040  23572+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           23573+* End of Epilog
                                           23574 * * **** End of Epilogue
00011380                                   23575          DS    0D
00011380 000000C8                          23576 @FRAMESIZE_1940 DC F'200'
00011384 00000000
00011388 0000000000010FB0                  23577 @lit_1940_1728 DC AD(rd_kafka_aborted_txns_next_offset)
00011390 7FFFFFFFFFFFFFFF                  23578 @lit_1940_1727 DC FD'9223372036854775807' 0x7fffffffffffffff
                                           23579          DROP  12
                                           23580 *
                                           23581 *   DSECT for automatic variables in "rd_kafka_aborted_txns_get_offset"
                                           23582 *      (FUNCTION #1940)
                                           23583 *
00000000                00000000 000000A8  23584 @AUTO#rd_kafka_aborted_txns_get_offset DSECT
00000000                                   23585          DS    XL168
                                           23586 *
00011398                00000000 00012806  23587 @CODE    CSECT
                                           23588 *
                                           23589 *
                                           23590 *
                                           23591 * ....... start of rd_kafka_aborted_txns_add
                                           23592 rd_kafka_aborted_txns_add ALIAS X'99846D92818692816D81829699A385846DA3A*
                                                                795A26D818484'
00011398                                   23593 @LNAME1921 DS  0H
00011398 00000019                          23594          DC    X'00000019'
0001139C 99846D9281869281                  23595          DC    C'rd_kafka_aborted_txns_add'
000113B5 00                                23596          DC    X'00'
                                           23597 rd_kafka_aborted_txns_add DCCPRLG CINDEX=1921,BASER=12,FRAME=208,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME1921
                                           23598          macro
                                           23599          dccextrn &m
                                           23600          gblc    &$dccext(1000)
                                           23601          gbla    &$dccexti
                                                                                                                           Page  468 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           23602          lcla    &i
                                           23603 &$dccext(&$dccexti+1) setc    '&m'
                                           23604 &i       seta    1
                                           23605 .loop    aif    (&i gt &$dccexti).around
                                           23606          aif    ('&$dccext(&i)' eq '&m').getout
                                           23607 &i       seta    &i+1
                                           23608          ago     .loop
                                           23609 .around  anop
                                           23610 &$dccexti seta &$dccexti+1
                                           23611          extrn  &m
                                           23612 .getout  anop
                                           23613          mend
000113B8                                   23614+$eye0169    ds    0d                                                    02-DCCCA
000113B8 C4C3C3                            23615+         dc cl3'DCC'                                                    02-DCCCA
000113BB 01                                23616+         dc xl1'01' format one                                          02-DCCCA
000113BC 00000000                          23617+         dc a(0)                                                        02-DCCCA
000113C0 000000000001142A                  23618+         dc ad(@PER_1921)                                               02-DCCCA
000113C8 00000000000000D0                  23619+         dc ad(208)                                                     02-DCCCA
000113D0 0000000000000000                  23620+         dc ad(0)                                                       02-DCCCA
000113D8 0000000000001000                  23621+         dc ad(4096)                                                    02-DCCCA
000113E0 20                                23622+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000113E1 03                                23623+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000113E2 03                                23624+         dc al1(3)                                                      02-DCCCA
000113E3 08                                23625+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000113E4 00                                23626+         dc bl.8'00000000'                                              02-DCCCA
000113E5 000000                            23627+         dc al3(0)                                                      02-DCCCA
000113E8 0000000000011398                  23628+         dc ad(@LNAME1921)                                              02-DCCCA
000113F0                                   23629+         ds 0d                                                          02-DCCCA
000113F0 00000000000113B8                  23630+         dc ad($eye0169)                                                02-DCCCA
000113F8 0000000000000000                  23631+         dc ad(0)                                                       02-DCCCA
00011400                                   23632+         ds    0d                                                       01-DCCPR
                                           23633+         entry rd_kafka_aborted_txns_add                                01-DCCPR
00011400                                   23634+rd_kafka_aborted_txns_add ds 0d                                         01-DCCPR
00011400                                   23635+@REGION_1921_1 ds 0h                                                    01-DCCPR
00011400 EBEC D008 0024          00000008  23636+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00011406 E3E0 D088 0004          00000088  23637+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0001140C E3C0 D090 0004          00000090  23638+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00011412 B904 002E                         23639+         lgr   2,14                copy addr of our savearea            01-DCCPR
00011416 E3B0 C018 0004          00000018  23640+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0001141C A7EB 00D0               000000D0  23641+         aghi  14,208              increase by frame size               01-DCCPR
00011420 E3E0 C020 0021          00000020  23642+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00011426 4720 B020               00000020  23643+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0001142A                                   23644+@PER_1921 ds   0h                                                       01-DCCPR
0001142A EBDE 2080 0024          00000080  23645+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00011430 E3C0 2090 0024          00000090  23646+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00011436 B904 00D2                         23647+         lgr   13,2                set real frame pointer               01-DCCPR
0001143A B904 00CF                         23648+         lgr   12,15               set base reg                         01-DCCPR
                        00011400           23649+         using @REGION_1921_1,12                                        01-DCCPR
0001143E B904 0041                         23650          LGR   4,1         ; ptr to parm area
                                           23651 * ******* End of Prologue
                                           23652 * *
00011442 E330 4000 0004          00000000  23653          LG    3,0(0,4)    ; aborted_txns
                                                                                                                           Page  469 
  Active Usings: @REGION_1921_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           23654 * ***           int64_t *v;
                                           23655 * ***           rd_kafka_aborted_txn_start_offsets_t *node_ptr
                                           23656 * ***                   = rd_kafka_aborted_txns_offsets_for_pid(aborte\
                                           23657 * d_txns, pid);
00011448 E330 D0B0 0024          000000B0  23658          STG   3,176(0,13)
0001144E E3F0 4008 0004          00000008  23659          LG    15,8(0,4)   ; pid
00011454 E3F0 D0B8 0024          000000B8  23660          STG   15,184(0,13)
0001145A 4110 D0B0               000000B0  23661          LA    1,176(0,13)
0001145E E3F0 C198 0004          00011598  23662          LG    15,@lit_1921_1730 ; rd_kafka_aborted_txns_offsets_for_pi*
                                                                d
00011464                                   23663 @@gen_label2223 DS    0H
00011464 05EF                              23664          BALR  14,15
00011466                                   23665 @@gen_label2224 DS    0H
00011466 B902 002F                         23666          LTGR  2,15        ; node_ptr
                                           23667 * ***
                                           23668 * ***           if (!node_ptr) {
0001146A 4770 C11A               0001151A  23669          BNZ   @L2084
                                           23670 * ***                   node_ptr = rd_malloc(sizeof(*node_ptr));
0001146E E548 D0B0 0058          000000B0  23671          MVGHI 176(13),88
00011474 4110 D0B0               000000B0  23672          LA    1,176(0,13)
00011478 E3F0 C1A0 0004          000115A0  23673          LG    15,@lit_1921_1731 ; rd_malloc
0001147E                                   23674 @@gen_label2226 DS    0H
0001147E 05EF                              23675          BALR  14,15
00011480                                   23676 @@gen_label2227 DS    0H
00011480 B904 002F                         23677          LGR   2,15        ; node_ptr
                                           23678 * ***                   node_ptr->pid = pid;
00011484 E310 4008 0004          00000008  23679          LG    1,8(0,4)    ; pid
0001148A E310 F020 0024          00000020  23680          STG   1,32(0,15)  ; offset of pid in rd_kafka_aborted_txn_star*
                                                                t_offsets_s
                                           23681 * ***                   node_ptr->offsets_idx = 0;
00011490 E54C F028 0000          00000028  23682          MVHI  40(15),0    ; offset of offsets_idx in rd_kafka_aborted_*
                                                                txn_start_offsets_s
                                           23683 * ***                   rd_list_init(&node_ptr->offsets, 0, ((void *)0\
                                           23684 * ));
00011496 41F0 F030               00000030  23685          LA    15,48(0,15)
0001149A E3F0 D0B0 0024          000000B0  23686          STG   15,176(0,13)
000114A0 D70F D0B8 D0B8 000000B8 000000B8  23687          XC    184(16,13),184(13)
000114A6 4110 D0B0               000000B0  23688          LA    1,176(0,13)
000114AA E3F0 C1A8 0004          000115A8  23689          LG    15,@lit_1921_1732 ; rd_list_init
000114B0                                   23690 @@gen_label2228 DS    0H
000114B0 05EF                              23691          BALR  14,15
000114B2                                   23692 @@gen_label2229 DS    0H
                                           23693 * ***
                                           23694 * ***                   rd_list_prealloc_elems(&node_ptr->offsets,
                                           23695 * ***                           sizeof(int64_t),
                                           23696 * ***                           aborted_txns->cnt, 0);
000114B2 41F0 2030               00000030  23697          LA    15,48(0,2)
000114B6 E3F0 D0B0 0024          000000B0  23698          STG   15,176(0,13)
000114BC E548 D0B8 0008          000000B8  23699          MVGHI 184(13),8
000114C2 E3F0 3078 0014          00000078  23700          LGF   15,120(0,3)
000114C8 E3F0 D0C0 0024          000000C0  23701          STG   15,192(0,13)
000114CE D707 D0C8 D0C8 000000C8 000000C8  23702          XC    200(8,13),200(13)
                                                                                                                           Page  470 
  Active Usings: @REGION_1921_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000114D4 4110 D0B0               000000B0  23703          LA    1,176(0,13)
000114D8 E3F0 C1B0 0004          000115B0  23704          LG    15,@lit_1921_1733 ; rd_list_prealloc_elems
000114DE                                   23705 @@gen_label2230 DS    0H
000114DE 05EF                              23706          BALR  14,15
000114E0                                   23707 @@gen_label2231 DS    0H
                                           23708 * ***                   rd_avl_insert(&aborted_txns->avl, node_ptr, &(\
                                           23709 * node_ptr)->avl_node);
000114E0 E330 D0B0 0024          000000B0  23710          STG   3,176(0,13)
000114E6 E320 D0B8 0024          000000B8  23711          STG   2,184(0,13)
000114EC E320 D0C0 0024          000000C0  23712          STG   2,192(0,13)
000114F2 4110 D0B0               000000B0  23713          LA    1,176(0,13)
000114F6 E3F0 C1B8 0004          000115B8  23714          LG    15,@lit_1921_1734 ; rd_avl_insert
000114FC                                   23715 @@gen_label2232 DS    0H
000114FC 05EF                              23716          BALR  14,15
000114FE                                   23717 @@gen_label2233 DS    0H
                                           23718 * ***                   rd_list_add(&aborted_txns->list, node_ptr);
000114FE 41F0 3050               00000050  23719          LA    15,80(0,3)
00011502 E3F0 D0B0 0024          000000B0  23720          STG   15,176(0,13)
00011508 E320 D0B8 0024          000000B8  23721          STG   2,184(0,13)
0001150E 4110 D0B0               000000B0  23722          LA    1,176(0,13)
00011512 E3F0 C1C0 0004          000115C0  23723          LG    15,@lit_1921_1735 ; rd_list_add
00011518                                   23724 @@gen_label2234 DS    0H
00011518 05EF                              23725          BALR  14,15
0001151A                                   23726 @@gen_label2235 DS    0H
                                           23727 * ***           }
0001151A                                   23728 @L2084   DS    0H
                                           23729 * ***
                                           23730 * ***           v = rd_list_add(&node_ptr->offsets, ((void *)0));
0001151A 41F0 2030               00000030  23731          LA    15,48(0,2)
0001151E E3F0 D0B0 0024          000000B0  23732          STG   15,176(0,13)
00011524 D707 D0B8 D0B8 000000B8 000000B8  23733          XC    184(8,13),184(13)
0001152A 4110 D0B0               000000B0  23734          LA    1,176(0,13)
0001152E E3F0 C1C0 0004          000115C0  23735          LG    15,@lit_1921_1735 ; rd_list_add
00011534                                   23736 @@gen_label2236 DS    0H
00011534 05EF                              23737          BALR  14,15
00011536                                   23738 @@gen_label2237 DS    0H
                                           23739 * ***           *v = first_offset;
00011536 E310 4010 0004          00000010  23740          LG    1,16(0,4)   ; first_offset
0001153C E310 F000 0024          00000000  23741          STG   1,0(0,15)   ; v
                                           23742 * ***   }
00011542                                   23743 @ret_lab_1921 DS 0H
                                           23744 * * **** Start of Epilogue
                                           23745          DCCEPIL
00011542                                   23746+         ds 0h                                                          01-DCCEP
                                           23747+* Epilog
00011542 D707 D088 D088 00000088 00000088  23748+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00011548 E3D0 D080 0004          00000080  23749+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0001154E E3C0 D090 0004          00000090  23750+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00011554 E3B0 C018 0004          00000018  23751+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0001155A E3C0 B010 0021          00000010  23752+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00011560 E3E0 D008 0004          00000008  23753+         lg  14,8(0,13)          load up return address                 01-DCCEP
00011566 EB1C D020 0004          00000020  23754+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page  471 
  Active Usings: @REGION_1921_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0001156C 078E                              23755+         bcr 8,14                if same dsab, just return              01-DCCEP
0001156E E3F0 D010 0024          00000010  23756+         stg 15,16(0,13)         save return code                       01-DCCEP
00011574 E300 D018 0024          00000018  23757+         stg 0,24(0,13)          save more return code                  01-DCCEP
0001157A E3F0 D090 0004          00000090  23758+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00011580 E3F0 F018 0004          00000018  23759+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00011586 47F0 F040               00000040  23760+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           23761+* End of Epilog
                                           23762 * * **** End of Epilogue
00011590                                   23763          DS    0D
00011590 000000D0                          23764 @FRAMESIZE_1921 DC F'208'
00011594 00000000
00011598 0000000000010E70                  23765 @lit_1921_1730 DC AD(rd_kafka_aborted_txns_offsets_for_pid)
000115A0 0000000000000438                  23766 @lit_1921_1731 DC AD(rd_malloc)
000115A8 0000000000000000                  23767 @lit_1921_1732 DC AD(rd_list_init)
000115B0 0000000000000000                  23768 @lit_1921_1733 DC AD(rd_list_prealloc_elems)
000115B8 0000000000000CB0                  23769 @lit_1921_1734 DC AD(rd_avl_insert)
000115C0 0000000000000000                  23770 @lit_1921_1735 DC AD(rd_list_add)
                                           23771          DROP  12
                                           23772 *
                                           23773 *   DSECT for automatic variables in "rd_kafka_aborted_txns_add"
                                           23774 *      (FUNCTION #1921)
                                           23775 *
00000000                00000000 000000A8  23776 @AUTO#rd_kafka_aborted_txns_add DSECT
00000000                                   23777          DS    XL168
                                           23778 *
000115C8                00000000 00012806  23779 @CODE    CSECT
                                           23780 *
                                           23781 *
                                           23782 *
                                           23783 * ....... start of rd_kafka_aborted_txns_sort
                                           23784 rd_kafka_aborted_txns_sort ALIAS X'99846D92818692816D81829699A385846DA3*
                                                                A795A26DA29699A3'
000115C8                                   23785 @LNAME1920 DS  0H
000115C8 0000001A                          23786          DC    X'0000001A'
000115CC 99846D9281869281                  23787          DC    C'rd_kafka_aborted_txns_sort'
000115E6 00                                23788          DC    X'00'
                                           23789 rd_kafka_aborted_txns_sort DCCPRLG CINDEX=1920,BASER=12,FRAME=192,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME1920
                                           23790          macro
                                           23791          dccextrn &m
                                           23792          gblc    &$dccext(1000)
                                           23793          gbla    &$dccexti
                                           23794          lcla    &i
                                           23795 &$dccext(&$dccexti+1) setc    '&m'
                                           23796 &i       seta    1
                                           23797 .loop    aif    (&i gt &$dccexti).around
                                           23798          aif    ('&$dccext(&i)' eq '&m').getout
                                           23799 &i       seta    &i+1
                                           23800          ago     .loop
                                           23801 .around  anop
                                           23802 &$dccexti seta &$dccexti+1
                                           23803          extrn  &m
                                                                                                                           Page  472 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           23804 .getout  anop
                                           23805          mend
000115E8                                   23806+$eye0172    ds    0d                                                    02-DCCCA
000115E8 C4C3C3                            23807+         dc cl3'DCC'                                                    02-DCCCA
000115EB 01                                23808+         dc xl1'01' format one                                          02-DCCCA
000115EC 00000000                          23809+         dc a(0)                                                        02-DCCCA
000115F0 000000000001165A                  23810+         dc ad(@PER_1920)                                               02-DCCCA
000115F8 00000000000000C0                  23811+         dc ad(192)                                                     02-DCCCA
00011600 0000000000000000                  23812+         dc ad(0)                                                       02-DCCCA
00011608 0000000000001000                  23813+         dc ad(4096)                                                    02-DCCCA
00011610 20                                23814+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00011611 03                                23815+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00011612 03                                23816+         dc al1(3)                                                      02-DCCCA
00011613 08                                23817+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00011614 00                                23818+         dc bl.8'00000000'                                              02-DCCCA
00011615 000000                            23819+         dc al3(0)                                                      02-DCCCA
00011618 00000000000115C8                  23820+         dc ad(@LNAME1920)                                              02-DCCCA
00011620                                   23821+         ds 0d                                                          02-DCCCA
00011620 00000000000115E8                  23822+         dc ad($eye0172)                                                02-DCCCA
00011628 0000000000000000                  23823+         dc ad(0)                                                       02-DCCCA
00011630                                   23824+         ds    0d                                                       01-DCCPR
                                           23825+         entry rd_kafka_aborted_txns_sort                               01-DCCPR
00011630                                   23826+rd_kafka_aborted_txns_sort ds 0d                                        01-DCCPR
00011630                                   23827+@REGION_1920_1 ds 0h                                                    01-DCCPR
00011630 EBEC D008 0024          00000008  23828+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00011636 E3E0 D088 0004          00000088  23829+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0001163C E3C0 D090 0004          00000090  23830+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00011642 B904 002E                         23831+         lgr   2,14                copy addr of our savearea            01-DCCPR
00011646 E3B0 C018 0004          00000018  23832+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0001164C A7EB 00C0               000000C0  23833+         aghi  14,192              increase by frame size               01-DCCPR
00011650 E3E0 C020 0021          00000020  23834+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00011656 4720 B020               00000020  23835+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0001165A                                   23836+@PER_1920 ds   0h                                                       01-DCCPR
0001165A EBDE 2080 0024          00000080  23837+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00011660 E3C0 2090 0024          00000090  23838+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00011666 B904 00D2                         23839+         lgr   13,2                set real frame pointer               01-DCCPR
0001166A B904 00CF                         23840+         lgr   12,15               set base reg                         01-DCCPR
                        00011630           23841+         using @REGION_1920_1,12                                        01-DCCPR
0001166E B904 0031                         23842          LGR   3,1         ; ptr to parm area
                                           23843 * ******* End of Prologue
                                           23844 * *
                                           23845 * ***           int k;
                                           23846 * ***           for (k = 0; k < rd_list_cnt(&aborted_txns->list); k++)\
                                           23847 *  {
00011672 A728 0000               00000000  23848          LHI   2,0         ; 0
00011676 47F0 C0C4               000116F4  23849          B     @L2086
00011680                                   23850          DS    0D
00011680 000000C0                          23851 @FRAMESIZE_1920 DC F'192'
00011684 00000000
00011688 0000000000000000                  23852 @lit_1920_1739 DC AD(rd_list_elem)
00011690 0000000000000000                  23853 @lit_1920_1741 DC AD(rd_list_sort)
00011698 0000000000010898                  23854 @lit_1920_1740 DC AD(rd_kafka_offset_cmp)
                                                                                                                           Page  473 
  Active Usings: @REGION_1920_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000116A0 0000000000000FD0                  23855 @lit_1920_1742 DC AD(rd_list_cnt)
000116A8                                   23856 @L2085   DS    0H
                                           23857 * ***                   rd_kafka_aborted_txn_start_offsets_t *el =
                                           23858 * ***                           rd_list_elem(&aborted_txns->list, k);
000116A8 E3F0 3000 0004          00000000  23859          LG    15,0(0,3)   ; aborted_txns
000116AE 41F0 F050               00000050  23860          LA    15,80(0,15)
000116B2 E3F0 D0B0 0024          000000B0  23861          STG   15,176(0,13)
000116B8 B914 00F2                         23862          LGFR  15,2
000116BC E3F0 D0B8 0024          000000B8  23863          STG   15,184(0,13)
000116C2 4110 D0B0               000000B0  23864          LA    1,176(0,13)
000116C6 E3F0 C058 0004          00011688  23865          LG    15,@lit_1920_1739 ; rd_list_elem
000116CC                                   23866 @@gen_label2238 DS    0H
000116CC 05EF                              23867          BALR  14,15
000116CE                                   23868 @@gen_label2239 DS    0H
                                           23869 * ***                   rd_list_sort(&el->offsets, rd_kafka_offset_cmp\
                                           23870 * );
000116CE 41F0 F030               00000030  23871          LA    15,48(0,15)
000116D2 E3F0 D0B0 0024          000000B0  23872          STG   15,176(0,13)
000116D8 E3F0 C068 0004          00011698  23873          LG    15,@lit_1920_1740 ; rd_kafka_offset_cmp
000116DE E3F0 D0B8 0024          000000B8  23874          STG   15,184(0,13)
000116E4 4110 D0B0               000000B0  23875          LA    1,176(0,13)
000116E8 E3F0 C060 0004          00011690  23876          LG    15,@lit_1920_1741 ; rd_list_sort
000116EE                                   23877 @@gen_label2240 DS    0H
000116EE 05EF                              23878          BALR  14,15
000116F0                                   23879 @@gen_label2241 DS    0H
                                           23880 * ***           }
000116F0 A72A 0001               00000001  23881          AHI   2,1
000116F4                                   23882 @L2086   DS    0H
000116F4 E3F0 3000 0004          00000000  23883          LG    15,0(0,3)   ; aborted_txns
000116FA 41F0 F050               00000050  23884          LA    15,80(0,15)
000116FE E3F0 D0B0 0024          000000B0  23885          STG   15,176(0,13)
00011704 4110 D0B0               000000B0  23886          LA    1,176(0,13)
00011708 E3F0 C070 0004          000116A0  23887          LG    15,@lit_1920_1742 ; rd_list_cnt
0001170E                                   23888 @@gen_label2242 DS    0H
0001170E 05EF                              23889          BALR  14,15
00011710                                   23890 @@gen_label2243 DS    0H
00011710 192F                              23891          CR    2,15
00011712 4740 C078               000116A8  23892          BL    @L2085
                                           23893 * ***   }
00011716                                   23894 @ret_lab_1920 DS 0H
                                           23895 * * **** Start of Epilogue
                                           23896          DCCEPIL
00011716                                   23897+         ds 0h                                                          01-DCCEP
                                           23898+* Epilog
00011716 D707 D088 D088 00000088 00000088  23899+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0001171C E3D0 D080 0004          00000080  23900+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00011722 E3C0 D090 0004          00000090  23901+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00011728 E3B0 C018 0004          00000018  23902+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0001172E E3C0 B010 0021          00000010  23903+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00011734 E3E0 D008 0004          00000008  23904+         lg  14,8(0,13)          load up return address                 01-DCCEP
0001173A EB1C D020 0004          00000020  23905+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00011740 078E                              23906+         bcr 8,14                if same dsab, just return              01-DCCEP
                                                                                                                           Page  474 
  Active Usings: @REGION_1920_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00011742 E3F0 D010 0024          00000010  23907+         stg 15,16(0,13)         save return code                       01-DCCEP
00011748 E300 D018 0024          00000018  23908+         stg 0,24(0,13)          save more return code                  01-DCCEP
0001174E E3F0 D090 0004          00000090  23909+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00011754 E3F0 F018 0004          00000018  23910+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0001175A 47F0 F040               00000040  23911+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           23912+* End of Epilog
                                           23913 * * **** End of Epilogue
                                           23914          DROP  12
                                           23915 *
                                           23916 *   DSECT for automatic variables in "rd_kafka_aborted_txns_sort"
                                           23917 *      (FUNCTION #1920)
                                           23918 *
00000000                00000000 000000AC  23919 @AUTO#rd_kafka_aborted_txns_sort DSECT
00000000                                   23920          DS    XL168
000000A8                                   23921 rd_kafka_aborted_txns_sort#k#0 DS 1F ; k
                                           23922 *
0001175E                00000000 00012806  23923 @CODE    CSECT
                                           23924 *
                                           23925 *
                                           23926 *
                                           23927 * ....... start of unittest_aborted_txns
                                           23928 unittest_aborted_txns ALIAS X'A49589A3A385A2A36D81829699A385846DA3A795A*
                                                                2'
0001175E                                   23929 @LNAME1924 DS  0H
0001175E 00000015                          23930          DC    X'00000015'
00011762 A49589A3A385A2A3                  23931          DC    C'unittest_aborted_txns'
00011777 00                                23932          DC    X'00'
                                           23933 unittest_aborted_txns DCCPRLG CINDEX=1924,BASER=12,FRAME=216,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1924
                                           23934          macro
                                           23935          dccextrn &m
                                           23936          gblc    &$dccext(1000)
                                           23937          gbla    &$dccexti
                                           23938          lcla    &i
                                           23939 &$dccext(&$dccexti+1) setc    '&m'
                                           23940 &i       seta    1
                                           23941 .loop    aif    (&i gt &$dccexti).around
                                           23942          aif    ('&$dccext(&i)' eq '&m').getout
                                           23943 &i       seta    &i+1
                                           23944          ago     .loop
                                           23945 .around  anop
                                           23946 &$dccexti seta &$dccexti+1
                                           23947          extrn  &m
                                           23948 .getout  anop
                                           23949          mend
00011778                                   23950+$eye0175    ds    0d                                                    02-DCCCA
00011778 C4C3C3                            23951+         dc cl3'DCC'                                                    02-DCCCA
0001177B 01                                23952+         dc xl1'01' format one                                          02-DCCCA
0001177C 00000000                          23953+         dc a(0)                                                        02-DCCCA
00011780 00000000000117EA                  23954+         dc ad(@PER_1924)                                               02-DCCCA
00011788 00000000000000D8                  23955+         dc ad(216)                                                     02-DCCCA
00011790 0000000000000000                  23956+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  475 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00011798 0000000000001000                  23957+         dc ad(4096)                                                    02-DCCCA
000117A0 20                                23958+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000117A1 03                                23959+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000117A2 03                                23960+         dc al1(3)                                                      02-DCCCA
000117A3 08                                23961+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000117A4 00                                23962+         dc bl.8'00000000'                                              02-DCCCA
000117A5 000000                            23963+         dc al3(0)                                                      02-DCCCA
000117A8 000000000001175E                  23964+         dc ad(@LNAME1924)                                              02-DCCCA
000117B0                                   23965+         ds 0d                                                          02-DCCCA
000117B0 0000000000011778                  23966+         dc ad($eye0175)                                                02-DCCCA
000117B8 0000000000000000                  23967+         dc ad(0)                                                       02-DCCCA
000117C0                                   23968+         ds    0d                                                       01-DCCPR
                                           23969+         entry unittest_aborted_txns                                    01-DCCPR
000117C0                                   23970+unittest_aborted_txns ds 0d                                             01-DCCPR
000117C0                                   23971+@REGION_1924_1 ds 0h                                                    01-DCCPR
000117C0 EBEC D008 0024          00000008  23972+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000117C6 E3E0 D088 0004          00000088  23973+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000117CC E3C0 D090 0004          00000090  23974+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000117D2 B904 002E                         23975+         lgr   2,14                copy addr of our savearea            01-DCCPR
000117D6 E3B0 C018 0004          00000018  23976+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000117DC A7EB 00D8               000000D8  23977+         aghi  14,216              increase by frame size               01-DCCPR
000117E0 E3E0 C020 0021          00000020  23978+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000117E6 4720 B020               00000020  23979+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000117EA                                   23980+@PER_1924 ds   0h                                                       01-DCCPR
000117EA EBDE 2080 0024          00000080  23981+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000117F0 E3C0 2090 0024          00000090  23982+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000117F6 B904 00D2                         23983+         lgr   13,2                set real frame pointer               01-DCCPR
000117FA B904 00CF                         23984+         lgr   12,15               set base reg                         01-DCCPR
                        000117C0           23985+         using @REGION_1924_1,12                                        01-DCCPR
                                           23986          DCCPRV REG=4      ; Get PRV from DVT
000117FE E340 B008 0004          00000008  23987+         LG 4,8(0,11)                                                   01-DCCPR
                                           23988 * ******* End of Prologue
                                           23989 * *
                                           23990 * ***           rd_kafka_aborted_txns_t *aborted_txns = ((void *)0);
                                           23991 * ***           int64_t start_offset;
                                           23992 * ***
                                           23993 * ***           aborted_txns = rd_kafka_aborted_txns_new(7);
00011804 E548 D0B0 0007          000000B0  23994          MVGHI 176(13),7
0001180A 4110 D0B0               000000B0  23995          LA    1,176(0,13)
0001180E E3F0 C258 0004          00011A18  23996          LG    15,@lit_1924_1745 ; rd_kafka_aborted_txns_new
00011814                                   23997 @@gen_label2245 DS    0H
00011814 05EF                              23998          BALR  14,15
00011816                                   23999 @@gen_label2246 DS    0H
00011816 B904 003F                         24000          LGR   3,15
                                           24001 * ***           rd_kafka_aborted_txns_add(aborted_txns, 1, 42);
0001181A E330 D0B0 0024          000000B0  24002          STG   3,176(0,13)
00011820 E548 D0B8 0001          000000B8  24003          MVGHI 184(13),1
00011826 E548 D0C0 002A          000000C0  24004          MVGHI 192(13),42
0001182C 4110 D0B0               000000B0  24005          LA    1,176(0,13)
00011830 E320 C260 0004          00011A20  24006          LG    2,@lit_1924_1746 ; rd_kafka_aborted_txns_add
00011836 B904 00F2                         24007          LGR   15,2
0001183A                                   24008 @@gen_label2247 DS    0H
                                                                                                                           Page  476 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0001183A 05EF                              24009          BALR  14,15
0001183C                                   24010 @@gen_label2248 DS    0H
                                           24011 * ***           rd_kafka_aborted_txns_add(aborted_txns, 1, 44);
0001183C E330 D0B0 0024          000000B0  24012          STG   3,176(0,13)
00011842 E548 D0B8 0001          000000B8  24013          MVGHI 184(13),1
00011848 E548 D0C0 002C          000000C0  24014          MVGHI 192(13),44
0001184E 4110 D0B0               000000B0  24015          LA    1,176(0,13)
00011852 B904 00F2                         24016          LGR   15,2
00011856                                   24017 @@gen_label2249 DS    0H
00011856 05EF                              24018          BALR  14,15
00011858                                   24019 @@gen_label2250 DS    0H
                                           24020 * ***           rd_kafka_aborted_txns_add(aborted_txns, 1, 10);
00011858 E330 D0B0 0024          000000B0  24021          STG   3,176(0,13)
0001185E E548 D0B8 0001          000000B8  24022          MVGHI 184(13),1
00011864 E548 D0C0 000A          000000C0  24023          MVGHI 192(13),10
0001186A 4110 D0B0               000000B0  24024          LA    1,176(0,13)
0001186E B904 00F2                         24025          LGR   15,2
00011872                                   24026 @@gen_label2251 DS    0H
00011872 05EF                              24027          BALR  14,15
00011874                                   24028 @@gen_label2252 DS    0H
                                           24029 * ***           rd_kafka_aborted_txns_add(aborted_txns, 1, 100);
00011874 E330 D0B0 0024          000000B0  24030          STG   3,176(0,13)
0001187A E548 D0B8 0001          000000B8  24031          MVGHI 184(13),1
00011880 E548 D0C0 0064          000000C0  24032          MVGHI 192(13),100
00011886 4110 D0B0               000000B0  24033          LA    1,176(0,13)
0001188A B904 00F2                         24034          LGR   15,2
0001188E                                   24035 @@gen_label2253 DS    0H
0001188E 05EF                              24036          BALR  14,15
00011890                                   24037 @@gen_label2254 DS    0H
                                           24038 * ***           rd_kafka_aborted_txns_add(aborted_txns, 2, 11);
00011890 E330 D0B0 0024          000000B0  24039          STG   3,176(0,13)
00011896 E548 D0B8 0002          000000B8  24040          MVGHI 184(13),2
0001189C E548 D0C0 000B          000000C0  24041          MVGHI 192(13),11
000118A2 4110 D0B0               000000B0  24042          LA    1,176(0,13)
000118A6 B904 00F2                         24043          LGR   15,2
000118AA                                   24044 @@gen_label2255 DS    0H
000118AA 05EF                              24045          BALR  14,15
000118AC                                   24046 @@gen_label2256 DS    0H
                                           24047 * ***           rd_kafka_aborted_txns_add(aborted_txns, 2, 7);
000118AC E330 D0B0 0024          000000B0  24048          STG   3,176(0,13)
000118B2 E548 D0B8 0002          000000B8  24049          MVGHI 184(13),2
000118B8 E548 D0C0 0007          000000C0  24050          MVGHI 192(13),7
000118BE 4110 D0B0               000000B0  24051          LA    1,176(0,13)
000118C2 B904 00F2                         24052          LGR   15,2
000118C6                                   24053 @@gen_label2257 DS    0H
000118C6 05EF                              24054          BALR  14,15
000118C8                                   24055 @@gen_label2258 DS    0H
                                           24056 * ***           rd_kafka_aborted_txns_add(aborted_txns, 1, 3);
000118C8 E330 D0B0 0024          000000B0  24057          STG   3,176(0,13)
000118CE E548 D0B8 0001          000000B8  24058          MVGHI 184(13),1
000118D4 E548 D0C0 0003          000000C0  24059          MVGHI 192(13),3
000118DA 4110 D0B0               000000B0  24060          LA    1,176(0,13)
                                                                                                                           Page  477 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000118DE B904 00F2                         24061          LGR   15,2
000118E2                                   24062 @@gen_label2259 DS    0H
000118E2 05EF                              24063          BALR  14,15
000118E4                                   24064 @@gen_label2260 DS    0H
                                           24065 * ***           rd_kafka_aborted_txns_sort(aborted_txns);
000118E4 E330 D0B0 0024          000000B0  24066          STG   3,176(0,13)
000118EA 4110 D0B0               000000B0  24067          LA    1,176(0,13)
000118EE E3F0 C268 0004          00011A28  24068          LG    15,@lit_1924_1753 ; rd_kafka_aborted_txns_sort
000118F4                                   24069 @@gen_label2261 DS    0H
000118F4 05EF                              24070          BALR  14,15
000118F6                                   24071 @@gen_label2262 DS    0H
                                           24072 * ***
                                           24073 * ***           start_offset = rd_kafka_aborted_txns_get_offset(
                                           24074 * ***                   aborted_txns, 1);
000118F6 E330 D0B0 0024          000000B0  24075          STG   3,176(0,13)
000118FC E548 D0B8 0001          000000B8  24076          MVGHI 184(13),1
00011902 4110 D0B0               000000B0  24077          LA    1,176(0,13)
00011906 E3F0 C270 0004          00011A30  24078          LG    15,@lit_1924_1754 ; rd_kafka_aborted_txns_get_offset
0001190C                                   24079 @@gen_label2263 DS    0H
0001190C 05EF                              24080          BALR  14,15
0001190E                                   24081 @@gen_label2264 DS    0H
0001190E B904 002F                         24082          LGR   2,15        ; start_offset
                                           24083 * ***           do { if (!(3 == start_offset)) { fprintf(__stderrp, "\\
                                           24084 * 033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "3 == start_offset\
                                           24085 * " ": ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c", 16\
                                           24086 * 75, __FUNCTION__); fprintf(__stderrp, "queried start offset was %" "\
                                           24087 * lld" ", " "expected 3", start_offset); fprintf(__stderrp, "\033[0m\n\
                                           24088 * "); if (rd_unittest_assert_on_failure) ((3 == start_offset) ? (void)\
                                           24089 * 0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgse\
                                           24090 * t_reader.c", 1675, "3 == start_offset")); return 1; } } while (0);
00011912                                   24091 @L2089   DS    0H
00011912 A72F 0003               00000003  24092          CGHI  2,3
00011916 4780 C2B8               00011A78  24093          BE    @L2092
0001191A E330 C290 0016          00011A50  24094          LLGF  3,@lit_1924_1755 ; __stderrp
00011920 E3F3 4000 0004          00000000  24095          LG    15,0(3,4)   ; __stderrp
00011926 E3F0 D0B0 0024          000000B0  24096          STG   15,176(0,13)
0001192C E350 C288 0004          00011A48  24097          LG    5,@lit_1924_1756
00011932 41F0 5A7C               00000A7C  24098          LA    15,2684(0,5)
00011936 E3F0 D0B8 0024          000000B8  24099          STG   15,184(0,13)
0001193C 41F0 52CE               000002CE  24100          LA    15,718(0,5)
00011940 E3F0 D0C0 0024          000000C0  24101          STG   15,192(0,13)
00011946 E548 D0C8 068B          000000C8  24102          MVGHI 200(13),1675
0001194C E360 C280 0004          00011A40  24103          LG    6,@lit_1924_1757
00011952 41F0 629A               0000029A  24104          LA    15,666(0,6)
00011956 E3F0 D0D0 0024          000000D0  24105          STG   15,208(0,13)
0001195C 4110 D0B0               000000B0  24106          LA    1,176(0,13)
00011960 E370 C278 0004          00011A38  24107          LG    7,@lit_1924_1758 ; fprintf
00011966 B904 00F7                         24108          LGR   15,7
0001196A                                   24109 @@gen_label2266 DS    0H
0001196A 05EF                              24110          BALR  14,15
0001196C                                   24111 @@gen_label2267 DS    0H
0001196C E3F3 4000 0004          00000000  24112          LG    15,0(3,4)   ; __stderrp
                                                                                                                           Page  478 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00011972 E3F0 D0B0 0024          000000B0  24113          STG   15,176(0,13)
00011978 41F0 5ABC               00000ABC  24114          LA    15,2748(0,5)
0001197C E3F0 D0B8 0024          000000B8  24115          STG   15,184(0,13)
00011982 E320 D0C0 0024          000000C0  24116          STG   2,192(0,13)
00011988 4110 D0B0               000000B0  24117          LA    1,176(0,13)
0001198C B904 00F7                         24118          LGR   15,7
00011990                                   24119 @@gen_label2268 DS    0H
00011990 05EF                              24120          BALR  14,15
00011992                                   24121 @@gen_label2269 DS    0H
00011992 E3F3 4000 0004          00000000  24122          LG    15,0(3,4)   ; __stderrp
00011998 E3F0 D0B0 0024          000000B0  24123          STG   15,176(0,13)
0001199E 41F0 5AE6               00000AE6  24124          LA    15,2790(0,5)
000119A2 E3F0 D0B8 0024          000000B8  24125          STG   15,184(0,13)
000119A8 4110 D0B0               000000B0  24126          LA    1,176(0,13)
000119AC B904 00F7                         24127          LGR   15,7
000119B0                                   24128 @@gen_label2270 DS    0H
000119B0 05EF                              24129          BALR  14,15
000119B2                                   24130 @@gen_label2271 DS    0H
000119B2 E3F0 C294 0016          00011A54  24131          LLGF  15,@lit_1924_1763 ; rd_unittest_assert_on_failure
000119B8 41FF 4000               00000000  24132          LA    15,0(15,4)
000119BC 9500 F000      00000000 00000000  24133          CLI   0(15),0
000119C0 4780 C23C               000119FC  24134          BE    @L2093
000119C4 A72F 0003               00000003  24135          CGHI  2,3
000119C8 4780 C23C               000119FC  24136          BE    @L2093
000119CC                                   24137 @L2094   DS    0H
000119CC 41F0 629A               0000029A  24138          LA    15,666(0,6)
000119D0 E3F0 D0B0 0024          000000B0  24139          STG   15,176(0,13)
000119D6 41F0 52CE               000002CE  24140          LA    15,718(0,5)
000119DA E3F0 D0B8 0024          000000B8  24141          STG   15,184(0,13)
000119E0 E548 D0C0 068B          000000C0  24142          MVGHI 192(13),1675
000119E6 41F0 5AEC               00000AEC  24143          LA    15,2796(0,5)
000119EA E3F0 D0C8 0024          000000C8  24144          STG   15,200(0,13)
000119F0 4110 D0B0               000000B0  24145          LA    1,176(0,13)
000119F4 E3F0 C298 0004          00011A58  24146          LG    15,@lit_1924_1764 ; __assert
000119FA                                   24147 @@gen_label2274 DS    0H
000119FA 05EF                              24148          BALR  14,15
000119FC                                   24149 @@gen_label2275 DS    0H
000119FC                                   24150 @L2095   DS    0H
000119FC                                   24151 @L2093   DS    0H
000119FC A7F9 0001               00000001  24152          LGHI  15,1        ; 1
00011A00 E3C0 C2A0 001A          00011A60  24153          ALGF  12,@lit_region_diff_1924_1_2
                                           24154          DROP  12
                        00012052           24155          USING @REGION_1924_2,12
00011A06 47F0 C76C               000127BE  24156          B     @ret_lab_1924
                                           24157          DROP  12
                        000117C0           24158          USING @REGION_1924_1,12
00011A10                                   24159          DS    0D
00011A10 000000D8                          24160 @FRAMESIZE_1924 DC F'216'
00011A14 00000000
00011A18 0000000000010B70                  24161 @lit_1924_1745 DC AD(rd_kafka_aborted_txns_new)
00011A20 0000000000011400                  24162 @lit_1924_1746 DC AD(rd_kafka_aborted_txns_add)
00011A28 0000000000011630                  24163 @lit_1924_1753 DC AD(rd_kafka_aborted_txns_sort)
                                                                                                                           Page  479 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00011A30 00000000000112C0                  24164 @lit_1924_1754 DC AD(rd_kafka_aborted_txns_get_offset)
00011A38 0000000000000000                  24165 @lit_1924_1758 DC AD(fprintf)
00011A40 0000000000012808                  24166 @lit_1924_1757 DC AD(@DATA)
00011A48 0000000000012AB8                  24167 @lit_1924_1756 DC AD(@strings@)
00011A50 00000000                          24168 @lit_1924_1755 DC Q(__stderrp)
00011A54 00000000                          24169 @lit_1924_1763 DC Q(rd_unittest_assert_on_failure)
00011A58 0000000000000000                  24170 @lit_1924_1764 DC AD(__assert)
00011A60 00000892                          24171 @lit_region_diff_1924_1_2  DC A(@REGION_1924_2-@REGION_1924_1)
00011A64 00000000
00011A68 0000000000011180                  24172 @lit_1924_1780 DC AD(rd_kafka_aborted_txns_pop_offset)
00011A70 7FFFFFFFFFFFFFFF                  24173 @lit_1924_1779 DC FD'9223372036854775807' 0x7fffffffffffffff
00011A78                                   24174 @L2092   DS    0H
                                           24175 * ***
                                           24176 * ***
                                           24177 * ***
                                           24178 * ***           start_offset = rd_kafka_aborted_txns_get_offset(
                                           24179 * ***                   aborted_txns, 1);
00011A78 E330 D0B0 0024          000000B0  24180          STG   3,176(0,13)
00011A7E E548 D0B8 0001          000000B8  24181          MVGHI 184(13),1
00011A84 4110 D0B0               000000B0  24182          LA    1,176(0,13)
00011A88 E3F0 C270 0004          00011A30  24183          LG    15,@lit_1924_1754 ; rd_kafka_aborted_txns_get_offset
00011A8E                                   24184 @@gen_label2276 DS    0H
00011A8E 05EF                              24185          BALR  14,15
00011A90                                   24186 @@gen_label2277 DS    0H
00011A90 B904 002F                         24187          LGR   2,15        ; start_offset
                                           24188 * ***           do { if (!(3 == start_offset)) { fprintf(__stderrp, "\\
                                           24189 * 033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "3 == start_offset\
                                           24190 * " ": ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c", 16\
                                           24191 * 81, __FUNCTION__); fprintf(__stderrp, "queried start offset was %" "\
                                           24192 * lld" ", " "expected 3", start_offset); fprintf(__stderrp, "\033[0m\n\
                                           24193 * "); if (rd_unittest_assert_on_failure) ((3 == start_offset) ? (void)\
                                           24194 * 0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgse\
                                           24195 * t_reader.c", 1681, "3 == start_offset")); return 1; } } while (0);
00011A94                                   24196 @L2096   DS    0H
00011A94 A72F 0003               00000003  24197          CGHI  2,3
00011A98 4780 C3CC               00011B8C  24198          BE    @L2099
00011A9C E330 C290 0016          00011A50  24199          LLGF  3,@lit_1924_1755 ; __stderrp
00011AA2 E3F3 4000 0004          00000000  24200          LG    15,0(3,4)   ; __stderrp
00011AA8 E3F0 D0B0 0024          000000B0  24201          STG   15,176(0,13)
00011AAE E350 C288 0004          00011A48  24202          LG    5,@lit_1924_1756
00011AB4 41F0 5A7C               00000A7C  24203          LA    15,2684(0,5)
00011AB8 E3F0 D0B8 0024          000000B8  24204          STG   15,184(0,13)
00011ABE 41F0 52CE               000002CE  24205          LA    15,718(0,5)
00011AC2 E3F0 D0C0 0024          000000C0  24206          STG   15,192(0,13)
00011AC8 E548 D0C8 0691          000000C8  24207          MVGHI 200(13),1681
00011ACE E360 C280 0004          00011A40  24208          LG    6,@lit_1924_1757
00011AD4 41F0 629A               0000029A  24209          LA    15,666(0,6)
00011AD8 E3F0 D0D0 0024          000000D0  24210          STG   15,208(0,13)
00011ADE 4110 D0B0               000000B0  24211          LA    1,176(0,13)
00011AE2 E370 C278 0004          00011A38  24212          LG    7,@lit_1924_1758 ; fprintf
00011AE8 B904 00F7                         24213          LGR   15,7
00011AEC                                   24214 @@gen_label2279 DS    0H
                                                                                                                           Page  480 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00011AEC 05EF                              24215          BALR  14,15
00011AEE                                   24216 @@gen_label2280 DS    0H
00011AEE E3F3 4000 0004          00000000  24217          LG    15,0(3,4)   ; __stderrp
00011AF4 E3F0 D0B0 0024          000000B0  24218          STG   15,176(0,13)
00011AFA 41F0 5ABC               00000ABC  24219          LA    15,2748(0,5)
00011AFE E3F0 D0B8 0024          000000B8  24220          STG   15,184(0,13)
00011B04 E320 D0C0 0024          000000C0  24221          STG   2,192(0,13)
00011B0A 4110 D0B0               000000B0  24222          LA    1,176(0,13)
00011B0E B904 00F7                         24223          LGR   15,7
00011B12                                   24224 @@gen_label2281 DS    0H
00011B12 05EF                              24225          BALR  14,15
00011B14                                   24226 @@gen_label2282 DS    0H
00011B14 E3F3 4000 0004          00000000  24227          LG    15,0(3,4)   ; __stderrp
00011B1A E3F0 D0B0 0024          000000B0  24228          STG   15,176(0,13)
00011B20 41F0 5AE6               00000AE6  24229          LA    15,2790(0,5)
00011B24 E3F0 D0B8 0024          000000B8  24230          STG   15,184(0,13)
00011B2A 4110 D0B0               000000B0  24231          LA    1,176(0,13)
00011B2E B904 00F7                         24232          LGR   15,7
00011B32                                   24233 @@gen_label2283 DS    0H
00011B32 05EF                              24234          BALR  14,15
00011B34                                   24235 @@gen_label2284 DS    0H
00011B34 E3F0 C294 0016          00011A54  24236          LLGF  15,@lit_1924_1763 ; rd_unittest_assert_on_failure
00011B3A 41FF 4000               00000000  24237          LA    15,0(15,4)
00011B3E 9500 F000      00000000 00000000  24238          CLI   0(15),0
00011B42 4780 C3BE               00011B7E  24239          BE    @L2100
00011B46 A72F 0003               00000003  24240          CGHI  2,3
00011B4A 4780 C3BE               00011B7E  24241          BE    @L2100
00011B4E                                   24242 @L2101   DS    0H
00011B4E 41F0 629A               0000029A  24243          LA    15,666(0,6)
00011B52 E3F0 D0B0 0024          000000B0  24244          STG   15,176(0,13)
00011B58 41F0 52CE               000002CE  24245          LA    15,718(0,5)
00011B5C E3F0 D0B8 0024          000000B8  24246          STG   15,184(0,13)
00011B62 E548 D0C0 0691          000000C0  24247          MVGHI 192(13),1681
00011B68 41F0 5AEC               00000AEC  24248          LA    15,2796(0,5)
00011B6C E3F0 D0C8 0024          000000C8  24249          STG   15,200(0,13)
00011B72 4110 D0B0               000000B0  24250          LA    1,176(0,13)
00011B76 E3F0 C298 0004          00011A58  24251          LG    15,@lit_1924_1764 ; __assert
00011B7C                                   24252 @@gen_label2287 DS    0H
00011B7C 05EF                              24253          BALR  14,15
00011B7E                                   24254 @@gen_label2288 DS    0H
00011B7E                                   24255 @L2102   DS    0H
00011B7E                                   24256 @L2100   DS    0H
00011B7E A7F9 0001               00000001  24257          LGHI  15,1        ; 1
00011B82 E3C0 C2A0 001A          00011A60  24258          ALGF  12,@lit_region_diff_1924_1_2
                                           24259          DROP  12
                        00012052           24260          USING @REGION_1924_2,12
00011B88 47F0 C76C               000127BE  24261          B     @ret_lab_1924
                                           24262          DROP  12
                        000117C0           24263          USING @REGION_1924_1,12
00011B8C                                   24264 @L2099   DS    0H
                                           24265 * ***
                                           24266 * ***
                                                                                                                           Page  481 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           24267 * ***
                                           24268 * ***           start_offset = rd_kafka_aborted_txns_pop_offset(
                                           24269 * ***                   aborted_txns, 1, 0x7fffffffffffffffLL);
00011B8C E330 D0B0 0024          000000B0  24270          STG   3,176(0,13)
00011B92 E548 D0B8 0001          000000B8  24271          MVGHI 184(13),1
00011B98 E3F0 C2B0 0004          00011A70  24272          LG    15,@lit_1924_1779 ; 9223372036854775807
00011B9E E3F0 D0C0 0024          000000C0  24273          STG   15,192(0,13)
00011BA4 4110 D0B0               000000B0  24274          LA    1,176(0,13)
00011BA8 E3F0 C2A8 0004          00011A68  24275          LG    15,@lit_1924_1780 ; rd_kafka_aborted_txns_pop_offset
00011BAE                                   24276 @@gen_label2289 DS    0H
00011BAE 05EF                              24277          BALR  14,15
00011BB0                                   24278 @@gen_label2290 DS    0H
00011BB0 B904 002F                         24279          LGR   2,15        ; start_offset
                                           24280 * ***           do { if (!(3 == start_offset)) { fprintf(__stderrp, "\\
                                           24281 * 033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "3 == start_offset\
                                           24282 * " ": ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c", 16\
                                           24283 * 87, __FUNCTION__); fprintf(__stderrp, "queried start offset was %" "\
                                           24284 * lld" ", " "expected 3", start_offset); fprintf(__stderrp, "\033[0m\n\
                                           24285 * "); if (rd_unittest_assert_on_failure) ((3 == start_offset) ? (void)\
                                           24286 * 0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgse\
                                           24287 * t_reader.c", 1687, "3 == start_offset")); return 1; } } while (0);
00011BB4                                   24288 @L2103   DS    0H
00011BB4 A72F 0003               00000003  24289          CGHI  2,3
00011BB8 4780 C4EC               00011CAC  24290          BE    @L2106
00011BBC E330 C290 0016          00011A50  24291          LLGF  3,@lit_1924_1755 ; __stderrp
00011BC2 E3F3 4000 0004          00000000  24292          LG    15,0(3,4)   ; __stderrp
00011BC8 E3F0 D0B0 0024          000000B0  24293          STG   15,176(0,13)
00011BCE E350 C288 0004          00011A48  24294          LG    5,@lit_1924_1756
00011BD4 41F0 5A7C               00000A7C  24295          LA    15,2684(0,5)
00011BD8 E3F0 D0B8 0024          000000B8  24296          STG   15,184(0,13)
00011BDE 41F0 52CE               000002CE  24297          LA    15,718(0,5)
00011BE2 E3F0 D0C0 0024          000000C0  24298          STG   15,192(0,13)
00011BE8 E548 D0C8 0697          000000C8  24299          MVGHI 200(13),1687
00011BEE E360 C280 0004          00011A40  24300          LG    6,@lit_1924_1757
00011BF4 41F0 629A               0000029A  24301          LA    15,666(0,6)
00011BF8 E3F0 D0D0 0024          000000D0  24302          STG   15,208(0,13)
00011BFE 4110 D0B0               000000B0  24303          LA    1,176(0,13)
00011C02 E370 C278 0004          00011A38  24304          LG    7,@lit_1924_1758 ; fprintf
00011C08 B904 00F7                         24305          LGR   15,7
00011C0C                                   24306 @@gen_label2292 DS    0H
00011C0C 05EF                              24307          BALR  14,15
00011C0E                                   24308 @@gen_label2293 DS    0H
00011C0E E3F3 4000 0004          00000000  24309          LG    15,0(3,4)   ; __stderrp
00011C14 E3F0 D0B0 0024          000000B0  24310          STG   15,176(0,13)
00011C1A 41F0 5ABC               00000ABC  24311          LA    15,2748(0,5)
00011C1E E3F0 D0B8 0024          000000B8  24312          STG   15,184(0,13)
00011C24 E320 D0C0 0024          000000C0  24313          STG   2,192(0,13)
00011C2A 4110 D0B0               000000B0  24314          LA    1,176(0,13)
00011C2E B904 00F7                         24315          LGR   15,7
00011C32                                   24316 @@gen_label2294 DS    0H
00011C32 05EF                              24317          BALR  14,15
00011C34                                   24318 @@gen_label2295 DS    0H
                                                                                                                           Page  482 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00011C34 E3F3 4000 0004          00000000  24319          LG    15,0(3,4)   ; __stderrp
00011C3A E3F0 D0B0 0024          000000B0  24320          STG   15,176(0,13)
00011C40 41F0 5AE6               00000AE6  24321          LA    15,2790(0,5)
00011C44 E3F0 D0B8 0024          000000B8  24322          STG   15,184(0,13)
00011C4A 4110 D0B0               000000B0  24323          LA    1,176(0,13)
00011C4E B904 00F7                         24324          LGR   15,7
00011C52                                   24325 @@gen_label2296 DS    0H
00011C52 05EF                              24326          BALR  14,15
00011C54                                   24327 @@gen_label2297 DS    0H
00011C54 E3F0 C294 0016          00011A54  24328          LLGF  15,@lit_1924_1763 ; rd_unittest_assert_on_failure
00011C5A 41FF 4000               00000000  24329          LA    15,0(15,4)
00011C5E 9500 F000      00000000 00000000  24330          CLI   0(15),0
00011C62 4780 C4DE               00011C9E  24331          BE    @L2107
00011C66 A72F 0003               00000003  24332          CGHI  2,3
00011C6A 4780 C4DE               00011C9E  24333          BE    @L2107
00011C6E                                   24334 @L2108   DS    0H
00011C6E 41F0 629A               0000029A  24335          LA    15,666(0,6)
00011C72 E3F0 D0B0 0024          000000B0  24336          STG   15,176(0,13)
00011C78 41F0 52CE               000002CE  24337          LA    15,718(0,5)
00011C7C E3F0 D0B8 0024          000000B8  24338          STG   15,184(0,13)
00011C82 E548 D0C0 0697          000000C0  24339          MVGHI 192(13),1687
00011C88 41F0 5AEC               00000AEC  24340          LA    15,2796(0,5)
00011C8C E3F0 D0C8 0024          000000C8  24341          STG   15,200(0,13)
00011C92 4110 D0B0               000000B0  24342          LA    1,176(0,13)
00011C96 E3F0 C298 0004          00011A58  24343          LG    15,@lit_1924_1764 ; __assert
00011C9C                                   24344 @@gen_label2300 DS    0H
00011C9C 05EF                              24345          BALR  14,15
00011C9E                                   24346 @@gen_label2301 DS    0H
00011C9E                                   24347 @L2109   DS    0H
00011C9E                                   24348 @L2107   DS    0H
00011C9E A7F9 0001               00000001  24349          LGHI  15,1        ; 1
00011CA2 E3C0 C2A0 001A          00011A60  24350          ALGF  12,@lit_region_diff_1924_1_2
                                           24351          DROP  12
                        00012052           24352          USING @REGION_1924_2,12
00011CA8 47F0 C76C               000127BE  24353          B     @ret_lab_1924
                                           24354          DROP  12
                        000117C0           24355          USING @REGION_1924_1,12
00011CAC                                   24356 @L2106   DS    0H
                                           24357 * ***
                                           24358 * ***
                                           24359 * ***
                                           24360 * ***           start_offset = rd_kafka_aborted_txns_get_offset(
                                           24361 * ***                   aborted_txns, 1);
00011CAC E330 D0B0 0024          000000B0  24362          STG   3,176(0,13)
00011CB2 E548 D0B8 0001          000000B8  24363          MVGHI 184(13),1
00011CB8 4110 D0B0               000000B0  24364          LA    1,176(0,13)
00011CBC E3F0 C270 0004          00011A30  24365          LG    15,@lit_1924_1754 ; rd_kafka_aborted_txns_get_offset
00011CC2                                   24366 @@gen_label2302 DS    0H
00011CC2 05EF                              24367          BALR  14,15
00011CC4                                   24368 @@gen_label2303 DS    0H
00011CC4 B904 002F                         24369          LGR   2,15        ; start_offset
                                           24370 * ***           do { if (!(10 == start_offset)) { fprintf(__stderrp, "\
                                                                                                                           Page  483 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           24371 * \033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "10 == start_offs\
                                           24372 * et" ": ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c", \
                                           24373 * 1693, __FUNCTION__); fprintf(__stderrp, "queried start offset was %"\
                                           24374 *  "lld" ", " "expected 10", start_offset); fprintf(__stderrp, "\033[0\
                                           24375 * m\n"); if (rd_unittest_assert_on_failure) ((10 == start_offset) ? (v\
                                           24376 * oid)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_m\
                                           24377 * sgset_reader.c", 1693, "10 == start_offset")); return 1; } } while (\
                                           24378 * 0);
00011CC8                                   24379 @L2110   DS    0H
00011CC8 A72F 000A               0000000A  24380          CGHI  2,10
00011CCC 4780 C600               00011DC0  24381          BE    @L2113
00011CD0 E330 C290 0016          00011A50  24382          LLGF  3,@lit_1924_1755 ; __stderrp
00011CD6 E3F3 4000 0004          00000000  24383          LG    15,0(3,4)   ; __stderrp
00011CDC E3F0 D0B0 0024          000000B0  24384          STG   15,176(0,13)
00011CE2 E350 C288 0004          00011A48  24385          LG    5,@lit_1924_1756
00011CE8 41F0 5AFE               00000AFE  24386          LA    15,2814(0,5)
00011CEC E3F0 D0B8 0024          000000B8  24387          STG   15,184(0,13)
00011CF2 41F0 52CE               000002CE  24388          LA    15,718(0,5)
00011CF6 E3F0 D0C0 0024          000000C0  24389          STG   15,192(0,13)
00011CFC E548 D0C8 069D          000000C8  24390          MVGHI 200(13),1693
00011D02 E360 C280 0004          00011A40  24391          LG    6,@lit_1924_1757
00011D08 41F0 629A               0000029A  24392          LA    15,666(0,6)
00011D0C E3F0 D0D0 0024          000000D0  24393          STG   15,208(0,13)
00011D12 4110 D0B0               000000B0  24394          LA    1,176(0,13)
00011D16 E370 C278 0004          00011A38  24395          LG    7,@lit_1924_1758 ; fprintf
00011D1C B904 00F7                         24396          LGR   15,7
00011D20                                   24397 @@gen_label2305 DS    0H
00011D20 05EF                              24398          BALR  14,15
00011D22                                   24399 @@gen_label2306 DS    0H
00011D22 E3F3 4000 0004          00000000  24400          LG    15,0(3,4)   ; __stderrp
00011D28 E3F0 D0B0 0024          000000B0  24401          STG   15,176(0,13)
00011D2E 41F0 5B3E               00000B3E  24402          LA    15,2878(0,5)
00011D32 E3F0 D0B8 0024          000000B8  24403          STG   15,184(0,13)
00011D38 E320 D0C0 0024          000000C0  24404          STG   2,192(0,13)
00011D3E 4110 D0B0               000000B0  24405          LA    1,176(0,13)
00011D42 B904 00F7                         24406          LGR   15,7
00011D46                                   24407 @@gen_label2307 DS    0H
00011D46 05EF                              24408          BALR  14,15
00011D48                                   24409 @@gen_label2308 DS    0H
00011D48 E3F3 4000 0004          00000000  24410          LG    15,0(3,4)   ; __stderrp
00011D4E E3F0 D0B0 0024          000000B0  24411          STG   15,176(0,13)
00011D54 41F0 5AE6               00000AE6  24412          LA    15,2790(0,5)
00011D58 E3F0 D0B8 0024          000000B8  24413          STG   15,184(0,13)
00011D5E 4110 D0B0               000000B0  24414          LA    1,176(0,13)
00011D62 B904 00F7                         24415          LGR   15,7
00011D66                                   24416 @@gen_label2309 DS    0H
00011D66 05EF                              24417          BALR  14,15
00011D68                                   24418 @@gen_label2310 DS    0H
00011D68 E3F0 C294 0016          00011A54  24419          LLGF  15,@lit_1924_1763 ; rd_unittest_assert_on_failure
00011D6E 41FF 4000               00000000  24420          LA    15,0(15,4)
00011D72 9500 F000      00000000 00000000  24421          CLI   0(15),0
00011D76 4780 C5F2               00011DB2  24422          BE    @L2114
                                                                                                                           Page  484 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00011D7A A72F 000A               0000000A  24423          CGHI  2,10
00011D7E 4780 C5F2               00011DB2  24424          BE    @L2114
00011D82                                   24425 @L2115   DS    0H
00011D82 41F0 629A               0000029A  24426          LA    15,666(0,6)
00011D86 E3F0 D0B0 0024          000000B0  24427          STG   15,176(0,13)
00011D8C 41F0 52CE               000002CE  24428          LA    15,718(0,5)
00011D90 E3F0 D0B8 0024          000000B8  24429          STG   15,184(0,13)
00011D96 E548 D0C0 069D          000000C0  24430          MVGHI 192(13),1693
00011D9C 41F0 5B6A               00000B6A  24431          LA    15,2922(0,5)
00011DA0 E3F0 D0C8 0024          000000C8  24432          STG   15,200(0,13)
00011DA6 4110 D0B0               000000B0  24433          LA    1,176(0,13)
00011DAA E3F0 C298 0004          00011A58  24434          LG    15,@lit_1924_1764 ; __assert
00011DB0                                   24435 @@gen_label2313 DS    0H
00011DB0 05EF                              24436          BALR  14,15
00011DB2                                   24437 @@gen_label2314 DS    0H
00011DB2                                   24438 @L2116   DS    0H
00011DB2                                   24439 @L2114   DS    0H
00011DB2 A7F9 0001               00000001  24440          LGHI  15,1        ; 1
00011DB6 E3C0 C2A0 001A          00011A60  24441          ALGF  12,@lit_region_diff_1924_1_2
                                           24442          DROP  12
                        00012052           24443          USING @REGION_1924_2,12
00011DBC 47F0 C76C               000127BE  24444          B     @ret_lab_1924
                                           24445          DROP  12
                        000117C0           24446          USING @REGION_1924_1,12
00011DC0                                   24447 @L2113   DS    0H
                                           24448 * ***
                                           24449 * ***
                                           24450 * ***
                                           24451 * ***           start_offset = rd_kafka_aborted_txns_get_offset(
                                           24452 * ***                   aborted_txns, 2);
00011DC0 E330 D0B0 0024          000000B0  24453          STG   3,176(0,13)
00011DC6 E548 D0B8 0002          000000B8  24454          MVGHI 184(13),2
00011DCC 4110 D0B0               000000B0  24455          LA    1,176(0,13)
00011DD0 E3F0 C270 0004          00011A30  24456          LG    15,@lit_1924_1754 ; rd_kafka_aborted_txns_get_offset
00011DD6                                   24457 @@gen_label2315 DS    0H
00011DD6 05EF                              24458          BALR  14,15
00011DD8                                   24459 @@gen_label2316 DS    0H
00011DD8 B904 002F                         24460          LGR   2,15        ; start_offset
                                           24461 * ***           do { if (!(7 == start_offset)) { fprintf(__stderrp, "\\
                                           24462 * 033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "7 == start_offset\
                                           24463 * " ": ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c", 16\
                                           24464 * 99, __FUNCTION__); fprintf(__stderrp, "queried start offset was %" "\
                                           24465 * lld" ", " "expected 7", start_offset); fprintf(__stderrp, "\033[0m\n\
                                           24466 * "); if (rd_unittest_assert_on_failure) ((7 == start_offset) ? (void)\
                                           24467 * 0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgse\
                                           24468 * t_reader.c", 1699, "7 == start_offset")); return 1; } } while (0);
00011DDC                                   24469 @L2117   DS    0H
00011DDC A72F 0007               00000007  24470          CGHI  2,7
00011DE0 4780 C714               00011ED4  24471          BE    @L2120
00011DE4 E330 C290 0016          00011A50  24472          LLGF  3,@lit_1924_1755 ; __stderrp
00011DEA E3F3 4000 0004          00000000  24473          LG    15,0(3,4)   ; __stderrp
00011DF0 E3F0 D0B0 0024          000000B0  24474          STG   15,176(0,13)
                                                                                                                           Page  485 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00011DF6 E350 C288 0004          00011A48  24475          LG    5,@lit_1924_1756
00011DFC 41F0 5B7E               00000B7E  24476          LA    15,2942(0,5)
00011E00 E3F0 D0B8 0024          000000B8  24477          STG   15,184(0,13)
00011E06 41F0 52CE               000002CE  24478          LA    15,718(0,5)
00011E0A E3F0 D0C0 0024          000000C0  24479          STG   15,192(0,13)
00011E10 E548 D0C8 06A3          000000C8  24480          MVGHI 200(13),1699
00011E16 E360 C280 0004          00011A40  24481          LG    6,@lit_1924_1757
00011E1C 41F0 629A               0000029A  24482          LA    15,666(0,6)
00011E20 E3F0 D0D0 0024          000000D0  24483          STG   15,208(0,13)
00011E26 4110 D0B0               000000B0  24484          LA    1,176(0,13)
00011E2A E370 C278 0004          00011A38  24485          LG    7,@lit_1924_1758 ; fprintf
00011E30 B904 00F7                         24486          LGR   15,7
00011E34                                   24487 @@gen_label2318 DS    0H
00011E34 05EF                              24488          BALR  14,15
00011E36                                   24489 @@gen_label2319 DS    0H
00011E36 E3F3 4000 0004          00000000  24490          LG    15,0(3,4)   ; __stderrp
00011E3C E3F0 D0B0 0024          000000B0  24491          STG   15,176(0,13)
00011E42 41F0 5BBE               00000BBE  24492          LA    15,3006(0,5)
00011E46 E3F0 D0B8 0024          000000B8  24493          STG   15,184(0,13)
00011E4C E320 D0C0 0024          000000C0  24494          STG   2,192(0,13)
00011E52 4110 D0B0               000000B0  24495          LA    1,176(0,13)
00011E56 B904 00F7                         24496          LGR   15,7
00011E5A                                   24497 @@gen_label2320 DS    0H
00011E5A 05EF                              24498          BALR  14,15
00011E5C                                   24499 @@gen_label2321 DS    0H
00011E5C E3F3 4000 0004          00000000  24500          LG    15,0(3,4)   ; __stderrp
00011E62 E3F0 D0B0 0024          000000B0  24501          STG   15,176(0,13)
00011E68 41F0 5AE6               00000AE6  24502          LA    15,2790(0,5)
00011E6C E3F0 D0B8 0024          000000B8  24503          STG   15,184(0,13)
00011E72 4110 D0B0               000000B0  24504          LA    1,176(0,13)
00011E76 B904 00F7                         24505          LGR   15,7
00011E7A                                   24506 @@gen_label2322 DS    0H
00011E7A 05EF                              24507          BALR  14,15
00011E7C                                   24508 @@gen_label2323 DS    0H
00011E7C E3F0 C294 0016          00011A54  24509          LLGF  15,@lit_1924_1763 ; rd_unittest_assert_on_failure
00011E82 41FF 4000               00000000  24510          LA    15,0(15,4)
00011E86 9500 F000      00000000 00000000  24511          CLI   0(15),0
00011E8A 4780 C706               00011EC6  24512          BE    @L2121
00011E8E A72F 0007               00000007  24513          CGHI  2,7
00011E92 4780 C706               00011EC6  24514          BE    @L2121
00011E96                                   24515 @L2122   DS    0H
00011E96 41F0 629A               0000029A  24516          LA    15,666(0,6)
00011E9A E3F0 D0B0 0024          000000B0  24517          STG   15,176(0,13)
00011EA0 41F0 52CE               000002CE  24518          LA    15,718(0,5)
00011EA4 E3F0 D0B8 0024          000000B8  24519          STG   15,184(0,13)
00011EAA E548 D0C0 06A3          000000C0  24520          MVGHI 192(13),1699
00011EB0 41F0 5BE8               00000BE8  24521          LA    15,3048(0,5)
00011EB4 E3F0 D0C8 0024          000000C8  24522          STG   15,200(0,13)
00011EBA 4110 D0B0               000000B0  24523          LA    1,176(0,13)
00011EBE E3F0 C298 0004          00011A58  24524          LG    15,@lit_1924_1764 ; __assert
00011EC4                                   24525 @@gen_label2326 DS    0H
00011EC4 05EF                              24526          BALR  14,15
                                                                                                                           Page  486 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00011EC6                                   24527 @@gen_label2327 DS    0H
00011EC6                                   24528 @L2123   DS    0H
00011EC6                                   24529 @L2121   DS    0H
00011EC6 A7F9 0001               00000001  24530          LGHI  15,1        ; 1
00011ECA E3C0 C2A0 001A          00011A60  24531          ALGF  12,@lit_region_diff_1924_1_2
                                           24532          DROP  12
                        00012052           24533          USING @REGION_1924_2,12
00011ED0 47F0 C76C               000127BE  24534          B     @ret_lab_1924
                                           24535          DROP  12
                        000117C0           24536          USING @REGION_1924_1,12
00011ED4                                   24537 @L2120   DS    0H
                                           24538 * ***
                                           24539 * ***
                                           24540 * ***
                                           24541 * ***           rd_kafka_aborted_txns_pop_offset(aborted_txns, 1, 0x7f\
                                           24542 * ffffffffffffffLL);
00011ED4 E330 D0B0 0024          000000B0  24543          STG   3,176(0,13)
00011EDA E548 D0B8 0001          000000B8  24544          MVGHI 184(13),1
00011EE0 E3F0 C2B0 0004          00011A70  24545          LG    15,@lit_1924_1779 ; 9223372036854775807
00011EE6 E3F0 D0C0 0024          000000C0  24546          STG   15,192(0,13)
00011EEC 4110 D0B0               000000B0  24547          LA    1,176(0,13)
00011EF0 E3F0 C2A8 0004          00011A68  24548          LG    15,@lit_1924_1780 ; rd_kafka_aborted_txns_pop_offset
00011EF6                                   24549 @@gen_label2328 DS    0H
00011EF6 05EF                              24550          BALR  14,15
00011EF8                                   24551 @@gen_label2329 DS    0H
                                           24552 * ***
                                           24553 * ***           start_offset = rd_kafka_aborted_txns_get_offset(
                                           24554 * ***                   aborted_txns, 1);
00011EF8 E330 D0B0 0024          000000B0  24555          STG   3,176(0,13)
00011EFE E548 D0B8 0001          000000B8  24556          MVGHI 184(13),1
00011F04 4110 D0B0               000000B0  24557          LA    1,176(0,13)
00011F08 E3F0 C270 0004          00011A30  24558          LG    15,@lit_1924_1754 ; rd_kafka_aborted_txns_get_offset
00011F0E                                   24559 @@gen_label2330 DS    0H
00011F0E 05EF                              24560          BALR  14,15
00011F10                                   24561 @@gen_label2331 DS    0H
00011F10 B904 002F                         24562          LGR   2,15        ; start_offset
                                           24563 * ***           do { if (!(42 == start_offset)) { fprintf(__stderrp, "\
                                           24564 * \033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "42 == start_offs\
                                           24565 * et" ": ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c", \
                                           24566 * 1707, __FUNCTION__); fprintf(__stderrp, "queried start offset was %"\
                                           24567 *  "lld" ", " "expected 42", start_offset); fprintf(__stderrp, "\033[0\
                                           24568 * m\n"); if (rd_unittest_assert_on_failure) ((42 == start_offset) ? (v\
                                           24569 * oid)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_m\
                                           24570 * sgset_reader.c", 1707, "42 == start_offset")); return 1; } } while (\
                                           24571 * 0);
00011F14                                   24572 @L2124   DS    0H
00011F14 A72F 002A               0000002A  24573          CGHI  2,42
00011F18 4780 C84C               0001200C  24574          BE    @L2127
00011F1C E330 C290 0016          00011A50  24575          LLGF  3,@lit_1924_1755 ; __stderrp
00011F22 E3F3 4000 0004          00000000  24576          LG    15,0(3,4)   ; __stderrp
00011F28 E3F0 D0B0 0024          000000B0  24577          STG   15,176(0,13)
00011F2E E350 C288 0004          00011A48  24578          LG    5,@lit_1924_1756
                                                                                                                           Page  487 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00011F34 41F0 5BFA               00000BFA  24579          LA    15,3066(0,5)
00011F38 E3F0 D0B8 0024          000000B8  24580          STG   15,184(0,13)
00011F3E 41F0 52CE               000002CE  24581          LA    15,718(0,5)
00011F42 E3F0 D0C0 0024          000000C0  24582          STG   15,192(0,13)
00011F48 E548 D0C8 06AB          000000C8  24583          MVGHI 200(13),1707
00011F4E E360 C280 0004          00011A40  24584          LG    6,@lit_1924_1757
00011F54 41F0 629A               0000029A  24585          LA    15,666(0,6)
00011F58 E3F0 D0D0 0024          000000D0  24586          STG   15,208(0,13)
00011F5E 4110 D0B0               000000B0  24587          LA    1,176(0,13)
00011F62 E370 C278 0004          00011A38  24588          LG    7,@lit_1924_1758 ; fprintf
00011F68 B904 00F7                         24589          LGR   15,7
00011F6C                                   24590 @@gen_label2333 DS    0H
00011F6C 05EF                              24591          BALR  14,15
00011F6E                                   24592 @@gen_label2334 DS    0H
00011F6E E3F3 4000 0004          00000000  24593          LG    15,0(3,4)   ; __stderrp
00011F74 E3F0 D0B0 0024          000000B0  24594          STG   15,176(0,13)
00011F7A 41F0 5C3A               00000C3A  24595          LA    15,3130(0,5)
00011F7E E3F0 D0B8 0024          000000B8  24596          STG   15,184(0,13)
00011F84 E320 D0C0 0024          000000C0  24597          STG   2,192(0,13)
00011F8A 4110 D0B0               000000B0  24598          LA    1,176(0,13)
00011F8E B904 00F7                         24599          LGR   15,7
00011F92                                   24600 @@gen_label2335 DS    0H
00011F92 05EF                              24601          BALR  14,15
00011F94                                   24602 @@gen_label2336 DS    0H
00011F94 E3F3 4000 0004          00000000  24603          LG    15,0(3,4)   ; __stderrp
00011F9A E3F0 D0B0 0024          000000B0  24604          STG   15,176(0,13)
00011FA0 41F0 5AE6               00000AE6  24605          LA    15,2790(0,5)
00011FA4 E3F0 D0B8 0024          000000B8  24606          STG   15,184(0,13)
00011FAA 4110 D0B0               000000B0  24607          LA    1,176(0,13)
00011FAE B904 00F7                         24608          LGR   15,7
00011FB2                                   24609 @@gen_label2337 DS    0H
00011FB2 05EF                              24610          BALR  14,15
00011FB4                                   24611 @@gen_label2338 DS    0H
00011FB4 E3F0 C294 0016          00011A54  24612          LLGF  15,@lit_1924_1763 ; rd_unittest_assert_on_failure
00011FBA 41FF 4000               00000000  24613          LA    15,0(15,4)
00011FBE 9500 F000      00000000 00000000  24614          CLI   0(15),0
00011FC2 4780 C83E               00011FFE  24615          BE    @L2128
00011FC6 A72F 002A               0000002A  24616          CGHI  2,42
00011FCA 4780 C83E               00011FFE  24617          BE    @L2128
00011FCE                                   24618 @L2129   DS    0H
00011FCE 41F0 629A               0000029A  24619          LA    15,666(0,6)
00011FD2 E3F0 D0B0 0024          000000B0  24620          STG   15,176(0,13)
00011FD8 41F0 52CE               000002CE  24621          LA    15,718(0,5)
00011FDC E3F0 D0B8 0024          000000B8  24622          STG   15,184(0,13)
00011FE2 E548 D0C0 06AB          000000C0  24623          MVGHI 192(13),1707
00011FE8 41F0 5C66               00000C66  24624          LA    15,3174(0,5)
00011FEC E3F0 D0C8 0024          000000C8  24625          STG   15,200(0,13)
00011FF2 4110 D0B0               000000B0  24626          LA    1,176(0,13)
00011FF6 E3F0 C298 0004          00011A58  24627          LG    15,@lit_1924_1764 ; __assert
00011FFC                                   24628 @@gen_label2341 DS    0H
00011FFC 05EF                              24629          BALR  14,15
00011FFE                                   24630 @@gen_label2342 DS    0H
                                                                                                                           Page  488 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00011FFE                                   24631 @L2130   DS    0H
00011FFE                                   24632 @L2128   DS    0H
00011FFE A7F9 0001               00000001  24633          LGHI  15,1        ; 1
00012002 E3C0 C2A0 001A          00011A60  24634          ALGF  12,@lit_region_diff_1924_1_2
                                           24635          DROP  12
                        00012052           24636          USING @REGION_1924_2,12
00012008 47F0 C76C               000127BE  24637          B     @ret_lab_1924
                                           24638          DROP  12
                        000117C0           24639          USING @REGION_1924_1,12
0001200C                                   24640 @L2127   DS    0H
                                           24641 * ***
                                           24642 * ***
                                           24643 * ***
                                           24644 * ***           rd_kafka_aborted_txns_pop_offset(aborted_txns, 1, 0x7f\
                                           24645 * ffffffffffffffLL);
0001200C E330 D0B0 0024          000000B0  24646          STG   3,176(0,13)
00012012 E548 D0B8 0001          000000B8  24647          MVGHI 184(13),1
00012018 E3F0 C2B0 0004          00011A70  24648          LG    15,@lit_1924_1779 ; 9223372036854775807
0001201E E3F0 D0C0 0024          000000C0  24649          STG   15,192(0,13)
00012024 4110 D0B0               000000B0  24650          LA    1,176(0,13)
00012028 E3F0 C2A8 0004          00011A68  24651          LG    15,@lit_1924_1780 ; rd_kafka_aborted_txns_pop_offset
0001202E                                   24652 @@gen_label2343 DS    0H
0001202E 05EF                              24653          BALR  14,15
00012030                                   24654 @@gen_label2344 DS    0H
                                           24655 * ***
                                           24656 * ***           start_offset = rd_kafka_aborted_txns_get_offset(
                                           24657 * ***                   aborted_txns, 1);
00012030 E330 D0B0 0024          000000B0  24658          STG   3,176(0,13)
00012036 E548 D0B8 0001          000000B8  24659          MVGHI 184(13),1
0001203C 4110 D0B0               000000B0  24660          LA    1,176(0,13)
00012040 E3F0 C270 0004          00011A30  24661          LG    15,@lit_1924_1754 ; rd_kafka_aborted_txns_get_offset
00012046                                   24662 @@gen_label2345 DS    0H
00012046 05EF                              24663          BALR  14,15
00012048                                   24664 @@gen_label2346 DS    0H
00012048 B904 002F                         24665          LGR   2,15        ; start_offset
                                           24666 * ***           do { if (!(44 == start_offset)) { fprintf(__stderrp, "\
                                           24667 * \033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "44 == start_offs\
                                           24668 * et" ": ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c", \
                                           24669 * 1715, __FUNCTION__); fprintf(__stderrp, "queried start offset was %"\
                                           24670 *  "lld" ", " "expected 44", start_offset); fprintf(__stderrp, "\033[0\
                                           24671 * m\n"); if (rd_unittest_assert_on_failure) ((44 == start_offset) ? (v\
                                           24672 * oid)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_m\
                                           24673 * sgset_reader.c", 1715, "44 == start_offset")); return 1; } } while (\
                                           24674 * 0);
0001204C E3C0 C2A0 001A          00011A60  24675          ALGF  12,@lit_region_diff_1924_1_2
00012052                                   24676 @REGION_1924_2 DS 0H
                                           24677          DROP  12
                        00012052           24678          USING @REGION_1924_2,12
00012052                                   24679 @L2131   DS    0H
00012052 A72F 002C               0000002C  24680          CGHI  2,44
00012056 4780 C13E               00012190  24681          BE    @L2134
0001205A E330 C10E 0016          00012160  24682          LLGF  3,@lit_1924_1835 ; __stderrp
                                                                                                                           Page  489 
  Active Usings: @REGION_1924_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00012060 E3F3 4000 0004          00000000  24683          LG    15,0(3,4)   ; __stderrp
00012066 E3F0 D0B0 0024          000000B0  24684          STG   15,176(0,13)
0001206C E350 C106 0004          00012158  24685          LG    5,@lit_1924_1836
00012072 41F0 5C7A               00000C7A  24686          LA    15,3194(0,5)
00012076 E3F0 D0B8 0024          000000B8  24687          STG   15,184(0,13)
0001207C 41F0 52CE               000002CE  24688          LA    15,718(0,5)
00012080 E3F0 D0C0 0024          000000C0  24689          STG   15,192(0,13)
00012086 E548 D0C8 06B3          000000C8  24690          MVGHI 200(13),1715
0001208C E360 C0FE 0004          00012150  24691          LG    6,@lit_1924_1837
00012092 41F0 629A               0000029A  24692          LA    15,666(0,6)
00012096 E3F0 D0D0 0024          000000D0  24693          STG   15,208(0,13)
0001209C 4110 D0B0               000000B0  24694          LA    1,176(0,13)
000120A0 E370 C0F6 0004          00012148  24695          LG    7,@lit_1924_1838 ; fprintf
000120A6 B904 00F7                         24696          LGR   15,7
000120AA                                   24697 @@gen_label2348 DS    0H
000120AA 05EF                              24698          BALR  14,15
000120AC                                   24699 @@gen_label2349 DS    0H
000120AC E3F3 4000 0004          00000000  24700          LG    15,0(3,4)   ; __stderrp
000120B2 E3F0 D0B0 0024          000000B0  24701          STG   15,176(0,13)
000120B8 41F0 5CBA               00000CBA  24702          LA    15,3258(0,5)
000120BC E3F0 D0B8 0024          000000B8  24703          STG   15,184(0,13)
000120C2 E320 D0C0 0024          000000C0  24704          STG   2,192(0,13)
000120C8 4110 D0B0               000000B0  24705          LA    1,176(0,13)
000120CC B904 00F7                         24706          LGR   15,7
000120D0                                   24707 @@gen_label2350 DS    0H
000120D0 05EF                              24708          BALR  14,15
000120D2                                   24709 @@gen_label2351 DS    0H
000120D2 E3F3 4000 0004          00000000  24710          LG    15,0(3,4)   ; __stderrp
000120D8 E3F0 D0B0 0024          000000B0  24711          STG   15,176(0,13)
000120DE 41F0 5AE6               00000AE6  24712          LA    15,2790(0,5)
000120E2 E3F0 D0B8 0024          000000B8  24713          STG   15,184(0,13)
000120E8 4110 D0B0               000000B0  24714          LA    1,176(0,13)
000120EC B904 00F7                         24715          LGR   15,7
000120F0                                   24716 @@gen_label2352 DS    0H
000120F0 05EF                              24717          BALR  14,15
000120F2                                   24718 @@gen_label2353 DS    0H
000120F2 E3F0 C112 0016          00012164  24719          LLGF  15,@lit_1924_1843 ; rd_unittest_assert_on_failure
000120F8 41FF 4000               00000000  24720          LA    15,0(15,4)
000120FC 9500 F000      00000000 00000000  24721          CLI   0(15),0
00012100 4780 C0EA               0001213C  24722          BE    @L2135
00012104 A72F 002C               0000002C  24723          CGHI  2,44
00012108 4780 C0EA               0001213C  24724          BE    @L2135
0001210C                                   24725 @L2136   DS    0H
0001210C 41F0 629A               0000029A  24726          LA    15,666(0,6)
00012110 E3F0 D0B0 0024          000000B0  24727          STG   15,176(0,13)
00012116 41F0 52CE               000002CE  24728          LA    15,718(0,5)
0001211A E3F0 D0B8 0024          000000B8  24729          STG   15,184(0,13)
00012120 E548 D0C0 06B3          000000C0  24730          MVGHI 192(13),1715
00012126 41F0 5CE6               00000CE6  24731          LA    15,3302(0,5)
0001212A E3F0 D0C8 0024          000000C8  24732          STG   15,200(0,13)
00012130 4110 D0B0               000000B0  24733          LA    1,176(0,13)
00012134 E3F0 C116 0004          00012168  24734          LG    15,@lit_1924_1844 ; __assert
                                                                                                                           Page  490 
  Active Usings: @REGION_1924_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0001213A                                   24735 @@gen_label2356 DS    0H
0001213A 05EF                              24736          BALR  14,15
0001213C                                   24737 @@gen_label2357 DS    0H
0001213C                                   24738 @L2137   DS    0H
0001213C                                   24739 @L2135   DS    0H
0001213C A7F9 0001               00000001  24740          LGHI  15,1        ; 1
00012140 47F0 C76C               000127BE  24741          B     @ret_lab_1924
00012148                                   24742          DS    0D
00012148 0000000000000000                  24743 @lit_1924_1838 DC AD(fprintf)
00012150 0000000000012808                  24744 @lit_1924_1837 DC AD(@DATA)
00012158 0000000000012AB8                  24745 @lit_1924_1836 DC AD(@strings@)
00012160 00000000                          24746 @lit_1924_1835 DC Q(__stderrp)
00012164 00000000                          24747 @lit_1924_1843 DC Q(rd_unittest_assert_on_failure)
00012168 0000000000000000                  24748 @lit_1924_1844 DC AD(__assert)
00012170 00000000000112C0                  24749 @lit_1924_1846 DC AD(rd_kafka_aborted_txns_get_offset)
00012178 0000000000011180                  24750 @lit_1924_1860 DC AD(rd_kafka_aborted_txns_pop_offset)
00012180 7FFFFFFFFFFFFFFF                  24751 @lit_1924_1859 DC FD'9223372036854775807' 0x7fffffffffffffff
00012188 0000000000010D10                  24752 @lit_1924_1916 DC AD(rd_kafka_aborted_txns_destroy)
00012190                                   24753 @L2134   DS    0H
                                           24754 * ***
                                           24755 * ***
                                           24756 * ***
                                           24757 * ***           start_offset = rd_kafka_aborted_txns_get_offset(
                                           24758 * ***                   aborted_txns, 2);
00012190 E330 D0B0 0024          000000B0  24759          STG   3,176(0,13)
00012196 E548 D0B8 0002          000000B8  24760          MVGHI 184(13),2
0001219C 4110 D0B0               000000B0  24761          LA    1,176(0,13)
000121A0 E3F0 C11E 0004          00012170  24762          LG    15,@lit_1924_1846 ; rd_kafka_aborted_txns_get_offset
000121A6                                   24763 @@gen_label2358 DS    0H
000121A6 05EF                              24764          BALR  14,15
000121A8                                   24765 @@gen_label2359 DS    0H
000121A8 B904 002F                         24766          LGR   2,15        ; start_offset
                                           24767 * ***           do { if (!(7 == start_offset)) { fprintf(__stderrp, "\\
                                           24768 * 033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "7 == start_offset\
                                           24769 * " ": ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c", 17\
                                           24770 * 21, __FUNCTION__); fprintf(__stderrp, "queried start offset was %" "\
                                           24771 * lld" ", " "expected 7", start_offset); fprintf(__stderrp, "\033[0m\n\
                                           24772 * "); if (rd_unittest_assert_on_failure) ((7 == start_offset) ? (void)\
                                           24773 * 0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgse\
                                           24774 * t_reader.c", 1721, "7 == start_offset")); return 1; } } while (0);
000121AC                                   24775 @L2138   DS    0H
000121AC A72F 0007               00000007  24776          CGHI  2,7
000121B0 4780 C24C               0001229E  24777          BE    @L2141
000121B4 E330 C10E 0016          00012160  24778          LLGF  3,@lit_1924_1835 ; __stderrp
000121BA E3F3 4000 0004          00000000  24779          LG    15,0(3,4)   ; __stderrp
000121C0 E3F0 D0B0 0024          000000B0  24780          STG   15,176(0,13)
000121C6 E350 C106 0004          00012158  24781          LG    5,@lit_1924_1836
000121CC 41F0 5B7E               00000B7E  24782          LA    15,2942(0,5)
000121D0 E3F0 D0B8 0024          000000B8  24783          STG   15,184(0,13)
000121D6 41F0 52CE               000002CE  24784          LA    15,718(0,5)
000121DA E3F0 D0C0 0024          000000C0  24785          STG   15,192(0,13)
000121E0 E548 D0C8 06B9          000000C8  24786          MVGHI 200(13),1721
                                                                                                                           Page  491 
  Active Usings: @REGION_1924_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000121E6 E360 C0FE 0004          00012150  24787          LG    6,@lit_1924_1837
000121EC 41F0 629A               0000029A  24788          LA    15,666(0,6)
000121F0 E3F0 D0D0 0024          000000D0  24789          STG   15,208(0,13)
000121F6 4110 D0B0               000000B0  24790          LA    1,176(0,13)
000121FA E370 C0F6 0004          00012148  24791          LG    7,@lit_1924_1838 ; fprintf
00012200 B904 00F7                         24792          LGR   15,7
00012204                                   24793 @@gen_label2361 DS    0H
00012204 05EF                              24794          BALR  14,15
00012206                                   24795 @@gen_label2362 DS    0H
00012206 E3F3 4000 0004          00000000  24796          LG    15,0(3,4)   ; __stderrp
0001220C E3F0 D0B0 0024          000000B0  24797          STG   15,176(0,13)
00012212 41F0 5BBE               00000BBE  24798          LA    15,3006(0,5)
00012216 E3F0 D0B8 0024          000000B8  24799          STG   15,184(0,13)
0001221C E320 D0C0 0024          000000C0  24800          STG   2,192(0,13)
00012222 4110 D0B0               000000B0  24801          LA    1,176(0,13)
00012226 B904 00F7                         24802          LGR   15,7
0001222A                                   24803 @@gen_label2363 DS    0H
0001222A 05EF                              24804          BALR  14,15
0001222C                                   24805 @@gen_label2364 DS    0H
0001222C E3F3 4000 0004          00000000  24806          LG    15,0(3,4)   ; __stderrp
00012232 E3F0 D0B0 0024          000000B0  24807          STG   15,176(0,13)
00012238 41F0 5AE6               00000AE6  24808          LA    15,2790(0,5)
0001223C E3F0 D0B8 0024          000000B8  24809          STG   15,184(0,13)
00012242 4110 D0B0               000000B0  24810          LA    1,176(0,13)
00012246 B904 00F7                         24811          LGR   15,7
0001224A                                   24812 @@gen_label2365 DS    0H
0001224A 05EF                              24813          BALR  14,15
0001224C                                   24814 @@gen_label2366 DS    0H
0001224C E3F0 C112 0016          00012164  24815          LLGF  15,@lit_1924_1843 ; rd_unittest_assert_on_failure
00012252 41FF 4000               00000000  24816          LA    15,0(15,4)
00012256 9500 F000      00000000 00000000  24817          CLI   0(15),0
0001225A 4780 C244               00012296  24818          BE    @L2142
0001225E A72F 0007               00000007  24819          CGHI  2,7
00012262 4780 C244               00012296  24820          BE    @L2142
00012266                                   24821 @L2143   DS    0H
00012266 41F0 629A               0000029A  24822          LA    15,666(0,6)
0001226A E3F0 D0B0 0024          000000B0  24823          STG   15,176(0,13)
00012270 41F0 52CE               000002CE  24824          LA    15,718(0,5)
00012274 E3F0 D0B8 0024          000000B8  24825          STG   15,184(0,13)
0001227A E548 D0C0 06B9          000000C0  24826          MVGHI 192(13),1721
00012280 41F0 5BE8               00000BE8  24827          LA    15,3048(0,5)
00012284 E3F0 D0C8 0024          000000C8  24828          STG   15,200(0,13)
0001228A 4110 D0B0               000000B0  24829          LA    1,176(0,13)
0001228E E3F0 C116 0004          00012168  24830          LG    15,@lit_1924_1844 ; __assert
00012294                                   24831 @@gen_label2369 DS    0H
00012294 05EF                              24832          BALR  14,15
00012296                                   24833 @@gen_label2370 DS    0H
00012296                                   24834 @L2144   DS    0H
00012296                                   24835 @L2142   DS    0H
00012296 A7F9 0001               00000001  24836          LGHI  15,1        ; 1
0001229A 47F0 C76C               000127BE  24837          B     @ret_lab_1924
0001229E                                   24838 @L2141   DS    0H
                                                                                                                           Page  492 
  Active Usings: @REGION_1924_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           24839 * ***
                                           24840 * ***
                                           24841 * ***
                                           24842 * ***           rd_kafka_aborted_txns_pop_offset(aborted_txns, 2, 0x7f\
                                           24843 * ffffffffffffffLL);
0001229E E330 D0B0 0024          000000B0  24844          STG   3,176(0,13)
000122A4 E548 D0B8 0002          000000B8  24845          MVGHI 184(13),2
000122AA E3F0 C12E 0004          00012180  24846          LG    15,@lit_1924_1859 ; 9223372036854775807
000122B0 E3F0 D0C0 0024          000000C0  24847          STG   15,192(0,13)
000122B6 4110 D0B0               000000B0  24848          LA    1,176(0,13)
000122BA E3F0 C126 0004          00012178  24849          LG    15,@lit_1924_1860 ; rd_kafka_aborted_txns_pop_offset
000122C0                                   24850 @@gen_label2371 DS    0H
000122C0 05EF                              24851          BALR  14,15
000122C2                                   24852 @@gen_label2372 DS    0H
                                           24853 * ***
                                           24854 * ***           start_offset = rd_kafka_aborted_txns_get_offset(
                                           24855 * ***                   aborted_txns, 2);
000122C2 E330 D0B0 0024          000000B0  24856          STG   3,176(0,13)
000122C8 E548 D0B8 0002          000000B8  24857          MVGHI 184(13),2
000122CE 4110 D0B0               000000B0  24858          LA    1,176(0,13)
000122D2 E3F0 C11E 0004          00012170  24859          LG    15,@lit_1924_1846 ; rd_kafka_aborted_txns_get_offset
000122D8                                   24860 @@gen_label2373 DS    0H
000122D8 05EF                              24861          BALR  14,15
000122DA                                   24862 @@gen_label2374 DS    0H
000122DA B904 002F                         24863          LGR   2,15        ; start_offset
                                           24864 * ***           do { if (!(11 == start_offset)) { fprintf(__stderrp, "\
                                           24865 * \033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "11 == start_offs\
                                           24866 * et" ": ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c", \
                                           24867 * 1729, __FUNCTION__); fprintf(__stderrp, "queried start offset was %"\
                                           24868 *  "lld" ", " "expected 11", start_offset); fprintf(__stderrp, "\033[0\
                                           24869 * m\n"); if (rd_unittest_assert_on_failure) ((11 == start_offset) ? (v\
                                           24870 * oid)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_m\
                                           24871 * sgset_reader.c", 1729, "11 == start_offset")); return 1; } } while (\
                                           24872 * 0);
000122DE                                   24873 @L2145   DS    0H
000122DE A72F 000B               0000000B  24874          CGHI  2,11
000122E2 4780 C37E               000123D0  24875          BE    @L2148
000122E6 E330 C10E 0016          00012160  24876          LLGF  3,@lit_1924_1835 ; __stderrp
000122EC E3F3 4000 0004          00000000  24877          LG    15,0(3,4)   ; __stderrp
000122F2 E3F0 D0B0 0024          000000B0  24878          STG   15,176(0,13)
000122F8 E350 C106 0004          00012158  24879          LG    5,@lit_1924_1836
000122FE 41F0 5CFA               00000CFA  24880          LA    15,3322(0,5)
00012302 E3F0 D0B8 0024          000000B8  24881          STG   15,184(0,13)
00012308 41F0 52CE               000002CE  24882          LA    15,718(0,5)
0001230C E3F0 D0C0 0024          000000C0  24883          STG   15,192(0,13)
00012312 E548 D0C8 06C1          000000C8  24884          MVGHI 200(13),1729
00012318 E360 C0FE 0004          00012150  24885          LG    6,@lit_1924_1837
0001231E 41F0 629A               0000029A  24886          LA    15,666(0,6)
00012322 E3F0 D0D0 0024          000000D0  24887          STG   15,208(0,13)
00012328 4110 D0B0               000000B0  24888          LA    1,176(0,13)
0001232C E370 C0F6 0004          00012148  24889          LG    7,@lit_1924_1838 ; fprintf
00012332 B904 00F7                         24890          LGR   15,7
                                                                                                                           Page  493 
  Active Usings: @REGION_1924_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00012336                                   24891 @@gen_label2376 DS    0H
00012336 05EF                              24892          BALR  14,15
00012338                                   24893 @@gen_label2377 DS    0H
00012338 E3F3 4000 0004          00000000  24894          LG    15,0(3,4)   ; __stderrp
0001233E E3F0 D0B0 0024          000000B0  24895          STG   15,176(0,13)
00012344 41F0 5D3A               00000D3A  24896          LA    15,3386(0,5)
00012348 E3F0 D0B8 0024          000000B8  24897          STG   15,184(0,13)
0001234E E320 D0C0 0024          000000C0  24898          STG   2,192(0,13)
00012354 4110 D0B0               000000B0  24899          LA    1,176(0,13)
00012358 B904 00F7                         24900          LGR   15,7
0001235C                                   24901 @@gen_label2378 DS    0H
0001235C 05EF                              24902          BALR  14,15
0001235E                                   24903 @@gen_label2379 DS    0H
0001235E E3F3 4000 0004          00000000  24904          LG    15,0(3,4)   ; __stderrp
00012364 E3F0 D0B0 0024          000000B0  24905          STG   15,176(0,13)
0001236A 41F0 5AE6               00000AE6  24906          LA    15,2790(0,5)
0001236E E3F0 D0B8 0024          000000B8  24907          STG   15,184(0,13)
00012374 4110 D0B0               000000B0  24908          LA    1,176(0,13)
00012378 B904 00F7                         24909          LGR   15,7
0001237C                                   24910 @@gen_label2380 DS    0H
0001237C 05EF                              24911          BALR  14,15
0001237E                                   24912 @@gen_label2381 DS    0H
0001237E E3F0 C112 0016          00012164  24913          LLGF  15,@lit_1924_1843 ; rd_unittest_assert_on_failure
00012384 41FF 4000               00000000  24914          LA    15,0(15,4)
00012388 9500 F000      00000000 00000000  24915          CLI   0(15),0
0001238C 4780 C376               000123C8  24916          BE    @L2149
00012390 A72F 000B               0000000B  24917          CGHI  2,11
00012394 4780 C376               000123C8  24918          BE    @L2149
00012398                                   24919 @L2150   DS    0H
00012398 41F0 629A               0000029A  24920          LA    15,666(0,6)
0001239C E3F0 D0B0 0024          000000B0  24921          STG   15,176(0,13)
000123A2 41F0 52CE               000002CE  24922          LA    15,718(0,5)
000123A6 E3F0 D0B8 0024          000000B8  24923          STG   15,184(0,13)
000123AC E548 D0C0 06C1          000000C0  24924          MVGHI 192(13),1729
000123B2 41F0 5D66               00000D66  24925          LA    15,3430(0,5)
000123B6 E3F0 D0C8 0024          000000C8  24926          STG   15,200(0,13)
000123BC 4110 D0B0               000000B0  24927          LA    1,176(0,13)
000123C0 E3F0 C116 0004          00012168  24928          LG    15,@lit_1924_1844 ; __assert
000123C6                                   24929 @@gen_label2384 DS    0H
000123C6 05EF                              24930          BALR  14,15
000123C8                                   24931 @@gen_label2385 DS    0H
000123C8                                   24932 @L2151   DS    0H
000123C8                                   24933 @L2149   DS    0H
000123C8 A7F9 0001               00000001  24934          LGHI  15,1        ; 1
000123CC 47F0 C76C               000127BE  24935          B     @ret_lab_1924
000123D0                                   24936 @L2148   DS    0H
                                           24937 * ***
                                           24938 * ***
                                           24939 * ***
                                           24940 * ***
                                           24941 * ***           start_offset = rd_kafka_aborted_txns_get_offset(
                                           24942 * ***                   aborted_txns, 3);
                                                                                                                           Page  494 
  Active Usings: @REGION_1924_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000123D0 E330 D0B0 0024          000000B0  24943          STG   3,176(0,13)
000123D6 E548 D0B8 0003          000000B8  24944          MVGHI 184(13),3
000123DC 4110 D0B0               000000B0  24945          LA    1,176(0,13)
000123E0 E3F0 C11E 0004          00012170  24946          LG    15,@lit_1924_1846 ; rd_kafka_aborted_txns_get_offset
000123E6                                   24947 @@gen_label2386 DS    0H
000123E6 05EF                              24948          BALR  14,15
000123E8                                   24949 @@gen_label2387 DS    0H
000123E8 B904 002F                         24950          LGR   2,15        ; start_offset
                                           24951 * ***           do { if (!(-1 == start_offset)) { fprintf(__stderrp, "\
                                           24952 * \033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "-1 == start_offs\
                                           24953 * et" ": ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c", \
                                           24954 * 1736, __FUNCTION__); fprintf(__stderrp, "queried start offset was %"\
                                           24955 *  "lld" ", " "expected -1", start_offset); fprintf(__stderrp, "\033[0\
                                           24956 * m\n"); if (rd_unittest_assert_on_failure) ((-1 == start_offset) ? (v\
                                           24957 * oid)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_m\
                                           24958 * sgset_reader.c", 1736, "-1 == start_offset")); return 1; } } while (\
                                           24959 * 0);
000123EC                                   24960 @L2152   DS    0H
000123EC A72F FFFF               0000FFFF  24961          CGHI  2,-1
000123F0 4780 C48C               000124DE  24962          BE    @L2155
000123F4 E330 C10E 0016          00012160  24963          LLGF  3,@lit_1924_1835 ; __stderrp
000123FA E3F3 4000 0004          00000000  24964          LG    15,0(3,4)   ; __stderrp
00012400 E3F0 D0B0 0024          000000B0  24965          STG   15,176(0,13)
00012406 E350 C106 0004          00012158  24966          LG    5,@lit_1924_1836
0001240C 41F0 5D7A               00000D7A  24967          LA    15,3450(0,5)
00012410 E3F0 D0B8 0024          000000B8  24968          STG   15,184(0,13)
00012416 41F0 52CE               000002CE  24969          LA    15,718(0,5)
0001241A E3F0 D0C0 0024          000000C0  24970          STG   15,192(0,13)
00012420 E548 D0C8 06C8          000000C8  24971          MVGHI 200(13),1736
00012426 E360 C0FE 0004          00012150  24972          LG    6,@lit_1924_1837
0001242C 41F0 629A               0000029A  24973          LA    15,666(0,6)
00012430 E3F0 D0D0 0024          000000D0  24974          STG   15,208(0,13)
00012436 4110 D0B0               000000B0  24975          LA    1,176(0,13)
0001243A E370 C0F6 0004          00012148  24976          LG    7,@lit_1924_1838 ; fprintf
00012440 B904 00F7                         24977          LGR   15,7
00012444                                   24978 @@gen_label2389 DS    0H
00012444 05EF                              24979          BALR  14,15
00012446                                   24980 @@gen_label2390 DS    0H
00012446 E3F3 4000 0004          00000000  24981          LG    15,0(3,4)   ; __stderrp
0001244C E3F0 D0B0 0024          000000B0  24982          STG   15,176(0,13)
00012452 41F0 5DBA               00000DBA  24983          LA    15,3514(0,5)
00012456 E3F0 D0B8 0024          000000B8  24984          STG   15,184(0,13)
0001245C E320 D0C0 0024          000000C0  24985          STG   2,192(0,13)
00012462 4110 D0B0               000000B0  24986          LA    1,176(0,13)
00012466 B904 00F7                         24987          LGR   15,7
0001246A                                   24988 @@gen_label2391 DS    0H
0001246A 05EF                              24989          BALR  14,15
0001246C                                   24990 @@gen_label2392 DS    0H
0001246C E3F3 4000 0004          00000000  24991          LG    15,0(3,4)   ; __stderrp
00012472 E3F0 D0B0 0024          000000B0  24992          STG   15,176(0,13)
00012478 41F0 5AE6               00000AE6  24993          LA    15,2790(0,5)
0001247C E3F0 D0B8 0024          000000B8  24994          STG   15,184(0,13)
                                                                                                                           Page  495 
  Active Usings: @REGION_1924_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00012482 4110 D0B0               000000B0  24995          LA    1,176(0,13)
00012486 B904 00F7                         24996          LGR   15,7
0001248A                                   24997 @@gen_label2393 DS    0H
0001248A 05EF                              24998          BALR  14,15
0001248C                                   24999 @@gen_label2394 DS    0H
0001248C E3F0 C112 0016          00012164  25000          LLGF  15,@lit_1924_1843 ; rd_unittest_assert_on_failure
00012492 41FF 4000               00000000  25001          LA    15,0(15,4)
00012496 9500 F000      00000000 00000000  25002          CLI   0(15),0
0001249A 4780 C484               000124D6  25003          BE    @L2156
0001249E A72F FFFF               0000FFFF  25004          CGHI  2,-1
000124A2 4780 C484               000124D6  25005          BE    @L2156
000124A6                                   25006 @L2157   DS    0H
000124A6 41F0 629A               0000029A  25007          LA    15,666(0,6)
000124AA E3F0 D0B0 0024          000000B0  25008          STG   15,176(0,13)
000124B0 41F0 52CE               000002CE  25009          LA    15,718(0,5)
000124B4 E3F0 D0B8 0024          000000B8  25010          STG   15,184(0,13)
000124BA E548 D0C0 06C8          000000C0  25011          MVGHI 192(13),1736
000124C0 41F0 5DE6               00000DE6  25012          LA    15,3558(0,5)
000124C4 E3F0 D0C8 0024          000000C8  25013          STG   15,200(0,13)
000124CA 4110 D0B0               000000B0  25014          LA    1,176(0,13)
000124CE E3F0 C116 0004          00012168  25015          LG    15,@lit_1924_1844 ; __assert
000124D4                                   25016 @@gen_label2397 DS    0H
000124D4 05EF                              25017          BALR  14,15
000124D6                                   25018 @@gen_label2398 DS    0H
000124D6                                   25019 @L2158   DS    0H
000124D6                                   25020 @L2156   DS    0H
000124D6 A7F9 0001               00000001  25021          LGHI  15,1        ; 1
000124DA 47F0 C76C               000127BE  25022          B     @ret_lab_1924
000124DE                                   25023 @L2155   DS    0H
                                           25024 * ***
                                           25025 * ***
                                           25026 * ***
                                           25027 * ***           rd_kafka_aborted_txns_pop_offset(aborted_txns, 1, 0x7f\
                                           25028 * ffffffffffffffLL);
000124DE E330 D0B0 0024          000000B0  25029          STG   3,176(0,13)
000124E4 E548 D0B8 0001          000000B8  25030          MVGHI 184(13),1
000124EA E320 C12E 0004          00012180  25031          LG    2,@lit_1924_1859 ; 9223372036854775807
000124F0 E320 D0C0 0024          000000C0  25032          STG   2,192(0,13)
000124F6 4110 D0B0               000000B0  25033          LA    1,176(0,13)
000124FA E350 C126 0004          00012178  25034          LG    5,@lit_1924_1860 ; rd_kafka_aborted_txns_pop_offset
00012500 B904 00F5                         25035          LGR   15,5
00012504                                   25036 @@gen_label2399 DS    0H
00012504 05EF                              25037          BALR  14,15
00012506                                   25038 @@gen_label2400 DS    0H
                                           25039 * ***           rd_kafka_aborted_txns_pop_offset(aborted_txns, 1, 0x7f\
                                           25040 * ffffffffffffffLL);
00012506 E330 D0B0 0024          000000B0  25041          STG   3,176(0,13)
0001250C E548 D0B8 0001          000000B8  25042          MVGHI 184(13),1
00012512 E320 D0C0 0024          000000C0  25043          STG   2,192(0,13)
00012518 4110 D0B0               000000B0  25044          LA    1,176(0,13)
0001251C B904 00F5                         25045          LGR   15,5
00012520                                   25046 @@gen_label2401 DS    0H
                                                                                                                           Page  496 
  Active Usings: @REGION_1924_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00012520 05EF                              25047          BALR  14,15
00012522                                   25048 @@gen_label2402 DS    0H
                                           25049 * ***           rd_kafka_aborted_txns_pop_offset(aborted_txns, 2, 0x7f\
                                           25050 * ffffffffffffffLL);
00012522 E330 D0B0 0024          000000B0  25051          STG   3,176(0,13)
00012528 E548 D0B8 0002          000000B8  25052          MVGHI 184(13),2
0001252E E320 D0C0 0024          000000C0  25053          STG   2,192(0,13)
00012534 4110 D0B0               000000B0  25054          LA    1,176(0,13)
00012538 B904 00F5                         25055          LGR   15,5
0001253C                                   25056 @@gen_label2403 DS    0H
0001253C 05EF                              25057          BALR  14,15
0001253E                                   25058 @@gen_label2404 DS    0H
                                           25059 * ***
                                           25060 * ***           start_offset = rd_kafka_aborted_txns_get_offset(
                                           25061 * ***                   aborted_txns, 1);
0001253E E330 D0B0 0024          000000B0  25062          STG   3,176(0,13)
00012544 E548 D0B8 0001          000000B8  25063          MVGHI 184(13),1
0001254A 4110 D0B0               000000B0  25064          LA    1,176(0,13)
0001254E E3F0 C11E 0004          00012170  25065          LG    15,@lit_1924_1846 ; rd_kafka_aborted_txns_get_offset
00012554                                   25066 @@gen_label2405 DS    0H
00012554 05EF                              25067          BALR  14,15
00012556                                   25068 @@gen_label2406 DS    0H
00012556 B904 002F                         25069          LGR   2,15        ; start_offset
                                           25070 * ***           do { if (!(-1 == start_offset)) { fprintf(__stderrp, "\
                                           25071 * \033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "-1 == start_offs\
                                           25072 * et" ": ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c", \
                                           25073 * 1746, __FUNCTION__); fprintf(__stderrp, "queried start offset was %"\
                                           25074 *  "lld" ", " "expected -1", start_offset); fprintf(__stderrp, "\033[0\
                                           25075 * m\n"); if (rd_unittest_assert_on_failure) ((-1 == start_offset) ? (v\
                                           25076 * oid)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_m\
                                           25077 * sgset_reader.c", 1746, "-1 == start_offset")); return 1; } } while (\
                                           25078 * 0);
0001255A                                   25079 @L2159   DS    0H
0001255A A72F FFFF               0000FFFF  25080          CGHI  2,-1
0001255E 4780 C5FA               0001264C  25081          BE    @L2162
00012562 E330 C10E 0016          00012160  25082          LLGF  3,@lit_1924_1835 ; __stderrp
00012568 E3F3 4000 0004          00000000  25083          LG    15,0(3,4)   ; __stderrp
0001256E E3F0 D0B0 0024          000000B0  25084          STG   15,176(0,13)
00012574 E350 C106 0004          00012158  25085          LG    5,@lit_1924_1836
0001257A 41F0 5D7A               00000D7A  25086          LA    15,3450(0,5)
0001257E E3F0 D0B8 0024          000000B8  25087          STG   15,184(0,13)
00012584 41F0 52CE               000002CE  25088          LA    15,718(0,5)
00012588 E3F0 D0C0 0024          000000C0  25089          STG   15,192(0,13)
0001258E E548 D0C8 06D2          000000C8  25090          MVGHI 200(13),1746
00012594 E360 C0FE 0004          00012150  25091          LG    6,@lit_1924_1837
0001259A 41F0 629A               0000029A  25092          LA    15,666(0,6)
0001259E E3F0 D0D0 0024          000000D0  25093          STG   15,208(0,13)
000125A4 4110 D0B0               000000B0  25094          LA    1,176(0,13)
000125A8 E370 C0F6 0004          00012148  25095          LG    7,@lit_1924_1838 ; fprintf
000125AE B904 00F7                         25096          LGR   15,7
000125B2                                   25097 @@gen_label2408 DS    0H
000125B2 05EF                              25098          BALR  14,15
                                                                                                                           Page  497 
  Active Usings: @REGION_1924_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000125B4                                   25099 @@gen_label2409 DS    0H
000125B4 E3F3 4000 0004          00000000  25100          LG    15,0(3,4)   ; __stderrp
000125BA E3F0 D0B0 0024          000000B0  25101          STG   15,176(0,13)
000125C0 41F0 5DBA               00000DBA  25102          LA    15,3514(0,5)
000125C4 E3F0 D0B8 0024          000000B8  25103          STG   15,184(0,13)
000125CA E320 D0C0 0024          000000C0  25104          STG   2,192(0,13)
000125D0 4110 D0B0               000000B0  25105          LA    1,176(0,13)
000125D4 B904 00F7                         25106          LGR   15,7
000125D8                                   25107 @@gen_label2410 DS    0H
000125D8 05EF                              25108          BALR  14,15
000125DA                                   25109 @@gen_label2411 DS    0H
000125DA E3F3 4000 0004          00000000  25110          LG    15,0(3,4)   ; __stderrp
000125E0 E3F0 D0B0 0024          000000B0  25111          STG   15,176(0,13)
000125E6 41F0 5AE6               00000AE6  25112          LA    15,2790(0,5)
000125EA E3F0 D0B8 0024          000000B8  25113          STG   15,184(0,13)
000125F0 4110 D0B0               000000B0  25114          LA    1,176(0,13)
000125F4 B904 00F7                         25115          LGR   15,7
000125F8                                   25116 @@gen_label2412 DS    0H
000125F8 05EF                              25117          BALR  14,15
000125FA                                   25118 @@gen_label2413 DS    0H
000125FA E3F0 C112 0016          00012164  25119          LLGF  15,@lit_1924_1843 ; rd_unittest_assert_on_failure
00012600 41FF 4000               00000000  25120          LA    15,0(15,4)
00012604 9500 F000      00000000 00000000  25121          CLI   0(15),0
00012608 4780 C5F2               00012644  25122          BE    @L2163
0001260C A72F FFFF               0000FFFF  25123          CGHI  2,-1
00012610 4780 C5F2               00012644  25124          BE    @L2163
00012614                                   25125 @L2164   DS    0H
00012614 41F0 629A               0000029A  25126          LA    15,666(0,6)
00012618 E3F0 D0B0 0024          000000B0  25127          STG   15,176(0,13)
0001261E 41F0 52CE               000002CE  25128          LA    15,718(0,5)
00012622 E3F0 D0B8 0024          000000B8  25129          STG   15,184(0,13)
00012628 E548 D0C0 06D2          000000C0  25130          MVGHI 192(13),1746
0001262E 41F0 5DE6               00000DE6  25131          LA    15,3558(0,5)
00012632 E3F0 D0C8 0024          000000C8  25132          STG   15,200(0,13)
00012638 4110 D0B0               000000B0  25133          LA    1,176(0,13)
0001263C E3F0 C116 0004          00012168  25134          LG    15,@lit_1924_1844 ; __assert
00012642                                   25135 @@gen_label2416 DS    0H
00012642 05EF                              25136          BALR  14,15
00012644                                   25137 @@gen_label2417 DS    0H
00012644                                   25138 @L2165   DS    0H
00012644                                   25139 @L2163   DS    0H
00012644 A7F9 0001               00000001  25140          LGHI  15,1        ; 1
00012648 47F0 C76C               000127BE  25141          B     @ret_lab_1924
0001264C                                   25142 @L2162   DS    0H
                                           25143 * ***
                                           25144 * ***
                                           25145 * ***
                                           25146 * ***           start_offset = rd_kafka_aborted_txns_get_offset(
                                           25147 * ***                   aborted_txns, 2);
0001264C E330 D0B0 0024          000000B0  25148          STG   3,176(0,13)
00012652 E548 D0B8 0002          000000B8  25149          MVGHI 184(13),2
00012658 4110 D0B0               000000B0  25150          LA    1,176(0,13)
                                                                                                                           Page  498 
  Active Usings: @REGION_1924_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0001265C E3F0 C11E 0004          00012170  25151          LG    15,@lit_1924_1846 ; rd_kafka_aborted_txns_get_offset
00012662                                   25152 @@gen_label2418 DS    0H
00012662 05EF                              25153          BALR  14,15
00012664                                   25154 @@gen_label2419 DS    0H
00012664 B904 002F                         25155          LGR   2,15        ; start_offset
                                           25156 * ***           do { if (!(-1 == start_offset)) { fprintf(__stderrp, "\
                                           25157 * \033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "-1 == start_offs\
                                           25158 * et" ": ", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c", \
                                           25159 * 1752, __FUNCTION__); fprintf(__stderrp, "queried start offset was %"\
                                           25160 *  "lld" ", " "expected -1", start_offset); fprintf(__stderrp, "\033[0\
                                           25161 * m\n"); if (rd_unittest_assert_on_failure) ((-1 == start_offset) ? (v\
                                           25162 * oid)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdkafka_m\
                                           25163 * sgset_reader.c", 1752, "-1 == start_offset")); return 1; } } while (\
                                           25164 * 0);
00012668                                   25165 @L2166   DS    0H
00012668 A72F FFFF               0000FFFF  25166          CGHI  2,-1
0001266C 4780 C708               0001275A  25167          BE    @L2169
00012670 E330 C10E 0016          00012160  25168          LLGF  3,@lit_1924_1835 ; __stderrp
00012676 E3F3 4000 0004          00000000  25169          LG    15,0(3,4)   ; __stderrp
0001267C E3F0 D0B0 0024          000000B0  25170          STG   15,176(0,13)
00012682 E350 C106 0004          00012158  25171          LG    5,@lit_1924_1836
00012688 41F0 5D7A               00000D7A  25172          LA    15,3450(0,5)
0001268C E3F0 D0B8 0024          000000B8  25173          STG   15,184(0,13)
00012692 41F0 52CE               000002CE  25174          LA    15,718(0,5)
00012696 E3F0 D0C0 0024          000000C0  25175          STG   15,192(0,13)
0001269C E548 D0C8 06D8          000000C8  25176          MVGHI 200(13),1752
000126A2 E360 C0FE 0004          00012150  25177          LG    6,@lit_1924_1837
000126A8 41F0 629A               0000029A  25178          LA    15,666(0,6)
000126AC E3F0 D0D0 0024          000000D0  25179          STG   15,208(0,13)
000126B2 4110 D0B0               000000B0  25180          LA    1,176(0,13)
000126B6 E370 C0F6 0004          00012148  25181          LG    7,@lit_1924_1838 ; fprintf
000126BC B904 00F7                         25182          LGR   15,7
000126C0                                   25183 @@gen_label2421 DS    0H
000126C0 05EF                              25184          BALR  14,15
000126C2                                   25185 @@gen_label2422 DS    0H
000126C2 E3F3 4000 0004          00000000  25186          LG    15,0(3,4)   ; __stderrp
000126C8 E3F0 D0B0 0024          000000B0  25187          STG   15,176(0,13)
000126CE 41F0 5DBA               00000DBA  25188          LA    15,3514(0,5)
000126D2 E3F0 D0B8 0024          000000B8  25189          STG   15,184(0,13)
000126D8 E320 D0C0 0024          000000C0  25190          STG   2,192(0,13)
000126DE 4110 D0B0               000000B0  25191          LA    1,176(0,13)
000126E2 B904 00F7                         25192          LGR   15,7
000126E6                                   25193 @@gen_label2423 DS    0H
000126E6 05EF                              25194          BALR  14,15
000126E8                                   25195 @@gen_label2424 DS    0H
000126E8 E3F3 4000 0004          00000000  25196          LG    15,0(3,4)   ; __stderrp
000126EE E3F0 D0B0 0024          000000B0  25197          STG   15,176(0,13)
000126F4 41F0 5AE6               00000AE6  25198          LA    15,2790(0,5)
000126F8 E3F0 D0B8 0024          000000B8  25199          STG   15,184(0,13)
000126FE 4110 D0B0               000000B0  25200          LA    1,176(0,13)
00012702 B904 00F7                         25201          LGR   15,7
00012706                                   25202 @@gen_label2425 DS    0H
                                                                                                                           Page  499 
  Active Usings: @REGION_1924_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00012706 05EF                              25203          BALR  14,15
00012708                                   25204 @@gen_label2426 DS    0H
00012708 E3F0 C112 0016          00012164  25205          LLGF  15,@lit_1924_1843 ; rd_unittest_assert_on_failure
0001270E 41FF 4000               00000000  25206          LA    15,0(15,4)
00012712 9500 F000      00000000 00000000  25207          CLI   0(15),0
00012716 4780 C700               00012752  25208          BE    @L2170
0001271A A72F FFFF               0000FFFF  25209          CGHI  2,-1
0001271E 4780 C700               00012752  25210          BE    @L2170
00012722                                   25211 @L2171   DS    0H
00012722 41F0 629A               0000029A  25212          LA    15,666(0,6)
00012726 E3F0 D0B0 0024          000000B0  25213          STG   15,176(0,13)
0001272C 41F0 52CE               000002CE  25214          LA    15,718(0,5)
00012730 E3F0 D0B8 0024          000000B8  25215          STG   15,184(0,13)
00012736 E548 D0C0 06D8          000000C0  25216          MVGHI 192(13),1752
0001273C 41F0 5DE6               00000DE6  25217          LA    15,3558(0,5)
00012740 E3F0 D0C8 0024          000000C8  25218          STG   15,200(0,13)
00012746 4110 D0B0               000000B0  25219          LA    1,176(0,13)
0001274A E3F0 C116 0004          00012168  25220          LG    15,@lit_1924_1844 ; __assert
00012750                                   25221 @@gen_label2429 DS    0H
00012750 05EF                              25222          BALR  14,15
00012752                                   25223 @@gen_label2430 DS    0H
00012752                                   25224 @L2172   DS    0H
00012752                                   25225 @L2170   DS    0H
00012752 A7F9 0001               00000001  25226          LGHI  15,1        ; 1
00012756 47F0 C76C               000127BE  25227          B     @ret_lab_1924
0001275A                                   25228 @L2169   DS    0H
                                           25229 * ***
                                           25230 * ***
                                           25231 * ***
                                           25232 * ***           rd_kafka_aborted_txns_destroy(aborted_txns);
0001275A E330 D0B0 0024          000000B0  25233          STG   3,176(0,13)
00012760 4110 D0B0               000000B0  25234          LA    1,176(0,13)
00012764 E3F0 C136 0004          00012188  25235          LG    15,@lit_1924_1916 ; rd_kafka_aborted_txns_destroy
0001276A                                   25236 @@gen_label2431 DS    0H
0001276A 05EF                              25237          BALR  14,15
0001276C                                   25238 @@gen_label2432 DS    0H
                                           25239 * ***
                                           25240 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                           25241 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdkafka_msgset_reader.c"\
                                           25242 * , 1758, __FUNCTION__); return 0; } while (0);
0001276C                                   25243 @L2173   DS    0H
0001276C E3F0 C10E 0016          00012160  25244          LLGF  15,@lit_1924_1835 ; __stderrp
00012772 E3FF 4000 0004          00000000  25245          LG    15,0(15,4)  ; __stderrp
00012778 E3F0 D0B0 0024          000000B0  25246          STG   15,176(0,13)
0001277E E3F0 C106 0004          00012158  25247          LG    15,@lit_1924_1836
00012784 4110 FDFA               00000DFA  25248          LA    1,3578(0,15)
00012788 E310 D0B8 0024          000000B8  25249          STG   1,184(0,13)
0001278E 41F0 F2CE               000002CE  25250          LA    15,718(0,15)
00012792 E3F0 D0C0 0024          000000C0  25251          STG   15,192(0,13)
00012798 E548 D0C8 06DE          000000C8  25252          MVGHI 200(13),1758
0001279E E3F0 C0FE 0004          00012150  25253          LG    15,@lit_1924_1837
000127A4 41F0 F29A               0000029A  25254          LA    15,666(0,15)
                                                                                                                           Page  500 
  Active Usings: @REGION_1924_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000127A8 E3F0 D0D0 0024          000000D0  25255          STG   15,208(0,13)
000127AE 4110 D0B0               000000B0  25256          LA    1,176(0,13)
000127B2 E3F0 C0F6 0004          00012148  25257          LG    15,@lit_1924_1838 ; fprintf
000127B8                                   25258 @@gen_label2433 DS    0H
000127B8 05EF                              25259          BALR  14,15
000127BA                                   25260 @@gen_label2434 DS    0H
000127BA A7F9 0000               00000000  25261          LGHI  15,0        ; 0
                                           25262 * ***   }
000127BE                                   25263 @ret_lab_1924 DS 0H
                                           25264 * * **** Start of Epilogue
                                           25265          DCCEPIL
000127BE                                   25266+         ds 0h                                                          01-DCCEP
                                           25267+* Epilog
000127BE D707 D088 D088 00000088 00000088  25268+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000127C4 E3D0 D080 0004          00000080  25269+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000127CA E3C0 D090 0004          00000090  25270+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000127D0 E3B0 C018 0004          00000018  25271+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000127D6 E3C0 B010 0021          00000010  25272+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000127DC E3E0 D008 0004          00000008  25273+         lg  14,8(0,13)          load up return address                 01-DCCEP
000127E2 EB1C D020 0004          00000020  25274+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000127E8 078E                              25275+         bcr 8,14                if same dsab, just return              01-DCCEP
000127EA E3F0 D010 0024          00000010  25276+         stg 15,16(0,13)         save return code                       01-DCCEP
000127F0 E300 D018 0024          00000018  25277+         stg 0,24(0,13)          save more return code                  01-DCCEP
000127F6 E3F0 D090 0004          00000090  25278+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000127FC E3F0 F018 0004          00000018  25279+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00012802 47F0 F040               00000040  25280+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           25281+* End of Epilog
                                           25282 * * **** End of Epilogue
                                           25283          DROP  12
                                           25284 *
                                           25285 *   DSECT for automatic variables in "unittest_aborted_txns"
                                           25286 *      (FUNCTION #1924)
                                           25287 *
00000000                00000000 000000B0  25288 @AUTO#unittest_aborted_txns DSECT
00000000                                   25289          DS    XL168
000000A8                                   25290 unittest_aborted_txns#start_offset#0 DS 8XL1 ; start_offset
                                           25291 *
00012806                00000000 00012806  25292 @CODE    CSECT
                                           25293 @@STATIC ALIAS X'7C998492818692816D94A287A285A36D99858184859950'
                                           25294 @@STATIC DXD   219D
                                           25295 *
                                           25296 *  Non-Re-Entrant Data Section
                                           25297 *
00012808                00012808 00001604  25298 @DATA    CSECT
                                           25299 @DATA    RMODE ANY
                                           25300 @DATA    AMODE ANY
00012808 99846D8381939396                  25301 @@T349   DC    X'99846D838193939683'               rd.calloc
00012811 00                                25302          DC    1X'00'
00012812 99846D9481939396                  25303 @@T34D   DC    X'99846D948193939683'               rd.malloc
0001281B 00                                25304          DC    1X'00'
0001281C 99846D9985819393                  25305 @@T352   DC    X'99846D99858193939683'             rd.realloc
00012826 0000                              25306          DC    2X'00'
                                                                                                                           Page  501 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00012828 99846DA2A39984A4                  25307 @@T358   DC    X'99846DA2A39984A497'               rd.strdup
00012831 00                                25308          DC    1X'00'
00012832 99846DA2A3999584                  25309 @@T35D   DC    X'99846DA2A3999584A497'             rd.strndup
0001283C 0000                              25310          DC    2X'00'
0001283E 99846D9985868395                  25311 @@T365   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
0001284C 00000000                          25312          DC    4X'00'
00012850 00000000                          25313 @@T67B   DC    4X'00'
00012854 0000001A00000000                  25314          DC    X'0000001A000000000000002200000000' ................
00012864 00000024                          25315          DC    X'00000024'                         ....
00012868 99846D9281869281                  25316 @@T69E   DC    X'99846D92818692816D94A287986D8485' rd.kafka.msgq.de
00012878 98                                25317          DC    X'98'                               q
00012879 00                                25318          DC    1X'00'
0001287A 99846D9281869281                  25319 @@T725   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
0001288A 96A8F0                            25320          DC    X'96A8F0'                           oy0
0001288D 00                                25321          DC    1X'00'
0001288E 99846D9281869281                  25322 @@T7A6   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
0001289E 856D8485A2A39996                  25323          DC    X'856D8485A2A39996A8F0'             e.destroy0
000128A8 0000                              25324          DC    2X'00'
000128AA 99846D9281869281                  25325 @@T7AE   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000128BA 856D8485936DA296                  25326          DC    X'856D8485936DA296A4998385'         e.del.source
000128C6 0000                              25327          DC    2X'00'
000128C8 99846D9281869281                  25328 @@T7B5   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000128D8 856D8485936DA296                  25329          DC    X'856D8485936DA296A49983856D9985A3' e.del.source.ret
000128E8 A49995                            25330          DC    X'A49995'                           urn
000128EB 00                                25331          DC    1X'00'
000128EC 99846D9281869281                  25332 @@T7BD   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000128FC 856DA39989878785                  25333          DC    X'856DA3998987878599'               e.trigger
00012905 00                                25334          DC    1X'00'
00012906 99846D9281869281                  25335 @@T7C1   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00012916 856D8485A2A39996                  25336          DC    X'856D8485A2A39996A8'               e.destroy
0001291F 00                                25337          DC    1X'00'
00012920 99846D9281869281                  25338 @@T7C6   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00012930 856D8489A2818293                  25339          DC    X'856D8489A281829385'               e.disable
00012939 00                                25340          DC    1X'00'
0001293A 99846DA394978182                  25341 @@T7E6   DC    X'99846DA394978182A4866D8193939683' rd.tmpabuf.alloc
0001294A F0                                25342          DC    X'F0'                               0
0001294B 00                                25343          DC    1X'00'
0001294C 99846D9281869281                  25344 @@T81A   DC    X'99846D92818692816D82A4866DA49784' rd.kafka.buf.upd
0001295C 81A385                            25345          DC    X'81A385'                           ate
0001295F 00                                25346          DC    1X'00'
00012960 99846D9281869281                  25347 @@T83B   DC    X'99846D92818692816D82A4866D868995' rd.kafka.buf.fin
00012970 819389A9856D8199                  25348          DC    X'819389A9856D81999981A88395A3'     alize.arraycnt
0001297E 0000                              25349          DC    2X'00'
00012980 99846D9281869281                  25350 @@T878   DC    X'99846D92818692816D82A4866D839983' rd.kafka.buf.crc
00012990 6D899589A3                        25351          DC    X'6D899589A3'                       .init
00012995 00                                25352          DC    1X'00'
00012996 99846D9281869281                  25353 @@TA2B   DC    X'99846D92818692816D83A499996D94A2' rd.kafka.curr.ms
000129A6 87A26DA2A482                      25354          DC    X'87A26DA2A482'                     gs.sub
000129AC 0000                              25355          DC    2X'00'
000129AE 99846D9281869281                  25356 @@TA76   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
000129BE 9985818485996D89                  25357          DC    X'9985818485996D899589A3'           reader.init
000129C9 00                                25358          DC    1X'00'
                                                                                                                           Page  502 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000129CA 82E2D5C1D7D7E8                    25359 @@TA87   DC    X'82E2D5C1D7D7E8'                   bSNAPPY
000129D1 00000000000000                    25360          DC    7X'00'
000129D8 00000000                          25361 @@TA88   DC    4X'00'
000129DC 00000010                          25362          DC    X'00000010'                         ....
000129E0 99846D9281869281                  25363 @@TA90   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
000129F0 9985818485996D84                  25364          DC    X'9985818485996D8485839694979985A2' reader.decompres
00012A00 A2                                25365          DC    X'A2'                               s
00012A01 00                                25366          DC    1X'00'
00012A02 99846D9281869281                  25367 @@TAA8   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
00012A12 9985818485996D94                  25368          DC    X'9985818485996D94A2876DA5F06DF1'   reader.msg.v0.1
00012A21 00                                25369          DC    1X'00'
00012A22 99846D9281869281                  25370 @@TB02   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
00012A32 9985818485996D94                  25371          DC    X'9985818485996D94A2876DA5F2'       reader.msg.v2
00012A3F 00                                25372          DC    1X'00'
00012A40 99846D9281869281                  25373 @@TB68   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
00012A50 9985818485996D94                  25374          DC    X'9985818485996D94A287A26DA5F2'     reader.msgs.v2
00012A5E 0000                              25375          DC    2X'00'
00012A60 99846D9281869281                  25376 @@TB7C   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
00012A70 9985818485996DA5                  25377          DC    X'9985818485996DA5F2'               reader.v2
00012A79 00                                25378          DC    1X'00'
00012A7A 99846D9281869281                  25379 @@TBED   DC    X'99846D92818692816D94A287A285A36D' rd.kafka.msgset.
00012A8A 9985818485996D97                  25380          DC    X'9985818485996D978585926D94A2876D' reader.peek.msg.
00012A9A A58599A2899695                    25381          DC    X'A58599A2899695'                   version
00012AA1 00                                25382          DC    1X'00'
00012AA2 A49589A3A385A2A3                  25383 @@TC47   DC    X'A49589A3A385A2A36D81829699A38584' unittest.aborted
00012AB2 6DA3A795A2                        25384          DC    X'6DA3A795A2'                       .txns
00012AB7 00                                25385          DC    1X'00'
00012AB8                                   25386 @strings@ DS   0H
00012AB8 C37AE081A2879281                  25387          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
00012AC8 849281869281E0A2                  25388          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
00012AD8 97009985868395A3                  25389          DC    X'97009985868395A340A2A48260A98599' p.refcnt.sub.zer
00012AE8 96005A5C7F998586                  25390          DC    X'96005A5C7F9985868395A340A2A48260' o....refcnt.sub.
00012AF8 A98599967F00E495                  25391          DC    X'A98599967F00E495929596A695606C88' zero..Unknown..h
00012B08 846F0000C37AE081                  25392          DC    X'846F0000C37AE081A2879281869281E0' d...C..asgkafka.
00012B18 9389829984928186                  25393          DC    X'93898299849281869281E0A29983E099' librdkafka.src.r
00012B28 8492818692816D98                  25394          DC    X'8492818692816D98A485A4854B880000' dkafka.queue.h..
00012B38 81A2A28599A37A40                  25395          DC    X'81A2A28599A37A40999298606E999298' assert..rkq..rkq
00012B48 6D9985868395A340                  25396          DC    X'6D9985868395A3406E40F00083968485' .refcnt...0.code
00012B58 83F0A76CA76F0000                  25397          DC    X'83F0A76CA76F00000000A399A4958381' c0x.x.....trunca
00012B68 A38584409985A297                  25398          DC    X'A38584409985A2979695A28540869996' ted.response.fro
00012B78 9440829996928599                  25399          DC    X'9440829996928599404D96925D00E2D5' m.broker..ok..SN
00012B88 C1D7D7E800006CA2                  25400          DC    X'C1D7D7E800006CA240AD6C84BD7A40E2' APPY...s...d...S
00012B98 95819797A8408485                  25401          DC    X'95819797A8408485839694979985A2A2' nappy.decompress
00012BA8 8996954086969940                  25402          DC    X'89969540869699409485A2A281878540' ion.for.message.
00012BB8 81A340968686A285                  25403          DC    X'81A340968686A285A3406C9393844086' at.offset..lld.f
00012BC8 81899385847A406C                  25404          DC    X'81899385847A406CA27A408987959699' ailed...s..ignor
00012BD8 899587409485A2A2                  25405          DC    X'899587409485A2A281878500C6818993' ing.message.Fail
00012BE8 858440A396408785                  25406          DC    X'858440A396408785A34093859587A388' ed.to.get.length
00012BF8 40968640E2958197                  25407          DC    X'40968640E295819797A8408396949799' .of.Snappy.compr
00012C08 85A2A28584409781                  25408          DC    X'85A2A28584409781A893968184408696' essed.payload.fo
00012C18 99409485A2A28187                  25409          DC    X'99409485A2A28187854081A340968686' r.message.at.off
00012C28 A285A3406C939384                  25410          DC    X'A285A3406C939384404D6CA9A44082A8' set..lld...zu.by
                                                                                                                           Page  503 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00012C38 A385A25D7A408987                  25411          DC    X'A385A25D7A4089879596998995874094' tes...ignoring.m
00012C48 85A2A28187850000                  25412          DC    X'85A2A28187850000C6818993858440A3' essage..Failed.t
00012C58 9640819393968381                  25413          DC    X'9640819393968381A38540E295819797' o.allocate.Snapp
00012C68 A840848583969497                  25414          DC    X'A8408485839694979985A2A24082A486' y.decompress.buf
00012C78 86859940968640A2                  25415          DC    X'86859940968640A289A985406CA9A486' fer.of.size..zuf
00012C88 9699409485A2A281                  25416          DC    X'9699409485A2A28187854081A3409686' or.message.at.of
00012C98 86A285A3406C9393                  25417          DC    X'86A285A3406C939384404D6CA9A44082' fset..lld...zu.b
00012CA8 A8A385A25D7A406C                  25418          DC    X'A8A385A25D7A406CA27A408987959699' ytes....s..ignor
00012CB8 899587409485A2A2                  25419          DC    X'899587409485A2A281878500C6818993' ing.message.Fail
00012CC8 858440A396408485                  25420          DC    X'858440A396408485839694979985A2A2' ed.to.decompress
00012CD8 40E295819797A840                  25421          DC    X'40E295819797A8409781A89396818440' .Snappy.payload.
00012CE8 869699409485A2A2                  25422          DC    X'869699409485A2A28187854081A34096' for.message.at.o
00012CF8 8686A285A3406C93                  25423          DC    X'8686A285A3406C939384404D6CA9A440' ffset..lld...zu.
00012D08 82A8A385A25D7A40                  25424          DC    X'82A8A385A25D7A406CA27A4089879596' bytes....s..igno
00012D18 99899587409485A2                  25425          DC    X'99899587409485A2A28187850000C3D6' ring.message..CO
00012D28 C4C5C3006CA240AD                  25426          DC    X'C4C5C3006CA240AD6C84BD7A40D485A2' DEC..s...d...Mes
00012D38 A28187854081A340                  25427          DC    X'A28187854081A340968686A285A3406C' sage.at.offset..
00012D48 93938440A689A388                  25428          DC    X'93938440A689A38840A495A2A4979796' lld.with.unsuppo
00012D58 99A3858440839694                  25429          DC    X'99A3858440839694979985A2A2899695' rted.compression
00012D68 40839684858340F0                  25430          DC    X'40839684858340F0A76CA77A409485A2' .codec.0x.x..mes
00012D78 A281878540898795                  25431          DC    X'A281878540898795969985840000C37A' sage.ignored..C.
00012D88 E081A28792818692                  25432          DC    X'E081A2879281869281E0938982998492' .asgkafka.librdk
00012D98 81869281E0A29983                  25433          DC    X'81869281E0A29983E099849281869281' afka.src.rdkafka
00012DA8 6D94A287A285A36D                  25434          DC    X'6D94A287A285A36D9985818485994B83' .msgset.reader.c
00012DB8 00008996A54B8996                  25435          DC    X'00008996A54B8996A56D8281A2850000' ..iov.iov.base..
00012DC8 839694979985A2A2                  25436          DC    X'839694979985A2A285844000C4858396' compressed..Deco
00012DD8 94979985A2A28996                  25437          DC    X'94979985A2A2899695404D8396848583' mpression..codec
00012DE8 40F0A76CA75D4096                  25438          DC    X'40F0A76CA75D409686409485A2A28187' .0x.x..of.messag
00012DF8 854081A3406C9393                  25439          DC    X'854081A3406C9393A4409686406CA9A4' e.at..llu.of..zu
00012E08 4082A8A385A24086                  25440          DC    X'4082A8A385A2408681899385847A406C' .bytes.failed...
00012E18 A20081A2A28599A3                  25441          DC    X'A20081A2A28599A37A40999282A48660' s.assert..rkbuf.
00012E28 6E999282A4866D99                  25442          DC    X'6E999282A4866D99928200007A400000' .rkbuf.rkb......
00012E38 8995839699998583                  25443          DC    X'8995839699998583A340829996928599' incorrect.broker
00012E48 4BA58599A2899695                  25444          DC    X'4BA58599A28996954B86819393828183' .version.fallbac
00012E58 926F0000D7D9D6E3                  25445          DC    X'926F0000D7D9D6E3D6E4C6D3D6E60000' k...PROTOUFLOW..
00012E68 D79996A396839693                  25446          DC    X'D79996A39683969340998581844082A4' Protocol.read.bu
00012E78 8686859940A49584                  25447          DC    X'8686859940A495848599869396A64086' ffer.underflow.f
00012E88 9699406CA240A56C                  25448          DC    X'9699406CA240A56C88844081A3406CA9' or..s.v.hd.at..z
00012E98 A4616CA9A4404D6C                  25449          DC    X'A4616CA9A4404D6CA27A6C895D7A4085' u..zu...s..i...e
00012EA8 A7978583A3858440                  25450          DC    X'A7978583A38584406CA9A44082A8A385' xpected..zu.byte
00012EB8 A2406E406CA9A440                  25451          DC    X'A2406E406CA9A4409985948189958995' s....zu.remainin
00012EC8 874082A8A385A240                  25452          DC    X'874082A8A385A2404D6CA25D6CA20000' g.bytes...s..s..
00012ED8 99859381A389A585                  25453          DC    X'99859381A389A58540004D869385A75D' relative...flex.
00012EE8 0000D7D9D6E3D6C5                  25454          DC    X'0000D7D9D6E3D6C5D9D90000D79996A3' ..PROTOERR..Prot
00012EF8 9683969340978199                  25455          DC    X'9683969340978199A2854086818993A4' ocol.parse.failu
00012F08 998540869699406C                  25456          DC    X'998540869699406CA240A56C88846CA2' re.for..s.v.hd.s
00012F18 4081A3406CA9A461                  25457          DC    X'4081A3406CA9A4616CA9A4404D6CA27A' .at..zu..zu...s.
00012F28 6C895D404D899583                  25458          DC    X'6C895D404D8995839699998583A34082' .i...incorrect.b
00012F38 99969285994BA585                  25459          DC    X'99969285994BA58599A28996954B8681' roker.version.fa
00012F48 9393828183926F5D                  25460          DC    X'9393828183926F5D0000D485A2A28187' llback....Messag
00012F58 854081A3406CA296                  25461          DC    X'854081A3406CA2968686A285A3406C93' e.at..soffset..l
00012F68 938440D485A2A281                  25462          DC    X'938440D485A2A2818785E289A985406C' ld.MessageSize..
                                                                                                                           Page  504 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00012F78 84404C40888499A2                  25463          DC    X'84404C40888499A289A985406CA9A400' d...hdrsize..zu.
00012F88 D485A2A281878540                  25464          DC    X'D485A2A28187854081A3406CA2968686' Message.at..soff
00012F98 A285A3406C939384                  25465          DC    X'A285A3406C939384404D6C844082A8A3' set..lld...d.byt
00012FA8 85A25D4086818993                  25466          DC    X'85A25D4086818993858440C3D9C3F3F2' es..failed.CRC32
00012FB8 408388858392404D                  25467          DC    X'408388858392404D9699898789958193' .check..original
00012FC8 40F0A76CA7405A7E                  25468          DC    X'40F0A76CA7405A7E4083819383A49381' .0x.x....calcula
00012FD8 A3858440F0A76CA7                  25469          DC    X'A3858440F0A76CA75D007A40A5819989' ted.0x.x....vari
00012FE8 95A340978199A289                  25470          DC    X'95A340978199A2899587408681899385' nt.parsing.faile
00012FF8 8400D4E2C7006CA2                  25471          DC    X'8400D4E2C7006CA240AD6C84BD7A40E2' d.MSG..s...d...S
00013008 92899740968686A2                  25472          DC    X'92899740968686A285A3406C93938440' kip.offset..lld.
00013018 4C408685A383886D                  25473          DC    X'4C408685A383886D968686A285A3406C' ..fetch.offset..
00013028 939384006CA240AD                  25474          DC    X'939384006CA240AD6C84BD7A40C3A399' lld..s...d...Ctr
00013038 93409485A2A28187                  25475          DC    X'93409485A2A28187854081A340968686' l.message.at.off
00013048 A285A3406C939384                  25476          DC    X'A285A3406C939384408881A2408995A5' set..lld.has.inv
00013058 81938984409285A8                  25477          DC    X'81938984409285A840A289A985406C93' alid.key.size..l
00013068 938400006CA240AD                  25478          DC    X'938400006CA240AD6C84BD7A40E29289' ld...s...d...Ski
00013078 97978995874083A3                  25479          DC    X'97978995874083A399934094A28740A6' pping.ctrl.msg.w
00013088 89A38840A495A2A4                  25480          DC    X'89A38840A495A2A497979699A3858440' ith.unsupported.
00013098 A58599A289969540                  25481          DC    X'A58599A2899695406C844081A3409686' version..d.at.of
000130A8 86A285A3406C9393                  25482          DC    X'86A285A3406C93938400E3E7D5006CA2' fset..lld.TXN..s
000130B8 40AD6C84BD409985                  25483          DC    X'40AD6C84BD409985838589A585844081' ...d..received.a
000130C8 829699A340A3A795                  25484          DC    X'829699A340A3A7954083A399934094A2' bort.txn.ctrl.ms
000130D8 874081A340968686                  25485          DC    X'874081A340968686A285A3406C939384' g.at.offset..lld
000130E8 4086969940D7C9C4                  25486          DC    X'4086969940D7C9C4406C9393846B4082' .for.PID..lld..b
000130F8 A4A340A388859985                  25487          DC    X'A4A340A3888599854081998540959640' ut.there.are.no.
00013108 929596A695408182                  25488          DC    X'929596A6954081829699A3858440A399' known.aborted.tr
00013118 8195A28183A38996                  25489          DC    X'8195A28183A3899695A27A4089879596' ansactions..igno
00013128 9989958700006CA2                  25490          DC    X'9989958700006CA240AD6C84BD409985' ring...s...d..re
00013138 838589A585844081                  25491          DC    X'838589A585844081829699A340A3A795' ceived.abort.txn
00013148 4083A399934094A2                  25492          DC    X'4083A399934094A2874081A340968686' .ctrl.msg.at.off
00013158 A285A3406C939384                  25493          DC    X'A285A3406C9393844086969940D7C9C4' set..lld.for.PID
00013168 406C9393846B4082                  25494          DC    X'406C9393846B4082A4A340A38889A240' ..lld..but.this.
00013178 968686A285A34089                  25495          DC    X'968686A285A34089A2409596A3409389' offset.is.not.li
00013188 A2A385844081A240                  25496          DC    X'A2A385844081A24081954081829699A3' sted.as.an.abort
00013198 858440A3998195A2                  25497          DC    X'858440A3998195A28183A38996957A40' ed.transaction..
000131A8 81829699A3858440                  25498          DC    X'81829699A3858440A3998195A28183A3' aborted.transact
000131B8 89969540A681A240                  25499          DC    X'89969540A681A2409796A2A2898293A8' ion.was.possibly
000131C8 40859497A3A87A40                  25500          DC    X'40859497A3A87A408987959699899587' .empty..ignoring
000131D8 0000E3E7D56CA240                  25501          DC    X'0000E3E7D56CA240AD6C84BD7A40E495' ..TXN.s...d...Un
000131E8 A2A497979699A385                  25502          DC    X'A2A497979699A385844083A399934094' supported.ctrl.m
000131F8 85A2A281878540A3                  25503          DC    X'85A2A281878540A3A89785406C844081' essage.type..d.a
00013208 A340968686A285A3                  25504          DC    X'A340968686A285A3406C9393847A4089' t.offset..lld..i
00013218 8795969989958700                  25505          DC    X'87959699899587006CA240AD6C84BD7A' gnoring..s...d..
00013228 40E2928997978995                  25506          DC    X'40E292899797899587406C84409485A2' .Skipping..d.mes
00013238 A28187854DA25D40                  25507          DC    X'A28187854DA25D4089954081829699A3' sage.s..in.abort
00013248 858440A3998195A2                  25508          DC    X'858440A3998195A28183A38996954081' ed.transaction.a
00013258 A340968686A285A3                  25509          DC    X'A340968686A285A3406C939384408696' t.offset..lld.fo
00013268 9940D7C9C4406C93                  25510          DC    X'9940D7C9C4406C939384000081A2A285' r.PID..lld..asse
00013278 99A37A4094A285A3                  25511          DC    X'99A37A4094A285A399606E94A285A399' rt..msetr..msetr
00013288 6D999282A486606E                  25512          DC    X'6D999282A486606E999282A4866D9992' .rkbuf..rkbuf.rk
00013298 82006CA240AD6C84                  25513          DC    X'82006CA240AD6C84BD40D485A2A28187' b..s...d..Messag
000132A8 85E285A34081A340                  25514          DC    X'85E285A34081A340968686A285A3406C' eSet.at.offset..
                                                                                                                           Page  505 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000132B8 9393844093859587                  25515          DC    X'9393844093859587A388406C84404C40' lld.length..d...
000132C8 88858184859940A2                  25516          DC    X'88858184859940A289A985406C840000' header.size..d..
000132D8 D485A2A2818785E2                  25517          DC    X'D485A2A2818785E285A34081A3409686' MessageSet.at.of
000132E8 86A285A3406C9393                  25518          DC    X'86A285A3406C939384404D6C844082A8' fset..lld...d.by
000132F8 A385A25D40868189                  25519          DC    X'A385A25D4086818993858440C3D9C3F3' tes..failed.CRC3
00013308 F2C3408388858392                  25520          DC    X'F2C3408388858392404D969989878995' 2C.check..origin
00013318 819340F0A76CA740                  25521          DC    X'819340F0A76CA7405A7E4083819383A4' al.0x.x....calcu
00013328 9381A3858440F0A7                  25522          DC    X'9381A3858440F0A76CA75D007A406CA2' lated.0x.x.....s
00013338 40AD6C84BD40D485                  25523          DC    X'40AD6C84BD40D485A2A2818785E285A3' ...d..MessageSet
00013348 4081A340968686A2                  25524          DC    X'4081A340968686A285A3406C93938440' .at.offset..lld.
00013358 9781A89396818440                  25525          DC    X'9781A89396818440A289A985406CA9A4' payload.size..zu
00013368 0000839694979985                  25526          DC    X'0000839694979985A2A285840000D4C1' ..compressed..MA
00013378 C7C9C3C2E8E3C500                  25527          DC    X'C7C9C3C2E8E3C5006CA240AD6C84BD7A' GICBYTE..s...d..
00013388 40E495A2A4979796                  25528          DC    X'40E495A2A497979699A3858440D485A2' .Unsupported.Mes
00013398 A28187854DE285A3                  25529          DC    X'A28187854DE285A35D40D481878983C2' sage.Set..MagicB
000133A8 A8A385406C844081                  25530          DC    X'A8A385406C844081A340968686A285A3' yte..d.at.offset
000133B8 406C939384404D82                  25531          DC    X'406C939384404D82A486868599409796' ..lld..buffer.po
000133C8 A289A3899695406C                  25532          DC    X'A289A3899695406CA9A4616CA9A45D7A' sition..zu..zu..
000133D8 40A2928997978995                  25533          DC    X'40A29289979789958700E495A2A49797' .skipping.Unsupp
000133E8 9699A3858440D485                  25534          DC    X'9699A3858440D485A2A28187854DE285' orted.Message.Se
000133F8 A35D40D481878983                  25535          DC    X'A35D40D481878983C2A8A385406C8440' t..MagicByte..d.
00013408 81A340968686A285                  25536          DC    X'81A340968686A285A3406C9393840000' at.offset..lld..
00013418 C3D6D5E2E4D4C500                  25537          DC    X'C3D6D5E2E4D4C500E396978983406CA2' CONSUME.Topic..s
00013428 40AD6C84BD7A40C9                  25538          DC    X'40AD6C84BD7A40C99583998581A28995' ...d...Increasin
00013438 87409481A7408685                  25539          DC    X'87409481A7408685A383884082A8A385' g.max.fetch.byte
00013448 A240A396406C8400                  25540          DC    X'A240A396406C8400D485A2A281878540' s.to..d.Message.
00013458 81A340968686A285                  25541          DC    X'81A340968686A285A3406C9393844094' at.offset..lld.m
00013468 898788A340828540                  25542          DC    X'898788A340828540A396964093819987' ight.be.too.larg
00013478 8540A396408685A3                  25543          DC    X'8540A396408685A383886B40A399A840' e.to.fetch..try.
00013488 899583998581A289                  25544          DC    X'899583998581A2899587409985838589' increasing.recei
00013498 A5854B9485A2A281                  25545          DC    X'A5854B9485A2A28187854B9481A74B82' ve.message.max.b
000134A8 A8A385A20000A495                  25546          DC    X'A8A385A20000A495839694979985A2A2' ytes..uncompress
000134B8 85840000C59598A4                  25547          DC    X'85840000C59598A485A485406C89406C' ed..Enqueue..i..
000134C8 A29485A2A2818785                  25548          DC    X'A29485A2A28187854DA25D404D6C9393' smessage.s....ll
000134D8 844082A8A385A26B                  25549          DC    X'844082A8A385A26B406C84409697A25D' d.bytes...d.ops.
000134E8 409695406CA240AD                  25550          DC    X'409695406CA240AD6C84BD408685A383' .on..s...d..fetc
000134F8 884098A485A48540                  25551          DC    X'884098A485A485404D98938595406C84' h.queue..qlen..d
00013508 6B40A56C846B4093                  25552          DC    X'6B40A56C846B409381A2A36D968686A2' ..v.d..last.offs
00013518 85A3406C9393846B                  25553          DC    X'85A3406C9393846B406C844083A39993' et..lld...d.ctrl
00013528 4094A287A26B406C                  25554          DC    X'4094A287A26B406CA25D00001BADF3F1' .msgs...s.....31
00013538 94D9C4E4E37A40C6                  25555          DC    X'94D9C4E4E37A40C6C1C9D37A406CA27A' mRDUT..FAIL...s.
00013548 6C847A406CA27A40                  25556          DC    X'6C847A406CA27A4081A2A28599A34086' .d...s..assert.f
00013558 81899385847A40F3                  25557          DC    X'81899385847A40F3407E7E40A2A38199' ailed..3....star
00013568 A36D968686A285A3                  25558          DC    X'A36D968686A285A37A40000098A48599' t.offset....quer
00013578 89858440A2A38199                  25559          DC    X'89858440A2A38199A340968686A285A3' ied.start.offset
00013588 40A681A2406C9393                  25560          DC    X'40A681A2406C9393846B4085A7978583' .was..lld..expec
00013598 A3858440F3001BAD                  25561          DC    X'A3858440F3001BADF0941500F3407E7E' ted.3...0m..3...
000135A8 40A2A38199A36D96                  25562          DC    X'40A2A38199A36D968686A285A3001BAD' .start.offset...
000135B8 F3F194D9C4E4E37A                  25563          DC    X'F3F194D9C4E4E37A40C6C1C9D37A406C' 31mRDUT..FAIL...
000135C8 A27A6C847A406CA2                  25564          DC    X'A27A6C847A406CA27A4081A2A28599A3' s..d...s..assert
000135D8 408681899385847A                  25565          DC    X'408681899385847A40F1F0407E7E40A2' .failed..10....s
000135E8 A38199A36D968686                  25566          DC    X'A38199A36D968686A285A37A400098A4' tart.offset...qu
                                                                                                                           Page  506 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000135F8 859989858440A2A3                  25567          DC    X'859989858440A2A38199A340968686A2' eried.start.offs
00013608 85A340A681A2406C                  25568          DC    X'85A340A681A2406C9393846B4085A797' et.was..lld..exp
00013618 8583A3858440F1F0                  25569          DC    X'8583A3858440F1F00000F1F0407E7E40' ected.10..10....
00013628 A2A38199A36D9686                  25570          DC    X'A2A38199A36D968686A285A300001BAD' start.offset....
00013638 F3F194D9C4E4E37A                  25571          DC    X'F3F194D9C4E4E37A40C6C1C9D37A406C' 31mRDUT..FAIL...
00013648 A27A6C847A406CA2                  25572          DC    X'A27A6C847A406CA27A4081A2A28599A3' s..d...s..assert
00013658 408681899385847A                  25573          DC    X'408681899385847A40F7407E7E40A2A3' .failed..7....st
00013668 8199A36D968686A2                  25574          DC    X'8199A36D968686A285A37A40000098A4' art.offset....qu
00013678 859989858440A2A3                  25575          DC    X'859989858440A2A38199A340968686A2' eried.start.offs
00013688 85A340A681A2406C                  25576          DC    X'85A340A681A2406C9393846B4085A797' et.was..lld..exp
00013698 8583A3858440F700                  25577          DC    X'8583A3858440F700F7407E7E40A2A381' ected.7.7....sta
000136A8 99A36D968686A285                  25578          DC    X'99A36D968686A285A3001BADF3F194D9' rt.offset...31mR
000136B8 C4E4E37A40C6C1C9                  25579          DC    X'C4E4E37A40C6C1C9D37A406CA27A6C84' DUT..FAIL...s..d
000136C8 7A406CA27A4081A2                  25580          DC    X'7A406CA27A4081A2A28599A340868189' ...s..assert.fai
000136D8 9385847A40F4F240                  25581          DC    X'9385847A40F4F2407E7E40A2A38199A3' led..42....start
000136E8 6D968686A285A37A                  25582          DC    X'6D968686A285A37A400098A485998985' .offset...querie
000136F8 8440A2A38199A340                  25583          DC    X'8440A2A38199A340968686A285A340A6' d.start.offset.w
00013708 81A2406C9393846B                  25584          DC    X'81A2406C9393846B4085A7978583A385' as..lld..expecte
00013718 8440F4F20000F4F2                  25585          DC    X'8440F4F20000F4F2407E7E40A2A38199' d.42..42....star
00013728 A36D968686A285A3                  25586          DC    X'A36D968686A285A300001BADF3F194D9' t.offset....31mR
00013738 C4E4E37A40C6C1C9                  25587          DC    X'C4E4E37A40C6C1C9D37A406CA27A6C84' DUT..FAIL...s..d
00013748 7A406CA27A4081A2                  25588          DC    X'7A406CA27A4081A2A28599A340868189' ...s..assert.fai
00013758 9385847A40F4F440                  25589          DC    X'9385847A40F4F4407E7E40A2A38199A3' led..44....start
00013768 6D968686A285A37A                  25590          DC    X'6D968686A285A37A400098A485998985' .offset...querie
00013778 8440A2A38199A340                  25591          DC    X'8440A2A38199A340968686A285A340A6' d.start.offset.w
00013788 81A2406C9393846B                  25592          DC    X'81A2406C9393846B4085A7978583A385' as..lld..expecte
00013798 8440F4F40000F4F4                  25593          DC    X'8440F4F40000F4F4407E7E40A2A38199' d.44..44....star
000137A8 A36D968686A285A3                  25594          DC    X'A36D968686A285A300001BADF3F194D9' t.offset....31mR
000137B8 C4E4E37A40C6C1C9                  25595          DC    X'C4E4E37A40C6C1C9D37A406CA27A6C84' DUT..FAIL...s..d
000137C8 7A406CA27A4081A2                  25596          DC    X'7A406CA27A4081A2A28599A340868189' ...s..assert.fai
000137D8 9385847A40F1F140                  25597          DC    X'9385847A40F1F1407E7E40A2A38199A3' led..11....start
000137E8 6D968686A285A37A                  25598          DC    X'6D968686A285A37A400098A485998985' .offset...querie
000137F8 8440A2A38199A340                  25599          DC    X'8440A2A38199A340968686A285A340A6' d.start.offset.w
00013808 81A2406C9393846B                  25600          DC    X'81A2406C9393846B4085A7978583A385' as..lld..expecte
00013818 8440F1F10000F1F1                  25601          DC    X'8440F1F10000F1F1407E7E40A2A38199' d.11..11....star
00013828 A36D968686A285A3                  25602          DC    X'A36D968686A285A300001BADF3F194D9' t.offset....31mR
00013838 C4E4E37A40C6C1C9                  25603          DC    X'C4E4E37A40C6C1C9D37A406CA27A6C84' DUT..FAIL...s..d
00013848 7A406CA27A4081A2                  25604          DC    X'7A406CA27A4081A2A28599A340868189' ...s..assert.fai
00013858 9385847A4060F140                  25605          DC    X'9385847A4060F1407E7E40A2A38199A3' led...1....start
00013868 6D968686A285A37A                  25606          DC    X'6D968686A285A37A400098A485998985' .offset...querie
00013878 8440A2A38199A340                  25607          DC    X'8440A2A38199A340968686A285A340A6' d.start.offset.w
00013888 81A2406C9393846B                  25608          DC    X'81A2406C9393846B4085A7978583A385' as..lld..expecte
00013898 844060F1000060F1                  25609          DC    X'844060F1000060F1407E7E40A2A38199' d..1...1....star
000138A8 A36D968686A285A3                  25610          DC    X'A36D968686A285A300001BADF3F294D9' t.offset....32mR
000138B8 C4E4E37A40D7C1E2                  25611          DC    X'C4E4E37A40D7C1E2E27A406CA27A6C84' DUT..PASS...s..d
000138C8 7A406CA21BADF094                  25612          DC    X'7A406CA21BADF0941500D7999684A483' ...s..0m..Produc
000138D8 8500C685A3838800                  25613          DC    X'8500C685A3838800D68686A285A30000' e.Fetch.Offset..
000138E8 D485A3818481A381                  25614          DC    X'D485A3818481A3810000D38581848599' Metadata..Leader
000138F8 C19584C9A2990000                  25615          DC    X'C19584C9A2990000E2A39697D9859793' AndIsr..StopRepl
00013908 89838100E4978481                  25616          DC    X'89838100E4978481A385D485A3818481' ica.UpdateMetada
00013918 A3810000C39695A3                  25617          DC    X'A3810000C39695A3999693938584E288' ta..ControlledSh
00013928 A4A38496A6950000                  25618          DC    X'A4A38496A6950000D68686A285A3C396' utdown..OffsetCo
                                                                                                                           Page  507 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00013938 949489A30000D686                  25619          DC    X'949489A30000D68686A285A3C685A383' mmit..OffsetFetc
00013948 8800C6899584C396                  25620          DC    X'8800C6899584C396969984899581A396' h.FindCoordinato
00013958 9900D1968995C799                  25621          DC    X'9900D1968995C79996A49700C8858199' r.JoinGroup.Hear
00013968 A3828581A300D385                  25622          DC    X'A3828581A300D38581A585C79996A497' tbeat.LeaveGroup
00013978 0000E2A89583C799                  25623          DC    X'0000E2A89583C79996A49700C485A283' ..SyncGroup.Desc
00013988 99898285C79996A4                  25624          DC    X'99898285C79996A497A20000D389A2A3' ribeGroups..List
00013998 C79996A497A20000                  25625          DC    X'C79996A497A20000E281A293C8819584' Groups..SaslHand
000139A8 A28881928500C197                  25626          DC    X'A28881928500C19789E58599A2899695' shake.ApiVersion
000139B8 0000C3998581A385                  25627          DC    X'0000C3998581A385E396978983A20000' ..CreateTopics..
000139C8 C4859385A385E396                  25628          DC    X'C4859385A385E396978983A20000C485' DeleteTopics..De
000139D8 9385A385D9858396                  25629          DC    X'9385A385D98583969984A200C99589A3' leteRecords.Init
000139E8 D7999684A4838599                  25630          DC    X'D7999684A4838599C9840000D68686A2' ProducerId..Offs
000139F8 85A3C69699D38581                  25631          DC    X'85A3C69699D38581848599C597968388' etForLeaderEpoch
00013A08 0000C18484D78199                  25632          DC    X'0000C18484D78199A389A3899695A2E3' ..AddPartitionsT
00013A18 96E3A7950000C184                  25633          DC    X'96E3A7950000C18484D68686A285A3A2' oTxn..AddOffsets
00013A28 E396E3A79500C595                  25634          DC    X'E396E3A79500C59584E3A7950000E699' ToTxn.EndTxn..Wr
00013A38 89A385E3A795D481                  25635          DC    X'89A385E3A795D48199928599A200E3A7' iteTxnMarkers.Tx
00013A48 95D68686A285A3C3                  25636          DC    X'95D68686A285A3C396949489A300C485' nOffsetCommit.De
00013A58 A28399898285C183                  25637          DC    X'A28399898285C18393A20000C3998581' scribeAcls..Crea
00013A68 A385C18393A20000                  25638          DC    X'A385C18393A20000C4859385A385C183' teAcls..DeleteAc
00013A78 93A20000C485A283                  25639          DC    X'93A20000C485A28399898285C3969586' ls..DescribeConf
00013A88 8987A200C193A385                  25640          DC    X'8987A200C193A38599C39695868987A2' igs.AlterConfigs
00013A98 0000C193A38599D9                  25641          DC    X'0000C193A38599D9859793898381D396' ..AlterReplicaLo
00013AA8 87C48999A200C485                  25642          DC    X'87C48999A200C485A28399898285D396' gDirs.DescribeLo
00013AB8 87C48999A200E281                  25643          DC    X'87C48999A200E281A293C1A4A3888595' gDirs.SaslAuthen
00013AC8 A3898381A3850000                  25644          DC    X'A3898381A3850000C3998581A385D781' ticate..CreatePa
00013AD8 99A389A3899695A2                  25645          DC    X'99A389A3899695A20000C3998581A385' rtitions..Create
00013AE8 C48593858781A389                  25646          DC    X'C48593858781A3899695E39692859500' DelegationToken.
00013AF8 D9859585A6C48593                  25647          DC    X'D9859585A6C48593858781A3899695E3' RenewDelegationT
00013B08 969285950000C5A7                  25648          DC    X'969285950000C5A797899985C4859385' oken..ExpireDele
00013B18 8781A3899695E396                  25649          DC    X'8781A3899695E39692859500C485A283' gationToken.Desc
00013B28 99898285C4859385                  25650          DC    X'99898285C48593858781A3899695E396' ribeDelegationTo
00013B38 92859500C4859385                  25651          DC    X'92859500C4859385A385C79996A497A2' ken.DeleteGroups
00013B48 0000C5938583A3D3                  25652          DC    X'0000C5938583A3D38581848599A2D985' ..ElectLeadersRe
00013B58 98A485A2A300C995                  25653          DC    X'98A485A2A300C995839985948595A381' quest.Incrementa
00013B68 93C193A38599C396                  25654          DC    X'93C193A38599C39695868987A2D98598' lAlterConfigsReq
00013B78 A485A2A30000C193                  25655          DC    X'A485A2A30000C193A38599D78199A389' uest..AlterParti
00013B88 A3899695D98581A2                  25656          DC    X'A3899695D98581A2A2898795948595A3' tionReassignment
00013B98 A2D98598A485A2A3                  25657          DC    X'A2D98598A485A2A30000D389A2A3D781' sRequest..ListPa
00013BA8 99A389A3899695D9                  25658          DC    X'99A389A3899695D98581A2A289879594' rtitionReassignm
00013BB8 8595A3A2D98598A4                  25659          DC    X'8595A3A2D98598A485A2A300D68686A2' entsRequest.Offs
00013BC8 85A3C4859385A385                  25660          DC    X'85A3C4859385A385D98598A485A2A300' etDeleteRequest.
00013BD8 C485A28399898285                  25661          DC    X'C485A28399898285C393898595A3D8A4' DescribeClientQu
00013BE8 96A381A2D98598A4                  25662          DC    X'96A381A2D98598A485A2A300C193A385' otasRequest.Alte
00013BF8 99C393898595A3D8                  25663          DC    X'99C393898595A3D8A496A381A2D98598' rClientQuotasReq
00013C08 A485A2A30000C485                  25664          DC    X'A485A2A30000C485A28399898285E4A2' uest..DescribeUs
00013C18 8599E283998194C3                  25665          DC    X'8599E283998194C39985848595A38981' erScramCredentia
00013C28 93A2D98598A485A2                  25666          DC    X'93A2D98598A485A2A300C193A38599E4' lsRequest.AlterU
00013C38 A28599E283998194                  25667          DC    X'A28599E283998194C39985848595A389' serScramCredenti
00013C48 8193A2D98598A485                  25668          DC    X'8193A2D98598A485A2A30000E596A385' alsRequest..Vote
00013C58 D98598A485A2A300                  25669          DC    X'D98598A485A2A300C285878995D8A496' Request.BeginQuo
00013C68 99A494C597968388                  25670          DC    X'99A494C597968388D98598A485A2A300' rumEpochRequest.
                                                                                                                           Page  508 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00013C78 C59584D8A49699A4                  25671          DC    X'C59584D8A49699A494C597968388D985' EndQuorumEpochRe
00013C88 98A485A2A300C485                  25672          DC    X'98A485A2A300C485A28399898285D8A4' quest.DescribeQu
00013C98 9699A494D98598A4                  25673          DC    X'9699A494D98598A485A2A300C193A385' orumRequest.Alte
00013CA8 99C9A299D98598A4                  25674          DC    X'99C9A299D98598A485A2A300E4978481' rIsrRequest.Upda
00013CB8 A385C68581A3A499                  25675          DC    X'A385C68581A3A49985A2D98598A485A2' teFeaturesReques
00013CC8 A300C595A5859396                  25676          DC    X'A300C595A58593969785D98598A485A2' t.EnvelopeReques
00013CD8 A300959695850000                  25677          DC    X'A30095969585000087A989970000A295' t.none..gzip..sn
00013CE8 819797A8000093A9                  25678          DC    X'819797A8000093A9F400A9A2A3840000' appy..lz4.zstd..
00013CF8 899588859989A300                  25679          DC    X'899588859989A300839695868987A499' inherit.configur
00013D08 8584000093858199                  25680          DC    X'8584000093858199958584008995A385' ed..learned.inte
00013D18 9995819300009396                  25681          DC    X'9995819300009396878983819300C995' rnal..logical.In
00013D28 89A30000E3859994                  25682          DC    X'89A30000E3859994899581A38500C681' it..Terminate.Fa
00013D38 A38193C599999699                  25683          DC    X'A38193C5999996990000D98598A485A2' talError..Reques
00013D48 A3D7C9C40000E681                  25684          DC    X'A3D7C9C40000E68189A3E3998195A297' tPID..WaitTransp
00013D58 9699A300E68189A3                  25685          DC    X'9699A300E68189A3D7C9C400C1A2A289' ort.WaitPID.Assi
00013D68 879585840000C499                  25686          DC    X'879585840000C499818995D985A285A3' gned..DrainReset
00013D78 0000C499818995C2                  25687          DC    X'0000C499818995C2A4949700D9858184' ..DrainBump.Read
00013D88 A8D596A3C1839285                  25688          DC    X'A8D596A3C18392858400D9858184A800' yNotAcked.Ready.
00013D98 C995E3998195A281                  25689          DC    X'C995E3998195A28183A389969500C285' InTransaction.Be
00013DA8 878995C396949489                  25690          DC    X'878995C396949489A300C396949489A3' ginCommit.Commit
00013DB8 A3899587E3998195                  25691          DC    X'A3899587E3998195A28183A389969500' tingTransaction.
00013DC8 C396949489A3D596                  25692          DC    X'C396949489A3D596A3C1839285840000' CommitNotAcked..
00013DD8 C1829699A3899587                  25693          DC    X'C1829699A3899587E3998195A28183A3' AbortingTransact
00013DE8 89969500C1829699                  25694          DC    X'89969500C1829699A38584D596A3C183' ion.AbortedNotAc
00013DF8 92858400C1829699                  25695          DC    X'92858400C1829699A381829385C59999' ked.AbortableErr
00013E08 96990000                          25696          DC    X'96990000'                         or..
                                           25697 @Erd_unittest_assert_on_failure ALIAS X'99846DA49589A3A385A2A36D81A2A28*
                                                                599A36D96956D86818993A49985'
                                           25698          EXTRN @Erd_unittest_assert_on_failure
                                           25699 @E__stderrp ALIAS C'@@STDERP'
                                           25700          EXTRN @E__stderrp
                                           25701 *
                                           25702 *
                                           25703 *   Re-entrant Data Initialization Section
                                           25704 *
                                           25705 @@INIT@  ALIAS C'rdkafka_msgset_reader:'
00013E10                00013E10 00001040  25706 @@INIT@  CSECT
                                           25707 @@INIT@  AMODE ANY
                                           25708 @@INIT@  RMODE ANY
00013E10 05                                25709          DC    XL1'5'
00013E11 000000                            25710          DC    AL3(0)
00013E14 00000120                          25711          DC    AL4(288)
00013E18 00000000                          25712          DC    4X'00'
00013E1C 00000000                          25713          DC    Q(@@STATIC)
00013E20 00000000                          25714          DC    X'00000000'
00013E24 00000001                          25715          DC    X'00000001'
00013E28 00000000                          25716          DC    X'00000000'
00013E2C 000000FF                          25717          DC    X'000000FF'
00013E30 0102039C09867F97                  25718          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00013E40 1112139D85088718                  25719          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00013E50 818283840A171B88                  25720          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00013E60 9116939495960498                  25721          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
                                                                                                                           Page  509 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00013E70 A0E2E4E0E1E3E5E7                  25722          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00013E80 E9EAEBE8EDEEEFEC                  25723          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00013E90 2FC2C4C0C1C3C5C7                  25724          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00013EA0 C9CACBC8CDCECFCC                  25725          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00013EB0 6162636465666768                  25726          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00013EC0 6A6B6C6D6E6F7071                  25727          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
00013ED0 7E73747576777879                  25728          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
00013EE0 A3A5B7A9A7B6BCBD                  25729          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00013EF0 4142434445464748                  25730          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
00013F00 4A4B4C4D4E4F5051                  25731          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
00013F10 F753545556575859                  25732          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00013F20 3132333435363738                  25733          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                           25734 *
00013F30 05                                25735          DC    XL1'5'
00013F31 000000                            25736          DC    AL3(0)
00013F34 000001E0                          25737          DC    AL4(480)
00013F38 00000000                          25738          DC    4X'00'
00013F3C 00000000                          25739          DC    Q(@@STATIC)
00013F40 00000000                          25740          DC    X'00000000'
00013F44 00000101                          25741          DC    X'00000101'
00013F48 00000000                          25742          DC    X'00000000'
00013F4C 000000A0                          25743          DC    X'000000A0'
00013F50 010203372D2E2F16                  25744          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00013F60 1112133C3D322618                  25745          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00013F70 5A7F7B5B6C507D4D                  25746          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00013F80 F1F2F3F4F5F6F7F8                  25747          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00013F90 C1C2C3C4C5C6C7C8                  25748          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00013FA0 D8D9E2E3E4E5E6E7                  25749          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00013FB0 8182838485868788                  25750          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00013FC0 9899A2A3A4A5A6A7                  25751          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00013FD0 2122232425061728                  25752          DC    X'2122232425061728292A2B2C090A1B30' ................
00013FE0 311A333435360838                  25753          DC    X'311A333435360838393A3B04143EFF80' ................
                                           25754 *
00013FF0 05                                25755          DC    XL1'5'
00013FF1 000000                            25756          DC    AL3(0)
00013FF4 00000208                          25757          DC    AL4(520)
00013FF8 00000000                          25758          DC    4X'00'
00013FFC 00000000                          25759          DC    Q(@@STATIC)
00014000 00000000                          25760          DC    X'00000000'
00014004 000001C0                          25761          DC    X'000001C0'
00014008 00000000                          25762          DC    X'00000000'
0001400C 00000001                          25763          DC    X'00000001'
00014010 8A40404040404040                  25764          DC    X'8A40404040404040'                 ........
                                           25765 *
00014018 05                                25766          DC    XL1'5'
00014019 000000                            25767          DC    AL3(0)
0001401C 00000230                          25768          DC    AL4(560)
00014020 00000000                          25769          DC    4X'00'
00014024 00000000                          25770          DC    Q(@@STATIC)
00014028 00000000                          25771          DC    X'00000000'
0001402C 000001E0                          25772          DC    X'000001E0'
00014030 00000000                          25773          DC    X'00000000'
                                                                                                                           Page  510 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00014034 00000001                          25774          DC    X'00000001'
00014038 8B40404040404040                  25775          DC    X'8B40404040404040'                 ........
                                           25776 *
00014040 0D                                25777          DC    XL1'D'
00014041 000000                            25778          DC    AL3(0)
00014044 00000258                          25779          DC    AL4(600)
00014048 00000000                          25780          DC    4X'00'
0001404C 00000000                          25781          DC    Q(@@STATIC)
00014050 00000000                          25782          DC    X'00000000'
00014054 00000220                          25783          DC    X'00000220'
00014058 0000000000012808                  25784          DC    ADL8(@DATA)
00014060 00000000                          25785          DC    X'00000000'
00014064 000010CA                          25786          DC    X'000010CA'
                                           25787 *
00014068 0D                                25788          DC    XL1'D'
00014069 000000                            25789          DC    AL3(0)
0001406C 00000280                          25790          DC    AL4(640)
00014070 00000000                          25791          DC    4X'00'
00014074 00000000                          25792          DC    Q(@@STATIC)
00014078 00000000                          25793          DC    X'00000000'
0001407C 00000228                          25794          DC    X'00000228'
00014080 0000000000012808                  25795          DC    ADL8(@DATA)
00014088 00000000                          25796          DC    X'00000000'
0001408C 000010D2                          25797          DC    X'000010D2'
                                           25798 *
00014090 0D                                25799          DC    XL1'D'
00014091 000000                            25800          DC    AL3(0)
00014094 000002A8                          25801          DC    AL4(680)
00014098 00000000                          25802          DC    4X'00'
0001409C 00000000                          25803          DC    Q(@@STATIC)
000140A0 00000000                          25804          DC    X'00000000'
000140A4 00000230                          25805          DC    X'00000230'
000140A8 0000000000012808                  25806          DC    ADL8(@DATA)
000140B0 00000000                          25807          DC    X'00000000'
000140B4 000010D8                          25808          DC    X'000010D8'
                                           25809 *
000140B8 0D                                25810          DC    XL1'D'
000140B9 000000                            25811          DC    AL3(0)
000140BC 000002D0                          25812          DC    AL4(720)
000140C0 00000000                          25813          DC    4X'00'
000140C4 00000000                          25814          DC    Q(@@STATIC)
000140C8 00000000                          25815          DC    X'00000000'
000140CC 00000238                          25816          DC    X'00000238'
000140D0 0000000000012808                  25817          DC    ADL8(@DATA)
000140D8 00000000                          25818          DC    X'00000000'
000140DC 000010E0                          25819          DC    X'000010E0'
                                           25820 *
000140E0 0D                                25821          DC    XL1'D'
000140E1 000000                            25822          DC    AL3(0)
000140E4 000002F8                          25823          DC    AL4(760)
000140E8 00000000                          25824          DC    4X'00'
000140EC 00000000                          25825          DC    Q(@@STATIC)
                                                                                                                           Page  511 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000140F0 00000000                          25826          DC    X'00000000'
000140F4 00000240                          25827          DC    X'00000240'
000140F8 0000000000012808                  25828          DC    ADL8(@DATA)
00014100 00000000                          25829          DC    X'00000000'
00014104 000010EA                          25830          DC    X'000010EA'
                                           25831 *
00014108 0D                                25832          DC    XL1'D'
00014109 000000                            25833          DC    AL3(0)
0001410C 00000320                          25834          DC    AL4(800)
00014110 00000000                          25835          DC    4X'00'
00014114 00000000                          25836          DC    Q(@@STATIC)
00014118 00000000                          25837          DC    X'00000000'
0001411C 00000248                          25838          DC    X'00000248'
00014120 0000000000012808                  25839          DC    ADL8(@DATA)
00014128 00000000                          25840          DC    X'00000000'
0001412C 000010F8                          25841          DC    X'000010F8'
                                           25842 *
00014130 0D                                25843          DC    XL1'D'
00014131 000000                            25844          DC    AL3(0)
00014134 00000348                          25845          DC    AL4(840)
00014138 00000000                          25846          DC    4X'00'
0001413C 00000000                          25847          DC    Q(@@STATIC)
00014140 00000000                          25848          DC    X'00000000'
00014144 00000250                          25849          DC    X'00000250'
00014148 0000000000012808                  25850          DC    ADL8(@DATA)
00014150 00000000                          25851          DC    X'00000000'
00014154 00001104                          25852          DC    X'00001104'
                                           25853 *
00014158 0D                                25854          DC    XL1'D'
00014159 000000                            25855          DC    AL3(0)
0001415C 00000370                          25856          DC    AL4(880)
00014160 00000000                          25857          DC    4X'00'
00014164 00000000                          25858          DC    Q(@@STATIC)
00014168 00000000                          25859          DC    X'00000000'
0001416C 00000258                          25860          DC    X'00000258'
00014170 0000000000012808                  25861          DC    ADL8(@DATA)
00014178 00000000                          25862          DC    X'00000000'
0001417C 00001114                          25863          DC    X'00001114'
                                           25864 *
00014180 0D                                25865          DC    XL1'D'
00014181 000000                            25866          DC    AL3(0)
00014184 00000398                          25867          DC    AL4(920)
00014188 00000000                          25868          DC    4X'00'
0001418C 00000000                          25869          DC    Q(@@STATIC)
00014190 00000000                          25870          DC    X'00000000'
00014194 00000260                          25871          DC    X'00000260'
00014198 0000000000012808                  25872          DC    ADL8(@DATA)
000141A0 00000000                          25873          DC    X'00000000'
000141A4 00001128                          25874          DC    X'00001128'
                                           25875 *
000141A8 0D                                25876          DC    XL1'D'
000141A9 000000                            25877          DC    AL3(0)
                                                                                                                           Page  512 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000141AC 000003C0                          25878          DC    AL4(960)
000141B0 00000000                          25879          DC    4X'00'
000141B4 00000000                          25880          DC    Q(@@STATIC)
000141B8 00000000                          25881          DC    X'00000000'
000141BC 00000268                          25882          DC    X'00000268'
000141C0 0000000000012808                  25883          DC    ADL8(@DATA)
000141C8 00000000                          25884          DC    X'00000000'
000141CC 00001136                          25885          DC    X'00001136'
                                           25886 *
000141D0 0D                                25887          DC    XL1'D'
000141D1 000000                            25888          DC    AL3(0)
000141D4 000003E8                          25889          DC    AL4(1000)
000141D8 00000000                          25890          DC    4X'00'
000141DC 00000000                          25891          DC    Q(@@STATIC)
000141E0 00000000                          25892          DC    X'00000000'
000141E4 00000270                          25893          DC    X'00000270'
000141E8 0000000000012808                  25894          DC    ADL8(@DATA)
000141F0 00000000                          25895          DC    X'00000000'
000141F4 00001142                          25896          DC    X'00001142'
                                           25897 *
000141F8 0D                                25898          DC    XL1'D'
000141F9 000000                            25899          DC    AL3(0)
000141FC 00000410                          25900          DC    AL4(1040)
00014200 00000000                          25901          DC    4X'00'
00014204 00000000                          25902          DC    Q(@@STATIC)
00014208 00000000                          25903          DC    X'00000000'
0001420C 00000278                          25904          DC    X'00000278'
00014210 0000000000012808                  25905          DC    ADL8(@DATA)
00014218 00000000                          25906          DC    X'00000000'
0001421C 00001152                          25907          DC    X'00001152'
                                           25908 *
00014220 0D                                25909          DC    XL1'D'
00014221 000000                            25910          DC    AL3(0)
00014224 00000438                          25911          DC    AL4(1080)
00014228 00000000                          25912          DC    4X'00'
0001422C 00000000                          25913          DC    Q(@@STATIC)
00014230 00000000                          25914          DC    X'00000000'
00014234 00000280                          25915          DC    X'00000280'
00014238 0000000000012808                  25916          DC    ADL8(@DATA)
00014240 00000000                          25917          DC    X'00000000'
00014244 0000115C                          25918          DC    X'0000115C'
                                           25919 *
00014248 0D                                25920          DC    XL1'D'
00014249 000000                            25921          DC    AL3(0)
0001424C 00000460                          25922          DC    AL4(1120)
00014250 00000000                          25923          DC    4X'00'
00014254 00000000                          25924          DC    Q(@@STATIC)
00014258 00000000                          25925          DC    X'00000000'
0001425C 00000288                          25926          DC    X'00000288'
00014260 0000000000012808                  25927          DC    ADL8(@DATA)
00014268 00000000                          25928          DC    X'00000000'
0001426C 00001166                          25929          DC    X'00001166'
                                                                                                                           Page  513 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           25930 *
00014270 0D                                25931          DC    XL1'D'
00014271 000000                            25932          DC    AL3(0)
00014274 00000488                          25933          DC    AL4(1160)
00014278 00000000                          25934          DC    4X'00'
0001427C 00000000                          25935          DC    Q(@@STATIC)
00014280 00000000                          25936          DC    X'00000000'
00014284 00000290                          25937          DC    X'00000290'
00014288 0000000000012808                  25938          DC    ADL8(@DATA)
00014290 00000000                          25939          DC    X'00000000'
00014294 00001172                          25940          DC    X'00001172'
                                           25941 *
00014298 0D                                25942          DC    XL1'D'
00014299 000000                            25943          DC    AL3(0)
0001429C 000004B0                          25944          DC    AL4(1200)
000142A0 00000000                          25945          DC    4X'00'
000142A4 00000000                          25946          DC    Q(@@STATIC)
000142A8 00000000                          25947          DC    X'00000000'
000142AC 00000298                          25948          DC    X'00000298'
000142B0 0000000000012808                  25949          DC    ADL8(@DATA)
000142B8 00000000                          25950          DC    X'00000000'
000142BC 0000117C                          25951          DC    X'0000117C'
                                           25952 *
000142C0 0D                                25953          DC    XL1'D'
000142C1 000000                            25954          DC    AL3(0)
000142C4 000004D8                          25955          DC    AL4(1240)
000142C8 00000000                          25956          DC    4X'00'
000142CC 00000000                          25957          DC    Q(@@STATIC)
000142D0 00000000                          25958          DC    X'00000000'
000142D4 000002A0                          25959          DC    X'000002A0'
000142D8 0000000000012808                  25960          DC    ADL8(@DATA)
000142E0 00000000                          25961          DC    X'00000000'
000142E4 0000118C                          25962          DC    X'0000118C'
                                           25963 *
000142E8 0D                                25964          DC    XL1'D'
000142E9 000000                            25965          DC    AL3(0)
000142EC 00000500                          25966          DC    AL4(1280)
000142F0 00000000                          25967          DC    4X'00'
000142F4 00000000                          25968          DC    Q(@@STATIC)
000142F8 00000000                          25969          DC    X'00000000'
000142FC 000002A8                          25970          DC    X'000002A8'
00014300 0000000000012808                  25971          DC    ADL8(@DATA)
00014308 00000000                          25972          DC    X'00000000'
0001430C 00001198                          25973          DC    X'00001198'
                                           25974 *
00014310 0D                                25975          DC    XL1'D'
00014311 000000                            25976          DC    AL3(0)
00014314 00000528                          25977          DC    AL4(1320)
00014318 00000000                          25978          DC    4X'00'
0001431C 00000000                          25979          DC    Q(@@STATIC)
00014320 00000000                          25980          DC    X'00000000'
00014324 000002B0                          25981          DC    X'000002B0'
                                                                                                                           Page  514 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00014328 0000000000012808                  25982          DC    ADL8(@DATA)
00014330 00000000                          25983          DC    X'00000000'
00014334 000011A6                          25984          DC    X'000011A6'
                                           25985 *
00014338 0D                                25986          DC    XL1'D'
00014339 000000                            25987          DC    AL3(0)
0001433C 00000550                          25988          DC    AL4(1360)
00014340 00000000                          25989          DC    4X'00'
00014344 00000000                          25990          DC    Q(@@STATIC)
00014348 00000000                          25991          DC    X'00000000'
0001434C 000002B8                          25992          DC    X'000002B8'
00014350 0000000000012808                  25993          DC    ADL8(@DATA)
00014358 00000000                          25994          DC    X'00000000'
0001435C 000011B2                          25995          DC    X'000011B2'
                                           25996 *
00014360 0D                                25997          DC    XL1'D'
00014361 000000                            25998          DC    AL3(0)
00014364 00000578                          25999          DC    AL4(1400)
00014368 00000000                          26000          DC    4X'00'
0001436C 00000000                          26001          DC    Q(@@STATIC)
00014370 00000000                          26002          DC    X'00000000'
00014374 000002C0                          26003          DC    X'000002C0'
00014378 0000000000012808                  26004          DC    ADL8(@DATA)
00014380 00000000                          26005          DC    X'00000000'
00014384 000011C0                          26006          DC    X'000011C0'
                                           26007 *
00014388 0D                                26008          DC    XL1'D'
00014389 000000                            26009          DC    AL3(0)
0001438C 000005A0                          26010          DC    AL4(1440)
00014390 00000000                          26011          DC    4X'00'
00014394 00000000                          26012          DC    Q(@@STATIC)
00014398 00000000                          26013          DC    X'00000000'
0001439C 000002C8                          26014          DC    X'000002C8'
000143A0 0000000000012808                  26015          DC    ADL8(@DATA)
000143A8 00000000                          26016          DC    X'00000000'
000143AC 000011CE                          26017          DC    X'000011CE'
                                           26018 *
000143B0 0D                                26019          DC    XL1'D'
000143B1 000000                            26020          DC    AL3(0)
000143B4 000005C8                          26021          DC    AL4(1480)
000143B8 00000000                          26022          DC    4X'00'
000143BC 00000000                          26023          DC    Q(@@STATIC)
000143C0 00000000                          26024          DC    X'00000000'
000143C4 000002D0                          26025          DC    X'000002D0'
000143C8 0000000000012808                  26026          DC    ADL8(@DATA)
000143D0 00000000                          26027          DC    X'00000000'
000143D4 000011DC                          26028          DC    X'000011DC'
                                           26029 *
000143D8 0D                                26030          DC    XL1'D'
000143D9 000000                            26031          DC    AL3(0)
000143DC 000005F0                          26032          DC    AL4(1520)
000143E0 00000000                          26033          DC    4X'00'
                                                                                                                           Page  515 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000143E4 00000000                          26034          DC    Q(@@STATIC)
000143E8 00000000                          26035          DC    X'00000000'
000143EC 000002D8                          26036          DC    X'000002D8'
000143F0 0000000000012808                  26037          DC    ADL8(@DATA)
000143F8 00000000                          26038          DC    X'00000000'
000143FC 000011EC                          26039          DC    X'000011EC'
                                           26040 *
00014400 0D                                26041          DC    XL1'D'
00014401 000000                            26042          DC    AL3(0)
00014404 00000618                          26043          DC    AL4(1560)
00014408 00000000                          26044          DC    4X'00'
0001440C 00000000                          26045          DC    Q(@@STATIC)
00014410 00000000                          26046          DC    X'00000000'
00014414 000002E0                          26047          DC    X'000002E0'
00014418 0000000000012808                  26048          DC    ADL8(@DATA)
00014420 00000000                          26049          DC    X'00000000'
00014424 00001202                          26050          DC    X'00001202'
                                           26051 *
00014428 0D                                26052          DC    XL1'D'
00014429 000000                            26053          DC    AL3(0)
0001442C 00000640                          26054          DC    AL4(1600)
00014430 00000000                          26055          DC    4X'00'
00014434 00000000                          26056          DC    Q(@@STATIC)
00014438 00000000                          26057          DC    X'00000000'
0001443C 000002E8                          26058          DC    X'000002E8'
00014440 0000000000012808                  26059          DC    ADL8(@DATA)
00014448 00000000                          26060          DC    X'00000000'
0001444C 00001216                          26061          DC    X'00001216'
                                           26062 *
00014450 0D                                26063          DC    XL1'D'
00014451 000000                            26064          DC    AL3(0)
00014454 00000668                          26065          DC    AL4(1640)
00014458 00000000                          26066          DC    4X'00'
0001445C 00000000                          26067          DC    Q(@@STATIC)
00014460 00000000                          26068          DC    X'00000000'
00014464 000002F0                          26069          DC    X'000002F0'
00014468 0000000000012808                  26070          DC    ADL8(@DATA)
00014470 00000000                          26071          DC    X'00000000'
00014474 00001226                          26072          DC    X'00001226'
                                           26073 *
00014478 0D                                26074          DC    XL1'D'
00014479 000000                            26075          DC    AL3(0)
0001447C 00000690                          26076          DC    AL4(1680)
00014480 00000000                          26077          DC    4X'00'
00014484 00000000                          26078          DC    Q(@@STATIC)
00014488 00000000                          26079          DC    X'00000000'
0001448C 000002F8                          26080          DC    X'000002F8'
00014490 0000000000012808                  26081          DC    ADL8(@DATA)
00014498 00000000                          26082          DC    X'00000000'
0001449C 0000122E                          26083          DC    X'0000122E'
                                           26084 *
000144A0 0D                                26085          DC    XL1'D'
                                                                                                                           Page  516 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000144A1 000000                            26086          DC    AL3(0)
000144A4 000006B8                          26087          DC    AL4(1720)
000144A8 00000000                          26088          DC    4X'00'
000144AC 00000000                          26089          DC    Q(@@STATIC)
000144B0 00000000                          26090          DC    X'00000000'
000144B4 00000300                          26091          DC    X'00000300'
000144B8 0000000000012808                  26092          DC    ADL8(@DATA)
000144C0 00000000                          26093          DC    X'00000000'
000144C4 0000123E                          26094          DC    X'0000123E'
                                           26095 *
000144C8 0D                                26096          DC    XL1'D'
000144C9 000000                            26097          DC    AL3(0)
000144CC 000006E0                          26098          DC    AL4(1760)
000144D0 00000000                          26099          DC    4X'00'
000144D4 00000000                          26100          DC    Q(@@STATIC)
000144D8 00000000                          26101          DC    X'00000000'
000144DC 00000308                          26102          DC    X'00000308'
000144E0 0000000000012808                  26103          DC    ADL8(@DATA)
000144E8 00000000                          26104          DC    X'00000000'
000144EC 0000124E                          26105          DC    X'0000124E'
                                           26106 *
000144F0 0D                                26107          DC    XL1'D'
000144F1 000000                            26108          DC    AL3(0)
000144F4 00000708                          26109          DC    AL4(1800)
000144F8 00000000                          26110          DC    4X'00'
000144FC 00000000                          26111          DC    Q(@@STATIC)
00014500 00000000                          26112          DC    X'00000000'
00014504 00000310                          26113          DC    X'00000310'
00014508 0000000000012808                  26114          DC    ADL8(@DATA)
00014510 00000000                          26115          DC    X'00000000'
00014514 0000125C                          26116          DC    X'0000125C'
                                           26117 *
00014518 0D                                26118          DC    XL1'D'
00014519 000000                            26119          DC    AL3(0)
0001451C 00000730                          26120          DC    AL4(1840)
00014520 00000000                          26121          DC    4X'00'
00014524 00000000                          26122          DC    Q(@@STATIC)
00014528 00000000                          26123          DC    X'00000000'
0001452C 00000318                          26124          DC    X'00000318'
00014530 0000000000012808                  26125          DC    ADL8(@DATA)
00014538 00000000                          26126          DC    X'00000000'
0001453C 00001268                          26127          DC    X'00001268'
                                           26128 *
00014540 0D                                26129          DC    XL1'D'
00014541 000000                            26130          DC    AL3(0)
00014544 00000758                          26131          DC    AL4(1880)
00014548 00000000                          26132          DC    4X'00'
0001454C 00000000                          26133          DC    Q(@@STATIC)
00014550 00000000                          26134          DC    X'00000000'
00014554 00000320                          26135          DC    X'00000320'
00014558 0000000000012808                  26136          DC    ADL8(@DATA)
00014560 00000000                          26137          DC    X'00000000'
                                                                                                                           Page  517 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00014564 00001274                          26138          DC    X'00001274'
                                           26139 *
00014568 0D                                26140          DC    XL1'D'
00014569 000000                            26141          DC    AL3(0)
0001456C 00000780                          26142          DC    AL4(1920)
00014570 00000000                          26143          DC    4X'00'
00014574 00000000                          26144          DC    Q(@@STATIC)
00014578 00000000                          26145          DC    X'00000000'
0001457C 00000328                          26146          DC    X'00000328'
00014580 0000000000012808                  26147          DC    ADL8(@DATA)
00014588 00000000                          26148          DC    X'00000000'
0001458C 00001284                          26149          DC    X'00001284'
                                           26150 *
00014590 0D                                26151          DC    XL1'D'
00014591 000000                            26152          DC    AL3(0)
00014594 000007A8                          26153          DC    AL4(1960)
00014598 00000000                          26154          DC    4X'00'
0001459C 00000000                          26155          DC    Q(@@STATIC)
000145A0 00000000                          26156          DC    X'00000000'
000145A4 00000330                          26157          DC    X'00000330'
000145A8 0000000000012808                  26158          DC    ADL8(@DATA)
000145B0 00000000                          26159          DC    X'00000000'
000145B4 00001292                          26160          DC    X'00001292'
                                           26161 *
000145B8 0D                                26162          DC    XL1'D'
000145B9 000000                            26163          DC    AL3(0)
000145BC 000007D0                          26164          DC    AL4(2000)
000145C0 00000000                          26165          DC    4X'00'
000145C4 00000000                          26166          DC    Q(@@STATIC)
000145C8 00000000                          26167          DC    X'00000000'
000145CC 00000338                          26168          DC    X'00000338'
000145D0 0000000000012808                  26169          DC    ADL8(@DATA)
000145D8 00000000                          26170          DC    X'00000000'
000145DC 000012A6                          26171          DC    X'000012A6'
                                           26172 *
000145E0 0D                                26173          DC    XL1'D'
000145E1 000000                            26174          DC    AL3(0)
000145E4 000007F8                          26175          DC    AL4(2040)
000145E8 00000000                          26176          DC    4X'00'
000145EC 00000000                          26177          DC    Q(@@STATIC)
000145F0 00000000                          26178          DC    X'00000000'
000145F4 00000340                          26179          DC    X'00000340'
000145F8 0000000000012808                  26180          DC    ADL8(@DATA)
00014600 00000000                          26181          DC    X'00000000'
00014604 000012B6                          26182          DC    X'000012B6'
                                           26183 *
00014608 0D                                26184          DC    XL1'D'
00014609 000000                            26185          DC    AL3(0)
0001460C 00000820                          26186          DC    AL4(2080)
00014610 00000000                          26187          DC    4X'00'
00014614 00000000                          26188          DC    Q(@@STATIC)
00014618 00000000                          26189          DC    X'00000000'
                                                                                                                           Page  518 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0001461C 00000348                          26190          DC    X'00000348'
00014620 0000000000012808                  26191          DC    ADL8(@DATA)
00014628 00000000                          26192          DC    X'00000000'
0001462C 000012C8                          26193          DC    X'000012C8'
                                           26194 *
00014630 0D                                26195          DC    XL1'D'
00014631 000000                            26196          DC    AL3(0)
00014634 00000848                          26197          DC    AL4(2120)
00014638 00000000                          26198          DC    4X'00'
0001463C 00000000                          26199          DC    Q(@@STATIC)
00014640 00000000                          26200          DC    X'00000000'
00014644 00000350                          26201          DC    X'00000350'
00014648 0000000000012808                  26202          DC    ADL8(@DATA)
00014650 00000000                          26203          DC    X'00000000'
00014654 000012DA                          26204          DC    X'000012DA'
                                           26205 *
00014658 0D                                26206          DC    XL1'D'
00014659 000000                            26207          DC    AL3(0)
0001465C 00000870                          26208          DC    AL4(2160)
00014660 00000000                          26209          DC    4X'00'
00014664 00000000                          26210          DC    Q(@@STATIC)
00014668 00000000                          26211          DC    X'00000000'
0001466C 00000358                          26212          DC    X'00000358'
00014670 0000000000012808                  26213          DC    ADL8(@DATA)
00014678 00000000                          26214          DC    X'00000000'
0001467C 000012F0                          26215          DC    X'000012F0'
                                           26216 *
00014680 0D                                26217          DC    XL1'D'
00014681 000000                            26218          DC    AL3(0)
00014684 00000898                          26219          DC    AL4(2200)
00014688 00000000                          26220          DC    4X'00'
0001468C 00000000                          26221          DC    Q(@@STATIC)
00014690 00000000                          26222          DC    X'00000000'
00014694 00000360                          26223          DC    X'00000360'
00014698 0000000000012808                  26224          DC    ADL8(@DATA)
000146A0 00000000                          26225          DC    X'00000000'
000146A4 00001306                          26226          DC    X'00001306'
                                           26227 *
000146A8 0D                                26228          DC    XL1'D'
000146A9 000000                            26229          DC    AL3(0)
000146AC 000008C0                          26230          DC    AL4(2240)
000146B0 00000000                          26231          DC    4X'00'
000146B4 00000000                          26232          DC    Q(@@STATIC)
000146B8 00000000                          26233          DC    X'00000000'
000146BC 00000368                          26234          DC    X'00000368'
000146C0 0000000000012808                  26235          DC    ADL8(@DATA)
000146C8 00000000                          26236          DC    X'00000000'
000146CC 0000131C                          26237          DC    X'0000131C'
                                           26238 *
000146D0 0D                                26239          DC    XL1'D'
000146D1 000000                            26240          DC    AL3(0)
000146D4 000008E8                          26241          DC    AL4(2280)
                                                                                                                           Page  519 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000146D8 00000000                          26242          DC    4X'00'
000146DC 00000000                          26243          DC    Q(@@STATIC)
000146E0 00000000                          26244          DC    X'00000000'
000146E4 00000370                          26245          DC    X'00000370'
000146E8 0000000000012808                  26246          DC    ADL8(@DATA)
000146F0 00000000                          26247          DC    X'00000000'
000146F4 00001334                          26248          DC    X'00001334'
                                           26249 *
000146F8 0D                                26250          DC    XL1'D'
000146F9 000000                            26251          DC    AL3(0)
000146FC 00000910                          26252          DC    AL4(2320)
00014700 00000000                          26253          DC    4X'00'
00014704 00000000                          26254          DC    Q(@@STATIC)
00014708 00000000                          26255          DC    X'00000000'
0001470C 00000378                          26256          DC    X'00000378'
00014710 0000000000012808                  26257          DC    ADL8(@DATA)
00014718 00000000                          26258          DC    X'00000000'
0001471C 00001342                          26259          DC    X'00001342'
                                           26260 *
00014720 0D                                26261          DC    XL1'D'
00014721 000000                            26262          DC    AL3(0)
00014724 00000938                          26263          DC    AL4(2360)
00014728 00000000                          26264          DC    4X'00'
0001472C 00000000                          26265          DC    Q(@@STATIC)
00014730 00000000                          26266          DC    X'00000000'
00014734 00000380                          26267          DC    X'00000380'
00014738 0000000000012808                  26268          DC    ADL8(@DATA)
00014740 00000000                          26269          DC    X'00000000'
00014744 00001356                          26270          DC    X'00001356'
                                           26271 *
00014748 0D                                26272          DC    XL1'D'
00014749 000000                            26273          DC    AL3(0)
0001474C 00000960                          26274          DC    AL4(2400)
00014750 00000000                          26275          DC    4X'00'
00014754 00000000                          26276          DC    Q(@@STATIC)
00014758 00000000                          26277          DC    X'00000000'
0001475C 00000388                          26278          DC    X'00000388'
00014760 0000000000012808                  26279          DC    ADL8(@DATA)
00014768 00000000                          26280          DC    X'00000000'
0001476C 00001376                          26281          DC    X'00001376'
                                           26282 *
00014770 0D                                26283          DC    XL1'D'
00014771 000000                            26284          DC    AL3(0)
00014774 00000988                          26285          DC    AL4(2440)
00014778 00000000                          26286          DC    4X'00'
0001477C 00000000                          26287          DC    Q(@@STATIC)
00014780 00000000                          26288          DC    X'00000000'
00014784 00000390                          26289          DC    X'00000390'
00014788 0000000000012808                  26290          DC    ADL8(@DATA)
00014790 00000000                          26291          DC    X'00000000'
00014794 0000139A                          26292          DC    X'0000139A'
                                           26293 *
                                                                                                                           Page  520 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00014798 0D                                26294          DC    XL1'D'
00014799 000000                            26295          DC    AL3(0)
0001479C 000009B0                          26296          DC    AL4(2480)
000147A0 00000000                          26297          DC    4X'00'
000147A4 00000000                          26298          DC    Q(@@STATIC)
000147A8 00000000                          26299          DC    X'00000000'
000147AC 00000398                          26300          DC    X'00000398'
000147B0 0000000000012808                  26301          DC    ADL8(@DATA)
000147B8 00000000                          26302          DC    X'00000000'
000147BC 000013BC                          26303          DC    X'000013BC'
                                           26304 *
000147C0 0D                                26305          DC    XL1'D'
000147C1 000000                            26306          DC    AL3(0)
000147C4 000009D8                          26307          DC    AL4(2520)
000147C8 00000000                          26308          DC    4X'00'
000147CC 00000000                          26309          DC    Q(@@STATIC)
000147D0 00000000                          26310          DC    X'00000000'
000147D4 000003A0                          26311          DC    X'000003A0'
000147D8 0000000000012808                  26312          DC    ADL8(@DATA)
000147E0 00000000                          26313          DC    X'00000000'
000147E4 000013D0                          26314          DC    X'000013D0'
                                           26315 *
000147E8 0D                                26316          DC    XL1'D'
000147E9 000000                            26317          DC    AL3(0)
000147EC 00000A00                          26318          DC    AL4(2560)
000147F0 00000000                          26319          DC    4X'00'
000147F4 00000000                          26320          DC    Q(@@STATIC)
000147F8 00000000                          26321          DC    X'00000000'
000147FC 000003A8                          26322          DC    X'000003A8'
00014800 0000000000012808                  26323          DC    ADL8(@DATA)
00014808 00000000                          26324          DC    X'00000000'
0001480C 000013EC                          26325          DC    X'000013EC'
                                           26326 *
00014810 0D                                26327          DC    XL1'D'
00014811 000000                            26328          DC    AL3(0)
00014814 00000A28                          26329          DC    AL4(2600)
00014818 00000000                          26330          DC    4X'00'
0001481C 00000000                          26331          DC    Q(@@STATIC)
00014820 00000000                          26332          DC    X'00000000'
00014824 000003B0                          26333          DC    X'000003B0'
00014828 0000000000012808                  26334          DC    ADL8(@DATA)
00014830 00000000                          26335          DC    X'00000000'
00014834 00001406                          26336          DC    X'00001406'
                                           26337 *
00014838 0D                                26338          DC    XL1'D'
00014839 000000                            26339          DC    AL3(0)
0001483C 00000A50                          26340          DC    AL4(2640)
00014840 00000000                          26341          DC    4X'00'
00014844 00000000                          26342          DC    Q(@@STATIC)
00014848 00000000                          26343          DC    X'00000000'
0001484C 000003B8                          26344          DC    X'000003B8'
00014850 0000000000012808                  26345          DC    ADL8(@DATA)
                                                                                                                           Page  521 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00014858 00000000                          26346          DC    X'00000000'
0001485C 0000142A                          26347          DC    X'0000142A'
                                           26348 *
00014860 0D                                26349          DC    XL1'D'
00014861 000000                            26350          DC    AL3(0)
00014864 00000A78                          26351          DC    AL4(2680)
00014868 00000000                          26352          DC    4X'00'
0001486C 00000000                          26353          DC    Q(@@STATIC)
00014870 00000000                          26354          DC    X'00000000'
00014874 000003C0                          26355          DC    X'000003C0'
00014878 0000000000012808                  26356          DC    ADL8(@DATA)
00014880 00000000                          26357          DC    X'00000000'
00014884 0000144C                          26358          DC    X'0000144C'
                                           26359 *
00014888 0D                                26360          DC    XL1'D'
00014889 000000                            26361          DC    AL3(0)
0001488C 00000AA0                          26362          DC    AL4(2720)
00014890 00000000                          26363          DC    4X'00'
00014894 00000000                          26364          DC    Q(@@STATIC)
00014898 00000000                          26365          DC    X'00000000'
0001489C 000003C8                          26366          DC    X'000003C8'
000148A0 0000000000012808                  26367          DC    ADL8(@DATA)
000148A8 00000000                          26368          DC    X'00000000'
000148AC 00001458                          26369          DC    X'00001458'
                                           26370 *
000148B0 0D                                26371          DC    XL1'D'
000148B1 000000                            26372          DC    AL3(0)
000148B4 00000AC8                          26373          DC    AL4(2760)
000148B8 00000000                          26374          DC    4X'00'
000148BC 00000000                          26375          DC    Q(@@STATIC)
000148C0 00000000                          26376          DC    X'00000000'
000148C4 000003D0                          26377          DC    X'000003D0'
000148C8 0000000000012808                  26378          DC    ADL8(@DATA)
000148D0 00000000                          26379          DC    X'00000000'
000148D4 00001470                          26380          DC    X'00001470'
                                           26381 *
000148D8 0D                                26382          DC    XL1'D'
000148D9 000000                            26383          DC    AL3(0)
000148DC 00000AF0                          26384          DC    AL4(2800)
000148E0 00000000                          26385          DC    4X'00'
000148E4 00000000                          26386          DC    Q(@@STATIC)
000148E8 00000000                          26387          DC    X'00000000'
000148EC 000003D8                          26388          DC    X'000003D8'
000148F0 0000000000012808                  26389          DC    ADL8(@DATA)
000148F8 00000000                          26390          DC    X'00000000'
000148FC 00001486                          26391          DC    X'00001486'
                                           26392 *
00014900 0D                                26393          DC    XL1'D'
00014901 000000                            26394          DC    AL3(0)
00014904 00000B18                          26395          DC    AL4(2840)
00014908 00000000                          26396          DC    4X'00'
0001490C 00000000                          26397          DC    Q(@@STATIC)
                                                                                                                           Page  522 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00014910 00000000                          26398          DC    X'00000000'
00014914 000003E0                          26399          DC    X'000003E0'
00014918 0000000000012808                  26400          DC    ADL8(@DATA)
00014920 00000000                          26401          DC    X'00000000'
00014924 0000149C                          26402          DC    X'0000149C'
                                           26403 *
00014928 0D                                26404          DC    XL1'D'
00014929 000000                            26405          DC    AL3(0)
0001492C 00000B40                          26406          DC    AL4(2880)
00014930 00000000                          26407          DC    4X'00'
00014934 00000000                          26408          DC    Q(@@STATIC)
00014938 00000000                          26409          DC    X'00000000'
0001493C 000003E8                          26410          DC    X'000003E8'
00014940 0000000000012808                  26411          DC    ADL8(@DATA)
00014948 00000000                          26412          DC    X'00000000'
0001494C 000014AC                          26413          DC    X'000014AC'
                                           26414 *
00014950 0D                                26415          DC    XL1'D'
00014951 000000                            26416          DC    AL3(0)
00014954 00000B68                          26417          DC    AL4(2920)
00014958 00000000                          26418          DC    4X'00'
0001495C 00000000                          26419          DC    Q(@@STATIC)
00014960 00000000                          26420          DC    X'00000000'
00014964 000003F0                          26421          DC    X'000003F0'
00014968 0000000000012808                  26422          DC    ADL8(@DATA)
00014970 00000000                          26423          DC    X'00000000'
00014974 000014C2                          26424          DC    X'000014C2'
                                           26425 *
00014978 0D                                26426          DC    XL1'D'
00014979 000000                            26427          DC    AL3(0)
0001497C 00000B90                          26428          DC    AL4(2960)
00014980 00000000                          26429          DC    4X'00'
00014984 00000000                          26430          DC    Q(@@STATIC)
00014988 00000000                          26431          DC    X'00000000'
0001498C 000004C0                          26432          DC    X'000004C0'
00014990 0000000000012808                  26433          DC    ADL8(@DATA)
00014998 00000000                          26434          DC    X'00000000'
0001499C 000014D2                          26435          DC    X'000014D2'
                                           26436 *
000149A0 0D                                26437          DC    XL1'D'
000149A1 000000                            26438          DC    AL3(0)
000149A4 00000BB8                          26439          DC    AL4(3000)
000149A8 00000000                          26440          DC    4X'00'
000149AC 00000000                          26441          DC    Q(@@STATIC)
000149B0 00000000                          26442          DC    X'00000000'
000149B4 000004C8                          26443          DC    X'000004C8'
000149B8 0000000000012808                  26444          DC    ADL8(@DATA)
000149C0 00000000                          26445          DC    X'00000000'
000149C4 000014D8                          26446          DC    X'000014D8'
                                           26447 *
000149C8 0D                                26448          DC    XL1'D'
000149C9 000000                            26449          DC    AL3(0)
                                                                                                                           Page  523 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000149CC 00000BE0                          26450          DC    AL4(3040)
000149D0 00000000                          26451          DC    4X'00'
000149D4 00000000                          26452          DC    Q(@@STATIC)
000149D8 00000000                          26453          DC    X'00000000'
000149DC 000004D0                          26454          DC    X'000004D0'
000149E0 0000000000012808                  26455          DC    ADL8(@DATA)
000149E8 00000000                          26456          DC    X'00000000'
000149EC 000014DE                          26457          DC    X'000014DE'
                                           26458 *
000149F0 0D                                26459          DC    XL1'D'
000149F1 000000                            26460          DC    AL3(0)
000149F4 00000C08                          26461          DC    AL4(3080)
000149F8 00000000                          26462          DC    4X'00'
000149FC 00000000                          26463          DC    Q(@@STATIC)
00014A00 00000000                          26464          DC    X'00000000'
00014A04 000004D8                          26465          DC    X'000004D8'
00014A08 0000000000012808                  26466          DC    ADL8(@DATA)
00014A10 00000000                          26467          DC    X'00000000'
00014A14 000014E6                          26468          DC    X'000014E6'
                                           26469 *
00014A18 0D                                26470          DC    XL1'D'
00014A19 000000                            26471          DC    AL3(0)
00014A1C 00000C30                          26472          DC    AL4(3120)
00014A20 00000000                          26473          DC    4X'00'
00014A24 00000000                          26474          DC    Q(@@STATIC)
00014A28 00000000                          26475          DC    X'00000000'
00014A2C 000004E0                          26476          DC    X'000004E0'
00014A30 0000000000012808                  26477          DC    ADL8(@DATA)
00014A38 00000000                          26478          DC    X'00000000'
00014A3C 000014EA                          26479          DC    X'000014EA'
                                           26480 *
00014A40 0D                                26481          DC    XL1'D'
00014A41 000000                            26482          DC    AL3(0)
00014A44 00000C58                          26483          DC    AL4(3160)
00014A48 00000000                          26484          DC    4X'00'
00014A4C 00000000                          26485          DC    Q(@@STATIC)
00014A50 00000000                          26486          DC    X'00000000'
00014A54 000004E8                          26487          DC    X'000004E8'
00014A58 0000000000012808                  26488          DC    ADL8(@DATA)
00014A60 00000000                          26489          DC    X'00000000'
00014A64 000014F0                          26490          DC    X'000014F0'
                                           26491 *
00014A68 0D                                26492          DC    XL1'D'
00014A69 000000                            26493          DC    AL3(0)
00014A6C 00000C80                          26494          DC    AL4(3200)
00014A70 00000000                          26495          DC    4X'00'
00014A74 00000000                          26496          DC    Q(@@STATIC)
00014A78 00000000                          26497          DC    X'00000000'
00014A7C 00000510                          26498          DC    X'00000510'
00014A80 0000000000012808                  26499          DC    ADL8(@DATA)
00014A88 00000000                          26500          DC    X'00000000'
00014A8C 000014F8                          26501          DC    X'000014F8'
                                                                                                                           Page  524 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           26502 *
00014A90 0D                                26503          DC    XL1'D'
00014A91 000000                            26504          DC    AL3(0)
00014A94 00000CA8                          26505          DC    AL4(3240)
00014A98 00000000                          26506          DC    4X'00'
00014A9C 00000000                          26507          DC    Q(@@STATIC)
00014AA0 00000000                          26508          DC    X'00000000'
00014AA4 00000518                          26509          DC    X'00000518'
00014AA8 0000000000012808                  26510          DC    ADL8(@DATA)
00014AB0 00000000                          26511          DC    X'00000000'
00014AB4 00001504                          26512          DC    X'00001504'
                                           26513 *
00014AB8 0D                                26514          DC    XL1'D'
00014AB9 000000                            26515          DC    AL3(0)
00014ABC 00000CD0                          26516          DC    AL4(3280)
00014AC0 00000000                          26517          DC    4X'00'
00014AC4 00000000                          26518          DC    Q(@@STATIC)
00014AC8 00000000                          26519          DC    X'00000000'
00014ACC 00000520                          26520          DC    X'00000520'
00014AD0 0000000000012808                  26521          DC    ADL8(@DATA)
00014AD8 00000000                          26522          DC    X'00000000'
00014ADC 0000150C                          26523          DC    X'0000150C'
                                           26524 *
00014AE0 0D                                26525          DC    XL1'D'
00014AE1 000000                            26526          DC    AL3(0)
00014AE4 00000CF8                          26527          DC    AL4(3320)
00014AE8 00000000                          26528          DC    4X'00'
00014AEC 00000000                          26529          DC    Q(@@STATIC)
00014AF0 00000000                          26530          DC    X'00000000'
00014AF4 00000528                          26531          DC    X'00000528'
00014AF8 0000000000012808                  26532          DC    ADL8(@DATA)
00014B00 00000000                          26533          DC    X'00000000'
00014B04 00001516                          26534          DC    X'00001516'
                                           26535 *
00014B08 0D                                26536          DC    XL1'D'
00014B09 000000                            26537          DC    AL3(0)
00014B0C 00000D20                          26538          DC    AL4(3360)
00014B10 00000000                          26539          DC    4X'00'
00014B14 00000000                          26540          DC    Q(@@STATIC)
00014B18 00000000                          26541          DC    X'00000000'
00014B1C 00000630                          26542          DC    X'00000630'
00014B20 0000000000012808                  26543          DC    ADL8(@DATA)
00014B28 00000000                          26544          DC    X'00000000'
00014B2C 0000151E                          26545          DC    X'0000151E'
                                           26546 *
00014B30 0D                                26547          DC    XL1'D'
00014B31 000000                            26548          DC    AL3(0)
00014B34 00000D48                          26549          DC    AL4(3400)
00014B38 00000000                          26550          DC    4X'00'
00014B3C 00000000                          26551          DC    Q(@@STATIC)
00014B40 00000000                          26552          DC    X'00000000'
00014B44 00000638                          26553          DC    X'00000638'
                                                                                                                           Page  525 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00014B48 0000000000012808                  26554          DC    ADL8(@DATA)
00014B50 00000000                          26555          DC    X'00000000'
00014B54 00001524                          26556          DC    X'00001524'
                                           26557 *
00014B58 0D                                26558          DC    XL1'D'
00014B59 000000                            26559          DC    AL3(0)
00014B5C 00000D70                          26560          DC    AL4(3440)
00014B60 00000000                          26561          DC    4X'00'
00014B64 00000000                          26562          DC    Q(@@STATIC)
00014B68 00000000                          26563          DC    X'00000000'
00014B6C 00000640                          26564          DC    X'00000640'
00014B70 0000000000012808                  26565          DC    ADL8(@DATA)
00014B78 00000000                          26566          DC    X'00000000'
00014B7C 0000152E                          26567          DC    X'0000152E'
                                           26568 *
00014B80 0D                                26569          DC    XL1'D'
00014B81 000000                            26570          DC    AL3(0)
00014B84 00000D98                          26571          DC    AL4(3480)
00014B88 00000000                          26572          DC    4X'00'
00014B8C 00000000                          26573          DC    Q(@@STATIC)
00014B90 00000000                          26574          DC    X'00000000'
00014B94 00000648                          26575          DC    X'00000648'
00014B98 0000000000012808                  26576          DC    ADL8(@DATA)
00014BA0 00000000                          26577          DC    X'00000000'
00014BA4 0000153A                          26578          DC    X'0000153A'
                                           26579 *
00014BA8 0D                                26580          DC    XL1'D'
00014BA9 000000                            26581          DC    AL3(0)
00014BAC 00000DC0                          26582          DC    AL4(3520)
00014BB0 00000000                          26583          DC    4X'00'
00014BB4 00000000                          26584          DC    Q(@@STATIC)
00014BB8 00000000                          26585          DC    X'00000000'
00014BBC 00000650                          26586          DC    X'00000650'
00014BC0 0000000000012808                  26587          DC    ADL8(@DATA)
00014BC8 00000000                          26588          DC    X'00000000'
00014BCC 00001546                          26589          DC    X'00001546'
                                           26590 *
00014BD0 0D                                26591          DC    XL1'D'
00014BD1 000000                            26592          DC    AL3(0)
00014BD4 00000DE8                          26593          DC    AL4(3560)
00014BD8 00000000                          26594          DC    4X'00'
00014BDC 00000000                          26595          DC    Q(@@STATIC)
00014BE0 00000000                          26596          DC    X'00000000'
00014BE4 00000658                          26597          DC    X'00000658'
00014BE8 0000000000012808                  26598          DC    ADL8(@DATA)
00014BF0 00000000                          26599          DC    X'00000000'
00014BF4 00001554                          26600          DC    X'00001554'
                                           26601 *
00014BF8 0D                                26602          DC    XL1'D'
00014BF9 000000                            26603          DC    AL3(0)
00014BFC 00000E10                          26604          DC    AL4(3600)
00014C00 00000000                          26605          DC    4X'00'
                                                                                                                           Page  526 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00014C04 00000000                          26606          DC    Q(@@STATIC)
00014C08 00000000                          26607          DC    X'00000000'
00014C0C 00000660                          26608          DC    X'00000660'
00014C10 0000000000012808                  26609          DC    ADL8(@DATA)
00014C18 00000000                          26610          DC    X'00000000'
00014C1C 0000155C                          26611          DC    X'0000155C'
                                           26612 *
00014C20 0D                                26613          DC    XL1'D'
00014C21 000000                            26614          DC    AL3(0)
00014C24 00000E38                          26615          DC    AL4(3640)
00014C28 00000000                          26616          DC    4X'00'
00014C2C 00000000                          26617          DC    Q(@@STATIC)
00014C30 00000000                          26618          DC    X'00000000'
00014C34 00000668                          26619          DC    X'00000668'
00014C38 0000000000012808                  26620          DC    ADL8(@DATA)
00014C40 00000000                          26621          DC    X'00000000'
00014C44 00001566                          26622          DC    X'00001566'
                                           26623 *
00014C48 0D                                26624          DC    XL1'D'
00014C49 000000                            26625          DC    AL3(0)
00014C4C 00000E60                          26626          DC    AL4(3680)
00014C50 00000000                          26627          DC    4X'00'
00014C54 00000000                          26628          DC    Q(@@STATIC)
00014C58 00000000                          26629          DC    X'00000000'
00014C5C 00000670                          26630          DC    X'00000670'
00014C60 0000000000012808                  26631          DC    ADL8(@DATA)
00014C68 00000000                          26632          DC    X'00000000'
00014C6C 00001572                          26633          DC    X'00001572'
                                           26634 *
00014C70 0D                                26635          DC    XL1'D'
00014C71 000000                            26636          DC    AL3(0)
00014C74 00000E88                          26637          DC    AL4(3720)
00014C78 00000000                          26638          DC    4X'00'
00014C7C 00000000                          26639          DC    Q(@@STATIC)
00014C80 00000000                          26640          DC    X'00000000'
00014C84 00000678                          26641          DC    X'00000678'
00014C88 0000000000012808                  26642          DC    ADL8(@DATA)
00014C90 00000000                          26643          DC    X'00000000'
00014C94 0000151E                          26644          DC    X'0000151E'
                                           26645 *
00014C98 0D                                26646          DC    XL1'D'
00014C99 000000                            26647          DC    AL3(0)
00014C9C 00000EB0                          26648          DC    AL4(3760)
00014CA0 00000000                          26649          DC    4X'00'
00014CA4 00000000                          26650          DC    Q(@@STATIC)
00014CA8 00000000                          26651          DC    X'00000000'
00014CAC 00000680                          26652          DC    X'00000680'
00014CB0 0000000000012808                  26653          DC    ADL8(@DATA)
00014CB8 00000000                          26654          DC    X'00000000'
00014CBC 00001554                          26655          DC    X'00001554'
                                           26656 *
00014CC0 0D                                26657          DC    XL1'D'
                                                                                                                           Page  527 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00014CC1 000000                            26658          DC    AL3(0)
00014CC4 00000ED8                          26659          DC    AL4(3800)
00014CC8 00000000                          26660          DC    4X'00'
00014CCC 00000000                          26661          DC    Q(@@STATIC)
00014CD0 00000000                          26662          DC    X'00000000'
00014CD4 00000688                          26663          DC    X'00000688'
00014CD8 0000000000012808                  26664          DC    ADL8(@DATA)
00014CE0 00000000                          26665          DC    X'00000000'
00014CE4 0000157C                          26666          DC    X'0000157C'
                                           26667 *
00014CE8 0D                                26668          DC    XL1'D'
00014CE9 000000                            26669          DC    AL3(0)
00014CEC 00000F00                          26670          DC    AL4(3840)
00014CF0 00000000                          26671          DC    4X'00'
00014CF4 00000000                          26672          DC    Q(@@STATIC)
00014CF8 00000000                          26673          DC    X'00000000'
00014CFC 00000690                          26674          DC    X'00000690'
00014D00 0000000000012808                  26675          DC    ADL8(@DATA)
00014D08 00000000                          26676          DC    X'00000000'
00014D0C 0000158A                          26677          DC    X'0000158A'
                                           26678 *
00014D10 0D                                26679          DC    XL1'D'
00014D11 000000                            26680          DC    AL3(0)
00014D14 00000F28                          26681          DC    AL4(3880)
00014D18 00000000                          26682          DC    4X'00'
00014D1C 00000000                          26683          DC    Q(@@STATIC)
00014D20 00000000                          26684          DC    X'00000000'
00014D24 00000698                          26685          DC    X'00000698'
00014D28 0000000000012808                  26686          DC    ADL8(@DATA)
00014D30 00000000                          26687          DC    X'00000000'
00014D34 00001590                          26688          DC    X'00001590'
                                           26689 *
00014D38 0D                                26690          DC    XL1'D'
00014D39 000000                            26691          DC    AL3(0)
00014D3C 00000F50                          26692          DC    AL4(3920)
00014D40 00000000                          26693          DC    4X'00'
00014D44 00000000                          26694          DC    Q(@@STATIC)
00014D48 00000000                          26695          DC    X'00000000'
00014D4C 000006A0                          26696          DC    X'000006A0'
00014D50 0000000000012808                  26697          DC    ADL8(@DATA)
00014D58 00000000                          26698          DC    X'00000000'
00014D5C 0000159E                          26699          DC    X'0000159E'
                                           26700 *
00014D60 0D                                26701          DC    XL1'D'
00014D61 000000                            26702          DC    AL3(0)
00014D64 00000F78                          26703          DC    AL4(3960)
00014D68 00000000                          26704          DC    4X'00'
00014D6C 00000000                          26705          DC    Q(@@STATIC)
00014D70 00000000                          26706          DC    X'00000000'
00014D74 000006A8                          26707          DC    X'000006A8'
00014D78 0000000000012808                  26708          DC    ADL8(@DATA)
00014D80 00000000                          26709          DC    X'00000000'
                                                                                                                           Page  528 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00014D84 000015AA                          26710          DC    X'000015AA'
                                           26711 *
00014D88 0D                                26712          DC    XL1'D'
00014D89 000000                            26713          DC    AL3(0)
00014D8C 00000FA0                          26714          DC    AL4(4000)
00014D90 00000000                          26715          DC    4X'00'
00014D94 00000000                          26716          DC    Q(@@STATIC)
00014D98 00000000                          26717          DC    X'00000000'
00014D9C 000006B0                          26718          DC    X'000006B0'
00014DA0 0000000000012808                  26719          DC    ADL8(@DATA)
00014DA8 00000000                          26720          DC    X'00000000'
00014DAC 000015C0                          26721          DC    X'000015C0'
                                           26722 *
00014DB0 0D                                26723          DC    XL1'D'
00014DB1 000000                            26724          DC    AL3(0)
00014DB4 00000FC8                          26725          DC    AL4(4040)
00014DB8 00000000                          26726          DC    4X'00'
00014DBC 00000000                          26727          DC    Q(@@STATIC)
00014DC0 00000000                          26728          DC    X'00000000'
00014DC4 000006B8                          26729          DC    X'000006B8'
00014DC8 0000000000012808                  26730          DC    ADL8(@DATA)
00014DD0 00000000                          26731          DC    X'00000000'
00014DD4 000015D0                          26732          DC    X'000015D0'
                                           26733 *
00014DD8 0D                                26734          DC    XL1'D'
00014DD9 000000                            26735          DC    AL3(0)
00014DDC 00000FF0                          26736          DC    AL4(4080)
00014DE0 00000000                          26737          DC    4X'00'
00014DE4 00000000                          26738          DC    Q(@@STATIC)
00014DE8 00000000                          26739          DC    X'00000000'
00014DEC 000006C0                          26740          DC    X'000006C0'
00014DF0 0000000000012808                  26741          DC    ADL8(@DATA)
00014DF8 00000000                          26742          DC    X'00000000'
00014DFC 000015E4                          26743          DC    X'000015E4'
                                           26744 *
00014E00 0D                                26745          DC    XL1'D'
00014E01 000000                            26746          DC    AL3(0)
00014E04 00001018                          26747          DC    AL4(4120)
00014E08 00000000                          26748          DC    4X'00'
00014E0C 00000000                          26749          DC    Q(@@STATIC)
00014E10 00000000                          26750          DC    X'00000000'
00014E14 000006C8                          26751          DC    X'000006C8'
00014E18 0000000000012808                  26752          DC    ADL8(@DATA)
00014E20 00000000                          26753          DC    X'00000000'
00014E24 000015F4                          26754          DC    X'000015F4'
                                           26755 *
00014E28 0D                                26756          DC    XL1'D'
00014E29 000000                            26757          DC    AL3(0)
00014E2C 00000000                          26758          DC    AL4(0)
00014E30 00000000                          26759          DC    4X'00'
00014E34 00000000                          26760          DC    Q(@@STATIC)
00014E38 00000000                          26761          DC    X'00000000'
                                                                                                                           Page  529 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00014E3C 000006D0                          26762          DC    X'000006D0'
00014E40 0000000000012808                  26763          DC    ADL8(@DATA)
00014E48 00000000                          26764          DC    X'00000000'
00014E4C 0000152E                          26765          DC    X'0000152E'
                                           26766 *
                                           26767          END
                                                 Relocation Dictionary                                                     Page  530 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00000020   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000002 00000050   A 4      +
 00000002 0000000D 00000138   A 4      +
 00000002 0000000E 00000140   A 4      +
 00000002 00000002 00000168   A 4      +
 00000002 00000002 00000190   A 4      +
 00000002 00000002 00000198   A 4      +
 00000002 0000000D 00000280   A 4      +
 00000002 0000000E 00000288   A 4      +
 00000002 00000002 000002B0   A 4      +
 00000002 00000002 000002D8   A 4      +
 00000002 00000002 000002E0   A 4      +
 00000002 0000000D 000003D0   A 4      +
 00000002 0000000E 000003D8   A 4      +
 00000002 00000002 000003F8   A 4      +
 00000002 00000002 00000420   A 4      +
 00000002 00000002 00000428   A 4      +
 00000002 00000008 00000528   A 4      +
 00000002 00000020 00000530   A 4      +
 00000002 0000003D 00000538   A 4      +
 00000002 0000003D 00000540   A 4      +
 00000002 00000002 00000560   A 4      +
 00000002 00000002 00000588   A 4      +
 00000002 00000002 00000590   A 4      +
 00000002 0000003A 00000648   A 4      +
 00000002 00000002 00000670   A 4      +
 00000002 00000002 00000698   A 4      +
 00000002 00000002 000006A0   A 4      +
 00000002 00000002 000007B0   A 4      +
 00000002 0000003D 000007B8   A 4      +
 00000002 00000020 000007C0   A 4      +
 00000002 0000003D 000007C8   A 4      +
 00000002 00000002 000007F0   A 4      +
 00000002 00000002 00000818   A 4      +
 00000002 00000002 00000820   A 4      +
 00000002 00000033 000008E8   A 4      +
 00000002 00000002 00000910   A 4      +
 00000002 00000002 00000938   A 4      +
 00000002 00000002 00000940   A 4      +
 00000002 00000034 00000A08   A 4      +
 00000002 00000002 00000A30   A 4      +
 00000002 00000002 00000A58   A 4      +
 00000002 00000002 00000A60   A 4      +
 00000002 00000035 00000B28   A 4      +
 00000002 00000002 00000B50   A 4      +
 00000002 00000002 00000B78   A 4      +
 00000002 00000002 00000B80   A 4      +
 00000002 00000037 00000C48   A 4      +
 00000002 00000002 00000C70   A 4      +
 00000002 00000002 00000C98   A 4      +
 00000002 00000002 00000CA0   A 4      +
 00000002 00000002 00000D90   A 4      +
                                                 Relocation Dictionary                                                     Page  531 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 0000000B 00000D98   A 4      +
 00000002 00000002 00000DA0   A 4      +
 00000002 00000002 00000E10   A 4      +
 00000002 00000002 00000E38   A 4      +
 00000002 00000002 00000E40   A 4      +
 00000002 00000002 00000EF8   A 4      +
 00000002 0000000F 00000F00   A 4      +
 00000002 00000002 00000F08   A 4      +
 00000002 00000002 00000FB8   A 4      +
 00000002 00000002 00000FC0   A 4      +
 00000002 00000002 00001008   A 4      +
 00000002 00000002 00001030   A 4      +
 00000002 00000002 00001038   A 4      +
 00000002 00000023 000010D0   A 4      +
 00000002 00000025 000010D8   A 4      +
 00000002 00000032 000010E0   A 4      +
 00000002 00000002 000011F8   A 4      +
 00000002 00000002 00001200   A 4      +
 00000002 00000002 000012A0   A 4      +
 00000002 00000002 000012A8   A 4      +
 00000002 00000002 00001338   A 4      +
 00000002 00000002 00001360   A 4      +
 00000002 00000002 00001368   A 4      +
 00000002 00000028 00001460   A 4      +
 00000002 00000002 00001490   A 4      +
 00000002 00000002 000014B8   A 4      +
 00000002 00000002 000014C0   A 4      +
 00000002 0000003C 0000159C   Q 4      +
 00000002 00000014 000015A0   A 4      +
 00000002 0000003D 000015A8   A 4      +
 00000002 00000002 00001650   A 4      +
 00000002 00000002 00001658   A 4      +
 00000002 00000002 00001738   A 4      +
 00000002 00000002 00001760   A 4      +
 00000002 00000002 00001768   A 4      +
 00000002 00000023 00001840   A 4      +
 00000002 00000025 00001848   A 4      +
 00000002 00000002 00001870   A 4      +
 00000002 00000002 00001898   A 4      +
 00000002 00000002 000018A0   A 4      +
 00000002 00000023 00001988   A 4      +
 00000002 00000025 00001990   A 4      +
 00000002 00000002 000019B8   A 4      +
 00000002 00000002 000019E0   A 4      +
 00000002 00000002 000019E8   A 4      +
 00000002 00000002 00001B68   A 4      +
 00000002 00000030 00001B70   A 4      +
 00000002 00000023 00001B78   A 4      +
 00000002 00000010 00001B80   A 4      +
 00000002 0000003D 00001B88   A 4      +
 00000002 0000003D 00001B90   A 4      +
 00000002 00000025 00001B98   A 4      +
 00000002 00000029 00001BA0   A 4      +
                                                 Relocation Dictionary                                                     Page  532 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00001BD0   A 4      +
 00000002 00000002 00001BF8   A 4      +
 00000002 00000002 00001C00   A 4      +
 00000002 00000002 00001CC0   A 4      +
 00000002 00000002 00001D10   A 4      +
 00000002 00000002 00001D18   A 4      +
 00000002 00000002 00001D88   A 4      +
 00000002 00000002 00001DB0   A 4      +
 00000002 00000002 00001DB8   A 4      +
 00000002 00000023 00001EB8   A 4      +
 00000002 00000002 00001EC0   A 4      +
 00000002 00000025 00001EC8   A 4      +
 00000002 00000002 00001EF0   A 4      +
 00000002 00000002 00001F18   A 4      +
 00000002 00000002 00001F20   A 4      +
 00000002 00000005 00001FD0   A 4      +
 00000002 00000002 000020C8   A 4      +
 00000002 00000002 000020D0   A 4      +
 00000002 00000002 00002150   A 4      +
 00000002 00000002 00002178   A 4      +
 00000002 00000002 00002180   A 4      +
 00000002 00000002 00002218   A 4      +
 00000002 00000002 000023D8   A 4      +
 00000002 00000002 00002400   A 4      +
 00000002 00000002 00002408   A 4      +
 00000002 00000023 000024C8   A 4      +
 00000002 00000025 000024D0   A 4      +
 00000002 00000017 000024D8   A 4      +
 00000002 00000002 000024E0   A 4      +
 00000002 00000002 000024E8   A 4      +
 00000002 0000002A 000024F0   A 4      +
 00000002 00000002 000024F8   A 4      +
 00000002 00000002 00002500   A 4      +
 00000002 00000002 00002508   A 4      +
 00000002 00000002 00002690   A 4      +
 00000002 00000002 000026B8   A 4      +
 00000002 00000002 000026C0   A 4      +
 00000002 00000002 000027A0   A 4      +
 00000002 00000002 000027F8   A 4      +
 00000002 00000002 00002800   A 4      +
 00000002 00000002 00002868   A 4      +
 00000002 00000002 00002890   A 4      +
 00000002 00000002 00002898   A 4      +
 00000002 00000023 00002908   A 4      +
 00000002 00000025 00002910   A 4      +
 00000002 00000002 00002918   A 4      +
 00000002 00000002 00002920   A 4      +
 00000002 0000002A 00002928   A 4      +
 00000002 00000002 00002930   A 4      +
 00000002 00000002 00002938   A 4      +
 00000002 00000002 00002940   A 4      +
 00000002 00000002 00002C90   A 4      +
 00000002 00000002 00002CB8   A 4      +
                                                 Relocation Dictionary                                                     Page  533 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00002CC0   A 4      +
 00000002 00000023 00002D70   A 4      +
 00000002 00000002 00002D78   A 4      +
 00000002 00000025 00002D80   A 4      +
 00000002 00000002 00002D88   A 4      +
 00000002 00000002 00002D90   A 4      +
 00000002 00000002 00002E68   A 4      +
 00000002 00000002 00002E70   A 4      +
 00000002 00000002 00002F20   A 4      +
 00000002 00000002 00002F48   A 4      +
 00000002 00000002 00002F50   A 4      +
 00000002 00000014 00003008   A 4      +
 00000002 0000003D 00003010   A 4      +
 00000002 0000003C 00003018   Q 4      +
 00000002 00000002 000030A8   A 4      +
 00000002 00000002 000030D0   A 4      +
 00000002 00000002 000030D8   A 4      +
 00000002 00000036 00003258   A 4      +
 00000002 00000026 00003260   A 4      +
 00000002 0000003D 00003268   A 4      +
 00000002 0000003D 00003270   A 4      +
 00000002 00000002 000032A8   A 4      +
 00000002 00000002 000032D0   A 4      +
 00000002 00000002 000032D8   A 4      +
 00000002 0000003D 00003368   A 4      +
 00000002 0000001A 00003370   A 4      +
 00000002 00000023 00003378   A 4      +
 00000002 00000002 00003380   A 4      +
 00000002 00000025 00003388   A 4      +
 00000002 00000006 00003390   A 4      +
 00000002 0000003D 00003398   A 4      +
 00000002 0000001B 000033A8   A 4      +
 00000002 00000002 000033B0   A 4      +
 00000002 0000001F 000033B8   A 4      +
 00000002 00000016 000033C0   A 4      +
 00000002 00000018 000033C8   A 4      +
 00000002 00000002 000033D0   A 4      +
 00000002 00000012 000033D8   A 4      +
 00000002 00000020 000033E0   A 4      +
 00000002 0000000C 000033E8   A 4      +
 00000002 00000002 000033F0   A 4      +
 00000002 00000002 000033F8   A 4      +
 00000002 0000003D 00003CC8   A 4      +
 00000002 00000002 00003CD0   A 4      +
 00000002 00000002 00003CD8   A 4      +
 00000002 00000002 00003CE0   A 4      +
 00000002 0000000A 00003CE8   A 4      +
 00000002 00000004 00003CF0   A 4      +
 00000002 0000001D 00003CF8   A 4      +
 00000002 00000002 00003E70   A 4      +
 00000002 00000002 00003E98   A 4      +
 00000002 00000002 00003EA0   A 4      +
 00000002 0000003D 00003F40   A 4      +
                                                 Relocation Dictionary                                                     Page  534 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000024 00003F48   A 4      +
 00000002 00000002 00003F50   A 4      +
 00000002 00000010 00003F58   A 4      +
 00000002 0000003D 00003F60   A 4      +
 00000002 00000014 00003F68   A 4      +
 00000002 00000023 00003F70   A 4      +
 00000002 00000002 00003F78   A 4      +
 00000002 00000025 00003F80   A 4      +
 00000002 00000002 00003F88   A 4      +
 00000002 00000002 00003F90   A 4      +
 00000002 00000006 00003F98   A 4      +
 00000002 0000003D 00004838   A 4      +
 00000002 00000006 00004840   A 4      +
 00000002 0000003D 00004848   A 4      +
 00000002 00000031 00004858   A 4      +
 00000002 00000002 00004860   A 4      +
 00000002 00000010 00004868   A 4      +
 00000002 00000014 00004870   A 4      +
 00000002 00000023 00004878   A 4      +
 00000002 00000002 00004880   A 4      +
 00000002 00000025 00004888   A 4      +
 00000002 00000002 00004890   A 4      +
 00000002 00000002 00004898   A 4      +
 00000002 00000024 000048A0   A 4      +
 00000002 00000002 00005308   A 4      +
 00000002 00000010 00005310   A 4      +
 00000002 0000003D 00005318   A 4      +
 00000002 0000003D 00005320   A 4      +
 00000002 00000014 00005328   A 4      +
 00000002 00000023 00005330   A 4      +
 00000002 00000002 00005338   A 4      +
 00000002 00000025 00005340   A 4      +
 00000002 00000002 00005348   A 4      +
 00000002 00000002 00005350   A 4      +
 00000002 00000006 00005358   A 4      +
 00000002 0000002C 00005368   A 4      +
 00000002 0000001D 00005370   A 4      +
 00000002 00000024 00005378   A 4      +
 00000002 00000010 00005D00   A 4      +
 00000002 0000003D 00005D08   A 4      +
 00000002 0000003D 00005D10   A 4      +
 00000002 00000014 00005D18   A 4      +
 00000002 00000023 00005D20   A 4      +
 00000002 00000002 00005D28   A 4      +
 00000002 00000025 00005D30   A 4      +
 00000002 00000002 00005D38   A 4      +
 00000002 00000002 00005D40   A 4      +
 00000002 00000002 00005D48   A 4      +
 00000002 00000006 00005D50   A 4      +
 00000002 00000002 00005D60   A 4      +
 00000002 00000024 00005D68   A 4      +
 00000002 0000002B 00005D70   A 4      +
 00000002 00000023 00006638   A 4      +
                                                 Relocation Dictionary                                                     Page  535 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00006640   A 4      +
 00000002 00000025 00006648   A 4      +
 00000002 00000002 00006650   A 4      +
 00000002 00000002 00006658   A 4      +
 00000002 00000002 00006660   A 4      +
 00000002 0000003D 00006668   A 4      +
 00000002 00000006 00006670   A 4      +
 00000002 0000003D 00006678   A 4      +
 00000002 0000002B 00006680   A 4      +
 00000002 00000010 00006688   A 4      +
 00000002 00000014 00006690   A 4      +
 00000002 00000002 00006698   A 4      +
 00000002 00000021 000066A0   A 4      +
 00000002 00000002 000066A8   A 4      +
 00000002 00000002 000066B0   A 4      +
 00000002 00000002 00006D70   A 4      +
 00000002 00000002 00006D98   A 4      +
 00000002 00000002 00006DA0   A 4      +
 00000002 00000002 00006E28   A 4      +
 00000002 00000010 00006E30   A 4      +
 00000002 0000003D 00006E38   A 4      +
 00000002 0000003D 00006E40   A 4      +
 00000002 00000014 00006E48   A 4      +
 00000002 00000023 00006E50   A 4      +
 00000002 00000002 00006E58   A 4      +
 00000002 00000025 00006E60   A 4      +
 00000002 00000002 00006E68   A 4      +
 00000002 00000002 00006E70   A 4      +
 00000002 00000002 00006E78   A 4      +
 00000002 00000006 00006E80   A 4      +
 00000002 00000024 00006E90   A 4      +
 00000002 00000006 00007698   A 4      +
 00000002 0000003D 000076A0   A 4      +
 00000002 0000003D 000076A8   A 4      +
 00000002 00000002 000076B8   A 4      +
 00000002 00000010 000076C0   A 4      +
 00000002 00000014 000076C8   A 4      +
 00000002 00000023 000076D0   A 4      +
 00000002 00000002 000076D8   A 4      +
 00000002 00000025 000076E0   A 4      +
 00000002 00000002 000076E8   A 4      +
 00000002 00000002 000076F0   A 4      +
 00000002 00000002 000076F8   A 4      +
 00000002 00000024 00007700   A 4      +
 00000002 00000006 00008078   A 4      +
 00000002 0000003D 00008080   A 4      +
 00000002 0000003D 00008088   A 4      +
 00000002 00000010 00008098   A 4      +
 00000002 00000023 000080A0   A 4      +
 00000002 00000002 000080A8   A 4      +
 00000002 00000025 000080B0   A 4      +
 00000002 00000002 000080B8   A 4      +
 00000002 00000002 000080C0   A 4      +
                                                 Relocation Dictionary                                                     Page  536 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000024 000080C8   A 4      +
 00000002 00000002 000080D0   A 4      +
 00000002 00000014 000080D8   A 4      +
 00000002 0000003D 00008AD0   A 4      +
 00000002 00000006 00008AD8   A 4      +
 00000002 0000003D 00008AE0   A 4      +
 00000002 00000010 00008AF0   A 4      +
 00000002 00000023 00008AF8   A 4      +
 00000002 00000002 00008B00   A 4      +
 00000002 00000025 00008B08   A 4      +
 00000002 00000002 00008B10   A 4      +
 00000002 00000002 00008B18   A 4      +
 00000002 00000024 00008B20   A 4      +
 00000002 00000002 00008B28   A 4      +
 00000002 00000014 00008B30   A 4      +
 00000002 00000023 00009550   A 4      +
 00000002 00000002 00009558   A 4      +
 00000002 00000025 00009560   A 4      +
 00000002 00000006 00009568   A 4      +
 00000002 0000003D 00009570   A 4      +
 00000002 00000002 00009578   A 4      +
 00000002 00000022 00009588   A 4      +
 00000002 00000002 00009590   A 4      +
 00000002 00000002 000095A0   A 4      +
 00000002 00000010 000095A8   A 4      +
 00000002 0000003D 000095B0   A 4      +
 00000002 00000014 000095B8   A 4      +
 00000002 00000002 000095C0   A 4      +
 00000002 00000002 000095C8   A 4      +
 00000002 00000002 000095D0   A 4      +
 00000002 0000002B 000095E0   A 4      +
 00000002 00000006 00009EC8   A 4      +
 00000002 0000003D 00009ED0   A 4      +
 00000002 0000003D 00009ED8   A 4      +
 00000002 00000002 00009EE8   A 4      +
 00000002 00000010 00009EF0   A 4      +
 00000002 00000014 00009EF8   A 4      +
 00000002 00000023 00009F00   A 4      +
 00000002 00000002 00009F08   A 4      +
 00000002 00000025 00009F10   A 4      +
 00000002 00000002 00009F18   A 4      +
 00000002 00000002 00009F20   A 4      +
 00000002 00000002 00009F28   A 4      +
 00000002 0000002B 00009F30   A 4      +
 00000002 00000021 0000A7C0   A 4      +
 00000002 00000002 0000A7C8   A 4      +
 00000002 00000002 0000A7D0   A 4      +
 00000002 00000002 0000A9F0   A 4      +
 00000002 00000002 0000AA18   A 4      +
 00000002 00000002 0000AA20   A 4      +
 00000002 00000002 0000AAA8   A 4      +
 00000002 00000023 0000AAB0   A 4      +
 00000002 00000002 0000AAB8   A 4      +
                                                 Relocation Dictionary                                                     Page  537 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000025 0000AAC0   A 4      +
 00000002 00000006 0000AAC8   A 4      +
 00000002 0000003D 0000AAD0   A 4      +
 00000002 00000002 0000AAD8   A 4      +
 00000002 00000024 0000AAE0   A 4      +
 00000002 00000010 0000AAE8   A 4      +
 00000002 0000003D 0000AAF0   A 4      +
 00000002 00000014 0000AAF8   A 4      +
 00000002 00000002 0000AB00   A 4      +
 00000002 00000002 0000AB08   A 4      +
 00000002 00000002 0000AB10   A 4      +
 00000002 00000002 0000AB18   A 4      +
 00000002 00000002 0000B118   A 4      +
 00000002 00000002 0000B140   A 4      +
 00000002 00000002 0000B148   A 4      +
 00000002 00000024 0000B1D0   A 4      +
 00000002 00000002 0000B1D8   A 4      +
 00000002 00000010 0000B1E0   A 4      +
 00000002 0000003D 0000B1E8   A 4      +
 00000002 0000003D 0000B1F0   A 4      +
 00000002 00000014 0000B1F8   A 4      +
 00000002 00000023 0000B200   A 4      +
 00000002 00000002 0000B208   A 4      +
 00000002 00000025 0000B210   A 4      +
 00000002 00000002 0000B218   A 4      +
 00000002 00000002 0000B220   A 4      +
 00000002 00000006 0000B228   A 4      +
 00000002 00000006 0000BAD8   A 4      +
 00000002 0000003D 0000BAE0   A 4      +
 00000002 00000024 0000BAF0   A 4      +
 00000002 00000002 0000BAF8   A 4      +
 00000002 00000010 0000BB00   A 4      +
 00000002 0000003D 0000BB08   A 4      +
 00000002 00000014 0000BB10   A 4      +
 00000002 00000023 0000BB18   A 4      +
 00000002 00000002 0000BB20   A 4      +
 00000002 00000025 0000BB28   A 4      +
 00000002 00000002 0000BB30   A 4      +
 00000002 00000002 0000BB38   A 4      +
 00000002 00000031 0000BB48   A 4      +
 00000002 00000010 0000C598   A 4      +
 00000002 0000003D 0000C5A0   A 4      +
 00000002 0000003D 0000C5A8   A 4      +
 00000002 00000014 0000C5B0   A 4      +
 00000002 00000023 0000C5B8   A 4      +
 00000002 00000002 0000C5C0   A 4      +
 00000002 00000025 0000C5C8   A 4      +
 00000002 00000002 0000C5D0   A 4      +
 00000002 00000002 0000C5D8   A 4      +
 00000002 00000002 0000C5E0   A 4      +
 00000002 00000006 0000C5E8   A 4      +
 00000002 0000002D 0000C5F8   A 4      +
 00000002 0000001D 0000C600   A 4      +
                                                 Relocation Dictionary                                                     Page  538 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000024 0000C608   A 4      +
 00000002 00000002 0000C610   A 4      +
 00000002 00000010 0000CF68   A 4      +
 00000002 0000003D 0000CF70   A 4      +
 00000002 0000003D 0000CF78   A 4      +
 00000002 00000014 0000CF80   A 4      +
 00000002 00000023 0000CF88   A 4      +
 00000002 00000002 0000CF90   A 4      +
 00000002 00000025 0000CF98   A 4      +
 00000002 00000002 0000CFA0   A 4      +
 00000002 00000002 0000CFA8   A 4      +
 00000002 00000002 0000CFB0   A 4      +
 00000002 00000006 0000CFB8   A 4      +
 00000002 00000024 0000CFC8   A 4      +
 00000002 00000002 0000D840   A 4      +
 00000002 00000025 0000D848   A 4      +
 00000002 00000002 0000D850   A 4      +
 00000002 00000002 0000D858   A 4      +
 00000002 00000002 0000D860   A 4      +
 00000002 0000003D 0000D868   A 4      +
 00000002 00000006 0000D870   A 4      +
 00000002 0000003D 0000D878   A 4      +
 00000002 00000024 0000D888   A 4      +
 00000002 00000010 0000D890   A 4      +
 00000002 00000014 0000D898   A 4      +
 00000002 00000023 0000D8A0   A 4      +
 00000002 00000006 0000E1F0   A 4      +
 00000002 0000003D 0000E1F8   A 4      +
 00000002 0000003D 0000E200   A 4      +
 00000002 00000002 0000E210   A 4      +
 00000002 00000002 0000E218   A 4      +
 00000002 00000010 0000E220   A 4      +
 00000002 00000014 0000E228   A 4      +
 00000002 00000023 0000E230   A 4      +
 00000002 00000002 0000E238   A 4      +
 00000002 00000025 0000E240   A 4      +
 00000002 00000002 0000E248   A 4      +
 00000002 00000024 0000E250   A 4      +
 00000002 0000002B 0000E258   A 4      +
 00000002 00000020 0000E260   A 4      +
 00000002 00000002 0000E268   A 4      +
 00000002 0000002E 0000E270   A 4      +
 00000002 0000003D 0000EC08   A 4      +
 00000002 00000006 0000EC10   A 4      +
 00000002 0000003D 0000EC18   A 4      +
 00000002 00000002 0000EC20   A 4      +
 00000002 0000002F 0000EC28   A 4      +
 00000002 00000002 0000EC30   A 4      +
 00000002 00000002 0000ED40   A 4      +
 00000002 00000002 0000ED68   A 4      +
 00000002 00000002 0000ED70   A 4      +
 00000002 00000002 0000EDF8   A 4      +
 00000002 00000027 0000EE00   A 4      +
                                                 Relocation Dictionary                                                     Page  539 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 0000EE08   A 4      +
 00000002 00000010 0000EE10   A 4      +
 00000002 0000003D 0000EE18   A 4      +
 00000002 0000003D 0000EE20   A 4      +
 00000002 00000014 0000EE28   A 4      +
 00000002 00000023 0000EE30   A 4      +
 00000002 00000002 0000EE38   A 4      +
 00000002 00000025 0000EE40   A 4      +
 00000002 00000002 0000EE48   A 4      +
 00000002 00000006 0000EE50   A 4      +
 00000002 00000024 0000EE60   A 4      +
 00000002 0000001D 0000EE68   A 4      +
 00000002 00000010 0000F820   A 4      +
 00000002 0000003D 0000F828   A 4      +
 00000002 0000003D 0000F830   A 4      +
 00000002 00000014 0000F838   A 4      +
 00000002 00000023 0000F840   A 4      +
 00000002 00000002 0000F848   A 4      +
 00000002 00000025 0000F850   A 4      +
 00000002 00000002 0000F858   A 4      +
 00000002 00000002 0000F860   A 4      +
 00000002 00000002 0000F868   A 4      +
 00000002 00000006 0000F870   A 4      +
 00000002 00000024 0000F878   A 4      +
 00000002 00000002 0000FC98   A 4      +
 00000002 00000002 0000FCC0   A 4      +
 00000002 00000002 0000FCC8   A 4      +
 00000002 00000002 0000FD80   A 4      +
 00000002 00000002 0000FD88   A 4      +
 00000002 00000002 0000FD90   A 4      +
 00000002 00000002 0000FD98   A 4      +
 00000002 00000002 0000FE70   A 4      +
 00000002 00000002 0000FE98   A 4      +
 00000002 00000002 0000FEA0   A 4      +
 00000002 00000002 0000FFC8   A 4      +
 00000002 0000003B 0000FFD0   A 4      +
 00000002 00000002 00010000   A 4      +
 00000002 00000002 00010028   A 4      +
 00000002 00000002 00010030   A 4      +
 00000002 00000002 00010208   A 4      +
 00000002 00000002 00010210   A 4      +
 00000002 00000023 00010218   A 4      +
 00000002 00000002 00010220   A 4      +
 00000002 00000025 00010228   A 4      +
 00000002 00000006 00010230   A 4      +
 00000002 0000003D 00010238   A 4      +
 00000002 0000001D 00010240   A 4      +
 00000002 00000002 00010248   A 4      +
 00000002 00000002 00010250   A 4      +
 00000002 00000002 00010258   A 4      +
 00000002 00000002 00010260   A 4      +
 00000002 00000002 00010268   A 4      +
 00000002 00000024 00010270   A 4      +
                                                 Relocation Dictionary                                                     Page  540 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00010640   A 4      +
 00000002 00000002 00010668   A 4      +
 00000002 00000002 00010670   A 4      +
 00000002 00000002 00010818   A 4      +
 00000002 00000002 00010820   A 4      +
 00000002 00000002 00010828   A 4      +
 00000002 00000002 00010830   A 4      +
 00000002 00000002 00010880   A 4      +
 00000002 00000002 00010888   A 4      +
 00000002 00000002 00010950   A 4      +
 00000002 00000002 00010958   A 4      +
 00000002 00000002 000109F8   A 4      +
 00000002 00000002 00010A20   A 4      +
 00000002 00000002 00010A28   A 4      +
 00000002 0000001C 00010AF8   A 4      +
 00000002 00000002 00010B00   A 4      +
 00000002 00000002 00010B30   A 4      +
 00000002 00000002 00010B58   A 4      +
 00000002 00000002 00010B60   A 4      +
 00000002 00000002 00010C78   A 4      +
 00000002 00000007 00010C80   A 4      +
 00000002 00000002 00010C88   A 4      +
 00000002 00000011 00010C90   A 4      +
 00000002 00000002 00010C98   A 4      +
 00000002 00000002 00010CD0   A 4      +
 00000002 00000002 00010CF8   A 4      +
 00000002 00000002 00010D00   A 4      +
 00000002 0000001C 00010DE0   A 4      +
 00000002 00000003 00010DE8   A 4      +
 00000002 00000002 00010DF0   A 4      +
 00000002 00000002 00010E30   A 4      +
 00000002 00000002 00010E58   A 4      +
 00000002 00000002 00010E60   A 4      +
 00000002 00000002 00010F38   A 4      +
 00000002 00000002 00010F70   A 4      +
 00000002 00000002 00010F98   A 4      +
 00000002 00000002 00010FA0   A 4      +
 00000002 00000002 00011038   A 4      +
 00000002 00000002 00011040   A 4      +
 00000002 0000001E 00011048   A 4      +
 00000002 00000002 00011140   A 4      +
 00000002 00000002 00011168   A 4      +
 00000002 00000002 00011170   A 4      +
 00000002 00000002 00011248   A 4      +
 00000002 00000002 00011280   A 4      +
 00000002 00000002 000112A8   A 4      +
 00000002 00000002 000112B0   A 4      +
 00000002 00000002 00011388   A 4      +
 00000002 00000002 000113C0   A 4      +
 00000002 00000002 000113E8   A 4      +
 00000002 00000002 000113F0   A 4      +
 00000002 00000002 00011598   A 4      +
 00000002 00000002 000115A0   A 4      +
                                                 Relocation Dictionary                                                     Page  541 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000011 000115A8   A 4      +
 00000002 00000013 000115B0   A 4      +
 00000002 00000002 000115B8   A 4      +
 00000002 00000015 000115C0   A 4      +
 00000002 00000002 000115F0   A 4      +
 00000002 00000002 00011618   A 4      +
 00000002 00000002 00011620   A 4      +
 00000002 0000001E 00011688   A 4      +
 00000002 00000019 00011690   A 4      +
 00000002 00000002 00011698   A 4      +
 00000002 00000002 000116A0   A 4      +
 00000002 00000002 00011780   A 4      +
 00000002 00000002 000117A8   A 4      +
 00000002 00000002 000117B0   A 4      +
 00000002 00000002 00011A18   A 4      +
 00000002 00000002 00011A20   A 4      +
 00000002 00000002 00011A28   A 4      +
 00000002 00000002 00011A30   A 4      +
 00000002 00000009 00011A38   A 4      +
 00000002 0000003D 00011A40   A 4      +
 00000002 0000003D 00011A48   A 4      +
 00000002 00000038 00011A50   Q 4      +
 00000002 00000039 00011A54   Q 4      +
 00000002 00000020 00011A58   A 4      +
 00000002 00000002 00011A68   A 4      +
 00000002 00000009 00012148   A 4      +
 00000002 0000003D 00012150   A 4      +
 00000002 0000003D 00012158   A 4      +
 00000002 00000038 00012160   Q 4      +
 00000002 00000039 00012164   Q 4      +
 00000002 00000020 00012168   A 4      +
 00000002 00000002 00012170   A 4      +
 00000002 00000002 00012178   A 4      +
 00000002 00000002 00012188   A 4      +
 00000040 0000003C 00013E1C   Q 4      +
 00000040 0000003C 00013F3C   Q 4      +
 00000040 0000003C 00013FFC   Q 4      +
 00000040 0000003C 00014024   Q 4      +
 00000040 0000003C 0001404C   Q 4      +
 00000040 0000003D 00014058   A 4      +
 00000040 0000003C 00014074   Q 4      +
 00000040 0000003D 00014080   A 4      +
 00000040 0000003C 0001409C   Q 4      +
 00000040 0000003D 000140A8   A 4      +
 00000040 0000003C 000140C4   Q 4      +
 00000040 0000003D 000140D0   A 4      +
 00000040 0000003C 000140EC   Q 4      +
 00000040 0000003D 000140F8   A 4      +
 00000040 0000003C 00014114   Q 4      +
 00000040 0000003D 00014120   A 4      +
 00000040 0000003C 0001413C   Q 4      +
 00000040 0000003D 00014148   A 4      +
 00000040 0000003C 00014164   Q 4      +
                                                 Relocation Dictionary                                                     Page  542 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000040 0000003D 00014170   A 4      +
 00000040 0000003C 0001418C   Q 4      +
 00000040 0000003D 00014198   A 4      +
 00000040 0000003C 000141B4   Q 4      +
 00000040 0000003D 000141C0   A 4      +
 00000040 0000003C 000141DC   Q 4      +
 00000040 0000003D 000141E8   A 4      +
 00000040 0000003C 00014204   Q 4      +
 00000040 0000003D 00014210   A 4      +
 00000040 0000003C 0001422C   Q 4      +
 00000040 0000003D 00014238   A 4      +
 00000040 0000003C 00014254   Q 4      +
 00000040 0000003D 00014260   A 4      +
 00000040 0000003C 0001427C   Q 4      +
 00000040 0000003D 00014288   A 4      +
 00000040 0000003C 000142A4   Q 4      +
 00000040 0000003D 000142B0   A 4      +
 00000040 0000003C 000142CC   Q 4      +
 00000040 0000003D 000142D8   A 4      +
 00000040 0000003C 000142F4   Q 4      +
 00000040 0000003D 00014300   A 4      +
 00000040 0000003C 0001431C   Q 4      +
 00000040 0000003D 00014328   A 4      +
 00000040 0000003C 00014344   Q 4      +
 00000040 0000003D 00014350   A 4      +
 00000040 0000003C 0001436C   Q 4      +
 00000040 0000003D 00014378   A 4      +
 00000040 0000003C 00014394   Q 4      +
 00000040 0000003D 000143A0   A 4      +
 00000040 0000003C 000143BC   Q 4      +
 00000040 0000003D 000143C8   A 4      +
 00000040 0000003C 000143E4   Q 4      +
 00000040 0000003D 000143F0   A 4      +
 00000040 0000003C 0001440C   Q 4      +
 00000040 0000003D 00014418   A 4      +
 00000040 0000003C 00014434   Q 4      +
 00000040 0000003D 00014440   A 4      +
 00000040 0000003C 0001445C   Q 4      +
 00000040 0000003D 00014468   A 4      +
 00000040 0000003C 00014484   Q 4      +
 00000040 0000003D 00014490   A 4      +
 00000040 0000003C 000144AC   Q 4      +
 00000040 0000003D 000144B8   A 4      +
 00000040 0000003C 000144D4   Q 4      +
 00000040 0000003D 000144E0   A 4      +
 00000040 0000003C 000144FC   Q 4      +
 00000040 0000003D 00014508   A 4      +
 00000040 0000003C 00014524   Q 4      +
 00000040 0000003D 00014530   A 4      +
 00000040 0000003C 0001454C   Q 4      +
 00000040 0000003D 00014558   A 4      +
 00000040 0000003C 00014574   Q 4      +
 00000040 0000003D 00014580   A 4      +
                                                 Relocation Dictionary                                                     Page  543 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000040 0000003C 0001459C   Q 4      +
 00000040 0000003D 000145A8   A 4      +
 00000040 0000003C 000145C4   Q 4      +
 00000040 0000003D 000145D0   A 4      +
 00000040 0000003C 000145EC   Q 4      +
 00000040 0000003D 000145F8   A 4      +
 00000040 0000003C 00014614   Q 4      +
 00000040 0000003D 00014620   A 4      +
 00000040 0000003C 0001463C   Q 4      +
 00000040 0000003D 00014648   A 4      +
 00000040 0000003C 00014664   Q 4      +
 00000040 0000003D 00014670   A 4      +
 00000040 0000003C 0001468C   Q 4      +
 00000040 0000003D 00014698   A 4      +
 00000040 0000003C 000146B4   Q 4      +
 00000040 0000003D 000146C0   A 4      +
 00000040 0000003C 000146DC   Q 4      +
 00000040 0000003D 000146E8   A 4      +
 00000040 0000003C 00014704   Q 4      +
 00000040 0000003D 00014710   A 4      +
 00000040 0000003C 0001472C   Q 4      +
 00000040 0000003D 00014738   A 4      +
 00000040 0000003C 00014754   Q 4      +
 00000040 0000003D 00014760   A 4      +
 00000040 0000003C 0001477C   Q 4      +
 00000040 0000003D 00014788   A 4      +
 00000040 0000003C 000147A4   Q 4      +
 00000040 0000003D 000147B0   A 4      +
 00000040 0000003C 000147CC   Q 4      +
 00000040 0000003D 000147D8   A 4      +
 00000040 0000003C 000147F4   Q 4      +
 00000040 0000003D 00014800   A 4      +
 00000040 0000003C 0001481C   Q 4      +
 00000040 0000003D 00014828   A 4      +
 00000040 0000003C 00014844   Q 4      +
 00000040 0000003D 00014850   A 4      +
 00000040 0000003C 0001486C   Q 4      +
 00000040 0000003D 00014878   A 4      +
 00000040 0000003C 00014894   Q 4      +
 00000040 0000003D 000148A0   A 4      +
 00000040 0000003C 000148BC   Q 4      +
 00000040 0000003D 000148C8   A 4      +
 00000040 0000003C 000148E4   Q 4      +
 00000040 0000003D 000148F0   A 4      +
 00000040 0000003C 0001490C   Q 4      +
 00000040 0000003D 00014918   A 4      +
 00000040 0000003C 00014934   Q 4      +
 00000040 0000003D 00014940   A 4      +
 00000040 0000003C 0001495C   Q 4      +
 00000040 0000003D 00014968   A 4      +
 00000040 0000003C 00014984   Q 4      +
 00000040 0000003D 00014990   A 4      +
 00000040 0000003C 000149AC   Q 4      +
                                                 Relocation Dictionary                                                     Page  544 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000040 0000003D 000149B8   A 4      +
 00000040 0000003C 000149D4   Q 4      +
 00000040 0000003D 000149E0   A 4      +
 00000040 0000003C 000149FC   Q 4      +
 00000040 0000003D 00014A08   A 4      +
 00000040 0000003C 00014A24   Q 4      +
 00000040 0000003D 00014A30   A 4      +
 00000040 0000003C 00014A4C   Q 4      +
 00000040 0000003D 00014A58   A 4      +
 00000040 0000003C 00014A74   Q 4      +
 00000040 0000003D 00014A80   A 4      +
 00000040 0000003C 00014A9C   Q 4      +
 00000040 0000003D 00014AA8   A 4      +
 00000040 0000003C 00014AC4   Q 4      +
 00000040 0000003D 00014AD0   A 4      +
 00000040 0000003C 00014AEC   Q 4      +
 00000040 0000003D 00014AF8   A 4      +
 00000040 0000003C 00014B14   Q 4      +
 00000040 0000003D 00014B20   A 4      +
 00000040 0000003C 00014B3C   Q 4      +
 00000040 0000003D 00014B48   A 4      +
 00000040 0000003C 00014B64   Q 4      +
 00000040 0000003D 00014B70   A 4      +
 00000040 0000003C 00014B8C   Q 4      +
 00000040 0000003D 00014B98   A 4      +
 00000040 0000003C 00014BB4   Q 4      +
 00000040 0000003D 00014BC0   A 4      +
 00000040 0000003C 00014BDC   Q 4      +
 00000040 0000003D 00014BE8   A 4      +
 00000040 0000003C 00014C04   Q 4      +
 00000040 0000003D 00014C10   A 4      +
 00000040 0000003C 00014C2C   Q 4      +
 00000040 0000003D 00014C38   A 4      +
 00000040 0000003C 00014C54   Q 4      +
 00000040 0000003D 00014C60   A 4      +
 00000040 0000003C 00014C7C   Q 4      +
 00000040 0000003D 00014C88   A 4      +
 00000040 0000003C 00014CA4   Q 4      +
 00000040 0000003D 00014CB0   A 4      +
 00000040 0000003C 00014CCC   Q 4      +
 00000040 0000003D 00014CD8   A 4      +
 00000040 0000003C 00014CF4   Q 4      +
 00000040 0000003D 00014D00   A 4      +
 00000040 0000003C 00014D1C   Q 4      +
 00000040 0000003D 00014D28   A 4      +
 00000040 0000003C 00014D44   Q 4      +
 00000040 0000003D 00014D50   A 4      +
 00000040 0000003C 00014D6C   Q 4      +
 00000040 0000003D 00014D78   A 4      +
 00000040 0000003C 00014D94   Q 4      +
 00000040 0000003D 00014DA0   A 4      +
 00000040 0000003C 00014DBC   Q 4      +
 00000040 0000003D 00014DC8   A 4      +
                                                 Relocation Dictionary                                                     Page  545 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000040 0000003C 00014DE4   Q 4      +
 00000040 0000003D 00014DF0   A 4      +
 00000040 0000003C 00014E0C   Q 4      +
 00000040 0000003D 00014E18   A 4      +
 00000040 0000003C 00014E34   Q 4      +
 00000040 0000003D 00014E40   A 4      +
                                                 DSECT Cross Reference                                                     Page  546 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
@AUTO#rd_atomic32_add
         000000AC  FFFFFFFF  00254
@AUTO#rd_atomic32_sub
         000000AC  FFFFFFFE  00381
@AUTO#rd_atomic64_add
         000000B0  FFFFFFFD  00508
@AUTO#rd_avg_add
         000000A8  FFFFFFF2  01837
@AUTO#rd_avl_find
         000000A8  FFFFFFF4  01603
@AUTO#rd_avl_insert
         000000A8  FFFFFFF5  01456
@AUTO#rd_avl_rdlock
         000000A8  FFFFFFF9  00984
@AUTO#rd_avl_rdunlock
         000000A8  FFFFFFF7  01200
@AUTO#rd_avl_wrlock
         000000A8  FFFFFFF8  01092
@AUTO#rd_avl_wrunlock
         000000A8  FFFFFFF6  01308
@AUTO#rd_free
         000000A8  FFFFFFFB  00739
@AUTO#rd_kafka_$Api$Key2str
         000000A8  FFFFFFEE  02356
@AUTO#rd_kafka_aborted_txn_cmp_by_pid
         000000A8  FFFFFFD0  22701
@AUTO#rd_kafka_aborted_txn_node_destroy
         000000A8  FFFFFFCF  22817
@AUTO#rd_kafka_aborted_txns_add
         000000A8  FFFFFFC8  23776
@AUTO#rd_kafka_aborted_txns_destroy
         000000A8  FFFFFFCD  23078
@AUTO#rd_kafka_aborted_txns_get_offset
         000000A8  FFFFFFC9  23584
@AUTO#rd_kafka_aborted_txns_new
         000000A8  FFFFFFCE  22956
@AUTO#rd_kafka_aborted_txns_next_offset
         000000B0  FFFFFFCB  23363
@AUTO#rd_kafka_aborted_txns_offsets_for_pid
         00000100  FFFFFFCC  23189
@AUTO#rd_kafka_aborted_txns_pop_offset
         000000A8  FFFFFFCA  23473
@AUTO#rd_kafka_aborted_txns_sort
         000000AC  FFFFFFC7  23919
@AUTO#rd_kafka_compression2str
         000000A8  FFFFFFDD  04965
@AUTO#rd_kafka_msgset_parse
         000001E8  FFFFFFD2  22511
@AUTO#rd_kafka_msgset_reader
         000000C8  FFFFFFD5  21645
@AUTO#rd_kafka_msgset_reader_decompress
         00000238  FFFFFFDB  06201
@AUTO#rd_kafka_msgset_reader_init
                                                 DSECT Cross Reference                                                     Page  547 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
         000000A8  FFFFFFDC  05138
@AUTO#rd_kafka_msgset_reader_msg_v0_1
         00000348  FFFFFFDA  09881
@AUTO#rd_kafka_msgset_reader_msg_v2
         00000368  FFFFFFD9  14669
@AUTO#rd_kafka_msgset_reader_msgs_v2
         000002A8  FFFFFFD8  15367
@AUTO#rd_kafka_msgset_reader_peek_msg_version
         000002C4  FFFFFFD6  21410
@AUTO#rd_kafka_msgset_reader_postproc
         000000A8  FFFFFFD4  21802
@AUTO#rd_kafka_msgset_reader_run
         000001B0  FFFFFFD3  22317
@AUTO#rd_kafka_msgset_reader_v2
         00000388  FFFFFFD7  20047
@AUTO#rd_kafka_offset_cmp
         000000A8  FFFFFFD1  22607
@AUTO#rd_kafka_op_cmp_prio
         000000A8  FFFFFFE5  03489
@AUTO#rd_kafka_q_concat0
         000000AC  FFFFFFE0  04555
@AUTO#rd_kafka_q_destroy_owner
         000000A8  FFFFFFE9  03013
@AUTO#rd_kafka_q_destroy0
         000000AC  FFFFFFEA  02908
@AUTO#rd_kafka_q_disable0
         000000A8  FFFFFFEB  02722
@AUTO#rd_kafka_q_enq
         000000A8  FFFFFFE2  04088
@AUTO#rd_kafka_q_enq0
         000000A8  FFFFFFE4  03718
@AUTO#rd_kafka_q_enq1
         000000A8  FFFFFFE3  03979
@AUTO#rd_kafka_q_fwd_get
         000000A8  FFFFFFE7  03233
@AUTO#rd_kafka_q_io_event
         000000A8  FFFFFFE6  03396
@AUTO#rd_kafka_q_keep
         000000A8  FFFFFFEC  02599
@AUTO#rd_kafka_q_last
         000000A8  FFFFFFDE  04820
@AUTO#rd_kafka_q_len
         000000AC  FFFFFFDF  04714
@AUTO#rd_kafka_q_mark_served
         000000A8  FFFFFFE1  04168
@AUTO#rd_kafka_q_reset
         000000A8  FFFFFFE8  03096
@AUTO#rd_list_cnt
         000000A8  FFFFFFF3  01674
@AUTO#rd_malloc
         000000A8  FFFFFFFC  00636
@AUTO#rd_refcnt_sub0
         000000AC  FFFFFFFA  00875
                                                 DSECT Cross Reference                                                     Page  548 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
@AUTO#rd_slice_abs_offset
         000000A8  FFFFFFF1  01923
@AUTO#rd_slice_offset
         000000A8  FFFFFFF0  02013
@AUTO#rd_slice_read_varint
         000000B0  FFFFFFEF  02139
@AUTO#rd_strlcpy
         000000B0  FFFFFFED  02480
@AUTO#unittest_aborted_txns
         000000B0  FFFFFFC6  25288
                                          Macro and Copy Code Source Summary                                               Page  549 
Source                                                    Members                                     DASM V1.95.14 2021/04/30 15:35 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  550 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   191  0000009E  00000002 USING  ORDINARY    00000060 00001000 00000002  12 000E0    216 @REGION_733_1,12
   249  00000148  00000002 DROP                                           12              12
   318  000001E6  00000002 USING  ORDINARY    000001A8 00001000 00000002  12 000E0    343 @REGION_734_1,12
   376  00000290  00000002 DROP                                           12              12
   445  0000032E  00000002 USING  ORDINARY    000002F0 00001000 00000002  12 000E8    470 @REGION_738_1,12
   503  000003E0  00000002 DROP                                           12              12
   572  00000476  00000002 USING  ORDINARY    00000438 00001000 00000002  12 00108    598 @REGION_752_1,12
   631  00000548  00000002 DROP                                           12              12
   699  000005DE  00000002 USING  ORDINARY    000005A0 00001000 00000002  12 000A8    706 @REGION_754_1,12
   734  00000650  00000002 DROP                                           12              12
   802  000006EE  00000002 USING  ORDINARY    000006B0 00001000 00000002  12 00118    836 @REGION_758_1,12
   870  000007D0  00000002 DROP                                           12              12
   939  0000086E  00000002 USING  ORDINARY    00000830 00001000 00000002  12 000B8    950 @REGION_762_1,12
   979  000008F0  00000002 DROP                                           12              12
  1047  0000098E  00000002 USING  ORDINARY    00000950 00001000 00000002  12 000B8   1058 @REGION_763_1,12
  1087  00000A10  00000002 DROP                                           12              12
  1155  00000AAE  00000002 USING  ORDINARY    00000A70 00001000 00000002  12 000B8   1166 @REGION_764_1,12
  1195  00000B30  00000002 DROP                                           12              12
  1263  00000BCE  00000002 USING  ORDINARY    00000B90 00001000 00000002  12 000B8   1274 @REGION_765_1,12
  1303  00000C50  00000002 DROP                                           12              12
  1371  00000CEE  00000002 USING  ORDINARY    00000CB0 00001000 00000002  12 000F8   1422 @REGION_767_1,12
  1451  00000DF4  00000002 DROP                                           12              12
  1519  00000E8E  00000002 USING  ORDINARY    00000E50 00001000 00000002  12 000DC   1570 @REGION_771_1,12
  1598  00000F78  00000002 DROP                                           12              12
  1737  00001086  00000002 USING  ORDINARY    00001048 00001000 00000002  12 0011A   1807 @REGION_1272_1,12
  1832  000011AA  00000002 DROP                                           12              12
  1889  0000121A  00000002 USING  ORDINARY    00001210 00001000 00000002  12 0003A   1898 @REGION_1299_1,12
  1918  00001258  00000002 DROP                                           12              12
  1975  000012C2  00000002 USING  ORDINARY    000012B8 00001000 00000002  12 0004A   1986 @REGION_1300_1,12
  2008  00001310  00000002 DROP                                           12              12
  2076  000013B6  00000002 USING  ORDINARY    00001378 00001000 00000002  12 000F0   2102 @REGION_1309_1,12
  2134  00001470  00000002 DROP                                           12              12
  2205  0000150E  00000002 USING  ORDINARY    000014D0 00001000 00000002  12 000F2   2317 @REGION_1327_1,12
  2351  0000160A  00000002 DROP                                           12              12
  2408  00001672  00000002 USING  ORDINARY    00001668 00001000 00000002  12 000A6   2454 @REGION_1397_1,12
  2475  0000171C  00000002 DROP                                           12              12
  2546  000017B6  00000002 USING  ORDINARY    00001778 00001000 00000002  12 000D0   2564 @REGION_1441_1,12
  2594  00001850  00000002 DROP                                           12              12
  2662  000018EE  00000002 USING  ORDINARY    000018B0 00001000 00000002  12 000E0   2687 @REGION_1445_1,12
  2717  00001998  00000002 DROP                                           12              12
  2785  00001A36  00000002 USING  ORDINARY    000019F8 00001000 00000002  12 001A8   2867 @REGION_1448_1,12
  2903  00001BA8  00000002 DROP                                           12              12
  2972  00001C4E  00000002 USING  ORDINARY    00001C10 00001000 00000002  12 000B0   2980 @REGION_1449_1,12
  3008  00001CC8  00000002 DROP                                           12              12
  3159  00001E06  00000002 USING  ORDINARY    00001DC8 00001000 00000002  12 00100   3195 @REGION_1452_1,12
  3228  00001ED0  00000002 DROP                                           12              12
  3296  00001F6E  00000002 USING  ORDINARY    00001F30 00001000 00000002  12 00102   3363 @REGION_1454_1,12
  3391  0000207A  00000002 DROP                                           12              12
  3448  000020EA  00000002 USING  ORDINARY    000020E0 00001000 00000002  12 00042   3467 @REGION_1455_1,12
  3484  00002134  00000002 DROP                                           12              12
  3552  000021CE  00000002 USING  ORDINARY    00002190 00001000 00000002  12 001C2   3678 @REGION_1457_1,12
                                                      Using Map                                                            Page  551 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  3713  000023B8  00000002 DROP                                           12              12
  3781  00002456  00000002 USING  ORDINARY    00002418 00001000 00000002  12 00212   3944 @REGION_1458_1,12
  3974  00002672  00000002 DROP                                           12              12
  4042  0000270E  00000002 USING  ORDINARY    000026D0 00001000 00000002  12 000D0   4055 @REGION_1459_1,12
  4083  000027A8  00000002 DROP                                           12              12
  4140  0000281A  00000002 USING  ORDINARY    00002810 00001000 00000002  12 00024   4146 @REGION_1462_1,12
  4163  00002842  00000002 DROP                                           12              12
  4231  000028E6  00000002 USING  ORDINARY    000028A8 00001000 00000002  12 00382   4521 @REGION_1463_1,12
  4550  00002C72  00000002 DROP                                           12              12
  4619  00002D0E  00000002 USING  ORDINARY    00002CD0 00001000 00000002  12 00106   4681 @REGION_1465_1,12
  4709  00002E22  00000002 DROP                                           12              12
  4767  00002E8A  00000002 USING  ORDINARY    00002E80 00001000 00000002  12 00068   4799 @REGION_1483_1,12
  4815  00002EF6  00000002 DROP                                           12              12
  4883  00002F9E  00000002 USING  ORDINARY    00002F60 00001000 00000002  12 000D6   4935 @REGION_1572_1,12
  4960  0000307E  00000002 DROP                                           12              12
  5028  00003126  00000002 USING  ORDINARY    000030E8 00001000 00000002  12 00188   5087 @REGION_1943_1,12
  5133  00003278  00000002 DROP                                           12              12
  5202  00003326  00000002 USING  ORDINARY    000032E8 00001000 00000002  12 0085A   5396 @REGION_1944_1,12
  5397  000035B2  00000002 DROP                                           12              12
  5398  000035B2  00000002 USING  ORDINARY    00003C4A 00001000 00000002  12 00122   5399 @REGION_1944_2,12
  5400  000035B6  00000002 DROP                                           12              12
  5401  000035B6  00000002 USING  ORDINARY    000032E8 00001000 00000002  12 003F6   5498 @REGION_1944_1,12
  5499  000036DA  00000002 DROP                                           12              12
  5500  000036DA  00000002 USING  ORDINARY    00003C4A 00001000 00000002  12 00122   5501 @REGION_1944_2,12
  5502  000036DE  00000002 DROP                                           12              12
  5503  000036DE  00000002 USING  ORDINARY    000032E8 00001000 00000002  12 0054A   5608 @REGION_1944_1,12
  5609  0000382E  00000002 DROP                                           12              12
  5610  0000382E  00000002 USING  ORDINARY    00003C4A 00001000 00000002  12 00122   5611 @REGION_1944_2,12
  5612  00003832  00000002 DROP                                           12              12
  5613  00003832  00000002 USING  ORDINARY    000032E8 00001000 00000002  12 0085A   5721 @REGION_1944_1,12
  5722  00003988  00000002 DROP                                           12              12
  5723  00003988  00000002 USING  ORDINARY    00003C4A 00001000 00000002  12 00122   5724 @REGION_1944_2,12
  5725  0000398C  00000002 DROP                                           12              12
  5726  0000398C  00000002 USING  ORDINARY    000032E8 00001000 00000002  12 0085A   5779 @REGION_1944_1,12
  5780  000039FA  00000002 DROP                                           12              12
  5781  000039FA  00000002 USING  ORDINARY    00003C4A 00001000 00000002  12 00122   5782 @REGION_1944_2,12
  5783  000039FE  00000002 DROP                                           12              12
  5784  000039FE  00000002 USING  ORDINARY    000032E8 00001000 00000002  12 00830   5871 @REGION_1944_1,12
  5872  00003B22  00000002 DROP                                           12              12
  5873  00003B22  00000002 USING  ORDINARY    00003C4A 00001000 00000002  12 00122   5874 @REGION_1944_2,12
  5875  00003B26  00000002 DROP                                           12              12
  5876  00003B26  00000002 USING  ORDINARY    000032E8 00001000 00000002  12 00918   5957 @REGION_1944_1,12
  5958  00003BFC  00000002 DROP                                           12              12
  5959  00003BFC  00000002 USING  ORDINARY    00003C4A 00001000 00000002  12 000B6   5960 @REGION_1944_2,12
  5961  00003C00  00000002 DROP                                           12              12
  5962  00003C00  00000002 USING  ORDINARY    000032E8 00001000 00000002  12 00110   5990 @REGION_1944_1,12
  5992  00003C4A  00000002 DROP                                           12              12
  5993  00003C4A  00000002 USING  ORDINARY    00003C4A 00001000 00000002  12 001B2   6166 @REGION_1944_2,12
  6195  00003E44  00000002 DROP                                           12              12
  6287  00003EEE  00000002 USING  ORDINARY    00003EB0 00001000 00000002  12 003AE   6548 @REGION_1945_1,12
  6549  0000425A  00000002 DROP                                           12              12
  6550  0000425A  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 00796   6551 @REGION_1945_5,12
  6552  0000425E  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  552 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  6553  0000425E  00000002 USING  ORDINARY    00003EB0 00001000 00000002  12 0066E   6758 @REGION_1945_1,12
  6759  0000451A  00000002 DROP                                           12              12
  6760  0000451A  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 00796   6761 @REGION_1945_5,12
  6762  0000451E  00000002 DROP                                           12              12
  6763  0000451E  00000002 USING  ORDINARY    00003EB0 00001000 00000002  12 006D6   6820 @REGION_1945_1,12
  6821  00004582  00000002 DROP                                           12              12
  6822  00004582  00000002 USING  ORDINARY    00004750 00001000 00000002  12 0015C   6823 @REGION_1945_2,12
  6824  00004586  00000002 DROP                                           12              12
  6825  00004586  00000002 USING  ORDINARY    00003EB0 00001000 00000002  12 0070C   6839 @REGION_1945_1,12
  6840  000045B8  00000002 DROP                                           12              12
  6841  000045B8  00000002 USING  ORDINARY    00004750 00001000 00000002  12 0015C   6842 @REGION_1945_2,12
  6843  000045BC  00000002 DROP                                           12              12
  6844  000045BC  00000002 USING  ORDINARY    00003EB0 00001000 00000002  12 0071C   6848 @REGION_1945_1,12
  6849  000045C8  00000002 DROP                                           12              12
  6850  000045C8  00000002 USING  ORDINARY    00004750 00001000 00000002  12 000D4   6851 @REGION_1945_2,12
  6852  000045CC  00000002 DROP                                           12              12
  6853  000045CC  00000002 USING  ORDINARY    00003EB0 00001000 00000002  12 00890   6952 @REGION_1945_1,12
  6953  0000473C  00000002 DROP                                           12              12
  6954  0000473C  00000002 USING  ORDINARY    00004750 00001000 00000002  12 00000   6955 @REGION_1945_2,12
  6956  00004740  00000002 DROP                                           12              12
  6957  00004740  00000002 USING  ORDINARY    00003EB0 00001000 00000002  12 000F4   6959 @REGION_1945_1,12
  6960  0000474C  00000002 DROP                                           12              12
  6961  0000474C  00000002 USING  ORDINARY    00004750 00001000 00000002  12 0000A   6962 @REGION_1945_2,12
  6963  00004750  00000002 DROP                                           12              12
  6964  00004750  00000002 USING  ORDINARY    00003EB0 00001000 00000002  12 00000        @REGION_1945_1,12
  6966  00004750  00000002 DROP                                           12              12
  6967  00004750  00000002 USING  ORDINARY    00004750 00001000 00000002  12 00100   7014 @REGION_1945_2,12
  7015  00004830  00000002 DROP                                           12              12
  7016  00004830  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 00796   7017 @REGION_1945_5,12
  7018  00004834  00000002 DROP                                           12              12
  7019  00004834  00000002 USING  ORDINARY    00004750 00001000 00000002  12 0043A   7247 @REGION_1945_2,12
  7248  00004B86  00000002 DROP                                           12              12
  7249  00004B86  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 00796   7250 @REGION_1945_5,12
  7251  00004B8A  00000002 DROP                                           12              12
  7252  00004B8A  00000002 USING  ORDINARY    00004750 00001000 00000002  12 006F6   7456 @REGION_1945_2,12
  7457  00004E42  00000002 DROP                                           12              12
  7458  00004E42  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 00796   7459 @REGION_1945_5,12
  7460  00004E46  00000002 DROP                                           12              12
  7461  00004E46  00000002 USING  ORDINARY    00004750 00001000 00000002  12 009B2   7664 @REGION_1945_2,12
  7665  000050FE  00000002 DROP                                           12              12
  7666  000050FE  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 00796   7667 @REGION_1945_5,12
  7668  00005102  00000002 DROP                                           12              12
  7669  00005102  00000002 USING  ORDINARY    00004750 00001000 00000002  12 009CA   7677 @REGION_1945_2,12
  7678  00005116  00000002 DROP                                           12              12
  7679  00005116  00000002 USING  ORDINARY    0000515C 00001000 00000002  12 0033C   7680 @REGION_1945_3,12
  7681  0000511A  00000002 DROP                                           12              12
  7682  0000511A  00000002 USING  ORDINARY    00004750 00001000 00000002  12 00A06   7723 @REGION_1945_2,12
  7724  00005152  00000002 DROP                                           12              12
  7725  00005152  00000002 USING  ORDINARY    0000515C 00001000 00000002  12 00308   7726 @REGION_1945_3,12
  7727  00005156  00000002 DROP                                           12              12
  7728  00005156  00000002 USING  ORDINARY    00004750 00001000 00000002  12 00158   7729 @REGION_1945_2,12
  7731  0000515C  00000002 DROP                                           12              12
  7732  0000515C  00000002 USING  ORDINARY    0000515C 00001000 00000002  12 00308   7912 @REGION_1945_3,12
                                                      Using Map                                                            Page  553 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  7913  00005460  00000002 DROP                                           12              12
  7914  00005460  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 00796   7915 @REGION_1945_5,12
  7916  00005464  00000002 DROP                                           12              12
  7917  00005464  00000002 USING  ORDINARY    0000515C 00001000 00000002  12 0061C   8143 @REGION_1945_3,12
  8144  00005774  00000002 DROP                                           12              12
  8145  00005774  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 00796   8146 @REGION_1945_5,12
  8147  00005778  00000002 DROP                                           12              12
  8148  00005778  00000002 USING  ORDINARY    0000515C 00001000 00000002  12 008AC   8337 @REGION_1945_3,12
  8338  00005A04  00000002 DROP                                           12              12
  8339  00005A04  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 00796   8340 @REGION_1945_5,12
  8341  00005A08  00000002 DROP                                           12              12
  8342  00005A08  00000002 USING  ORDINARY    0000515C 00001000 00000002  12 008C6   8349 @REGION_1945_3,12
  8350  00005A1E  00000002 DROP                                           12              12
  8351  00005A1E  00000002 USING  ORDINARY    00005B88 00001000 00000002  12 002FA   8352 @REGION_1945_4,12
  8353  00005A22  00000002 DROP                                           12              12
  8354  00005A22  00000002 USING  ORDINARY    0000515C 00001000 00000002  12 008EE   8372 @REGION_1945_3,12
  8373  00005A46  00000002 DROP                                           12              12
  8374  00005A46  00000002 USING  ORDINARY    00005B88 00001000 00000002  12 002FA   8375 @REGION_1945_4,12
  8376  00005A4A  00000002 DROP                                           12              12
  8377  00005A4A  00000002 USING  ORDINARY    0000515C 00001000 00000002  12 009B0   8471 @REGION_1945_3,12
  8472  00005B08  00000002 DROP                                           12              12
  8473  00005B08  00000002 USING  ORDINARY    00005B88 00001000 00000002  12 002D0   8474 @REGION_1945_4,12
  8475  00005B0C  00000002 DROP                                           12              12
  8476  00005B0C  00000002 USING  ORDINARY    0000515C 00001000 00000002  12 009E4   8488 @REGION_1945_3,12
  8489  00005B3C  00000002 DROP                                           12              12
  8490  00005B3C  00000002 USING  ORDINARY    00005B88 00001000 00000002  12 002D0   8491 @REGION_1945_4,12
  8492  00005B40  00000002 DROP                                           12              12
  8493  00005B40  00000002 USING  ORDINARY    0000515C 00001000 00000002  12 00A16   8506 @REGION_1945_3,12
  8507  00005B6E  00000002 DROP                                           12              12
  8508  00005B6E  00000002 USING  ORDINARY    00005B88 00001000 00000002  12 002D0   8509 @REGION_1945_4,12
  8510  00005B72  00000002 DROP                                           12              12
  8511  00005B72  00000002 USING  ORDINARY    0000515C 00001000 00000002  12 00A26   8515 @REGION_1945_3,12
  8516  00005B7E  00000002 DROP                                           12              12
  8517  00005B7E  00000002 USING  ORDINARY    00005B88 00001000 00000002  12 002C0   8518 @REGION_1945_4,12
  8519  00005B82  00000002 DROP                                           12              12
  8520  00005B82  00000002 USING  ORDINARY    0000515C 00001000 00000002  12 00208   8521 @REGION_1945_3,12
  8523  00005B88  00000002 DROP                                           12              12
  8524  00005B88  00000002 USING  ORDINARY    00005B88 00001000 00000002  12 001FA   8686 @REGION_1945_4,12
  8687  00005E54  00000002 DROP                                           12              12
  8688  00005E54  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 00796   8689 @REGION_1945_5,12
  8690  00005E58  00000002 DROP                                           12              12
  8691  00005E58  00000002 USING  ORDINARY    00005B88 00001000 00000002  12 001D8   8707 @REGION_1945_4,12
  8708  00005E7E  00000002 DROP                                           12              12
  8709  00005E7E  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 007BE   8710 @REGION_1945_5,12
  8711  00005E82  00000002 DROP                                           12              12
  8712  00005E82  00000002 USING  ORDINARY    00005B88 00001000 00000002  12 005AE   8946 @REGION_1945_4,12
  8947  00006132  00000002 DROP                                           12              12
  8948  00006132  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 00796   8949 @REGION_1945_5,12
  8950  00006136  00000002 DROP                                           12              12
  8951  00006136  00000002 USING  ORDINARY    00005B88 00001000 00000002  12 008B8   9150 @REGION_1945_4,12
  9151  0000643C  00000002 DROP                                           12              12
  9152  0000643C  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 00796   9153 @REGION_1945_5,12
  9154  00006440  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  554 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  9155  00006440  00000002 USING  ORDINARY    00005B88 00001000 00000002  12 008F4   9228 @REGION_1945_4,12
  9229  00006478  00000002 DROP                                           12              12
  9230  00006478  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 00256   9231 @REGION_1945_5,12
  9232  0000647C  00000002 DROP                                           12              12
  9233  0000647C  00000002 USING  ORDINARY    00005B88 00001000 00000002  12 00926   9246 @REGION_1945_4,12
  9247  000064AA  00000002 DROP                                           12              12
  9248  000064AA  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 00256   9249 @REGION_1945_5,12
  9250  000064AE  00000002 DROP                                           12              12
  9251  000064AE  00000002 USING  ORDINARY    00005B88 00001000 00000002  12 00936   9255 @REGION_1945_4,12
  9256  000064BA  00000002 DROP                                           12              12
  9257  000064BA  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 0024C   9258 @REGION_1945_5,12
  9259  000064BE  00000002 DROP                                           12              12
  9260  000064BE  00000002 USING  ORDINARY    00005B88 00001000 00000002  12 00982   9291 @REGION_1945_4,12
  9293  0000653C  00000002 DROP                                           12              12
  9294  0000653C  00000002 USING  ORDINARY    0000653C 00001000 00000002  12 007BE   9849 @REGION_1945_5,12
  9876  00006D42  00000002 DROP                                           12              12
 10079  00006DEE  00000002 USING  ORDINARY    00006DB0 00001000 00000002  12 0036C  10312 @REGION_1946_1,12
 10313  00007118  00000002 DROP                                           12              12
 10314  00007118  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  10315 @REGION_1946_7,12
 10316  0000711C  00000002 DROP                                           12              12
 10317  0000711C  00000002 USING  ORDINARY    00006DB0 00001000 00000002  12 0064A  10530 @REGION_1946_1,12
 10531  000073F6  00000002 DROP                                           12              12
 10532  000073F6  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  10533 @REGION_1946_7,12
 10534  000073FA  00000002 DROP                                           12              12
 10535  000073FA  00000002 USING  ORDINARY    00006DB0 00001000 00000002  12 0067C  10573 @REGION_1946_1,12
 10574  00007428  00000002 DROP                                           12              12
 10575  00007428  00000002 USING  ORDINARY    000075C6 00001000 00000002  12 0014A  10576 @REGION_1946_2,12
 10577  0000742C  00000002 DROP                                           12              12
 10578  0000742C  00000002 USING  ORDINARY    00006DB0 00001000 00000002  12 0068C  10582 @REGION_1946_1,12
 10583  00007438  00000002 DROP                                           12              12
 10584  00007438  00000002 USING  ORDINARY    000075C6 00001000 00000002  12 000C0  10585 @REGION_1946_2,12
 10586  0000743C  00000002 DROP                                           12              12
 10587  0000743C  00000002 USING  ORDINARY    00006DB0 00001000 00000002  12 00806  10687 @REGION_1946_1,12
 10688  000075B2  00000002 DROP                                           12              12
 10689  000075B2  00000002 USING  ORDINARY    000075C6 00001000 00000002  12 00000  10690 @REGION_1946_2,12
 10691  000075B6  00000002 DROP                                           12              12
 10692  000075B6  00000002 USING  ORDINARY    00006DB0 00001000 00000002  12 000E8  10696 @REGION_1946_1,12
 10698  000075C6  00000002 DROP                                           12              12
 10699  000075C6  00000002 USING  ORDINARY    000075C6 00001000 00000002  12 000EA  10741 @REGION_1946_2,12
 10742  00007692  00000002 DROP                                           12              12
 10743  00007692  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  10744 @REGION_1946_7,12
 10745  00007696  00000002 DROP                                           12              12
 10746  00007696  00000002 USING  ORDINARY    000075C6 00001000 00000002  12 003D2  10948 @REGION_1946_2,12
 10949  00007994  00000002 DROP                                           12              12
 10950  00007994  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  10951 @REGION_1946_7,12
 10952  00007998  00000002 DROP                                           12              12
 10953  00007998  00000002 USING  ORDINARY    000075C6 00001000 00000002  12 007F8  11251 @REGION_1946_2,12
 11252  00007DAC  00000002 DROP                                           12              12
 11253  00007DAC  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  11254 @REGION_1946_7,12
 11255  00007DB0  00000002 DROP                                           12              12
 11256  00007DB0  00000002 USING  ORDINARY    000075C6 00001000 00000002  12 000EA  11261 @REGION_1946_2,12
 11262  00007DBA  00000002 DROP                                           12              12
 11263  00007DBA  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001CC  11264 @REGION_1946_7,12
                                                      Using Map                                                            Page  555 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 11265  00007DBE  00000002 DROP                                           12              12
 11266  00007DBE  00000002 USING  ORDINARY    000075C6 00001000 00000002  12 00814  11276 @REGION_1946_2,12
 11277  00007DD6  00000002 DROP                                           12              12
 11278  00007DD6  00000002 USING  ORDINARY    00009410 00001000 00000002  12 004FC  11279 @REGION_1946_5,12
 11280  00007DDA  00000002 DROP                                           12              12
 11281  00007DDA  00000002 USING  ORDINARY    000075C6 00001000 00000002  12 00846  11323 @REGION_1946_2,12
 11324  00007E08  00000002 DROP                                           12              12
 11325  00007E08  00000002 USING  ORDINARY    00007FA6 00001000 00000002  12 0013E  11326 @REGION_1946_3,12
 11327  00007E0C  00000002 DROP                                           12              12
 11328  00007E0C  00000002 USING  ORDINARY    000075C6 00001000 00000002  12 00856  11332 @REGION_1946_2,12
 11333  00007E18  00000002 DROP                                           12              12
 11334  00007E18  00000002 USING  ORDINARY    00007FA6 00001000 00000002  12 000C0  11335 @REGION_1946_3,12
 11336  00007E1C  00000002 DROP                                           12              12
 11337  00007E1C  00000002 USING  ORDINARY    000075C6 00001000 00000002  12 009D0  11437 @REGION_1946_2,12
 11438  00007F92  00000002 DROP                                           12              12
 11439  00007F92  00000002 USING  ORDINARY    00007FA6 00001000 00000002  12 00000  11440 @REGION_1946_3,12
 11441  00007F96  00000002 DROP                                           12              12
 11442  00007F96  00000002 USING  ORDINARY    000075C6 00001000 00000002  12 00146  11446 @REGION_1946_2,12
 11448  00007FA6  00000002 DROP                                           12              12
 11449  00007FA6  00000002 USING  ORDINARY    00007FA6 00001000 00000002  12 000EA  11491 @REGION_1946_3,12
 11492  00008072  00000002 DROP                                           12              12
 11493  00008072  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  11494 @REGION_1946_7,12
 11495  00008076  00000002 DROP                                           12              12
 11496  00008076  00000002 USING  ORDINARY    00007FA6 00001000 00000002  12 00438  11717 @REGION_1946_3,12
 11718  000083DA  00000002 DROP                                           12              12
 11719  000083DA  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  11720 @REGION_1946_7,12
 11721  000083DE  00000002 DROP                                           12              12
 11722  000083DE  00000002 USING  ORDINARY    00007FA6 00001000 00000002  12 006E6  11923 @REGION_1946_3,12
 11924  00008688  00000002 DROP                                           12              12
 11925  00008688  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  11926 @REGION_1946_7,12
 11927  0000868C  00000002 DROP                                           12              12
 11928  0000868C  00000002 USING  ORDINARY    00007FA6 00001000 00000002  12 00700  11937 @REGION_1946_3,12
 11938  000086A2  00000002 DROP                                           12              12
 11939  000086A2  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 0015A  11940 @REGION_1946_4,12
 11941  000086A6  00000002 DROP                                           12              12
 11942  000086A6  00000002 USING  ORDINARY    00007FA6 00001000 00000002  12 00850  12057 @REGION_1946_3,12
 12058  000087F2  00000002 DROP                                           12              12
 12059  000087F2  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 0014C  12060 @REGION_1946_4,12
 12061  000087F6  00000002 DROP                                           12              12
 12062  000087F6  00000002 USING  ORDINARY    00007FA6 00001000 00000002  12 00884  12074 @REGION_1946_3,12
 12075  00008826  00000002 DROP                                           12              12
 12076  00008826  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 0014C  12077 @REGION_1946_4,12
 12078  0000882A  00000002 DROP                                           12              12
 12079  0000882A  00000002 USING  ORDINARY    00007FA6 00001000 00000002  12 008B6  12092 @REGION_1946_3,12
 12093  00008858  00000002 DROP                                           12              12
 12094  00008858  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 0014C  12095 @REGION_1946_4,12
 12096  0000885C  00000002 DROP                                           12              12
 12097  0000885C  00000002 USING  ORDINARY    00007FA6 00001000 00000002  12 008C6  12101 @REGION_1946_3,12
 12102  00008868  00000002 DROP                                           12              12
 12103  00008868  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 000CA  12104 @REGION_1946_4,12
 12105  0000886C  00000002 DROP                                           12              12
 12106  0000886C  00000002 USING  ORDINARY    00007FA6 00001000 00000002  12 00A3A  12205 @REGION_1946_3,12
 12206  000089DC  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  556 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 12207  000089DC  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 00000  12208 @REGION_1946_4,12
 12209  000089E0  00000002 DROP                                           12              12
 12210  000089E0  00000002 USING  ORDINARY    00007FA6 00001000 00000002  12 0013A  12212 @REGION_1946_3,12
 12213  000089EC  00000002 DROP                                           12              12
 12214  000089EC  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 0000A  12215 @REGION_1946_4,12
 12216  000089F0  00000002 DROP                                           12              12
 12217  000089F0  00000002 USING  ORDINARY    00007FA6 00001000 00000002  12 00000        @REGION_1946_3,12
 12219  000089F0  00000002 DROP                                           12              12
 12220  000089F0  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 000F8  12265 @REGION_1946_4,12
 12266  00008AC6  00000002 DROP                                           12              12
 12267  00008AC6  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  12268 @REGION_1946_7,12
 12269  00008ACA  00000002 DROP                                           12              12
 12270  00008ACA  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 000F8  12290 @REGION_1946_4,12
 12291  00008B46  00000002 DROP                                           12              12
 12292  00008B46  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001CC  12293 @REGION_1946_7,12
 12294  00008B4A  00000002 DROP                                           12              12
 12295  00008B4A  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 00448  12500 @REGION_1946_4,12
 12501  00008E34  00000002 DROP                                           12              12
 12502  00008E34  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  12503 @REGION_1946_7,12
 12504  00008E38  00000002 DROP                                           12              12
 12505  00008E38  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 006F6  12706 @REGION_1946_4,12
 12707  000090E2  00000002 DROP                                           12              12
 12708  000090E2  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  12709 @REGION_1946_7,12
 12710  000090E6  00000002 DROP                                           12              12
 12711  000090E6  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 0072C  12754 @REGION_1946_4,12
 12755  00009118  00000002 DROP                                           12              12
 12756  00009118  00000002 USING  ORDINARY    00009410 00001000 00000002  12 0046E  12757 @REGION_1946_5,12
 12758  0000911C  00000002 DROP                                           12              12
 12759  0000911C  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 00760  12771 @REGION_1946_4,12
 12772  0000914C  00000002 DROP                                           12              12
 12773  0000914C  00000002 USING  ORDINARY    00009410 00001000 00000002  12 0046E  12774 @REGION_1946_5,12
 12775  00009150  00000002 DROP                                           12              12
 12776  00009150  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 009DC  12936 @REGION_1946_4,12
 12937  000093C8  00000002 DROP                                           12              12
 12938  000093C8  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  12939 @REGION_1946_7,12
 12940  000093CC  00000002 DROP                                           12              12
 12941  000093CC  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 00148  12947 @REGION_1946_4,12
 12948  000093D2  00000002 DROP                                           12              12
 12949  000093D2  00000002 USING  ORDINARY    00009410 00001000 00000002  12 0046E  12950 @REGION_1946_5,12
 12951  000093D6  00000002 DROP                                           12              12
 12952  000093D6  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 00A06  12967 @REGION_1946_4,12
 12968  000093F2  00000002 DROP                                           12              12
 12969  000093F2  00000002 USING  ORDINARY    00009410 00001000 00000002  12 00490  12970 @REGION_1946_5,12
 12971  000093F6  00000002 DROP                                           12              12
 12972  000093F6  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 00A1A  12979 @REGION_1946_4,12
 12980  00009406  00000002 DROP                                           12              12
 12981  00009406  00000002 USING  ORDINARY    00009410 00001000 00000002  12 001D8  12982 @REGION_1946_5,12
 12983  0000940A  00000002 DROP                                           12              12
 12984  0000940A  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 00148  12996 @REGION_1946_4,12
 12998  00009410  00000002 DROP                                           12              12
 12999  00009410  00000002 USING  ORDINARY    00009410 00001000 00000002  12 00490  13300 @REGION_1946_5,12
 13301  00009894  00000002 DROP                                           12              12
 13302  00009894  00000002 USING  ORDINARY    000089F0 00001000 00000002  12 009E6  13303 @REGION_1946_4,12
                                                      Using Map                                                            Page  557 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 13304  00009898  00000002 DROP                                           12              12
 13305  00009898  00000002 USING  ORDINARY    00009410 00001000 00000002  12 00350  13341 @REGION_1946_5,12
 13342  00009908  00000002 DROP                                           12              12
 13343  00009908  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001CC  13344 @REGION_1946_7,12
 13345  0000990C  00000002 DROP                                           12              12
 13346  0000990C  00000002 USING  ORDINARY    00009410 00001000 00000002  12 00778  13560 @REGION_1946_5,12
 13561  00009B84  00000002 DROP                                           12              12
 13562  00009B84  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  13563 @REGION_1946_7,12
 13564  00009B88  00000002 DROP                                           12              12
 13565  00009B88  00000002 USING  ORDINARY    00009410 00001000 00000002  12 007A6  13574 @REGION_1946_5,12
 13575  00009BB2  00000002 DROP                                           12              12
 13576  00009BB2  00000002 USING  ORDINARY    00009DF8 00001000 00000002  12 00140  13577 @REGION_1946_6,12
 13578  00009BB6  00000002 DROP                                           12              12
 13579  00009BB6  00000002 USING  ORDINARY    00009410 00001000 00000002  12 007DC  13593 @REGION_1946_5,12
 13594  00009BE8  00000002 DROP                                           12              12
 13595  00009BE8  00000002 USING  ORDINARY    00009DF8 00001000 00000002  12 00140  13596 @REGION_1946_6,12
 13597  00009BEC  00000002 DROP                                           12              12
 13598  00009BEC  00000002 USING  ORDINARY    00009410 00001000 00000002  12 00816  13612 @REGION_1946_5,12
 13613  00009C22  00000002 DROP                                           12              12
 13614  00009C22  00000002 USING  ORDINARY    00009DF8 00001000 00000002  12 00140  13615 @REGION_1946_6,12
 13616  00009C26  00000002 DROP                                           12              12
 13617  00009C26  00000002 USING  ORDINARY    00009410 00001000 00000002  12 0084E  13631 @REGION_1946_5,12
 13632  00009C5A  00000002 DROP                                           12              12
 13633  00009C5A  00000002 USING  ORDINARY    00009DF8 00001000 00000002  12 00140  13634 @REGION_1946_6,12
 13635  00009C5E  00000002 DROP                                           12              12
 13636  00009C5E  00000002 USING  ORDINARY    00009410 00001000 00000002  12 0085E  13640 @REGION_1946_5,12
 13641  00009C6A  00000002 DROP                                           12              12
 13642  00009C6A  00000002 USING  ORDINARY    00009DF8 00001000 00000002  12 000C0  13643 @REGION_1946_6,12
 13644  00009C6E  00000002 DROP                                           12              12
 13645  00009C6E  00000002 USING  ORDINARY    00009410 00001000 00000002  12 009D8  13745 @REGION_1946_5,12
 13746  00009DE4  00000002 DROP                                           12              12
 13747  00009DE4  00000002 USING  ORDINARY    00009DF8 00001000 00000002  12 00000  13748 @REGION_1946_6,12
 13749  00009DE8  00000002 DROP                                           12              12
 13750  00009DE8  00000002 USING  ORDINARY    00009410 00001000 00000002  12 001C8  13754 @REGION_1946_5,12
 13756  00009DF8  00000002 DROP                                           12              12
 13757  00009DF8  00000002 USING  ORDINARY    00009DF8 00001000 00000002  12 000E8  13799 @REGION_1946_6,12
 13800  00009EC4  00000002 DROP                                           12              12
 13801  00009EC4  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  13802 @REGION_1946_7,12
 13803  00009EC8  00000002 DROP                                           12              12
 13804  00009EC8  00000002 USING  ORDINARY    00009DF8 00001000 00000002  12 003BC  14031 @REGION_1946_6,12
 14032  0000A1B0  00000002 DROP                                           12              12
 14033  0000A1B0  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  14034 @REGION_1946_7,12
 14035  0000A1B4  00000002 DROP                                           12              12
 14036  0000A1B4  00000002 USING  ORDINARY    00009DF8 00001000 00000002  12 006C6  14233 @REGION_1946_6,12
 14234  0000A4BA  00000002 DROP                                           12              12
 14235  0000A4BA  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  14236 @REGION_1946_7,12
 14237  0000A4BE  00000002 DROP                                           12              12
 14238  0000A4BE  00000002 USING  ORDINARY    00009DF8 00001000 00000002  12 00990  14454 @REGION_1946_6,12
 14455  0000A784  00000002 DROP                                           12              12
 14456  0000A784  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001A4  14457 @REGION_1946_7,12
 14458  0000A788  00000002 DROP                                           12              12
 14459  0000A788  00000002 USING  ORDINARY    00009DF8 00001000 00000002  12 009A8  14479 @REGION_1946_6,12
 14480  0000A79C  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  558 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 14481  0000A79C  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 00000  14482 @REGION_1946_7,12
 14483  0000A7A0  00000002 DROP                                           12              12
 14484  0000A7A0  00000002 USING  ORDINARY    00009DF8 00001000 00000002  12 000E8  14487 @REGION_1946_6,12
 14489  0000A7AA  00000002 DROP                                           12              12
 14490  0000A7AA  00000002 USING  ORDINARY    0000A7AA 00001000 00000002  12 001CC  14637 @REGION_1946_7,12
 14664  0000A9BE  00000002 DROP                                           12              12
 14879  0000AA6E  00000002 USING  ORDINARY    0000AA30 00001000 00000002  12 00676  15332 @REGION_1942_1,12
 15362  0000B0EE  00000002 DROP                                           12              12
 15445  0000B196  00000002 USING  ORDINARY    0000B158 00001000 00000002  12 00394  15689 @REGION_1947_1,12
 15690  0000B4E8  00000002 DROP                                           12              12
 15691  0000B4E8  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  15692 @REGION_1947_7,12
 15693  0000B4EC  00000002 DROP                                           12              12
 15694  0000B4EC  00000002 USING  ORDINARY    0000B158 00001000 00000002  12 00654  15899 @REGION_1947_1,12
 15900  0000B7A8  00000002 DROP                                           12              12
 15901  0000B7A8  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  15902 @REGION_1947_7,12
 15903  0000B7AC  00000002 DROP                                           12              12
 15904  0000B7AC  00000002 USING  ORDINARY    0000B158 00001000 00000002  12 0068A  15923 @REGION_1947_1,12
 15924  0000B7DE  00000002 DROP                                           12              12
 15925  0000B7DE  00000002 USING  ORDINARY    0000BA1C 00001000 00000002  12 00134  15926 @REGION_1947_2,12
 15927  0000B7E2  00000002 DROP                                           12              12
 15928  0000B7E2  00000002 USING  ORDINARY    0000B158 00001000 00000002  12 0069A  15955 @REGION_1947_1,12
 15956  0000B7EE  00000002 DROP                                           12              12
 15957  0000B7EE  00000002 USING  ORDINARY    0000BA1C 00001000 00000002  12 000AA  15958 @REGION_1947_2,12
 15959  0000B7F2  00000002 DROP                                           12              12
 15960  0000B7F2  00000002 USING  ORDINARY    0000B158 00001000 00000002  12 00790  16098 @REGION_1947_1,12
 16100  0000BA1C  00000002 DROP                                           12              12
 16101  0000BA1C  00000002 USING  ORDINARY    0000BA1C 00001000 00000002  12 000CC  16137 @REGION_1947_2,12
 16138  0000BAD2  00000002 DROP                                           12              12
 16139  0000BAD2  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  16140 @REGION_1947_7,12
 16141  0000BAD6  00000002 DROP                                           12              12
 16142  0000BAD6  00000002 USING  ORDINARY    0000BA1C 00001000 00000002  12 003E8  16360 @REGION_1947_2,12
 16361  0000BE00  00000002 DROP                                           12              12
 16362  0000BE00  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  16363 @REGION_1947_7,12
 16364  0000BE04  00000002 DROP                                           12              12
 16365  0000BE04  00000002 USING  ORDINARY    0000BA1C 00001000 00000002  12 006A4  16568 @REGION_1947_2,12
 16569  0000C0BC  00000002 DROP                                           12              12
 16570  0000C0BC  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  16571 @REGION_1947_7,12
 16572  0000C0C0  00000002 DROP                                           12              12
 16573  0000C0C0  00000002 USING  ORDINARY    0000BA1C 00001000 00000002  12 00958  16775 @REGION_1947_2,12
 16776  0000C370  00000002 DROP                                           12              12
 16777  0000C370  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  16778 @REGION_1947_7,12
 16779  0000C374  00000002 DROP                                           12              12
 16780  0000C374  00000002 USING  ORDINARY    0000BA1C 00001000 00000002  12 00980  16791 @REGION_1947_2,12
 16792  0000C398  00000002 DROP                                           12              12
 16793  0000C398  00000002 USING  ORDINARY    0000C41E 00001000 00000002  12 0068A  16794 @REGION_1947_3,12
 16795  0000C39C  00000002 DROP                                           12              12
 16796  0000C39C  00000002 USING  ORDINARY    0000BA1C 00001000 00000002  12 009CA  16822 @REGION_1947_2,12
 16823  0000C3E2  00000002 DROP                                           12              12
 16824  0000C3E2  00000002 USING  ORDINARY    0000C41E 00001000 00000002  12 002DE  16825 @REGION_1947_3,12
 16826  0000C3E6  00000002 DROP                                           12              12
 16827  0000C3E6  00000002 USING  ORDINARY    0000BA1C 00001000 00000002  12 009FC  16862 @REGION_1947_2,12
 16863  0000C414  00000002 DROP                                           12              12
 16864  0000C414  00000002 USING  ORDINARY    0000C41E 00001000 00000002  12 002DE  16865 @REGION_1947_3,12
                                                      Using Map                                                            Page  559 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 16866  0000C418  00000002 DROP                                           12              12
 16867  0000C418  00000002 USING  ORDINARY    0000BA1C 00001000 00000002  12 00124  16868 @REGION_1947_2,12
 16870  0000C41E  00000002 DROP                                           12              12
 16871  0000C41E  00000002 USING  ORDINARY    0000C41E 00001000 00000002  12 002CE  17038 @REGION_1947_3,12
 17039  0000C6F8  00000002 DROP                                           12              12
 17040  0000C6F8  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  17041 @REGION_1947_7,12
 17042  0000C6FC  00000002 DROP                                           12              12
 17043  0000C6FC  00000002 USING  ORDINARY    0000C41E 00001000 00000002  12 0068A  17320 @REGION_1947_3,12
 17321  0000CA74  00000002 DROP                                           12              12
 17322  0000CA74  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  17323 @REGION_1947_7,12
 17324  0000CA78  00000002 DROP                                           12              12
 17325  0000CA78  00000002 USING  ORDINARY    0000C41E 00001000 00000002  12 001F2  17341 @REGION_1947_3,12
 17342  0000CAA4  00000002 DROP                                           12              12
 17343  0000CAA4  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00198  17344 @REGION_1947_7,12
 17345  0000CAA8  00000002 DROP                                           12              12
 17346  0000CAA8  00000002 USING  ORDINARY    0000C41E 00001000 00000002  12 0093E  17552 @REGION_1947_3,12
 17553  0000CD58  00000002 DROP                                           12              12
 17554  0000CD58  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  17555 @REGION_1947_7,12
 17556  0000CD5C  00000002 DROP                                           12              12
 17557  0000CD5C  00000002 USING  ORDINARY    0000C41E 00001000 00000002  12 00980  17601 @REGION_1947_3,12
 17602  0000CD9A  00000002 DROP                                           12              12
 17603  0000CD9A  00000002 USING  ORDINARY    0000CDFA 00001000 00000002  12 002BA  17604 @REGION_1947_4,12
 17605  0000CD9E  00000002 DROP                                           12              12
 17606  0000CD9E  00000002 USING  ORDINARY    0000C41E 00001000 00000002  12 009B2  17619 @REGION_1947_3,12
 17620  0000CDCC  00000002 DROP                                           12              12
 17621  0000CDCC  00000002 USING  ORDINARY    0000CDFA 00001000 00000002  12 002BA  17622 @REGION_1947_4,12
 17623  0000CDD0  00000002 DROP                                           12              12
 17624  0000CDD0  00000002 USING  ORDINARY    0000C41E 00001000 00000002  12 009C2  17628 @REGION_1947_3,12
 17629  0000CDDC  00000002 DROP                                           12              12
 17630  0000CDDC  00000002 USING  ORDINARY    0000CDFA 00001000 00000002  12 002AA  17631 @REGION_1947_4,12
 17632  0000CDE0  00000002 DROP                                           12              12
 17633  0000CDE0  00000002 USING  ORDINARY    0000C41E 00001000 00000002  12 009D6  17637 @REGION_1947_3,12
 17638  0000CDF0  00000002 DROP                                           12              12
 17639  0000CDF0  00000002 USING  ORDINARY    0000CDFA 00001000 00000002  12 00042  17640 @REGION_1947_4,12
 17641  0000CDF4  00000002 DROP                                           12              12
 17642  0000CDF4  00000002 USING  ORDINARY    0000C41E 00001000 00000002  12 001FA  17643 @REGION_1947_3,12
 17645  0000CDFA  00000002 DROP                                           12              12
 17646  0000CDFA  00000002 USING  ORDINARY    0000CDFA 00001000 00000002  12 001E4  17804 @REGION_1947_4,12
 17805  0000D0B0  00000002 DROP                                           12              12
 17806  0000D0B0  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  17807 @REGION_1947_7,12
 17808  0000D0B4  00000002 DROP                                           12              12
 17809  0000D0B4  00000002 USING  ORDINARY    0000CDFA 00001000 00000002  12 00582  18017 @REGION_1947_4,12
 18018  0000D378  00000002 DROP                                           12              12
 18019  0000D378  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  18020 @REGION_1947_7,12
 18021  0000D37C  00000002 DROP                                           12              12
 18022  0000D37C  00000002 USING  ORDINARY    0000CDFA 00001000 00000002  12 00842  18227 @REGION_1947_4,12
 18228  0000D638  00000002 DROP                                           12              12
 18229  0000D638  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  18230 @REGION_1947_7,12
 18231  0000D63C  00000002 DROP                                           12              12
 18232  0000D63C  00000002 USING  ORDINARY    0000CDFA 00001000 00000002  12 0088A  18276 @REGION_1947_4,12
 18277  0000D680  00000002 DROP                                           12              12
 18278  0000D680  00000002 USING  ORDINARY    0000D788 00001000 00000002  12 00204  18279 @REGION_1947_5,12
 18280  0000D684  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  560 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 18281  0000D684  00000002 USING  ORDINARY    0000CDFA 00001000 00000002  12 008BC  18294 @REGION_1947_4,12
 18295  0000D6B2  00000002 DROP                                           12              12
 18296  0000D6B2  00000002 USING  ORDINARY    0000D788 00001000 00000002  12 00204  18297 @REGION_1947_5,12
 18298  0000D6B6  00000002 DROP                                           12              12
 18299  0000D6B6  00000002 USING  ORDINARY    0000CDFA 00001000 00000002  12 008CC  18303 @REGION_1947_4,12
 18304  0000D6C2  00000002 DROP                                           12              12
 18305  0000D6C2  00000002 USING  ORDINARY    0000D788 00001000 00000002  12 001F4  18306 @REGION_1947_5,12
 18307  0000D6C6  00000002 DROP                                           12              12
 18308  0000D6C6  00000002 USING  ORDINARY    0000CDFA 00001000 00000002  12 00968  18360 @REGION_1947_4,12
 18362  0000D788  00000002 DROP                                           12              12
 18363  0000D788  00000002 USING  ORDINARY    0000D788 00001000 00000002  12 0012E  18473 @REGION_1947_5,12
 18474  0000D988  00000002 DROP                                           12              12
 18475  0000D988  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  18476 @REGION_1947_7,12
 18477  0000D98C  00000002 DROP                                           12              12
 18478  0000D98C  00000002 USING  ORDINARY    0000D788 00001000 00000002  12 004C4  18683 @REGION_1947_5,12
 18684  0000DC48  00000002 DROP                                           12              12
 18685  0000DC48  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  18686 @REGION_1947_7,12
 18687  0000DC4C  00000002 DROP                                           12              12
 18688  0000DC4C  00000002 USING  ORDINARY    0000D788 00001000 00000002  12 0077E  18892 @REGION_1947_5,12
 18893  0000DF02  00000002 DROP                                           12              12
 18894  0000DF02  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  18895 @REGION_1947_7,12
 18896  0000DF06  00000002 DROP                                           12              12
 18897  0000DF06  00000002 USING  ORDINARY    0000D788 00001000 00000002  12 007C2  18942 @REGION_1947_5,12
 18943  0000DF46  00000002 DROP                                           12              12
 18944  0000DF46  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 00162  18945 @REGION_1947_6,12
 18946  0000DF4A  00000002 DROP                                           12              12
 18947  0000DF4A  00000002 USING  ORDINARY    0000D788 00001000 00000002  12 007F4  18960 @REGION_1947_5,12
 18961  0000DF78  00000002 DROP                                           12              12
 18962  0000DF78  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 00162  18963 @REGION_1947_6,12
 18964  0000DF7C  00000002 DROP                                           12              12
 18965  0000DF7C  00000002 USING  ORDINARY    0000D788 00001000 00000002  12 00804  18969 @REGION_1947_5,12
 18970  0000DF88  00000002 DROP                                           12              12
 18971  0000DF88  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 000C6  18972 @REGION_1947_6,12
 18973  0000DF8C  00000002 DROP                                           12              12
 18974  0000DF8C  00000002 USING  ORDINARY    0000D788 00001000 00000002  12 0097E  19074 @REGION_1947_5,12
 19075  0000E102  00000002 DROP                                           12              12
 19076  0000E102  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 00000  19077 @REGION_1947_6,12
 19078  0000E106  00000002 DROP                                           12              12
 19079  0000E106  00000002 USING  ORDINARY    0000D788 00001000 00000002  12 00120  19083 @REGION_1947_5,12
 19085  0000E116  00000002 DROP                                           12              12
 19086  0000E116  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 000F2  19129 @REGION_1947_6,12
 19130  0000E1E8  00000002 DROP                                           12              12
 19131  0000E1E8  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  19132 @REGION_1947_7,12
 19133  0000E1EC  00000002 DROP                                           12              12
 19134  0000E1EC  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 0043E  19364 @REGION_1947_6,12
 19365  0000E550  00000002 DROP                                           12              12
 19366  0000E550  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  19367 @REGION_1947_7,12
 19368  0000E554  00000002 DROP                                           12              12
 19369  0000E554  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 0071E  19405 @REGION_1947_6,12
 19406  0000E570  00000002 DROP                                           12              12
 19407  0000E570  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 0014C  19408 @REGION_1947_7,12
 19409  0000E574  00000002 DROP                                           12              12
 19410  0000E574  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 00492  19422 @REGION_1947_6,12
                                                      Using Map                                                            Page  561 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 19423  0000E5A4  00000002 DROP                                           12              12
 19424  0000E5A4  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 0014C  19425 @REGION_1947_7,12
 19426  0000E5A8  00000002 DROP                                           12              12
 19427  0000E5A8  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 00714  19588 @REGION_1947_6,12
 19589  0000E826  00000002 DROP                                           12              12
 19590  0000E826  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00164  19591 @REGION_1947_7,12
 19592  0000E82A  00000002 DROP                                           12              12
 19593  0000E82A  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 000F2  19597 @REGION_1947_6,12
 19598  0000E830  00000002 DROP                                           12              12
 19599  0000E830  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 0014C  19600 @REGION_1947_7,12
 19601  0000E834  00000002 DROP                                           12              12
 19602  0000E834  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 00814  19685 @REGION_1947_6,12
 19686  0000E91C  00000002 DROP                                           12              12
 19687  0000E91C  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 0014C  19688 @REGION_1947_7,12
 19689  0000E920  00000002 DROP                                           12              12
 19690  0000E920  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 000F2  19692 @REGION_1947_6,12
 19693  0000E926  00000002 DROP                                           12              12
 19694  0000E926  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 0018A  19695 @REGION_1947_7,12
 19696  0000E92A  00000002 DROP                                           12              12
 19697  0000E92A  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 0084A  19723 @REGION_1947_6,12
 19724  0000E95C  00000002 DROP                                           12              12
 19725  0000E95C  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 0010E  19726 @REGION_1947_7,12
 19727  0000E960  00000002 DROP                                           12              12
 19728  0000E960  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 00880  19764 @REGION_1947_6,12
 19765  0000E992  00000002 DROP                                           12              12
 19766  0000E992  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 0010E  19767 @REGION_1947_7,12
 19768  0000E996  00000002 DROP                                           12              12
 19769  0000E996  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 00890  19773 @REGION_1947_6,12
 19774  0000E9A2  00000002 DROP                                           12              12
 19775  0000E9A2  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 000D0  19776 @REGION_1947_7,12
 19777  0000E9A6  00000002 DROP                                           12              12
 19778  0000E9A6  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 00A04  19877 @REGION_1947_6,12
 19878  0000EB16  00000002 DROP                                           12              12
 19879  0000EB16  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00000  19880 @REGION_1947_7,12
 19881  0000EB1A  00000002 DROP                                           12              12
 19882  0000EB1A  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 000F2  19884 @REGION_1947_6,12
 19885  0000EB26  00000002 DROP                                           12              12
 19886  0000EB26  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 0000A  19887 @REGION_1947_7,12
 19888  0000EB2A  00000002 DROP                                           12              12
 19889  0000EB2A  00000002 USING  ORDINARY    0000E116 00001000 00000002  12 00000        @REGION_1947_6,12
 19891  0000EB2A  00000002 DROP                                           12              12
 19892  0000EB2A  00000002 USING  ORDINARY    0000EB2A 00001000 00000002  12 00198  20007 @REGION_1947_7,12
 20042  0000ED0A  00000002 DROP                                           12              12
 20294  0000EDBE  00000002 USING  ORDINARY    0000ED80 00001000 00000002  12 003E6  20550 @REGION_1948_1,12
 20551  0000F162  00000002 DROP                                           12              12
 20552  0000F162  00000002 USING  ORDINARY    0000F6AC 00001000 00000002  12 0057A  20553 @REGION_1948_2,12
 20554  0000F166  00000002 DROP                                           12              12
 20555  0000F166  00000002 USING  ORDINARY    0000ED80 00001000 00000002  12 0040A  20566 @REGION_1948_1,12
 20567  0000F186  00000002 DROP                                           12              12
 20568  0000F186  00000002 USING  ORDINARY    0000F6AC 00001000 00000002  12 00572  20569 @REGION_1948_2,12
 20570  0000F18A  00000002 DROP                                           12              12
 20571  0000F18A  00000002 USING  ORDINARY    0000ED80 00001000 00000002  12 006B8  20775 @REGION_1948_1,12
 20776  0000F434  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  562 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 20777  0000F434  00000002 USING  ORDINARY    0000F6AC 00001000 00000002  12 0057A  20778 @REGION_1948_2,12
 20779  0000F438  00000002 DROP                                           12              12
 20780  0000F438  00000002 USING  ORDINARY    0000ED80 00001000 00000002  12 008E4  20966 @REGION_1948_1,12
 20967  0000F660  00000002 DROP                                           12              12
 20968  0000F660  00000002 USING  ORDINARY    0000F6AC 00001000 00000002  12 002AE  20969 @REGION_1948_2,12
 20970  0000F664  00000002 DROP                                           12              12
 20971  0000F664  00000002 USING  ORDINARY    0000ED80 00001000 00000002  12 00916  20984 @REGION_1948_1,12
 20985  0000F692  00000002 DROP                                           12              12
 20986  0000F692  00000002 USING  ORDINARY    0000F6AC 00001000 00000002  12 002AE  20987 @REGION_1948_2,12
 20988  0000F696  00000002 DROP                                           12              12
 20989  0000F696  00000002 USING  ORDINARY    0000ED80 00001000 00000002  12 00926  20993 @REGION_1948_1,12
 20994  0000F6A2  00000002 DROP                                           12              12
 20995  0000F6A2  00000002 USING  ORDINARY    0000F6AC 00001000 00000002  12 002A4  20996 @REGION_1948_2,12
 20997  0000F6A6  00000002 DROP                                           12              12
 20998  0000F6A6  00000002 USING  ORDINARY    0000ED80 00001000 00000002  12 000D8  20999 @REGION_1948_1,12
 21001  0000F6AC  00000002 DROP                                           12              12
 21002  0000F6AC  00000002 USING  ORDINARY    0000F6AC 00001000 00000002  12 0057E  21377 @REGION_1948_2,12
 21404  0000FC72  00000002 DROP                                           12              12
 21518  0000FD16  00000002 USING  ORDINARY    0000FCD8 00001000 00000002  12 00120  21614 @REGION_1949_1,12
 21640  0000FE40  00000002 DROP                                           12              12
 21713  0000FEEE  00000002 USING  ORDINARY    0000FEB0 00001000 00000002  12 00120  21764 @REGION_1950_1,12
 21797  0000FFD8  00000002 DROP                                           12              12
 21865  0001007E  00000002 USING  ORDINARY    00010040 00001000 00000002  12 00526  22286 @REGION_1941_1,12
 22312  0001061C  00000002 DROP                                           12              12
 22389  000106BE  00000002 USING  ORDINARY    00010680 00001000 00000002  12 001B0  22459 @REGION_1923_1,12
 22506  00010838  00000002 DROP                                           12              12
 22566  000108A2  00000002 USING  ORDINARY    00010898 00001000 00000002  12 0004E  22585 @REGION_1951_1,12
 22602  000108FA  00000002 DROP                                           12              12
 22659  00010972  00000002 USING  ORDINARY    00010968 00001000 00000002  12 0004E  22679 @REGION_1952_1,12
 22696  000109CA  00000002 DROP                                           12              12
 22765  00010A76  00000002 USING  ORDINARY    00010A38 00001000 00000002  12 000C8  22782 @REGION_1953_1,12
 22811  00010B08  00000002 DROP                                           12              12
 22882  00010BAE  00000002 USING  ORDINARY    00010B70 00001000 00000002  12 00128  22915 @REGION_1918_1,12
 22951  00010CA0  00000002 DROP                                           12              12
 23021  00010D4E  00000002 USING  ORDINARY    00010D10 00001000 00000002  12 000E0  23043 @REGION_1919_1,12
 23073  00010DF8  00000002 DROP                                           12              12
 23142  00010EAE  00000002 USING  ORDINARY    00010E70 00001000 00000002  12 000C8  23156 @REGION_1954_1,12
 23183  00010F40  00000002 DROP                                           12              12
 23254  00010FEE  00000002 USING  ORDINARY    00010FB0 00001000 00000002  12 00116  23328 @REGION_1955_1,12
 23357  0001110E  00000002 DROP                                           12              12
 23427  000111BE  00000002 USING  ORDINARY    00011180 00001000 00000002  12 000C8  23441 @REGION_1939_1,12
 23468  00011250  00000002 DROP                                           12              12
 23536  000112FE  00000002 USING  ORDINARY    000112C0 00001000 00000002  12 000D0  23551 @REGION_1940_1,12
 23579  00011398  00000002 DROP                                           12              12
 23649  0001143E  00000002 USING  ORDINARY    00011400 00001000 00000002  12 001C0  23735 @REGION_1921_1,12
 23771  000115C8  00000002 DROP                                           12              12
 23841  0001166E  00000002 USING  ORDINARY    00011630 00001000 00000002  12 000C4  23892 @REGION_1920_1,12
 23914  0001175E  00000002 DROP                                           12              12
 23985  000117FE  00000002 USING  ORDINARY    000117C0 00001000 00000002  12 002B8  24153 @REGION_1924_1,12
 24154  00011A06  00000002 DROP                                           12              12
 24155  00011A06  00000002 USING  ORDINARY    00012052 00001000 00000002  12 0076C  24156 @REGION_1924_2,12
 24157  00011A0A  00000002 DROP                                           12              12
 24158  00011A0A  00000002 USING  ORDINARY    000117C0 00001000 00000002  12 003CC  24258 @REGION_1924_1,12
                                                      Using Map                                                            Page  563 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 24259  00011B88  00000002 DROP                                           12              12
 24260  00011B88  00000002 USING  ORDINARY    00012052 00001000 00000002  12 0076C  24261 @REGION_1924_2,12
 24262  00011B8C  00000002 DROP                                           12              12
 24263  00011B8C  00000002 USING  ORDINARY    000117C0 00001000 00000002  12 004EC  24350 @REGION_1924_1,12
 24351  00011CA8  00000002 DROP                                           12              12
 24352  00011CA8  00000002 USING  ORDINARY    00012052 00001000 00000002  12 0076C  24353 @REGION_1924_2,12
 24354  00011CAC  00000002 DROP                                           12              12
 24355  00011CAC  00000002 USING  ORDINARY    000117C0 00001000 00000002  12 00600  24441 @REGION_1924_1,12
 24442  00011DBC  00000002 DROP                                           12              12
 24443  00011DBC  00000002 USING  ORDINARY    00012052 00001000 00000002  12 0076C  24444 @REGION_1924_2,12
 24445  00011DC0  00000002 DROP                                           12              12
 24446  00011DC0  00000002 USING  ORDINARY    000117C0 00001000 00000002  12 00714  24531 @REGION_1924_1,12
 24532  00011ED0  00000002 DROP                                           12              12
 24533  00011ED0  00000002 USING  ORDINARY    00012052 00001000 00000002  12 0076C  24534 @REGION_1924_2,12
 24535  00011ED4  00000002 DROP                                           12              12
 24536  00011ED4  00000002 USING  ORDINARY    000117C0 00001000 00000002  12 0084C  24634 @REGION_1924_1,12
 24635  00012008  00000002 DROP                                           12              12
 24636  00012008  00000002 USING  ORDINARY    00012052 00001000 00000002  12 0076C  24637 @REGION_1924_2,12
 24638  0001200C  00000002 DROP                                           12              12
 24639  0001200C  00000002 USING  ORDINARY    000117C0 00001000 00000002  12 002B0  24675 @REGION_1924_1,12
 24677  00012052  00000002 DROP                                           12              12
 24678  00012052  00000002 USING  ORDINARY    00012052 00001000 00000002  12 0076C  25257 @REGION_1924_2,12
 25283  00012806  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  564 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDKAFKA_MSGSET_READER ..\asg\asm\rdkafka_msgset_reader.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 15.35.48 Stop Time: 15.35.48 Processor Time: 00.00.00.1680
Return Code 000
