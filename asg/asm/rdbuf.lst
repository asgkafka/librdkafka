                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdbuf.obj ../asg/asm/rdbuf.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdbuf.obj)   CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

Libraries in Search Order:
                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
@@ZARCH#  WX 00000001                              00
@RDBUF    SD 00000002 00000000 0000BFA0            07  @CODE
crc32c    ER 00000003                                  CRC32C
malloc    ER 00000004                                  MALLOC
fprintf   ER 00000005                                  FPRINTF
memmove   ER 00000006                                  MEMMOVE
strdup    ER 00000007                                  STRDUP
@@ASSERT  ER 00000008                                  __ASSERT
rd_unittest_assert_on_failure
          XD 00000009 00000003 00000000                RD_UNITTEST_ASSERT_ON_FAILURE
rd_hexdump
          ER 0000000A                                  RD_HEXDUMP
crc_table XD 0000000B 00000003 00000000                CRC_TABLE
@@STDERP  XD 0000000C 00000003 00000000                __STDERRP
free      ER 0000000D                                  FREE
@rdbuf&   XD 0000000E 00000007 00000200                @@STATIC
@rdbuf    SD 0000000F 0000BFA0 00002480            07  @DATA
@@STDERP  ER 00000010                                  @E__STDERRP
crc_table ER 00000011                                  @ECRC_TABLE
rd_unittest_assert_on_failure
          ER 00000012                                  @ERD_UNITTEST_ASSERT_ON_FAILURE
@rdbuf:   SD 00000013 0000E420 00000230            07  @@INIT@
rd_buf_write_ensure_contig
          LD          000014A0          00000002   00  RD_BUF_WRITE_ENSURE_CONTIG
rd_buf_write_ensure
          LD          00001600          00000002   00  RD_BUF_WRITE_ENSURE
rd_buf_get_segment_at_offset
          LD          00001778          00000002   00  RD_BUF_GET_SEGMENT_AT_OFFSET
rd_buf_destroy
          LD          00001CD0          00000002   00  RD_BUF_DESTROY
rd_buf_init
          LD          00001E28          00000002   00  RD_BUF_INIT
rd_buf_get_writable
          LD          00002180          00000002   00  RD_BUF_GET_WRITABLE
rd_buf_write
          LD          000022A8          00000002   00  RD_BUF_WRITE
rd_buf_write_slice
          LD          00002518          00000002   00  RD_BUF_WRITE_SLICE
rd_buf_write_update
          LD          00002860          00000002   00  RD_BUF_WRITE_UPDATE
rd_buf_push0
          LD          00002AC8          00000002   00  RD_BUF_PUSH0
rd_buf_erase
          LD          00002CD0          00000002   00  RD_BUF_ERASE
rd_buf_write_seek
          LD          000030C8          00000002   00  RD_BUF_WRITE_SEEK
rd_buf_get_write_iov
          LD          000032F8          00000002   00  RD_BUF_GET_WRITE_IOV
rd_slice_init_seg
          LD          00003498          00000002   00  RD_SLICE_INIT_SEG
rd_slice_init
          LD          000036D0          00000002   00  RD_SLICE_INIT
rd_slice_init_full
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
          LD          00003860          00000002   00  RD_SLICE_INIT_FULL
rd_slice_reader0
          LD          00003A08          00000002   00  RD_SLICE_READER0
rd_slice_reader
          LD          00003C90          00000002   00  RD_SLICE_READER
rd_slice_peeker
          LD          00003DB0          00000002   00  RD_SLICE_PEEKER
rd_slice_read
          LD          00003ED0          00000002   00  RD_SLICE_READ
rd_slice_peek
          LD          000040C0          00000002   00  RD_SLICE_PEEK
rd_slice_read_uvarint
          LD          00004230          00000002   00  RD_SLICE_READ_UVARINT
rd_slice_ensure_contig
          LD          00004400          00000002   00  RD_SLICE_ENSURE_CONTIG
rd_slice_seek
          LD          00004588          00000002   00  RD_SLICE_SEEK
rd_slice_narrow
          LD          000047B0          00000002   00  RD_SLICE_NARROW
rd_slice_narrow_relative
          LD          00004968          00000002   00  RD_SLICE_NARROW_RELATIVE
rd_slice_widen
          LD          00004AB8          00000002   00  RD_SLICE_WIDEN
rd_slice_narrow_copy
          LD          00004B48          00000002   00  RD_SLICE_NARROW_COPY
rd_slice_narrow_copy_relative
          LD          00004D00          00000002   00  RD_SLICE_NARROW_COPY_RELATIVE
rd_slice_get_iov
          LD          00004E50          00000002   00  RD_SLICE_GET_IOV
rd_slice_crc32
          LD          00004FE0          00000002   00  RD_SLICE_CRC32
rd_slice_crc32c
          LD          00005170          00000002   00  RD_SLICE_CRC32C
rd_buf_dump
          LD          00005518          00000002   00  RD_BUF_DUMP
rd_slice_dump
          LD          000057C8          00000002   00  RD_SLICE_DUMP
unittest_rdbuf
          LD          0000BEB0          00000002   00  UNITTEST_RDBUF
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Fri Apr 30 15:35:15 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS C'@RDBUF'
00000000                00000000 0000BFA0     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS C'@rdbuf'
                                              18 crc32c   ALIAS C'crc32c'
                                              19          EXTRN crc32c
                                              20 malloc   ALIAS C'malloc'
                                              21          EXTRN malloc
                                              22 fprintf  ALIAS C'fprintf'
                                              23          EXTRN fprintf
                                              24 memmove  ALIAS C'memmove'
                                              25          EXTRN memmove
                                              26 strdup   ALIAS C'strdup'
                                              27          EXTRN strdup
                                              28 __assert ALIAS C'@@ASSERT'
                                              29          EXTRN __assert
                                              30 rd_unittest_assert_on_failure ALIAS X'99846DA49589A3A385A2A36D81A2A2859*
                                                                9A36D96956D86818993A49985'
                                              31 rd_unittest_assert_on_failure DXD   0F
                                              32 rd_hexdump ALIAS X'99846D8885A784A49497'
                                              33          EXTRN rd_hexdump
                                              34 crc_table ALIAS X'8399836DA381829385'
                                              35 crc_table DXD   0F
                                              36 __stderrp ALIAS C'@@STDERP'
                                              37 __stderrp DXD   0F
                                              38 free     ALIAS C'free'
                                              39          EXTRN free
                                              40 *
                                              41 *
                                              42 *
                                              43 * ....... start of rd_malloc
00000000                                      44 @LNAME752 DS   0H
00000000 00000009                             45          DC    X'00000009'
00000004 99846D9481939396                     46          DC    C'rd_malloc'
0000000D 00                                   47          DC    X'00'
                                              48 rd_malloc DCCPRLG CINDEX=752,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME752
                                              49          macro
                                              50          dccextrn &m
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                              51          gblc    &$dccext(1000)
                                              52          gbla    &$dccexti
                                              53          lcla    &i
                                              54 &$dccext(&$dccexti+1) setc    '&m'
                                              55 &i       seta    1
                                              56 .loop    aif    (&i gt &$dccexti).around
                                              57          aif    ('&$dccext(&i)' eq '&m').getout
                                              58 &i       seta    &i+1
                                              59          ago     .loop
                                              60 .around  anop
                                              61 &$dccexti seta &$dccexti+1
                                              62          extrn  &m
                                              63 .getout  anop
                                              64          mend
00000010                                      65+$eye0002    ds    0d                                                    02-DCCCA
00000010 C4C3C3                               66+         dc cl3'DCC'                                                    02-DCCCA
00000013 01                                   67+         dc xl1'01' format one                                          02-DCCCA
00000014 00000000                             68+         dc a(0)                                                        02-DCCCA
00000018 0000000000000082                     69+         dc ad(@PER_752)                                                02-DCCCA
00000020 00000000000000D0                     70+         dc ad(208)                                                     02-DCCCA
00000028 0000000000000000                     71+         dc ad(0)                                                       02-DCCCA
00000030 0000000000001000                     72+         dc ad(4096)                                                    02-DCCCA
00000038 20                                   73+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000039 03                                   74+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000003A 03                                   75+         dc al1(3)                                                      02-DCCCA
0000003B 08                                   76+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000003C 00                                   77+         dc bl.8'00000000'                                              02-DCCCA
0000003D 000000                               78+         dc al3(0)                                                      02-DCCCA
00000040 0000000000000000                     79+         dc ad(@LNAME752)                                               02-DCCCA
00000048                                      80+         ds 0d                                                          02-DCCCA
00000048 0000000000000010                     81+         dc ad($eye0002)                                                02-DCCCA
00000050 0000000000000000                     82+         dc ad(0)                                                       02-DCCCA
00000058                                      83+         ds    0d                                                       01-DCCPR
00000058                                      84+rd_malloc ds   0d                                                       01-DCCPR
00000058                                      85+@REGION_752_1 ds 0h                                                     01-DCCPR
00000058 EBEC D008 0024          00000008     86+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000005E E3E0 D088 0004          00000088     87+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000064 E3C0 D090 0004          00000090     88+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000006A B904 002E                            89+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000006E E3B0 C018 0004          00000018     90+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000074 A7EB 00D0               000000D0     91+         aghi  14,208              increase by frame size               01-DCCPR
00000078 E3E0 C020 0021          00000020     92+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000007E 4720 B020               00000020     93+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000082                                      94+@PER_752 ds    0h                                                       01-DCCPR
00000082 EBDE 2080 0024          00000080     95+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000088 E3C0 2090 0024          00000090     96+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000008E B904 00D2                            97+         lgr   13,2                set real frame pointer               01-DCCPR
00000092 B904 00CF                            98+         lgr   12,15               set base reg                         01-DCCPR
                        00000058              99+         using @REGION_752_1,12                                         01-DCCPR
                                             100 * ******* End of Prologue
                                             101 * *
                                             102 * ***      void *p = malloc(sz);
                                                                                                                           Page    7 
  Active Usings: @REGION_752_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000096 E3F0 1000 0004          00000000    103          LG    15,0(0,1)   ; sz
0000009C E3F0 D0B0 0024          000000B0    104          STG   15,176(0,13)
000000A2 4110 D0B0               000000B0    105          LA    1,176(0,13)
000000A6 E3F0 C0F0 0004          00000148    106          LG    15,@lit_752_0 ; malloc
000000AC                                     107 @@gen_label0 DS    0H
000000AC 05EF                                108          BALR  14,15
000000AE                                     109 @@gen_label1 DS    0H
000000AE B904 002F                           110          LGR   2,15
                                             111 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             112 * ka\\src\\rd.h", 128, "p"));
000000B2 B902 00F2                           113          LTGR  15,2
000000B6 4770 C09A               000000F2    114          BNZ   @L34
000000BA                                     115 @L33     DS    0H
000000BA E3F0 C108 0004          00000160    116          LG    15,@lit_752_1
000000C0 41F0 F00A               0000000A    117          LA    15,10(0,15)
000000C4 E3F0 D0B0 0024          000000B0    118          STG   15,176(0,13)
000000CA E3F0 C100 0004          00000158    119          LG    15,@lit_752_2
000000D0 E3F0 D0B8 0024          000000B8    120          STG   15,184(0,13)
000000D6 E548 D0C0 0080          000000C0    121          MVGHI 192(13),128
000000DC 41F0 F020               00000020    122          LA    15,32(0,15)
000000E0 E3F0 D0C8 0024          000000C8    123          STG   15,200(0,13)
000000E6 4110 D0B0               000000B0    124          LA    1,176(0,13)
000000EA E3F0 C0F8 0004          00000150    125          LG    15,@lit_752_3 ; __assert
000000F0                                     126 @@gen_label3 DS    0H
000000F0 05EF                                127          BALR  14,15
000000F2                                     128 @@gen_label4 DS    0H
000000F2                                     129 @L34     DS    0H
                                             130 * ***      return p;
000000F2 B904 00F2                           131          LGR   15,2
                                             132 * ***   }
                                             133 * * **** Start of Epilogue
                                             134          DCCEPIL
000000F6                                     135+         ds 0h                                                          01-DCCEP
                                             136+* Epilog
000000F6 D707 D088 D088 00000088 00000088    137+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000000FC E3D0 D080 0004          00000080    138+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000102 E3C0 D090 0004          00000090    139+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000108 E3B0 C018 0004          00000018    140+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000010E E3C0 B010 0021          00000010    141+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000114 E3E0 D008 0004          00000008    142+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000011A EB1C D020 0004          00000020    143+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000120 078E                                144+         bcr 8,14                if same dsab, just return              01-DCCEP
00000122 E3F0 D010 0024          00000010    145+         stg 15,16(0,13)         save return code                       01-DCCEP
00000128 E300 D018 0024          00000018    146+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000012E E3F0 D090 0004          00000090    147+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000134 E3F0 F018 0004          00000018    148+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000013A 47F0 F040               00000040    149+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             150+* End of Epilog
                                             151 * * **** End of Epilogue
00000140                                     152          DS    0D
00000140 000000D0                            153 @FRAMESIZE_752 DC F'208'
00000144 00000000
                                                                                                                           Page    8 
  Active Usings: @REGION_752_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000148 0000000000000000                    154 @lit_752_0 DC  AD(malloc)
00000150 0000000000000000                    155 @lit_752_3 DC  AD(__assert)
00000158 000000000000CB02                    156 @lit_752_2 DC  AD(@strings@)
00000160 000000000000BFA0                    157 @lit_752_1 DC  AD(@DATA)
                                             158          DROP  12
                                             159 *
                                             160 *   DSECT for automatic variables in "rd_malloc"
                                             161 *      (FUNCTION #752)
                                             162 *
00000000                00000000 000000A8    163 @AUTO#rd_malloc DSECT
00000000                                     164          DS    XL168
                                             165 *
00000168                00000000 0000BFA0    166 @CODE    CSECT
                                             167 *
                                             168 *
                                             169 *
                                             170 * ....... start of rd_free
00000168                                     171 @LNAME754 DS   0H
00000168 00000007                            172          DC    X'00000007'
0000016C 99846D86998585                      173          DC    C'rd_free'
00000173 00                                  174          DC    X'00'
                                             175 rd_free  DCCPRLG CINDEX=754,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME754
                                             176          macro
                                             177          dccextrn &m
                                             178          gblc    &$dccext(1000)
                                             179          gbla    &$dccexti
                                             180          lcla    &i
                                             181 &$dccext(&$dccexti+1) setc    '&m'
                                             182 &i       seta    1
                                             183 .loop    aif    (&i gt &$dccexti).around
                                             184          aif    ('&$dccext(&i)' eq '&m').getout
                                             185 &i       seta    &i+1
                                             186          ago     .loop
                                             187 .around  anop
                                             188 &$dccexti seta &$dccexti+1
                                             189          extrn  &m
                                             190 .getout  anop
                                             191          mend
00000178                                     192+$eye0005    ds    0d                                                    02-DCCCA
00000178 C4C3C3                              193+         dc cl3'DCC'                                                    02-DCCCA
0000017B 01                                  194+         dc xl1'01' format one                                          02-DCCCA
0000017C 00000000                            195+         dc a(0)                                                        02-DCCCA
00000180 00000000000001EA                    196+         dc ad(@PER_754)                                                02-DCCCA
00000188 00000000000000B0                    197+         dc ad(176)                                                     02-DCCCA
00000190 0000000000000000                    198+         dc ad(0)                                                       02-DCCCA
00000198 0000000000001000                    199+         dc ad(4096)                                                    02-DCCCA
000001A0 20                                  200+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000001A1 03                                  201+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000001A2 03                                  202+         dc al1(3)                                                      02-DCCCA
000001A3 08                                  203+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000001A4 00                                  204+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page    9 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000001A5 000000                              205+         dc al3(0)                                                      02-DCCCA
000001A8 0000000000000168                    206+         dc ad(@LNAME754)                                               02-DCCCA
000001B0                                     207+         ds 0d                                                          02-DCCCA
000001B0 0000000000000178                    208+         dc ad($eye0005)                                                02-DCCCA
000001B8 0000000000000000                    209+         dc ad(0)                                                       02-DCCCA
000001C0                                     210+         ds    0d                                                       01-DCCPR
000001C0                                     211+rd_free  ds    0d                                                       01-DCCPR
000001C0                                     212+@REGION_754_1 ds 0h                                                     01-DCCPR
000001C0 EBEC D008 0024          00000008    213+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001C6 E3E0 D088 0004          00000088    214+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001CC E3C0 D090 0004          00000090    215+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001D2 B904 002E                           216+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001D6 E3B0 C018 0004          00000018    217+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001DC A7EB 00B0               000000B0    218+         aghi  14,176              increase by frame size               01-DCCPR
000001E0 E3E0 C020 0021          00000020    219+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001E6 4720 B020               00000020    220+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001EA                                     221+@PER_754 ds    0h                                                       01-DCCPR
000001EA EBDE 2080 0024          00000080    222+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001F0 E3C0 2090 0024          00000090    223+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001F6 B904 00D2                           224+         lgr   13,2                set real frame pointer               01-DCCPR
000001FA B904 00CF                           225+         lgr   12,15               set base reg                         01-DCCPR
                        000001C0             226+         using @REGION_754_1,12                                         01-DCCPR
                                             227 * ******* End of Prologue
                                             228 * *
                                             229 * ***      free(ptr);
000001FE E3F0 1000 0004          00000000    230          LG    15,0(0,1)   ; ptr
00000204 E3F0 D0A8 0024          000000A8    231          STG   15,168(0,13)
0000020A 4110 D0A8               000000A8    232          LA    1,168(0,13)
0000020E E3F0 C0A8 0004          00000268    233          LG    15,@lit_754_5 ; free
00000214                                     234 @@gen_label5 DS    0H
00000214 05EF                                235          BALR  14,15
00000216                                     236 @@gen_label6 DS    0H
                                             237 * ***   }
00000216                                     238 @ret_lab_754 DS 0H
                                             239 * * **** Start of Epilogue
                                             240          DCCEPIL
00000216                                     241+         ds 0h                                                          01-DCCEP
                                             242+* Epilog
00000216 D707 D088 D088 00000088 00000088    243+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000021C E3D0 D080 0004          00000080    244+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000222 E3C0 D090 0004          00000090    245+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000228 E3B0 C018 0004          00000018    246+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000022E E3C0 B010 0021          00000010    247+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000234 E3E0 D008 0004          00000008    248+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000023A EB1C D020 0004          00000020    249+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000240 078E                                250+         bcr 8,14                if same dsab, just return              01-DCCEP
00000242 E3F0 D010 0024          00000010    251+         stg 15,16(0,13)         save return code                       01-DCCEP
00000248 E300 D018 0024          00000018    252+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000024E E3F0 D090 0004          00000090    253+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000254 E3F0 F018 0004          00000018    254+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000025A 47F0 F040               00000040    255+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             256+* End of Epilog
                                                                                                                           Page   10 
  Active Usings: @REGION_754_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             257 * * **** End of Epilogue
00000260                                     258          DS    0D
00000260 000000B0                            259 @FRAMESIZE_754 DC F'176'
00000264 00000000
00000268 0000000000000000                    260 @lit_754_5 DC  AD(free)
                                             261          DROP  12
                                             262 *
                                             263 *   DSECT for automatic variables in "rd_free"
                                             264 *      (FUNCTION #754)
                                             265 *
00000000                00000000 000000A8    266 @AUTO#rd_free DSECT
00000000                                     267          DS    XL168
                                             268 *
00000270                00000000 0000BFA0    269 @CODE    CSECT
                                             270 *
                                             271 *
                                             272 *
                                             273 * ....... start of rd_strdup
00000270                                     274 @LNAME755 DS   0H
00000270 00000009                            275          DC    X'00000009'
00000274 99846DA2A39984A4                    276          DC    C'rd_strdup'
0000027D 00                                  277          DC    X'00'
                                             278 rd_strdup DCCPRLG CINDEX=755,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME755
                                             279          macro
                                             280          dccextrn &m
                                             281          gblc    &$dccext(1000)
                                             282          gbla    &$dccexti
                                             283          lcla    &i
                                             284 &$dccext(&$dccexti+1) setc    '&m'
                                             285 &i       seta    1
                                             286 .loop    aif    (&i gt &$dccexti).around
                                             287          aif    ('&$dccext(&i)' eq '&m').getout
                                             288 &i       seta    &i+1
                                             289          ago     .loop
                                             290 .around  anop
                                             291 &$dccexti seta &$dccexti+1
                                             292          extrn  &m
                                             293 .getout  anop
                                             294          mend
00000280                                     295+$eye0008    ds    0d                                                    02-DCCCA
00000280 C4C3C3                              296+         dc cl3'DCC'                                                    02-DCCCA
00000283 01                                  297+         dc xl1'01' format one                                          02-DCCCA
00000284 00000000                            298+         dc a(0)                                                        02-DCCCA
00000288 00000000000002F2                    299+         dc ad(@PER_755)                                                02-DCCCA
00000290 00000000000000D0                    300+         dc ad(208)                                                     02-DCCCA
00000298 0000000000000000                    301+         dc ad(0)                                                       02-DCCCA
000002A0 0000000000001000                    302+         dc ad(4096)                                                    02-DCCCA
000002A8 20                                  303+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000002A9 03                                  304+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000002AA 03                                  305+         dc al1(3)                                                      02-DCCCA
000002AB 08                                  306+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   11 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000002AC 00                                  307+         dc bl.8'00000000'                                              02-DCCCA
000002AD 000000                              308+         dc al3(0)                                                      02-DCCCA
000002B0 0000000000000270                    309+         dc ad(@LNAME755)                                               02-DCCCA
000002B8                                     310+         ds 0d                                                          02-DCCCA
000002B8 0000000000000280                    311+         dc ad($eye0008)                                                02-DCCCA
000002C0 0000000000000000                    312+         dc ad(0)                                                       02-DCCCA
000002C8                                     313+         ds    0d                                                       01-DCCPR
000002C8                                     314+rd_strdup ds   0d                                                       01-DCCPR
000002C8                                     315+@REGION_755_1 ds 0h                                                     01-DCCPR
000002C8 EBEC D008 0024          00000008    316+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000002CE E3E0 D088 0004          00000088    317+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000002D4 E3C0 D090 0004          00000090    318+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000002DA B904 002E                           319+         lgr   2,14                copy addr of our savearea            01-DCCPR
000002DE E3B0 C018 0004          00000018    320+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000002E4 A7EB 00D0               000000D0    321+         aghi  14,208              increase by frame size               01-DCCPR
000002E8 E3E0 C020 0021          00000020    322+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000002EE 4720 B020               00000020    323+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000002F2                                     324+@PER_755 ds    0h                                                       01-DCCPR
000002F2 EBDE 2080 0024          00000080    325+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000002F8 E3C0 2090 0024          00000090    326+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000002FE B904 00D2                           327+         lgr   13,2                set real frame pointer               01-DCCPR
00000302 B904 00CF                           328+         lgr   12,15               set base reg                         01-DCCPR
                        000002C8             329+         using @REGION_755_1,12                                         01-DCCPR
                                             330 * ******* End of Prologue
                                             331 * *
                                             332 * ***
                                             333 * ***      char *n = strdup(s);
00000306 E3F0 1000 0004          00000000    334          LG    15,0(0,1)   ; s
0000030C E3F0 D0B0 0024          000000B0    335          STG   15,176(0,13)
00000312 4110 D0B0               000000B0    336          LA    1,176(0,13)
00000316 E3F0 C0F0 0004          000003B8    337          LG    15,@lit_755_7 ; strdup
0000031C                                     338 @@gen_label7 DS    0H
0000031C 05EF                                339          BALR  14,15
0000031E                                     340 @@gen_label8 DS    0H
0000031E B904 002F                           341          LGR   2,15
                                             342 * ***
                                             343 * ***
                                             344 * ***
                                             345 * ***      ((n) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             346 * ka\\src\\rd.h", 148, "n"));
00000322 B902 00F2                           347          LTGR  15,2
00000326 4770 C09A               00000362    348          BNZ   @L38
0000032A                                     349 @L37     DS    0H
0000032A E3F0 C108 0004          000003D0    350          LG    15,@lit_755_8
00000330 41F0 F020               00000020    351          LA    15,32(0,15)
00000334 E3F0 D0B0 0024          000000B0    352          STG   15,176(0,13)
0000033A E3F0 C100 0004          000003C8    353          LG    15,@lit_755_9
00000340 E3F0 D0B8 0024          000000B8    354          STG   15,184(0,13)
00000346 E548 D0C0 0094          000000C0    355          MVGHI 192(13),148
0000034C 41F0 F022               00000022    356          LA    15,34(0,15)
00000350 E3F0 D0C8 0024          000000C8    357          STG   15,200(0,13)
00000356 4110 D0B0               000000B0    358          LA    1,176(0,13)
                                                                                                                           Page   12 
  Active Usings: @REGION_755_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000035A E3F0 C0F8 0004          000003C0    359          LG    15,@lit_755_10 ; __assert
00000360                                     360 @@gen_label10 DS    0H
00000360 05EF                                361          BALR  14,15
00000362                                     362 @@gen_label11 DS    0H
00000362                                     363 @L38     DS    0H
                                             364 * ***      return n;
00000362 B904 00F2                           365          LGR   15,2
                                             366 * ***   }
                                             367 * * **** Start of Epilogue
                                             368          DCCEPIL
00000366                                     369+         ds 0h                                                          01-DCCEP
                                             370+* Epilog
00000366 D707 D088 D088 00000088 00000088    371+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000036C E3D0 D080 0004          00000080    372+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000372 E3C0 D090 0004          00000090    373+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000378 E3B0 C018 0004          00000018    374+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000037E E3C0 B010 0021          00000010    375+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000384 E3E0 D008 0004          00000008    376+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000038A EB1C D020 0004          00000020    377+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000390 078E                                378+         bcr 8,14                if same dsab, just return              01-DCCEP
00000392 E3F0 D010 0024          00000010    379+         stg 15,16(0,13)         save return code                       01-DCCEP
00000398 E300 D018 0024          00000018    380+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000039E E3F0 D090 0004          00000090    381+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000003A4 E3F0 F018 0004          00000018    382+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000003AA 47F0 F040               00000040    383+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             384+* End of Epilog
                                             385 * * **** End of Epilogue
000003B0                                     386          DS    0D
000003B0 000000D0                            387 @FRAMESIZE_755 DC F'208'
000003B4 00000000
000003B8 0000000000000000                    388 @lit_755_7 DC  AD(strdup)
000003C0 0000000000000000                    389 @lit_755_10 DC AD(__assert)
000003C8 000000000000CB02                    390 @lit_755_9 DC  AD(@strings@)
000003D0 000000000000BFA0                    391 @lit_755_8 DC  AD(@DATA)
                                             392          DROP  12
                                             393 *
                                             394 *   DSECT for automatic variables in "rd_strdup"
                                             395 *      (FUNCTION #755)
                                             396 *
00000000                00000000 000000A8    397 @AUTO#rd_strdup DSECT
00000000                                     398          DS    XL168
                                             399 *
000003D8                00000000 0000BFA0    400 @CODE    CSECT
                                             401 *
                                             402 *
                                             403 *
                                             404 * ....... start of rd_buf_write_pos
000003D8                                     405 @LNAME784 DS   0H
000003D8 00000010                            406          DC    X'00000010'
000003DC 99846D82A4866DA6                    407          DC    C'rd_buf_write_pos'
000003EC 00                                  408          DC    X'00'
                                             409 rd_buf_write_pos DCCPRLG CINDEX=784,BASER=12,FRAME=176,SAVEAREA=NO,ENTR*
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME784
                                             410          macro
                                             411          dccextrn &m
                                             412          gblc    &$dccext(1000)
                                             413          gbla    &$dccexti
                                             414          lcla    &i
                                             415 &$dccext(&$dccexti+1) setc    '&m'
                                             416 &i       seta    1
                                             417 .loop    aif    (&i gt &$dccexti).around
                                             418          aif    ('&$dccext(&i)' eq '&m').getout
                                             419 &i       seta    &i+1
                                             420          ago     .loop
                                             421 .around  anop
                                             422 &$dccexti seta &$dccexti+1
                                             423          extrn  &m
                                             424 .getout  anop
                                             425          mend
000003F0                                     426+$eye0011    ds    0d                                                    02-DCCCA
000003F0 C4C3C3                              427+         dc cl3'DCC'                                                    02-DCCCA
000003F3 01                                  428+         dc xl1'01' format one                                          02-DCCCA
000003F4 00000000                            429+         dc a(0)                                                        02-DCCCA
000003F8 0000000000000000                    430+         dc ad(0)                                                       02-DCCCA
00000400 00000000000000B0                    431+         dc ad(176)                                                     02-DCCCA
00000408 0000000000000000                    432+         dc ad(0)                                                       02-DCCCA
00000410 0000000000001000                    433+         dc ad(4096)                                                    02-DCCCA
00000418 20                                  434+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000419 03                                  435+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000041A 03                                  436+         dc al1(3)                                                      02-DCCCA
0000041B 08                                  437+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000041C 00                                  438+         dc bl.8'00000000'                                              02-DCCCA
0000041D 000000                              439+         dc al3(0)                                                      02-DCCCA
00000420 00000000000003D8                    440+         dc ad(@LNAME784)                                               02-DCCCA
00000428                                     441+         ds 0d                                                          02-DCCCA
00000428 00000000000003F0                    442+         dc ad($eye0011)                                                02-DCCCA
00000430 0000000000000000                    443+         dc ad(0)                                                       02-DCCCA
00000438                                     444+         ds    0d                                                       01-DCCPR
00000438                                     445+rd_buf_write_pos ds 0d                                                  01-DCCPR
00000438                                     446+@REGION_784_1 ds 0h                                                     01-DCCPR
00000438 EBEC D008 0024          00000008    447+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000043E B904 00CF                           448+         lgr   12,15               set base reg                         01-DCCPR
                        00000438             449+         using @REGION_784_1,12                                         01-DCCPR
                                             450 * ******* End of Prologue
                                             451 * *
                                             452 * ***           const rd_segment_t *seg = rbuf->rbuf_wpos;
00000442 E3F0 1000 0004          00000000    453          LG    15,0(0,1)   ; rbuf
00000448 E3F0 F018 0004          00000018    454          LG    15,24(0,15) ; offset of rbuf_wpos in rd_buf_s
                                             455 * ***
                                             456 * ***           if (((!seg))) {
0000044E B902 001F                           457          LTGR  1,15
00000452 4770 C026               0000045E    458          BNZ   @L44
                                             459 * ***
                                             460 * ***
                                                                                                                           Page   14 
  Active Usings: @REGION_784_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             461 * ***
                                             462 * ***                   return 0;
00000456 A7F9 0000               00000000    463          LGHI  15,0        ; 0
0000045A 47F0 C036               0000046E    464          B     @ret_lab_784
                                             465 * ***           }
0000045E                                     466 @L44     DS    0H
                                             467 * ***
                                             468 * ***
                                             469 * ***
                                             470 * ***           return seg->seg_absof + seg->seg_of;
0000045E E310 F028 0004          00000028    471          LG    1,40(0,15)  ; offset of seg_absof in rd_segment_s
00000464 E310 F018 000A          00000018    472          ALG   1,24(0,15)
0000046A B904 00F1                           473          LGR   15,1
                                             474 * ***   }
0000046E                                     475 @ret_lab_784 DS 0H
                                             476 * * **** Start of Epilogue
                                             477          DCCEPIL
0000046E                                     478+         ds 0h                                                          01-DCCEP
                                             479+* Epilog
                                             480+* Epilog
0000046E E3E0 D008 0004          00000008    481+         lg    14,8(,13) restore the reg                                01-DCCEP
00000474 EB1C D020 0004          00000020    482+         lmg   1,12,32(13)                                              01-DCCEP
0000047A 07FE                                483+         br   14                                                        01-DCCEP
                                             484+* End of Epilog
                                             485 * * **** End of Epilogue
                                             486          DROP  12
                                             487 *
                                             488 *   DSECT for automatic variables in "rd_buf_write_pos"
                                             489 *      (FUNCTION #784)
                                             490 *
00000000                00000000 000000A8    491 @AUTO#rd_buf_write_pos DSECT
00000000                                     492          DS    XL168
                                             493 *
0000047C                00000000 0000BFA0    494 @CODE    CSECT
                                             495 *
                                             496 *
                                             497 *
                                             498 * ....... start of rd_buf_write_remains
0000047C                                     499 @LNAME785 DS   0H
0000047C 00000014                            500          DC    X'00000014'
00000480 99846D82A4866DA6                    501          DC    C'rd_buf_write_remains'
00000494 00                                  502          DC    X'00'
                                             503 rd_buf_write_remains DCCPRLG CINDEX=785,BASER=0,FRAME=168,SAVEAREA=NO,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME785
                                             504          macro
                                             505          dccextrn &m
                                             506          gblc    &$dccext(1000)
                                             507          gbla    &$dccexti
                                             508          lcla    &i
                                             509 &$dccext(&$dccexti+1) setc    '&m'
                                             510 &i       seta    1
                                             511 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   15 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             512          aif    ('&$dccext(&i)' eq '&m').getout
                                             513 &i       seta    &i+1
                                             514          ago     .loop
                                             515 .around  anop
                                             516 &$dccexti seta &$dccexti+1
                                             517          extrn  &m
                                             518 .getout  anop
                                             519          mend
00000498                                     520+$eye0014    ds    0d                                                    02-DCCCA
00000498 C4C3C3                              521+         dc cl3'DCC'                                                    02-DCCCA
0000049B 01                                  522+         dc xl1'01' format one                                          02-DCCCA
0000049C 00000000                            523+         dc a(0)                                                        02-DCCCA
000004A0 0000000000000000                    524+         dc ad(0)                                                       02-DCCCA
000004A8 00000000000000A8                    525+         dc ad(168)                                                     02-DCCCA
000004B0 0000000000000000                    526+         dc ad(0)                                                       02-DCCCA
000004B8 0000000000001000                    527+         dc ad(4096)                                                    02-DCCCA
000004C0 20                                  528+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000004C1 03                                  529+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000004C2 03                                  530+         dc al1(3)                                                      02-DCCCA
000004C3 08                                  531+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000004C4 00                                  532+         dc bl.8'00000000'                                              02-DCCCA
000004C5 000000                              533+         dc al3(0)                                                      02-DCCCA
000004C8 000000000000047C                    534+         dc ad(@LNAME785)                                               02-DCCCA
000004D0                                     535+         ds 0d                                                          02-DCCCA
000004D0 0000000000000498                    536+         dc ad($eye0014)                                                02-DCCCA
000004D8 0000000000000000                    537+         dc ad(0)                                                       02-DCCCA
000004E0                                     538+         ds    0d                                                       01-DCCPR
000004E0                                     539+rd_buf_write_remains ds 0d                                              01-DCCPR
000004E0                                     540+@REGION_785_1 ds 0h                                                     01-DCCPR
000004E0 EBEC D008 0024          00000008    541+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                             542 * ******* End of Prologue
                                             543 * *
                                             544 * ***           return rbuf->rbuf_size - (rbuf->rbuf_len + rbuf->rbuf_\
                                             545 * erased);
000004E6 E3F0 1000 0004          00000000    546          LG    15,0(0,1)   ; rbuf
000004EC E310 F030 0004          00000030    547          LG    1,48(0,15)  ; offset of rbuf_size in rd_buf_s
000004F2 E320 F020 0004          00000020    548          LG    2,32(0,15)  ; offset of rbuf_len in rd_buf_s
000004F8 E320 F028 000A          00000028    549          ALG   2,40(0,15)
000004FE B90B 0012                           550          SLGR  1,2
00000502 B904 00F1                           551          LGR   15,1
                                             552 * ***   }
                                             553 * * **** Start of Epilogue
                                             554          DCCEPIL
00000506                                     555+         ds 0h                                                          01-DCCEP
                                             556+* Epilog
                                             557+* Epilog
00000506 E3E0 D008 0004          00000008    558+         lg    14,8(,13) restore the reg                                01-DCCEP
0000050C EB1C D020 0004          00000020    559+         lmg   1,12,32(13)                                              01-DCCEP
00000512 07FE                                560+         br   14                                                        01-DCCEP
                                             561+* End of Epilog
                                             562 * * **** End of Epilogue
                                             563 *
                                                                                                                           Page   16 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             564 *   DSECT for automatic variables in "rd_buf_write_remains"
                                             565 *      (FUNCTION #785)
                                             566 *
00000000                00000000 000000A8    567 @AUTO#rd_buf_write_remains DSECT
00000000                                     568          DS    XL168
                                             569 *
00000514                00000000 0000BFA0    570 @CODE    CSECT
                                             571 *
                                             572 *
                                             573 *
                                             574 * ....... start of rd_segment_write_remains
00000514                                     575 @LNAME786 DS   0H
00000514 00000018                            576          DC    X'00000018'
00000518 99846DA285879485                    577          DC    C'rd_segment_write_remains'
00000530 00                                  578          DC    X'00'
                                             579 rd_segment_write_remains DCCPRLG CINDEX=786,BASER=12,FRAME=168,SAVEAREA*
                                                                =NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME786
                                             580          macro
                                             581          dccextrn &m
                                             582          gblc    &$dccext(1000)
                                             583          gbla    &$dccexti
                                             584          lcla    &i
                                             585 &$dccext(&$dccexti+1) setc    '&m'
                                             586 &i       seta    1
                                             587 .loop    aif    (&i gt &$dccexti).around
                                             588          aif    ('&$dccext(&i)' eq '&m').getout
                                             589 &i       seta    &i+1
                                             590          ago     .loop
                                             591 .around  anop
                                             592 &$dccexti seta &$dccexti+1
                                             593          extrn  &m
                                             594 .getout  anop
                                             595          mend
00000538                                     596+$eye0017    ds    0d                                                    02-DCCCA
00000538 C4C3C3                              597+         dc cl3'DCC'                                                    02-DCCCA
0000053B 01                                  598+         dc xl1'01' format one                                          02-DCCCA
0000053C 00000000                            599+         dc a(0)                                                        02-DCCCA
00000540 0000000000000000                    600+         dc ad(0)                                                       02-DCCCA
00000548 00000000000000A8                    601+         dc ad(168)                                                     02-DCCCA
00000550 0000000000000000                    602+         dc ad(0)                                                       02-DCCCA
00000558 0000000000001000                    603+         dc ad(4096)                                                    02-DCCCA
00000560 20                                  604+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000561 03                                  605+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000562 03                                  606+         dc al1(3)                                                      02-DCCCA
00000563 08                                  607+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000564 00                                  608+         dc bl.8'00000000'                                              02-DCCCA
00000565 000000                              609+         dc al3(0)                                                      02-DCCCA
00000568 0000000000000514                    610+         dc ad(@LNAME786)                                               02-DCCCA
00000570                                     611+         ds 0d                                                          02-DCCCA
00000570 0000000000000538                    612+         dc ad($eye0017)                                                02-DCCCA
00000578 0000000000000000                    613+         dc ad(0)                                                       02-DCCCA
00000580                                     614+         ds    0d                                                       01-DCCPR
                                                                                                                           Page   17 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000580                                     615+rd_segment_write_remains ds 0d                                          01-DCCPR
00000580                                     616+@REGION_786_1 ds 0h                                                     01-DCCPR
00000580 EBEC D008 0024          00000008    617+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000586 B904 00CF                           618+         lgr   12,15               set base reg                         01-DCCPR
                        00000580             619+         using @REGION_786_1,12                                         01-DCCPR
                                             620 * ******* End of Prologue
                                             621 * *
                                             622 * ***           if ((((seg->seg_flags & 0x1))))
0000058A E3F0 1000 0004          00000000    623          LG    15,0(0,1)   ; seg
00000590 9101 F03B      0000003B 00000001    624          TM    59(15),1
00000594 4780 C020               000005A0    625          BZ    @L45
                                             626 * ***                   return 0;
00000598 A7F9 0000               00000000    627          LGHI  15,0        ; 0
0000059C 47F0 C04E               000005CE    628          B     @ret_lab_786
000005A0                                     629 @L45     DS    0H
                                             630 * ***           if (p)
000005A0 E310 1008 0004          00000008    631          LG    1,8(0,1)    ; p
000005A6 B902 0021                           632          LTGR  2,1
000005AA 4780 C03E               000005BE    633          BZ    @L46
                                             634 * ***                   *p = (void *)(seg->seg_p + seg->seg_of);
000005AE EB23 F010 0004          00000010    635          LMG   2,3,16(15)  ; offset of seg_p in rd_segment_s
000005B4 4123 2000               00000000    636          LA    2,0(3,2)
000005B8 E320 1000 0024          00000000    637          STG   2,0(0,1)    ; p
000005BE                                     638 @L46     DS    0H
                                             639 * ***           return seg->seg_size - seg->seg_of;
000005BE E310 F020 0004          00000020    640          LG    1,32(0,15)  ; offset of seg_size in rd_segment_s
000005C4 E310 F018 000B          00000018    641          SLG   1,24(0,15)
000005CA B904 00F1                           642          LGR   15,1
                                             643 * ***   }
000005CE                                     644 @ret_lab_786 DS 0H
                                             645 * * **** Start of Epilogue
                                             646          DCCEPIL
000005CE                                     647+         ds 0h                                                          01-DCCEP
                                             648+* Epilog
                                             649+* Epilog
000005CE E3E0 D008 0004          00000008    650+         lg    14,8(,13) restore the reg                                01-DCCEP
000005D4 EB1C D020 0004          00000020    651+         lmg   1,12,32(13)                                              01-DCCEP
000005DA 07FE                                652+         br   14                                                        01-DCCEP
                                             653+* End of Epilog
                                             654 * * **** End of Epilogue
                                             655          DROP  12
                                             656 *
                                             657 *   DSECT for automatic variables in "rd_segment_write_remains"
                                             658 *      (FUNCTION #786)
                                             659 *
00000000                00000000 000000A8    660 @AUTO#rd_segment_write_remains DSECT
00000000                                     661          DS    XL168
                                             662 *
000005DC                00000000 0000BFA0    663 @CODE    CSECT
                                             664 *
                                             665 *
                                             666 *
                                                                                                                           Page   18 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             667 * ....... start of rd_buf_len
000005DC                                     668 @LNAME788 DS   0H
000005DC 0000000A                            669          DC    X'0000000A'
000005E0 99846D82A4866D93                    670          DC    C'rd_buf_len'
000005EA 00                                  671          DC    X'00'
                                             672 rd_buf_len DCCPRLG CINDEX=788,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME788
                                             673          macro
                                             674          dccextrn &m
                                             675          gblc    &$dccext(1000)
                                             676          gbla    &$dccexti
                                             677          lcla    &i
                                             678 &$dccext(&$dccexti+1) setc    '&m'
                                             679 &i       seta    1
                                             680 .loop    aif    (&i gt &$dccexti).around
                                             681          aif    ('&$dccext(&i)' eq '&m').getout
                                             682 &i       seta    &i+1
                                             683          ago     .loop
                                             684 .around  anop
                                             685 &$dccexti seta &$dccexti+1
                                             686          extrn  &m
                                             687 .getout  anop
                                             688          mend
000005F0                                     689+$eye0020    ds    0d                                                    02-DCCCA
000005F0 C4C3C3                              690+         dc cl3'DCC'                                                    02-DCCCA
000005F3 01                                  691+         dc xl1'01' format one                                          02-DCCCA
000005F4 00000000                            692+         dc a(0)                                                        02-DCCCA
000005F8 0000000000000000                    693+         dc ad(0)                                                       02-DCCCA
00000600 00000000000000A8                    694+         dc ad(168)                                                     02-DCCCA
00000608 0000000000000000                    695+         dc ad(0)                                                       02-DCCCA
00000610 0000000000001000                    696+         dc ad(4096)                                                    02-DCCCA
00000618 20                                  697+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000619 03                                  698+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000061A 03                                  699+         dc al1(3)                                                      02-DCCCA
0000061B 08                                  700+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000061C 00                                  701+         dc bl.8'00000000'                                              02-DCCCA
0000061D 000000                              702+         dc al3(0)                                                      02-DCCCA
00000620 00000000000005DC                    703+         dc ad(@LNAME788)                                               02-DCCCA
00000628                                     704+         ds 0d                                                          02-DCCCA
00000628 00000000000005F0                    705+         dc ad($eye0020)                                                02-DCCCA
00000630 0000000000000000                    706+         dc ad(0)                                                       02-DCCCA
00000638                                     707+         ds    0d                                                       01-DCCPR
00000638                                     708+rd_buf_len ds  0d                                                       01-DCCPR
00000638                                     709+@REGION_788_1 ds 0h                                                     01-DCCPR
00000638 EBEC D008 0024          00000008    710+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                             711 * ******* End of Prologue
                                             712 * *
                                             713 * ***           return rbuf->rbuf_len;
0000063E E3F0 1000 0004          00000000    714          LG    15,0(0,1)   ; rbuf
00000644 E3F0 F020 0004          00000020    715          LG    15,32(0,15) ; offset of rbuf_len in rd_buf_s
                                             716 * ***   }
                                             717 * * **** Start of Epilogue
                                                                                                                           Page   19 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             718          DCCEPIL
0000064A                                     719+         ds 0h                                                          01-DCCEP
                                             720+* Epilog
                                             721+* Epilog
0000064A E3E0 D008 0004          00000008    722+         lg    14,8(,13) restore the reg                                01-DCCEP
00000650 EB1C D020 0004          00000020    723+         lmg   1,12,32(13)                                              01-DCCEP
00000656 07FE                                724+         br   14                                                        01-DCCEP
                                             725+* End of Epilog
                                             726 * * **** End of Epilogue
                                             727 *
                                             728 *   DSECT for automatic variables in "rd_buf_len"
                                             729 *      (FUNCTION #788)
                                             730 *
00000000                00000000 000000A8    731 @AUTO#rd_buf_len DSECT
00000000                                     732          DS    XL168
                                             733 *
00000658                00000000 0000BFA0    734 @CODE    CSECT
                                             735 *
                                             736 *
                                             737 *
                                             738 * ....... start of rd_slice_pos
00000658                                     739 @LNAME803 DS   0H
00000658 0000000C                            740          DC    X'0000000C'
0000065C 99846DA293898385                    741          DC    C'rd_slice_pos'
00000668 00                                  742          DC    X'00'
                                             743 rd_slice_pos DCCPRLG CINDEX=803,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,*
                                                                LNAMEADDR=@LNAME803
                                             744          macro
                                             745          dccextrn &m
                                             746          gblc    &$dccext(1000)
                                             747          gbla    &$dccexti
                                             748          lcla    &i
                                             749 &$dccext(&$dccexti+1) setc    '&m'
                                             750 &i       seta    1
                                             751 .loop    aif    (&i gt &$dccexti).around
                                             752          aif    ('&$dccext(&i)' eq '&m').getout
                                             753 &i       seta    &i+1
                                             754          ago     .loop
                                             755 .around  anop
                                             756 &$dccexti seta &$dccexti+1
                                             757          extrn  &m
                                             758 .getout  anop
                                             759          mend
00000670                                     760+$eye0023    ds    0d                                                    02-DCCCA
00000670 C4C3C3                              761+         dc cl3'DCC'                                                    02-DCCCA
00000673 01                                  762+         dc xl1'01' format one                                          02-DCCCA
00000674 00000000                            763+         dc a(0)                                                        02-DCCCA
00000678 00000000000006E2                    764+         dc ad(@PER_803)                                                02-DCCCA
00000680 00000000000000D0                    765+         dc ad(208)                                                     02-DCCCA
00000688 0000000000000000                    766+         dc ad(0)                                                       02-DCCCA
00000690 0000000000001000                    767+         dc ad(4096)                                                    02-DCCCA
00000698 20                                  768+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page   20 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000699 03                                  769+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000069A 03                                  770+         dc al1(3)                                                      02-DCCCA
0000069B 08                                  771+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000069C 00                                  772+         dc bl.8'00000000'                                              02-DCCCA
0000069D 000000                              773+         dc al3(0)                                                      02-DCCCA
000006A0 0000000000000658                    774+         dc ad(@LNAME803)                                               02-DCCCA
000006A8                                     775+         ds 0d                                                          02-DCCCA
000006A8 0000000000000670                    776+         dc ad($eye0023)                                                02-DCCCA
000006B0 0000000000000000                    777+         dc ad(0)                                                       02-DCCCA
000006B8                                     778+         ds    0d                                                       01-DCCPR
000006B8                                     779+rd_slice_pos ds 0d                                                      01-DCCPR
000006B8                                     780+@REGION_803_1 ds 0h                                                     01-DCCPR
000006B8 EBEC D008 0024          00000008    781+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000006BE E3E0 D088 0004          00000088    782+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000006C4 E3C0 D090 0004          00000090    783+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000006CA B904 002E                           784+         lgr   2,14                copy addr of our savearea            01-DCCPR
000006CE E3B0 C018 0004          00000018    785+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000006D4 A7EB 00D0               000000D0    786+         aghi  14,208              increase by frame size               01-DCCPR
000006D8 E3E0 C020 0021          00000020    787+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000006DE 4720 B020               00000020    788+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000006E2                                     789+@PER_803 ds    0h                                                       01-DCCPR
000006E2 EBDE 2080 0024          00000080    790+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000006E8 E3C0 2090 0024          00000090    791+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000006EE B904 00D2                           792+         lgr   13,2                set real frame pointer               01-DCCPR
000006F2 B904 00CF                           793+         lgr   12,15               set base reg                         01-DCCPR
                        000006B8             794+         using @REGION_803_1,12                                         01-DCCPR
                                             795 * ******* End of Prologue
                                             796 * *
000006F6 E320 1000 0004          00000000    797          LG    2,0(0,1)
                                             798 * ***           rd_slice_t newslice = *slice;
000006FC E3F0 1008 0004          00000008    799          LG    15,8(0,1)   ; slice
00000702 D227 D0A8 F000 000000A8 00000000    800          MVC   168(40,13),0(15)
                                             801 * ***
                                             802 * ***           if (!slice->seg)
00000708 E310 F008 0002          00000008    803          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
0000070E 4770 C06C               00000724    804          BNZ   @L47
                                             805 * ***                   return newslice;
00000712 D227 2000 D0A8 00000000 000000A8    806          MVC   0(40,2),168(13)
00000718 47F0 C08A               00000742    807          B     @ret_lab_803
00000720                                     808          DS    0D
00000720 000000D0                            809 @FRAMESIZE_803 DC F'208'
00000724                                     810 @L47     DS    0H
                                             811 * ***
                                             812 * ***           newslice.start = slice->seg->seg_absof + slice->rof;
00000724 E310 F008 0004          00000008    813          LG    1,8(0,15)   ; offset of seg in rd_slice_s
0000072A E310 1028 0004          00000028    814          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
00000730 E310 F010 000A          00000010    815          ALG   1,16(0,15)
00000736 E310 D0C0 0024          000000C0    816          STG   1,192(0,13) ; offset of start in rd_slice_s
                                             817 * ***
                                             818 * ***           return newslice;
0000073C D227 2000 D0A8 00000000 000000A8    819          MVC   0(40,2),168(13)
                                             820 * ***   }
                                                                                                                           Page   21 
  Active Usings: @REGION_803_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000742                                     821 @ret_lab_803 DS 0H
                                             822 * * **** Start of Epilogue
                                             823          DCCEPIL
00000742                                     824+         ds 0h                                                          01-DCCEP
                                             825+* Epilog
00000742 D707 D088 D088 00000088 00000088    826+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000748 E3D0 D080 0004          00000080    827+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000074E E3C0 D090 0004          00000090    828+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000754 E3B0 C018 0004          00000018    829+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000075A E3C0 B010 0021          00000010    830+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000760 E3E0 D008 0004          00000008    831+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000766 EB1C D020 0004          00000020    832+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000076C 078E                                833+         bcr 8,14                if same dsab, just return              01-DCCEP
0000076E E3F0 D010 0024          00000010    834+         stg 15,16(0,13)         save return code                       01-DCCEP
00000774 E300 D018 0024          00000018    835+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000077A E3F0 D090 0004          00000090    836+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000780 E3F0 F018 0004          00000018    837+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000786 47F0 F040               00000040    838+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             839+* End of Epilog
                                             840 * * **** End of Epilogue
                                             841          DROP  12
                                             842 *
                                             843 *   DSECT for automatic variables in "rd_slice_pos"
                                             844 *      (FUNCTION #803)
                                             845 *
00000000                00000000 000000D0    846 @AUTO#rd_slice_pos DSECT
00000000                                     847          DS    XL168
000000A8                                     848 rd_slice_pos#newslice#0 DS 40XL1 ; newslice
                                             849 *
0000078A                00000000 0000BFA0    850 @CODE    CSECT
                                             851 *
                                             852 *
                                             853 *
                                             854 * ....... start of rd_slice_abs_offset
0000078A                                     855 @LNAME804 DS   0H
0000078A 00000013                            856          DC    X'00000013'
0000078E 99846DA293898385                    857          DC    C'rd_slice_abs_offset'
000007A1 00                                  858          DC    X'00'
                                             859 rd_slice_abs_offset DCCPRLG CINDEX=804,BASER=12,FRAME=168,SAVEAREA=NO,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME804
                                             860          macro
                                             861          dccextrn &m
                                             862          gblc    &$dccext(1000)
                                             863          gbla    &$dccexti
                                             864          lcla    &i
                                             865 &$dccext(&$dccexti+1) setc    '&m'
                                             866 &i       seta    1
                                             867 .loop    aif    (&i gt &$dccexti).around
                                             868          aif    ('&$dccext(&i)' eq '&m').getout
                                             869 &i       seta    &i+1
                                             870          ago     .loop
                                             871 .around  anop
                                                                                                                           Page   22 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             872 &$dccexti seta &$dccexti+1
                                             873          extrn  &m
                                             874 .getout  anop
                                             875          mend
000007A8                                     876+$eye0026    ds    0d                                                    02-DCCCA
000007A8 C4C3C3                              877+         dc cl3'DCC'                                                    02-DCCCA
000007AB 01                                  878+         dc xl1'01' format one                                          02-DCCCA
000007AC 00000000                            879+         dc a(0)                                                        02-DCCCA
000007B0 0000000000000000                    880+         dc ad(0)                                                       02-DCCCA
000007B8 00000000000000A8                    881+         dc ad(168)                                                     02-DCCCA
000007C0 0000000000000000                    882+         dc ad(0)                                                       02-DCCCA
000007C8 0000000000001000                    883+         dc ad(4096)                                                    02-DCCCA
000007D0 20                                  884+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000007D1 03                                  885+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000007D2 03                                  886+         dc al1(3)                                                      02-DCCCA
000007D3 08                                  887+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000007D4 00                                  888+         dc bl.8'00000000'                                              02-DCCCA
000007D5 000000                              889+         dc al3(0)                                                      02-DCCCA
000007D8 000000000000078A                    890+         dc ad(@LNAME804)                                               02-DCCCA
000007E0                                     891+         ds 0d                                                          02-DCCCA
000007E0 00000000000007A8                    892+         dc ad($eye0026)                                                02-DCCCA
000007E8 0000000000000000                    893+         dc ad(0)                                                       02-DCCCA
000007F0                                     894+         ds    0d                                                       01-DCCPR
000007F0                                     895+rd_slice_abs_offset ds 0d                                               01-DCCPR
000007F0                                     896+@REGION_804_1 ds 0h                                                     01-DCCPR
000007F0 EBEC D008 0024          00000008    897+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000007F6 B904 00CF                           898+         lgr   12,15               set base reg                         01-DCCPR
                        000007F0             899+         using @REGION_804_1,12                                         01-DCCPR
                                             900 * ******* End of Prologue
                                             901 * *
                                             902 * ***           if (((!slice->seg)))
000007FA E3F0 1000 0004          00000000    903          LG    15,0(0,1)   ; slice
00000800 E310 F008 0002          00000008    904          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
00000806 4770 C024               00000814    905          BNZ   @L48
                                             906 * ***                   return slice->end;
0000080A E3F0 F020 0004          00000020    907          LG    15,32(0,15) ; offset of end in rd_slice_s
00000810 47F0 C03A               0000082A    908          B     @ret_lab_804
00000814                                     909 @L48     DS    0H
                                             910 * ***
                                             911 * ***           return slice->seg->seg_absof + slice->rof;
00000814 E310 F008 0004          00000008    912          LG    1,8(0,15)   ; offset of seg in rd_slice_s
0000081A E310 1028 0004          00000028    913          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
00000820 E310 F010 000A          00000010    914          ALG   1,16(0,15)
00000826 B904 00F1                           915          LGR   15,1
                                             916 * ***   }
0000082A                                     917 @ret_lab_804 DS 0H
                                             918 * * **** Start of Epilogue
                                             919          DCCEPIL
0000082A                                     920+         ds 0h                                                          01-DCCEP
                                             921+* Epilog
                                             922+* Epilog
0000082A E3E0 D008 0004          00000008    923+         lg    14,8(,13) restore the reg                                01-DCCEP
                                                                                                                           Page   23 
  Active Usings: @REGION_804_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000830 EB1C D020 0004          00000020    924+         lmg   1,12,32(13)                                              01-DCCEP
00000836 07FE                                925+         br   14                                                        01-DCCEP
                                             926+* End of Epilog
                                             927 * * **** End of Epilogue
                                             928          DROP  12
                                             929 *
                                             930 *   DSECT for automatic variables in "rd_slice_abs_offset"
                                             931 *      (FUNCTION #804)
                                             932 *
00000000                00000000 000000A8    933 @AUTO#rd_slice_abs_offset DSECT
00000000                                     934          DS    XL168
                                             935 *
00000838                00000000 0000BFA0    936 @CODE    CSECT
                                             937 *
                                             938 *
                                             939 *
                                             940 * ....... start of rd_slice_offset
00000838                                     941 @LNAME805 DS   0H
00000838 0000000F                            942          DC    X'0000000F'
0000083C 99846DA293898385                    943          DC    C'rd_slice_offset'
0000084B 00                                  944          DC    X'00'
                                             945 rd_slice_offset DCCPRLG CINDEX=805,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME805
                                             946          macro
                                             947          dccextrn &m
                                             948          gblc    &$dccext(1000)
                                             949          gbla    &$dccexti
                                             950          lcla    &i
                                             951 &$dccext(&$dccexti+1) setc    '&m'
                                             952 &i       seta    1
                                             953 .loop    aif    (&i gt &$dccexti).around
                                             954          aif    ('&$dccext(&i)' eq '&m').getout
                                             955 &i       seta    &i+1
                                             956          ago     .loop
                                             957 .around  anop
                                             958 &$dccexti seta &$dccexti+1
                                             959          extrn  &m
                                             960 .getout  anop
                                             961          mend
00000850                                     962+$eye0029    ds    0d                                                    02-DCCCA
00000850 C4C3C3                              963+         dc cl3'DCC'                                                    02-DCCCA
00000853 01                                  964+         dc xl1'01' format one                                          02-DCCCA
00000854 00000000                            965+         dc a(0)                                                        02-DCCCA
00000858 0000000000000000                    966+         dc ad(0)                                                       02-DCCCA
00000860 00000000000000A8                    967+         dc ad(168)                                                     02-DCCCA
00000868 0000000000000000                    968+         dc ad(0)                                                       02-DCCCA
00000870 0000000000001000                    969+         dc ad(4096)                                                    02-DCCCA
00000878 20                                  970+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000879 03                                  971+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000087A 03                                  972+         dc al1(3)                                                      02-DCCCA
0000087B 08                                  973+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000087C 00                                  974+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   24 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000087D 000000                              975+         dc al3(0)                                                      02-DCCCA
00000880 0000000000000838                    976+         dc ad(@LNAME805)                                               02-DCCCA
00000888                                     977+         ds 0d                                                          02-DCCCA
00000888 0000000000000850                    978+         dc ad($eye0029)                                                02-DCCCA
00000890 0000000000000000                    979+         dc ad(0)                                                       02-DCCCA
00000898                                     980+         ds    0d                                                       01-DCCPR
00000898                                     981+rd_slice_offset ds 0d                                                   01-DCCPR
00000898                                     982+@REGION_805_1 ds 0h                                                     01-DCCPR
00000898 EBEC D008 0024          00000008    983+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000089E B904 00CF                           984+         lgr   12,15               set base reg                         01-DCCPR
                        00000898             985+         using @REGION_805_1,12                                         01-DCCPR
                                             986 * ******* End of Prologue
                                             987 * *
                                             988 * ***           if (((!slice->seg)))
000008A2 E3F0 1000 0004          00000000    989          LG    15,0(0,1)   ; slice
000008A8 E310 F008 0002          00000008    990          LTG   1,8(0,15)   ; offset of seg in rd_slice_s
000008AE 4770 C02E               000008C6    991          BNZ   @L49
                                             992 * ***                   return ((slice)->end - (slice)->start);
000008B2 E310 F020 0004          00000020    993          LG    1,32(0,15)  ; offset of end in rd_slice_s
000008B8 E310 F018 000B          00000018    994          SLG   1,24(0,15)
000008BE B904 00F1                           995          LGR   15,1
000008C2 47F0 C04A               000008E2    996          B     @ret_lab_805
000008C6                                     997 @L49     DS    0H
                                             998 * ***
                                             999 * ***           return (slice->seg->seg_absof + slice->rof) - slice->s\
                                            1000 * tart;
000008C6 E310 F008 0004          00000008   1001          LG    1,8(0,15)   ; offset of seg in rd_slice_s
000008CC E310 1028 0004          00000028   1002          LG    1,40(0,1)   ; offset of seg_absof in rd_segment_s
000008D2 E310 F010 000A          00000010   1003          ALG   1,16(0,15)
000008D8 E310 F018 000B          00000018   1004          SLG   1,24(0,15)
000008DE B904 00F1                          1005          LGR   15,1
                                            1006 * ***   }
000008E2                                    1007 @ret_lab_805 DS 0H
                                            1008 * * **** Start of Epilogue
                                            1009          DCCEPIL
000008E2                                    1010+         ds 0h                                                          01-DCCEP
                                            1011+* Epilog
                                            1012+* Epilog
000008E2 E3E0 D008 0004          00000008   1013+         lg    14,8(,13) restore the reg                                01-DCCEP
000008E8 EB1C D020 0004          00000020   1014+         lmg   1,12,32(13)                                              01-DCCEP
000008EE 07FE                               1015+         br   14                                                        01-DCCEP
                                            1016+* End of Epilog
                                            1017 * * **** End of Epilogue
                                            1018          DROP  12
                                            1019 *
                                            1020 *   DSECT for automatic variables in "rd_slice_offset"
                                            1021 *      (FUNCTION #805)
                                            1022 *
00000000                00000000 000000A8   1023 @AUTO#rd_slice_offset DSECT
00000000                                    1024          DS    XL168
                                            1025 *
000008F0                00000000 0000BFA0   1026 @CODE    CSECT
                                                                                                                           Page   25 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1027 *
                                            1028 *
                                            1029 *
                                            1030 * ....... start of rd_crc32_init
000008F0                                    1031 @LNAME831 DS   0H
000008F0 0000000D                           1032          DC    X'0000000D'
000008F4 99846D839983F3F2                   1033          DC    C'rd_crc32_init'
00000901 00                                 1034          DC    X'00'
                                            1035 rd_crc32_init DCCPRLG CINDEX=831,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME831
                                            1036          macro
                                            1037          dccextrn &m
                                            1038          gblc    &$dccext(1000)
                                            1039          gbla    &$dccexti
                                            1040          lcla    &i
                                            1041 &$dccext(&$dccexti+1) setc    '&m'
                                            1042 &i       seta    1
                                            1043 .loop    aif    (&i gt &$dccexti).around
                                            1044          aif    ('&$dccext(&i)' eq '&m').getout
                                            1045 &i       seta    &i+1
                                            1046          ago     .loop
                                            1047 .around  anop
                                            1048 &$dccexti seta &$dccexti+1
                                            1049          extrn  &m
                                            1050 .getout  anop
                                            1051          mend
00000908                                    1052+$eye0032    ds    0d                                                    02-DCCCA
00000908 C4C3C3                             1053+         dc cl3'DCC'                                                    02-DCCCA
0000090B 01                                 1054+         dc xl1'01' format one                                          02-DCCCA
0000090C 00000000                           1055+         dc a(0)                                                        02-DCCCA
00000910 0000000000000000                   1056+         dc ad(0)                                                       02-DCCCA
00000918 00000000000000A8                   1057+         dc ad(168)                                                     02-DCCCA
00000920 0000000000000000                   1058+         dc ad(0)                                                       02-DCCCA
00000928 0000000000001000                   1059+         dc ad(4096)                                                    02-DCCCA
00000930 20                                 1060+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000931 03                                 1061+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000932 03                                 1062+         dc al1(3)                                                      02-DCCCA
00000933 08                                 1063+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000934 00                                 1064+         dc bl.8'00000000'                                              02-DCCCA
00000935 000000                             1065+         dc al3(0)                                                      02-DCCCA
00000938 00000000000008F0                   1066+         dc ad(@LNAME831)                                               02-DCCCA
00000940                                    1067+         ds 0d                                                          02-DCCCA
00000940 0000000000000908                   1068+         dc ad($eye0032)                                                02-DCCCA
00000948 0000000000000000                   1069+         dc ad(0)                                                       02-DCCCA
00000950                                    1070+         ds    0d                                                       01-DCCPR
00000950                                    1071+rd_crc32_init ds 0d                                                     01-DCCPR
00000950                                    1072+@REGION_831_1 ds 0h                                                     01-DCCPR
00000950 EBEC D008 0024          00000008   1073+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1074 * ******* End of Prologue
                                            1075 * *
                                            1076 * ***
                                            1077 * ***
                                                                                                                           Page   26 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1078 * ***
                                            1079 * ***       return 0xffffffff;
00000956 C0FF FFFF FFFF                     1080          LLILF 15,X'FFFFFFFF' ; 4294967295
                                            1081 * ***
                                            1082 * ***   }
                                            1083 * * **** Start of Epilogue
                                            1084          DCCEPIL
0000095C                                    1085+         ds 0h                                                          01-DCCEP
                                            1086+* Epilog
                                            1087+* Epilog
0000095C E3E0 D008 0004          00000008   1088+         lg    14,8(,13) restore the reg                                01-DCCEP
00000962 EB1C D020 0004          00000020   1089+         lmg   1,12,32(13)                                              01-DCCEP
00000968 07FE                               1090+         br   14                                                        01-DCCEP
                                            1091+* End of Epilog
                                            1092 * * **** End of Epilogue
                                            1093 *
                                            1094 *   DSECT for automatic variables in "rd_crc32_init"
                                            1095 *      (FUNCTION #831)
                                            1096 *
00000000                00000000 000000A8   1097 @AUTO#rd_crc32_init DSECT
00000000                                    1098          DS    XL168
                                            1099 *
0000096A                00000000 0000BFA0   1100 @CODE    CSECT
                                            1101 *
                                            1102 *
                                            1103 *
                                            1104 * ....... start of rd_crc32_update
0000096A                                    1105 @LNAME832 DS   0H
0000096A 0000000F                           1106          DC    X'0000000F'
0000096E 99846D839983F3F2                   1107          DC    C'rd_crc32_update'
0000097D 00                                 1108          DC    X'00'
                                            1109 rd_crc32_update DCCPRLG CINDEX=832,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME832
                                            1110          macro
                                            1111          dccextrn &m
                                            1112          gblc    &$dccext(1000)
                                            1113          gbla    &$dccexti
                                            1114          lcla    &i
                                            1115 &$dccext(&$dccexti+1) setc    '&m'
                                            1116 &i       seta    1
                                            1117 .loop    aif    (&i gt &$dccexti).around
                                            1118          aif    ('&$dccext(&i)' eq '&m').getout
                                            1119 &i       seta    &i+1
                                            1120          ago     .loop
                                            1121 .around  anop
                                            1122 &$dccexti seta &$dccexti+1
                                            1123          extrn  &m
                                            1124 .getout  anop
                                            1125          mend
00000980                                    1126+$eye0035    ds    0d                                                    02-DCCCA
00000980 C4C3C3                             1127+         dc cl3'DCC'                                                    02-DCCCA
00000983 01                                 1128+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page   27 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000984 00000000                           1129+         dc a(0)                                                        02-DCCCA
00000988 00000000000009F2                   1130+         dc ad(@PER_832)                                                02-DCCCA
00000990 00000000000000B0                   1131+         dc ad(176)                                                     02-DCCCA
00000998 0000000000000000                   1132+         dc ad(0)                                                       02-DCCCA
000009A0 0000000000001000                   1133+         dc ad(4096)                                                    02-DCCCA
000009A8 20                                 1134+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000009A9 03                                 1135+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000009AA 03                                 1136+         dc al1(3)                                                      02-DCCCA
000009AB 08                                 1137+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000009AC 00                                 1138+         dc bl.8'00000000'                                              02-DCCCA
000009AD 000000                             1139+         dc al3(0)                                                      02-DCCCA
000009B0 000000000000096A                   1140+         dc ad(@LNAME832)                                               02-DCCCA
000009B8                                    1141+         ds 0d                                                          02-DCCCA
000009B8 0000000000000980                   1142+         dc ad($eye0035)                                                02-DCCCA
000009C0 0000000000000000                   1143+         dc ad(0)                                                       02-DCCCA
000009C8                                    1144+         ds    0d                                                       01-DCCPR
000009C8                                    1145+rd_crc32_update ds 0d                                                   01-DCCPR
000009C8                                    1146+@REGION_832_1 ds 0h                                                     01-DCCPR
000009C8 EBEC D008 0024          00000008   1147+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000009CE E3E0 D088 0004          00000088   1148+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000009D4 E3C0 D090 0004          00000090   1149+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000009DA B904 002E                          1150+         lgr   2,14                copy addr of our savearea            01-DCCPR
000009DE E3B0 C018 0004          00000018   1151+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000009E4 A7EB 00B0               000000B0   1152+         aghi  14,176              increase by frame size               01-DCCPR
000009E8 E3E0 C020 0021          00000020   1153+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000009EE 4720 B020               00000020   1154+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000009F2                                    1155+@PER_832 ds    0h                                                       01-DCCPR
000009F2 EBDE 2080 0024          00000080   1156+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000009F8 E3C0 2090 0024          00000090   1157+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000009FE B904 00D2                          1158+         lgr   13,2                set real frame pointer               01-DCCPR
00000A02 B904 00CF                          1159+         lgr   12,15               set base reg                         01-DCCPR
                        000009C8            1160+         using @REGION_832_1,12                                         01-DCCPR
                                            1161          DCCPRV REG=2      ; Get PRV from DVT
00000A06 E320 B008 0004          00000008   1162+         LG 2,8(0,11)                                                   01-DCCPR
00000A0C B904 0031                          1163          LGR   3,1         ; ptr to parm area
                                            1164 * ******* End of Prologue
                                            1165 * *
00000A10 58F0 3004               00000004   1166          L     15,4(0,3)   ; crc
00000A14 E310 3008 0004          00000008   1167          LG    1,8(0,3)    ; data
                                            1168 * ***
                                            1169 * ***
                                            1170 * ***
                                            1171 * ***
                                            1172 * ***       unsigned int tbl_idx;
                                            1173 * ***
                                            1174 * ***       while (data_len--) {
00000A1A 47F0 C090               00000A58   1175          B     @L54
00000A20                                    1176          DS    0D
00000A20 000000B0                           1177 @FRAMESIZE_832 DC F'176'
00000A24 00000000                           1178 @lit_832_16 DC Q(crc_table)
00000A28                                    1179 @L53     DS    0H
                                            1180 * ***           tbl_idx = (crc ^ *data) & 0xff;
                                                                                                                           Page   28 
  Active Usings: @REGION_832_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000A28 E340 1000 0094          00000000   1181          LLC   4,0(0,1)
00000A2E 185F                               1182          LR    5,15
00000A30 1754                               1183          XR    5,4
00000A32 C05B 0000 00FF                     1184          NILF  5,X'000000FF'
                                            1185 * ***           crc = (crc_table[tbl_idx] ^ (crc >> 8)) & 0xffffffff;
00000A38 B916 0045                          1186          LLGFR 4,5
00000A3C E350 C05C 0016          00000A24   1187          LLGF  5,@lit_832_16 ; crc_table
00000A42 EB44 0002 000D          00000002   1188          SLLG  4,4,2(0)    ; *0x4
00000A48 4145 4000               00000000   1189          LA    4,0(5,4)
00000A4C 88F0 0008               00000008   1190          SRL   15,8(0)
00000A50 57F4 2000               00000000   1191          X     15,0(4,2)
                                            1192 * ***
                                            1193 * ***           data++;
00000A54 4110 1001               00000001   1194          LA    1,1(0,1)
                                            1195 * ***       }
00000A58                                    1196 @L54     DS    0H
00000A58 E340 3010 0004          00000010   1197          LG    4,16(0,3)   ; data_len
00000A5E B904 0054                          1198          LGR   5,4
00000A62 A75B FFFF               0000FFFF   1199          AGHI  5,-1
00000A66 E350 3010 0024          00000010   1200          STG   5,16(0,3)   ; data_len
00000A6C B902 0044                          1201          LTGR  4,4
00000A70 4770 C060               00000A28   1202          BNZ   @L53
                                            1203 * ***       return crc & 0xffffffff;
00000A74 B916 00FF                          1204          LLGFR 15,15
                                            1205 * ***
                                            1206 * ***   }
                                            1207 * * **** Start of Epilogue
                                            1208          DCCEPIL
00000A78                                    1209+         ds 0h                                                          01-DCCEP
                                            1210+* Epilog
00000A78 D707 D088 D088 00000088 00000088   1211+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000A7E E3D0 D080 0004          00000080   1212+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000A84 E3C0 D090 0004          00000090   1213+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000A8A E3B0 C018 0004          00000018   1214+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000A90 E3C0 B010 0021          00000010   1215+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000A96 E3E0 D008 0004          00000008   1216+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000A9C EB1C D020 0004          00000020   1217+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000AA2 078E                               1218+         bcr 8,14                if same dsab, just return              01-DCCEP
00000AA4 E3F0 D010 0024          00000010   1219+         stg 15,16(0,13)         save return code                       01-DCCEP
00000AAA E300 D018 0024          00000018   1220+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000AB0 E3F0 D090 0004          00000090   1221+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000AB6 E3F0 F018 0004          00000018   1222+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000ABC 47F0 F040               00000040   1223+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1224+* End of Epilog
                                            1225 * * **** End of Epilogue
                                            1226          DROP  12
                                            1227 *
                                            1228 *   DSECT for automatic variables in "rd_crc32_update"
                                            1229 *      (FUNCTION #832)
                                            1230 *
00000000                00000000 000000AC   1231 @AUTO#rd_crc32_update DSECT
00000000                                    1232          DS    XL168
                                                                                                                           Page   29 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000A8                                    1233 rd_crc32_update#tbl_idx#0 DS 1F ; tbl_idx
                                            1234 *
00000AC0                00000000 0000BFA0   1235 @CODE    CSECT
                                            1236 *
                                            1237 *
                                            1238 *
                                            1239 * ....... start of rd_crc32_finalize
00000AC0                                    1240 @LNAME833 DS   0H
00000AC0 00000011                           1241          DC    X'00000011'
00000AC4 99846D839983F3F2                   1242          DC    C'rd_crc32_finalize'
00000AD5 00                                 1243          DC    X'00'
                                            1244 rd_crc32_finalize DCCPRLG CINDEX=833,BASER=0,FRAME=168,SAVEAREA=NO,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME833
                                            1245          macro
                                            1246          dccextrn &m
                                            1247          gblc    &$dccext(1000)
                                            1248          gbla    &$dccexti
                                            1249          lcla    &i
                                            1250 &$dccext(&$dccexti+1) setc    '&m'
                                            1251 &i       seta    1
                                            1252 .loop    aif    (&i gt &$dccexti).around
                                            1253          aif    ('&$dccext(&i)' eq '&m').getout
                                            1254 &i       seta    &i+1
                                            1255          ago     .loop
                                            1256 .around  anop
                                            1257 &$dccexti seta &$dccexti+1
                                            1258          extrn  &m
                                            1259 .getout  anop
                                            1260          mend
00000AD8                                    1261+$eye0039    ds    0d                                                    02-DCCCA
00000AD8 C4C3C3                             1262+         dc cl3'DCC'                                                    02-DCCCA
00000ADB 01                                 1263+         dc xl1'01' format one                                          02-DCCCA
00000ADC 00000000                           1264+         dc a(0)                                                        02-DCCCA
00000AE0 0000000000000000                   1265+         dc ad(0)                                                       02-DCCCA
00000AE8 00000000000000A8                   1266+         dc ad(168)                                                     02-DCCCA
00000AF0 0000000000000000                   1267+         dc ad(0)                                                       02-DCCCA
00000AF8 0000000000001000                   1268+         dc ad(4096)                                                    02-DCCCA
00000B00 20                                 1269+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000B01 03                                 1270+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000B02 03                                 1271+         dc al1(3)                                                      02-DCCCA
00000B03 08                                 1272+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000B04 00                                 1273+         dc bl.8'00000000'                                              02-DCCCA
00000B05 000000                             1274+         dc al3(0)                                                      02-DCCCA
00000B08 0000000000000AC0                   1275+         dc ad(@LNAME833)                                               02-DCCCA
00000B10                                    1276+         ds 0d                                                          02-DCCCA
00000B10 0000000000000AD8                   1277+         dc ad($eye0039)                                                02-DCCCA
00000B18 0000000000000000                   1278+         dc ad(0)                                                       02-DCCCA
00000B20                                    1279+         ds    0d                                                       01-DCCPR
00000B20                                    1280+rd_crc32_finalize ds 0d                                                 01-DCCPR
00000B20                                    1281+@REGION_833_1 ds 0h                                                     01-DCCPR
00000B20 EBEC D008 0024          00000008   1282+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1283 * ******* End of Prologue
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1284 * *
                                            1285 * ***
                                            1286 * ***
                                            1287 * ***
                                            1288 * ***       return crc ^ 0xffffffff;
00000B26 58F0 1004               00000004   1289          L     15,4(0,1)   ; crc
00000B2A C0F7 FFFF FFFF                     1290          XILF  15,X'FFFFFFFF'
00000B30 B916 00FF                          1291          LLGFR 15,15
                                            1292 * ***
                                            1293 * ***   }
                                            1294 * * **** Start of Epilogue
                                            1295          DCCEPIL
00000B34                                    1296+         ds 0h                                                          01-DCCEP
                                            1297+* Epilog
                                            1298+* Epilog
00000B34 E3E0 D008 0004          00000008   1299+         lg    14,8(,13) restore the reg                                01-DCCEP
00000B3A EB1C D020 0004          00000020   1300+         lmg   1,12,32(13)                                              01-DCCEP
00000B40 07FE                               1301+         br   14                                                        01-DCCEP
                                            1302+* End of Epilog
                                            1303 * * **** End of Epilogue
                                            1304 *
                                            1305 *   DSECT for automatic variables in "rd_crc32_finalize"
                                            1306 *      (FUNCTION #833)
                                            1307 *
00000000                00000000 000000A8   1308 @AUTO#rd_crc32_finalize DSECT
00000000                                    1309          DS    XL168
                                            1310 *
00000B42                00000000 0000BFA0   1311 @CODE    CSECT
                                            1312 *
                                            1313 *
                                            1314 *
                                            1315 * ....... start of rd_segment_destroy
00000B42                                    1316 @LNAME839 DS   0H
00000B42 00000012                           1317          DC    X'00000012'
00000B46 99846DA285879485                   1318          DC    C'rd_segment_destroy'
00000B58 00                                 1319          DC    X'00'
                                            1320 rd_segment_destroy DCCPRLG CINDEX=839,BASER=12,FRAME=176,ENTRY=NO,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME839
                                            1321          macro
                                            1322          dccextrn &m
                                            1323          gblc    &$dccext(1000)
                                            1324          gbla    &$dccexti
                                            1325          lcla    &i
                                            1326 &$dccext(&$dccexti+1) setc    '&m'
                                            1327 &i       seta    1
                                            1328 .loop    aif    (&i gt &$dccexti).around
                                            1329          aif    ('&$dccext(&i)' eq '&m').getout
                                            1330 &i       seta    &i+1
                                            1331          ago     .loop
                                            1332 .around  anop
                                            1333 &$dccexti seta &$dccexti+1
                                            1334          extrn  &m
                                                                                                                           Page   31 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1335 .getout  anop
                                            1336          mend
00000B60                                    1337+$eye0042    ds    0d                                                    02-DCCCA
00000B60 C4C3C3                             1338+         dc cl3'DCC'                                                    02-DCCCA
00000B63 01                                 1339+         dc xl1'01' format one                                          02-DCCCA
00000B64 00000000                           1340+         dc a(0)                                                        02-DCCCA
00000B68 0000000000000BD2                   1341+         dc ad(@PER_839)                                                02-DCCCA
00000B70 00000000000000B0                   1342+         dc ad(176)                                                     02-DCCCA
00000B78 0000000000000000                   1343+         dc ad(0)                                                       02-DCCCA
00000B80 0000000000001000                   1344+         dc ad(4096)                                                    02-DCCCA
00000B88 20                                 1345+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000B89 03                                 1346+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000B8A 03                                 1347+         dc al1(3)                                                      02-DCCCA
00000B8B 08                                 1348+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000B8C 00                                 1349+         dc bl.8'00000000'                                              02-DCCCA
00000B8D 000000                             1350+         dc al3(0)                                                      02-DCCCA
00000B90 0000000000000B42                   1351+         dc ad(@LNAME839)                                               02-DCCCA
00000B98                                    1352+         ds 0d                                                          02-DCCCA
00000B98 0000000000000B60                   1353+         dc ad($eye0042)                                                02-DCCCA
00000BA0 0000000000000000                   1354+         dc ad(0)                                                       02-DCCCA
00000BA8                                    1355+         ds    0d                                                       01-DCCPR
00000BA8                                    1356+rd_segment_destroy ds 0d                                                01-DCCPR
00000BA8                                    1357+@REGION_839_1 ds 0h                                                     01-DCCPR
00000BA8 EBEC D008 0024          00000008   1358+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000BAE E3E0 D088 0004          00000088   1359+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000BB4 E3C0 D090 0004          00000090   1360+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000BBA B904 002E                          1361+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000BBE E3B0 C018 0004          00000018   1362+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000BC4 A7EB 00B0               000000B0   1363+         aghi  14,176              increase by frame size               01-DCCPR
00000BC8 E3E0 C020 0021          00000020   1364+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000BCE 4720 B020               00000020   1365+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000BD2                                    1366+@PER_839 ds    0h                                                       01-DCCPR
00000BD2 EBDE 2080 0024          00000080   1367+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000BD8 E3C0 2090 0024          00000090   1368+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000BDE B904 00D2                          1369+         lgr   13,2                set real frame pointer               01-DCCPR
00000BE2 B904 00CF                          1370+         lgr   12,15               set base reg                         01-DCCPR
                        00000BA8            1371+         using @REGION_839_1,12                                         01-DCCPR
                                            1372 * ******* End of Prologue
                                            1373 * *
00000BE6 E320 1000 0004          00000000   1374          LG    2,0(0,1)    ; seg
                                            1375 * ***
                                            1376 * ***           if (seg->seg_free && seg->seg_p)
00000BEC E3F0 2030 0002          00000030   1377          LTG   15,48(0,2)  ; offset of seg_free in rd_segment_s
00000BF2 4780 C070               00000C18   1378          BZ    @L55
00000BF6 E3F0 2010 0002          00000010   1379          LTG   15,16(0,2)  ; offset of seg_p in rd_segment_s
00000BFC 4780 C070               00000C18   1380          BZ    @L55
                                            1381 * ***                   seg->seg_free(seg->seg_p);
00000C00 E3F0 2010 0004          00000010   1382          LG    15,16(0,2)
00000C06 E3F0 D0A8 0024          000000A8   1383          STG   15,168(0,13)
00000C0C E3F0 2030 0004          00000030   1384          LG    15,48(0,2)  ; offset of seg_free in rd_segment_s
00000C12 4110 D0A8               000000A8   1385          LA    1,168(0,13)
00000C16                                    1386 @@gen_label21 DS    0H
                                                                                                                           Page   32 
  Active Usings: @REGION_839_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000C16 05EF                               1387          BALR  14,15
00000C18                                    1388 @@gen_label22 DS    0H
00000C18                                    1389 @L55     DS    0H
                                            1390 * ***
                                            1391 * ***           if (seg->seg_flags & 0x2)
00000C18 9102 203B      0000003B 00000002   1392          TM    59(2),2
00000C1C 4780 C08A               00000C32   1393          BZ    @ret_lab_839
                                            1394 * ***                   rd_free(seg);
00000C20 E320 D0A8 0024          000000A8   1395          STG   2,168(0,13)
00000C26 4110 D0A8               000000A8   1396          LA    1,168(0,13)
00000C2A E3F0 C0E0 0004          00000C88   1397          LG    15,@lit_839_18 ; rd_free
00000C30                                    1398 @@gen_label24 DS    0H
00000C30 05EF                               1399          BALR  14,15
00000C32                                    1400 @@gen_label25 DS    0H
00000C32                                    1401 @L56     DS    0H
                                            1402 * ***   }
00000C32                                    1403 @ret_lab_839 DS 0H
                                            1404 * * **** Start of Epilogue
                                            1405          DCCEPIL
00000C32                                    1406+         ds 0h                                                          01-DCCEP
                                            1407+* Epilog
00000C32 D707 D088 D088 00000088 00000088   1408+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000C38 E3D0 D080 0004          00000080   1409+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000C3E E3C0 D090 0004          00000090   1410+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000C44 E3B0 C018 0004          00000018   1411+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000C4A E3C0 B010 0021          00000010   1412+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000C50 E3E0 D008 0004          00000008   1413+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000C56 EB1C D020 0004          00000020   1414+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000C5C 078E                               1415+         bcr 8,14                if same dsab, just return              01-DCCEP
00000C5E E3F0 D010 0024          00000010   1416+         stg 15,16(0,13)         save return code                       01-DCCEP
00000C64 E300 D018 0024          00000018   1417+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000C6A E3F0 D090 0004          00000090   1418+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000C70 E3F0 F018 0004          00000018   1419+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000C76 47F0 F040               00000040   1420+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1421+* End of Epilog
                                            1422 * * **** End of Epilogue
00000C80                                    1423          DS    0D
00000C80 000000B0                           1424 @FRAMESIZE_839 DC F'176'
00000C84 00000000
00000C88 00000000000001C0                   1425 @lit_839_18 DC AD(rd_free)
                                            1426          DROP  12
                                            1427 *
                                            1428 *   DSECT for automatic variables in "rd_segment_destroy"
                                            1429 *      (FUNCTION #839)
                                            1430 *
00000000                00000000 000000A8   1431 @AUTO#rd_segment_destroy DSECT
00000000                                    1432          DS    XL168
                                            1433 *
00000C90                00000000 0000BFA0   1434 @CODE    CSECT
                                            1435 *
                                            1436 *
                                            1437 *
                                                                                                                           Page   33 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1438 * ....... start of rd_segment_init
00000C90                                    1439 @LNAME840 DS   0H
00000C90 0000000F                           1440          DC    X'0000000F'
00000C94 99846DA285879485                   1441          DC    C'rd_segment_init'
00000CA3 00                                 1442          DC    X'00'
                                            1443 rd_segment_init DCCPRLG CINDEX=840,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME840
                                            1444          macro
                                            1445          dccextrn &m
                                            1446          gblc    &$dccext(1000)
                                            1447          gbla    &$dccexti
                                            1448          lcla    &i
                                            1449 &$dccext(&$dccexti+1) setc    '&m'
                                            1450 &i       seta    1
                                            1451 .loop    aif    (&i gt &$dccexti).around
                                            1452          aif    ('&$dccext(&i)' eq '&m').getout
                                            1453 &i       seta    &i+1
                                            1454          ago     .loop
                                            1455 .around  anop
                                            1456 &$dccexti seta &$dccexti+1
                                            1457          extrn  &m
                                            1458 .getout  anop
                                            1459          mend
00000CA8                                    1460+$eye0045    ds    0d                                                    02-DCCCA
00000CA8 C4C3C3                             1461+         dc cl3'DCC'                                                    02-DCCCA
00000CAB 01                                 1462+         dc xl1'01' format one                                          02-DCCCA
00000CAC 00000000                           1463+         dc a(0)                                                        02-DCCCA
00000CB0 0000000000000000                   1464+         dc ad(0)                                                       02-DCCCA
00000CB8 00000000000000A8                   1465+         dc ad(168)                                                     02-DCCCA
00000CC0 0000000000000000                   1466+         dc ad(0)                                                       02-DCCCA
00000CC8 0000000000001000                   1467+         dc ad(4096)                                                    02-DCCCA
00000CD0 20                                 1468+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000CD1 03                                 1469+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000CD2 03                                 1470+         dc al1(3)                                                      02-DCCCA
00000CD3 08                                 1471+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000CD4 00                                 1472+         dc bl.8'00000000'                                              02-DCCCA
00000CD5 000000                             1473+         dc al3(0)                                                      02-DCCCA
00000CD8 0000000000000C90                   1474+         dc ad(@LNAME840)                                               02-DCCCA
00000CE0                                    1475+         ds 0d                                                          02-DCCCA
00000CE0 0000000000000CA8                   1476+         dc ad($eye0045)                                                02-DCCCA
00000CE8 0000000000000000                   1477+         dc ad(0)                                                       02-DCCCA
00000CF0                                    1478+         ds    0d                                                       01-DCCPR
00000CF0                                    1479+rd_segment_init ds 0d                                                   01-DCCPR
00000CF0                                    1480+@REGION_840_1 ds 0h                                                     01-DCCPR
00000CF0 EBEC D008 0024          00000008   1481+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1482 * ******* End of Prologue
                                            1483 * *
                                            1484 * ***           __memset(seg,0,sizeof(*seg));
00000CF6 E3F0 1000 0004          00000000   1485          LG    15,0(0,1)   ; seg
                                            1486 * setting 64 bytes to 0x00
00000CFC D73F F000 F000 00000000 00000000   1487          XC    0(64,15),0(15)
                                            1488 * ***           seg->seg_p     = mem;
                                                                                                                           Page   34 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000D02 E320 1008 0004          00000008   1489          LG    2,8(0,1)    ; mem
00000D08 E320 F010 0024          00000010   1490          STG   2,16(0,15)  ; offset of seg_p in rd_segment_s
                                            1491 * ***           seg->seg_size  = size;
00000D0E E310 1010 0004          00000010   1492          LG    1,16(0,1)   ; size
00000D14 E310 F020 0024          00000020   1493          STG   1,32(0,15)  ; offset of seg_size in rd_segment_s
                                            1494 * ***   }
00000D1A                                    1495 @ret_lab_840 DS 0H
                                            1496 * * **** Start of Epilogue
                                            1497          DCCEPIL
00000D1A                                    1498+         ds 0h                                                          01-DCCEP
                                            1499+* Epilog
                                            1500+* Epilog
00000D1A E3E0 D008 0004          00000008   1501+         lg    14,8(,13) restore the reg                                01-DCCEP
00000D20 EB1C D020 0004          00000020   1502+         lmg   1,12,32(13)                                              01-DCCEP
00000D26 07FE                               1503+         br   14                                                        01-DCCEP
                                            1504+* End of Epilog
                                            1505 * * **** End of Epilogue
                                            1506 *
                                            1507 *   DSECT for automatic variables in "rd_segment_init"
                                            1508 *      (FUNCTION #840)
                                            1509 *
00000000                00000000 000000A8   1510 @AUTO#rd_segment_init DSECT
00000000                                    1511          DS    XL168
                                            1512 *
00000D28                00000000 0000BFA0   1513 @CODE    CSECT
                                            1514 *
                                            1515 *
                                            1516 *
                                            1517 * ....... start of rd_buf_append_segment
00000D28                                    1518 @LNAME841 DS   0H
00000D28 00000015                           1519          DC    X'00000015'
00000D2C 99846D82A4866D81                   1520          DC    C'rd_buf_append_segment'
00000D41 00                                 1521          DC    X'00'
                                            1522 rd_buf_append_segment DCCPRLG CINDEX=841,BASER=12,FRAME=192,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME841
                                            1523          macro
                                            1524          dccextrn &m
                                            1525          gblc    &$dccext(1000)
                                            1526          gbla    &$dccexti
                                            1527          lcla    &i
                                            1528 &$dccext(&$dccexti+1) setc    '&m'
                                            1529 &i       seta    1
                                            1530 .loop    aif    (&i gt &$dccexti).around
                                            1531          aif    ('&$dccext(&i)' eq '&m').getout
                                            1532 &i       seta    &i+1
                                            1533          ago     .loop
                                            1534 .around  anop
                                            1535 &$dccexti seta &$dccexti+1
                                            1536          extrn  &m
                                            1537 .getout  anop
                                            1538          mend
00000D48                                    1539+$eye0048    ds    0d                                                    02-DCCCA
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000D48 C4C3C3                             1540+         dc cl3'DCC'                                                    02-DCCCA
00000D4B 01                                 1541+         dc xl1'01' format one                                          02-DCCCA
00000D4C 00000000                           1542+         dc a(0)                                                        02-DCCCA
00000D50 0000000000000DBA                   1543+         dc ad(@PER_841)                                                02-DCCCA
00000D58 00000000000000C0                   1544+         dc ad(192)                                                     02-DCCCA
00000D60 0000000000000000                   1545+         dc ad(0)                                                       02-DCCCA
00000D68 0000000000001000                   1546+         dc ad(4096)                                                    02-DCCCA
00000D70 20                                 1547+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D71 03                                 1548+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D72 03                                 1549+         dc al1(3)                                                      02-DCCCA
00000D73 08                                 1550+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D74 00                                 1551+         dc bl.8'00000000'                                              02-DCCCA
00000D75 000000                             1552+         dc al3(0)                                                      02-DCCCA
00000D78 0000000000000D28                   1553+         dc ad(@LNAME841)                                               02-DCCCA
00000D80                                    1554+         ds 0d                                                          02-DCCCA
00000D80 0000000000000D48                   1555+         dc ad($eye0048)                                                02-DCCCA
00000D88 0000000000000000                   1556+         dc ad(0)                                                       02-DCCCA
00000D90                                    1557+         ds    0d                                                       01-DCCPR
00000D90                                    1558+rd_buf_append_segment ds 0d                                             01-DCCPR
00000D90                                    1559+@REGION_841_1 ds 0h                                                     01-DCCPR
00000D90 EBEC D008 0024          00000008   1560+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000D96 E3E0 D088 0004          00000088   1561+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000D9C E3C0 D090 0004          00000090   1562+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000DA2 B904 002E                          1563+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000DA6 E3B0 C018 0004          00000018   1564+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000DAC A7EB 00C0               000000C0   1565+         aghi  14,192              increase by frame size               01-DCCPR
00000DB0 E3E0 C020 0021          00000020   1566+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000DB6 4720 B020               00000020   1567+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000DBA                                    1568+@PER_841 ds    0h                                                       01-DCCPR
00000DBA EBDE 2080 0024          00000080   1569+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000DC0 E3C0 2090 0024          00000090   1570+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000DC6 B904 00D2                          1571+         lgr   13,2                set real frame pointer               01-DCCPR
00000DCA B904 00CF                          1572+         lgr   12,15               set base reg                         01-DCCPR
                        00000D90            1573+         using @REGION_841_1,12                                         01-DCCPR
                                            1574 * ******* End of Prologue
                                            1575 * *
                                            1576 * ***           do {  (seg)->seg_link .tqe_next = (((void *)0)); (seg)\
                                            1577 * ->seg_link .tqe_prev = (&rbuf->rbuf_segments)->tqh_last; *(&rbuf->rb\
                                            1578 * uf_segments)->tqh_last = (seg); (&rbuf->rbuf_segments)->tqh_last = &\
                                            1579 * (seg)->seg_link .tqe_next; } while ( 0);
00000DCE E3F0 1000 0004          00000000   1580          LG    15,0(0,1)   ; rbuf
00000DD4 E320 1008 0004          00000008   1581          LG    2,8(0,1)    ; seg
00000DDA                                    1582 @L57     DS    0H
00000DDA A719 0000               00000000   1583          LGHI  1,0         ; 0
00000DDE E310 2000 0024          00000000   1584          STG   1,0(0,2)    ; seg
00000DE4 E310 F008 0004          00000008   1585          LG    1,8(0,15)   ; offset of tqh_last in rd_segment_head
00000DEA E310 2008 0024          00000008   1586          STG   1,8(0,2)    ; offset of tqe_prev in 0000027
00000DF0 E310 F008 0004          00000008   1587          LG    1,8(0,15)   ; offset of tqh_last in rd_segment_head
00000DF6 E320 1000 0024          00000000   1588          STG   2,0(0,1)
00000DFC E320 F008 0024          00000008   1589          STG   2,8(0,15)   ; offset of tqh_last in rd_segment_head
                                            1590 * ***           rbuf->rbuf_segment_cnt++;
00000E02 E310 F010 0004          00000010   1591          LG    1,16(0,15)
                                                                                                                           Page   36 
  Active Usings: @REGION_841_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000E08 A71B 0001               00000001   1592          AGHI  1,1
00000E0C E310 F010 0024          00000010   1593          STG   1,16(0,15)
                                            1594 * ***           seg->seg_absof      = rbuf->rbuf_len;
00000E12 E310 F020 0004          00000020   1595          LG    1,32(0,15)  ; offset of rbuf_len in rd_buf_s
00000E18 E310 2028 0024          00000028   1596          STG   1,40(0,2)   ; offset of seg_absof in rd_segment_s
                                            1597 * ***           rbuf->rbuf_len     += seg->seg_of;
00000E1E E310 F020 0004          00000020   1598          LG    1,32(0,15)
00000E24 E310 2018 000A          00000018   1599          ALG   1,24(0,2)
00000E2A E310 F020 0024          00000020   1600          STG   1,32(0,15)
                                            1601 * ***           rbuf->rbuf_size    += seg->seg_size;
00000E30 E310 F030 0004          00000030   1602          LG    1,48(0,15)
00000E36 E310 2020 000A          00000020   1603          ALG   1,32(0,2)
00000E3C E310 F030 0024          00000030   1604          STG   1,48(0,15)
                                            1605 * ***
                                            1606 * ***
                                            1607 * ***           if (!rbuf->rbuf_wpos)
00000E42 E310 F018 0002          00000018   1608          LTG   1,24(0,15)  ; offset of rbuf_wpos in rd_buf_s
00000E48 4770 C0D8               00000E68   1609          BNZ   @L60
                                            1610 * ***                   rbuf->rbuf_wpos = seg;
00000E4C E320 F018 0024          00000018   1611          STG   2,24(0,15)  ; offset of rbuf_wpos in rd_buf_s
00000E52 47F0 C0F0               00000E80   1612          B     @L61
00000E58                                    1613          DS    0D
00000E58 000000C0                           1614 @FRAMESIZE_841 DC F'192'
00000E5C 00000000
00000E60 0000000000001FF0                   1615 @lit_841_21 DC AD(rd_buf_get_writable0)
                                            1616 * ***           else
00000E68                                    1617 @L60     DS    0H
                                            1618 * ***                   rd_buf_get_writable0(rbuf, ((void *)0), ((void\
                                            1619 *  *)0));
00000E68 E3F0 D0A8 0024          000000A8   1620          STG   15,168(0,13)
00000E6E D70F D0B0 D0B0 000000B0 000000B0   1621          XC    176(16,13),176(13)
00000E74 4110 D0A8               000000A8   1622          LA    1,168(0,13)
00000E78 E3F0 C0D0 0004          00000E60   1623          LG    15,@lit_841_21 ; rd_buf_get_writable0
00000E7E                                    1624 @@gen_label27 DS    0H
00000E7E 05EF                               1625          BALR  14,15
00000E80                                    1626 @@gen_label28 DS    0H
00000E80                                    1627 @L61     DS    0H
                                            1628 * ***
                                            1629 * ***           return seg;
00000E80 B904 00F2                          1630          LGR   15,2
                                            1631 * ***   }
                                            1632 * * **** Start of Epilogue
                                            1633          DCCEPIL
00000E84                                    1634+         ds 0h                                                          01-DCCEP
                                            1635+* Epilog
00000E84 D707 D088 D088 00000088 00000088   1636+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000E8A E3D0 D080 0004          00000080   1637+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000E90 E3C0 D090 0004          00000090   1638+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000E96 E3B0 C018 0004          00000018   1639+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000E9C E3C0 B010 0021          00000010   1640+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000EA2 E3E0 D008 0004          00000008   1641+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000EA8 EB1C D020 0004          00000020   1642+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page   37 
  Active Usings: @REGION_841_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000EAE 078E                               1643+         bcr 8,14                if same dsab, just return              01-DCCEP
00000EB0 E3F0 D010 0024          00000010   1644+         stg 15,16(0,13)         save return code                       01-DCCEP
00000EB6 E300 D018 0024          00000018   1645+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000EBC E3F0 D090 0004          00000090   1646+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000EC2 E3F0 F018 0004          00000018   1647+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000EC8 47F0 F040               00000040   1648+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1649+* End of Epilog
                                            1650 * * **** End of Epilogue
                                            1651          DROP  12
                                            1652 *
                                            1653 *   DSECT for automatic variables in "rd_buf_append_segment"
                                            1654 *      (FUNCTION #841)
                                            1655 *
00000000                00000000 000000A8   1656 @AUTO#rd_buf_append_segment DSECT
00000000                                    1657          DS    XL168
                                            1658 *
00000ECC                00000000 0000BFA0   1659 @CODE    CSECT
                                            1660 *
                                            1661 *
                                            1662 *
                                            1663 * ....... start of extra_alloc
00000ECC                                    1664 @LNAME842 DS   0H
00000ECC 0000000B                           1665          DC    X'0000000B'
00000ED0 85A7A399816D8193                   1666          DC    C'extra_alloc'
00000EDB 00                                 1667          DC    X'00'
                                            1668 extra_alloc DCCPRLG CINDEX=842,BASER=12,FRAME=176,SAVEAREA=NO,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME842
                                            1669          macro
                                            1670          dccextrn &m
                                            1671          gblc    &$dccext(1000)
                                            1672          gbla    &$dccexti
                                            1673          lcla    &i
                                            1674 &$dccext(&$dccexti+1) setc    '&m'
                                            1675 &i       seta    1
                                            1676 .loop    aif    (&i gt &$dccexti).around
                                            1677          aif    ('&$dccext(&i)' eq '&m').getout
                                            1678 &i       seta    &i+1
                                            1679          ago     .loop
                                            1680 .around  anop
                                            1681 &$dccexti seta &$dccexti+1
                                            1682          extrn  &m
                                            1683 .getout  anop
                                            1684          mend
00000EE0                                    1685+$eye0051    ds    0d                                                    02-DCCCA
00000EE0 C4C3C3                             1686+         dc cl3'DCC'                                                    02-DCCCA
00000EE3 01                                 1687+         dc xl1'01' format one                                          02-DCCCA
00000EE4 00000000                           1688+         dc a(0)                                                        02-DCCCA
00000EE8 0000000000000000                   1689+         dc ad(0)                                                       02-DCCCA
00000EF0 00000000000000B0                   1690+         dc ad(176)                                                     02-DCCCA
00000EF8 0000000000000000                   1691+         dc ad(0)                                                       02-DCCCA
00000F00 0000000000001000                   1692+         dc ad(4096)                                                    02-DCCCA
00000F08 20                                 1693+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page   38 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000F09 03                                 1694+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000F0A 03                                 1695+         dc al1(3)                                                      02-DCCCA
00000F0B 08                                 1696+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000F0C 00                                 1697+         dc bl.8'00000000'                                              02-DCCCA
00000F0D 000000                             1698+         dc al3(0)                                                      02-DCCCA
00000F10 0000000000000ECC                   1699+         dc ad(@LNAME842)                                               02-DCCCA
00000F18                                    1700+         ds 0d                                                          02-DCCCA
00000F18 0000000000000EE0                   1701+         dc ad($eye0051)                                                02-DCCCA
00000F20 0000000000000000                   1702+         dc ad(0)                                                       02-DCCCA
00000F28                                    1703+         ds    0d                                                       01-DCCPR
00000F28                                    1704+extra_alloc ds 0d                                                       01-DCCPR
00000F28                                    1705+@REGION_842_1 ds 0h                                                     01-DCCPR
00000F28 EBEC D008 0024          00000008   1706+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000F2E B904 00CF                          1707+         lgr   12,15               set base reg                         01-DCCPR
                        00000F28            1708+         using @REGION_842_1,12                                         01-DCCPR
00000F32 B904 0021                          1709          LGR   2,1         ; ptr to parm area
                                            1710 * ******* End of Prologue
                                            1711 * *
                                            1712 * ***           size_t of = (((rbuf->rbuf_extra_len) + ((8) - 1)) & ~(\
                                            1713 * 8-1));
00000F36 E3F0 2000 0004          00000000   1714          LG    15,0(0,2)   ; rbuf
00000F3C E310 F040 0004          00000040   1715          LG    1,64(0,15)  ; offset of rbuf_extra_len in rd_buf_s
00000F42 A71B 0007               00000007   1716          AGHI  1,7
00000F46 A517 FFF8               0000FFF8   1717          NILL  1,65528
                                            1718 * ***           void *p;
                                            1719 * ***
                                            1720 * ***           if (of + size > rbuf->rbuf_extra_size)
00000F4A B904 0031                          1721          LGR   3,1
00000F4E E330 2008 000A          00000008   1722          ALG   3,8(0,2)
00000F54 E330 F048 0021          00000048   1723          CLG   3,72(0,15)
00000F5A 47D0 C03E               00000F66   1724          BNH   @L62
                                            1725 * ***                   return ((void *)0);
00000F5E A7F9 0000               00000000   1726          LGHI  15,0        ; 0
00000F62 47F0 C058               00000F80   1727          B     @ret_lab_842
00000F66                                    1728 @L62     DS    0H
                                            1729 * ***
                                            1730 * ***           p = rbuf->rbuf_extra + of;
00000F66 E330 F038 0004          00000038   1731          LG    3,56(0,15)  ; offset of rbuf_extra in rd_buf_s
00000F6C 4131 3000               00000000   1732          LA    3,0(1,3)
                                            1733 * ***
                                            1734 * ***           rbuf->rbuf_extra_len = of + size;
00000F70 E310 2008 000A          00000008   1735          ALG   1,8(0,2)
00000F76 E310 F040 0024          00000040   1736          STG   1,64(0,15)  ; offset of rbuf_extra_len in rd_buf_s
                                            1737 * ***
                                            1738 * ***           return p;
00000F7C B904 00F3                          1739          LGR   15,3
                                            1740 * ***   }
00000F80                                    1741 @ret_lab_842 DS 0H
                                            1742 * * **** Start of Epilogue
                                            1743          DCCEPIL
00000F80                                    1744+         ds 0h                                                          01-DCCEP
                                            1745+* Epilog
                                                                                                                           Page   39 
  Active Usings: @REGION_842_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1746+* Epilog
00000F80 E3E0 D008 0004          00000008   1747+         lg    14,8(,13) restore the reg                                01-DCCEP
00000F86 EB1C D020 0004          00000020   1748+         lmg   1,12,32(13)                                              01-DCCEP
00000F8C 07FE                               1749+         br   14                                                        01-DCCEP
                                            1750+* End of Epilog
                                            1751 * * **** End of Epilogue
                                            1752          DROP  12
                                            1753 *
                                            1754 *   DSECT for automatic variables in "extra_alloc"
                                            1755 *      (FUNCTION #842)
                                            1756 *
00000000                00000000 000000B0   1757 @AUTO#extra_alloc DSECT
00000000                                    1758          DS    XL168
000000A8                                    1759 extra_alloc#of#0 DS 8XL1   ; of
                                            1760 *
00000F8E                00000000 0000BFA0   1761 @CODE    CSECT
                                            1762 *
                                            1763 *
                                            1764 *
                                            1765 * ....... start of rd_buf_alloc_segment0
00000F8E                                    1766 @LNAME843 DS   0H
00000F8E 00000015                           1767          DC    X'00000015'
00000F92 99846D82A4866D81                   1768          DC    C'rd_buf_alloc_segment0'
00000FA7 00                                 1769          DC    X'00'
                                            1770 rd_buf_alloc_segment0 DCCPRLG CINDEX=843,BASER=12,FRAME=208,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME843
                                            1771          macro
                                            1772          dccextrn &m
                                            1773          gblc    &$dccext(1000)
                                            1774          gbla    &$dccexti
                                            1775          lcla    &i
                                            1776 &$dccext(&$dccexti+1) setc    '&m'
                                            1777 &i       seta    1
                                            1778 .loop    aif    (&i gt &$dccexti).around
                                            1779          aif    ('&$dccext(&i)' eq '&m').getout
                                            1780 &i       seta    &i+1
                                            1781          ago     .loop
                                            1782 .around  anop
                                            1783 &$dccexti seta &$dccexti+1
                                            1784          extrn  &m
                                            1785 .getout  anop
                                            1786          mend
00000FA8                                    1787+$eye0054    ds    0d                                                    02-DCCCA
00000FA8 C4C3C3                             1788+         dc cl3'DCC'                                                    02-DCCCA
00000FAB 01                                 1789+         dc xl1'01' format one                                          02-DCCCA
00000FAC 00000000                           1790+         dc a(0)                                                        02-DCCCA
00000FB0 000000000000101A                   1791+         dc ad(@PER_843)                                                02-DCCCA
00000FB8 00000000000000D0                   1792+         dc ad(208)                                                     02-DCCCA
00000FC0 0000000000000000                   1793+         dc ad(0)                                                       02-DCCCA
00000FC8 0000000000001000                   1794+         dc ad(4096)                                                    02-DCCCA
00000FD0 20                                 1795+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000FD1 03                                 1796+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   40 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000FD2 03                                 1797+         dc al1(3)                                                      02-DCCCA
00000FD3 08                                 1798+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000FD4 00                                 1799+         dc bl.8'00000000'                                              02-DCCCA
00000FD5 000000                             1800+         dc al3(0)                                                      02-DCCCA
00000FD8 0000000000000F8E                   1801+         dc ad(@LNAME843)                                               02-DCCCA
00000FE0                                    1802+         ds 0d                                                          02-DCCCA
00000FE0 0000000000000FA8                   1803+         dc ad($eye0054)                                                02-DCCCA
00000FE8 0000000000000000                   1804+         dc ad(0)                                                       02-DCCCA
00000FF0                                    1805+         ds    0d                                                       01-DCCPR
00000FF0                                    1806+rd_buf_alloc_segment0 ds 0d                                             01-DCCPR
00000FF0                                    1807+@REGION_843_1 ds 0h                                                     01-DCCPR
00000FF0 EBEC D008 0024          00000008   1808+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000FF6 E3E0 D088 0004          00000088   1809+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000FFC E3C0 D090 0004          00000090   1810+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001002 B904 002E                          1811+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001006 E3B0 C018 0004          00000018   1812+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000100C A7EB 00D0               000000D0   1813+         aghi  14,208              increase by frame size               01-DCCPR
00001010 E3E0 C020 0021          00000020   1814+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001016 4720 B020               00000020   1815+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000101A                                    1816+@PER_843 ds    0h                                                       01-DCCPR
0000101A EBDE 2080 0024          00000080   1817+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001020 E3C0 2090 0024          00000090   1818+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001026 B904 00D2                          1819+         lgr   13,2                set real frame pointer               01-DCCPR
0000102A B904 00CF                          1820+         lgr   12,15               set base reg                         01-DCCPR
                        00000FF0            1821+         using @REGION_843_1,12                                         01-DCCPR
0000102E B904 0041                          1822          LGR   4,1         ; ptr to parm area
                                            1823 * ******* End of Prologue
                                            1824 * *
00001032 E330 4008 0004          00000008   1825          LG    3,8(0,4)    ; size
                                            1826 * ***           rd_segment_t *seg;
                                            1827 * ***
                                            1828 * ***
                                            1829 * ***
                                            1830 * ***
                                            1831 * ***           if ((seg = extra_alloc(rbuf, sizeof(*seg) + size))) {
00001038 E3F0 4000 0004          00000000   1832          LG    15,0(0,4)   ; rbuf
0000103E E3F0 D0B0 0024          000000B0   1833          STG   15,176(0,13)
00001044 B904 00F3                          1834          LGR   15,3
00001048 A7FB 0040               00000040   1835          AGHI  15,64
0000104C E3F0 D0B8 0024          000000B8   1836          STG   15,184(0,13)
00001052 4110 D0B0               000000B0   1837          LA    1,176(0,13)
00001056 E350 C098 0004          00001088   1838          LG    5,@lit_843_24 ; extra_alloc
0000105C B904 00F5                          1839          LGR   15,5
00001060                                    1840 @@gen_label30 DS    0H
00001060 05EF                               1841          BALR  14,15
00001062                                    1842 @@gen_label31 DS    0H
00001062 B902 002F                          1843          LTGR  2,15        ; seg
00001066 4780 C0F6               000010E6   1844          BZ    @L63
                                            1845 * ***                   rd_segment_init(seg, size > 0 ? seg+1 : ((void\
                                            1846 *  *)0), size);
0000106A C23E 0000 0000                     1847          CLGFI 3,X'00000000'
00001070 47D0 C0D0               000010C0   1848          BNH   @L64
                                                                                                                           Page   41 
  Active Usings: @REGION_843_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001074 41F0 2040               00000040   1849          LA    15,64(0,2)
00001078 47F0 C0D4               000010C4   1850          B     @L65
00001080                                    1851          DS    0D
00001080 000000D0                           1852 @FRAMESIZE_843 DC F'208'
00001084 00000000
00001088 0000000000000F28                   1853 @lit_843_24 DC AD(extra_alloc)
00001090 0000000000000CF0                   1854 @lit_843_26 DC AD(rd_segment_init)
00001098 0000000000000058                   1855 @lit_843_28 DC AD(rd_malloc)
000010A0 00000000000001C0                   1856 @lit_843_31 DC AD(rd_free)
000010A8 000000000000CB02                   1857 @lit_843_35 DC AD(@strings@)
000010B0 0000000000000000                   1858 @lit_843_37 DC AD(__assert)
000010B8 000000000000BFA0                   1859 @lit_843_36 DC AD(@DATA)
000010C0                                    1860 @L64     DS    0H
000010C0 A7F9 0000               00000000   1861          LGHI  15,0        ; 0
000010C4                                    1862 @L65     DS    0H
000010C4 E320 D0B0 0024          000000B0   1863          STG   2,176(0,13)
000010CA E3F0 D0B8 0024          000000B8   1864          STG   15,184(0,13)
000010D0 E330 D0C0 0024          000000C0   1865          STG   3,192(0,13)
000010D6 4110 D0B0               000000B0   1866          LA    1,176(0,13)
000010DA E3F0 C0A0 0004          00001090   1867          LG    15,@lit_843_26 ; rd_segment_init
000010E0                                    1868 @@gen_label34 DS    0H
000010E0 05EF                               1869          BALR  14,15
000010E2                                    1870 @@gen_label35 DS    0H
                                            1871 * ***
                                            1872 * ***           } else if ((seg = extra_alloc(rbuf, sizeof(*seg)))) {
000010E2 47F0 C224               00001214   1873          B     @L66
000010E6                                    1874 @L63     DS    0H
000010E6 E3F0 4000 0004          00000000   1875          LG    15,0(0,4)   ; rbuf
000010EC E3F0 D0B0 0024          000000B0   1876          STG   15,176(0,13)
000010F2 E548 D0B8 0040          000000B8   1877          MVGHI 184(13),64
000010F8 4110 D0B0               000000B0   1878          LA    1,176(0,13)
000010FC B904 00F5                          1879          LGR   15,5
00001100                                    1880 @@gen_label36 DS    0H
00001100 05EF                               1881          BALR  14,15
00001102                                    1882 @@gen_label37 DS    0H
00001102 B902 002F                          1883          LTGR  2,15        ; seg
00001106 4780 C176               00001166   1884          BZ    @L67
                                            1885 * ***                   rd_segment_init(seg, size > 0 ? rd_malloc(size\
                                            1886 * ) : ((void *)0), size);
0000110A C23E 0000 0000                     1887          CLGFI 3,X'00000000'
00001110 47D0 C13A               0000112A   1888          BNH   @L68
00001114 E330 D0B0 0024          000000B0   1889          STG   3,176(0,13)
0000111A 4110 D0B0               000000B0   1890          LA    1,176(0,13)
0000111E E3F0 C0A8 0004          00001098   1891          LG    15,@lit_843_28 ; rd_malloc
00001124                                    1892 @@gen_label40 DS    0H
00001124 05EF                               1893          BALR  14,15
00001126                                    1894 @@gen_label41 DS    0H
00001126 47F0 C13E               0000112E   1895          B     @L69
0000112A                                    1896 @L68     DS    0H
0000112A A7F9 0000               00000000   1897          LGHI  15,0        ; 0
0000112E                                    1898 @L69     DS    0H
0000112E E320 D0B0 0024          000000B0   1899          STG   2,176(0,13)
                                                                                                                           Page   42 
  Active Usings: @REGION_843_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001134 E3F0 D0B8 0024          000000B8   1900          STG   15,184(0,13)
0000113A E330 D0C0 0024          000000C0   1901          STG   3,192(0,13)
00001140 4110 D0B0               000000B0   1902          LA    1,176(0,13)
00001144 E3F0 C0A0 0004          00001090   1903          LG    15,@lit_843_26 ; rd_segment_init
0000114A                                    1904 @@gen_label42 DS    0H
0000114A 05EF                               1905          BALR  14,15
0000114C                                    1906 @@gen_label43 DS    0H
                                            1907 * ***                   if (size > 0)
0000114C C23E 0000 0000                     1908          CLGFI 3,X'00000000'
00001152 47D0 C224               00001214   1909          BNH   @L66
                                            1910 * ***                           seg->seg_free = rd_free;
00001156 E3F0 C0B0 0004          000010A0   1911          LG    15,@lit_843_31 ; rd_free
0000115C E3F0 2030 0024          00000030   1912          STG   15,48(0,2)  ; offset of seg_free in rd_segment_s
00001162                                    1913 @L70     DS    0H
                                            1914 * ***
                                            1915 * ***           } else if ((seg = rd_malloc(sizeof(*seg) + size))) {
00001162 47F0 C224               00001214   1916          B     @L66
00001166                                    1917 @L67     DS    0H
00001166 B904 00F3                          1918          LGR   15,3
0000116A A7FB 0040               00000040   1919          AGHI  15,64
0000116E E3F0 D0B0 0024          000000B0   1920          STG   15,176(0,13)
00001174 4110 D0B0               000000B0   1921          LA    1,176(0,13)
00001178 E3F0 C0A8 0004          00001098   1922          LG    15,@lit_843_28 ; rd_malloc
0000117E                                    1923 @@gen_label45 DS    0H
0000117E 05EF                               1924          BALR  14,15
00001180                                    1925 @@gen_label46 DS    0H
00001180 B902 002F                          1926          LTGR  2,15        ; seg
00001184 4780 C1DC               000011CC   1927          BZ    @L72
                                            1928 * ***                   rd_segment_init(seg, size > 0 ? seg+1 : ((void\
                                            1929 *  *)0), size);
00001188 C23E 0000 0000                     1930          CLGFI 3,X'00000000'
0000118E 47D0 C1AA               0000119A   1931          BNH   @L73
00001192 41F0 2040               00000040   1932          LA    15,64(0,2)
00001196 47F0 C1AE               0000119E   1933          B     @L74
0000119A                                    1934 @L73     DS    0H
0000119A A7F9 0000               00000000   1935          LGHI  15,0        ; 0
0000119E                                    1936 @L74     DS    0H
0000119E E320 D0B0 0024          000000B0   1937          STG   2,176(0,13)
000011A4 E3F0 D0B8 0024          000000B8   1938          STG   15,184(0,13)
000011AA E330 D0C0 0024          000000C0   1939          STG   3,192(0,13)
000011B0 4110 D0B0               000000B0   1940          LA    1,176(0,13)
000011B4 E3F0 C0A0 0004          00001090   1941          LG    15,@lit_843_26 ; rd_segment_init
000011BA                                    1942 @@gen_label49 DS    0H
000011BA 05EF                               1943          BALR  14,15
000011BC                                    1944 @@gen_label50 DS    0H
                                            1945 * ***                   seg->seg_flags |= 0x2;
000011BC 58F0 2038               00000038   1946          L     15,56(0,2)
000011C0 A5FB 0002               00000002   1947          OILL  15,2
000011C4 50F0 2038               00000038   1948          ST    15,56(0,2)
                                            1949 * ***
                                            1950 * ***           } else
000011C8 47F0 C224               00001214   1951          B     @L66
                                                                                                                           Page   43 
  Active Usings: @REGION_843_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000011CC                                    1952 @L72     DS    0H
                                            1953 * ***                   ((!*"segment allocation failure") ? (void)0 : \
                                            1954 * __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 141, "!\
                                            1955 * *\"segment allocation failure\""));
000011CC E3F0 C0B8 0004          000010A8   1956          LG    15,@lit_843_35
000011D2 4110 F024               00000024   1957          LA    1,36(0,15)
000011D6 9500 1000      00000000 00000000   1958          CLI   0(1),0
000011DA 4780 C224               00001214   1959          BE    @L66
000011DE                                    1960 @L76     DS    0H
000011DE E310 C0C8 0004          000010B8   1961          LG    1,@lit_843_36
000011E4 4110 1046               00000046   1962          LA    1,70(0,1)
000011E8 E310 D0B0 0024          000000B0   1963          STG   1,176(0,13)
000011EE 4110 F040               00000040   1964          LA    1,64(0,15)
000011F2 E310 D0B8 0024          000000B8   1965          STG   1,184(0,13)
000011F8 E548 D0C0 008D          000000C0   1966          MVGHI 192(13),141
000011FE 41F0 F064               00000064   1967          LA    15,100(0,15)
00001202 E3F0 D0C8 0024          000000C8   1968          STG   15,200(0,13)
00001208 4110 D0B0               000000B0   1969          LA    1,176(0,13)
0000120C E3F0 C0C0 0004          000010B0   1970          LG    15,@lit_843_37 ; __assert
00001212                                    1971 @@gen_label52 DS    0H
00001212 05EF                               1972          BALR  14,15
00001214                                    1973 @@gen_label53 DS    0H
00001214                                    1974 @L77     DS    0H
00001214                                    1975 @L75     DS    0H
                                            1976 * ***
                                            1977 * ***           return seg;
00001214                                    1978 @L71     DS    0H
00001214                                    1979 @L66     DS    0H
00001214 B904 00F2                          1980          LGR   15,2
                                            1981 * ***   }
                                            1982 * * **** Start of Epilogue
                                            1983          DCCEPIL
00001218                                    1984+         ds 0h                                                          01-DCCEP
                                            1985+* Epilog
00001218 D707 D088 D088 00000088 00000088   1986+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000121E E3D0 D080 0004          00000080   1987+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001224 E3C0 D090 0004          00000090   1988+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000122A E3B0 C018 0004          00000018   1989+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001230 E3C0 B010 0021          00000010   1990+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001236 E3E0 D008 0004          00000008   1991+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000123C EB1C D020 0004          00000020   1992+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001242 078E                               1993+         bcr 8,14                if same dsab, just return              01-DCCEP
00001244 E3F0 D010 0024          00000010   1994+         stg 15,16(0,13)         save return code                       01-DCCEP
0000124A E300 D018 0024          00000018   1995+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001250 E3F0 D090 0004          00000090   1996+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001256 E3F0 F018 0004          00000018   1997+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000125C 47F0 F040               00000040   1998+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1999+* End of Epilog
                                            2000 * * **** End of Epilogue
                                            2001          DROP  12
                                            2002 *
                                            2003 *   DSECT for automatic variables in "rd_buf_alloc_segment0"
                                                                                                                           Page   44 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2004 *      (FUNCTION #843)
                                            2005 *
00000000                00000000 000000A8   2006 @AUTO#rd_buf_alloc_segment0 DSECT
00000000                                    2007          DS    XL168
                                            2008 *
00001260                00000000 0000BFA0   2009 @CODE    CSECT
                                            2010 *
                                            2011 *
                                            2012 *
                                            2013 * ....... start of rd_buf_alloc_segment
00001260                                    2014 @LNAME844 DS   0H
00001260 00000014                           2015          DC    X'00000014'
00001264 99846D82A4866D81                   2016          DC    C'rd_buf_alloc_segment'
00001278 00                                 2017          DC    X'00'
                                            2018 rd_buf_alloc_segment DCCPRLG CINDEX=844,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME844
                                            2019          macro
                                            2020          dccextrn &m
                                            2021          gblc    &$dccext(1000)
                                            2022          gbla    &$dccexti
                                            2023          lcla    &i
                                            2024 &$dccext(&$dccexti+1) setc    '&m'
                                            2025 &i       seta    1
                                            2026 .loop    aif    (&i gt &$dccexti).around
                                            2027          aif    ('&$dccext(&i)' eq '&m').getout
                                            2028 &i       seta    &i+1
                                            2029          ago     .loop
                                            2030 .around  anop
                                            2031 &$dccexti seta &$dccexti+1
                                            2032          extrn  &m
                                            2033 .getout  anop
                                            2034          mend
00001280                                    2035+$eye0057    ds    0d                                                    02-DCCCA
00001280 C4C3C3                             2036+         dc cl3'DCC'                                                    02-DCCCA
00001283 01                                 2037+         dc xl1'01' format one                                          02-DCCCA
00001284 00000000                           2038+         dc a(0)                                                        02-DCCCA
00001288 00000000000012F2                   2039+         dc ad(@PER_844)                                                02-DCCCA
00001290 00000000000000C0                   2040+         dc ad(192)                                                     02-DCCCA
00001298 0000000000000000                   2041+         dc ad(0)                                                       02-DCCCA
000012A0 0000000000001000                   2042+         dc ad(4096)                                                    02-DCCCA
000012A8 20                                 2043+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000012A9 03                                 2044+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000012AA 03                                 2045+         dc al1(3)                                                      02-DCCCA
000012AB 08                                 2046+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000012AC 00                                 2047+         dc bl.8'00000000'                                              02-DCCCA
000012AD 000000                             2048+         dc al3(0)                                                      02-DCCCA
000012B0 0000000000001260                   2049+         dc ad(@LNAME844)                                               02-DCCCA
000012B8                                    2050+         ds 0d                                                          02-DCCCA
000012B8 0000000000001280                   2051+         dc ad($eye0057)                                                02-DCCCA
000012C0 0000000000000000                   2052+         dc ad(0)                                                       02-DCCCA
000012C8                                    2053+         ds    0d                                                       01-DCCPR
000012C8                                    2054+rd_buf_alloc_segment ds 0d                                              01-DCCPR
                                                                                                                           Page   45 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000012C8                                    2055+@REGION_844_1 ds 0h                                                     01-DCCPR
000012C8 EBEC D008 0024          00000008   2056+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000012CE E3E0 D088 0004          00000088   2057+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000012D4 E3C0 D090 0004          00000090   2058+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000012DA B904 002E                          2059+         lgr   2,14                copy addr of our savearea            01-DCCPR
000012DE E3B0 C018 0004          00000018   2060+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000012E4 A7EB 00C0               000000C0   2061+         aghi  14,192              increase by frame size               01-DCCPR
000012E8 E3E0 C020 0021          00000020   2062+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000012EE 4720 B020               00000020   2063+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000012F2                                    2064+@PER_844 ds    0h                                                       01-DCCPR
000012F2 EBDE 2080 0024          00000080   2065+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000012F8 E3C0 2090 0024          00000090   2066+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000012FE B904 00D2                          2067+         lgr   13,2                set real frame pointer               01-DCCPR
00001302 B904 00CF                          2068+         lgr   12,15               set base reg                         01-DCCPR
                        000012C8            2069+         using @REGION_844_1,12                                         01-DCCPR
                                            2070 * ******* End of Prologue
                                            2071 * *
00001306 E320 1000 0004          00000000   2072          LG    2,0(0,1)    ; rbuf
0000130C E3F0 1008 0004          00000008   2073          LG    15,8(0,1)   ; min_size
00001312 E310 1010 0004          00000010   2074          LG    1,16(0,1)   ; max_size
                                            2075 * ***           rd_segment_t *seg;
                                            2076 * ***
                                            2077 * ***
                                            2078 * ***           if (min_size != max_size || max_size == 0)
00001318 B921 00F1                          2079          CLGR  15,1
0000131C 4770 C060               00001328   2080          BNE   @L79
00001320 B902 0031                          2081          LTGR  3,1
00001324 4770 C0F2               000013BA   2082          BNE   @L78
00001328                                    2083 @L79     DS    0H
                                            2084 * ***                   max_size = ((sizeof(*seg) * 4) > (((min_size *\
                                            2085 *  2) > (rbuf->rbuf_size / 2) ? (min_size * 2) : (rbuf->rbuf_size / 2)\
                                            2086 * )) ? (sizeof(*seg) * 4) : (((min_size * 2) > (rbuf->rbuf_size / 2) ?\
                                            2087 *  (min_size * 2) : (rbuf->rbuf_size / 2))));
00001328 B904 001F                          2088          LGR   1,15
0000132C B908 001F                          2089          AGR   1,15        ; *0x2
00001330 E330 2030 0004          00000030   2090          LG    3,48(0,2)   ; offset of rbuf_size in rd_buf_s
00001336 EB33 0001 000C          00000001   2091          SRLG  3,3,1(0)    ; /0x2
0000133C B921 0013                          2092          CLGR  1,3
00001340 47D0 C0A0               00001368   2093          BNH   @L80
00001344 B904 001F                          2094          LGR   1,15
00001348 B908 001F                          2095          AGR   1,15        ; *0x2
0000134C 47F0 C0AC               00001374   2096          B     @L81
00001350                                    2097          DS    0D
00001350 000000C0                           2098 @FRAMESIZE_844 DC F'192'
00001354 00000000
00001358 0000000000000FF0                   2099 @lit_844_40 DC AD(rd_buf_alloc_segment0)
00001360 0000000000000D90                   2100 @lit_844_41 DC AD(rd_buf_append_segment)
00001368                                    2101 @L80     DS    0H
00001368 E310 2030 0004          00000030   2102          LG    1,48(0,2)   ; offset of rbuf_size in rd_buf_s
0000136E EB11 0001 000C          00000001   2103          SRLG  1,1,1(0)    ; /0x2
00001374                                    2104 @L81     DS    0H
00001374 C21E 0000 0100                     2105          CLGFI 1,X'00000100'
                                                                                                                           Page   46 
  Active Usings: @REGION_844_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000137A 47B0 C0BE               00001386   2106          BNL   @L82
0000137E A719 0100               00000100   2107          LGHI  1,256       ; 256
00001382 47F0 C0F2               000013BA   2108          B     @L85
00001386                                    2109 @L82     DS    0H
00001386 B904 001F                          2110          LGR   1,15
0000138A B908 001F                          2111          AGR   1,15        ; *0x2
0000138E E330 2030 0004          00000030   2112          LG    3,48(0,2)   ; offset of rbuf_size in rd_buf_s
00001394 EB33 0001 000C          00000001   2113          SRLG  3,3,1(0)    ; /0x2
0000139A B921 0013                          2114          CLGR  1,3
0000139E 47D0 C0E2               000013AA   2115          BNH   @L83
000013A2 B908 00FF                          2116          AGR   15,15       ; *0x2
000013A6 47F0 C0EE               000013B6   2117          B     @L84
000013AA                                    2118 @L83     DS    0H
000013AA E3F0 2030 0004          00000030   2119          LG    15,48(0,2)  ; offset of rbuf_size in rd_buf_s
000013B0 EBFF 0001 000C          00000001   2120          SRLG  15,15,1(0)  ; /0x2
000013B6                                    2121 @L84     DS    0H
000013B6 B904 001F                          2122          LGR   1,15
000013BA                                    2123 @L85     DS    0H
000013BA                                    2124 @L78     DS    0H
                                            2125 * ***
                                            2126 * ***
                                            2127 * ***
                                            2128 * ***           seg = rd_buf_alloc_segment0(rbuf, max_size);
000013BA E320 D0B0 0024          000000B0   2129          STG   2,176(0,13)
000013C0 E310 D0B8 0024          000000B8   2130          STG   1,184(0,13)
000013C6 4110 D0B0               000000B0   2131          LA    1,176(0,13)
000013CA E3F0 C090 0004          00001358   2132          LG    15,@lit_844_40 ; rd_buf_alloc_segment0
000013D0                                    2133 @@gen_label59 DS    0H
000013D0 05EF                               2134          BALR  14,15
000013D2                                    2135 @@gen_label60 DS    0H
000013D2 B904 003F                          2136          LGR   3,15
                                            2137 * ***
                                            2138 * ***           rd_buf_append_segment(rbuf, seg);
000013D6 EB23 D0B0 0024          000000B0   2139          STMG  2,3,176(13)
000013DC 4110 D0B0               000000B0   2140          LA    1,176(0,13)
000013E0 E3F0 C098 0004          00001360   2141          LG    15,@lit_844_41 ; rd_buf_append_segment
000013E6                                    2142 @@gen_label61 DS    0H
000013E6 05EF                               2143          BALR  14,15
000013E8                                    2144 @@gen_label62 DS    0H
                                            2145 * ***
                                            2146 * ***           return seg;
000013E8 B904 00F3                          2147          LGR   15,3
                                            2148 * ***   }
                                            2149 * * **** Start of Epilogue
                                            2150          DCCEPIL
000013EC                                    2151+         ds 0h                                                          01-DCCEP
                                            2152+* Epilog
000013EC D707 D088 D088 00000088 00000088   2153+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000013F2 E3D0 D080 0004          00000080   2154+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000013F8 E3C0 D090 0004          00000090   2155+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000013FE E3B0 C018 0004          00000018   2156+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001404 E3C0 B010 0021          00000010   2157+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page   47 
  Active Usings: @REGION_844_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000140A E3E0 D008 0004          00000008   2158+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001410 EB1C D020 0004          00000020   2159+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001416 078E                               2160+         bcr 8,14                if same dsab, just return              01-DCCEP
00001418 E3F0 D010 0024          00000010   2161+         stg 15,16(0,13)         save return code                       01-DCCEP
0000141E E300 D018 0024          00000018   2162+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001424 E3F0 D090 0004          00000090   2163+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000142A E3F0 F018 0004          00000018   2164+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001430 47F0 F040               00000040   2165+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2166+* End of Epilog
                                            2167 * * **** End of Epilogue
                                            2168          DROP  12
                                            2169 *
                                            2170 *   DSECT for automatic variables in "rd_buf_alloc_segment"
                                            2171 *      (FUNCTION #844)
                                            2172 *
00000000                00000000 000000A8   2173 @AUTO#rd_buf_alloc_segment DSECT
00000000                                    2174          DS    XL168
                                            2175 *
00001434                00000000 0000BFA0   2176 @CODE    CSECT
                                            2177 *
                                            2178 *
                                            2179 *
                                            2180 * ....... start of rd_buf_write_ensure_contig
                                            2181 rd_buf_write_ensure_contig ALIAS X'99846D82A4866DA69989A3856D8595A2A499*
                                                                856D839695A38987'
00001434                                    2182 @LNAME796 DS   0H
00001434 0000001A                           2183          DC    X'0000001A'
00001438 99846D82A4866DA6                   2184          DC    C'rd_buf_write_ensure_contig'
00001452 00                                 2185          DC    X'00'
                                            2186 rd_buf_write_ensure_contig DCCPRLG CINDEX=796,BASER=12,FRAME=200,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME796
                                            2187          macro
                                            2188          dccextrn &m
                                            2189          gblc    &$dccext(1000)
                                            2190          gbla    &$dccexti
                                            2191          lcla    &i
                                            2192 &$dccext(&$dccexti+1) setc    '&m'
                                            2193 &i       seta    1
                                            2194 .loop    aif    (&i gt &$dccexti).around
                                            2195          aif    ('&$dccext(&i)' eq '&m').getout
                                            2196 &i       seta    &i+1
                                            2197          ago     .loop
                                            2198 .around  anop
                                            2199 &$dccexti seta &$dccexti+1
                                            2200          extrn  &m
                                            2201 .getout  anop
                                            2202          mend
00001458                                    2203+$eye0060    ds    0d                                                    02-DCCCA
00001458 C4C3C3                             2204+         dc cl3'DCC'                                                    02-DCCCA
0000145B 01                                 2205+         dc xl1'01' format one                                          02-DCCCA
0000145C 00000000                           2206+         dc a(0)                                                        02-DCCCA
00001460 00000000000014CA                   2207+         dc ad(@PER_796)                                                02-DCCCA
                                                                                                                           Page   48 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001468 00000000000000C8                   2208+         dc ad(200)                                                     02-DCCCA
00001470 0000000000000000                   2209+         dc ad(0)                                                       02-DCCCA
00001478 0000000000001000                   2210+         dc ad(4096)                                                    02-DCCCA
00001480 20                                 2211+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001481 03                                 2212+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001482 03                                 2213+         dc al1(3)                                                      02-DCCCA
00001483 08                                 2214+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001484 00                                 2215+         dc bl.8'00000000'                                              02-DCCCA
00001485 000000                             2216+         dc al3(0)                                                      02-DCCCA
00001488 0000000000001434                   2217+         dc ad(@LNAME796)                                               02-DCCCA
00001490                                    2218+         ds 0d                                                          02-DCCCA
00001490 0000000000001458                   2219+         dc ad($eye0060)                                                02-DCCCA
00001498 0000000000000000                   2220+         dc ad(0)                                                       02-DCCCA
000014A0                                    2221+         ds    0d                                                       01-DCCPR
                                            2222+         entry rd_buf_write_ensure_contig                               01-DCCPR
000014A0                                    2223+rd_buf_write_ensure_contig ds 0d                                        01-DCCPR
000014A0                                    2224+@REGION_796_1 ds 0h                                                     01-DCCPR
000014A0 EBEC D008 0024          00000008   2225+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000014A6 E3E0 D088 0004          00000088   2226+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000014AC E3C0 D090 0004          00000090   2227+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000014B2 B904 002E                          2228+         lgr   2,14                copy addr of our savearea            01-DCCPR
000014B6 E3B0 C018 0004          00000018   2229+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000014BC A7EB 00C8               000000C8   2230+         aghi  14,200              increase by frame size               01-DCCPR
000014C0 E3E0 C020 0021          00000020   2231+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000014C6 4720 B020               00000020   2232+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000014CA                                    2233+@PER_796 ds    0h                                                       01-DCCPR
000014CA EBDE 2080 0024          00000080   2234+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000014D0 E3C0 2090 0024          00000090   2235+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000014D6 B904 00D2                          2236+         lgr   13,2                set real frame pointer               01-DCCPR
000014DA B904 00CF                          2237+         lgr   12,15               set base reg                         01-DCCPR
                        000014A0            2238+         using @REGION_796_1,12                                         01-DCCPR
                                            2239 * ******* End of Prologue
                                            2240 * *
                                            2241 * ***           rd_segment_t *seg = rbuf->rbuf_wpos;
000014DE E320 1008 0004          00000008   2242          LG    2,8(0,1)    ; size
000014E4 E330 1000 0004          00000000   2243          LG    3,0(0,1)    ; rbuf
000014EA E3F0 3018 0004          00000018   2244          LG    15,24(0,3)  ; offset of rbuf_wpos in rd_buf_s
                                            2245 * ***
                                            2246 * ***           if (seg) {
000014F0 B902 001F                          2247          LTGR  1,15
000014F4 4780 C07C               0000151C   2248          BZ    @L86
                                            2249 * ***                   void *p;
                                            2250 * ***                   size_t remains = rd_segment_write_remains(seg,\
                                            2251 *  &p);
000014F8 E3F0 D0B0 0024          000000B0   2252          STG   15,176(0,13)
000014FE 41F0 D0A8               000000A8   2253          LA    15,168(0,13)
00001502 E3F0 D0B8 0024          000000B8   2254          STG   15,184(0,13)
00001508 4110 D0B0               000000B0   2255          LA    1,176(0,13)
0000150C E3F0 C0F0 0004          00001590   2256          LG    15,@lit_796_43 ; rd_segment_write_remains
00001512                                    2257 @@gen_label64 DS    0H
00001512 05EF                               2258          BALR  14,15
00001514                                    2259 @@gen_label65 DS    0H
                                                                                                                           Page   49 
  Active Usings: @REGION_796_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2260 * ***
                                            2261 * ***                   if (remains >= size)
00001514 B921 00F2                          2262          CLGR  15,2
00001518 47B0 C0A0               00001540   2263          BNL   @ret_lab_796
                                            2264 * ***                           return;
0000151C                                    2265 @L87     DS    0H
                                            2266 * ***
                                            2267 * ***
                                            2268 * ***
                                            2269 * ***
                                            2270 * ***           }
0000151C                                    2271 @L86     DS    0H
                                            2272 * ***
                                            2273 * ***
                                            2274 * ***           rbuf->rbuf_wpos = rd_buf_alloc_segment(rbuf, size, siz\
                                            2275 * e);
0000151C E330 D0B0 0024          000000B0   2276          STG   3,176(0,13)
00001522 E320 D0B8 0024          000000B8   2277          STG   2,184(0,13)
00001528 E320 D0C0 0024          000000C0   2278          STG   2,192(0,13)
0000152E 4110 D0B0               000000B0   2279          LA    1,176(0,13)
00001532 E3F0 C0F8 0004          00001598   2280          LG    15,@lit_796_44 ; rd_buf_alloc_segment
00001538                                    2281 @@gen_label67 DS    0H
00001538 05EF                               2282          BALR  14,15
0000153A                                    2283 @@gen_label68 DS    0H
0000153A E3F0 3018 0024          00000018   2284          STG   15,24(0,3)
                                            2285 * ***   }
00001540                                    2286 @ret_lab_796 DS 0H
                                            2287 * * **** Start of Epilogue
                                            2288          DCCEPIL
00001540                                    2289+         ds 0h                                                          01-DCCEP
                                            2290+* Epilog
00001540 D707 D088 D088 00000088 00000088   2291+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001546 E3D0 D080 0004          00000080   2292+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000154C E3C0 D090 0004          00000090   2293+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001552 E3B0 C018 0004          00000018   2294+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001558 E3C0 B010 0021          00000010   2295+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000155E E3E0 D008 0004          00000008   2296+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001564 EB1C D020 0004          00000020   2297+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000156A 078E                               2298+         bcr 8,14                if same dsab, just return              01-DCCEP
0000156C E3F0 D010 0024          00000010   2299+         stg 15,16(0,13)         save return code                       01-DCCEP
00001572 E300 D018 0024          00000018   2300+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001578 E3F0 D090 0004          00000090   2301+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000157E E3F0 F018 0004          00000018   2302+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001584 47F0 F040               00000040   2303+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2304+* End of Epilog
                                            2305 * * **** End of Epilogue
00001588                                    2306          DS    0D
00001588 000000C8                           2307 @FRAMESIZE_796 DC F'200'
0000158C 00000000
00001590 0000000000000580                   2308 @lit_796_43 DC AD(rd_segment_write_remains)
00001598 00000000000012C8                   2309 @lit_796_44 DC AD(rd_buf_alloc_segment)
                                            2310          DROP  12
                                                                                                                           Page   50 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2311 *
                                            2312 *   DSECT for automatic variables in "rd_buf_write_ensure_contig"
                                            2313 *      (FUNCTION #796)
                                            2314 *
00000000                00000000 000000B0   2315 @AUTO#rd_buf_write_ensure_contig DSECT
00000000                                    2316          DS    XL168
000000A8                                    2317 rd_buf_write_ensure_contig#remains#1 DS 8XL1 ; remains
                                            2318 *
000015A0                00000000 0000BFA0   2319 @CODE    CSECT
                                            2320 *
                                            2321 *
                                            2322 *
                                            2323 * ....... start of rd_buf_write_ensure
                                            2324 rd_buf_write_ensure ALIAS X'99846D82A4866DA69989A3856D8595A2A49985'
000015A0                                    2325 @LNAME797 DS   0H
000015A0 00000013                           2326          DC    X'00000013'
000015A4 99846D82A4866DA6                   2327          DC    C'rd_buf_write_ensure'
000015B7 00                                 2328          DC    X'00'
                                            2329 rd_buf_write_ensure DCCPRLG CINDEX=797,BASER=12,FRAME=200,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME797
                                            2330          macro
                                            2331          dccextrn &m
                                            2332          gblc    &$dccext(1000)
                                            2333          gbla    &$dccexti
                                            2334          lcla    &i
                                            2335 &$dccext(&$dccexti+1) setc    '&m'
                                            2336 &i       seta    1
                                            2337 .loop    aif    (&i gt &$dccexti).around
                                            2338          aif    ('&$dccext(&i)' eq '&m').getout
                                            2339 &i       seta    &i+1
                                            2340          ago     .loop
                                            2341 .around  anop
                                            2342 &$dccexti seta &$dccexti+1
                                            2343          extrn  &m
                                            2344 .getout  anop
                                            2345          mend
000015B8                                    2346+$eye0063    ds    0d                                                    02-DCCCA
000015B8 C4C3C3                             2347+         dc cl3'DCC'                                                    02-DCCCA
000015BB 01                                 2348+         dc xl1'01' format one                                          02-DCCCA
000015BC 00000000                           2349+         dc a(0)                                                        02-DCCCA
000015C0 000000000000162A                   2350+         dc ad(@PER_797)                                                02-DCCCA
000015C8 00000000000000C8                   2351+         dc ad(200)                                                     02-DCCCA
000015D0 0000000000000000                   2352+         dc ad(0)                                                       02-DCCCA
000015D8 0000000000001000                   2353+         dc ad(4096)                                                    02-DCCCA
000015E0 20                                 2354+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000015E1 03                                 2355+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000015E2 03                                 2356+         dc al1(3)                                                      02-DCCCA
000015E3 08                                 2357+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000015E4 00                                 2358+         dc bl.8'00000000'                                              02-DCCCA
000015E5 000000                             2359+         dc al3(0)                                                      02-DCCCA
000015E8 00000000000015A0                   2360+         dc ad(@LNAME797)                                               02-DCCCA
000015F0                                    2361+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   51 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000015F0 00000000000015B8                   2362+         dc ad($eye0063)                                                02-DCCCA
000015F8 0000000000000000                   2363+         dc ad(0)                                                       02-DCCCA
00001600                                    2364+         ds    0d                                                       01-DCCPR
                                            2365+         entry rd_buf_write_ensure                                      01-DCCPR
00001600                                    2366+rd_buf_write_ensure ds 0d                                               01-DCCPR
00001600                                    2367+@REGION_797_1 ds 0h                                                     01-DCCPR
00001600 EBEC D008 0024          00000008   2368+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001606 E3E0 D088 0004          00000088   2369+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000160C E3C0 D090 0004          00000090   2370+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001612 B904 002E                          2371+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001616 E3B0 C018 0004          00000018   2372+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000161C A7EB 00C8               000000C8   2373+         aghi  14,200              increase by frame size               01-DCCPR
00001620 E3E0 C020 0021          00000020   2374+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001626 4720 B020               00000020   2375+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000162A                                    2376+@PER_797 ds    0h                                                       01-DCCPR
0000162A EBDE 2080 0024          00000080   2377+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001630 E3C0 2090 0024          00000090   2378+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001636 B904 00D2                          2379+         lgr   13,2                set real frame pointer               01-DCCPR
0000163A B904 00CF                          2380+         lgr   12,15               set base reg                         01-DCCPR
                        00001600            2381+         using @REGION_797_1,12                                         01-DCCPR
0000163E B904 0021                          2382          LGR   2,1         ; ptr to parm area
                                            2383 * ******* End of Prologue
                                            2384 * *
                                            2385 * ***           size_t remains;
                                            2386 * ***           while ((remains = rd_buf_write_remains(rbuf)) < min_si\
                                            2387 * ze)
00001642 47F0 C0A4               000016A4   2388          B     @L91
00001648                                    2389          DS    0D
00001648 000000C8                           2390 @FRAMESIZE_797 DC F'200'
0000164C 00000000
00001650 00000000000012C8                   2391 @lit_797_47 DC AD(rd_buf_alloc_segment)
00001658 00000000000004E0                   2392 @lit_797_48 DC AD(rd_buf_write_remains)
00001660                                    2393 @L90     DS    0H
                                            2394 * ***                   rd_buf_alloc_segment(rbuf,
                                            2395 * ***                                        min_size - remains,
                                            2396 * ***                                        max_size ? max_size - rem\
                                            2397 * ains : 0);
00001660 E310 2010 0002          00000010   2398          LTG   1,16(0,2)   ; max_size
00001666 4780 C072               00001672   2399          BZ    @L92
0000166A B90B 001F                          2400          SLGR  1,15
0000166E 47F0 C076               00001676   2401          B     @L93
00001672                                    2402 @L92     DS    0H
00001672 A719 0000               00000000   2403          LGHI  1,0         ; 0
00001676                                    2404 @L93     DS    0H
00001676 E330 2000 0004          00000000   2405          LG    3,0(0,2)    ; rbuf
0000167C E330 D0B0 0024          000000B0   2406          STG   3,176(0,13)
00001682 E330 2008 0004          00000008   2407          LG    3,8(0,2)    ; min_size
00001688 B90B 003F                          2408          SLGR  3,15
0000168C E330 D0B8 0024          000000B8   2409          STG   3,184(0,13)
00001692 E310 D0C0 0024          000000C0   2410          STG   1,192(0,13)
00001698 4110 D0B0               000000B0   2411          LA    1,176(0,13)
0000169C E3F0 C050 0004          00001650   2412          LG    15,@lit_797_47 ; rd_buf_alloc_segment
                                                                                                                           Page   52 
  Active Usings: @REGION_797_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000016A2                                    2413 @@gen_label70 DS    0H
000016A2 05EF                               2414          BALR  14,15
000016A4                                    2415 @@gen_label71 DS    0H
000016A4                                    2416 @L91     DS    0H
000016A4 E3F0 2000 0004          00000000   2417          LG    15,0(0,2)   ; rbuf
000016AA E3F0 D0B0 0024          000000B0   2418          STG   15,176(0,13)
000016B0 4110 D0B0               000000B0   2419          LA    1,176(0,13)
000016B4 E3F0 C058 0004          00001658   2420          LG    15,@lit_797_48 ; rd_buf_write_remains
000016BA                                    2421 @@gen_label72 DS    0H
000016BA 05EF                               2422          BALR  14,15
000016BC                                    2423 @@gen_label73 DS    0H
000016BC E3F0 2008 0021          00000008   2424          CLG   15,8(0,2)
000016C2 4740 C060               00001660   2425          BL    @L90
                                            2426 * ***   }
000016C6                                    2427 @ret_lab_797 DS 0H
                                            2428 * * **** Start of Epilogue
                                            2429          DCCEPIL
000016C6                                    2430+         ds 0h                                                          01-DCCEP
                                            2431+* Epilog
000016C6 D707 D088 D088 00000088 00000088   2432+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000016CC E3D0 D080 0004          00000080   2433+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000016D2 E3C0 D090 0004          00000090   2434+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000016D8 E3B0 C018 0004          00000018   2435+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000016DE E3C0 B010 0021          00000010   2436+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000016E4 E3E0 D008 0004          00000008   2437+         lg  14,8(0,13)          load up return address                 01-DCCEP
000016EA EB1C D020 0004          00000020   2438+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000016F0 078E                               2439+         bcr 8,14                if same dsab, just return              01-DCCEP
000016F2 E3F0 D010 0024          00000010   2440+         stg 15,16(0,13)         save return code                       01-DCCEP
000016F8 E300 D018 0024          00000018   2441+         stg 0,24(0,13)          save more return code                  01-DCCEP
000016FE E3F0 D090 0004          00000090   2442+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001704 E3F0 F018 0004          00000018   2443+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000170A 47F0 F040               00000040   2444+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2445+* End of Epilog
                                            2446 * * **** End of Epilogue
                                            2447          DROP  12
                                            2448 *
                                            2449 *   DSECT for automatic variables in "rd_buf_write_ensure"
                                            2450 *      (FUNCTION #797)
                                            2451 *
00000000                00000000 000000B0   2452 @AUTO#rd_buf_write_ensure DSECT
00000000                                    2453          DS    XL168
000000A8                                    2454 rd_buf_write_ensure#remains#0 DS 8XL1 ; remains
                                            2455 *
0000170E                00000000 0000BFA0   2456 @CODE    CSECT
                                            2457 *
                                            2458 *
                                            2459 *
                                            2460 * ....... start of rd_buf_get_segment_at_offset
                                            2461 rd_buf_get_segment_at_offset ALIAS X'99846D82A4866D8785A36DA28587948595*
                                                                A36D81A36D968686A285A3'
0000170E                                    2462 @LNAME845 DS   0H
0000170E 0000001C                           2463          DC    X'0000001C'
                                                                                                                           Page   53 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001712 99846D82A4866D87                   2464          DC    C'rd_buf_get_segment_at_offset'
0000172E 00                                 2465          DC    X'00'
                                            2466 rd_buf_get_segment_at_offset DCCPRLG CINDEX=845,BASER=12,FRAME=176,SAVE*
                                                                AREA=NO,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME845
                                            2467          macro
                                            2468          dccextrn &m
                                            2469          gblc    &$dccext(1000)
                                            2470          gbla    &$dccexti
                                            2471          lcla    &i
                                            2472 &$dccext(&$dccexti+1) setc    '&m'
                                            2473 &i       seta    1
                                            2474 .loop    aif    (&i gt &$dccexti).around
                                            2475          aif    ('&$dccext(&i)' eq '&m').getout
                                            2476 &i       seta    &i+1
                                            2477          ago     .loop
                                            2478 .around  anop
                                            2479 &$dccexti seta &$dccexti+1
                                            2480          extrn  &m
                                            2481 .getout  anop
                                            2482          mend
00001730                                    2483+$eye0066    ds    0d                                                    02-DCCCA
00001730 C4C3C3                             2484+         dc cl3'DCC'                                                    02-DCCCA
00001733 01                                 2485+         dc xl1'01' format one                                          02-DCCCA
00001734 00000000                           2486+         dc a(0)                                                        02-DCCCA
00001738 0000000000000000                   2487+         dc ad(0)                                                       02-DCCCA
00001740 00000000000000B0                   2488+         dc ad(176)                                                     02-DCCCA
00001748 0000000000000000                   2489+         dc ad(0)                                                       02-DCCCA
00001750 0000000000001000                   2490+         dc ad(4096)                                                    02-DCCCA
00001758 20                                 2491+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001759 03                                 2492+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000175A 03                                 2493+         dc al1(3)                                                      02-DCCCA
0000175B 08                                 2494+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000175C 00                                 2495+         dc bl.8'00000000'                                              02-DCCCA
0000175D 000000                             2496+         dc al3(0)                                                      02-DCCCA
00001760 000000000000170E                   2497+         dc ad(@LNAME845)                                               02-DCCCA
00001768                                    2498+         ds 0d                                                          02-DCCCA
00001768 0000000000001730                   2499+         dc ad($eye0066)                                                02-DCCCA
00001770 0000000000000000                   2500+         dc ad(0)                                                       02-DCCCA
00001778                                    2501+         ds    0d                                                       01-DCCPR
                                            2502+         entry rd_buf_get_segment_at_offset                             01-DCCPR
00001778                                    2503+rd_buf_get_segment_at_offset ds 0d                                      01-DCCPR
00001778                                    2504+@REGION_845_1 ds 0h                                                     01-DCCPR
00001778 EBEC D008 0024          00000008   2505+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000177E B904 00CF                          2506+         lgr   12,15               set base reg                         01-DCCPR
                        00001778            2507+         using @REGION_845_1,12                                         01-DCCPR
00001782 B904 0021                          2508          LGR   2,1         ; ptr to parm area
                                            2509 * ******* End of Prologue
                                            2510 * *
                                            2511 * ***           const rd_segment_t *seg = hint;
00001786 E3F0 2010 0004          00000010   2512          LG    15,16(0,2)  ; absof
0000178C E310 2008 0004          00000008   2513          LG    1,8(0,2)    ; hint
                                            2514 * ***
                                                                                                                           Page   54 
  Active Usings: @REGION_845_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2515 * ***           if (((absof >= rbuf->rbuf_len)))
00001792 E320 2000 0004          00000000   2516          LG    2,0(0,2)    ; rbuf
00001798 E3F0 2020 0021          00000020   2517          CLG   15,32(0,2)
0000179E 4740 C032               000017AA   2518          BL    @L94
                                            2519 * ***                   return ((void *)0);
000017A2 A7F9 0000               00000000   2520          LGHI  15,0        ; 0
000017A6 47F0 C082               000017FA   2521          B     @ret_lab_845
000017AA                                    2522 @L94     DS    0H
                                            2523 * ***
                                            2524 * ***
                                            2525 * ***           if (!seg || absof < seg->seg_absof)
000017AA B902 0031                          2526          LTGR  3,1
000017AE 4780 C044               000017BC   2527          BZ    @L96
000017B2 E3F0 1028 0021          00000028   2528          CLG   15,40(0,1)
000017B8 47B0 C04A               000017C2   2529          BNL   @L97
000017BC                                    2530 @L96     DS    0H
                                            2531 * ***                   seg = ((&rbuf->rbuf_segments)->tqh_first);
000017BC E310 2000 0004          00000000   2532          LG    1,0(0,2)    ; rbuf
000017C2                                    2533 @L95     DS    0H
                                            2534 * ***
                                            2535 * ***           do {
000017C2                                    2536 @L97     DS    0H
                                            2537 * ***                   if (absof >= seg->seg_absof &&
000017C2 E3F0 1028 0021          00000028   2538          CLG   15,40(0,1)
000017C8 4740 C070               000017E8   2539          BL    @L100
                                            2540 * ***                       absof < seg->seg_absof + seg->seg_of) {
000017CC E320 1028 0004          00000028   2541          LG    2,40(0,1)   ; offset of seg_absof in rd_segment_s
000017D2 E320 1018 000A          00000018   2542          ALG   2,24(0,1)
000017D8 B921 00F2                          2543          CLGR  15,2
000017DC 47B0 C070               000017E8   2544          BNL   @L100
                                            2545 * ***                           do {} while (0);
000017E0                                    2546 @L101    DS    0H
                                            2547 * ***                           return (rd_segment_t *)seg;
000017E0 B904 00F1                          2548          LGR   15,1
000017E4 47F0 C082               000017FA   2549          B     @ret_lab_845
                                            2550 * ***                   }
000017E8                                    2551 @L100    DS    0H
                                            2552 * ***           } while ((seg = ((seg)->seg_link .tqe_next)));
000017E8 E310 1000 0004          00000000   2553          LG    1,0(0,1)    ; seg
000017EE B902 0021                          2554          LTGR  2,1
000017F2 4770 C04A               000017C2   2555          BNZ   @L97
                                            2556 * ***
                                            2557 * ***           return ((void *)0);
000017F6 A7F9 0000               00000000   2558          LGHI  15,0        ; 0
                                            2559 * ***   }
000017FA                                    2560 @ret_lab_845 DS 0H
                                            2561 * * **** Start of Epilogue
                                            2562          DCCEPIL
000017FA                                    2563+         ds 0h                                                          01-DCCEP
                                            2564+* Epilog
                                            2565+* Epilog
000017FA E3E0 D008 0004          00000008   2566+         lg    14,8(,13) restore the reg                                01-DCCEP
                                                                                                                           Page   55 
  Active Usings: @REGION_845_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001800 EB1C D020 0004          00000020   2567+         lmg   1,12,32(13)                                              01-DCCEP
00001806 07FE                               2568+         br   14                                                        01-DCCEP
                                            2569+* End of Epilog
                                            2570 * * **** End of Epilogue
                                            2571          DROP  12
                                            2572 *
                                            2573 *   DSECT for automatic variables in "rd_buf_get_segment_at_offset"
                                            2574 *      (FUNCTION #845)
                                            2575 *
00000000                00000000 000000A8   2576 @AUTO#rd_buf_get_segment_at_offset DSECT
00000000                                    2577          DS    XL168
                                            2578 *
00001808                00000000 0000BFA0   2579 @CODE    CSECT
                                            2580 *
                                            2581 *
                                            2582 *
                                            2583 * ....... start of rd_segment_split
00001808                                    2584 @LNAME846 DS   0H
00001808 00000010                           2585          DC    X'00000010'
0000180C 99846DA285879485                   2586          DC    C'rd_segment_split'
0000181C 00                                 2587          DC    X'00'
                                            2588 rd_segment_split DCCPRLG CINDEX=846,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME846
                                            2589          macro
                                            2590          dccextrn &m
                                            2591          gblc    &$dccext(1000)
                                            2592          gbla    &$dccexti
                                            2593          lcla    &i
                                            2594 &$dccext(&$dccexti+1) setc    '&m'
                                            2595 &i       seta    1
                                            2596 .loop    aif    (&i gt &$dccexti).around
                                            2597          aif    ('&$dccext(&i)' eq '&m').getout
                                            2598 &i       seta    &i+1
                                            2599          ago     .loop
                                            2600 .around  anop
                                            2601 &$dccexti seta &$dccexti+1
                                            2602          extrn  &m
                                            2603 .getout  anop
                                            2604          mend
00001820                                    2605+$eye0069    ds    0d                                                    02-DCCCA
00001820 C4C3C3                             2606+         dc cl3'DCC'                                                    02-DCCCA
00001823 01                                 2607+         dc xl1'01' format one                                          02-DCCCA
00001824 00000000                           2608+         dc a(0)                                                        02-DCCCA
00001828 0000000000001892                   2609+         dc ad(@PER_846)                                                02-DCCCA
00001830 00000000000000D0                   2610+         dc ad(208)                                                     02-DCCCA
00001838 0000000000000000                   2611+         dc ad(0)                                                       02-DCCCA
00001840 0000000000001000                   2612+         dc ad(4096)                                                    02-DCCCA
00001848 20                                 2613+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001849 03                                 2614+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000184A 03                                 2615+         dc al1(3)                                                      02-DCCCA
0000184B 08                                 2616+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000184C 00                                 2617+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   56 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000184D 000000                             2618+         dc al3(0)                                                      02-DCCCA
00001850 0000000000001808                   2619+         dc ad(@LNAME846)                                               02-DCCCA
00001858                                    2620+         ds 0d                                                          02-DCCCA
00001858 0000000000001820                   2621+         dc ad($eye0069)                                                02-DCCCA
00001860 0000000000000000                   2622+         dc ad(0)                                                       02-DCCCA
00001868                                    2623+         ds    0d                                                       01-DCCPR
00001868                                    2624+rd_segment_split ds 0d                                                  01-DCCPR
00001868                                    2625+@REGION_846_1 ds 0h                                                     01-DCCPR
00001868 EBEC D008 0024          00000008   2626+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000186E E3E0 D088 0004          00000088   2627+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001874 E3C0 D090 0004          00000090   2628+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000187A B904 002E                          2629+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000187E E3B0 C018 0004          00000018   2630+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001884 A7EB 00D0               000000D0   2631+         aghi  14,208              increase by frame size               01-DCCPR
00001888 E3E0 C020 0021          00000020   2632+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000188E 4720 B020               00000020   2633+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001892                                    2634+@PER_846 ds    0h                                                       01-DCCPR
00001892 EBDE 2080 0024          00000080   2635+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001898 E3C0 2090 0024          00000090   2636+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000189E B904 00D2                          2637+         lgr   13,2                set real frame pointer               01-DCCPR
000018A2 B904 00CF                          2638+         lgr   12,15               set base reg                         01-DCCPR
                        00001868            2639+         using @REGION_846_1,12                                         01-DCCPR
                                            2640 * ******* End of Prologue
                                            2641 * *
000018A6 EB24 1000 0004          00000000   2642          LMG   2,4,0(1)    ; rbuf
                                            2643 * ***           rd_segment_t *newseg;
                                            2644 * ***           size_t relof;
                                            2645 * ***
                                            2646 * ***           ((seg == rbuf->rbuf_wpos) ? (void)0 : __assert(__func_\
                                            2647 * _, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 263, "seg == rbuf->rbuf\
                                            2648 * _wpos"));
000018AC E3F0 2018 0004          00000018   2649          LG    15,24(0,2)  ; offset of rbuf_wpos in rd_buf_s
000018B2 B920 003F                          2650          CGR   3,15
000018B6 4780 C08E               000018F6   2651          BE    @L105
000018BA                                    2652 @L104    DS    0H
000018BA E3F0 C1D8 0004          00001A40   2653          LG    15,@lit_846_52
000018C0 41F0 F05C               0000005C   2654          LA    15,92(0,15)
000018C4 E3F0 D0B0 0024          000000B0   2655          STG   15,176(0,13)
000018CA E3F0 C1D0 0004          00001A38   2656          LG    15,@lit_846_53
000018D0 4110 F040               00000040   2657          LA    1,64(0,15)
000018D4 E310 D0B8 0024          000000B8   2658          STG   1,184(0,13)
000018DA E548 D0C0 0107          000000C0   2659          MVGHI 192(13),263
000018E0 41F0 F084               00000084   2660          LA    15,132(0,15)
000018E4 E3F0 D0C8 0024          000000C8   2661          STG   15,200(0,13)
000018EA 4110 D0B0               000000B0   2662          LA    1,176(0,13)
000018EE E3F0 C1C8 0004          00001A30   2663          LG    15,@lit_846_54 ; __assert
000018F4                                    2664 @@gen_label82 DS    0H
000018F4 05EF                               2665          BALR  14,15
000018F6                                    2666 @@gen_label83 DS    0H
000018F6                                    2667 @L105    DS    0H
                                            2668 * ***           ((absof >= seg->seg_absof && absof <= seg->seg_absof +\
                                            2669 *  seg->seg_of) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                                                                                                           Page   57 
  Active Usings: @REGION_846_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2670 * ka\\src\\rdbuf.c", 264, "absof >= seg->seg_absof && absof <= seg->se\
                                            2671 * g_absof + seg->seg_of"));
000018F6 E340 3028 0021          00000028   2672          CLG   4,40(0,3)
000018FC 4740 C0AC               00001914   2673          BL    @L106
00001900 E3F0 3028 0004          00000028   2674          LG    15,40(0,3)  ; offset of seg_absof in rd_segment_s
00001906 E3F0 3018 000A          00000018   2675          ALG   15,24(0,3)
0000190C B921 004F                          2676          CLGR  4,15
00001910 47D0 C0E8               00001950   2677          BNH   @L107
00001914                                    2678 @L106    DS    0H
00001914 E3F0 C1D8 0004          00001A40   2679          LG    15,@lit_846_52
0000191A 41F0 F05C               0000005C   2680          LA    15,92(0,15)
0000191E E3F0 D0B0 0024          000000B0   2681          STG   15,176(0,13)
00001924 E3F0 C1D0 0004          00001A38   2682          LG    15,@lit_846_53
0000192A 4110 F040               00000040   2683          LA    1,64(0,15)
0000192E E310 D0B8 0024          000000B8   2684          STG   1,184(0,13)
00001934 E548 D0C0 0108          000000C0   2685          MVGHI 192(13),264
0000193A 41F0 F09C               0000009C   2686          LA    15,156(0,15)
0000193E E3F0 D0C8 0024          000000C8   2687          STG   15,200(0,13)
00001944 4110 D0B0               000000B0   2688          LA    1,176(0,13)
00001948 E3F0 C1C8 0004          00001A30   2689          LG    15,@lit_846_54 ; __assert
0000194E                                    2690 @@gen_label86 DS    0H
0000194E 05EF                               2691          BALR  14,15
00001950                                    2692 @@gen_label87 DS    0H
00001950                                    2693 @L107    DS    0H
                                            2694 * ***
                                            2695 * ***
                                            2696 * ***           relof = absof - seg->seg_absof;
00001950 E340 3028 000B          00000028   2697          SLG   4,40(0,3)
                                            2698 * ***
                                            2699 * ***           newseg = rd_buf_alloc_segment0(rbuf, 0);
00001956 E320 D0B0 0024          000000B0   2700          STG   2,176(0,13)
0000195C D707 D0B8 D0B8 000000B8 000000B8   2701          XC    184(8,13),184(13)
00001962 4110 D0B0               000000B0   2702          LA    1,176(0,13)
00001966 E3F0 C1E0 0004          00001A48   2703          LG    15,@lit_846_58 ; rd_buf_alloc_segment0
0000196C                                    2704 @@gen_label88 DS    0H
0000196C 05EF                               2705          BALR  14,15
0000196E                                    2706 @@gen_label89 DS    0H
                                            2707 * ***
                                            2708 * ***
                                            2709 * ***           newseg->seg_p      = seg->seg_p+relof;
0000196E E310 3010 0004          00000010   2710          LG    1,16(0,3)   ; offset of seg_p in rd_segment_s
00001974 4114 1000               00000000   2711          LA    1,0(4,1)
00001978 E310 F010 0024          00000010   2712          STG   1,16(0,15)  ; offset of seg_p in rd_segment_s
                                            2713 * ***           newseg->seg_of     = seg->seg_of-relof;
0000197E E310 3018 0004          00000018   2714          LG    1,24(0,3)   ; offset of seg_of in rd_segment_s
00001984 B90B 0014                          2715          SLGR  1,4
00001988 E310 F018 0024          00000018   2716          STG   1,24(0,15)  ; offset of seg_of in rd_segment_s
                                            2717 * ***           newseg->seg_size   = seg->seg_size-relof;
0000198E E310 3020 0004          00000020   2718          LG    1,32(0,3)   ; offset of seg_size in rd_segment_s
00001994 B90B 0014                          2719          SLGR  1,4
00001998 E310 F020 0024          00000020   2720          STG   1,32(0,15)  ; offset of seg_size in rd_segment_s
                                            2721 * ***           newseg->seg_absof  = 0xffffffffffffffffULL;
                                                                                                                           Page   58 
  Active Usings: @REGION_846_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000199E E548 F028 FFFF          00000028   2722          MVGHI 40(15),-1   ; offset of seg_absof in rd_segment_s
                                            2723 * ***           newseg->seg_flags |= seg->seg_flags;
000019A4 5810 F038               00000038   2724          L     1,56(0,15)
000019A8 5610 3038               00000038   2725          O     1,56(0,3)
000019AC 5010 F038               00000038   2726          ST    1,56(0,15)
                                            2727 * ***
                                            2728 * ***
                                            2729 * ***           seg->seg_of        = relof;
000019B0 E340 3018 0024          00000018   2730          STG   4,24(0,3)   ; offset of seg_of in rd_segment_s
                                            2731 * ***           seg->seg_size      = relof;
000019B6 E340 3020 0024          00000020   2732          STG   4,32(0,3)   ; offset of seg_size in rd_segment_s
                                            2733 * ***
                                            2734 * ***
                                            2735 * ***
                                            2736 * ***           rbuf->rbuf_len   -= newseg->seg_of;
000019BC E310 2020 0004          00000020   2737          LG    1,32(0,2)
000019C2 E310 F018 000B          00000018   2738          SLG   1,24(0,15)
000019C8 E310 2020 0024          00000020   2739          STG   1,32(0,2)
                                            2740 * ***           rbuf->rbuf_size  -= newseg->seg_size;
000019CE E310 2030 0004          00000030   2741          LG    1,48(0,2)
000019D4 E310 F020 000B          00000020   2742          SLG   1,32(0,15)
000019DA E310 2030 0024          00000030   2743          STG   1,48(0,2)
                                            2744 * ***
                                            2745 * ***           return newseg;
                                            2746 * ***   }
                                            2747 * * **** Start of Epilogue
                                            2748          DCCEPIL
000019E0                                    2749+         ds 0h                                                          01-DCCEP
                                            2750+* Epilog
000019E0 D707 D088 D088 00000088 00000088   2751+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000019E6 E3D0 D080 0004          00000080   2752+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000019EC E3C0 D090 0004          00000090   2753+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000019F2 E3B0 C018 0004          00000018   2754+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000019F8 E3C0 B010 0021          00000010   2755+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000019FE E3E0 D008 0004          00000008   2756+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001A04 EB1C D020 0004          00000020   2757+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001A0A 078E                               2758+         bcr 8,14                if same dsab, just return              01-DCCEP
00001A0C E3F0 D010 0024          00000010   2759+         stg 15,16(0,13)         save return code                       01-DCCEP
00001A12 E300 D018 0024          00000018   2760+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001A18 E3F0 D090 0004          00000090   2761+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001A1E E3F0 F018 0004          00000018   2762+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001A24 47F0 F040               00000040   2763+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2764+* End of Epilog
                                            2765 * * **** End of Epilogue
00001A28                                    2766          DS    0D
00001A28 000000D0                           2767 @FRAMESIZE_846 DC F'208'
00001A2C 00000000
00001A30 0000000000000000                   2768 @lit_846_54 DC AD(__assert)
00001A38 000000000000CB02                   2769 @lit_846_53 DC AD(@strings@)
00001A40 000000000000BFA0                   2770 @lit_846_52 DC AD(@DATA)
00001A48 0000000000000FF0                   2771 @lit_846_58 DC AD(rd_buf_alloc_segment0)
                                            2772          DROP  12
                                                                                                                           Page   59 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2773 *
                                            2774 *   DSECT for automatic variables in "rd_segment_split"
                                            2775 *      (FUNCTION #846)
                                            2776 *
00000000                00000000 000000B0   2777 @AUTO#rd_segment_split DSECT
00000000                                    2778          DS    XL168
000000A8                                    2779 rd_segment_split#relof#0 DS 8XL1 ; relof
                                            2780 *
00001A50                00000000 0000BFA0   2781 @CODE    CSECT
                                            2782 *
                                            2783 *
                                            2784 *
                                            2785 * ....... start of rd_buf_destroy_segment
00001A50                                    2786 @LNAME847 DS   0H
00001A50 00000016                           2787          DC    X'00000016'
00001A54 99846D82A4866D84                   2788          DC    C'rd_buf_destroy_segment'
00001A6A 00                                 2789          DC    X'00'
                                            2790 rd_buf_destroy_segment DCCPRLG CINDEX=847,BASER=12,FRAME=200,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME847
                                            2791          macro
                                            2792          dccextrn &m
                                            2793          gblc    &$dccext(1000)
                                            2794          gbla    &$dccexti
                                            2795          lcla    &i
                                            2796 &$dccext(&$dccexti+1) setc    '&m'
                                            2797 &i       seta    1
                                            2798 .loop    aif    (&i gt &$dccexti).around
                                            2799          aif    ('&$dccext(&i)' eq '&m').getout
                                            2800 &i       seta    &i+1
                                            2801          ago     .loop
                                            2802 .around  anop
                                            2803 &$dccexti seta &$dccexti+1
                                            2804          extrn  &m
                                            2805 .getout  anop
                                            2806          mend
00001A70                                    2807+$eye0072    ds    0d                                                    02-DCCCA
00001A70 C4C3C3                             2808+         dc cl3'DCC'                                                    02-DCCCA
00001A73 01                                 2809+         dc xl1'01' format one                                          02-DCCCA
00001A74 00000000                           2810+         dc a(0)                                                        02-DCCCA
00001A78 0000000000001AE2                   2811+         dc ad(@PER_847)                                                02-DCCCA
00001A80 00000000000000C8                   2812+         dc ad(200)                                                     02-DCCCA
00001A88 0000000000000000                   2813+         dc ad(0)                                                       02-DCCCA
00001A90 0000000000001000                   2814+         dc ad(4096)                                                    02-DCCCA
00001A98 20                                 2815+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001A99 03                                 2816+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001A9A 03                                 2817+         dc al1(3)                                                      02-DCCCA
00001A9B 08                                 2818+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001A9C 00                                 2819+         dc bl.8'00000000'                                              02-DCCCA
00001A9D 000000                             2820+         dc al3(0)                                                      02-DCCCA
00001AA0 0000000000001A50                   2821+         dc ad(@LNAME847)                                               02-DCCCA
00001AA8                                    2822+         ds 0d                                                          02-DCCCA
00001AA8 0000000000001A70                   2823+         dc ad($eye0072)                                                02-DCCCA
                                                                                                                           Page   60 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001AB0 0000000000000000                   2824+         dc ad(0)                                                       02-DCCCA
00001AB8                                    2825+         ds    0d                                                       01-DCCPR
00001AB8                                    2826+rd_buf_destroy_segment ds 0d                                            01-DCCPR
00001AB8                                    2827+@REGION_847_1 ds 0h                                                     01-DCCPR
00001AB8 EBEC D008 0024          00000008   2828+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001ABE E3E0 D088 0004          00000088   2829+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001AC4 E3C0 D090 0004          00000090   2830+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001ACA B904 002E                          2831+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001ACE E3B0 C018 0004          00000018   2832+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001AD4 A7EB 00C8               000000C8   2833+         aghi  14,200              increase by frame size               01-DCCPR
00001AD8 E3E0 C020 0021          00000020   2834+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001ADE 4720 B020               00000020   2835+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001AE2                                    2836+@PER_847 ds    0h                                                       01-DCCPR
00001AE2 EBDE 2080 0024          00000080   2837+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001AE8 E3C0 2090 0024          00000090   2838+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001AEE B904 00D2                          2839+         lgr   13,2                set real frame pointer               01-DCCPR
00001AF2 B904 00CF                          2840+         lgr   12,15               set base reg                         01-DCCPR
                        00001AB8            2841+         using @REGION_847_1,12                                         01-DCCPR
                                            2842 * ******* End of Prologue
                                            2843 * *
                                            2844 * ***           ((rbuf->rbuf_segment_cnt > 0 && rbuf->rbuf_len >= seg-\
                                            2845 * >seg_of && rbuf->rbuf_size >= seg->seg_size) ? (void)0 : __assert(__\
                                            2846 * func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 298, "rbuf->rbuf_s\
                                            2847 * egment_cnt > 0 && rbuf->rbuf_len >= seg->seg_of && rbuf->rbuf_size >\
                                            2848 * = seg->seg_size"));
00001AF6 EB23 1000 0004          00000000   2849          LMG   2,3,0(1)    ; rbuf
00001AFC E559 2010 0000          00000010   2850          CLGHSI 16(2),0
00001B02 47D0 C06E               00001B26   2851          BNH   @L108
00001B06 E3F0 2020 0004          00000020   2852          LG    15,32(0,2)  ; offset of rbuf_len in rd_buf_s
00001B0C E3F0 3018 0021          00000018   2853          CLG   15,24(0,3)
00001B12 4740 C06E               00001B26   2854          BL    @L108
00001B16 E3F0 2030 0004          00000030   2855          LG    15,48(0,2)  ; offset of rbuf_size in rd_buf_s
00001B1C E3F0 3020 0021          00000020   2856          CLG   15,32(0,3)
00001B22 47B0 C0AA               00001B62   2857          BNL   @L110
00001B26                                    2858 @L108    DS    0H
00001B26 E3F0 C0E8 0004          00001BA0   2859          LG    15,@lit_847_60
00001B2C 41F0 F06E               0000006E   2860          LA    15,110(0,15)
00001B30 E3F0 D0A8 0024          000000A8   2861          STG   15,168(0,13)
00001B36 E3F0 C0E0 0004          00001B98   2862          LG    15,@lit_847_61
00001B3C 4110 F040               00000040   2863          LA    1,64(0,15)
00001B40 E310 D0B0 0024          000000B0   2864          STG   1,176(0,13)
00001B46 E548 D0B8 012A          000000B8   2865          MVGHI 184(13),298
00001B4C 41F0 F0DE               000000DE   2866          LA    15,222(0,15)
00001B50 E3F0 D0C0 0024          000000C0   2867          STG   15,192(0,13)
00001B56 4110 D0A8               000000A8   2868          LA    1,168(0,13)
00001B5A E3F0 C0D8 0004          00001B90   2869          LG    15,@lit_847_62 ; __assert
00001B60                                    2870 @@gen_label93 DS    0H
00001B60 05EF                               2871          BALR  14,15
00001B62                                    2872 @@gen_label94 DS    0H
00001B62                                    2873 @L109    DS    0H
                                            2874 * ***
                                            2875 * ***
                                                                                                                           Page   61 
  Active Usings: @REGION_847_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2876 * ***
                                            2877 * ***           do {   if (((seg)->seg_link .tqe_next) != (((void *)0)\
                                            2878 * )) (seg)->seg_link .tqe_next->seg_link .tqe_prev = (seg)->seg_link .\
                                            2879 * tqe_prev; else (&rbuf->rbuf_segments)->tqh_last = (seg)->seg_link .t\
                                            2880 * qe_prev; *(seg)->seg_link .tqe_prev = (seg)->seg_link .tqe_next; ; }\
                                            2881 *  while ( 0);
00001B62                                    2882 @L110    DS    0H
00001B62 E3F0 3000 0002          00000000   2883          LTG   15,0(0,3)   ; seg
00001B68 4780 C0F8               00001BB0   2884          BE    @L113
00001B6C E3F0 3000 0004          00000000   2885          LG    15,0(0,3)   ; seg
00001B72 E310 3008 0004          00000008   2886          LG    1,8(0,3)    ; offset of tqe_prev in 0000027
00001B78 E310 F008 0024          00000008   2887          STG   1,8(0,15)   ; offset of tqe_prev in 0000027
00001B7E 47F0 C104               00001BBC   2888          B     @L114
00001B88                                    2889          DS    0D
00001B88 000000C8                           2890 @FRAMESIZE_847 DC F'200'
00001B8C 00000000
00001B90 0000000000000000                   2891 @lit_847_62 DC AD(__assert)
00001B98 000000000000CB02                   2892 @lit_847_61 DC AD(@strings@)
00001BA0 000000000000BFA0                   2893 @lit_847_60 DC AD(@DATA)
00001BA8 0000000000000BA8                   2894 @lit_847_64 DC AD(rd_segment_destroy)
00001BB0                                    2895 @L113    DS    0H
00001BB0 E3F0 3008 0004          00000008   2896          LG    15,8(0,3)   ; offset of tqe_prev in 0000027
00001BB6 E3F0 2008 0024          00000008   2897          STG   15,8(0,2)   ; offset of tqh_last in rd_segment_head
00001BBC                                    2898 @L114    DS    0H
00001BBC E3F0 3008 0004          00000008   2899          LG    15,8(0,3)   ; offset of tqe_prev in 0000027
00001BC2 E310 3000 0004          00000000   2900          LG    1,0(0,3)    ; seg
00001BC8 E310 F000 0024          00000000   2901          STG   1,0(0,15)
                                            2902 * ***           rbuf->rbuf_segment_cnt--;
00001BCE E3F0 2010 0004          00000010   2903          LG    15,16(0,2)
00001BD4 A7FB FFFF               0000FFFF   2904          AGHI  15,-1
00001BD8 E3F0 2010 0024          00000010   2905          STG   15,16(0,2)
                                            2906 * ***           rbuf->rbuf_len  -= seg->seg_of;
00001BDE E3F0 2020 0004          00000020   2907          LG    15,32(0,2)
00001BE4 E3F0 3018 000B          00000018   2908          SLG   15,24(0,3)
00001BEA E3F0 2020 0024          00000020   2909          STG   15,32(0,2)
                                            2910 * ***           rbuf->rbuf_size -= seg->seg_size;
00001BF0 E3F0 2030 0004          00000030   2911          LG    15,48(0,2)
00001BF6 E3F0 3020 000B          00000020   2912          SLG   15,32(0,3)
00001BFC E3F0 2030 0024          00000030   2913          STG   15,48(0,2)
                                            2914 * ***           if (rbuf->rbuf_wpos == seg)
00001C02 E3F0 2018 0004          00000018   2915          LG    15,24(0,2)  ; offset of rbuf_wpos in rd_buf_s
00001C08 B920 00F3                          2916          CGR   15,3
00001C0C 4770 C162               00001C1A   2917          BNE   @L115
                                            2918 * ***                   rbuf->rbuf_wpos = ((void *)0);
00001C10 A7F9 0000               00000000   2919          LGHI  15,0        ; 0
00001C14 E3F0 2018 0024          00000018   2920          STG   15,24(0,2)  ; offset of rbuf_wpos in rd_buf_s
00001C1A                                    2921 @L115    DS    0H
                                            2922 * ***
                                            2923 * ***           rd_segment_destroy(seg);
00001C1A E330 D0A8 0024          000000A8   2924          STG   3,168(0,13)
00001C20 4110 D0A8               000000A8   2925          LA    1,168(0,13)
00001C24 E3F0 C0F0 0004          00001BA8   2926          LG    15,@lit_847_64 ; rd_segment_destroy
                                                                                                                           Page   62 
  Active Usings: @REGION_847_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001C2A                                    2927 @@gen_label97 DS    0H
00001C2A 05EF                               2928          BALR  14,15
00001C2C                                    2929 @@gen_label98 DS    0H
                                            2930 * ***   }
00001C2C                                    2931 @ret_lab_847 DS 0H
                                            2932 * * **** Start of Epilogue
                                            2933          DCCEPIL
00001C2C                                    2934+         ds 0h                                                          01-DCCEP
                                            2935+* Epilog
00001C2C D707 D088 D088 00000088 00000088   2936+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001C32 E3D0 D080 0004          00000080   2937+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001C38 E3C0 D090 0004          00000090   2938+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001C3E E3B0 C018 0004          00000018   2939+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001C44 E3C0 B010 0021          00000010   2940+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001C4A E3E0 D008 0004          00000008   2941+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001C50 EB1C D020 0004          00000020   2942+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001C56 078E                               2943+         bcr 8,14                if same dsab, just return              01-DCCEP
00001C58 E3F0 D010 0024          00000010   2944+         stg 15,16(0,13)         save return code                       01-DCCEP
00001C5E E300 D018 0024          00000018   2945+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001C64 E3F0 D090 0004          00000090   2946+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001C6A E3F0 F018 0004          00000018   2947+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001C70 47F0 F040               00000040   2948+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2949+* End of Epilog
                                            2950 * * **** End of Epilogue
                                            2951          DROP  12
                                            2952 *
                                            2953 *   DSECT for automatic variables in "rd_buf_destroy_segment"
                                            2954 *      (FUNCTION #847)
                                            2955 *
00000000                00000000 000000A8   2956 @AUTO#rd_buf_destroy_segment DSECT
00000000                                    2957          DS    XL168
                                            2958 *
00001C74                00000000 0000BFA0   2959 @CODE    CSECT
                                            2960 *
                                            2961 *
                                            2962 *
                                            2963 * ....... start of rd_buf_destroy
                                            2964 rd_buf_destroy ALIAS X'99846D82A4866D8485A2A39996A8'
00001C74                                    2965 @LNAME800 DS   0H
00001C74 0000000E                           2966          DC    X'0000000E'
00001C78 99846D82A4866D84                   2967          DC    C'rd_buf_destroy'
00001C86 00                                 2968          DC    X'00'
                                            2969 rd_buf_destroy DCCPRLG CINDEX=800,BASER=12,FRAME=184,ENTRY=YES,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME800
                                            2970          macro
                                            2971          dccextrn &m
                                            2972          gblc    &$dccext(1000)
                                            2973          gbla    &$dccexti
                                            2974          lcla    &i
                                            2975 &$dccext(&$dccexti+1) setc    '&m'
                                            2976 &i       seta    1
                                            2977 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   63 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2978          aif    ('&$dccext(&i)' eq '&m').getout
                                            2979 &i       seta    &i+1
                                            2980          ago     .loop
                                            2981 .around  anop
                                            2982 &$dccexti seta &$dccexti+1
                                            2983          extrn  &m
                                            2984 .getout  anop
                                            2985          mend
00001C88                                    2986+$eye0075    ds    0d                                                    02-DCCCA
00001C88 C4C3C3                             2987+         dc cl3'DCC'                                                    02-DCCCA
00001C8B 01                                 2988+         dc xl1'01' format one                                          02-DCCCA
00001C8C 00000000                           2989+         dc a(0)                                                        02-DCCCA
00001C90 0000000000001CFA                   2990+         dc ad(@PER_800)                                                02-DCCCA
00001C98 00000000000000B8                   2991+         dc ad(184)                                                     02-DCCCA
00001CA0 0000000000000000                   2992+         dc ad(0)                                                       02-DCCCA
00001CA8 0000000000001000                   2993+         dc ad(4096)                                                    02-DCCCA
00001CB0 20                                 2994+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001CB1 03                                 2995+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001CB2 03                                 2996+         dc al1(3)                                                      02-DCCCA
00001CB3 08                                 2997+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001CB4 00                                 2998+         dc bl.8'00000000'                                              02-DCCCA
00001CB5 000000                             2999+         dc al3(0)                                                      02-DCCCA
00001CB8 0000000000001C74                   3000+         dc ad(@LNAME800)                                               02-DCCCA
00001CC0                                    3001+         ds 0d                                                          02-DCCCA
00001CC0 0000000000001C88                   3002+         dc ad($eye0075)                                                02-DCCCA
00001CC8 0000000000000000                   3003+         dc ad(0)                                                       02-DCCCA
00001CD0                                    3004+         ds    0d                                                       01-DCCPR
                                            3005+         entry rd_buf_destroy                                           01-DCCPR
00001CD0                                    3006+rd_buf_destroy ds 0d                                                    01-DCCPR
00001CD0                                    3007+@REGION_800_1 ds 0h                                                     01-DCCPR
00001CD0 EBEC D008 0024          00000008   3008+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001CD6 E3E0 D088 0004          00000088   3009+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001CDC E3C0 D090 0004          00000090   3010+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001CE2 B904 002E                          3011+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001CE6 E3B0 C018 0004          00000018   3012+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001CEC A7EB 00B8               000000B8   3013+         aghi  14,184              increase by frame size               01-DCCPR
00001CF0 E3E0 C020 0021          00000020   3014+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001CF6 4720 B020               00000020   3015+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001CFA                                    3016+@PER_800 ds    0h                                                       01-DCCPR
00001CFA EBDE 2080 0024          00000080   3017+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001D00 E3C0 2090 0024          00000090   3018+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001D06 B904 00D2                          3019+         lgr   13,2                set real frame pointer               01-DCCPR
00001D0A B904 00CF                          3020+         lgr   12,15               set base reg                         01-DCCPR
                        00001CD0            3021+         using @REGION_800_1,12                                         01-DCCPR
                                            3022 * ******* End of Prologue
                                            3023 * *
00001D0E E320 1000 0004          00000000   3024          LG    2,0(0,1)    ; rbuf
                                            3025 * ***           rd_segment_t *seg, *tmp;
                                            3026 * ***
                                            3027 * ***
                                            3028 * ***
                                            3029 * ***   # 333 "C:\asgkafka\librdkafka\src\rdbuf.c"
                                                                                                                           Page   64 
  Active Usings: @REGION_800_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3030 * ***           for ((seg) = ((&rbuf->rbuf_segments)->tqh_first); (seg\
                                            3031 * ) != (((void *)0)) && ((tmp) = ((seg)->seg_link .tqe_next), 1); (seg\
                                            3032 * ) = (tmp)) {
00001D14 E3F0 2000 0004          00000000   3033          LG    15,0(0,2)   ; rbuf
00001D1A 47F0 C07E               00001D4E   3034          B     @L117
00001D20                                    3035          DS    0D
00001D20 000000B8                           3036 @FRAMESIZE_800 DC F'184'
00001D24 00000000
00001D28 0000000000000BA8                   3037 @lit_800_66 DC AD(rd_segment_destroy)
00001D30 00000000000001C0                   3038 @lit_800_67 DC AD(rd_free)
00001D38                                    3039 @L116    DS    0H
                                            3040 * ***                   rd_segment_destroy(seg);
00001D38 E3F0 D0B0 0024          000000B0   3041          STG   15,176(0,13)
00001D3E 4110 D0B0               000000B0   3042          LA    1,176(0,13)
00001D42 E3F0 C058 0004          00001D28   3043          LG    15,@lit_800_66 ; rd_segment_destroy
00001D48                                    3044 @@gen_label99 DS    0H
00001D48 05EF                               3045          BALR  14,15
00001D4A                                    3046 @@gen_label100 DS    0H
                                            3047 * ***
                                            3048 * ***           }
00001D4A B904 00F3                          3049          LGR   15,3        ; seg
00001D4E                                    3050 @L117    DS    0H
00001D4E B902 001F                          3051          LTGR  1,15
00001D52 4780 C090               00001D60   3052          BE    @L118
00001D56 E330 F000 0004          00000000   3053          LG    3,0(0,15)   ; seg
00001D5C 47F0 C068               00001D38   3054          B     @L116
00001D60                                    3055 @L118    DS    0H
                                            3056 * ***
                                            3057 * ***           if (rbuf->rbuf_extra)
00001D60 E3F0 2038 0002          00000038   3058          LTG   15,56(0,2)  ; offset of rbuf_extra in rd_buf_s
00001D66 4780 C0B2               00001D82   3059          BZ    @L121
                                            3060 * ***                   rd_free(rbuf->rbuf_extra);
00001D6A E3F0 2038 0004          00000038   3061          LG    15,56(0,2)
00001D70 E3F0 D0B0 0024          000000B0   3062          STG   15,176(0,13)
00001D76 4110 D0B0               000000B0   3063          LA    1,176(0,13)
00001D7A E3F0 C060 0004          00001D30   3064          LG    15,@lit_800_67 ; rd_free
00001D80                                    3065 @@gen_label103 DS    0H
00001D80 05EF                               3066          BALR  14,15
00001D82                                    3067 @@gen_label104 DS    0H
00001D82                                    3068 @L121    DS    0H
                                            3069 * ***   }
00001D82                                    3070 @ret_lab_800 DS 0H
                                            3071 * * **** Start of Epilogue
                                            3072          DCCEPIL
00001D82                                    3073+         ds 0h                                                          01-DCCEP
                                            3074+* Epilog
00001D82 D707 D088 D088 00000088 00000088   3075+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001D88 E3D0 D080 0004          00000080   3076+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001D8E E3C0 D090 0004          00000090   3077+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001D94 E3B0 C018 0004          00000018   3078+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001D9A E3C0 B010 0021          00000010   3079+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001DA0 E3E0 D008 0004          00000008   3080+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page   65 
  Active Usings: @REGION_800_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001DA6 EB1C D020 0004          00000020   3081+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001DAC 078E                               3082+         bcr 8,14                if same dsab, just return              01-DCCEP
00001DAE E3F0 D010 0024          00000010   3083+         stg 15,16(0,13)         save return code                       01-DCCEP
00001DB4 E300 D018 0024          00000018   3084+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001DBA E3F0 D090 0004          00000090   3085+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001DC0 E3F0 F018 0004          00000018   3086+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001DC6 47F0 F040               00000040   3087+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3088+* End of Epilog
                                            3089 * * **** End of Epilogue
                                            3090          DROP  12
                                            3091 *
                                            3092 *   DSECT for automatic variables in "rd_buf_destroy"
                                            3093 *      (FUNCTION #800)
                                            3094 *
00000000                00000000 000000A8   3095 @AUTO#rd_buf_destroy DSECT
00000000                                    3096          DS    XL168
                                            3097 *
00001DCA                00000000 0000BFA0   3098 @CODE    CSECT
                                            3099 *
                                            3100 *
                                            3101 *
                                            3102 * ....... start of rd_buf_init
                                            3103 rd_buf_init ALIAS X'99846D82A4866D899589A3'
00001DCA                                    3104 @LNAME799 DS   0H
00001DCA 0000000B                           3105          DC    X'0000000B'
00001DCE 99846D82A4866D89                   3106          DC    C'rd_buf_init'
00001DD9 00                                 3107          DC    X'00'
                                            3108 rd_buf_init DCCPRLG CINDEX=799,BASER=12,FRAME=208,ENTRY=YES,ARCH=ZARCH,*
                                                                LNAMEADDR=@LNAME799
                                            3109          macro
                                            3110          dccextrn &m
                                            3111          gblc    &$dccext(1000)
                                            3112          gbla    &$dccexti
                                            3113          lcla    &i
                                            3114 &$dccext(&$dccexti+1) setc    '&m'
                                            3115 &i       seta    1
                                            3116 .loop    aif    (&i gt &$dccexti).around
                                            3117          aif    ('&$dccext(&i)' eq '&m').getout
                                            3118 &i       seta    &i+1
                                            3119          ago     .loop
                                            3120 .around  anop
                                            3121 &$dccexti seta &$dccexti+1
                                            3122          extrn  &m
                                            3123 .getout  anop
                                            3124          mend
00001DE0                                    3125+$eye0078    ds    0d                                                    02-DCCCA
00001DE0 C4C3C3                             3126+         dc cl3'DCC'                                                    02-DCCCA
00001DE3 01                                 3127+         dc xl1'01' format one                                          02-DCCCA
00001DE4 00000000                           3128+         dc a(0)                                                        02-DCCCA
00001DE8 0000000000001E52                   3129+         dc ad(@PER_799)                                                02-DCCCA
00001DF0 00000000000000D0                   3130+         dc ad(208)                                                     02-DCCCA
00001DF8 0000000000000000                   3131+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   66 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001E00 0000000000001000                   3132+         dc ad(4096)                                                    02-DCCCA
00001E08 20                                 3133+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001E09 03                                 3134+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001E0A 03                                 3135+         dc al1(3)                                                      02-DCCCA
00001E0B 08                                 3136+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001E0C 00                                 3137+         dc bl.8'00000000'                                              02-DCCCA
00001E0D 000000                             3138+         dc al3(0)                                                      02-DCCCA
00001E10 0000000000001DCA                   3139+         dc ad(@LNAME799)                                               02-DCCCA
00001E18                                    3140+         ds 0d                                                          02-DCCCA
00001E18 0000000000001DE0                   3141+         dc ad($eye0078)                                                02-DCCCA
00001E20 0000000000000000                   3142+         dc ad(0)                                                       02-DCCCA
00001E28                                    3143+         ds    0d                                                       01-DCCPR
                                            3144+         entry rd_buf_init                                              01-DCCPR
00001E28                                    3145+rd_buf_init ds 0d                                                       01-DCCPR
00001E28                                    3146+@REGION_799_1 ds 0h                                                     01-DCCPR
00001E28 EBEC D008 0024          00000008   3147+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001E2E E3E0 D088 0004          00000088   3148+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001E34 E3C0 D090 0004          00000090   3149+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001E3A B904 002E                          3150+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001E3E E3B0 C018 0004          00000018   3151+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001E44 A7EB 00D0               000000D0   3152+         aghi  14,208              increase by frame size               01-DCCPR
00001E48 E3E0 C020 0021          00000020   3153+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001E4E 4720 B020               00000020   3154+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001E52                                    3155+@PER_799 ds    0h                                                       01-DCCPR
00001E52 EBDE 2080 0024          00000080   3156+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001E58 E3C0 2090 0024          00000090   3157+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001E5E B904 00D2                          3158+         lgr   13,2                set real frame pointer               01-DCCPR
00001E62 B904 00CF                          3159+         lgr   12,15               set base reg                         01-DCCPR
                        00001E28            3160+         using @REGION_799_1,12                                         01-DCCPR
00001E66 B904 0021                          3161          LGR   2,1         ; ptr to parm area
                                            3162 * ******* End of Prologue
                                            3163 * *
                                            3164 * ***           size_t totalloc = 0;
00001E6A E3F0 2000 0004          00000000   3165          LG    15,0(0,2)   ; rbuf
00001E70 A719 0000               00000000   3166          LGHI  1,0         ; 0
                                            3167 * ***
                                            3168 * ***           __memset(rbuf,0,sizeof(*rbuf));
                                            3169 * setting 80 bytes to 0x00
00001E74 D74F F000 F000 00000000 00000000   3170          XC    0(80,15),0(15)
                                            3171 * ***           do { (&rbuf->rbuf_segments)->tqh_first = (((void *)0))\
                                            3172 * ; (&rbuf->rbuf_segments)->tqh_last = &(&rbuf->rbuf_segments)->tqh_fi\
                                            3173 * rst; } while ( 0);
00001E7A                                    3174 @L122    DS    0H
00001E7A A739 0000               00000000   3175          LGHI  3,0         ; 0
00001E7E E330 F000 0024          00000000   3176          STG   3,0(0,15)   ; rbuf
00001E84 E3F0 F008 0024          00000008   3177          STG   15,8(0,15)  ; offset of tqh_last in rd_segment_head
                                            3178 * ***
                                            3179 * ***           if (!fixed_seg_cnt) {
00001E8A E330 2008 0002          00000008   3180          LTG   3,8(0,2)    ; fixed_seg_cnt
00001E90 4770 C0E0               00001F08   3181          BNZ   @L125
                                            3182 * ***                   ((!buf_size) ? (void)0 : __assert(__func__, "C\
                                            3183 * :\\asgkafka\\librdkafka\\src\\rdbuf.c", 356, "!buf_size"));
                                                                                                                           Page   67 
  Active Usings: @REGION_799_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001E94 E3F0 2010 0002          00000010   3184          LTG   15,16(0,2)  ; buf_size
00001E9A 4780 C118               00001F40   3185          BZ    @ret_lab_799
00001E9E                                    3186 @L126    DS    0H
00001E9E E3F0 C0D0 0004          00001EF8   3187          LG    15,@lit_799_71
00001EA4 41F0 F086               00000086   3188          LA    15,134(0,15)
00001EA8 E3F0 D0B0 0024          000000B0   3189          STG   15,176(0,13)
00001EAE E3F0 C0C8 0004          00001EF0   3190          LG    15,@lit_799_72
00001EB4 4110 F040               00000040   3191          LA    1,64(0,15)
00001EB8 E310 D0B8 0024          000000B8   3192          STG   1,184(0,13)
00001EBE E548 D0C0 0164          000000C0   3193          MVGHI 192(13),356
00001EC4 41F0 F13E               0000013E   3194          LA    15,318(0,15)
00001EC8 E3F0 D0C8 0024          000000C8   3195          STG   15,200(0,13)
00001ECE 4110 D0B0               000000B0   3196          LA    1,176(0,13)
00001ED2 E3F0 C0C0 0004          00001EE8   3197          LG    15,@lit_799_73 ; __assert
00001ED8                                    3198 @@gen_label107 DS    0H
00001ED8 05EF                               3199          BALR  14,15
00001EDA                                    3200 @@gen_label108 DS    0H
00001EDA                                    3201 @L127    DS    0H
                                            3202 * ***                   return;
00001EDA 47F0 C118               00001F40   3203          B     @ret_lab_799
00001EE0                                    3204          DS    0D
00001EE0 000000D0                           3205 @FRAMESIZE_799 DC F'208'
00001EE4 00000000
00001EE8 0000000000000000                   3206 @lit_799_73 DC AD(__assert)
00001EF0 000000000000CB02                   3207 @lit_799_72 DC AD(@strings@)
00001EF8 000000000000BFA0                   3208 @lit_799_71 DC AD(@DATA)
00001F00 0000000000000058                   3209 @lit_799_74 DC AD(rd_malloc)
                                            3210 * ***           }
00001F08                                    3211 @L125    DS    0H
                                            3212 * ***
                                            3213 * ***
                                            3214 * ***
                                            3215 * ***
                                            3216 * ***           totalloc += (((sizeof(rd_segment_t)) + ((8) - 1)) & ~(\
                                            3217 * 8-1)) * fixed_seg_cnt;
00001F08 EB33 0006 000D          00000006   3218          SLLG  3,3,6(0)    ; *0x40
00001F0E B90A 0013                          3219          ALGR  1,3
                                            3220 * ***
                                            3221 * ***
                                            3222 * ***           totalloc += buf_size;
00001F12 E310 2010 000A          00000010   3223          ALG   1,16(0,2)
                                            3224 * ***
                                            3225 * ***           rbuf->rbuf_extra_size = totalloc;
00001F18 E310 F048 0024          00000048   3226          STG   1,72(0,15)  ; offset of rbuf_extra_size in rd_buf_s
                                            3227 * ***           rbuf->rbuf_extra = rd_malloc(rbuf->rbuf_extra_size);
00001F1E B904 002F                          3228          LGR   2,15
00001F22 E3F0 F048 0004          00000048   3229          LG    15,72(0,15)
00001F28 E3F0 D0B0 0024          000000B0   3230          STG   15,176(0,13)
00001F2E 4110 D0B0               000000B0   3231          LA    1,176(0,13)
00001F32 E3F0 C0D8 0004          00001F00   3232          LG    15,@lit_799_74 ; rd_malloc
00001F38                                    3233 @@gen_label109 DS    0H
00001F38 05EF                               3234          BALR  14,15
                                                                                                                           Page   68 
  Active Usings: @REGION_799_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001F3A                                    3235 @@gen_label110 DS    0H
00001F3A E3F0 2038 0024          00000038   3236          STG   15,56(0,2)
                                            3237 * ***   }
00001F40                                    3238 @ret_lab_799 DS 0H
                                            3239 * * **** Start of Epilogue
                                            3240          DCCEPIL
00001F40                                    3241+         ds 0h                                                          01-DCCEP
                                            3242+* Epilog
00001F40 D707 D088 D088 00000088 00000088   3243+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001F46 E3D0 D080 0004          00000080   3244+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001F4C E3C0 D090 0004          00000090   3245+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001F52 E3B0 C018 0004          00000018   3246+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001F58 E3C0 B010 0021          00000010   3247+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001F5E E3E0 D008 0004          00000008   3248+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001F64 EB1C D020 0004          00000020   3249+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001F6A 078E                               3250+         bcr 8,14                if same dsab, just return              01-DCCEP
00001F6C E3F0 D010 0024          00000010   3251+         stg 15,16(0,13)         save return code                       01-DCCEP
00001F72 E300 D018 0024          00000018   3252+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001F78 E3F0 D090 0004          00000090   3253+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001F7E E3F0 F018 0004          00000018   3254+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001F84 47F0 F040               00000040   3255+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3256+* End of Epilog
                                            3257 * * **** End of Epilogue
                                            3258          DROP  12
                                            3259 *
                                            3260 *   DSECT for automatic variables in "rd_buf_init"
                                            3261 *      (FUNCTION #799)
                                            3262 *
00000000                00000000 000000B0   3263 @AUTO#rd_buf_init DSECT
00000000                                    3264          DS    XL168
000000A8                                    3265 rd_buf_init#totalloc#0 DS 8XL1 ; totalloc
                                            3266 *
00001F88                00000000 0000BFA0   3267 @CODE    CSECT
                                            3268 *
                                            3269 *
                                            3270 *
                                            3271 * ....... start of rd_buf_get_writable0
00001F88                                    3272 @LNAME838 DS   0H
00001F88 00000014                           3273          DC    X'00000014'
00001F8C 99846D82A4866D87                   3274          DC    C'rd_buf_get_writable0'
00001FA0 00                                 3275          DC    X'00'
                                            3276 rd_buf_get_writable0 DCCPRLG CINDEX=838,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME838
                                            3277          macro
                                            3278          dccextrn &m
                                            3279          gblc    &$dccext(1000)
                                            3280          gbla    &$dccexti
                                            3281          lcla    &i
                                            3282 &$dccext(&$dccexti+1) setc    '&m'
                                            3283 &i       seta    1
                                            3284 .loop    aif    (&i gt &$dccexti).around
                                            3285          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page   69 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3286 &i       seta    &i+1
                                            3287          ago     .loop
                                            3288 .around  anop
                                            3289 &$dccexti seta &$dccexti+1
                                            3290          extrn  &m
                                            3291 .getout  anop
                                            3292          mend
00001FA8                                    3293+$eye0081    ds    0d                                                    02-DCCCA
00001FA8 C4C3C3                             3294+         dc cl3'DCC'                                                    02-DCCCA
00001FAB 01                                 3295+         dc xl1'01' format one                                          02-DCCCA
00001FAC 00000000                           3296+         dc a(0)                                                        02-DCCCA
00001FB0 000000000000201A                   3297+         dc ad(@PER_838)                                                02-DCCCA
00001FB8 00000000000000C0                   3298+         dc ad(192)                                                     02-DCCCA
00001FC0 0000000000000000                   3299+         dc ad(0)                                                       02-DCCCA
00001FC8 0000000000001000                   3300+         dc ad(4096)                                                    02-DCCCA
00001FD0 20                                 3301+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001FD1 03                                 3302+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001FD2 03                                 3303+         dc al1(3)                                                      02-DCCCA
00001FD3 08                                 3304+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001FD4 00                                 3305+         dc bl.8'00000000'                                              02-DCCCA
00001FD5 000000                             3306+         dc al3(0)                                                      02-DCCCA
00001FD8 0000000000001F88                   3307+         dc ad(@LNAME838)                                               02-DCCCA
00001FE0                                    3308+         ds 0d                                                          02-DCCCA
00001FE0 0000000000001FA8                   3309+         dc ad($eye0081)                                                02-DCCCA
00001FE8 0000000000000000                   3310+         dc ad(0)                                                       02-DCCCA
00001FF0                                    3311+         ds    0d                                                       01-DCCPR
00001FF0                                    3312+rd_buf_get_writable0 ds 0d                                              01-DCCPR
00001FF0                                    3313+@REGION_838_1 ds 0h                                                     01-DCCPR
00001FF0 EBEC D008 0024          00000008   3314+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001FF6 E3E0 D088 0004          00000088   3315+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001FFC E3C0 D090 0004          00000090   3316+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002002 B904 002E                          3317+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002006 E3B0 C018 0004          00000018   3318+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000200C A7EB 00C0               000000C0   3319+         aghi  14,192              increase by frame size               01-DCCPR
00002010 E3E0 C020 0021          00000020   3320+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002016 4720 B020               00000020   3321+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000201A                                    3322+@PER_838 ds    0h                                                       01-DCCPR
0000201A EBDE 2080 0024          00000080   3323+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002020 E3C0 2090 0024          00000090   3324+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002026 B904 00D2                          3325+         lgr   13,2                set real frame pointer               01-DCCPR
0000202A B904 00CF                          3326+         lgr   12,15               set base reg                         01-DCCPR
                        00001FF0            3327+         using @REGION_838_1,12                                         01-DCCPR
0000202E B904 0041                          3328          LGR   4,1         ; ptr to parm area
                                            3329 * ******* End of Prologue
                                            3330 * *
00002032 E330 4000 0004          00000000   3331          LG    3,0(0,4)    ; rbuf
                                            3332 * ***           rd_segment_t *seg;
                                            3333 * ***
                                            3334 * ***           for (seg = rbuf->rbuf_wpos ; seg ; seg = ((seg)->seg_l\
                                            3335 * ink .tqe_next)) {
00002038 E320 3018 0004          00000018   3336          LG    2,24(0,3)   ; offset of rbuf_wpos in rd_buf_s
0000203E 47F0 C0D8               000020C8   3337          B     @L129
                                                                                                                           Page   70 
  Active Usings: @REGION_838_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002048                                    3338          DS    0D
00002048 000000C0                           3339 @FRAMESIZE_838 DC F'192'
0000204C 00000000
00002050 0000000000000580                   3340 @lit_838_76 DC AD(rd_segment_write_remains)
00002058                                    3341 @L128    DS    0H
                                            3342 * ***                   size_t len = rd_segment_write_remains(seg, p);
00002058 E320 D0B0 0024          000000B0   3343          STG   2,176(0,13)
0000205E E3F0 4010 0004          00000010   3344          LG    15,16(0,4)  ; p
00002064 E3F0 D0B8 0024          000000B8   3345          STG   15,184(0,13)
0000206A 4110 D0B0               000000B0   3346          LA    1,176(0,13)
0000206E E3F0 C060 0004          00002050   3347          LG    15,@lit_838_76 ; rd_segment_write_remains
00002074                                    3348 @@gen_label111 DS    0H
00002074 05EF                               3349          BALR  14,15
00002076                                    3350 @@gen_label112 DS    0H
                                            3351 * ***
                                            3352 * ***
                                            3353 * ***
                                            3354 * ***
                                            3355 * ***                   rbuf->rbuf_wpos = seg;
00002076 E320 3018 0024          00000018   3356          STG   2,24(0,3)   ; offset of rbuf_wpos in rd_buf_s
                                            3357 * ***                   if (segp)
0000207C E310 4008 0004          00000008   3358          LG    1,8(0,4)    ; segp
00002082 B902 0051                          3359          LTGR  5,1
00002086 4780 C0A0               00002090   3360          BZ    @L132
                                            3361 * ***                           *segp = seg;
0000208A E320 1000 0024          00000000   3362          STG   2,0(0,1)    ; segp
00002090                                    3363 @L132    DS    0H
                                            3364 * ***
                                            3365 * ***                   if (((len == 0)))
00002090 B902 001F                          3366          LTGR  1,15
00002094 4780 C0D2               000020C2   3367          BE    @L131
                                            3368 * ***                           continue;
00002098                                    3369 @L133    DS    0H
                                            3370 * ***
                                            3371 * ***
                                            3372 * ***
                                            3373 * ***
                                            3374 * ***
                                            3375 * ***                   if (seg->seg_of == 0 && seg->seg_absof < rbuf-\
                                            3376 * >rbuf_len)
00002098 E559 2018 0000          00000018   3377          CLGHSI 24(2),0
0000209E 4770 C0CE               000020BE   3378          BNE   @L134
000020A2 E310 2028 0004          00000028   3379          LG    1,40(0,2)   ; offset of seg_absof in rd_segment_s
000020A8 E310 3020 0021          00000020   3380          CLG   1,32(0,3)
000020AE 47B0 C0CE               000020BE   3381          BNL   @L134
                                            3382 * ***                           seg->seg_absof = rbuf->rbuf_len;
000020B2 E310 3020 0004          00000020   3383          LG    1,32(0,3)   ; offset of rbuf_len in rd_buf_s
000020B8 E310 2028 0024          00000028   3384          STG   1,40(0,2)   ; offset of seg_absof in rd_segment_s
000020BE                                    3385 @L134    DS    0H
                                            3386 * ***
                                            3387 * ***                   return len;
000020BE 47F0 C0E4               000020D4   3388          B     @ret_lab_838
                                                                                                                           Page   71 
  Active Usings: @REGION_838_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3389 * ***           }
000020C2                                    3390 @L131    DS    0H
000020C2 E320 2000 0004          00000000   3391          LG    2,0(0,2)    ; seg
000020C8                                    3392 @L129    DS    0H
000020C8 B902 00F2                          3393          LTGR  15,2
000020CC 4770 C068               00002058   3394          BNZ   @L128
                                            3395 * ***
                                            3396 * ***           return 0;
000020D0 A7F9 0000               00000000   3397          LGHI  15,0        ; 0
                                            3398 * ***   }
000020D4                                    3399 @ret_lab_838 DS 0H
                                            3400 * * **** Start of Epilogue
                                            3401          DCCEPIL
000020D4                                    3402+         ds 0h                                                          01-DCCEP
                                            3403+* Epilog
000020D4 D707 D088 D088 00000088 00000088   3404+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000020DA E3D0 D080 0004          00000080   3405+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000020E0 E3C0 D090 0004          00000090   3406+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000020E6 E3B0 C018 0004          00000018   3407+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000020EC E3C0 B010 0021          00000010   3408+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000020F2 E3E0 D008 0004          00000008   3409+         lg  14,8(0,13)          load up return address                 01-DCCEP
000020F8 EB1C D020 0004          00000020   3410+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000020FE 078E                               3411+         bcr 8,14                if same dsab, just return              01-DCCEP
00002100 E3F0 D010 0024          00000010   3412+         stg 15,16(0,13)         save return code                       01-DCCEP
00002106 E300 D018 0024          00000018   3413+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000210C E3F0 D090 0004          00000090   3414+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002112 E3F0 F018 0004          00000018   3415+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002118 47F0 F040               00000040   3416+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3417+* End of Epilog
                                            3418 * * **** End of Epilogue
                                            3419          DROP  12
                                            3420 *
                                            3421 *   DSECT for automatic variables in "rd_buf_get_writable0"
                                            3422 *      (FUNCTION #838)
                                            3423 *
00000000                00000000 000000B0   3424 @AUTO#rd_buf_get_writable0 DSECT
00000000                                    3425          DS    XL168
000000A8                                    3426 rd_buf_get_writable0#len#1 DS 8XL1 ; len
                                            3427 *
0000211C                00000000 0000BFA0   3428 @CODE    CSECT
                                            3429 *
                                            3430 *
                                            3431 *
                                            3432 * ....... start of rd_buf_get_writable
                                            3433 rd_buf_get_writable ALIAS X'99846D82A4866D8785A36DA69989A381829385'
0000211C                                    3434 @LNAME795 DS   0H
0000211C 00000013                           3435          DC    X'00000013'
00002120 99846D82A4866D87                   3436          DC    C'rd_buf_get_writable'
00002133 00                                 3437          DC    X'00'
                                            3438 rd_buf_get_writable DCCPRLG CINDEX=795,BASER=12,FRAME=200,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME795
                                            3439          macro
                                                                                                                           Page   72 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3440          dccextrn &m
                                            3441          gblc    &$dccext(1000)
                                            3442          gbla    &$dccexti
                                            3443          lcla    &i
                                            3444 &$dccext(&$dccexti+1) setc    '&m'
                                            3445 &i       seta    1
                                            3446 .loop    aif    (&i gt &$dccexti).around
                                            3447          aif    ('&$dccext(&i)' eq '&m').getout
                                            3448 &i       seta    &i+1
                                            3449          ago     .loop
                                            3450 .around  anop
                                            3451 &$dccexti seta &$dccexti+1
                                            3452          extrn  &m
                                            3453 .getout  anop
                                            3454          mend
00002138                                    3455+$eye0084    ds    0d                                                    02-DCCCA
00002138 C4C3C3                             3456+         dc cl3'DCC'                                                    02-DCCCA
0000213B 01                                 3457+         dc xl1'01' format one                                          02-DCCCA
0000213C 00000000                           3458+         dc a(0)                                                        02-DCCCA
00002140 00000000000021AA                   3459+         dc ad(@PER_795)                                                02-DCCCA
00002148 00000000000000C8                   3460+         dc ad(200)                                                     02-DCCCA
00002150 0000000000000000                   3461+         dc ad(0)                                                       02-DCCCA
00002158 0000000000001000                   3462+         dc ad(4096)                                                    02-DCCCA
00002160 20                                 3463+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002161 03                                 3464+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002162 03                                 3465+         dc al1(3)                                                      02-DCCCA
00002163 08                                 3466+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002164 00                                 3467+         dc bl.8'00000000'                                              02-DCCCA
00002165 000000                             3468+         dc al3(0)                                                      02-DCCCA
00002168 000000000000211C                   3469+         dc ad(@LNAME795)                                               02-DCCCA
00002170                                    3470+         ds 0d                                                          02-DCCCA
00002170 0000000000002138                   3471+         dc ad($eye0084)                                                02-DCCCA
00002178 0000000000000000                   3472+         dc ad(0)                                                       02-DCCCA
00002180                                    3473+         ds    0d                                                       01-DCCPR
                                            3474+         entry rd_buf_get_writable                                      01-DCCPR
00002180                                    3475+rd_buf_get_writable ds 0d                                               01-DCCPR
00002180                                    3476+@REGION_795_1 ds 0h                                                     01-DCCPR
00002180 EBEC D008 0024          00000008   3477+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002186 E3E0 D088 0004          00000088   3478+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000218C E3C0 D090 0004          00000090   3479+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002192 B904 002E                          3480+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002196 E3B0 C018 0004          00000018   3481+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000219C A7EB 00C8               000000C8   3482+         aghi  14,200              increase by frame size               01-DCCPR
000021A0 E3E0 C020 0021          00000020   3483+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000021A6 4720 B020               00000020   3484+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000021AA                                    3485+@PER_795 ds    0h                                                       01-DCCPR
000021AA EBDE 2080 0024          00000080   3486+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000021B0 E3C0 2090 0024          00000090   3487+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000021B6 B904 00D2                          3488+         lgr   13,2                set real frame pointer               01-DCCPR
000021BA B904 00CF                          3489+         lgr   12,15               set base reg                         01-DCCPR
                        00002180            3490+         using @REGION_795_1,12                                         01-DCCPR
                                            3491 * ******* End of Prologue
                                                                                                                           Page   73 
  Active Usings: @REGION_795_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3492 * *
                                            3493 * ***           rd_segment_t *seg;
                                            3494 * ***           return rd_buf_get_writable0(rbuf, &seg, p);
000021BE E3F0 1000 0004          00000000   3495          LG    15,0(0,1)   ; rbuf
000021C4 E3F0 D0B0 0024          000000B0   3496          STG   15,176(0,13)
000021CA 41F0 D0A8               000000A8   3497          LA    15,168(0,13)
000021CE E3F0 D0B8 0024          000000B8   3498          STG   15,184(0,13)
000021D4 E3F0 1008 0004          00000008   3499          LG    15,8(0,1)   ; p
000021DA E3F0 D0C0 0024          000000C0   3500          STG   15,192(0,13)
000021E0 4110 D0B0               000000B0   3501          LA    1,176(0,13)
000021E4 E3F0 C0C0 0004          00002240   3502          LG    15,@lit_795_79 ; rd_buf_get_writable0
000021EA                                    3503 @@gen_label118 DS    0H
000021EA 05EF                               3504          BALR  14,15
000021EC                                    3505 @@gen_label119 DS    0H
                                            3506 * ***   }
                                            3507 * * **** Start of Epilogue
                                            3508          DCCEPIL
000021EC                                    3509+         ds 0h                                                          01-DCCEP
                                            3510+* Epilog
000021EC D707 D088 D088 00000088 00000088   3511+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000021F2 E3D0 D080 0004          00000080   3512+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000021F8 E3C0 D090 0004          00000090   3513+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000021FE E3B0 C018 0004          00000018   3514+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002204 E3C0 B010 0021          00000010   3515+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000220A E3E0 D008 0004          00000008   3516+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002210 EB1C D020 0004          00000020   3517+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002216 078E                               3518+         bcr 8,14                if same dsab, just return              01-DCCEP
00002218 E3F0 D010 0024          00000010   3519+         stg 15,16(0,13)         save return code                       01-DCCEP
0000221E E300 D018 0024          00000018   3520+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002224 E3F0 D090 0004          00000090   3521+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000222A E3F0 F018 0004          00000018   3522+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002230 47F0 F040               00000040   3523+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3524+* End of Epilog
                                            3525 * * **** End of Epilogue
00002238                                    3526          DS    0D
00002238 000000C8                           3527 @FRAMESIZE_795 DC F'200'
0000223C 00000000
00002240 0000000000001FF0                   3528 @lit_795_79 DC AD(rd_buf_get_writable0)
                                            3529          DROP  12
                                            3530 *
                                            3531 *   DSECT for automatic variables in "rd_buf_get_writable"
                                            3532 *      (FUNCTION #795)
                                            3533 *
00000000                00000000 000000A8   3534 @AUTO#rd_buf_get_writable DSECT
00000000                                    3535          DS    XL168
                                            3536 *
00002248                00000000 0000BFA0   3537 @CODE    CSECT
                                            3538 *
                                            3539 *
                                            3540 *
                                            3541 * ....... start of rd_buf_write
                                            3542 rd_buf_write ALIAS X'99846D82A4866DA69989A385'
                                                                                                                           Page   74 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002248                                    3543 @LNAME790 DS   0H
00002248 0000000C                           3544          DC    X'0000000C'
0000224C 99846D82A4866DA6                   3545          DC    C'rd_buf_write'
00002258 00                                 3546          DC    X'00'
                                            3547 rd_buf_write DCCPRLG CINDEX=790,BASER=12,FRAME=216,ENTRY=YES,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME790
                                            3548          macro
                                            3549          dccextrn &m
                                            3550          gblc    &$dccext(1000)
                                            3551          gbla    &$dccexti
                                            3552          lcla    &i
                                            3553 &$dccext(&$dccexti+1) setc    '&m'
                                            3554 &i       seta    1
                                            3555 .loop    aif    (&i gt &$dccexti).around
                                            3556          aif    ('&$dccext(&i)' eq '&m').getout
                                            3557 &i       seta    &i+1
                                            3558          ago     .loop
                                            3559 .around  anop
                                            3560 &$dccexti seta &$dccexti+1
                                            3561          extrn  &m
                                            3562 .getout  anop
                                            3563          mend
00002260                                    3564+$eye0087    ds    0d                                                    02-DCCCA
00002260 C4C3C3                             3565+         dc cl3'DCC'                                                    02-DCCCA
00002263 01                                 3566+         dc xl1'01' format one                                          02-DCCCA
00002264 00000000                           3567+         dc a(0)                                                        02-DCCCA
00002268 00000000000022D2                   3568+         dc ad(@PER_790)                                                02-DCCCA
00002270 00000000000000D8                   3569+         dc ad(216)                                                     02-DCCCA
00002278 0000000000000000                   3570+         dc ad(0)                                                       02-DCCCA
00002280 0000000000001000                   3571+         dc ad(4096)                                                    02-DCCCA
00002288 20                                 3572+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002289 03                                 3573+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000228A 03                                 3574+         dc al1(3)                                                      02-DCCCA
0000228B 08                                 3575+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000228C 00                                 3576+         dc bl.8'00000000'                                              02-DCCCA
0000228D 000000                             3577+         dc al3(0)                                                      02-DCCCA
00002290 0000000000002248                   3578+         dc ad(@LNAME790)                                               02-DCCCA
00002298                                    3579+         ds 0d                                                          02-DCCCA
00002298 0000000000002260                   3580+         dc ad($eye0087)                                                02-DCCCA
000022A0 0000000000000000                   3581+         dc ad(0)                                                       02-DCCCA
000022A8                                    3582+         ds    0d                                                       01-DCCPR
                                            3583+         entry rd_buf_write                                             01-DCCPR
000022A8                                    3584+rd_buf_write ds 0d                                                      01-DCCPR
000022A8                                    3585+@REGION_790_1 ds 0h                                                     01-DCCPR
000022A8 EBEC D008 0024          00000008   3586+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000022AE E3E0 D088 0004          00000088   3587+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000022B4 E3C0 D090 0004          00000090   3588+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000022BA B904 002E                          3589+         lgr   2,14                copy addr of our savearea            01-DCCPR
000022BE E3B0 C018 0004          00000018   3590+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000022C4 A7EB 00D8               000000D8   3591+         aghi  14,216              increase by frame size               01-DCCPR
000022C8 E3E0 C020 0021          00000020   3592+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000022CE 4720 B020               00000020   3593+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
                                                                                                                           Page   75 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000022D2                                    3594+@PER_790 ds    0h                                                       01-DCCPR
000022D2 EBDE 2080 0024          00000080   3595+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000022D8 E3C0 2090 0024          00000090   3596+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000022DE B904 00D2                          3597+         lgr   13,2                set real frame pointer               01-DCCPR
000022E2 B904 00CF                          3598+         lgr   12,15               set base reg                         01-DCCPR
                        000022A8            3599+         using @REGION_790_1,12                                         01-DCCPR
000022E6 B904 0061                          3600          LGR   6,1         ; ptr to parm area
                                            3601 * ******* End of Prologue
                                            3602 * *
                                            3603 * ***           size_t remains = size;
000022EA E340 6000 0004          00000000   3604          LG    4,0(0,6)    ; rbuf
000022F0 E320 6010 0004          00000010   3605          LG    2,16(0,6)   ; size
                                            3606 * ***           size_t initial_absof;
                                            3607 * ***           const char *psrc = (const char *)payload;
000022F6 E330 6008 0004          00000008   3608          LG    3,8(0,6)    ; payload
                                            3609 * ***
                                            3610 * ***           initial_absof = rbuf->rbuf_len;
000022FC E350 4020 0004          00000020   3611          LG    5,32(0,4)   ; offset of rbuf_len in rd_buf_s
                                            3612 * ***
                                            3613 * ***
                                            3614 * ***           rd_buf_write_ensure(rbuf, size, 0);
00002302 E340 D0B8 0024          000000B8   3615          STG   4,184(0,13)
00002308 E320 D0C0 0024          000000C0   3616          STG   2,192(0,13)
0000230E D707 D0C8 D0C8 000000C8 000000C8   3617          XC    200(8,13),200(13)
00002314 4110 D0B8               000000B8   3618          LA    1,184(0,13)
00002318 E3F0 C088 0004          00002330   3619          LG    15,@lit_790_81 ; rd_buf_write_ensure
0000231E                                    3620 @@gen_label120 DS    0H
0000231E 05EF                               3621          BALR  14,15
00002320                                    3622 @@gen_label121 DS    0H
                                            3623 * ***
                                            3624 * ***           while (remains > 0) {
00002320 47F0 C172               0000241A   3625          B     @L138
00002328                                    3626          DS    0D
00002328 000000D8                           3627 @FRAMESIZE_790 DC F'216'
0000232C 00000000
00002330 0000000000001600                   3628 @lit_790_81 DC AD(rd_buf_write_ensure)
00002338 0000000000001FF0                   3629 @lit_790_84 DC AD(rd_buf_get_writable0)
00002340 D200 8000 7000 00000000 00000000   3630 @lit_790_85          MVC 0(1,8),0(7)
00002346 0000
00002348 0000000000000000                   3631 @lit_790_88 DC AD(__assert)
00002350 000000000000CB02                   3632 @lit_790_87 DC AD(@strings@)
00002358 000000000000BFA0                   3633 @lit_790_86 DC AD(@DATA)
00002360                                    3634 @L137    DS    0H
                                            3635 * ***                   void *p = ((void *)0);
00002360 A7F9 0000               00000000   3636          LGHI  15,0        ; 0
00002364 E3F0 D0A8 0024          000000A8   3637          STG   15,168(0,13) ; p
                                            3638 * ***                   rd_segment_t *seg = ((void *)0);
0000236A E3F0 D0B0 0024          000000B0   3639          STG   15,176(0,13) ; seg
                                            3640 * ***                   size_t segremains = rd_buf_get_writable0(rbuf,\
                                            3641 *  &seg, &p);
00002370 E340 D0B8 0024          000000B8   3642          STG   4,184(0,13)
00002376 41F0 D0B0               000000B0   3643          LA    15,176(0,13)
                                                                                                                           Page   76 
  Active Usings: @REGION_790_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000237A E3F0 D0C0 0024          000000C0   3644          STG   15,192(0,13)
00002380 41F0 D0A8               000000A8   3645          LA    15,168(0,13)
00002384 E3F0 D0C8 0024          000000C8   3646          STG   15,200(0,13)
0000238A 4110 D0B8               000000B8   3647          LA    1,184(0,13)
0000238E E3F0 C090 0004          00002338   3648          LG    15,@lit_790_84 ; rd_buf_get_writable0
00002394                                    3649 @@gen_label122 DS    0H
00002394 05EF                               3650          BALR  14,15
00002396                                    3651 @@gen_label123 DS    0H
                                            3652 * ***                   size_t wlen = ((remains) < (segremains) ? (rem\
                                            3653 * ains) : (segremains));
00002396 B921 002F                          3654          CLGR  2,15
0000239A 47B0 C0FE               000023A6   3655          BNL   @L139
0000239E B904 00F2                          3656          LGR   15,2
000023A2 47F0 C0FE               000023A6   3657          B     @L140
000023A6                                    3658 @L139    DS    0H
000023A6                                    3659 @L140    DS    0H
                                            3660 * ***
                                            3661 * ***                   do {} while (0);
000023A6                                    3662 @L141    DS    0H
                                            3663 * ***                   do {} while (0);
000023A6                                    3664 @L144    DS    0H
                                            3665 * ***                   do {} while (0);
000023A6                                    3666 @L147    DS    0H
                                            3667 * ***
                                            3668 * ***
                                            3669 * ***                   if (payload) {
000023A6 E310 6008 0002          00000008   3670          LTG   1,8(0,6)    ; payload
000023AC 4780 C148               000023F0   3671          BZ    @L150
                                            3672 * ***                           __memcpy(p,psrc,wlen);
000023B0 B904 0073                          3673          LGR   7,3
000023B4 E380 D0A8 0004          000000A8   3674          LG    8,168(0,13)
000023BA B902 001F                          3675          LTGR  1,15
000023BE 4780 C144               000023EC   3676          BZ    @@gen_label128
000023C2 A71B FFFF               0000FFFF   3677          AGHI  1,-1
000023C6 EB91 0008 000A          00000008   3678          SRAG  9,1,8(0)
000023CC B902 0099                          3679          LTGR  9,9
000023D0 4780 C140               000023E8   3680          BZ    @@gen_label127
000023D4                                    3681 @@gen_label126 DS 0H
000023D4 D2FF 8000 7000 00000000 00000000   3682          MVC   0(256,8),0(7)
000023DA 4180 8100               00000100   3683          LA    8,256(0,8)
000023DE 4170 7100               00000100   3684          LA    7,256(0,7)
000023E2 E390 C12C 0046          000023D4   3685          BCTG  9,@@gen_label126
000023E8                                    3686 @@gen_label127 DS 0H
000023E8 4410 C098               00002340   3687          EX    1,@lit_790_85
000023EC                                    3688 @@gen_label128 DS 0H
                                            3689 * ***                           psrc += wlen;
000023EC 413F 3000               00000000   3690          LA    3,0(15,3)
                                            3691 * ***                   }
000023F0                                    3692 @L150    DS    0H
                                            3693 * ***
                                            3694 * ***                   seg->seg_of    += wlen;
000023F0 E310 D0B0 0004          000000B0   3695          LG    1,176(0,13) ; seg
                                                                                                                           Page   77 
  Active Usings: @REGION_790_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000023F6 B904 007F                          3696          LGR   7,15
000023FA E370 1018 000A          00000018   3697          ALG   7,24(0,1)
00002400 E370 1018 0024          00000018   3698          STG   7,24(0,1)
                                            3699 * ***                   rbuf->rbuf_len += wlen;
00002406 B904 001F                          3700          LGR   1,15
0000240A E310 4020 000A          00000020   3701          ALG   1,32(0,4)
00002410 E310 4020 0024          00000020   3702          STG   1,32(0,4)
                                            3703 * ***                   remains        -= wlen;
00002416 B90B 002F                          3704          SLGR  2,15
                                            3705 * ***           }
0000241A                                    3706 @L138    DS    0H
0000241A C22E 0000 0000                     3707          CLGFI 2,X'00000000'
00002420 4720 C0B8               00002360   3708          BH    @L137
                                            3709 * ***
                                            3710 * ***           ((remains == 0) ? (void)0 : __assert(__func__, "C:\\as\
                                            3711 * gkafka\\librdkafka\\src\\rdbuf.c", 469, "remains == 0"));
00002424 B902 00F2                          3712          LTGR  15,2
00002428 4780 C1C0               00002468   3713          BE    @L152
0000242C                                    3714 @L151    DS    0H
0000242C E3F0 C0B0 0004          00002358   3715          LG    15,@lit_790_86
00002432 41F0 F092               00000092   3716          LA    15,146(0,15)
00002436 E3F0 D0B8 0024          000000B8   3717          STG   15,184(0,13)
0000243C E3F0 C0A8 0004          00002350   3718          LG    15,@lit_790_87
00002442 4110 F040               00000040   3719          LA    1,64(0,15)
00002446 E310 D0C0 0024          000000C0   3720          STG   1,192(0,13)
0000244C E548 D0C8 01D5          000000C8   3721          MVGHI 200(13),469
00002452 41F0 F148               00000148   3722          LA    15,328(0,15)
00002456 E3F0 D0D0 0024          000000D0   3723          STG   15,208(0,13)
0000245C 4110 D0B8               000000B8   3724          LA    1,184(0,13)
00002460 E3F0 C0A0 0004          00002348   3725          LG    15,@lit_790_88 ; __assert
00002466                                    3726 @@gen_label131 DS    0H
00002466 05EF                               3727          BALR  14,15
00002468                                    3728 @@gen_label132 DS    0H
00002468                                    3729 @L152    DS    0H
                                            3730 * ***
                                            3731 * ***           return initial_absof;
00002468 B904 00F5                          3732          LGR   15,5
                                            3733 * ***   }
                                            3734 * * **** Start of Epilogue
                                            3735          DCCEPIL
0000246C                                    3736+         ds 0h                                                          01-DCCEP
                                            3737+* Epilog
0000246C D707 D088 D088 00000088 00000088   3738+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002472 E3D0 D080 0004          00000080   3739+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002478 E3C0 D090 0004          00000090   3740+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000247E E3B0 C018 0004          00000018   3741+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002484 E3C0 B010 0021          00000010   3742+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000248A E3E0 D008 0004          00000008   3743+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002490 EB1C D020 0004          00000020   3744+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002496 078E                               3745+         bcr 8,14                if same dsab, just return              01-DCCEP
00002498 E3F0 D010 0024          00000010   3746+         stg 15,16(0,13)         save return code                       01-DCCEP
0000249E E300 D018 0024          00000018   3747+         stg 0,24(0,13)          save more return code                  01-DCCEP
                                                                                                                           Page   78 
  Active Usings: @REGION_790_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000024A4 E3F0 D090 0004          00000090   3748+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000024AA E3F0 F018 0004          00000018   3749+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000024B0 47F0 F040               00000040   3750+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3751+* End of Epilog
                                            3752 * * **** End of Epilogue
                                            3753          DROP  12
                                            3754 *
                                            3755 *   DSECT for automatic variables in "rd_buf_write"
                                            3756 *      (FUNCTION #790)
                                            3757 *
00000000                00000000 000000B0   3758 @AUTO#rd_buf_write DSECT
00000000                                    3759          DS    XL168
000000A8                                    3760 rd_buf_write#wlen#1 DS 8XL1 ; wlen
000000B0                000000B0 000000A8   3761          ORG   @AUTO#rd_buf_write+168
000000A8                                    3762 rd_buf_write#segremains#1 DS 8XL1 ; segremains
000000B0                000000B0 000000A8   3763          ORG   @AUTO#rd_buf_write+168
000000A8                                    3764 rd_buf_write#initial_absof#0 DS 8XL1 ; initial_absof
000000B0                000000B0 000000A8   3765          ORG   @AUTO#rd_buf_write+168
000000A8                                    3766 rd_buf_write#remains#0 DS 8XL1 ; remains
                                            3767 *
000024B4                00000000 0000BFA0   3768 @CODE    CSECT
                                            3769 *
                                            3770 *
                                            3771 *
                                            3772 * ....... start of rd_buf_write_slice
                                            3773 rd_buf_write_slice ALIAS X'99846D82A4866DA69989A3856DA293898385'
000024B4                                    3774 @LNAME791 DS   0H
000024B4 00000012                           3775          DC    X'00000012'
000024B8 99846D82A4866DA6                   3776          DC    C'rd_buf_write_slice'
000024CA 00                                 3777          DC    X'00'
                                            3778 rd_buf_write_slice DCCPRLG CINDEX=791,BASER=12,FRAME=200,ENTRY=YES,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME791
                                            3779          macro
                                            3780          dccextrn &m
                                            3781          gblc    &$dccext(1000)
                                            3782          gbla    &$dccexti
                                            3783          lcla    &i
                                            3784 &$dccext(&$dccexti+1) setc    '&m'
                                            3785 &i       seta    1
                                            3786 .loop    aif    (&i gt &$dccexti).around
                                            3787          aif    ('&$dccext(&i)' eq '&m').getout
                                            3788 &i       seta    &i+1
                                            3789          ago     .loop
                                            3790 .around  anop
                                            3791 &$dccexti seta &$dccexti+1
                                            3792          extrn  &m
                                            3793 .getout  anop
                                            3794          mend
000024D0                                    3795+$eye0090    ds    0d                                                    02-DCCCA
000024D0 C4C3C3                             3796+         dc cl3'DCC'                                                    02-DCCCA
000024D3 01                                 3797+         dc xl1'01' format one                                          02-DCCCA
000024D4 00000000                           3798+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   79 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000024D8 0000000000002542                   3799+         dc ad(@PER_791)                                                02-DCCCA
000024E0 00000000000000C8                   3800+         dc ad(200)                                                     02-DCCCA
000024E8 0000000000000000                   3801+         dc ad(0)                                                       02-DCCCA
000024F0 0000000000001000                   3802+         dc ad(4096)                                                    02-DCCCA
000024F8 20                                 3803+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000024F9 03                                 3804+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000024FA 03                                 3805+         dc al1(3)                                                      02-DCCCA
000024FB 08                                 3806+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000024FC 00                                 3807+         dc bl.8'00000000'                                              02-DCCCA
000024FD 000000                             3808+         dc al3(0)                                                      02-DCCCA
00002500 00000000000024B4                   3809+         dc ad(@LNAME791)                                               02-DCCCA
00002508                                    3810+         ds 0d                                                          02-DCCCA
00002508 00000000000024D0                   3811+         dc ad($eye0090)                                                02-DCCCA
00002510 0000000000000000                   3812+         dc ad(0)                                                       02-DCCCA
00002518                                    3813+         ds    0d                                                       01-DCCPR
                                            3814+         entry rd_buf_write_slice                                       01-DCCPR
00002518                                    3815+rd_buf_write_slice ds 0d                                                01-DCCPR
00002518                                    3816+@REGION_791_1 ds 0h                                                     01-DCCPR
00002518 EBEC D008 0024          00000008   3817+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000251E E3E0 D088 0004          00000088   3818+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002524 E3C0 D090 0004          00000090   3819+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000252A B904 002E                          3820+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000252E E3B0 C018 0004          00000018   3821+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002534 A7EB 00C8               000000C8   3822+         aghi  14,200              increase by frame size               01-DCCPR
00002538 E3E0 C020 0021          00000020   3823+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000253E 4720 B020               00000020   3824+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002542                                    3825+@PER_791 ds    0h                                                       01-DCCPR
00002542 EBDE 2080 0024          00000080   3826+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002548 E3C0 2090 0024          00000090   3827+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000254E B904 00D2                          3828+         lgr   13,2                set real frame pointer               01-DCCPR
00002552 B904 00CF                          3829+         lgr   12,15               set base reg                         01-DCCPR
                        00002518            3830+         using @REGION_791_1,12                                         01-DCCPR
00002556 B904 0031                          3831          LGR   3,1         ; ptr to parm area
                                            3832 * ******* End of Prologue
                                            3833 * *
                                            3834 * ***           const void *p;
                                            3835 * ***           size_t rlen;
                                            3836 * ***           size_t sum = 0;
0000255A A729 0000               00000000   3837          LGHI  2,0         ; 0
                                            3838 * ***
                                            3839 * ***           while ((rlen = rd_slice_reader(slice, &p))) {
0000255E 47F0 C096               000025AE   3840          B     @L156
00002568                                    3841          DS    0D
00002568 000000C8                           3842 @FRAMESIZE_791 DC F'200'
0000256C 00000000
00002570 00000000000022A8                   3843 @lit_791_91 DC AD(rd_buf_write)
00002578 0000000000003C90                   3844 @lit_791_92 DC AD(rd_slice_reader)
00002580                                    3845 @L155    DS    0H
                                            3846 * ***                   size_t r;
                                            3847 * ***                   r = rd_buf_write(rbuf, p, rlen);
00002580 E310 3000 0004          00000000   3848          LG    1,0(0,3)    ; rbuf
00002586 E310 D0B0 0024          000000B0   3849          STG   1,176(0,13)
                                                                                                                           Page   80 
  Active Usings: @REGION_791_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000258C E310 D0A8 0004          000000A8   3850          LG    1,168(0,13) ; p
00002592 E310 D0B8 0024          000000B8   3851          STG   1,184(0,13)
00002598 E3F0 D0C0 0024          000000C0   3852          STG   15,192(0,13)
0000259E 4110 D0B0               000000B0   3853          LA    1,176(0,13)
000025A2 E3F0 C058 0004          00002570   3854          LG    15,@lit_791_91 ; rd_buf_write
000025A8                                    3855 @@gen_label133 DS    0H
000025A8 05EF                               3856          BALR  14,15
000025AA                                    3857 @@gen_label134 DS    0H
                                            3858 * ***                   do {} while (0);
000025AA                                    3859 @L157    DS    0H
                                            3860 * ***                   sum += r;
000025AA B90A 002F                          3861          ALGR  2,15
                                            3862 * ***           }
000025AE                                    3863 @L156    DS    0H
000025AE E3F0 3008 0004          00000008   3864          LG    15,8(0,3)   ; slice
000025B4 E3F0 D0B0 0024          000000B0   3865          STG   15,176(0,13)
000025BA 41F0 D0A8               000000A8   3866          LA    15,168(0,13)
000025BE E3F0 D0B8 0024          000000B8   3867          STG   15,184(0,13)
000025C4 4110 D0B0               000000B0   3868          LA    1,176(0,13)
000025C8 E3F0 C060 0004          00002578   3869          LG    15,@lit_791_92 ; rd_slice_reader
000025CE                                    3870 @@gen_label135 DS    0H
000025CE 05EF                               3871          BALR  14,15
000025D0                                    3872 @@gen_label136 DS    0H
000025D0 B902 00FF                          3873          LTGR  15,15
000025D4 4770 C068               00002580   3874          BNZ   @L155
                                            3875 * ***
                                            3876 * ***           return sum;
000025D8 B904 00F2                          3877          LGR   15,2
                                            3878 * ***   }
                                            3879 * * **** Start of Epilogue
                                            3880          DCCEPIL
000025DC                                    3881+         ds 0h                                                          01-DCCEP
                                            3882+* Epilog
000025DC D707 D088 D088 00000088 00000088   3883+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000025E2 E3D0 D080 0004          00000080   3884+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000025E8 E3C0 D090 0004          00000090   3885+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000025EE E3B0 C018 0004          00000018   3886+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000025F4 E3C0 B010 0021          00000010   3887+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000025FA E3E0 D008 0004          00000008   3888+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002600 EB1C D020 0004          00000020   3889+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002606 078E                               3890+         bcr 8,14                if same dsab, just return              01-DCCEP
00002608 E3F0 D010 0024          00000010   3891+         stg 15,16(0,13)         save return code                       01-DCCEP
0000260E E300 D018 0024          00000018   3892+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002614 E3F0 D090 0004          00000090   3893+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000261A E3F0 F018 0004          00000018   3894+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002620 47F0 F040               00000040   3895+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3896+* End of Epilog
                                            3897 * * **** End of Epilogue
                                            3898          DROP  12
                                            3899 *
                                            3900 *   DSECT for automatic variables in "rd_buf_write_slice"
                                            3901 *      (FUNCTION #791)
                                                                                                                           Page   81 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3902 *
00000000                00000000 000000B0   3903 @AUTO#rd_buf_write_slice DSECT
00000000                                    3904          DS    XL168
000000A8                                    3905 rd_buf_write_slice#r#1 DS 8XL1 ; r
000000B0                000000B0 000000A8   3906          ORG   @AUTO#rd_buf_write_slice+168
000000A8                                    3907 rd_buf_write_slice#sum#0 DS 8XL1 ; sum
000000B0                000000B0 000000A8   3908          ORG   @AUTO#rd_buf_write_slice+168
000000A8                                    3909 rd_buf_write_slice#rlen#0 DS 8XL1 ; rlen
                                            3910 *
00002624                00000000 0000BFA0   3911 @CODE    CSECT
                                            3912 *
                                            3913 *
                                            3914 *
                                            3915 * ....... start of rd_segment_write_update
00002624                                    3916 @LNAME848 DS   0H
00002624 00000017                           3917          DC    X'00000017'
00002628 99846DA285879485                   3918          DC    C'rd_segment_write_update'
0000263F 00                                 3919          DC    X'00'
                                            3920 rd_segment_write_update DCCPRLG CINDEX=848,BASER=12,FRAME=208,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME848
                                            3921          macro
                                            3922          dccextrn &m
                                            3923          gblc    &$dccext(1000)
                                            3924          gbla    &$dccexti
                                            3925          lcla    &i
                                            3926 &$dccext(&$dccexti+1) setc    '&m'
                                            3927 &i       seta    1
                                            3928 .loop    aif    (&i gt &$dccexti).around
                                            3929          aif    ('&$dccext(&i)' eq '&m').getout
                                            3930 &i       seta    &i+1
                                            3931          ago     .loop
                                            3932 .around  anop
                                            3933 &$dccexti seta &$dccexti+1
                                            3934          extrn  &m
                                            3935 .getout  anop
                                            3936          mend
00002640                                    3937+$eye0093    ds    0d                                                    02-DCCCA
00002640 C4C3C3                             3938+         dc cl3'DCC'                                                    02-DCCCA
00002643 01                                 3939+         dc xl1'01' format one                                          02-DCCCA
00002644 00000000                           3940+         dc a(0)                                                        02-DCCCA
00002648 00000000000026B2                   3941+         dc ad(@PER_848)                                                02-DCCCA
00002650 00000000000000D0                   3942+         dc ad(208)                                                     02-DCCCA
00002658 0000000000000000                   3943+         dc ad(0)                                                       02-DCCCA
00002660 0000000000001000                   3944+         dc ad(4096)                                                    02-DCCCA
00002668 20                                 3945+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002669 03                                 3946+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000266A 03                                 3947+         dc al1(3)                                                      02-DCCCA
0000266B 08                                 3948+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000266C 00                                 3949+         dc bl.8'00000000'                                              02-DCCCA
0000266D 000000                             3950+         dc al3(0)                                                      02-DCCCA
00002670 0000000000002624                   3951+         dc ad(@LNAME848)                                               02-DCCCA
00002678                                    3952+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   82 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002678 0000000000002640                   3953+         dc ad($eye0093)                                                02-DCCCA
00002680 0000000000000000                   3954+         dc ad(0)                                                       02-DCCCA
00002688                                    3955+         ds    0d                                                       01-DCCPR
00002688                                    3956+rd_segment_write_update ds 0d                                           01-DCCPR
00002688                                    3957+@REGION_848_1 ds 0h                                                     01-DCCPR
00002688 EBEC D008 0024          00000008   3958+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000268E E3E0 D088 0004          00000088   3959+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002694 E3C0 D090 0004          00000090   3960+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000269A B904 002E                          3961+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000269E E3B0 C018 0004          00000018   3962+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000026A4 A7EB 00D0               000000D0   3963+         aghi  14,208              increase by frame size               01-DCCPR
000026A8 E3E0 C020 0021          00000020   3964+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000026AE 4720 B020               00000020   3965+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000026B2                                    3966+@PER_848 ds    0h                                                       01-DCCPR
000026B2 EBDE 2080 0024          00000080   3967+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000026B8 E3C0 2090 0024          00000090   3968+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000026BE B904 00D2                          3969+         lgr   13,2                set real frame pointer               01-DCCPR
000026C2 B904 00CF                          3970+         lgr   12,15               set base reg                         01-DCCPR
                        00002688            3971+         using @REGION_848_1,12                                         01-DCCPR
000026C6 B904 0041                          3972          LGR   4,1         ; ptr to parm area
                                            3973 * ******* End of Prologue
                                            3974 * *
000026CA E320 4000 0004          00000000   3975          LG    2,0(0,4)    ; seg
                                            3976 * ***           size_t relof;
                                            3977 * ***           size_t wlen;
                                            3978 * ***
                                            3979 * ***           do {} while (0);
000026D0                                    3980 @L160    DS    0H
                                            3981 * ***           relof = absof - seg->seg_absof;
000026D0 E330 4008 0004          00000008   3982          LG    3,8(0,4)    ; absof
000026D6 E330 2028 000B          00000028   3983          SLG   3,40(0,2)
                                            3984 * ***           ((relof <= seg->seg_of) ? (void)0 : __assert(__func__,\
                                            3985 *  "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 517, "relof <= seg->seg_o\
                                            3986 * f"));
000026DC E330 2018 0021          00000018   3987          CLG   3,24(0,2)
000026E2 47D0 C09A               00002722   3988          BNH   @L164
000026E6                                    3989 @L163    DS    0H
000026E6 E3F0 C0D0 0004          00002758   3990          LG    15,@lit_848_94
000026EC 41F0 F0A0               000000A0   3991          LA    15,160(0,15)
000026F0 E3F0 D0B0 0024          000000B0   3992          STG   15,176(0,13)
000026F6 E3F0 C0C8 0004          00002750   3993          LG    15,@lit_848_95
000026FC 4110 F040               00000040   3994          LA    1,64(0,15)
00002700 E310 D0B8 0024          000000B8   3995          STG   1,184(0,13)
00002706 E548 D0C0 0205          000000C0   3996          MVGHI 192(13),517
0000270C 41F0 F156               00000156   3997          LA    15,342(0,15)
00002710 E3F0 D0C8 0024          000000C8   3998          STG   15,200(0,13)
00002716 4110 D0B0               000000B0   3999          LA    1,176(0,13)
0000271A E3F0 C0C0 0004          00002748   4000          LG    15,@lit_848_96 ; __assert
00002720                                    4001 @@gen_label139 DS    0H
00002720 05EF                               4002          BALR  14,15
00002722                                    4003 @@gen_label140 DS    0H
00002722                                    4004 @L164    DS    0H
                                                                                                                           Page   83 
  Active Usings: @REGION_848_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4005 * ***           wlen = ((size) < (seg->seg_of - relof) ? (size) : (seg\
                                            4006 * ->seg_of - relof));
00002722 E3F0 4018 0004          00000018   4007          LG    15,24(0,4)  ; size
00002728 E310 2018 0004          00000018   4008          LG    1,24(0,2)   ; offset of seg_of in rd_segment_s
0000272E B90B 0013                          4009          SLGR  1,3
00002732 B921 00F1                          4010          CLGR  15,1
00002736 47B0 C0DE               00002766   4011          BNL   @L165
0000273A 47F0 C0E8               00002770   4012          B     @L166
00002740                                    4013          DS    0D
00002740 000000D0                           4014 @FRAMESIZE_848 DC F'208'
00002744 00000000
00002748 0000000000000000                   4015 @lit_848_96 DC AD(__assert)
00002750 000000000000CB02                   4016 @lit_848_95 DC AD(@strings@)
00002758 000000000000BFA0                   4017 @lit_848_94 DC AD(@DATA)
00002760 D200 3000 2000 00000000 00000000   4018 @lit_848_97          MVC 0(1,3),0(2)
00002766                                    4019 @L165    DS    0H
00002766 E3F0 2018 0004          00000018   4020          LG    15,24(0,2)  ; offset of seg_of in rd_segment_s
0000276C B90B 00F3                          4021          SLGR  15,3
00002770                                    4022 @L166    DS    0H
                                            4023 * ***           do {} while (0);
00002770                                    4024 @L167    DS    0H
                                            4025 * ***
                                            4026 * ***           __memcpy(seg->seg_p+relof,payload,wlen);
00002770 E310 2010 0004          00000010   4027          LG    1,16(0,2)   ; offset of seg_p in rd_segment_s
00002776 E320 4010 0004          00000010   4028          LG    2,16(0,4)
0000277C 4133 1000               00000000   4029          LA    3,0(3,1)
00002780 B902 001F                          4030          LTGR  1,15
00002784 4780 C12A               000027B2   4031          BZ    @@gen_label144
00002788 A71B FFFF               0000FFFF   4032          AGHI  1,-1
0000278C EB41 0008 000A          00000008   4033          SRAG  4,1,8(0)
00002792 B902 0044                          4034          LTGR  4,4
00002796 4780 C126               000027AE   4035          BZ    @@gen_label143
0000279A                                    4036 @@gen_label142 DS 0H
0000279A D2FF 3000 2000 00000000 00000000   4037          MVC   0(256,3),0(2)
000027A0 4130 3100               00000100   4038          LA    3,256(0,3)
000027A4 4120 2100               00000100   4039          LA    2,256(0,2)
000027A8 E340 C112 0046          0000279A   4040          BCTG  4,@@gen_label142
000027AE                                    4041 @@gen_label143 DS 0H
000027AE 4410 C0D8               00002760   4042          EX    1,@lit_848_97
000027B2                                    4043 @@gen_label144 DS 0H
                                            4044 * ***
                                            4045 * ***           return wlen;
                                            4046 * ***   }
                                            4047 * * **** Start of Epilogue
                                            4048          DCCEPIL
000027B2                                    4049+         ds 0h                                                          01-DCCEP
                                            4050+* Epilog
000027B2 D707 D088 D088 00000088 00000088   4051+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000027B8 E3D0 D080 0004          00000080   4052+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000027BE E3C0 D090 0004          00000090   4053+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000027C4 E3B0 C018 0004          00000018   4054+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000027CA E3C0 B010 0021          00000010   4055+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page   84 
  Active Usings: @REGION_848_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000027D0 E3E0 D008 0004          00000008   4056+         lg  14,8(0,13)          load up return address                 01-DCCEP
000027D6 EB1C D020 0004          00000020   4057+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000027DC 078E                               4058+         bcr 8,14                if same dsab, just return              01-DCCEP
000027DE E3F0 D010 0024          00000010   4059+         stg 15,16(0,13)         save return code                       01-DCCEP
000027E4 E300 D018 0024          00000018   4060+         stg 0,24(0,13)          save more return code                  01-DCCEP
000027EA E3F0 D090 0004          00000090   4061+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000027F0 E3F0 F018 0004          00000018   4062+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000027F6 47F0 F040               00000040   4063+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4064+* End of Epilog
                                            4065 * * **** End of Epilogue
                                            4066          DROP  12
                                            4067 *
                                            4068 *   DSECT for automatic variables in "rd_segment_write_update"
                                            4069 *      (FUNCTION #848)
                                            4070 *
00000000                00000000 000000B0   4071 @AUTO#rd_segment_write_update DSECT
00000000                                    4072          DS    XL168
000000A8                                    4073 rd_segment_write_update#wlen#0 DS 8XL1 ; wlen
000000B0                000000B0 000000A8   4074          ORG   @AUTO#rd_segment_write_update+168
000000A8                                    4075 rd_segment_write_update#relof#0 DS 8XL1 ; relof
                                            4076 *
000027FA                00000000 0000BFA0   4077 @CODE    CSECT
                                            4078 *
                                            4079 *
                                            4080 *
                                            4081 * ....... start of rd_buf_write_update
                                            4082 rd_buf_write_update ALIAS X'99846D82A4866DA69989A3856DA4978481A385'
000027FA                                    4083 @LNAME792 DS   0H
000027FA 00000013                           4084          DC    X'00000013'
000027FE 99846D82A4866DA6                   4085          DC    C'rd_buf_write_update'
00002811 00                                 4086          DC    X'00'
                                            4087 rd_buf_write_update DCCPRLG CINDEX=792,BASER=12,FRAME=208,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME792
                                            4088          macro
                                            4089          dccextrn &m
                                            4090          gblc    &$dccext(1000)
                                            4091          gbla    &$dccexti
                                            4092          lcla    &i
                                            4093 &$dccext(&$dccexti+1) setc    '&m'
                                            4094 &i       seta    1
                                            4095 .loop    aif    (&i gt &$dccexti).around
                                            4096          aif    ('&$dccext(&i)' eq '&m').getout
                                            4097 &i       seta    &i+1
                                            4098          ago     .loop
                                            4099 .around  anop
                                            4100 &$dccexti seta &$dccexti+1
                                            4101          extrn  &m
                                            4102 .getout  anop
                                            4103          mend
00002818                                    4104+$eye0096    ds    0d                                                    02-DCCCA
00002818 C4C3C3                             4105+         dc cl3'DCC'                                                    02-DCCCA
0000281B 01                                 4106+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page   85 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000281C 00000000                           4107+         dc a(0)                                                        02-DCCCA
00002820 000000000000288A                   4108+         dc ad(@PER_792)                                                02-DCCCA
00002828 00000000000000D0                   4109+         dc ad(208)                                                     02-DCCCA
00002830 0000000000000000                   4110+         dc ad(0)                                                       02-DCCCA
00002838 0000000000001000                   4111+         dc ad(4096)                                                    02-DCCCA
00002840 20                                 4112+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002841 03                                 4113+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002842 03                                 4114+         dc al1(3)                                                      02-DCCCA
00002843 08                                 4115+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002844 00                                 4116+         dc bl.8'00000000'                                              02-DCCCA
00002845 000000                             4117+         dc al3(0)                                                      02-DCCCA
00002848 00000000000027FA                   4118+         dc ad(@LNAME792)                                               02-DCCCA
00002850                                    4119+         ds 0d                                                          02-DCCCA
00002850 0000000000002818                   4120+         dc ad($eye0096)                                                02-DCCCA
00002858 0000000000000000                   4121+         dc ad(0)                                                       02-DCCCA
00002860                                    4122+         ds    0d                                                       01-DCCPR
                                            4123+         entry rd_buf_write_update                                      01-DCCPR
00002860                                    4124+rd_buf_write_update ds 0d                                               01-DCCPR
00002860                                    4125+@REGION_792_1 ds 0h                                                     01-DCCPR
00002860 EBEC D008 0024          00000008   4126+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002866 E3E0 D088 0004          00000088   4127+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000286C E3C0 D090 0004          00000090   4128+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002872 B904 002E                          4129+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002876 E3B0 C018 0004          00000018   4130+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000287C A7EB 00D0               000000D0   4131+         aghi  14,208              increase by frame size               01-DCCPR
00002880 E3E0 C020 0021          00000020   4132+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002886 4720 B020               00000020   4133+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000288A                                    4134+@PER_792 ds    0h                                                       01-DCCPR
0000288A EBDE 2080 0024          00000080   4135+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002890 E3C0 2090 0024          00000090   4136+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002896 B904 00D2                          4137+         lgr   13,2                set real frame pointer               01-DCCPR
0000289A B904 00CF                          4138+         lgr   12,15               set base reg                         01-DCCPR
                        00002860            4139+         using @REGION_792_1,12                                         01-DCCPR
0000289E B904 0061                          4140          LGR   6,1         ; ptr to parm area
                                            4141 * ******* End of Prologue
                                            4142 * *
000028A2 E340 6000 0004          00000000   4143          LG    4,0(0,6)    ; rbuf
                                            4144 * ***           rd_segment_t *seg;
                                            4145 * ***           const char *psrc = (const char *)payload;
000028A8 E350 6010 0004          00000010   4146          LG    5,16(0,6)   ; payload
                                            4147 * ***           size_t of;
                                            4148 * ***
                                            4149 * ***
                                            4150 * ***           seg = rd_buf_get_segment_at_offset(rbuf, rbuf->rbuf_wp\
                                            4151 * os, absof);
000028AE E340 D0B0 0024          000000B0   4152          STG   4,176(0,13)
000028B4 E3F0 4018 0004          00000018   4153          LG    15,24(0,4)
000028BA E3F0 D0B8 0024          000000B8   4154          STG   15,184(0,13)
000028C0 E3F0 6008 0004          00000008   4155          LG    15,8(0,6)   ; absof
000028C6 E3F0 D0C0 0024          000000C0   4156          STG   15,192(0,13)
000028CC 4110 D0B0               000000B0   4157          LA    1,176(0,13)
000028D0 E3F0 C0E0 0004          00002940   4158          LG    15,@lit_792_99 ; rd_buf_get_segment_at_offset
                                                                                                                           Page   86 
  Active Usings: @REGION_792_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000028D6                                    4159 @@gen_label145 DS    0H
000028D6 05EF                               4160          BALR  14,15
000028D8                                    4161 @@gen_label146 DS    0H
000028D8 B902 003F                          4162          LTGR  3,15        ; seg
                                            4163 * ***           ((seg && *"invalid absolute offset") ? (void)0 : __ass\
                                            4164 * ert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 543, "seg &&\
                                            4165 *  *\"invalid absolute offset\""));
000028DC 4780 C092               000028F2   4166          BZ    @L170
000028E0 E3F0 C0E8 0004          00002948   4167          LG    15,@lit_792_100
000028E6 41F0 F16C               0000016C   4168          LA    15,364(0,15)
000028EA 9500 F000      00000000 00000000   4169          CLI   0(15),0
000028EE 4770 C0CE               0000292E   4170          BNE   @L171
000028F2                                    4171 @L170    DS    0H
000028F2 E3F0 C0F8 0004          00002958   4172          LG    15,@lit_792_101
000028F8 41F0 F0B8               000000B8   4173          LA    15,184(0,15)
000028FC E3F0 D0B0 0024          000000B0   4174          STG   15,176(0,13)
00002902 E3F0 C0E8 0004          00002948   4175          LG    15,@lit_792_100
00002908 4110 F040               00000040   4176          LA    1,64(0,15)
0000290C E310 D0B8 0024          000000B8   4177          STG   1,184(0,13)
00002912 E548 D0C0 021F          000000C0   4178          MVGHI 192(13),543
00002918 41F0 F184               00000184   4179          LA    15,388(0,15)
0000291C E3F0 D0C8 0024          000000C8   4180          STG   15,200(0,13)
00002922 4110 D0B0               000000B0   4181          LA    1,176(0,13)
00002926 E3F0 C0F0 0004          00002950   4182          LG    15,@lit_792_103 ; __assert
0000292C                                    4183 @@gen_label149 DS    0H
0000292C 05EF                               4184          BALR  14,15
0000292E                                    4185 @@gen_label150 DS    0H
0000292E                                    4186 @L171    DS    0H
                                            4187 * ***
                                            4188 * ***           for (of = 0 ; of < size ; seg = ((seg)->seg_link .tqe_\
                                            4189 * next)) {
0000292E A729 0000               00000000   4190          LGHI  2,0         ; 0
00002932 47F0 C1B2               00002A12   4191          B     @L173
00002938                                    4192          DS    0D
00002938 000000D0                           4193 @FRAMESIZE_792 DC F'208'
0000293C 00000000
00002940 0000000000001778                   4194 @lit_792_99 DC AD(rd_buf_get_segment_at_offset)
00002948 000000000000CB02                   4195 @lit_792_100 DC AD(@strings@)
00002950 0000000000000000                   4196 @lit_792_103 DC AD(__assert)
00002958 000000000000BFA0                   4197 @lit_792_101 DC AD(@DATA)
00002960 0000000000000638                   4198 @lit_792_105 DC AD(rd_buf_len)
00002968 0000000000002688                   4199 @lit_792_109 DC AD(rd_segment_write_update)
00002970                                    4200 @L172    DS    0H
                                            4201 * ***                   ((seg->seg_absof <= rd_buf_len(rbuf)) ? (void)\
                                            4202 * 0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 546\
                                            4203 * , "seg->seg_absof <= rd_buf_len(rbuf)"));
00002970 E370 3028 0004          00000028   4204          LG    7,40(0,3)   ; offset of seg_absof in rd_segment_s
00002976 E340 D0B0 0024          000000B0   4205          STG   4,176(0,13)
0000297C 4110 D0B0               000000B0   4206          LA    1,176(0,13)
00002980 E3F0 C100 0004          00002960   4207          LG    15,@lit_792_105 ; rd_buf_len
00002986                                    4208 @@gen_label151 DS    0H
00002986 05EF                               4209          BALR  14,15
                                                                                                                           Page   87 
  Active Usings: @REGION_792_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002988                                    4210 @@gen_label152 DS    0H
00002988 B921 007F                          4211          CLGR  7,15
0000298C 47D0 C16C               000029CC   4212          BNH   @L177
00002990                                    4213 @L176    DS    0H
00002990 E3F0 C0F8 0004          00002958   4214          LG    15,@lit_792_101
00002996 41F0 F0B8               000000B8   4215          LA    15,184(0,15)
0000299A E3F0 D0B0 0024          000000B0   4216          STG   15,176(0,13)
000029A0 E3F0 C0E8 0004          00002948   4217          LG    15,@lit_792_100
000029A6 4110 F040               00000040   4218          LA    1,64(0,15)
000029AA E310 D0B8 0024          000000B8   4219          STG   1,184(0,13)
000029B0 E548 D0C0 0222          000000C0   4220          MVGHI 192(13),546
000029B6 41F0 F1A6               000001A6   4221          LA    15,422(0,15)
000029BA E3F0 D0C8 0024          000000C8   4222          STG   15,200(0,13)
000029C0 4110 D0B0               000000B0   4223          LA    1,176(0,13)
000029C4 E3F0 C0F0 0004          00002950   4224          LG    15,@lit_792_103 ; __assert
000029CA                                    4225 @@gen_label154 DS    0H
000029CA 05EF                               4226          BALR  14,15
000029CC                                    4227 @@gen_label155 DS    0H
000029CC                                    4228 @L177    DS    0H
                                            4229 * ***                   size_t wlen = rd_segment_write_update(seg, abs\
                                            4230 * of+of,
                                            4231 * ***                                                         psrc+of,\
                                            4232 *  size-of);
000029CC E330 D0B0 0024          000000B0   4233          STG   3,176(0,13)
000029D2 B904 00F2                          4234          LGR   15,2
000029D6 E3F0 6008 000A          00000008   4235          ALG   15,8(0,6)
000029DC E3F0 D0B8 0024          000000B8   4236          STG   15,184(0,13)
000029E2 41F2 5000               00000000   4237          LA    15,0(2,5)
000029E6 E3F0 D0C0 0024          000000C0   4238          STG   15,192(0,13)
000029EC E3F0 6018 0004          00000018   4239          LG    15,24(0,6)  ; size
000029F2 B90B 00F2                          4240          SLGR  15,2
000029F6 E3F0 D0C8 0024          000000C8   4241          STG   15,200(0,13)
000029FC 4110 D0B0               000000B0   4242          LA    1,176(0,13)
00002A00 E3F0 C108 0004          00002968   4243          LG    15,@lit_792_109 ; rd_segment_write_update
00002A06                                    4244 @@gen_label156 DS    0H
00002A06 05EF                               4245          BALR  14,15
00002A08                                    4246 @@gen_label157 DS    0H
                                            4247 * ***                   of += wlen;
00002A08 B90A 002F                          4248          ALGR  2,15
                                            4249 * ***           }
00002A0C E330 3000 0004          00000000   4250          LG    3,0(0,3)    ; seg
00002A12                                    4251 @L173    DS    0H
00002A12 E320 6018 0021          00000018   4252          CLG   2,24(0,6)
00002A18 4740 C110               00002970   4253          BL    @L172
                                            4254 * ***
                                            4255 * ***           do {} while (0);
00002A1C                                    4256 @L178    DS    0H
                                            4257 * ***
                                            4258 * ***           return of;
00002A1C B904 00F2                          4259          LGR   15,2
                                            4260 * ***   }
                                            4261 * * **** Start of Epilogue
                                                                                                                           Page   88 
  Active Usings: @REGION_792_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4262          DCCEPIL
00002A20                                    4263+         ds 0h                                                          01-DCCEP
                                            4264+* Epilog
00002A20 D707 D088 D088 00000088 00000088   4265+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002A26 E3D0 D080 0004          00000080   4266+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002A2C E3C0 D090 0004          00000090   4267+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002A32 E3B0 C018 0004          00000018   4268+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002A38 E3C0 B010 0021          00000010   4269+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002A3E E3E0 D008 0004          00000008   4270+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002A44 EB1C D020 0004          00000020   4271+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002A4A 078E                               4272+         bcr 8,14                if same dsab, just return              01-DCCEP
00002A4C E3F0 D010 0024          00000010   4273+         stg 15,16(0,13)         save return code                       01-DCCEP
00002A52 E300 D018 0024          00000018   4274+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002A58 E3F0 D090 0004          00000090   4275+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002A5E E3F0 F018 0004          00000018   4276+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002A64 47F0 F040               00000040   4277+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4278+* End of Epilog
                                            4279 * * **** End of Epilogue
                                            4280          DROP  12
                                            4281 *
                                            4282 *   DSECT for automatic variables in "rd_buf_write_update"
                                            4283 *      (FUNCTION #792)
                                            4284 *
00000000                00000000 000000B0   4285 @AUTO#rd_buf_write_update DSECT
00000000                                    4286          DS    XL168
000000A8                                    4287 rd_buf_write_update#wlen#1 DS 8XL1 ; wlen
000000B0                000000B0 000000A8   4288          ORG   @AUTO#rd_buf_write_update+168
000000A8                                    4289 rd_buf_write_update#of#0 DS 8XL1 ; of
                                            4290 *
00002A68                00000000 0000BFA0   4291 @CODE    CSECT
                                            4292 *
                                            4293 *
                                            4294 *
                                            4295 * ....... start of rd_buf_push0
                                            4296 rd_buf_push0 ALIAS X'99846D82A4866D97A4A288F0'
00002A68                                    4297 @LNAME793 DS   0H
00002A68 0000000C                           4298          DC    X'0000000C'
00002A6C 99846D82A4866D97                   4299          DC    C'rd_buf_push0'
00002A78 00                                 4300          DC    X'00'
                                            4301 rd_buf_push0 DCCPRLG CINDEX=793,BASER=12,FRAME=200,ENTRY=YES,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME793
                                            4302          macro
                                            4303          dccextrn &m
                                            4304          gblc    &$dccext(1000)
                                            4305          gbla    &$dccexti
                                            4306          lcla    &i
                                            4307 &$dccext(&$dccexti+1) setc    '&m'
                                            4308 &i       seta    1
                                            4309 .loop    aif    (&i gt &$dccexti).around
                                            4310          aif    ('&$dccext(&i)' eq '&m').getout
                                            4311 &i       seta    &i+1
                                            4312          ago     .loop
                                                                                                                           Page   89 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4313 .around  anop
                                            4314 &$dccexti seta &$dccexti+1
                                            4315          extrn  &m
                                            4316 .getout  anop
                                            4317          mend
00002A80                                    4318+$eye0099    ds    0d                                                    02-DCCCA
00002A80 C4C3C3                             4319+         dc cl3'DCC'                                                    02-DCCCA
00002A83 01                                 4320+         dc xl1'01' format one                                          02-DCCCA
00002A84 00000000                           4321+         dc a(0)                                                        02-DCCCA
00002A88 0000000000002AF2                   4322+         dc ad(@PER_793)                                                02-DCCCA
00002A90 00000000000000C8                   4323+         dc ad(200)                                                     02-DCCCA
00002A98 0000000000000000                   4324+         dc ad(0)                                                       02-DCCCA
00002AA0 0000000000001000                   4325+         dc ad(4096)                                                    02-DCCCA
00002AA8 20                                 4326+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002AA9 03                                 4327+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002AAA 03                                 4328+         dc al1(3)                                                      02-DCCCA
00002AAB 08                                 4329+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002AAC 00                                 4330+         dc bl.8'00000000'                                              02-DCCCA
00002AAD 000000                             4331+         dc al3(0)                                                      02-DCCCA
00002AB0 0000000000002A68                   4332+         dc ad(@LNAME793)                                               02-DCCCA
00002AB8                                    4333+         ds 0d                                                          02-DCCCA
00002AB8 0000000000002A80                   4334+         dc ad($eye0099)                                                02-DCCCA
00002AC0 0000000000000000                   4335+         dc ad(0)                                                       02-DCCCA
00002AC8                                    4336+         ds    0d                                                       01-DCCPR
                                            4337+         entry rd_buf_push0                                             01-DCCPR
00002AC8                                    4338+rd_buf_push0 ds 0d                                                      01-DCCPR
00002AC8                                    4339+@REGION_793_1 ds 0h                                                     01-DCCPR
00002AC8 EBEC D008 0024          00000008   4340+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002ACE E3E0 D088 0004          00000088   4341+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002AD4 E3C0 D090 0004          00000090   4342+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002ADA B904 002E                          4343+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002ADE E3B0 C018 0004          00000018   4344+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002AE4 A7EB 00C8               000000C8   4345+         aghi  14,200              increase by frame size               01-DCCPR
00002AE8 E3E0 C020 0021          00000020   4346+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002AEE 4720 B020               00000020   4347+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002AF2                                    4348+@PER_793 ds    0h                                                       01-DCCPR
00002AF2 EBDE 2080 0024          00000080   4349+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002AF8 E3C0 2090 0024          00000090   4350+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002AFE B904 00D2                          4351+         lgr   13,2                set real frame pointer               01-DCCPR
00002B02 B904 00CF                          4352+         lgr   12,15               set base reg                         01-DCCPR
                        00002AC8            4353+         using @REGION_793_1,12                                         01-DCCPR
00002B06 B904 0051                          4354          LGR   5,1         ; ptr to parm area
                                            4355 * ******* End of Prologue
                                            4356 * *
                                            4357 * ***           rd_segment_t *prevseg, *seg, *tailseg = ((void *)0);
00002B0A E330 5000 0004          00000000   4358          LG    3,0(0,5)    ; rbuf
00002B10 A729 0000               00000000   4359          LGHI  2,0         ; 0
                                            4360 * ***
                                            4361 * ***           if ((prevseg = rbuf->rbuf_wpos) &&
00002B14 E340 3018 0004          00000018   4362          LG    4,24(0,3)   ; offset of rbuf_wpos in rd_buf_s
00002B1A B902 00F4                          4363          LTGR  15,4
00002B1E 4780 C0A4               00002B6C   4364          BZ    @L181
                                                                                                                           Page   90 
  Active Usings: @REGION_793_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4365 * ***               rd_segment_write_remains(prevseg, ((void *)0)) > 0\
                                            4366 * ) {
00002B22 E340 D0B0 0024          000000B0   4367          STG   4,176(0,13)
00002B28 D707 D0B8 D0B8 000000B8 000000B8   4368          XC    184(8,13),184(13)
00002B2E 4110 D0B0               000000B0   4369          LA    1,176(0,13)
00002B32 E3F0 C188 0004          00002C50   4370          LG    15,@lit_793_112 ; rd_segment_write_remains
00002B38                                    4371 @@gen_label160 DS    0H
00002B38 05EF                               4372          BALR  14,15
00002B3A                                    4373 @@gen_label161 DS    0H
00002B3A C2FE 0000 0000                     4374          CLGFI 15,X'00000000'
00002B40 47D0 C0A4               00002B6C   4375          BNH   @L181
                                            4376 * ***
                                            4377 * ***
                                            4378 * ***                   tailseg = rd_segment_split(rbuf, prevseg,
                                            4379 * ***                                              prevseg->seg_absof \
                                            4380 * +
00002B44 EB34 D0B0 0024          000000B0   4381          STMG  3,4,176(13)
                                            4382 * ***                                              prevseg->seg_of);
00002B4A E3F0 4028 0004          00000028   4383          LG    15,40(0,4)  ; offset of seg_absof in rd_segment_s
00002B50 E3F0 4018 000A          00000018   4384          ALG   15,24(0,4)
00002B56 E3F0 D0C0 0024          000000C0   4385          STG   15,192(0,13)
00002B5C 4110 D0B0               000000B0   4386          LA    1,176(0,13)
00002B60 E3F0 C190 0004          00002C58   4387          LG    15,@lit_793_113 ; rd_segment_split
00002B66                                    4388 @@gen_label163 DS    0H
00002B66 05EF                               4389          BALR  14,15
00002B68                                    4390 @@gen_label164 DS    0H
00002B68 B904 002F                          4391          LGR   2,15        ; tailseg
                                            4392 * ***           }
00002B6C                                    4393 @L181    DS    0H
                                            4394 * ***
                                            4395 * ***           seg = rd_buf_alloc_segment0(rbuf, 0);
00002B6C E330 D0B0 0024          000000B0   4396          STG   3,176(0,13)
00002B72 D707 D0B8 D0B8 000000B8 000000B8   4397          XC    184(8,13),184(13)
00002B78 4110 D0B0               000000B0   4398          LA    1,176(0,13)
00002B7C E3F0 C198 0004          00002C60   4399          LG    15,@lit_793_114 ; rd_buf_alloc_segment0
00002B82                                    4400 @@gen_label165 DS    0H
00002B82 05EF                               4401          BALR  14,15
00002B84                                    4402 @@gen_label166 DS    0H
                                            4403 * ***           seg->seg_p      = (char *)payload;
00002B84 E310 5008 0004          00000008   4404          LG    1,8(0,5)    ; payload
00002B8A E310 F010 0024          00000010   4405          STG   1,16(0,15)  ; offset of seg_p in rd_segment_s
                                            4406 * ***           seg->seg_size   = size;
00002B90 E310 5010 0004          00000010   4407          LG    1,16(0,5)   ; size
00002B96 E310 F020 0024          00000020   4408          STG   1,32(0,15)  ; offset of seg_size in rd_segment_s
                                            4409 * ***           seg->seg_of     = size;
00002B9C E310 F018 0024          00000018   4410          STG   1,24(0,15)  ; offset of seg_of in rd_segment_s
                                            4411 * ***           seg->seg_free   = free_cb;
00002BA2 E310 5018 0004          00000018   4412          LG    1,24(0,5)   ; free_cb
00002BA8 E310 F030 0024          00000030   4413          STG   1,48(0,15)  ; offset of seg_free in rd_segment_s
                                            4414 * ***           if (!writable)
00002BAE 9500 5027      00000027 00000000   4415          CLI   39(5),0
00002BB2 4770 C0FA               00002BC2   4416          BNE   @L182
                                                                                                                           Page   91 
  Active Usings: @REGION_793_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4417 * ***                   seg->seg_flags |= 0x1;
00002BB6 5810 F038               00000038   4418          L     1,56(0,15)
00002BBA A51B 0001               00000001   4419          OILL  1,1
00002BBE 5010 F038               00000038   4420          ST    1,56(0,15)
00002BC2                                    4421 @L182    DS    0H
                                            4422 * ***
                                            4423 * ***           rd_buf_append_segment(rbuf, seg);
00002BC2 E330 D0B0 0024          000000B0   4424          STG   3,176(0,13)
00002BC8 E3F0 D0B8 0024          000000B8   4425          STG   15,184(0,13)
00002BCE 4110 D0B0               000000B0   4426          LA    1,176(0,13)
00002BD2 E340 C1A0 0004          00002C68   4427          LG    4,@lit_793_115 ; rd_buf_append_segment
00002BD8 B904 00F4                          4428          LGR   15,4
00002BDC                                    4429 @@gen_label168 DS    0H
00002BDC 05EF                               4430          BALR  14,15
00002BDE                                    4431 @@gen_label169 DS    0H
                                            4432 * ***
                                            4433 * ***           if (tailseg)
00002BDE B902 00F2                          4434          LTGR  15,2
00002BE2 4780 C134               00002BFC   4435          BZ    @L183
                                            4436 * ***                   rd_buf_append_segment(rbuf, tailseg);
00002BE6 E330 D0B0 0024          000000B0   4437          STG   3,176(0,13)
00002BEC E320 D0B8 0024          000000B8   4438          STG   2,184(0,13)
00002BF2 4110 D0B0               000000B0   4439          LA    1,176(0,13)
00002BF6 B904 00F4                          4440          LGR   15,4
00002BFA                                    4441 @@gen_label171 DS    0H
00002BFA 05EF                               4442          BALR  14,15
00002BFC                                    4443 @@gen_label172 DS    0H
00002BFC                                    4444 @L183    DS    0H
                                            4445 * ***   }
00002BFC                                    4446 @ret_lab_793 DS 0H
                                            4447 * * **** Start of Epilogue
                                            4448          DCCEPIL
00002BFC                                    4449+         ds 0h                                                          01-DCCEP
                                            4450+* Epilog
00002BFC D707 D088 D088 00000088 00000088   4451+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002C02 E3D0 D080 0004          00000080   4452+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002C08 E3C0 D090 0004          00000090   4453+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002C0E E3B0 C018 0004          00000018   4454+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002C14 E3C0 B010 0021          00000010   4455+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002C1A E3E0 D008 0004          00000008   4456+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002C20 EB1C D020 0004          00000020   4457+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002C26 078E                               4458+         bcr 8,14                if same dsab, just return              01-DCCEP
00002C28 E3F0 D010 0024          00000010   4459+         stg 15,16(0,13)         save return code                       01-DCCEP
00002C2E E300 D018 0024          00000018   4460+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002C34 E3F0 D090 0004          00000090   4461+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002C3A E3F0 F018 0004          00000018   4462+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002C40 47F0 F040               00000040   4463+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4464+* End of Epilog
                                            4465 * * **** End of Epilogue
00002C48                                    4466          DS    0D
00002C48 000000C8                           4467 @FRAMESIZE_793 DC F'200'
00002C4C 00000000
                                                                                                                           Page   92 
  Active Usings: @REGION_793_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002C50 0000000000000580                   4468 @lit_793_112 DC AD(rd_segment_write_remains)
00002C58 0000000000001868                   4469 @lit_793_113 DC AD(rd_segment_split)
00002C60 0000000000000FF0                   4470 @lit_793_114 DC AD(rd_buf_alloc_segment0)
00002C68 0000000000000D90                   4471 @lit_793_115 DC AD(rd_buf_append_segment)
                                            4472          DROP  12
                                            4473 *
                                            4474 *   DSECT for automatic variables in "rd_buf_push0"
                                            4475 *      (FUNCTION #793)
                                            4476 *
00000000                00000000 000000A8   4477 @AUTO#rd_buf_push0 DSECT
00000000                                    4478          DS    XL168
                                            4479 *
00002C70                00000000 0000BFA0   4480 @CODE    CSECT
                                            4481 *
                                            4482 *
                                            4483 *
                                            4484 * ....... start of rd_buf_erase
                                            4485 rd_buf_erase ALIAS X'99846D82A4866D859981A285'
00002C70                                    4486 @LNAME794 DS   0H
00002C70 0000000C                           4487          DC    X'0000000C'
00002C74 99846D82A4866D85                   4488          DC    C'rd_buf_erase'
00002C80 00                                 4489          DC    X'00'
                                            4490 rd_buf_erase DCCPRLG CINDEX=794,BASER=12,FRAME=208,ENTRY=YES,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME794
                                            4491          macro
                                            4492          dccextrn &m
                                            4493          gblc    &$dccext(1000)
                                            4494          gbla    &$dccexti
                                            4495          lcla    &i
                                            4496 &$dccext(&$dccexti+1) setc    '&m'
                                            4497 &i       seta    1
                                            4498 .loop    aif    (&i gt &$dccexti).around
                                            4499          aif    ('&$dccext(&i)' eq '&m').getout
                                            4500 &i       seta    &i+1
                                            4501          ago     .loop
                                            4502 .around  anop
                                            4503 &$dccexti seta &$dccexti+1
                                            4504          extrn  &m
                                            4505 .getout  anop
                                            4506          mend
00002C88                                    4507+$eye0102    ds    0d                                                    02-DCCCA
00002C88 C4C3C3                             4508+         dc cl3'DCC'                                                    02-DCCCA
00002C8B 01                                 4509+         dc xl1'01' format one                                          02-DCCCA
00002C8C 00000000                           4510+         dc a(0)                                                        02-DCCCA
00002C90 0000000000002CFA                   4511+         dc ad(@PER_794)                                                02-DCCCA
00002C98 00000000000000D0                   4512+         dc ad(208)                                                     02-DCCCA
00002CA0 0000000000000000                   4513+         dc ad(0)                                                       02-DCCCA
00002CA8 0000000000001000                   4514+         dc ad(4096)                                                    02-DCCCA
00002CB0 20                                 4515+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002CB1 03                                 4516+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002CB2 03                                 4517+         dc al1(3)                                                      02-DCCCA
00002CB3 08                                 4518+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   93 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002CB4 00                                 4519+         dc bl.8'00000000'                                              02-DCCCA
00002CB5 000000                             4520+         dc al3(0)                                                      02-DCCCA
00002CB8 0000000000002C70                   4521+         dc ad(@LNAME794)                                               02-DCCCA
00002CC0                                    4522+         ds 0d                                                          02-DCCCA
00002CC0 0000000000002C88                   4523+         dc ad($eye0102)                                                02-DCCCA
00002CC8 0000000000000000                   4524+         dc ad(0)                                                       02-DCCCA
00002CD0                                    4525+         ds    0d                                                       01-DCCPR
                                            4526+         entry rd_buf_erase                                             01-DCCPR
00002CD0                                    4527+rd_buf_erase ds 0d                                                      01-DCCPR
00002CD0                                    4528+@REGION_794_1 ds 0h                                                     01-DCCPR
00002CD0 EBEC D008 0024          00000008   4529+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002CD6 E3E0 D088 0004          00000088   4530+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002CDC E3C0 D090 0004          00000090   4531+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002CE2 B904 002E                          4532+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002CE6 E3B0 C018 0004          00000018   4533+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002CEC A7EB 00D0               000000D0   4534+         aghi  14,208              increase by frame size               01-DCCPR
00002CF0 E3E0 C020 0021          00000020   4535+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002CF6 4720 B020               00000020   4536+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002CFA                                    4537+@PER_794 ds    0h                                                       01-DCCPR
00002CFA EBDE 2080 0024          00000080   4538+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002D00 E3C0 2090 0024          00000090   4539+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002D06 B904 00D2                          4540+         lgr   13,2                set real frame pointer               01-DCCPR
00002D0A B904 00CF                          4541+         lgr   12,15               set base reg                         01-DCCPR
                        00002CD0            4542+         using @REGION_794_1,12                                         01-DCCPR
                                            4543          DCCPRV REG=9      ; Get PRV from DVT
00002D0E E390 B008 0004          00000008   4544+         LG 9,8(0,11)                                                   01-DCCPR
00002D14 B904 00A1                          4545          LGR   10,1        ; ptr to parm area
                                            4546 * ******* End of Prologue
                                            4547 * *
                                            4548 * ***           rd_segment_t *seg, *next = ((void *)0);
00002D18 E350 A000 0004          00000000   4549          LG    5,0(0,10)   ; rbuf
00002D1E A749 0000               00000000   4550          LGHI  4,0         ; 0
                                            4551 * ***           size_t of;
                                            4552 * ***
                                            4553 * ***
                                            4554 * ***           seg = rd_buf_get_segment_at_offset(rbuf, ((void *)0), \
                                            4555 * absof);
00002D22 E350 D0B0 0024          000000B0   4556          STG   5,176(0,13)
00002D28 D707 D0B8 D0B8 000000B8 000000B8   4557          XC    184(8,13),184(13)
00002D2E E3F0 A008 0004          00000008   4558          LG    15,8(0,10)  ; absof
00002D34 E3F0 D0C0 0024          000000C0   4559          STG   15,192(0,13)
00002D3A 4110 D0B0               000000B0   4560          LA    1,176(0,13)
00002D3E E3F0 C090 0004          00002D60   4561          LG    15,@lit_794_119 ; rd_buf_get_segment_at_offset
00002D44                                    4562 @@gen_label173 DS    0H
00002D44 05EF                               4563          BALR  14,15
00002D46                                    4564 @@gen_label174 DS    0H
00002D46 B904 002F                          4565          LGR   2,15        ; seg
                                            4566 * ***
                                            4567 * ***
                                            4568 * ***
                                            4569 * ***           for (of = 0 ; seg && of < size ; seg = next) {
00002D4A B904 0034                          4570          LGR   3,4         ; of
                                                                                                                           Page   94 
  Active Usings: @REGION_794_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002D4E 47F0 C2BC               00002F8C   4571          B     @L185
00002D58                                    4572          DS    0D
00002D58 000000D0                           4573 @FRAMESIZE_794 DC F'208'
00002D5C 00000000
00002D60 0000000000001778                   4574 @lit_794_119 DC AD(rd_buf_get_segment_at_offset)
00002D68 0000000000000000                   4575 @lit_794_137 DC AD(fprintf)
00002D70 000000000000BFA0                   4576 @lit_794_136 DC AD(@DATA)
00002D78 000000000000CB02                   4577 @lit_794_135 DC AD(@strings@)
00002D80 00000000                           4578 @lit_794_121 DC Q(__stderrp)
00002D84 00000000
00002D88 0000000000000000                   4579 @lit_794_129 DC AD(__assert)
00002D90 0000000000000000                   4580 @lit_794_130 DC AD(memmove)
00002D98 0000000000001AB8                   4581 @lit_794_131 DC AD(rd_buf_destroy_segment)
00002DA0                                    4582 @L184    DS    0H
                                            4583 * ***
                                            4584 * ***   # 623 "C:\asgkafka\librdkafka\src\rdbuf.c"
                                            4585 * ***
                                            4586 * ***                   size_t rof = (absof + of) - seg->seg_absof;
00002DA0 B904 0063                          4587          LGR   6,3
00002DA4 E360 A008 000A          00000008   4588          ALG   6,8(0,10)
00002DAA E360 2028 000B          00000028   4589          SLG   6,40(0,2)
                                            4590 * ***
                                            4591 * ***                   size_t eraseremains = size - of;
00002DB0 E3F0 A010 0004          00000010   4592          LG    15,16(0,10) ; size
00002DB6 B90B 00F3                          4593          SLGR  15,3
                                            4594 * ***
                                            4595 * ***                   size_t toerase = ((seg->seg_of - rof) < (erase\
                                            4596 * remains) ? (seg->seg_of - rof) : (eraseremains));
00002DBA E310 2018 0004          00000018   4597          LG    1,24(0,2)   ; offset of seg_of in rd_segment_s
00002DC0 B90B 0016                          4598          SLGR  1,6
00002DC4 B921 001F                          4599          CLGR  1,15
00002DC8 47B0 C10E               00002DDE   4600          BNL   @L189
00002DCC E3F0 2018 0004          00000018   4601          LG    15,24(0,2)  ; offset of seg_of in rd_segment_s
00002DD2 B90B 00F6                          4602          SLGR  15,6
00002DD6 B904 007F                          4603          LGR   7,15
00002DDA 47F0 C112               00002DE2   4604          B     @L190
00002DDE                                    4605 @L189    DS    0H
00002DDE B904 007F                          4606          LGR   7,15
00002DE2                                    4607 @L190    DS    0H
                                            4608 * ***
                                            4609 * ***                   size_t segremains = seg->seg_of - (rof + toera\
                                            4610 * se);
00002DE2 E380 2018 0004          00000018   4611          LG    8,24(0,2)   ; offset of seg_of in rd_segment_s
00002DE8 B904 0016                          4612          LGR   1,6
00002DEC B90A 0017                          4613          ALGR  1,7
00002DF0 B90B 0081                          4614          SLGR  8,1
                                            4615 * ***
                                            4616 * ***                   next = ((seg)->seg_link .tqe_next);
00002DF4 E340 2000 0004          00000000   4617          LG    4,0(0,2)    ; seg
                                            4618 * ***
                                            4619 * ***                   seg->seg_absof -= of;
00002DFA E310 2028 0004          00000028   4620          LG    1,40(0,2)
                                                                                                                           Page   95 
  Active Usings: @REGION_794_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002E00 B90B 0013                          4621          SLGR  1,3
00002E04 E310 2028 0024          00000028   4622          STG   1,40(0,2)
                                            4623 * ***
                                            4624 * ***                   if (((toerase == 0)))
00002E0A B902 00F7                          4625          LTGR  15,7
00002E0E 4780 C2B8               00002F88   4626          BE    @L188
                                            4627 * ***                           continue;
00002E12                                    4628 @L191    DS    0H
                                            4629 * ***
                                            4630 * ***                   if ((((seg->seg_flags & 0x1))))
00002E12 9101 203B      0000003B 00000001   4631          TM    59(2),1
00002E16 4780 C232               00002F02   4632          BZ    @L192
                                            4633 * ***                           do { fprintf(__stderrp, "INTERNAL ERRO\
                                            4634 * R: librdkafka %s:%d: ", __FUNCTION__, 640); fprintf(__stderrp, "rd_b\
                                            4635 * uf_erase() called on read-only segment"); fprintf(__stderrp, "\n"); \
                                            4636 * ((!*"INTERNAL ERROR IN LIBRDKAFKA") ? (void)0 : __assert(__func__, "\
                                            4637 * C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 640, "!*\"INTERNAL ERROR IN\
                                            4638 *  LIBRDKAFKA\"")); } while (0);
00002E1A                                    4639 @L193    DS    0H
00002E1A E3B0 C0B0 0016          00002D80   4640          LLGF  11,@lit_794_121 ; __stderrp
00002E20 E3FB 9000 0004          00000000   4641          LG    15,0(11,9)  ; __stderrp
00002E26 E3F0 D0B0 0024          000000B0   4642          STG   15,176(0,13)
00002E2C E3F0 C0A8 0004          00002D78   4643          LG    15,@lit_794_135
00002E32 41F0 F1CA               000001CA   4644          LA    15,458(0,15)
00002E36 E3F0 D0B8 0024          000000B8   4645          STG   15,184(0,13)
00002E3C E3F0 C0A0 0004          00002D70   4646          LG    15,@lit_794_136
00002E42 41F0 F0CC               000000CC   4647          LA    15,204(0,15)
00002E46 E3F0 D0C0 0024          000000C0   4648          STG   15,192(0,13)
00002E4C E548 D0C8 0280          000000C8   4649          MVGHI 200(13),640
00002E52 4110 D0B0               000000B0   4650          LA    1,176(0,13)
00002E56 E3F0 C098 0004          00002D68   4651          LG    15,@lit_794_137 ; fprintf
00002E5C                                    4652 @@gen_label178 DS    0H
00002E5C 05EF                               4653          BALR  14,15
00002E5E                                    4654 @@gen_label179 DS    0H
00002E5E E3FB 9000 0004          00000000   4655          LG    15,0(11,9)  ; __stderrp
00002E64 E3F0 D0B0 0024          000000B0   4656          STG   15,176(0,13)
00002E6A E3F0 C0A8 0004          00002D78   4657          LG    15,@lit_794_135
00002E70 41F0 F1EE               000001EE   4658          LA    15,494(0,15)
00002E74 E3F0 D0B8 0024          000000B8   4659          STG   15,184(0,13)
00002E7A 4110 D0B0               000000B0   4660          LA    1,176(0,13)
00002E7E E3F0 C098 0004          00002D68   4661          LG    15,@lit_794_137 ; fprintf
00002E84                                    4662 @@gen_label180 DS    0H
00002E84 05EF                               4663          BALR  14,15
00002E86                                    4664 @@gen_label181 DS    0H
00002E86 E3FB 9000 0004          00000000   4665          LG    15,0(11,9)  ; __stderrp
00002E8C E3F0 D0B0 0024          000000B0   4666          STG   15,176(0,13)
00002E92 E3F0 C0A8 0004          00002D78   4667          LG    15,@lit_794_135
00002E98 41F0 F21A               0000021A   4668          LA    15,538(0,15)
00002E9C E3F0 D0B8 0024          000000B8   4669          STG   15,184(0,13)
00002EA2 4110 D0B0               000000B0   4670          LA    1,176(0,13)
00002EA6 E3F0 C098 0004          00002D68   4671          LG    15,@lit_794_137 ; fprintf
00002EAC                                    4672 @@gen_label182 DS    0H
                                                                                                                           Page   96 
  Active Usings: @REGION_794_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002EAC 05EF                               4673          BALR  14,15
00002EAE                                    4674 @@gen_label183 DS    0H
00002EAE E3F0 C0A8 0004          00002D78   4675          LG    15,@lit_794_135
00002EB4 41F0 F21C               0000021C   4676          LA    15,540(0,15)
00002EB8 9500 F000      00000000 00000000   4677          CLI   0(15),0
00002EBC 4780 C232               00002F02   4678          BE    @L197
00002EC0                                    4679 @L196    DS    0H
00002EC0 E3F0 C0A0 0004          00002D70   4680          LG    15,@lit_794_136
00002EC6 41F0 F0CC               000000CC   4681          LA    15,204(0,15)
00002ECA E3F0 D0B0 0024          000000B0   4682          STG   15,176(0,13)
00002ED0 E3F0 C0A8 0004          00002D78   4683          LG    15,@lit_794_135
00002ED6 41F0 F040               00000040   4684          LA    15,64(0,15)
00002EDA E3F0 D0B8 0024          000000B8   4685          STG   15,184(0,13)
00002EE0 E548 D0C0 0280          000000C0   4686          MVGHI 192(13),640
00002EE6 E3F0 C0A8 0004          00002D78   4687          LG    15,@lit_794_135
00002EEC 41F0 F23A               0000023A   4688          LA    15,570(0,15)
00002EF0 E3F0 D0C8 0024          000000C8   4689          STG   15,200(0,13)
00002EF6 4110 D0B0               000000B0   4690          LA    1,176(0,13)
00002EFA E3F0 C0B8 0004          00002D88   4691          LG    15,@lit_794_129 ; __assert
00002F00                                    4692 @@gen_label185 DS    0H
00002F00 05EF                               4693          BALR  14,15
00002F02                                    4694 @@gen_label186 DS    0H
00002F02                                    4695 @L197    DS    0H
                                            4696 * ***
                                            4697 * ***                   if (((segremains > 0)))
00002F02                                    4698 @L192    DS    0H
00002F02 C28E 0000 0000                     4699          CLGFI 8,X'00000000'
00002F08 47D0 C272               00002F42   4700          BNH   @L198
                                            4701 * ***                           memmove(seg->seg_p+rof, seg->seg_p+rof\
                                            4702 * +toerase,
                                            4703 * ***                                   segremains);
00002F0C E3F0 2010 0004          00000010   4704          LG    15,16(0,2)  ; offset of seg_p in rd_segment_s
00002F12 41F6 F000               00000000   4705          LA    15,0(6,15)
00002F16 E3F0 D0B0 0024          000000B0   4706          STG   15,176(0,13)
00002F1C E3F0 2010 0004          00000010   4707          LG    15,16(0,2)  ; offset of seg_p in rd_segment_s
00002F22 4116 7000               00000000   4708          LA    1,0(6,7)
00002F26 41F1 F000               00000000   4709          LA    15,0(1,15)
00002F2A E3F0 D0B8 0024          000000B8   4710          STG   15,184(0,13)
00002F30 E380 D0C0 0024          000000C0   4711          STG   8,192(0,13)
00002F36 4110 D0B0               000000B0   4712          LA    1,176(0,13)
00002F3A E3F0 C0C0 0004          00002D90   4713          LG    15,@lit_794_130 ; memmove
00002F40                                    4714 @@gen_label188 DS    0H
00002F40 05EF                               4715          BALR  14,15
00002F42                                    4716 @@gen_label189 DS    0H
00002F42                                    4717 @L198    DS    0H
                                            4718 * ***
                                            4719 * ***                   seg->seg_of -= toerase;
00002F42 E3F0 2018 0004          00000018   4720          LG    15,24(0,2)
00002F48 B90B 00F7                          4721          SLGR  15,7
00002F4C E3F0 2018 0024          00000018   4722          STG   15,24(0,2)
                                            4723 * ***                   rbuf->rbuf_len -= toerase;
00002F52 E3F0 5020 0004          00000020   4724          LG    15,32(0,5)
                                                                                                                           Page   97 
  Active Usings: @REGION_794_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002F58 B90B 00F7                          4725          SLGR  15,7
00002F5C E3F0 5020 0024          00000020   4726          STG   15,32(0,5)
                                            4727 * ***
                                            4728 * ***                   of += toerase;
00002F62 B90A 0037                          4729          ALGR  3,7
                                            4730 * ***
                                            4731 * ***
                                            4732 * ***                   if (seg->seg_of == 0)
00002F66 E559 2018 0000          00000018   4733          CLGHSI 24(2),0
00002F6C 4770 C2B8               00002F88   4734          BNE   @L199
                                            4735 * ***                           rd_buf_destroy_segment(rbuf, seg);
00002F70 E350 D0B0 0024          000000B0   4736          STG   5,176(0,13)
00002F76 E320 D0B8 0024          000000B8   4737          STG   2,184(0,13)
00002F7C 4110 D0B0               000000B0   4738          LA    1,176(0,13)
00002F80 E3F0 C0C8 0004          00002D98   4739          LG    15,@lit_794_131 ; rd_buf_destroy_segment
00002F86                                    4740 @@gen_label191 DS    0H
00002F86 05EF                               4741          BALR  14,15
00002F88                                    4742 @@gen_label192 DS    0H
00002F88                                    4743 @L199    DS    0H
                                            4744 * ***           }
00002F88                                    4745 @L188    DS    0H
00002F88 B904 0024                          4746          LGR   2,4         ; seg
00002F8C                                    4747 @L185    DS    0H
00002F8C B902 00F2                          4748          LTGR  15,2
00002F90 4780 C2CE               00002F9E   4749          BZ    @L186
00002F94 E330 A010 0021          00000010   4750          CLG   3,16(0,10)
00002F9A 4740 C0D0               00002DA0   4751          BL    @L184
00002F9E                                    4752 @L186    DS    0H
                                            4753 * ***
                                            4754 * ***
                                            4755 * ***           for (seg = next ; seg ; seg = ((seg)->seg_link .tqe_ne\
                                            4756 * xt)) {
00002F9E B904 0024                          4757          LGR   2,4         ; seg
00002FA2 47F0 C336               00003006   4758          B     @L201
00002FA6                                    4759 @L200    DS    0H
                                            4760 * ***                   ((seg->seg_absof >= of) ? (void)0 : __assert(_\
                                            4761 * _func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 658, "seg->seg_ab\
                                            4762 * sof >= of"));
00002FA6 E3F0 2028 0004          00000028   4763          LG    15,40(0,2)  ; offset of seg_absof in rd_segment_s
00002FAC B921 00F3                          4764          CLGR  15,3
00002FB0 47B0 C320               00002FF0   4765          BNL   @L205
00002FB4                                    4766 @L204    DS    0H
00002FB4 E3F0 C0A0 0004          00002D70   4767          LG    15,@lit_794_136
00002FBA 41F0 F0CC               000000CC   4768          LA    15,204(0,15)
00002FBE E3F0 D0B0 0024          000000B0   4769          STG   15,176(0,13)
00002FC4 E3F0 C0A8 0004          00002D78   4770          LG    15,@lit_794_135
00002FCA 4110 F040               00000040   4771          LA    1,64(0,15)
00002FCE E310 D0B8 0024          000000B8   4772          STG   1,184(0,13)
00002FD4 E548 D0C0 0292          000000C0   4773          MVGHI 192(13),658
00002FDA 41F0 F25C               0000025C   4774          LA    15,604(0,15)
00002FDE E3F0 D0C8 0024          000000C8   4775          STG   15,200(0,13)
00002FE4 4110 D0B0               000000B0   4776          LA    1,176(0,13)
                                                                                                                           Page   98 
  Active Usings: @REGION_794_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002FE8 E3F0 C0B8 0004          00002D88   4777          LG    15,@lit_794_129 ; __assert
00002FEE                                    4778 @@gen_label196 DS    0H
00002FEE 05EF                               4779          BALR  14,15
00002FF0                                    4780 @@gen_label197 DS    0H
00002FF0                                    4781 @L205    DS    0H
                                            4782 * ***                   seg->seg_absof -= of;
00002FF0 E3F0 2028 0004          00000028   4783          LG    15,40(0,2)
00002FF6 B90B 00F3                          4784          SLGR  15,3
00002FFA E3F0 2028 0024          00000028   4785          STG   15,40(0,2)
                                            4786 * ***           }
00003000 E320 2000 0004          00000000   4787          LG    2,0(0,2)    ; seg
00003006                                    4788 @L201    DS    0H
00003006 B902 00F2                          4789          LTGR  15,2
0000300A 4770 C2D6               00002FA6   4790          BNZ   @L200
                                            4791 * ***
                                            4792 * ***           rbuf->rbuf_erased += of;
0000300E B904 00F3                          4793          LGR   15,3
00003012 E3F0 5028 000A          00000028   4794          ALG   15,40(0,5)
00003018 E3F0 5028 0024          00000028   4795          STG   15,40(0,5)
                                            4796 * ***
                                            4797 * ***           return of;
0000301E B904 00F3                          4798          LGR   15,3
                                            4799 * ***   }
                                            4800 * * **** Start of Epilogue
                                            4801          DCCEPIL
00003022                                    4802+         ds 0h                                                          01-DCCEP
                                            4803+* Epilog
00003022 D707 D088 D088 00000088 00000088   4804+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003028 E3D0 D080 0004          00000080   4805+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000302E E3C0 D090 0004          00000090   4806+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003034 E3B0 C018 0004          00000018   4807+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000303A E3C0 B010 0021          00000010   4808+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003040 E3E0 D008 0004          00000008   4809+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003046 EB1C D020 0004          00000020   4810+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000304C 078E                               4811+         bcr 8,14                if same dsab, just return              01-DCCEP
0000304E E3F0 D010 0024          00000010   4812+         stg 15,16(0,13)         save return code                       01-DCCEP
00003054 E300 D018 0024          00000018   4813+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000305A E3F0 D090 0004          00000090   4814+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003060 E3F0 F018 0004          00000018   4815+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003066 47F0 F040               00000040   4816+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4817+* End of Epilog
                                            4818 * * **** End of Epilogue
                                            4819          DROP  12
                                            4820 *
                                            4821 *   DSECT for automatic variables in "rd_buf_erase"
                                            4822 *      (FUNCTION #794)
                                            4823 *
00000000                00000000 000000B0   4824 @AUTO#rd_buf_erase DSECT
00000000                                    4825          DS    XL168
000000A8                                    4826 rd_buf_erase#segremains#1 DS 8XL1 ; segremains
000000B0                000000B0 000000A8   4827          ORG   @AUTO#rd_buf_erase+168
000000A8                                    4828 rd_buf_erase#toerase#1 DS 8XL1 ; toerase
                                                                                                                           Page   99 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000B0                000000B0 000000A8   4829          ORG   @AUTO#rd_buf_erase+168
000000A8                                    4830 rd_buf_erase#eraseremains#1 DS 8XL1 ; eraseremains
000000B0                000000B0 000000A8   4831          ORG   @AUTO#rd_buf_erase+168
000000A8                                    4832 rd_buf_erase#rof#1 DS 8XL1 ; rof
000000B0                000000B0 000000A8   4833          ORG   @AUTO#rd_buf_erase+168
000000A8                                    4834 rd_buf_erase#of#0 DS 8XL1  ; of
                                            4835 *
0000306A                00000000 0000BFA0   4836 @CODE    CSECT
                                            4837 *
                                            4838 *
                                            4839 *
                                            4840 * ....... start of rd_buf_write_seek
                                            4841 rd_buf_write_seek ALIAS X'99846D82A4866DA69989A3856DA2858592'
0000306A                                    4842 @LNAME789 DS   0H
0000306A 00000011                           4843          DC    X'00000011'
0000306E 99846D82A4866DA6                   4844          DC    C'rd_buf_write_seek'
0000307F 00                                 4845          DC    X'00'
                                            4846 rd_buf_write_seek DCCPRLG CINDEX=789,BASER=12,FRAME=208,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME789
                                            4847          macro
                                            4848          dccextrn &m
                                            4849          gblc    &$dccext(1000)
                                            4850          gbla    &$dccexti
                                            4851          lcla    &i
                                            4852 &$dccext(&$dccexti+1) setc    '&m'
                                            4853 &i       seta    1
                                            4854 .loop    aif    (&i gt &$dccexti).around
                                            4855          aif    ('&$dccext(&i)' eq '&m').getout
                                            4856 &i       seta    &i+1
                                            4857          ago     .loop
                                            4858 .around  anop
                                            4859 &$dccexti seta &$dccexti+1
                                            4860          extrn  &m
                                            4861 .getout  anop
                                            4862          mend
00003080                                    4863+$eye0106    ds    0d                                                    02-DCCCA
00003080 C4C3C3                             4864+         dc cl3'DCC'                                                    02-DCCCA
00003083 01                                 4865+         dc xl1'01' format one                                          02-DCCCA
00003084 00000000                           4866+         dc a(0)                                                        02-DCCCA
00003088 00000000000030F2                   4867+         dc ad(@PER_789)                                                02-DCCCA
00003090 00000000000000D0                   4868+         dc ad(208)                                                     02-DCCCA
00003098 0000000000000000                   4869+         dc ad(0)                                                       02-DCCCA
000030A0 0000000000001000                   4870+         dc ad(4096)                                                    02-DCCCA
000030A8 20                                 4871+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000030A9 03                                 4872+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000030AA 03                                 4873+         dc al1(3)                                                      02-DCCCA
000030AB 08                                 4874+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000030AC 00                                 4875+         dc bl.8'00000000'                                              02-DCCCA
000030AD 000000                             4876+         dc al3(0)                                                      02-DCCCA
000030B0 000000000000306A                   4877+         dc ad(@LNAME789)                                               02-DCCCA
000030B8                                    4878+         ds 0d                                                          02-DCCCA
000030B8 0000000000003080                   4879+         dc ad($eye0106)                                                02-DCCCA
                                                                                                                           Page  100 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000030C0 0000000000000000                   4880+         dc ad(0)                                                       02-DCCCA
000030C8                                    4881+         ds    0d                                                       01-DCCPR
                                            4882+         entry rd_buf_write_seek                                        01-DCCPR
000030C8                                    4883+rd_buf_write_seek ds 0d                                                 01-DCCPR
000030C8                                    4884+@REGION_789_1 ds 0h                                                     01-DCCPR
000030C8 EBEC D008 0024          00000008   4885+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000030CE E3E0 D088 0004          00000088   4886+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000030D4 E3C0 D090 0004          00000090   4887+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000030DA B904 002E                          4888+         lgr   2,14                copy addr of our savearea            01-DCCPR
000030DE E3B0 C018 0004          00000018   4889+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000030E4 A7EB 00D0               000000D0   4890+         aghi  14,208              increase by frame size               01-DCCPR
000030E8 E3E0 C020 0021          00000020   4891+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000030EE 4720 B020               00000020   4892+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000030F2                                    4893+@PER_789 ds    0h                                                       01-DCCPR
000030F2 EBDE 2080 0024          00000080   4894+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000030F8 E3C0 2090 0024          00000090   4895+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000030FE B904 00D2                          4896+         lgr   13,2                set real frame pointer               01-DCCPR
00003102 B904 00CF                          4897+         lgr   12,15               set base reg                         01-DCCPR
                        000030C8            4898+         using @REGION_789_1,12                                         01-DCCPR
                                            4899 * ******* End of Prologue
                                            4900 * *
00003106 EB34 1000 0004          00000000   4901          LMG   3,4,0(1)    ; rbuf
                                            4902 * ***           rd_segment_t *seg, *next;
                                            4903 * ***           size_t relof;
                                            4904 * ***
                                            4905 * ***           seg = rd_buf_get_segment_at_offset(rbuf, rbuf->rbuf_wp\
                                            4906 * os, absof);
0000310C E330 D0B0 0024          000000B0   4907          STG   3,176(0,13)
00003112 E3F0 3018 0004          00000018   4908          LG    15,24(0,3)
00003118 E3F0 D0B8 0024          000000B8   4909          STG   15,184(0,13)
0000311E E340 D0C0 0024          000000C0   4910          STG   4,192(0,13)
00003124 4110 D0B0               000000B0   4911          LA    1,176(0,13)
00003128 E3F0 C088 0004          00003150   4912          LG    15,@lit_789_147 ; rd_buf_get_segment_at_offset
0000312E                                    4913 @@gen_label199 DS    0H
0000312E 05EF                               4914          BALR  14,15
00003130                                    4915 @@gen_label200 DS    0H
00003130 B904 005F                          4916          LGR   5,15
                                            4917 * ***           if (((!seg)))
00003134 B902 00F5                          4918          LTGR  15,5
00003138 4770 C0B0               00003178   4919          BNZ   @L206
                                            4920 * ***                   return -1;
0000313C A7F9 FFFF               0000FFFF   4921          LGHI  15,-1       ; -1
00003140 47F0 C180               00003248   4922          B     @ret_lab_789
00003148                                    4923          DS    0D
00003148 000000D0                           4924 @FRAMESIZE_789 DC F'208'
0000314C 00000000
00003150 0000000000001778                   4925 @lit_789_147 DC AD(rd_buf_get_segment_at_offset)
00003158 0000000000001AB8                   4926 @lit_789_150 DC AD(rd_buf_destroy_segment)
00003160 0000000000000000                   4927 @lit_789_153 DC AD(__assert)
00003168 000000000000CB02                   4928 @lit_789_152 DC AD(@strings@)
00003170 000000000000BFA0                   4929 @lit_789_151 DC AD(@DATA)
00003178                                    4930 @L206    DS    0H
                                                                                                                           Page  101 
  Active Usings: @REGION_789_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4931 * ***
                                            4932 * ***           relof = absof - seg->seg_absof;
00003178 B904 0064                          4933          LGR   6,4
0000317C E360 5028 000B          00000028   4934          SLG   6,40(0,5)
                                            4935 * ***           if (((relof > seg->seg_of)))
00003182 E360 5018 0021          00000018   4936          CLG   6,24(0,5)
00003188 47D0 C0CC               00003194   4937          BNH   @L207
                                            4938 * ***                   return -1;
0000318C A7F9 FFFF               0000FFFF   4939          LGHI  15,-1       ; -1
00003190 47F0 C180               00003248   4940          B     @ret_lab_789
00003194                                    4941 @L207    DS    0H
                                            4942 * ***
                                            4943 * ***
                                            4944 * ***
                                            4945 * ***
                                            4946 * ***           for (next = (*(((struct rd_segment_head *)((&rbuf->rbu\
                                            4947 * f_segments)->tqh_last))->tqh_last)) ;
00003194 E3F0 3008 0004          00000008   4948          LG    15,8(0,3)   ; offset of tqh_last in rd_segment_head
0000319A E3F0 F008 0004          00000008   4949          LG    15,8(0,15)  ; offset of tqh_last in rd_segment_head
000031A0 E320 F000 0004          00000000   4950          LG    2,0(0,15)
                                            4951 * ***                next != seg ; ) {
000031A6 47F0 C110               000031D8   4952          B     @L209
000031AA                                    4953 @L208    DS    0H
                                            4954 * ***                   rd_segment_t *this = next;
000031AA B904 00F2                          4955          LGR   15,2
                                            4956 * ***                   next = (*(((struct rd_segment_head *)((this)->\
                                            4957 * seg_link .tqe_prev))->tqh_last));
000031AE E310 2008 0004          00000008   4958          LG    1,8(0,2)    ; offset of tqe_prev in 0000027
000031B4 E310 1008 0004          00000008   4959          LG    1,8(0,1)    ; offset of tqh_last in rd_segment_head
000031BA E320 1000 0004          00000000   4960          LG    2,0(0,1)
                                            4961 * ***                   rd_buf_destroy_segment(rbuf, this);
000031C0 E330 D0B0 0024          000000B0   4962          STG   3,176(0,13)
000031C6 E3F0 D0B8 0024          000000B8   4963          STG   15,184(0,13)
000031CC 4110 D0B0               000000B0   4964          LA    1,176(0,13)
000031D0 E3F0 C090 0004          00003158   4965          LG    15,@lit_789_150 ; rd_buf_destroy_segment
000031D6                                    4966 @@gen_label203 DS    0H
000031D6 05EF                               4967          BALR  14,15
000031D8                                    4968 @@gen_label204 DS    0H
                                            4969 * ***           }
000031D8                                    4970 @L209    DS    0H
000031D8 B920 0025                          4971          CGR   2,5
000031DC 4770 C0E2               000031AA   4972          BNE   @L208
                                            4973 * ***
                                            4974 * ***
                                            4975 * ***           seg->seg_of         = relof;
000031E0 E360 5018 0024          00000018   4976          STG   6,24(0,5)   ; offset of seg_of in rd_segment_s
                                            4977 * ***           rbuf->rbuf_wpos     = seg;
000031E6 E350 3018 0024          00000018   4978          STG   5,24(0,3)   ; offset of rbuf_wpos in rd_buf_s
                                            4979 * ***           rbuf->rbuf_len      = seg->seg_absof + seg->seg_of;
000031EC E3F0 5028 0004          00000028   4980          LG    15,40(0,5)  ; offset of seg_absof in rd_segment_s
000031F2 E3F0 5018 000A          00000018   4981          ALG   15,24(0,5)
000031F8 E3F0 3020 0024          00000020   4982          STG   15,32(0,3)  ; offset of rbuf_len in rd_buf_s
                                                                                                                           Page  102 
  Active Usings: @REGION_789_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4983 * ***
                                            4984 * ***           ((rbuf->rbuf_len == absof) ? (void)0 : __assert(__func\
                                            4985 * __, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 705, "rbuf->rbuf_len =\
                                            4986 * = absof"));
000031FE E340 3020 0021          00000020   4987          CLG   4,32(0,3)
00003204 4780 C17C               00003244   4988          BE    @L213
00003208                                    4989 @L212    DS    0H
00003208 E3F0 C0A8 0004          00003170   4990          LG    15,@lit_789_151
0000320E 41F0 F0DA               000000DA   4991          LA    15,218(0,15)
00003212 E3F0 D0B0 0024          000000B0   4992          STG   15,176(0,13)
00003218 E3F0 C0A0 0004          00003168   4993          LG    15,@lit_789_152
0000321E 4110 F040               00000040   4994          LA    1,64(0,15)
00003222 E310 D0B8 0024          000000B8   4995          STG   1,184(0,13)
00003228 E548 D0C0 02C1          000000C0   4996          MVGHI 192(13),705
0000322E 41F0 F272               00000272   4997          LA    15,626(0,15)
00003232 E3F0 D0C8 0024          000000C8   4998          STG   15,200(0,13)
00003238 4110 D0B0               000000B0   4999          LA    1,176(0,13)
0000323C E3F0 C098 0004          00003160   5000          LG    15,@lit_789_153 ; __assert
00003242                                    5001 @@gen_label207 DS    0H
00003242 05EF                               5002          BALR  14,15
00003244                                    5003 @@gen_label208 DS    0H
00003244                                    5004 @L213    DS    0H
                                            5005 * ***
                                            5006 * ***           return 0;
00003244 A7F9 0000               00000000   5007          LGHI  15,0        ; 0
                                            5008 * ***   }
00003248                                    5009 @ret_lab_789 DS 0H
                                            5010 * * **** Start of Epilogue
                                            5011          DCCEPIL
00003248                                    5012+         ds 0h                                                          01-DCCEP
                                            5013+* Epilog
00003248 D707 D088 D088 00000088 00000088   5014+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000324E E3D0 D080 0004          00000080   5015+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003254 E3C0 D090 0004          00000090   5016+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000325A E3B0 C018 0004          00000018   5017+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003260 E3C0 B010 0021          00000010   5018+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003266 E3E0 D008 0004          00000008   5019+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000326C EB1C D020 0004          00000020   5020+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003272 078E                               5021+         bcr 8,14                if same dsab, just return              01-DCCEP
00003274 E3F0 D010 0024          00000010   5022+         stg 15,16(0,13)         save return code                       01-DCCEP
0000327A E300 D018 0024          00000018   5023+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003280 E3F0 D090 0004          00000090   5024+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003286 E3F0 F018 0004          00000018   5025+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000328C 47F0 F040               00000040   5026+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5027+* End of Epilog
                                            5028 * * **** End of Epilogue
                                            5029          DROP  12
                                            5030 *
                                            5031 *   DSECT for automatic variables in "rd_buf_write_seek"
                                            5032 *      (FUNCTION #789)
                                            5033 *
00000000                00000000 000000B0   5034 @AUTO#rd_buf_write_seek DSECT
                                                                                                                           Page  103 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                                    5035          DS    XL168
000000A8                                    5036 rd_buf_write_seek#relof#0 DS 8XL1 ; relof
                                            5037 *
00003290                00000000 0000BFA0   5038 @CODE    CSECT
                                            5039 *
                                            5040 *
                                            5041 *
                                            5042 * ....... start of rd_buf_get_write_iov
                                            5043 rd_buf_get_write_iov ALIAS X'99846D82A4866D8785A36DA69989A3856D8996A5'
00003290                                    5044 @LNAME798 DS   0H
00003290 00000014                           5045          DC    X'00000014'
00003294 99846D82A4866D87                   5046          DC    C'rd_buf_get_write_iov'
000032A8 00                                 5047          DC    X'00'
                                            5048 rd_buf_get_write_iov DCCPRLG CINDEX=798,BASER=12,FRAME=192,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME798
                                            5049          macro
                                            5050          dccextrn &m
                                            5051          gblc    &$dccext(1000)
                                            5052          gbla    &$dccexti
                                            5053          lcla    &i
                                            5054 &$dccext(&$dccexti+1) setc    '&m'
                                            5055 &i       seta    1
                                            5056 .loop    aif    (&i gt &$dccexti).around
                                            5057          aif    ('&$dccext(&i)' eq '&m').getout
                                            5058 &i       seta    &i+1
                                            5059          ago     .loop
                                            5060 .around  anop
                                            5061 &$dccexti seta &$dccexti+1
                                            5062          extrn  &m
                                            5063 .getout  anop
                                            5064          mend
000032B0                                    5065+$eye0109    ds    0d                                                    02-DCCCA
000032B0 C4C3C3                             5066+         dc cl3'DCC'                                                    02-DCCCA
000032B3 01                                 5067+         dc xl1'01' format one                                          02-DCCCA
000032B4 00000000                           5068+         dc a(0)                                                        02-DCCCA
000032B8 0000000000003322                   5069+         dc ad(@PER_798)                                                02-DCCCA
000032C0 00000000000000C0                   5070+         dc ad(192)                                                     02-DCCCA
000032C8 0000000000000000                   5071+         dc ad(0)                                                       02-DCCCA
000032D0 0000000000001000                   5072+         dc ad(4096)                                                    02-DCCCA
000032D8 20                                 5073+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000032D9 03                                 5074+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000032DA 03                                 5075+         dc al1(3)                                                      02-DCCCA
000032DB 08                                 5076+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000032DC 00                                 5077+         dc bl.8'00000000'                                              02-DCCCA
000032DD 000000                             5078+         dc al3(0)                                                      02-DCCCA
000032E0 0000000000003290                   5079+         dc ad(@LNAME798)                                               02-DCCCA
000032E8                                    5080+         ds 0d                                                          02-DCCCA
000032E8 00000000000032B0                   5081+         dc ad($eye0109)                                                02-DCCCA
000032F0 0000000000000000                   5082+         dc ad(0)                                                       02-DCCCA
000032F8                                    5083+         ds    0d                                                       01-DCCPR
                                            5084+         entry rd_buf_get_write_iov                                     01-DCCPR
000032F8                                    5085+rd_buf_get_write_iov ds 0d                                              01-DCCPR
                                                                                                                           Page  104 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000032F8                                    5086+@REGION_798_1 ds 0h                                                     01-DCCPR
000032F8 EBEC D008 0024          00000008   5087+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000032FE E3E0 D088 0004          00000088   5088+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003304 E3C0 D090 0004          00000090   5089+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000330A B904 002E                          5090+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000330E E3B0 C018 0004          00000018   5091+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003314 A7EB 00C0               000000C0   5092+         aghi  14,192              increase by frame size               01-DCCPR
00003318 E3E0 C020 0021          00000020   5093+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000331E 4720 B020               00000020   5094+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003322                                    5095+@PER_798 ds    0h                                                       01-DCCPR
00003322 EBDE 2080 0024          00000080   5096+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003328 E3C0 2090 0024          00000090   5097+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000332E B904 00D2                          5098+         lgr   13,2                set real frame pointer               01-DCCPR
00003332 B904 00CF                          5099+         lgr   12,15               set base reg                         01-DCCPR
                        000032F8            5100+         using @REGION_798_1,12                                         01-DCCPR
00003336 B904 0051                          5101          LGR   5,1         ; ptr to parm area
                                            5102 * ******* End of Prologue
                                            5103 * *
                                            5104 * ***           const rd_segment_t *seg;
                                            5105 * ***           size_t iovcnt = 0;
0000333A A729 0000               00000000   5106          LGHI  2,0         ; 0
                                            5107 * ***           size_t sum = 0;
0000333E B904 0042                          5108          LGR   4,2         ; sum
                                            5109 * ***
                                            5110 * ***           for (seg = rbuf->rbuf_wpos ;
00003342 E3F0 5000 0004          00000000   5111          LG    15,0(0,5)   ; rbuf
00003348 E330 F018 0004          00000018   5112          LG    3,24(0,15)  ; offset of rbuf_wpos in rd_buf_s
                                            5113 * ***                seg && iovcnt < iov_max && sum < size_max ;
                                            5114 * ***                seg = ((seg)->seg_link .tqe_next)) {
0000334E 47F0 C0CA               000033C2   5115          B     @L215
00003358                                    5116          DS    0D
00003358 000000C0                           5117 @FRAMESIZE_798 DC F'192'
0000335C 00000000
00003360 0000000000000580                   5118 @lit_798_158 DC AD(rd_segment_write_remains)
00003368                                    5119 @L214    DS    0H
                                            5120 * ***                   size_t len;
                                            5121 * ***                   void *p;
                                            5122 * ***
                                            5123 * ***                   len = rd_segment_write_remains(seg, &p);
00003368 E330 D0B0 0024          000000B0   5124          STG   3,176(0,13)
0000336E 41F0 D0A8               000000A8   5125          LA    15,168(0,13)
00003372 E3F0 D0B8 0024          000000B8   5126          STG   15,184(0,13)
00003378 4110 D0B0               000000B0   5127          LA    1,176(0,13)
0000337C E3F0 C068 0004          00003360   5128          LG    15,@lit_798_158 ; rd_segment_write_remains
00003382                                    5129 @@gen_label209 DS    0H
00003382 05EF                               5130          BALR  14,15
00003384                                    5131 @@gen_label210 DS    0H
                                            5132 * ***                   if (((len == 0)))
00003384 B902 001F                          5133          LTGR  1,15
00003388 4780 C0C4               000033BC   5134          BE    @L218
                                            5135 * ***                           continue;
0000338C                                    5136 @L219    DS    0H
                                                                                                                           Page  105 
  Active Usings: @REGION_798_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5137 * ***
                                            5138 * ***                   iovs[iovcnt].iov_base  = p;
0000338C E310 5008 0004          00000008   5139          LG    1,8(0,5)    ; iovs
00003392 EB62 0004 000D          00000004   5140          SLLG  6,2,4(0)    ; *0x10
00003398 E370 D0A8 0004          000000A8   5141          LG    7,168(0,13) ; p
0000339E E376 1000 0024          00000000   5142          STG   7,0(6,1)
                                            5143 * ***                   iovs[iovcnt++].iov_len = len;
000033A4 B904 0062                          5144          LGR   6,2
000033A8 A72B 0001               00000001   5145          AGHI  2,1
000033AC EB66 0004 000D          00000004   5146          SLLG  6,6,4(0)    ; *0x10
000033B2 E3F6 1008 0024          00000008   5147          STG   15,8(6,1)   ; offset of iov_len in iovec
                                            5148 * ***
                                            5149 * ***                   sum += len;
000033B8 B90A 004F                          5150          ALGR  4,15
                                            5151 * ***           }
000033BC                                    5152 @L218    DS    0H
000033BC E330 3000 0004          00000000   5153          LG    3,0(0,3)    ; seg
000033C2                                    5154 @L215    DS    0H
000033C2 B902 00F3                          5155          LTGR  15,3
000033C6 4780 C0E6               000033DE   5156          BZ    @L216
000033CA E320 5018 0021          00000018   5157          CLG   2,24(0,5)
000033D0 47B0 C0E6               000033DE   5158          BNL   @L216
000033D4 E340 5020 0021          00000020   5159          CLG   4,32(0,5)
000033DA 4740 C070               00003368   5160          BL    @L214
000033DE                                    5161 @L216    DS    0H
                                            5162 * ***
                                            5163 * ***           *iovcntp = iovcnt;
000033DE E3F0 5010 0004          00000010   5164          LG    15,16(0,5)  ; iovcntp
000033E4 E320 F000 0024          00000000   5165          STG   2,0(0,15)   ; iovcntp
                                            5166 * ***
                                            5167 * ***           return sum;
000033EA B904 00F4                          5168          LGR   15,4
                                            5169 * ***   }
                                            5170 * * **** Start of Epilogue
                                            5171          DCCEPIL
000033EE                                    5172+         ds 0h                                                          01-DCCEP
                                            5173+* Epilog
000033EE D707 D088 D088 00000088 00000088   5174+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000033F4 E3D0 D080 0004          00000080   5175+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000033FA E3C0 D090 0004          00000090   5176+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003400 E3B0 C018 0004          00000018   5177+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003406 E3C0 B010 0021          00000010   5178+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000340C E3E0 D008 0004          00000008   5179+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003412 EB1C D020 0004          00000020   5180+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003418 078E                               5181+         bcr 8,14                if same dsab, just return              01-DCCEP
0000341A E3F0 D010 0024          00000010   5182+         stg 15,16(0,13)         save return code                       01-DCCEP
00003420 E300 D018 0024          00000018   5183+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003426 E3F0 D090 0004          00000090   5184+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000342C E3F0 F018 0004          00000018   5185+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003432 47F0 F040               00000040   5186+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5187+* End of Epilog
                                            5188 * * **** End of Epilogue
                                                                                                                           Page  106 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5189          DROP  12
                                            5190 *
                                            5191 *   DSECT for automatic variables in "rd_buf_get_write_iov"
                                            5192 *      (FUNCTION #798)
                                            5193 *
00000000                00000000 000000B0   5194 @AUTO#rd_buf_get_write_iov DSECT
00000000                                    5195          DS    XL168
000000A8                                    5196 rd_buf_get_write_iov#len#1 DS 8XL1 ; len
000000B0                000000B0 000000A8   5197          ORG   @AUTO#rd_buf_get_write_iov+168
000000A8                                    5198 rd_buf_get_write_iov#sum#0 DS 8XL1 ; sum
000000B0                000000B0 000000A8   5199          ORG   @AUTO#rd_buf_get_write_iov+168
000000A8                                    5200 rd_buf_get_write_iov#iovcnt#0 DS 8XL1 ; iovcnt
                                            5201 *
00003436                00000000 0000BFA0   5202 @CODE    CSECT
                                            5203 *
                                            5204 *
                                            5205 *
                                            5206 * ....... start of rd_slice_init_seg
                                            5207 rd_slice_init_seg ALIAS X'99846DA2938983856D899589A36DA28587'
00003436                                    5208 @LNAME806 DS   0H
00003436 00000011                           5209          DC    X'00000011'
0000343A 99846DA293898385                   5210          DC    C'rd_slice_init_seg'
0000344B 00                                 5211          DC    X'00'
                                            5212 rd_slice_init_seg DCCPRLG CINDEX=806,BASER=12,FRAME=200,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME806
                                            5213          macro
                                            5214          dccextrn &m
                                            5215          gblc    &$dccext(1000)
                                            5216          gbla    &$dccexti
                                            5217          lcla    &i
                                            5218 &$dccext(&$dccexti+1) setc    '&m'
                                            5219 &i       seta    1
                                            5220 .loop    aif    (&i gt &$dccexti).around
                                            5221          aif    ('&$dccext(&i)' eq '&m').getout
                                            5222 &i       seta    &i+1
                                            5223          ago     .loop
                                            5224 .around  anop
                                            5225 &$dccexti seta &$dccexti+1
                                            5226          extrn  &m
                                            5227 .getout  anop
                                            5228          mend
00003450                                    5229+$eye0112    ds    0d                                                    02-DCCCA
00003450 C4C3C3                             5230+         dc cl3'DCC'                                                    02-DCCCA
00003453 01                                 5231+         dc xl1'01' format one                                          02-DCCCA
00003454 00000000                           5232+         dc a(0)                                                        02-DCCCA
00003458 00000000000034C2                   5233+         dc ad(@PER_806)                                                02-DCCCA
00003460 00000000000000C8                   5234+         dc ad(200)                                                     02-DCCCA
00003468 0000000000000000                   5235+         dc ad(0)                                                       02-DCCCA
00003470 0000000000001000                   5236+         dc ad(4096)                                                    02-DCCCA
00003478 20                                 5237+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003479 03                                 5238+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000347A 03                                 5239+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page  107 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000347B 08                                 5240+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000347C 00                                 5241+         dc bl.8'00000000'                                              02-DCCCA
0000347D 000000                             5242+         dc al3(0)                                                      02-DCCCA
00003480 0000000000003436                   5243+         dc ad(@LNAME806)                                               02-DCCCA
00003488                                    5244+         ds 0d                                                          02-DCCCA
00003488 0000000000003450                   5245+         dc ad($eye0112)                                                02-DCCCA
00003490 0000000000000000                   5246+         dc ad(0)                                                       02-DCCCA
00003498                                    5247+         ds    0d                                                       01-DCCPR
                                            5248+         entry rd_slice_init_seg                                        01-DCCPR
00003498                                    5249+rd_slice_init_seg ds 0d                                                 01-DCCPR
00003498                                    5250+@REGION_806_1 ds 0h                                                     01-DCCPR
00003498 EBEC D008 0024          00000008   5251+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000349E E3E0 D088 0004          00000088   5252+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000034A4 E3C0 D090 0004          00000090   5253+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000034AA B904 002E                          5254+         lgr   2,14                copy addr of our savearea            01-DCCPR
000034AE E3B0 C018 0004          00000018   5255+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000034B4 A7EB 00C8               000000C8   5256+         aghi  14,200              increase by frame size               01-DCCPR
000034B8 E3E0 C020 0021          00000020   5257+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000034BE 4720 B020               00000020   5258+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000034C2                                    5259+@PER_806 ds    0h                                                       01-DCCPR
000034C2 EBDE 2080 0024          00000080   5260+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000034C8 E3C0 2090 0024          00000090   5261+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000034CE B904 00D2                          5262+         lgr   13,2                set real frame pointer               01-DCCPR
000034D2 B904 00CF                          5263+         lgr   12,15               set base reg                         01-DCCPR
                        00003498            5264+         using @REGION_806_1,12                                         01-DCCPR
000034D6 B904 0041                          5265          LGR   4,1         ; ptr to parm area
                                            5266 * ******* End of Prologue
                                            5267 * *
000034DA EB23 4000 0004          00000000   5268          LMG   2,3,0(4)    ; slice
000034E0 E3F0 4010 0004          00000010   5269          LG    15,16(0,4)  ; seg
000034E6 E310 4018 0004          00000018   5270          LG    1,24(0,4)   ; rof
                                            5271 * ***
                                            5272 * ***           if (((rbuf->rbuf_len < (seg->seg_absof + rof + size)))\
                                            5273 * )
000034EC E350 3020 0004          00000020   5274          LG    5,32(0,3)   ; offset of rbuf_len in rd_buf_s
000034F2 B904 0061                          5275          LGR   6,1
000034F6 E360 F028 000A          00000028   5276          ALG   6,40(0,15)
000034FC E360 4020 000A          00000020   5277          ALG   6,32(0,4)
00003502 B921 0056                          5278          CLGR  5,6
00003506 47B0 C0A8               00003540   5279          BNL   @L220
                                            5280 * ***                   return -1;
0000350A A7F9 FFFF               0000FFFF   5281          LGHI  15,-1       ; -1
0000350E 47F0 C196               0000362E   5282          B     @ret_lab_806
00003518                                    5283          DS    0D
00003518 000000C8                           5284 @FRAMESIZE_806 DC F'200'
0000351C 00000000
00003520 0000000000000000                   5285 @lit_806_163 DC AD(__assert)
00003528 000000000000CB02                   5286 @lit_806_162 DC AD(@strings@)
00003530 000000000000BFA0                   5287 @lit_806_161 DC AD(@DATA)
00003538 0000000000000638                   5288 @lit_806_164 DC AD(rd_buf_len)
00003540                                    5289 @L220    DS    0H
                                            5290 * ***
                                                                                                                           Page  108 
  Active Usings: @REGION_806_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5291 * ***           slice->buf    = rbuf;
00003540 E330 2000 0024          00000000   5292          STG   3,0(0,2)    ; slice
                                            5293 * ***           slice->seg    = seg;
00003546 E3F0 2008 0024          00000008   5294          STG   15,8(0,2)   ; offset of seg in rd_slice_s
                                            5295 * ***           slice->rof    = rof;
0000354C E310 2010 0024          00000010   5296          STG   1,16(0,2)   ; offset of rof in rd_slice_s
                                            5297 * ***           slice->start  = seg->seg_absof + rof;
00003552 B904 0051                          5298          LGR   5,1
00003556 E350 F028 000A          00000028   5299          ALG   5,40(0,15)
0000355C E350 2018 0024          00000018   5300          STG   5,24(0,2)   ; offset of start in rd_slice_s
                                            5301 * ***           slice->end    = slice->start + size;
00003562 E350 4020 000A          00000020   5302          ALG   5,32(0,4)
00003568 E350 2020 0024          00000020   5303          STG   5,32(0,2)   ; offset of end in rd_slice_s
                                            5304 * ***
                                            5305 * ***           ((seg->seg_absof+rof >= slice->start && seg->seg_absof\
                                            5306 * +rof <= slice->end) ? (void)0 : __assert(__func__, "C:\\asgkafka\\li\
                                            5307 * brdkafka\\src\\rdbuf.c", 787, "seg->seg_absof+rof >= slice->start &&\
                                            5308 *  seg->seg_absof+rof <= slice->end"));
0000356E B904 0041                          5309          LGR   4,1
00003572 E340 F028 000A          00000028   5310          ALG   4,40(0,15)
00003578 E340 2018 0021          00000018   5311          CLG   4,24(0,2)
0000357E 4740 C0FA               00003592   5312          BL    @L221
00003582 E310 F028 000A          00000028   5313          ALG   1,40(0,15)
00003588 E310 2020 0021          00000020   5314          CLG   1,32(0,2)
0000358E 47D0 C136               000035CE   5315          BNH   @L222
00003592                                    5316 @L221    DS    0H
00003592 E3F0 C098 0004          00003530   5317          LG    15,@lit_806_161
00003598 41F0 F0EC               000000EC   5318          LA    15,236(0,15)
0000359C E3F0 D0A8 0024          000000A8   5319          STG   15,168(0,13)
000035A2 E3F0 C090 0004          00003528   5320          LG    15,@lit_806_162
000035A8 4110 F040               00000040   5321          LA    1,64(0,15)
000035AC E310 D0B0 0024          000000B0   5322          STG   1,176(0,13)
000035B2 E548 D0B8 0313          000000B8   5323          MVGHI 184(13),787
000035B8 41F0 F28A               0000028A   5324          LA    15,650(0,15)
000035BC E3F0 D0C0 0024          000000C0   5325          STG   15,192(0,13)
000035C2 4110 D0A8               000000A8   5326          LA    1,168(0,13)
000035C6 E3F0 C088 0004          00003520   5327          LG    15,@lit_806_163 ; __assert
000035CC                                    5328 @@gen_label218 DS    0H
000035CC 05EF                               5329          BALR  14,15
000035CE                                    5330 @@gen_label219 DS    0H
000035CE                                    5331 @L222    DS    0H
                                            5332 * ***
                                            5333 * ***
                                            5334 * ***           ((slice->end <= rd_buf_len(rbuf)) ? (void)0 : __assert\
                                            5335 * (__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 790, "slice->en\
                                            5336 * d <= rd_buf_len(rbuf)"));
000035CE E320 2020 0004          00000020   5337          LG    2,32(0,2)   ; offset of end in rd_slice_s
000035D4 E330 D0A8 0024          000000A8   5338          STG   3,168(0,13)
000035DA 4110 D0A8               000000A8   5339          LA    1,168(0,13)
000035DE E3F0 C0A0 0004          00003538   5340          LG    15,@lit_806_164 ; rd_buf_len
000035E4                                    5341 @@gen_label220 DS    0H
000035E4 05EF                               5342          BALR  14,15
                                                                                                                           Page  109 
  Active Usings: @REGION_806_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000035E6                                    5343 @@gen_label221 DS    0H
000035E6 B921 002F                          5344          CLGR  2,15
000035EA 47D0 C192               0000362A   5345          BNH   @L224
000035EE                                    5346 @L223    DS    0H
000035EE E3F0 C098 0004          00003530   5347          LG    15,@lit_806_161
000035F4 41F0 F0EC               000000EC   5348          LA    15,236(0,15)
000035F8 E3F0 D0A8 0024          000000A8   5349          STG   15,168(0,13)
000035FE E3F0 C090 0004          00003528   5350          LG    15,@lit_806_162
00003604 4110 F040               00000040   5351          LA    1,64(0,15)
00003608 E310 D0B0 0024          000000B0   5352          STG   1,176(0,13)
0000360E E548 D0B8 0316          000000B8   5353          MVGHI 184(13),790
00003614 41F0 F2D2               000002D2   5354          LA    15,722(0,15)
00003618 E3F0 D0C0 0024          000000C0   5355          STG   15,192(0,13)
0000361E 4110 D0A8               000000A8   5356          LA    1,168(0,13)
00003622 E3F0 C088 0004          00003520   5357          LG    15,@lit_806_163 ; __assert
00003628                                    5358 @@gen_label223 DS    0H
00003628 05EF                               5359          BALR  14,15
0000362A                                    5360 @@gen_label224 DS    0H
0000362A                                    5361 @L224    DS    0H
                                            5362 * ***
                                            5363 * ***           return 0;
0000362A A7F9 0000               00000000   5364          LGHI  15,0        ; 0
                                            5365 * ***   }
0000362E                                    5366 @ret_lab_806 DS 0H
                                            5367 * * **** Start of Epilogue
                                            5368          DCCEPIL
0000362E                                    5369+         ds 0h                                                          01-DCCEP
                                            5370+* Epilog
0000362E D707 D088 D088 00000088 00000088   5371+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003634 E3D0 D080 0004          00000080   5372+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000363A E3C0 D090 0004          00000090   5373+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003640 E3B0 C018 0004          00000018   5374+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003646 E3C0 B010 0021          00000010   5375+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000364C E3E0 D008 0004          00000008   5376+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003652 EB1C D020 0004          00000020   5377+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003658 078E                               5378+         bcr 8,14                if same dsab, just return              01-DCCEP
0000365A E3F0 D010 0024          00000010   5379+         stg 15,16(0,13)         save return code                       01-DCCEP
00003660 E300 D018 0024          00000018   5380+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003666 E3F0 D090 0004          00000090   5381+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000366C E3F0 F018 0004          00000018   5382+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003672 47F0 F040               00000040   5383+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5384+* End of Epilog
                                            5385 * * **** End of Epilogue
                                            5386          DROP  12
                                            5387 *
                                            5388 *   DSECT for automatic variables in "rd_slice_init_seg"
                                            5389 *      (FUNCTION #806)
                                            5390 *
00000000                00000000 000000A8   5391 @AUTO#rd_slice_init_seg DSECT
00000000                                    5392          DS    XL168
                                            5393 *
00003676                00000000 0000BFA0   5394 @CODE    CSECT
                                                                                                                           Page  110 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5395 *
                                            5396 *
                                            5397 *
                                            5398 * ....... start of rd_slice_init
                                            5399 rd_slice_init ALIAS X'99846DA2938983856D899589A3'
00003676                                    5400 @LNAME807 DS   0H
00003676 0000000D                           5401          DC    X'0000000D'
0000367A 99846DA293898385                   5402          DC    C'rd_slice_init'
00003687 00                                 5403          DC    X'00'
                                            5404 rd_slice_init DCCPRLG CINDEX=807,BASER=12,FRAME=216,ENTRY=YES,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME807
                                            5405          macro
                                            5406          dccextrn &m
                                            5407          gblc    &$dccext(1000)
                                            5408          gbla    &$dccexti
                                            5409          lcla    &i
                                            5410 &$dccext(&$dccexti+1) setc    '&m'
                                            5411 &i       seta    1
                                            5412 .loop    aif    (&i gt &$dccexti).around
                                            5413          aif    ('&$dccext(&i)' eq '&m').getout
                                            5414 &i       seta    &i+1
                                            5415          ago     .loop
                                            5416 .around  anop
                                            5417 &$dccexti seta &$dccexti+1
                                            5418          extrn  &m
                                            5419 .getout  anop
                                            5420          mend
00003688                                    5421+$eye0115    ds    0d                                                    02-DCCCA
00003688 C4C3C3                             5422+         dc cl3'DCC'                                                    02-DCCCA
0000368B 01                                 5423+         dc xl1'01' format one                                          02-DCCCA
0000368C 00000000                           5424+         dc a(0)                                                        02-DCCCA
00003690 00000000000036FA                   5425+         dc ad(@PER_807)                                                02-DCCCA
00003698 00000000000000D8                   5426+         dc ad(216)                                                     02-DCCCA
000036A0 0000000000000000                   5427+         dc ad(0)                                                       02-DCCCA
000036A8 0000000000001000                   5428+         dc ad(4096)                                                    02-DCCCA
000036B0 20                                 5429+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000036B1 03                                 5430+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000036B2 03                                 5431+         dc al1(3)                                                      02-DCCCA
000036B3 08                                 5432+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000036B4 00                                 5433+         dc bl.8'00000000'                                              02-DCCCA
000036B5 000000                             5434+         dc al3(0)                                                      02-DCCCA
000036B8 0000000000003676                   5435+         dc ad(@LNAME807)                                               02-DCCCA
000036C0                                    5436+         ds 0d                                                          02-DCCCA
000036C0 0000000000003688                   5437+         dc ad($eye0115)                                                02-DCCCA
000036C8 0000000000000000                   5438+         dc ad(0)                                                       02-DCCCA
000036D0                                    5439+         ds    0d                                                       01-DCCPR
                                            5440+         entry rd_slice_init                                            01-DCCPR
000036D0                                    5441+rd_slice_init ds 0d                                                     01-DCCPR
000036D0                                    5442+@REGION_807_1 ds 0h                                                     01-DCCPR
000036D0 EBEC D008 0024          00000008   5443+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000036D6 E3E0 D088 0004          00000088   5444+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000036DC E3C0 D090 0004          00000090   5445+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
                                                                                                                           Page  111 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000036E2 B904 002E                          5446+         lgr   2,14                copy addr of our savearea            01-DCCPR
000036E6 E3B0 C018 0004          00000018   5447+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000036EC A7EB 00D8               000000D8   5448+         aghi  14,216              increase by frame size               01-DCCPR
000036F0 E3E0 C020 0021          00000020   5449+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000036F6 4720 B020               00000020   5450+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000036FA                                    5451+@PER_807 ds    0h                                                       01-DCCPR
000036FA EBDE 2080 0024          00000080   5452+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003700 E3C0 2090 0024          00000090   5453+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003706 B904 00D2                          5454+         lgr   13,2                set real frame pointer               01-DCCPR
0000370A B904 00CF                          5455+         lgr   12,15               set base reg                         01-DCCPR
                        000036D0            5456+         using @REGION_807_1,12                                         01-DCCPR
0000370E B904 0021                          5457          LGR   2,1         ; ptr to parm area
                                            5458 * ******* End of Prologue
                                            5459 * *
                                            5460 * ***           const rd_segment_t *seg = rd_buf_get_segment_at_offset\
                                            5461 * (rbuf, ((void *)0),
                                            5462 * ***                                                                 \
                                            5463 *  absof);
00003712 E3F0 2008 0004          00000008   5464          LG    15,8(0,2)   ; rbuf
00003718 E3F0 D0B0 0024          000000B0   5465          STG   15,176(0,13)
0000371E D707 D0B8 D0B8 000000B8 000000B8   5466          XC    184(8,13),184(13)
00003724 E3F0 2010 0004          00000010   5467          LG    15,16(0,2)  ; absof
0000372A E3F0 D0C0 0024          000000C0   5468          STG   15,192(0,13)
00003730 4110 D0B0               000000B0   5469          LA    1,176(0,13)
00003734 E3F0 C088 0004          00003758   5470          LG    15,@lit_807_170 ; rd_buf_get_segment_at_offset
0000373A                                    5471 @@gen_label225 DS    0H
0000373A 05EF                               5472          BALR  14,15
0000373C                                    5473 @@gen_label226 DS    0H
                                            5474 * ***           if (((!seg)))
0000373C B902 001F                          5475          LTGR  1,15
00003740 4770 C098               00003768   5476          BNZ   @L225
                                            5477 * ***                   return -1;
00003744 A7F9 FFFF               0000FFFF   5478          LGHI  15,-1       ; -1
00003748 47F0 C0E4               000037B4   5479          B     @ret_lab_807
00003750                                    5480          DS    0D
00003750 000000D8                           5481 @FRAMESIZE_807 DC F'216'
00003754 00000000
00003758 0000000000001778                   5482 @lit_807_170 DC AD(rd_buf_get_segment_at_offset)
00003760 0000000000003498                   5483 @lit_807_172 DC AD(rd_slice_init_seg)
00003768                                    5484 @L225    DS    0H
                                            5485 * ***
                                            5486 * ***           return rd_slice_init_seg(slice, rbuf, seg,
                                            5487 * ***                                    absof - seg->seg_absof, size)\
                                            5488 * ;
00003768 E310 2000 0004          00000000   5489          LG    1,0(0,2)    ; slice
0000376E E310 D0B0 0024          000000B0   5490          STG   1,176(0,13)
00003774 E310 2008 0004          00000008   5491          LG    1,8(0,2)    ; rbuf
0000377A E310 D0B8 0024          000000B8   5492          STG   1,184(0,13)
00003780 E3F0 D0C0 0024          000000C0   5493          STG   15,192(0,13)
00003786 E310 2010 0004          00000010   5494          LG    1,16(0,2)   ; absof
0000378C E310 F028 000B          00000028   5495          SLG   1,40(0,15)
00003792 E310 D0C8 0024          000000C8   5496          STG   1,200(0,13)
                                                                                                                           Page  112 
  Active Usings: @REGION_807_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003798 E3F0 2018 0004          00000018   5497          LG    15,24(0,2)  ; size
0000379E E3F0 D0D0 0024          000000D0   5498          STG   15,208(0,13)
000037A4 4110 D0B0               000000B0   5499          LA    1,176(0,13)
000037A8 E3F0 C090 0004          00003760   5500          LG    15,@lit_807_172 ; rd_slice_init_seg
000037AE                                    5501 @@gen_label228 DS    0H
000037AE 05EF                               5502          BALR  14,15
000037B0                                    5503 @@gen_label229 DS    0H
000037B0 B914 00FF                          5504          LGFR  15,15
                                            5505 * ***   }
000037B4                                    5506 @ret_lab_807 DS 0H
                                            5507 * * **** Start of Epilogue
                                            5508          DCCEPIL
000037B4                                    5509+         ds 0h                                                          01-DCCEP
                                            5510+* Epilog
000037B4 D707 D088 D088 00000088 00000088   5511+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000037BA E3D0 D080 0004          00000080   5512+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000037C0 E3C0 D090 0004          00000090   5513+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000037C6 E3B0 C018 0004          00000018   5514+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000037CC E3C0 B010 0021          00000010   5515+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000037D2 E3E0 D008 0004          00000008   5516+         lg  14,8(0,13)          load up return address                 01-DCCEP
000037D8 EB1C D020 0004          00000020   5517+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000037DE 078E                               5518+         bcr 8,14                if same dsab, just return              01-DCCEP
000037E0 E3F0 D010 0024          00000010   5519+         stg 15,16(0,13)         save return code                       01-DCCEP
000037E6 E300 D018 0024          00000018   5520+         stg 0,24(0,13)          save more return code                  01-DCCEP
000037EC E3F0 D090 0004          00000090   5521+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000037F2 E3F0 F018 0004          00000018   5522+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000037F8 47F0 F040               00000040   5523+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5524+* End of Epilog
                                            5525 * * **** End of Epilogue
                                            5526          DROP  12
                                            5527 *
                                            5528 *   DSECT for automatic variables in "rd_slice_init"
                                            5529 *      (FUNCTION #807)
                                            5530 *
00000000                00000000 000000A8   5531 @AUTO#rd_slice_init DSECT
00000000                                    5532          DS    XL168
                                            5533 *
000037FC                00000000 0000BFA0   5534 @CODE    CSECT
                                            5535 *
                                            5536 *
                                            5537 *
                                            5538 * ....... start of rd_slice_init_full
                                            5539 rd_slice_init_full ALIAS X'99846DA2938983856D899589A36D86A49393'
000037FC                                    5540 @LNAME808 DS   0H
000037FC 00000012                           5541          DC    X'00000012'
00003800 99846DA293898385                   5542          DC    C'rd_slice_init_full'
00003812 00                                 5543          DC    X'00'
                                            5544 rd_slice_init_full DCCPRLG CINDEX=808,BASER=12,FRAME=208,ENTRY=YES,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME808
                                            5545          macro
                                            5546          dccextrn &m
                                            5547          gblc    &$dccext(1000)
                                                                                                                           Page  113 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5548          gbla    &$dccexti
                                            5549          lcla    &i
                                            5550 &$dccext(&$dccexti+1) setc    '&m'
                                            5551 &i       seta    1
                                            5552 .loop    aif    (&i gt &$dccexti).around
                                            5553          aif    ('&$dccext(&i)' eq '&m').getout
                                            5554 &i       seta    &i+1
                                            5555          ago     .loop
                                            5556 .around  anop
                                            5557 &$dccexti seta &$dccexti+1
                                            5558          extrn  &m
                                            5559 .getout  anop
                                            5560          mend
00003818                                    5561+$eye0118    ds    0d                                                    02-DCCCA
00003818 C4C3C3                             5562+         dc cl3'DCC'                                                    02-DCCCA
0000381B 01                                 5563+         dc xl1'01' format one                                          02-DCCCA
0000381C 00000000                           5564+         dc a(0)                                                        02-DCCCA
00003820 000000000000388A                   5565+         dc ad(@PER_808)                                                02-DCCCA
00003828 00000000000000D0                   5566+         dc ad(208)                                                     02-DCCCA
00003830 0000000000000000                   5567+         dc ad(0)                                                       02-DCCCA
00003838 0000000000001000                   5568+         dc ad(4096)                                                    02-DCCCA
00003840 20                                 5569+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003841 03                                 5570+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003842 03                                 5571+         dc al1(3)                                                      02-DCCCA
00003843 08                                 5572+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003844 00                                 5573+         dc bl.8'00000000'                                              02-DCCCA
00003845 000000                             5574+         dc al3(0)                                                      02-DCCCA
00003848 00000000000037FC                   5575+         dc ad(@LNAME808)                                               02-DCCCA
00003850                                    5576+         ds 0d                                                          02-DCCCA
00003850 0000000000003818                   5577+         dc ad($eye0118)                                                02-DCCCA
00003858 0000000000000000                   5578+         dc ad(0)                                                       02-DCCCA
00003860                                    5579+         ds    0d                                                       01-DCCPR
                                            5580+         entry rd_slice_init_full                                       01-DCCPR
00003860                                    5581+rd_slice_init_full ds 0d                                                01-DCCPR
00003860                                    5582+@REGION_808_1 ds 0h                                                     01-DCCPR
00003860 EBEC D008 0024          00000008   5583+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003866 E3E0 D088 0004          00000088   5584+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000386C E3C0 D090 0004          00000090   5585+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003872 B904 002E                          5586+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003876 E3B0 C018 0004          00000018   5587+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000387C A7EB 00D0               000000D0   5588+         aghi  14,208              increase by frame size               01-DCCPR
00003880 E3E0 C020 0021          00000020   5589+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003886 4720 B020               00000020   5590+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000388A                                    5591+@PER_808 ds    0h                                                       01-DCCPR
0000388A EBDE 2080 0024          00000080   5592+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003890 E3C0 2090 0024          00000090   5593+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003896 B904 00D2                          5594+         lgr   13,2                set real frame pointer               01-DCCPR
0000389A B904 00CF                          5595+         lgr   12,15               set base reg                         01-DCCPR
                        00003860            5596+         using @REGION_808_1,12                                         01-DCCPR
0000389E B904 0021                          5597          LGR   2,1         ; ptr to parm area
                                            5598 * ******* End of Prologue
                                            5599 * *
                                                                                                                           Page  114 
  Active Usings: @REGION_808_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5600 * ***           int r = rd_slice_init(slice, rbuf, 0, rd_buf_len(rbuf)\
                                            5601 * );
000038A2 E3F0 2008 0004          00000008   5602          LG    15,8(0,2)   ; rbuf
000038A8 E3F0 D0B0 0024          000000B0   5603          STG   15,176(0,13)
000038AE 4110 D0B0               000000B0   5604          LA    1,176(0,13)
000038B2 E3F0 C120 0004          00003980   5605          LG    15,@lit_808_174 ; rd_buf_len
000038B8                                    5606 @@gen_label230 DS    0H
000038B8 05EF                               5607          BALR  14,15
000038BA                                    5608 @@gen_label231 DS    0H
000038BA E310 2000 0004          00000000   5609          LG    1,0(0,2)    ; slice
000038C0 E310 D0B0 0024          000000B0   5610          STG   1,176(0,13)
000038C6 E310 2008 0004          00000008   5611          LG    1,8(0,2)    ; rbuf
000038CC E310 D0B8 0024          000000B8   5612          STG   1,184(0,13)
000038D2 D707 D0C0 D0C0 000000C0 000000C0   5613          XC    192(8,13),192(13)
000038D8 E3F0 D0C8 0024          000000C8   5614          STG   15,200(0,13)
000038DE 4110 D0B0               000000B0   5615          LA    1,176(0,13)
000038E2 E3F0 C128 0004          00003988   5616          LG    15,@lit_808_175 ; rd_slice_init
000038E8                                    5617 @@gen_label232 DS    0H
000038E8 05EF                               5618          BALR  14,15
000038EA                                    5619 @@gen_label233 DS    0H
                                            5620 * ***           ((r == 0) ? (void)0 : __assert(__func__, "C:\\asgkafka\
                                            5621 * \\librdkafka\\src\\rdbuf.c", 817, "r == 0"));
000038EA 12FF                               5622          LTR   15,15
000038EC 4780 C0CC               0000392C   5623          BE    @L227
000038F0                                    5624 @L226    DS    0H
000038F0 E3F0 C140 0004          000039A0   5625          LG    15,@lit_808_176
000038F6 41F0 F0FE               000000FE   5626          LA    15,254(0,15)
000038FA E3F0 D0B0 0024          000000B0   5627          STG   15,176(0,13)
00003900 E3F0 C138 0004          00003998   5628          LG    15,@lit_808_177
00003906 4110 F040               00000040   5629          LA    1,64(0,15)
0000390A E310 D0B8 0024          000000B8   5630          STG   1,184(0,13)
00003910 E548 D0C0 0331          000000C0   5631          MVGHI 192(13),817
00003916 41F0 F2F2               000002F2   5632          LA    15,754(0,15)
0000391A E3F0 D0C8 0024          000000C8   5633          STG   15,200(0,13)
00003920 4110 D0B0               000000B0   5634          LA    1,176(0,13)
00003924 E3F0 C130 0004          00003990   5635          LG    15,@lit_808_178 ; __assert
0000392A                                    5636 @@gen_label235 DS    0H
0000392A 05EF                               5637          BALR  14,15
0000392C                                    5638 @@gen_label236 DS    0H
0000392C                                    5639 @L227    DS    0H
                                            5640 * ***   }
0000392C                                    5641 @ret_lab_808 DS 0H
                                            5642 * * **** Start of Epilogue
                                            5643          DCCEPIL
0000392C                                    5644+         ds 0h                                                          01-DCCEP
                                            5645+* Epilog
0000392C D707 D088 D088 00000088 00000088   5646+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003932 E3D0 D080 0004          00000080   5647+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003938 E3C0 D090 0004          00000090   5648+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000393E E3B0 C018 0004          00000018   5649+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003944 E3C0 B010 0021          00000010   5650+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000394A E3E0 D008 0004          00000008   5651+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page  115 
  Active Usings: @REGION_808_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003950 EB1C D020 0004          00000020   5652+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003956 078E                               5653+         bcr 8,14                if same dsab, just return              01-DCCEP
00003958 E3F0 D010 0024          00000010   5654+         stg 15,16(0,13)         save return code                       01-DCCEP
0000395E E300 D018 0024          00000018   5655+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003964 E3F0 D090 0004          00000090   5656+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000396A E3F0 F018 0004          00000018   5657+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003970 47F0 F040               00000040   5658+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5659+* End of Epilog
                                            5660 * * **** End of Epilogue
00003978                                    5661          DS    0D
00003978 000000D0                           5662 @FRAMESIZE_808 DC F'208'
0000397C 00000000
00003980 0000000000000638                   5663 @lit_808_174 DC AD(rd_buf_len)
00003988 00000000000036D0                   5664 @lit_808_175 DC AD(rd_slice_init)
00003990 0000000000000000                   5665 @lit_808_178 DC AD(__assert)
00003998 000000000000CB02                   5666 @lit_808_177 DC AD(@strings@)
000039A0 000000000000BFA0                   5667 @lit_808_176 DC AD(@DATA)
                                            5668          DROP  12
                                            5669 *
                                            5670 *   DSECT for automatic variables in "rd_slice_init_full"
                                            5671 *      (FUNCTION #808)
                                            5672 *
00000000                00000000 000000AC   5673 @AUTO#rd_slice_init_full DSECT
00000000                                    5674          DS    XL168
000000A8                                    5675 rd_slice_init_full#r#0 DS 1F ; r
                                            5676 *
000039A8                00000000 0000BFA0   5677 @CODE    CSECT
                                            5678 *
                                            5679 *
                                            5680 *
                                            5681 * ....... start of rd_slice_reader0
                                            5682 rd_slice_reader0 ALIAS X'99846DA2938983856D998581848599F0'
000039A8                                    5683 @LNAME849 DS   0H
000039A8 00000010                           5684          DC    X'00000010'
000039AC 99846DA293898385                   5685          DC    C'rd_slice_reader0'
000039BC 00                                 5686          DC    X'00'
                                            5687 rd_slice_reader0 DCCPRLG CINDEX=849,BASER=12,FRAME=208,ENTRY=YES,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME849
                                            5688          macro
                                            5689          dccextrn &m
                                            5690          gblc    &$dccext(1000)
                                            5691          gbla    &$dccexti
                                            5692          lcla    &i
                                            5693 &$dccext(&$dccexti+1) setc    '&m'
                                            5694 &i       seta    1
                                            5695 .loop    aif    (&i gt &$dccexti).around
                                            5696          aif    ('&$dccext(&i)' eq '&m').getout
                                            5697 &i       seta    &i+1
                                            5698          ago     .loop
                                            5699 .around  anop
                                            5700 &$dccexti seta &$dccexti+1
                                            5701          extrn  &m
                                                                                                                           Page  116 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5702 .getout  anop
                                            5703          mend
000039C0                                    5704+$eye0121    ds    0d                                                    02-DCCCA
000039C0 C4C3C3                             5705+         dc cl3'DCC'                                                    02-DCCCA
000039C3 01                                 5706+         dc xl1'01' format one                                          02-DCCCA
000039C4 00000000                           5707+         dc a(0)                                                        02-DCCCA
000039C8 0000000000003A32                   5708+         dc ad(@PER_849)                                                02-DCCCA
000039D0 00000000000000D0                   5709+         dc ad(208)                                                     02-DCCCA
000039D8 0000000000000000                   5710+         dc ad(0)                                                       02-DCCCA
000039E0 0000000000001000                   5711+         dc ad(4096)                                                    02-DCCCA
000039E8 20                                 5712+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000039E9 03                                 5713+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000039EA 03                                 5714+         dc al1(3)                                                      02-DCCCA
000039EB 08                                 5715+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000039EC 00                                 5716+         dc bl.8'00000000'                                              02-DCCCA
000039ED 000000                             5717+         dc al3(0)                                                      02-DCCCA
000039F0 00000000000039A8                   5718+         dc ad(@LNAME849)                                               02-DCCCA
000039F8                                    5719+         ds 0d                                                          02-DCCCA
000039F8 00000000000039C0                   5720+         dc ad($eye0121)                                                02-DCCCA
00003A00 0000000000000000                   5721+         dc ad(0)                                                       02-DCCCA
00003A08                                    5722+         ds    0d                                                       01-DCCPR
                                            5723+         entry rd_slice_reader0                                         01-DCCPR
00003A08                                    5724+rd_slice_reader0 ds 0d                                                  01-DCCPR
00003A08                                    5725+@REGION_849_1 ds 0h                                                     01-DCCPR
00003A08 EBEC D008 0024          00000008   5726+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003A0E E3E0 D088 0004          00000088   5727+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003A14 E3C0 D090 0004          00000090   5728+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003A1A B904 002E                          5729+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003A1E E3B0 C018 0004          00000018   5730+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003A24 A7EB 00D0               000000D0   5731+         aghi  14,208              increase by frame size               01-DCCPR
00003A28 E3E0 C020 0021          00000020   5732+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003A2E 4720 B020               00000020   5733+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003A32                                    5734+@PER_849 ds    0h                                                       01-DCCPR
00003A32 EBDE 2080 0024          00000080   5735+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003A38 E3C0 2090 0024          00000090   5736+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003A3E B904 00D2                          5737+         lgr   13,2                set real frame pointer               01-DCCPR
00003A42 B904 00CF                          5738+         lgr   12,15               set base reg                         01-DCCPR
                        00003A08            5739+         using @REGION_849_1,12                                         01-DCCPR
00003A46 B904 0061                          5740          LGR   6,1         ; ptr to parm area
                                            5741 * ******* End of Prologue
                                            5742 * *
                                            5743 * ***           size_t rof = slice->rof;
00003A4A E340 6000 0004          00000000   5744          LG    4,0(0,6)    ; slice
00003A50 EB23 4008 0004          00000008   5745          LMG   2,3,8(4)    ; offset of rof in rd_slice_s
                                            5746 * ***           size_t rlen;
                                            5747 * ***           const rd_segment_t *seg;
                                            5748 * ***
                                            5749 * ***
                                            5750 * ***           for (seg = slice->seg ;
                                            5751 * ***                seg && seg->seg_absof+rof < slice->end && seg->se\
                                            5752 * g_of == rof ;
                                            5753 * ***                seg = ((seg)->seg_link .tqe_next))
                                                                                                                           Page  117 
  Active Usings: @REGION_849_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003A56 47F0 C08A               00003A92   5754          B     @L229
00003A60                                    5755          DS    0D
00003A60 000000D0                           5756 @FRAMESIZE_849 DC F'208'
00003A64 00000000
00003A68 00000000000007F0                   5757 @lit_849_182 DC AD(rd_slice_abs_offset)
00003A70 0000000000000000                   5758 @lit_849_186 DC AD(__assert)
00003A78 000000000000CB02                   5759 @lit_849_185 DC AD(@strings@)
00003A80 000000000000BFA0                   5760 @lit_849_184 DC AD(@DATA)
00003A88                                    5761 @L228    DS    0H
                                            5762 * ***                   rof = 0;
00003A88 A739 0000               00000000   5763          LGHI  3,0         ; 0
00003A8C E320 2000 0004          00000000   5764          LG    2,0(0,2)    ; seg
00003A92                                    5765 @L229    DS    0H
00003A92 B902 00F2                          5766          LTGR  15,2
00003A96 4780 C0B0               00003AB8   5767          BZ    @L230
00003A9A B904 00F3                          5768          LGR   15,3
00003A9E E3F0 2028 000A          00000028   5769          ALG   15,40(0,2)
00003AA4 E3F0 4020 0021          00000020   5770          CLG   15,32(0,4)
00003AAA 47B0 C0B0               00003AB8   5771          BNL   @L230
00003AAE E330 2018 0021          00000018   5772          CLG   3,24(0,2)
00003AB4 4780 C080               00003A88   5773          BE    @L228
00003AB8                                    5774 @L230    DS    0H
                                            5775 * ***
                                            5776 * ***           if (((!seg || seg->seg_absof+rof >= slice->end)))
00003AB8 B902 00F2                          5777          LTGR  15,2
00003ABC 4780 C0CC               00003AD4   5778          BZ    @L234
00003AC0 B904 00F3                          5779          LGR   15,3
00003AC4 E3F0 2028 000A          00000028   5780          ALG   15,40(0,2)
00003ACA E3F0 4020 0021          00000020   5781          CLG   15,32(0,4)
00003AD0 4740 C0D4               00003ADC   5782          BL    @L233
00003AD4                                    5783 @L234    DS    0H
                                            5784 * ***                   return 0;
00003AD4 A7F9 0000               00000000   5785          LGHI  15,0        ; 0
00003AD8 47F0 C1E4               00003BEC   5786          B     @ret_lab_849
00003ADC                                    5787 @L233    DS    0H
                                            5788 * ***
                                            5789 * ***           *p   = (const void *)(seg->seg_p + rof);
00003ADC E3F0 6008 0004          00000008   5790          LG    15,8(0,6)   ; p
00003AE2 E310 2010 0004          00000010   5791          LG    1,16(0,2)   ; offset of seg_p in rd_segment_s
00003AE8 4113 1000               00000000   5792          LA    1,0(3,1)
00003AEC E310 F000 0024          00000000   5793          STG   1,0(0,15)   ; p
                                            5794 * ***           rlen = ((seg->seg_of - rof) < (((slice)->end - rd_slic\
                                            5795 * e_abs_offset(slice))) ? (seg->seg_of - rof) : (((slice)->end - rd_sl\
                                            5796 * ice_abs_offset(slice))));
00003AF2 E350 2018 0004          00000018   5797          LG    5,24(0,2)   ; offset of seg_of in rd_segment_s
00003AF8 B90B 0053                          5798          SLGR  5,3
00003AFC E370 4020 0004          00000020   5799          LG    7,32(0,4)   ; offset of end in rd_slice_s
00003B02 E340 D0B0 0024          000000B0   5800          STG   4,176(0,13)
00003B08 4110 D0B0               000000B0   5801          LA    1,176(0,13)
00003B0C E380 C060 0004          00003A68   5802          LG    8,@lit_849_182 ; rd_slice_abs_offset
00003B12 B904 00F8                          5803          LGR   15,8
00003B16                                    5804 @@gen_label242 DS    0H
                                                                                                                           Page  118 
  Active Usings: @REGION_849_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003B16 05EF                               5805          BALR  14,15
00003B18                                    5806 @@gen_label243 DS    0H
00003B18 B90B 007F                          5807          SLGR  7,15
00003B1C B921 0057                          5808          CLGR  5,7
00003B20 47B0 C12A               00003B32   5809          BNL   @L235
00003B24 E350 2018 0004          00000018   5810          LG    5,24(0,2)   ; offset of seg_of in rd_segment_s
00003B2A B90B 0053                          5811          SLGR  5,3
00003B2E 47F0 C144               00003B4C   5812          B     @L236
00003B32                                    5813 @L235    DS    0H
00003B32 E350 4020 0004          00000020   5814          LG    5,32(0,4)   ; offset of end in rd_slice_s
00003B38 E340 D0B0 0024          000000B0   5815          STG   4,176(0,13)
00003B3E 4110 D0B0               000000B0   5816          LA    1,176(0,13)
00003B42 B904 00F8                          5817          LGR   15,8
00003B46                                    5818 @@gen_label245 DS    0H
00003B46 05EF                               5819          BALR  14,15
00003B48                                    5820 @@gen_label246 DS    0H
00003B48 B90B 005F                          5821          SLGR  5,15
00003B4C                                    5822 @L236    DS    0H
                                            5823 * ***
                                            5824 * ***           if (update_pos) {
00003B4C E3F0 6014 0012          00000014   5825          LT    15,20(0,6)  ; update_pos
00003B52 4780 C1E0               00003BE8   5826          BZ    @L237
                                            5827 * ***                   if (slice->seg != seg) {
00003B56 E3F0 4008 0004          00000008   5828          LG    15,8(0,4)   ; offset of seg in rd_slice_s
00003B5C B920 00F2                          5829          CGR   15,2
00003B60 4780 C1D0               00003BD8   5830          BE    @L238
                                            5831 * ***                           ((seg->seg_absof + rof >= slice->start\
                                            5832 *  && seg->seg_absof + rof+rlen <= slice->end) ? (void)0 : __assert(__\
                                            5833 * func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 844, "seg->seg_abs\
                                            5834 * of + rof >= slice->start && seg->seg_absof + rof+rlen <= slice->end"\
                                            5835 * ));
00003B64 B904 00F3                          5836          LGR   15,3
00003B68 E3F0 2028 000A          00000028   5837          ALG   15,40(0,2)
00003B6E E3F0 4018 0021          00000018   5838          CLG   15,24(0,4)
00003B74 4740 C184               00003B8C   5839          BL    @L239
00003B78 E330 2028 000A          00000028   5840          ALG   3,40(0,2)
00003B7E B90A 0035                          5841          ALGR  3,5
00003B82 E330 4020 0021          00000020   5842          CLG   3,32(0,4)
00003B88 47D0 C1C0               00003BC8   5843          BNH   @L240
00003B8C                                    5844 @L239    DS    0H
00003B8C E3F0 C078 0004          00003A80   5845          LG    15,@lit_849_184
00003B92 41F0 F112               00000112   5846          LA    15,274(0,15)
00003B96 E3F0 D0B0 0024          000000B0   5847          STG   15,176(0,13)
00003B9C E3F0 C070 0004          00003A78   5848          LG    15,@lit_849_185
00003BA2 4110 F040               00000040   5849          LA    1,64(0,15)
00003BA6 E310 D0B8 0024          000000B8   5850          STG   1,184(0,13)
00003BAC E548 D0C0 034C          000000C0   5851          MVGHI 192(13),844
00003BB2 41F0 F2FA               000002FA   5852          LA    15,762(0,15)
00003BB6 E3F0 D0C8 0024          000000C8   5853          STG   15,200(0,13)
00003BBC 4110 D0B0               000000B0   5854          LA    1,176(0,13)
00003BC0 E3F0 C068 0004          00003A70   5855          LG    15,@lit_849_186 ; __assert
00003BC6                                    5856 @@gen_label251 DS    0H
                                                                                                                           Page  119 
  Active Usings: @REGION_849_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003BC6 05EF                               5857          BALR  14,15
00003BC8                                    5858 @@gen_label252 DS    0H
00003BC8                                    5859 @L240    DS    0H
                                            5860 * ***
                                            5861 * ***                           slice->seg  = seg;
00003BC8 E320 4008 0024          00000008   5862          STG   2,8(0,4)    ; offset of seg in rd_slice_s
                                            5863 * ***                           slice->rof  = rlen;
00003BCE E350 4010 0024          00000010   5864          STG   5,16(0,4)   ; offset of rof in rd_slice_s
                                            5865 * ***                   } else {
00003BD4 47F0 C1E0               00003BE8   5866          B     @L237
00003BD8                                    5867 @L238    DS    0H
                                            5868 * ***                           slice->rof += rlen;
00003BD8 B904 00F5                          5869          LGR   15,5
00003BDC E3F0 4010 000A          00000010   5870          ALG   15,16(0,4)
00003BE2 E3F0 4010 0024          00000010   5871          STG   15,16(0,4)
                                            5872 * ***                   }
00003BE8                                    5873 @L241    DS    0H
                                            5874 * ***           }
00003BE8                                    5875 @L237    DS    0H
                                            5876 * ***
                                            5877 * ***           return rlen;
00003BE8 B904 00F5                          5878          LGR   15,5
                                            5879 * ***   }
00003BEC                                    5880 @ret_lab_849 DS 0H
                                            5881 * * **** Start of Epilogue
                                            5882          DCCEPIL
00003BEC                                    5883+         ds 0h                                                          01-DCCEP
                                            5884+* Epilog
00003BEC D707 D088 D088 00000088 00000088   5885+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003BF2 E3D0 D080 0004          00000080   5886+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003BF8 E3C0 D090 0004          00000090   5887+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003BFE E3B0 C018 0004          00000018   5888+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003C04 E3C0 B010 0021          00000010   5889+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003C0A E3E0 D008 0004          00000008   5890+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003C10 EB1C D020 0004          00000020   5891+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003C16 078E                               5892+         bcr 8,14                if same dsab, just return              01-DCCEP
00003C18 E3F0 D010 0024          00000010   5893+         stg 15,16(0,13)         save return code                       01-DCCEP
00003C1E E300 D018 0024          00000018   5894+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003C24 E3F0 D090 0004          00000090   5895+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003C2A E3F0 F018 0004          00000018   5896+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003C30 47F0 F040               00000040   5897+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5898+* End of Epilog
                                            5899 * * **** End of Epilogue
                                            5900          DROP  12
                                            5901 *
                                            5902 *   DSECT for automatic variables in "rd_slice_reader0"
                                            5903 *      (FUNCTION #849)
                                            5904 *
00000000                00000000 000000B0   5905 @AUTO#rd_slice_reader0 DSECT
00000000                                    5906          DS    XL168
000000A8                                    5907 rd_slice_reader0#rlen#0 DS 8XL1 ; rlen
000000B0                000000B0 000000A8   5908          ORG   @AUTO#rd_slice_reader0+168
                                                                                                                           Page  120 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000A8                                    5909 rd_slice_reader0#rof#0 DS 8XL1 ; rof
                                            5910 *
00003C34                00000000 0000BFA0   5911 @CODE    CSECT
                                            5912 *
                                            5913 *
                                            5914 *
                                            5915 * ....... start of rd_slice_reader
                                            5916 rd_slice_reader ALIAS X'99846DA2938983856D998581848599'
00003C34                                    5917 @LNAME809 DS   0H
00003C34 0000000F                           5918          DC    X'0000000F'
00003C38 99846DA293898385                   5919          DC    C'rd_slice_reader'
00003C47 00                                 5920          DC    X'00'
                                            5921 rd_slice_reader DCCPRLG CINDEX=809,BASER=12,FRAME=192,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME809
                                            5922          macro
                                            5923          dccextrn &m
                                            5924          gblc    &$dccext(1000)
                                            5925          gbla    &$dccexti
                                            5926          lcla    &i
                                            5927 &$dccext(&$dccexti+1) setc    '&m'
                                            5928 &i       seta    1
                                            5929 .loop    aif    (&i gt &$dccexti).around
                                            5930          aif    ('&$dccext(&i)' eq '&m').getout
                                            5931 &i       seta    &i+1
                                            5932          ago     .loop
                                            5933 .around  anop
                                            5934 &$dccexti seta &$dccexti+1
                                            5935          extrn  &m
                                            5936 .getout  anop
                                            5937          mend
00003C48                                    5938+$eye0124    ds    0d                                                    02-DCCCA
00003C48 C4C3C3                             5939+         dc cl3'DCC'                                                    02-DCCCA
00003C4B 01                                 5940+         dc xl1'01' format one                                          02-DCCCA
00003C4C 00000000                           5941+         dc a(0)                                                        02-DCCCA
00003C50 0000000000003CBA                   5942+         dc ad(@PER_809)                                                02-DCCCA
00003C58 00000000000000C0                   5943+         dc ad(192)                                                     02-DCCCA
00003C60 0000000000000000                   5944+         dc ad(0)                                                       02-DCCCA
00003C68 0000000000001000                   5945+         dc ad(4096)                                                    02-DCCCA
00003C70 20                                 5946+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003C71 03                                 5947+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003C72 03                                 5948+         dc al1(3)                                                      02-DCCCA
00003C73 08                                 5949+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003C74 00                                 5950+         dc bl.8'00000000'                                              02-DCCCA
00003C75 000000                             5951+         dc al3(0)                                                      02-DCCCA
00003C78 0000000000003C34                   5952+         dc ad(@LNAME809)                                               02-DCCCA
00003C80                                    5953+         ds 0d                                                          02-DCCCA
00003C80 0000000000003C48                   5954+         dc ad($eye0124)                                                02-DCCCA
00003C88 0000000000000000                   5955+         dc ad(0)                                                       02-DCCCA
00003C90                                    5956+         ds    0d                                                       01-DCCPR
                                            5957+         entry rd_slice_reader                                          01-DCCPR
00003C90                                    5958+rd_slice_reader ds 0d                                                   01-DCCPR
00003C90                                    5959+@REGION_809_1 ds 0h                                                     01-DCCPR
                                                                                                                           Page  121 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003C90 EBEC D008 0024          00000008   5960+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003C96 E3E0 D088 0004          00000088   5961+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003C9C E3C0 D090 0004          00000090   5962+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003CA2 B904 002E                          5963+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003CA6 E3B0 C018 0004          00000018   5964+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003CAC A7EB 00C0               000000C0   5965+         aghi  14,192              increase by frame size               01-DCCPR
00003CB0 E3E0 C020 0021          00000020   5966+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003CB6 4720 B020               00000020   5967+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003CBA                                    5968+@PER_809 ds    0h                                                       01-DCCPR
00003CBA EBDE 2080 0024          00000080   5969+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003CC0 E3C0 2090 0024          00000090   5970+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003CC6 B904 00D2                          5971+         lgr   13,2                set real frame pointer               01-DCCPR
00003CCA B904 00CF                          5972+         lgr   12,15               set base reg                         01-DCCPR
                        00003C90            5973+         using @REGION_809_1,12                                         01-DCCPR
                                            5974 * ******* End of Prologue
                                            5975 * *
                                            5976 * ***           return rd_slice_reader0(slice, p, 1);
00003CCE E3F0 1000 0004          00000000   5977          LG    15,0(0,1)   ; slice
00003CD4 E3F0 D0A8 0024          000000A8   5978          STG   15,168(0,13)
00003CDA E3F0 1008 0004          00000008   5979          LG    15,8(0,1)   ; p
00003CE0 E3F0 D0B0 0024          000000B0   5980          STG   15,176(0,13)
00003CE6 E548 D0B8 0001          000000B8   5981          MVGHI 184(13),1
00003CEC 4110 D0A8               000000A8   5982          LA    1,168(0,13)
00003CF0 E3F0 C0B8 0004          00003D48   5983          LG    15,@lit_809_188 ; rd_slice_reader0
00003CF6                                    5984 @@gen_label253 DS    0H
00003CF6 05EF                               5985          BALR  14,15
00003CF8                                    5986 @@gen_label254 DS    0H
                                            5987 * ***   }
                                            5988 * * **** Start of Epilogue
                                            5989          DCCEPIL
00003CF8                                    5990+         ds 0h                                                          01-DCCEP
                                            5991+* Epilog
00003CF8 D707 D088 D088 00000088 00000088   5992+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003CFE E3D0 D080 0004          00000080   5993+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003D04 E3C0 D090 0004          00000090   5994+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003D0A E3B0 C018 0004          00000018   5995+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003D10 E3C0 B010 0021          00000010   5996+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003D16 E3E0 D008 0004          00000008   5997+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003D1C EB1C D020 0004          00000020   5998+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003D22 078E                               5999+         bcr 8,14                if same dsab, just return              01-DCCEP
00003D24 E3F0 D010 0024          00000010   6000+         stg 15,16(0,13)         save return code                       01-DCCEP
00003D2A E300 D018 0024          00000018   6001+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003D30 E3F0 D090 0004          00000090   6002+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003D36 E3F0 F018 0004          00000018   6003+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003D3C 47F0 F040               00000040   6004+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6005+* End of Epilog
                                            6006 * * **** End of Epilogue
00003D40                                    6007          DS    0D
00003D40 000000C0                           6008 @FRAMESIZE_809 DC F'192'
00003D44 00000000
00003D48 0000000000003A08                   6009 @lit_809_188 DC AD(rd_slice_reader0)
                                            6010          DROP  12
                                                                                                                           Page  122 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6011 *
                                            6012 *   DSECT for automatic variables in "rd_slice_reader"
                                            6013 *      (FUNCTION #809)
                                            6014 *
00000000                00000000 000000A8   6015 @AUTO#rd_slice_reader DSECT
00000000                                    6016          DS    XL168
                                            6017 *
00003D50                00000000 0000BFA0   6018 @CODE    CSECT
                                            6019 *
                                            6020 *
                                            6021 *
                                            6022 * ....... start of rd_slice_peeker
                                            6023 rd_slice_peeker ALIAS X'99846DA2938983856D978585928599'
00003D50                                    6024 @LNAME810 DS   0H
00003D50 0000000F                           6025          DC    X'0000000F'
00003D54 99846DA293898385                   6026          DC    C'rd_slice_peeker'
00003D63 00                                 6027          DC    X'00'
                                            6028 rd_slice_peeker DCCPRLG CINDEX=810,BASER=12,FRAME=192,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME810
                                            6029          macro
                                            6030          dccextrn &m
                                            6031          gblc    &$dccext(1000)
                                            6032          gbla    &$dccexti
                                            6033          lcla    &i
                                            6034 &$dccext(&$dccexti+1) setc    '&m'
                                            6035 &i       seta    1
                                            6036 .loop    aif    (&i gt &$dccexti).around
                                            6037          aif    ('&$dccext(&i)' eq '&m').getout
                                            6038 &i       seta    &i+1
                                            6039          ago     .loop
                                            6040 .around  anop
                                            6041 &$dccexti seta &$dccexti+1
                                            6042          extrn  &m
                                            6043 .getout  anop
                                            6044          mend
00003D68                                    6045+$eye0127    ds    0d                                                    02-DCCCA
00003D68 C4C3C3                             6046+         dc cl3'DCC'                                                    02-DCCCA
00003D6B 01                                 6047+         dc xl1'01' format one                                          02-DCCCA
00003D6C 00000000                           6048+         dc a(0)                                                        02-DCCCA
00003D70 0000000000003DDA                   6049+         dc ad(@PER_810)                                                02-DCCCA
00003D78 00000000000000C0                   6050+         dc ad(192)                                                     02-DCCCA
00003D80 0000000000000000                   6051+         dc ad(0)                                                       02-DCCCA
00003D88 0000000000001000                   6052+         dc ad(4096)                                                    02-DCCCA
00003D90 20                                 6053+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003D91 03                                 6054+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003D92 03                                 6055+         dc al1(3)                                                      02-DCCCA
00003D93 08                                 6056+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003D94 00                                 6057+         dc bl.8'00000000'                                              02-DCCCA
00003D95 000000                             6058+         dc al3(0)                                                      02-DCCCA
00003D98 0000000000003D50                   6059+         dc ad(@LNAME810)                                               02-DCCCA
00003DA0                                    6060+         ds 0d                                                          02-DCCCA
00003DA0 0000000000003D68                   6061+         dc ad($eye0127)                                                02-DCCCA
                                                                                                                           Page  123 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003DA8 0000000000000000                   6062+         dc ad(0)                                                       02-DCCCA
00003DB0                                    6063+         ds    0d                                                       01-DCCPR
                                            6064+         entry rd_slice_peeker                                          01-DCCPR
00003DB0                                    6065+rd_slice_peeker ds 0d                                                   01-DCCPR
00003DB0                                    6066+@REGION_810_1 ds 0h                                                     01-DCCPR
00003DB0 EBEC D008 0024          00000008   6067+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003DB6 E3E0 D088 0004          00000088   6068+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003DBC E3C0 D090 0004          00000090   6069+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003DC2 B904 002E                          6070+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003DC6 E3B0 C018 0004          00000018   6071+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003DCC A7EB 00C0               000000C0   6072+         aghi  14,192              increase by frame size               01-DCCPR
00003DD0 E3E0 C020 0021          00000020   6073+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003DD6 4720 B020               00000020   6074+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003DDA                                    6075+@PER_810 ds    0h                                                       01-DCCPR
00003DDA EBDE 2080 0024          00000080   6076+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003DE0 E3C0 2090 0024          00000090   6077+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003DE6 B904 00D2                          6078+         lgr   13,2                set real frame pointer               01-DCCPR
00003DEA B904 00CF                          6079+         lgr   12,15               set base reg                         01-DCCPR
                        00003DB0            6080+         using @REGION_810_1,12                                         01-DCCPR
                                            6081 * ******* End of Prologue
                                            6082 * *
                                            6083 * ***           return rd_slice_reader0((rd_slice_t *)slice, p, 0);
00003DEE E3F0 1000 0004          00000000   6084          LG    15,0(0,1)   ; slice
00003DF4 E3F0 D0A8 0024          000000A8   6085          STG   15,168(0,13)
00003DFA E3F0 1008 0004          00000008   6086          LG    15,8(0,1)   ; p
00003E00 E3F0 D0B0 0024          000000B0   6087          STG   15,176(0,13)
00003E06 D707 D0B8 D0B8 000000B8 000000B8   6088          XC    184(8,13),184(13)
00003E0C 4110 D0A8               000000A8   6089          LA    1,168(0,13)
00003E10 E3F0 C0B8 0004          00003E68   6090          LG    15,@lit_810_190 ; rd_slice_reader0
00003E16                                    6091 @@gen_label255 DS    0H
00003E16 05EF                               6092          BALR  14,15
00003E18                                    6093 @@gen_label256 DS    0H
                                            6094 * ***   }
                                            6095 * * **** Start of Epilogue
                                            6096          DCCEPIL
00003E18                                    6097+         ds 0h                                                          01-DCCEP
                                            6098+* Epilog
00003E18 D707 D088 D088 00000088 00000088   6099+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003E1E E3D0 D080 0004          00000080   6100+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003E24 E3C0 D090 0004          00000090   6101+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003E2A E3B0 C018 0004          00000018   6102+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003E30 E3C0 B010 0021          00000010   6103+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003E36 E3E0 D008 0004          00000008   6104+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003E3C EB1C D020 0004          00000020   6105+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003E42 078E                               6106+         bcr 8,14                if same dsab, just return              01-DCCEP
00003E44 E3F0 D010 0024          00000010   6107+         stg 15,16(0,13)         save return code                       01-DCCEP
00003E4A E300 D018 0024          00000018   6108+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003E50 E3F0 D090 0004          00000090   6109+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003E56 E3F0 F018 0004          00000018   6110+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003E5C 47F0 F040               00000040   6111+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6112+* End of Epilog
                                            6113 * * **** End of Epilogue
                                                                                                                           Page  124 
  Active Usings: @REGION_810_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003E60                                    6114          DS    0D
00003E60 000000C0                           6115 @FRAMESIZE_810 DC F'192'
00003E64 00000000
00003E68 0000000000003A08                   6116 @lit_810_190 DC AD(rd_slice_reader0)
                                            6117          DROP  12
                                            6118 *
                                            6119 *   DSECT for automatic variables in "rd_slice_peeker"
                                            6120 *      (FUNCTION #810)
                                            6121 *
00000000                00000000 000000A8   6122 @AUTO#rd_slice_peeker DSECT
00000000                                    6123          DS    XL168
                                            6124 *
00003E70                00000000 0000BFA0   6125 @CODE    CSECT
                                            6126 *
                                            6127 *
                                            6128 *
                                            6129 * ....... start of rd_slice_read
                                            6130 rd_slice_read ALIAS X'99846DA2938983856D99858184'
00003E70                                    6131 @LNAME811 DS   0H
00003E70 0000000D                           6132          DC    X'0000000D'
00003E74 99846DA293898385                   6133          DC    C'rd_slice_read'
00003E81 00                                 6134          DC    X'00'
                                            6135 rd_slice_read DCCPRLG CINDEX=811,BASER=12,FRAME=192,ENTRY=YES,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME811
                                            6136          macro
                                            6137          dccextrn &m
                                            6138          gblc    &$dccext(1000)
                                            6139          gbla    &$dccexti
                                            6140          lcla    &i
                                            6141 &$dccext(&$dccexti+1) setc    '&m'
                                            6142 &i       seta    1
                                            6143 .loop    aif    (&i gt &$dccexti).around
                                            6144          aif    ('&$dccext(&i)' eq '&m').getout
                                            6145 &i       seta    &i+1
                                            6146          ago     .loop
                                            6147 .around  anop
                                            6148 &$dccexti seta &$dccexti+1
                                            6149          extrn  &m
                                            6150 .getout  anop
                                            6151          mend
00003E88                                    6152+$eye0130    ds    0d                                                    02-DCCCA
00003E88 C4C3C3                             6153+         dc cl3'DCC'                                                    02-DCCCA
00003E8B 01                                 6154+         dc xl1'01' format one                                          02-DCCCA
00003E8C 00000000                           6155+         dc a(0)                                                        02-DCCCA
00003E90 0000000000003EFA                   6156+         dc ad(@PER_811)                                                02-DCCCA
00003E98 00000000000000C0                   6157+         dc ad(192)                                                     02-DCCCA
00003EA0 0000000000000000                   6158+         dc ad(0)                                                       02-DCCCA
00003EA8 0000000000001000                   6159+         dc ad(4096)                                                    02-DCCCA
00003EB0 20                                 6160+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003EB1 03                                 6161+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003EB2 03                                 6162+         dc al1(3)                                                      02-DCCCA
00003EB3 08                                 6163+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page  125 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003EB4 00                                 6164+         dc bl.8'00000000'                                              02-DCCCA
00003EB5 000000                             6165+         dc al3(0)                                                      02-DCCCA
00003EB8 0000000000003E70                   6166+         dc ad(@LNAME811)                                               02-DCCCA
00003EC0                                    6167+         ds 0d                                                          02-DCCCA
00003EC0 0000000000003E88                   6168+         dc ad($eye0130)                                                02-DCCCA
00003EC8 0000000000000000                   6169+         dc ad(0)                                                       02-DCCCA
00003ED0                                    6170+         ds    0d                                                       01-DCCPR
                                            6171+         entry rd_slice_read                                            01-DCCPR
00003ED0                                    6172+rd_slice_read ds 0d                                                     01-DCCPR
00003ED0                                    6173+@REGION_811_1 ds 0h                                                     01-DCCPR
00003ED0 EBEC D008 0024          00000008   6174+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003ED6 E3E0 D088 0004          00000088   6175+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003EDC E3C0 D090 0004          00000090   6176+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003EE2 B904 002E                          6177+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003EE6 E3B0 C018 0004          00000018   6178+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003EEC A7EB 00C0               000000C0   6179+         aghi  14,192              increase by frame size               01-DCCPR
00003EF0 E3E0 C020 0021          00000020   6180+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003EF6 4720 B020               00000020   6181+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003EFA                                    6182+@PER_811 ds    0h                                                       01-DCCPR
00003EFA EBDE 2080 0024          00000080   6183+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003F00 E3C0 2090 0024          00000090   6184+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003F06 B904 00D2                          6185+         lgr   13,2                set real frame pointer               01-DCCPR
00003F0A B904 00CF                          6186+         lgr   12,15               set base reg                         01-DCCPR
                        00003ED0            6187+         using @REGION_811_1,12                                         01-DCCPR
00003F0E B904 0071                          6188          LGR   7,1         ; ptr to parm area
                                            6189 * ******* End of Prologue
                                            6190 * *
                                            6191 * ***           size_t remains = size;
00003F12 E340 7000 0004          00000000   6192          LG    4,0(0,7)    ; slice
00003F18 E350 7010 0004          00000010   6193          LG    5,16(0,7)   ; size
00003F1E B904 0035                          6194          LGR   3,5         ; remains
                                            6195 * ***           char *d = (char *)dst;
00003F22 E320 7008 0004          00000008   6196          LG    2,8(0,7)    ; dst
                                            6197 * ***           size_t rlen;
                                            6198 * ***           const void *p;
                                            6199 * ***           size_t orig_end = slice->end;
00003F28 E360 4020 0004          00000020   6200          LG    6,32(0,4)   ; offset of end in rd_slice_s
                                            6201 * ***
                                            6202 * ***           if (((((slice)->end - rd_slice_abs_offset(slice)) < si\
                                            6203 * ze)))
00003F2E E380 4020 0004          00000020   6204          LG    8,32(0,4)   ; offset of end in rd_slice_s
00003F34 E340 D0B0 0024          000000B0   6205          STG   4,176(0,13)
00003F3A 4110 D0B0               000000B0   6206          LA    1,176(0,13)
00003F3E E390 C098 0004          00003F68   6207          LG    9,@lit_811_192 ; rd_slice_abs_offset
00003F44 B904 00F9                          6208          LGR   15,9
00003F48                                    6209 @@gen_label257 DS    0H
00003F48 05EF                               6210          BALR  14,15
00003F4A                                    6211 @@gen_label258 DS    0H
00003F4A B90B 008F                          6212          SLGR  8,15
00003F4E B921 0085                          6213          CLGR  8,5
00003F52 47B0 C0B0               00003F80   6214          BNL   @L242
                                            6215 * ***                   return 0;
                                                                                                                           Page  126 
  Active Usings: @REGION_811_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003F56 A7F9 0000               00000000   6216          LGHI  15,0        ; 0
00003F5A 47F0 C14A               0000401A   6217          B     @ret_lab_811
00003F60                                    6218          DS    0D
00003F60 000000C0                           6219 @FRAMESIZE_811 DC F'192'
00003F64 00000000
00003F68 00000000000007F0                   6220 @lit_811_192 DC AD(rd_slice_abs_offset)
00003F70 D200 9000 8000 00000000 00000000   6221 @lit_811_195          MVC 0(1,9),0(8)
00003F76 0000
00003F78 0000000000003C90                   6222 @lit_811_196 DC AD(rd_slice_reader)
00003F80                                    6223 @L242    DS    0H
                                            6224 * ***
                                            6225 * ***
                                            6226 * ***           slice->end = rd_slice_abs_offset(slice) + size;
00003F80 E340 D0B0 0024          000000B0   6227          STG   4,176(0,13)
00003F86 4110 D0B0               000000B0   6228          LA    1,176(0,13)
00003F8A B904 00F9                          6229          LGR   15,9
00003F8E                                    6230 @@gen_label260 DS    0H
00003F8E 05EF                               6231          BALR  14,15
00003F90                                    6232 @@gen_label261 DS    0H
00003F90 B90A 00F5                          6233          ALGR  15,5
00003F94 E3F0 4020 0024          00000020   6234          STG   15,32(0,4)
                                            6235 * ***
                                            6236 * ***           while ((rlen = rd_slice_reader(slice, &p))) {
00003F9A 47F0 C11C               00003FEC   6237          B     @L246
                                            6238 * ***                   do {} while (0);
00003F9E                                    6239 @L247    DS    0H
                                            6240 * ***                   if (dst) {
00003F9E E310 7008 0002          00000008   6241          LTG   1,8(0,7)    ; dst
00003FA4 4780 C118               00003FE8   6242          BZ    @L250
                                            6243 * ***                           __memcpy(d,p,rlen);
00003FA8 E380 D0A8 0004          000000A8   6244          LG    8,168(0,13)
00003FAE B904 0092                          6245          LGR   9,2
00003FB2 B902 001F                          6246          LTGR  1,15
00003FB6 4780 C114               00003FE4   6247          BZ    @@gen_label265
00003FBA A71B FFFF               0000FFFF   6248          AGHI  1,-1
00003FBE EBA1 0008 000A          00000008   6249          SRAG  10,1,8(0)
00003FC4 B902 00AA                          6250          LTGR  10,10
00003FC8 4780 C110               00003FE0   6251          BZ    @@gen_label264
00003FCC                                    6252 @@gen_label263 DS 0H
00003FCC D2FF 9000 8000 00000000 00000000   6253          MVC   0(256,9),0(8)
00003FD2 4190 9100               00000100   6254          LA    9,256(0,9)
00003FD6 4180 8100               00000100   6255          LA    8,256(0,8)
00003FDA E3A0 C0FC 0046          00003FCC   6256          BCTG  10,@@gen_label263
00003FE0                                    6257 @@gen_label264 DS 0H
00003FE0 4410 C0A0               00003F70   6258          EX    1,@lit_811_195
00003FE4                                    6259 @@gen_label265 DS 0H
                                            6260 * ***                           d       += rlen;
00003FE4 412F 2000               00000000   6261          LA    2,0(15,2)
                                            6262 * ***                   }
00003FE8                                    6263 @L250    DS    0H
                                            6264 * ***                   remains -= rlen;
00003FE8 B90B 003F                          6265          SLGR  3,15
                                                                                                                           Page  127 
  Active Usings: @REGION_811_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6266 * ***           }
00003FEC                                    6267 @L246    DS    0H
00003FEC E340 D0B0 0024          000000B0   6268          STG   4,176(0,13)
00003FF2 41F0 D0A8               000000A8   6269          LA    15,168(0,13)
00003FF6 E3F0 D0B8 0024          000000B8   6270          STG   15,184(0,13)
00003FFC 4110 D0B0               000000B0   6271          LA    1,176(0,13)
00004000 E3F0 C0A8 0004          00003F78   6272          LG    15,@lit_811_196 ; rd_slice_reader
00004006                                    6273 @@gen_label266 DS    0H
00004006 05EF                               6274          BALR  14,15
00004008                                    6275 @@gen_label267 DS    0H
00004008 B902 00FF                          6276          LTGR  15,15
0000400C 4770 C0CE               00003F9E   6277          BNZ   @L247
                                            6278 * ***
                                            6279 * ***           do {} while (0);
00004010                                    6280 @L251    DS    0H
                                            6281 * ***
                                            6282 * ***
                                            6283 * ***           slice->end = orig_end;
00004010 E360 4020 0024          00000020   6284          STG   6,32(0,4)   ; offset of end in rd_slice_s
                                            6285 * ***
                                            6286 * ***           return size;
00004016 B904 00F5                          6287          LGR   15,5
                                            6288 * ***   }
0000401A                                    6289 @ret_lab_811 DS 0H
                                            6290 * * **** Start of Epilogue
                                            6291          DCCEPIL
0000401A                                    6292+         ds 0h                                                          01-DCCEP
                                            6293+* Epilog
0000401A D707 D088 D088 00000088 00000088   6294+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004020 E3D0 D080 0004          00000080   6295+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004026 E3C0 D090 0004          00000090   6296+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000402C E3B0 C018 0004          00000018   6297+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004032 E3C0 B010 0021          00000010   6298+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004038 E3E0 D008 0004          00000008   6299+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000403E EB1C D020 0004          00000020   6300+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004044 078E                               6301+         bcr 8,14                if same dsab, just return              01-DCCEP
00004046 E3F0 D010 0024          00000010   6302+         stg 15,16(0,13)         save return code                       01-DCCEP
0000404C E300 D018 0024          00000018   6303+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004052 E3F0 D090 0004          00000090   6304+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004058 E3F0 F018 0004          00000018   6305+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000405E 47F0 F040               00000040   6306+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6307+* End of Epilog
                                            6308 * * **** End of Epilogue
                                            6309          DROP  12
                                            6310 *
                                            6311 *   DSECT for automatic variables in "rd_slice_read"
                                            6312 *      (FUNCTION #811)
                                            6313 *
00000000                00000000 000000B0   6314 @AUTO#rd_slice_read DSECT
00000000                                    6315          DS    XL168
000000A8                                    6316 rd_slice_read#orig_end#0 DS 8XL1 ; orig_end
000000B0                000000B0 000000A8   6317          ORG   @AUTO#rd_slice_read+168
                                                                                                                           Page  128 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000A8                                    6318 rd_slice_read#rlen#0 DS 8XL1 ; rlen
000000B0                000000B0 000000A8   6319          ORG   @AUTO#rd_slice_read+168
000000A8                                    6320 rd_slice_read#remains#0 DS 8XL1 ; remains
                                            6321 *
00004062                00000000 0000BFA0   6322 @CODE    CSECT
                                            6323 *
                                            6324 *
                                            6325 *
                                            6326 * ....... start of rd_slice_peek
                                            6327 rd_slice_peek ALIAS X'99846DA2938983856D97858592'
00004062                                    6328 @LNAME812 DS   0H
00004062 0000000D                           6329          DC    X'0000000D'
00004066 99846DA293898385                   6330          DC    C'rd_slice_peek'
00004073 00                                 6331          DC    X'00'
                                            6332 rd_slice_peek DCCPRLG CINDEX=812,BASER=12,FRAME=232,ENTRY=YES,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME812
                                            6333          macro
                                            6334          dccextrn &m
                                            6335          gblc    &$dccext(1000)
                                            6336          gbla    &$dccexti
                                            6337          lcla    &i
                                            6338 &$dccext(&$dccexti+1) setc    '&m'
                                            6339 &i       seta    1
                                            6340 .loop    aif    (&i gt &$dccexti).around
                                            6341          aif    ('&$dccext(&i)' eq '&m').getout
                                            6342 &i       seta    &i+1
                                            6343          ago     .loop
                                            6344 .around  anop
                                            6345 &$dccexti seta &$dccexti+1
                                            6346          extrn  &m
                                            6347 .getout  anop
                                            6348          mend
00004078                                    6349+$eye0133    ds    0d                                                    02-DCCCA
00004078 C4C3C3                             6350+         dc cl3'DCC'                                                    02-DCCCA
0000407B 01                                 6351+         dc xl1'01' format one                                          02-DCCCA
0000407C 00000000                           6352+         dc a(0)                                                        02-DCCCA
00004080 00000000000040EA                   6353+         dc ad(@PER_812)                                                02-DCCCA
00004088 00000000000000E8                   6354+         dc ad(232)                                                     02-DCCCA
00004090 0000000000000000                   6355+         dc ad(0)                                                       02-DCCCA
00004098 0000000000001000                   6356+         dc ad(4096)                                                    02-DCCCA
000040A0 20                                 6357+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000040A1 03                                 6358+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000040A2 03                                 6359+         dc al1(3)                                                      02-DCCCA
000040A3 08                                 6360+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000040A4 00                                 6361+         dc bl.8'00000000'                                              02-DCCCA
000040A5 000000                             6362+         dc al3(0)                                                      02-DCCCA
000040A8 0000000000004062                   6363+         dc ad(@LNAME812)                                               02-DCCCA
000040B0                                    6364+         ds 0d                                                          02-DCCCA
000040B0 0000000000004078                   6365+         dc ad($eye0133)                                                02-DCCCA
000040B8 0000000000000000                   6366+         dc ad(0)                                                       02-DCCCA
000040C0                                    6367+         ds    0d                                                       01-DCCPR
                                            6368+         entry rd_slice_peek                                            01-DCCPR
                                                                                                                           Page  129 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000040C0                                    6369+rd_slice_peek ds 0d                                                     01-DCCPR
000040C0                                    6370+@REGION_812_1 ds 0h                                                     01-DCCPR
000040C0 EBEC D008 0024          00000008   6371+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000040C6 E3E0 D088 0004          00000088   6372+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000040CC E3C0 D090 0004          00000090   6373+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000040D2 B904 002E                          6374+         lgr   2,14                copy addr of our savearea            01-DCCPR
000040D6 E3B0 C018 0004          00000018   6375+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000040DC A7EB 00E8               000000E8   6376+         aghi  14,232              increase by frame size               01-DCCPR
000040E0 E3E0 C020 0021          00000020   6377+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000040E6 4720 B020               00000020   6378+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000040EA                                    6379+@PER_812 ds    0h                                                       01-DCCPR
000040EA EBDE 2080 0024          00000080   6380+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000040F0 E3C0 2090 0024          00000090   6381+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000040F6 B904 00D2                          6382+         lgr   13,2                set real frame pointer               01-DCCPR
000040FA B904 00CF                          6383+         lgr   12,15               set base reg                         01-DCCPR
                        000040C0            6384+         using @REGION_812_1,12                                         01-DCCPR
000040FE B904 0021                          6385          LGR   2,1         ; ptr to parm area
                                            6386 * ******* End of Prologue
                                            6387 * *
                                            6388 * ***           rd_slice_t sub = *slice;
00004102 E3F0 2000 0004          00000000   6389          LG    15,0(0,2)   ; slice
00004108 D227 D0A8 F000 000000A8 00000000   6390          MVC   168(40,13),0(15)
                                            6391 * ***
                                            6392 * ***           if (((rd_slice_seek(&sub, offset) == -1)))
0000410E 41F0 D0A8               000000A8   6393          LA    15,168(0,13)
00004112 E3F0 D0D0 0024          000000D0   6394          STG   15,208(0,13)
00004118 E3F0 2008 0004          00000008   6395          LG    15,8(0,2)   ; offset
0000411E E3F0 D0D8 0024          000000D8   6396          STG   15,216(0,13)
00004124 4110 D0D0               000000D0   6397          LA    1,208(0,13)
00004128 E3F0 C088 0004          00004148   6398          LG    15,@lit_812_198 ; rd_slice_seek
0000412E                                    6399 @@gen_label269 DS    0H
0000412E 05EF                               6400          BALR  14,15
00004130                                    6401 @@gen_label270 DS    0H
00004130 A7FE FFFF               0000FFFF   6402          CHI   15,-1
00004134 4770 C098               00004158   6403          BNE   @L254
                                            6404 * ***                   return 0;
00004138 A7F9 0000               00000000   6405          LGHI  15,0        ; 0
0000413C 47F0 C0C6               00004186   6406          B     @ret_lab_812
00004140                                    6407          DS    0D
00004140 000000E8                           6408 @FRAMESIZE_812 DC F'232'
00004144 00000000
00004148 0000000000004588                   6409 @lit_812_198 DC AD(rd_slice_seek)
00004150 0000000000003ED0                   6410 @lit_812_200 DC AD(rd_slice_read)
00004158                                    6411 @L254    DS    0H
                                            6412 * ***
                                            6413 * ***           return rd_slice_read(&sub, dst, size);
00004158 41F0 D0A8               000000A8   6414          LA    15,168(0,13)
0000415C E3F0 D0D0 0024          000000D0   6415          STG   15,208(0,13)
00004162 E3F0 2010 0004          00000010   6416          LG    15,16(0,2)  ; dst
00004168 E3F0 D0D8 0024          000000D8   6417          STG   15,216(0,13)
0000416E E3F0 2018 0004          00000018   6418          LG    15,24(0,2)  ; size
00004174 E3F0 D0E0 0024          000000E0   6419          STG   15,224(0,13)
                                                                                                                           Page  130 
  Active Usings: @REGION_812_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000417A 4110 D0D0               000000D0   6420          LA    1,208(0,13)
0000417E E3F0 C090 0004          00004150   6421          LG    15,@lit_812_200 ; rd_slice_read
00004184                                    6422 @@gen_label272 DS    0H
00004184 05EF                               6423          BALR  14,15
00004186                                    6424 @@gen_label273 DS    0H
                                            6425 * ***
                                            6426 * ***   }
00004186                                    6427 @ret_lab_812 DS 0H
                                            6428 * * **** Start of Epilogue
                                            6429          DCCEPIL
00004186                                    6430+         ds 0h                                                          01-DCCEP
                                            6431+* Epilog
00004186 D707 D088 D088 00000088 00000088   6432+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000418C E3D0 D080 0004          00000080   6433+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004192 E3C0 D090 0004          00000090   6434+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004198 E3B0 C018 0004          00000018   6435+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000419E E3C0 B010 0021          00000010   6436+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000041A4 E3E0 D008 0004          00000008   6437+         lg  14,8(0,13)          load up return address                 01-DCCEP
000041AA EB1C D020 0004          00000020   6438+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000041B0 078E                               6439+         bcr 8,14                if same dsab, just return              01-DCCEP
000041B2 E3F0 D010 0024          00000010   6440+         stg 15,16(0,13)         save return code                       01-DCCEP
000041B8 E300 D018 0024          00000018   6441+         stg 0,24(0,13)          save more return code                  01-DCCEP
000041BE E3F0 D090 0004          00000090   6442+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000041C4 E3F0 F018 0004          00000018   6443+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000041CA 47F0 F040               00000040   6444+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6445+* End of Epilog
                                            6446 * * **** End of Epilogue
                                            6447          DROP  12
                                            6448 *
                                            6449 *   DSECT for automatic variables in "rd_slice_peek"
                                            6450 *      (FUNCTION #812)
                                            6451 *
00000000                00000000 000000D0   6452 @AUTO#rd_slice_peek DSECT
00000000                                    6453          DS    XL168
000000A8                                    6454 rd_slice_peek#sub#0 DS 40XL1 ; sub
                                            6455 *
000041CE                00000000 0000BFA0   6456 @CODE    CSECT
                                            6457 *
                                            6458 *
                                            6459 *
                                            6460 * ....... start of rd_slice_read_uvarint
                                            6461 rd_slice_read_uvarint ALIAS X'99846DA2938983856D998581846DA4A581998995A*
                                                                3'
000041CE                                    6462 @LNAME813 DS   0H
000041CE 00000015                           6463          DC    X'00000015'
000041D2 99846DA293898385                   6464          DC    C'rd_slice_read_uvarint'
000041E7 00                                 6465          DC    X'00'
                                            6466 rd_slice_read_uvarint DCCPRLG CINDEX=813,BASER=12,FRAME=176,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME813
                                            6467          macro
                                            6468          dccextrn &m
                                            6469          gblc    &$dccext(1000)
                                                                                                                           Page  131 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6470          gbla    &$dccexti
                                            6471          lcla    &i
                                            6472 &$dccext(&$dccexti+1) setc    '&m'
                                            6473 &i       seta    1
                                            6474 .loop    aif    (&i gt &$dccexti).around
                                            6475          aif    ('&$dccext(&i)' eq '&m').getout
                                            6476 &i       seta    &i+1
                                            6477          ago     .loop
                                            6478 .around  anop
                                            6479 &$dccexti seta &$dccexti+1
                                            6480          extrn  &m
                                            6481 .getout  anop
                                            6482          mend
000041E8                                    6483+$eye0136    ds    0d                                                    02-DCCCA
000041E8 C4C3C3                             6484+         dc cl3'DCC'                                                    02-DCCCA
000041EB 01                                 6485+         dc xl1'01' format one                                          02-DCCCA
000041EC 00000000                           6486+         dc a(0)                                                        02-DCCCA
000041F0 000000000000425A                   6487+         dc ad(@PER_813)                                                02-DCCCA
000041F8 00000000000000B0                   6488+         dc ad(176)                                                     02-DCCCA
00004200 0000000000000000                   6489+         dc ad(0)                                                       02-DCCCA
00004208 0000000000001000                   6490+         dc ad(4096)                                                    02-DCCCA
00004210 20                                 6491+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004211 03                                 6492+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004212 03                                 6493+         dc al1(3)                                                      02-DCCCA
00004213 08                                 6494+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004214 00                                 6495+         dc bl.8'00000000'                                              02-DCCCA
00004215 000000                             6496+         dc al3(0)                                                      02-DCCCA
00004218 00000000000041CE                   6497+         dc ad(@LNAME813)                                               02-DCCCA
00004220                                    6498+         ds 0d                                                          02-DCCCA
00004220 00000000000041E8                   6499+         dc ad($eye0136)                                                02-DCCCA
00004228 0000000000000000                   6500+         dc ad(0)                                                       02-DCCCA
00004230                                    6501+         ds    0d                                                       01-DCCPR
                                            6502+         entry rd_slice_read_uvarint                                    01-DCCPR
00004230                                    6503+rd_slice_read_uvarint ds 0d                                             01-DCCPR
00004230                                    6504+@REGION_813_1 ds 0h                                                     01-DCCPR
00004230 EBEC D008 0024          00000008   6505+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004236 E3E0 D088 0004          00000088   6506+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000423C E3C0 D090 0004          00000090   6507+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004242 B904 002E                          6508+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004246 E3B0 C018 0004          00000018   6509+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000424C A7EB 00B0               000000B0   6510+         aghi  14,176              increase by frame size               01-DCCPR
00004250 E3E0 C020 0021          00000020   6511+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004256 4720 B020               00000020   6512+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000425A                                    6513+@PER_813 ds    0h                                                       01-DCCPR
0000425A EBDE 2080 0024          00000080   6514+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004260 E3C0 2090 0024          00000090   6515+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004266 B904 00D2                          6516+         lgr   13,2                set real frame pointer               01-DCCPR
0000426A B904 00CF                          6517+         lgr   12,15               set base reg                         01-DCCPR
                        00004230            6518+         using @REGION_813_1,12                                         01-DCCPR
0000426E B904 0051                          6519          LGR   5,1         ; ptr to parm area
                                            6520 * ******* End of Prologue
                                            6521 * *
                                                                                                                           Page  132 
  Active Usings: @REGION_813_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6522 * ***           uint64_t num = 0;
00004272 E320 5000 0004          00000000   6523          LG    2,0(0,5)    ; slice
00004278 A739 0000               00000000   6524          LGHI  3,0         ; 0
                                            6525 * ***           int shift = 0;
0000427C A748 0000               00000000   6526          LHI   4,0         ; 0
                                            6527 * ***           size_t rof = slice->rof;
00004280 E3F0 2010 0004          00000010   6528          LG    15,16(0,2)  ; offset of rof in rd_slice_s
                                            6529 * ***           const rd_segment_t *seg;
                                            6530 * ***
                                            6531 * ***
                                            6532 * ***
                                            6533 * ***           for (seg = slice->seg ; seg ; seg = ((seg)->seg_link .\
                                            6534 * tqe_next)) {
00004286 E310 2008 0004          00000008   6535          LG    1,8(0,2)    ; offset of seg in rd_slice_s
0000428C 47F0 C118               00004348   6536          B     @L256
00004290                                    6537          DS    0D
00004290 000000B0                           6538 @FRAMESIZE_813 DC F'176'
00004294 92492493                           6539 @lit_813_205 DC F'-1840700269' 0x92492493
                                            6540 * ***                   for ( ; rof < seg->seg_of ; rof++) {
00004298                                    6541 @L259    DS    0H
                                            6542 * ***                           unsigned char oct;
                                            6543 * ***
                                            6544 * ***                           if (((seg->seg_absof+rof >= slice->end\
                                            6545 * )))
00004298 B904 006F                          6546          LGR   6,15
0000429C E360 1028 000A          00000028   6547          ALG   6,40(0,1)
000042A2 E360 2020 0021          00000020   6548          CLG   6,32(0,2)
000042A8 4740 C084               000042B4   6549          BL    @L263
                                            6550 * ***                                   return 0;
000042AC A7F9 0000               00000000   6551          LGHI  15,0        ; 0
000042B0 47F0 C124               00004354   6552          B     @ret_lab_813
000042B4                                    6553 @L263    DS    0H
                                            6554 * ***
                                            6555 * ***                           oct = *(const unsigned char *)(seg->se\
                                            6556 * g_p + rof);
000042B4 E360 1010 0004          00000010   6557          LG    6,16(0,1)   ; offset of seg_p in rd_segment_s
000042BA 436F 6000               00000000   6558          IC    6,0(15,6)
000042BE 4260 D0A8               000000A8   6559          STC   6,168(0,13) ; oct
                                            6560 * ***
                                            6561 * ***                           num |= (uint64_t)(oct & 0x7f) << shift\
                                            6562 * ;
000042C2 1876                               6563          LR    7,6
000042C4 C07B 0000 007F                     6564          NILF  7,X'0000007F'
000042CA B914 0077                          6565          LGFR  7,7
000042CE EB77 4000 000D          00000000   6566          SLLG  7,7,0(4)
000042D4 B981 0037                          6567          OGR   3,7
                                            6568 * ***                           shift += 7;
000042D8 A74A 0007               00000007   6569          AHI   4,7
                                            6570 * ***
                                            6571 * ***                           if (!(oct & 0x80)) {
000042DC C06B 0000 00FF                     6572          NILF  6,X'000000FF'
000042E2 A761 0080               00000080   6573          TML   6,128
                                                                                                                           Page  133 
  Active Usings: @REGION_813_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000042E6 4770 C100               00004330   6574          BNZ   @L264
                                            6575 * ***
                                            6576 * ***                                   *nump = num;
000042EA E350 5008 0004          00000008   6577          LG    5,8(0,5)    ; nump
000042F0 E330 5000 0024          00000000   6578          STG   3,0(0,5)    ; nump
                                            6579 * ***
                                            6580 * ***
                                            6581 * ***                                   if (slice->seg != seg)
000042F6 E330 2008 0004          00000008   6582          LG    3,8(0,2)    ; offset of seg in rd_slice_s
000042FC B920 0031                          6583          CGR   3,1
00004300 4780 C0DA               0000430A   6584          BE    @L265
                                            6585 * ***                                           slice->seg = seg;
00004304 E310 2008 0024          00000008   6586          STG   1,8(0,2)    ; offset of seg in rd_slice_s
0000430A                                    6587 @L265    DS    0H
                                            6588 * ***                                   slice->rof = rof + 1;
0000430A A7FB 0001               00000001   6589          AGHI  15,1
0000430E E3F0 2010 0024          00000010   6590          STG   15,16(0,2)  ; offset of rof in rd_slice_s
                                            6591 * ***
                                            6592 * ***
                                            6593 * ***                                   return shift / 7;
00004314 18F4                               6594          LR    15,4        ; /0x7
00004316 1834                               6595          LR    3,4         ;   .
00004318 88F0 001F               0000001F   6596          SRL   15,31(0)    ;   .
0000431C 5C20 C064               00004294   6597          M     2,@lit_813_205 ;   .
00004320 1E24                               6598          ALR   2,4         ;   .
00004322 8A20 0002               00000002   6599          SRA   2,2(0)      ;   .
00004326 1E2F                               6600          ALR   2,15        ;   .
00004328 B914 00F2                          6601          LGFR  15,2
0000432C 47F0 C124               00004354   6602          B     @ret_lab_813
                                            6603 * ***                           }
00004330                                    6604 @L264    DS    0H
                                            6605 * ***                   }
00004330 A7FB 0001               00000001   6606          AGHI  15,1
00004334                                    6607 @L260    DS    0H
00004334 E3F0 1018 0021          00000018   6608          CLG   15,24(0,1)
0000433A 4740 C068               00004298   6609          BL    @L259
                                            6610 * ***
                                            6611 * ***                   rof = 0;
0000433E A7F9 0000               00000000   6612          LGHI  15,0        ; 0
                                            6613 * ***           }
00004342 E310 1000 0004          00000000   6614          LG    1,0(0,1)    ; seg
00004348                                    6615 @L256    DS    0H
00004348 B902 0061                          6616          LTGR  6,1
0000434C 4770 C104               00004334   6617          BNZ   @L260
                                            6618 * ***
                                            6619 * ***           return 0;
00004350 A7F9 0000               00000000   6620          LGHI  15,0        ; 0
                                            6621 * ***   }
00004354                                    6622 @ret_lab_813 DS 0H
                                            6623 * * **** Start of Epilogue
                                            6624          DCCEPIL
00004354                                    6625+         ds 0h                                                          01-DCCEP
                                                                                                                           Page  134 
  Active Usings: @REGION_813_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6626+* Epilog
00004354 D707 D088 D088 00000088 00000088   6627+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000435A E3D0 D080 0004          00000080   6628+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004360 E3C0 D090 0004          00000090   6629+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004366 E3B0 C018 0004          00000018   6630+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000436C E3C0 B010 0021          00000010   6631+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004372 E3E0 D008 0004          00000008   6632+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004378 EB1C D020 0004          00000020   6633+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000437E 078E                               6634+         bcr 8,14                if same dsab, just return              01-DCCEP
00004380 E3F0 D010 0024          00000010   6635+         stg 15,16(0,13)         save return code                       01-DCCEP
00004386 E300 D018 0024          00000018   6636+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000438C E3F0 D090 0004          00000090   6637+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004392 E3F0 F018 0004          00000018   6638+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004398 47F0 F040               00000040   6639+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6640+* End of Epilog
                                            6641 * * **** End of Epilogue
                                            6642          DROP  12
                                            6643 *
                                            6644 *   DSECT for automatic variables in "rd_slice_read_uvarint"
                                            6645 *      (FUNCTION #813)
                                            6646 *
00000000                00000000 000000B0   6647 @AUTO#rd_slice_read_uvarint DSECT
00000000                                    6648          DS    XL168
000000A8                                    6649 rd_slice_read_uvarint#oct#2 DS 1CL1 ; oct
000000A9                000000A9 000000A8   6650          ORG   @AUTO#rd_slice_read_uvarint+168
000000A8                                    6651 rd_slice_read_uvarint#rof#0 DS 8XL1 ; rof
000000B0                000000B0 000000A8   6652          ORG   @AUTO#rd_slice_read_uvarint+168
000000A8                                    6653 rd_slice_read_uvarint#shift#0 DS 1F ; shift
000000AC                000000AC 000000A8   6654          ORG   @AUTO#rd_slice_read_uvarint+168
000000A8                                    6655 rd_slice_read_uvarint#num#0 DS 8XL1 ; num
                                            6656 *
0000439C                00000000 0000BFA0   6657 @CODE    CSECT
                                            6658 *
                                            6659 *
                                            6660 *
                                            6661 * ....... start of rd_slice_ensure_contig
                                            6662 rd_slice_ensure_contig ALIAS X'99846DA2938983856D8595A2A499856D839695A3*
                                                                8987'
0000439C                                    6663 @LNAME815 DS   0H
0000439C 00000016                           6664          DC    X'00000016'
000043A0 99846DA293898385                   6665          DC    C'rd_slice_ensure_contig'
000043B6 00                                 6666          DC    X'00'
                                            6667 rd_slice_ensure_contig DCCPRLG CINDEX=815,BASER=12,FRAME=200,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME815
                                            6668          macro
                                            6669          dccextrn &m
                                            6670          gblc    &$dccext(1000)
                                            6671          gbla    &$dccexti
                                            6672          lcla    &i
                                            6673 &$dccext(&$dccexti+1) setc    '&m'
                                            6674 &i       seta    1
                                            6675 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page  135 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6676          aif    ('&$dccext(&i)' eq '&m').getout
                                            6677 &i       seta    &i+1
                                            6678          ago     .loop
                                            6679 .around  anop
                                            6680 &$dccexti seta &$dccexti+1
                                            6681          extrn  &m
                                            6682 .getout  anop
                                            6683          mend
000043B8                                    6684+$eye0139    ds    0d                                                    02-DCCCA
000043B8 C4C3C3                             6685+         dc cl3'DCC'                                                    02-DCCCA
000043BB 01                                 6686+         dc xl1'01' format one                                          02-DCCCA
000043BC 00000000                           6687+         dc a(0)                                                        02-DCCCA
000043C0 000000000000442A                   6688+         dc ad(@PER_815)                                                02-DCCCA
000043C8 00000000000000C8                   6689+         dc ad(200)                                                     02-DCCCA
000043D0 0000000000000000                   6690+         dc ad(0)                                                       02-DCCCA
000043D8 0000000000001000                   6691+         dc ad(4096)                                                    02-DCCCA
000043E0 20                                 6692+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000043E1 03                                 6693+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000043E2 03                                 6694+         dc al1(3)                                                      02-DCCCA
000043E3 08                                 6695+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000043E4 00                                 6696+         dc bl.8'00000000'                                              02-DCCCA
000043E5 000000                             6697+         dc al3(0)                                                      02-DCCCA
000043E8 000000000000439C                   6698+         dc ad(@LNAME815)                                               02-DCCCA
000043F0                                    6699+         ds 0d                                                          02-DCCCA
000043F0 00000000000043B8                   6700+         dc ad($eye0139)                                                02-DCCCA
000043F8 0000000000000000                   6701+         dc ad(0)                                                       02-DCCCA
00004400                                    6702+         ds    0d                                                       01-DCCPR
                                            6703+         entry rd_slice_ensure_contig                                   01-DCCPR
00004400                                    6704+rd_slice_ensure_contig ds 0d                                            01-DCCPR
00004400                                    6705+@REGION_815_1 ds 0h                                                     01-DCCPR
00004400 EBEC D008 0024          00000008   6706+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004406 E3E0 D088 0004          00000088   6707+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000440C E3C0 D090 0004          00000090   6708+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004412 B904 002E                          6709+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004416 E3B0 C018 0004          00000018   6710+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000441C A7EB 00C8               000000C8   6711+         aghi  14,200              increase by frame size               01-DCCPR
00004420 E3E0 C020 0021          00000020   6712+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004426 4720 B020               00000020   6713+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000442A                                    6714+@PER_815 ds    0h                                                       01-DCCPR
0000442A EBDE 2080 0024          00000080   6715+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004430 E3C0 2090 0024          00000090   6716+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004436 B904 00D2                          6717+         lgr   13,2                set real frame pointer               01-DCCPR
0000443A B904 00CF                          6718+         lgr   12,15               set base reg                         01-DCCPR
                        00004400            6719+         using @REGION_815_1,12                                         01-DCCPR
                                            6720 * ******* End of Prologue
                                            6721 * *
0000443E EB23 1000 0004          00000000   6722          LMG   2,3,0(1)    ; slice
                                            6723 * ***           void *p;
                                            6724 * ***
                                            6725 * ***           if (((((slice)->end - rd_slice_abs_offset(slice)) < si\
                                            6726 * ze || slice->rof + size > slice->seg->seg_of)))
00004444 E340 2020 0004          00000020   6727          LG    4,32(0,2)   ; offset of end in rd_slice_s
                                                                                                                           Page  136 
  Active Usings: @REGION_815_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000444A E320 D0B0 0024          000000B0   6728          STG   2,176(0,13)
00004450 4110 D0B0               000000B0   6729          LA    1,176(0,13)
00004454 E3F0 C098 0004          00004498   6730          LG    15,@lit_815_209 ; rd_slice_abs_offset
0000445A                                    6731 @@gen_label279 DS    0H
0000445A 05EF                               6732          BALR  14,15
0000445C                                    6733 @@gen_label280 DS    0H
0000445C B90B 004F                          6734          SLGR  4,15
00004460 B921 0043                          6735          CLGR  4,3
00004464 4740 C082               00004482   6736          BL    @L267
00004468 B904 00F3                          6737          LGR   15,3
0000446C E3F0 2010 000A          00000010   6738          ALG   15,16(0,2)
00004472 E310 2008 0004          00000008   6739          LG    1,8(0,2)    ; offset of seg in rd_slice_s
00004478 E3F0 1018 0021          00000018   6740          CLG   15,24(0,1)
0000447E 47D0 C0A8               000044A8   6741          BNH   @L266
00004482                                    6742 @L267    DS    0H
                                            6743 * ***
                                            6744 * ***                   return ((void *)0);
00004482 A7F9 0000               00000000   6745          LGHI  15,0        ; 0
00004486 47F0 C0E0               000044E0   6746          B     @ret_lab_815
00004490                                    6747          DS    0D
00004490 000000C8                           6748 @FRAMESIZE_815 DC F'200'
00004494 00000000
00004498 00000000000007F0                   6749 @lit_815_209 DC AD(rd_slice_abs_offset)
000044A0 0000000000003ED0                   6750 @lit_815_211 DC AD(rd_slice_read)
000044A8                                    6751 @L266    DS    0H
                                            6752 * ***
                                            6753 * ***           p = slice->seg->seg_p + slice->rof;
000044A8 E3F0 2008 0004          00000008   6754          LG    15,8(0,2)   ; offset of seg in rd_slice_s
000044AE E3F0 F010 0004          00000010   6755          LG    15,16(0,15) ; offset of seg_p in rd_segment_s
000044B4 E310 2010 0004          00000010   6756          LG    1,16(0,2)   ; offset of rof in rd_slice_s
000044BA 4141 F000               00000000   6757          LA    4,0(1,15)
                                            6758 * ***
                                            6759 * ***           rd_slice_read(slice, ((void *)0), size);
000044BE E320 D0B0 0024          000000B0   6760          STG   2,176(0,13)
000044C4 D707 D0B8 D0B8 000000B8 000000B8   6761          XC    184(8,13),184(13)
000044CA E330 D0C0 0024          000000C0   6762          STG   3,192(0,13)
000044D0 4110 D0B0               000000B0   6763          LA    1,176(0,13)
000044D4 E3F0 C0A0 0004          000044A0   6764          LG    15,@lit_815_211 ; rd_slice_read
000044DA                                    6765 @@gen_label283 DS    0H
000044DA 05EF                               6766          BALR  14,15
000044DC                                    6767 @@gen_label284 DS    0H
                                            6768 * ***
                                            6769 * ***           return p;
000044DC B904 00F4                          6770          LGR   15,4
                                            6771 * ***   }
000044E0                                    6772 @ret_lab_815 DS 0H
                                            6773 * * **** Start of Epilogue
                                            6774          DCCEPIL
000044E0                                    6775+         ds 0h                                                          01-DCCEP
                                            6776+* Epilog
000044E0 D707 D088 D088 00000088 00000088   6777+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000044E6 E3D0 D080 0004          00000080   6778+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page  137 
  Active Usings: @REGION_815_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000044EC E3C0 D090 0004          00000090   6779+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000044F2 E3B0 C018 0004          00000018   6780+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000044F8 E3C0 B010 0021          00000010   6781+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000044FE E3E0 D008 0004          00000008   6782+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004504 EB1C D020 0004          00000020   6783+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000450A 078E                               6784+         bcr 8,14                if same dsab, just return              01-DCCEP
0000450C E3F0 D010 0024          00000010   6785+         stg 15,16(0,13)         save return code                       01-DCCEP
00004512 E300 D018 0024          00000018   6786+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004518 E3F0 D090 0004          00000090   6787+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000451E E3F0 F018 0004          00000018   6788+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004524 47F0 F040               00000040   6789+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6790+* End of Epilog
                                            6791 * * **** End of Epilogue
                                            6792          DROP  12
                                            6793 *
                                            6794 *   DSECT for automatic variables in "rd_slice_ensure_contig"
                                            6795 *      (FUNCTION #815)
                                            6796 *
00000000                00000000 000000A8   6797 @AUTO#rd_slice_ensure_contig DSECT
00000000                                    6798          DS    XL168
                                            6799 *
00004528                00000000 0000BFA0   6800 @CODE    CSECT
                                            6801 *
                                            6802 *
                                            6803 *
                                            6804 * ....... start of rd_slice_seek
                                            6805 rd_slice_seek ALIAS X'99846DA2938983856DA2858592'
00004528                                    6806 @LNAME816 DS   0H
00004528 0000000D                           6807          DC    X'0000000D'
0000452C 99846DA293898385                   6808          DC    C'rd_slice_seek'
00004539 00                                 6809          DC    X'00'
                                            6810 rd_slice_seek DCCPRLG CINDEX=816,BASER=12,FRAME=208,ENTRY=YES,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME816
                                            6811          macro
                                            6812          dccextrn &m
                                            6813          gblc    &$dccext(1000)
                                            6814          gbla    &$dccexti
                                            6815          lcla    &i
                                            6816 &$dccext(&$dccexti+1) setc    '&m'
                                            6817 &i       seta    1
                                            6818 .loop    aif    (&i gt &$dccexti).around
                                            6819          aif    ('&$dccext(&i)' eq '&m').getout
                                            6820 &i       seta    &i+1
                                            6821          ago     .loop
                                            6822 .around  anop
                                            6823 &$dccexti seta &$dccexti+1
                                            6824          extrn  &m
                                            6825 .getout  anop
                                            6826          mend
00004540                                    6827+$eye0142    ds    0d                                                    02-DCCCA
00004540 C4C3C3                             6828+         dc cl3'DCC'                                                    02-DCCCA
00004543 01                                 6829+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page  138 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004544 00000000                           6830+         dc a(0)                                                        02-DCCCA
00004548 00000000000045B2                   6831+         dc ad(@PER_816)                                                02-DCCCA
00004550 00000000000000D0                   6832+         dc ad(208)                                                     02-DCCCA
00004558 0000000000000000                   6833+         dc ad(0)                                                       02-DCCCA
00004560 0000000000001000                   6834+         dc ad(4096)                                                    02-DCCCA
00004568 20                                 6835+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004569 03                                 6836+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000456A 03                                 6837+         dc al1(3)                                                      02-DCCCA
0000456B 08                                 6838+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000456C 00                                 6839+         dc bl.8'00000000'                                              02-DCCCA
0000456D 000000                             6840+         dc al3(0)                                                      02-DCCCA
00004570 0000000000004528                   6841+         dc ad(@LNAME816)                                               02-DCCCA
00004578                                    6842+         ds 0d                                                          02-DCCCA
00004578 0000000000004540                   6843+         dc ad($eye0142)                                                02-DCCCA
00004580 0000000000000000                   6844+         dc ad(0)                                                       02-DCCCA
00004588                                    6845+         ds    0d                                                       01-DCCPR
                                            6846+         entry rd_slice_seek                                            01-DCCPR
00004588                                    6847+rd_slice_seek ds 0d                                                     01-DCCPR
00004588                                    6848+@REGION_816_1 ds 0h                                                     01-DCCPR
00004588 EBEC D008 0024          00000008   6849+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000458E E3E0 D088 0004          00000088   6850+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004594 E3C0 D090 0004          00000090   6851+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000459A B904 002E                          6852+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000459E E3B0 C018 0004          00000018   6853+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000045A4 A7EB 00D0               000000D0   6854+         aghi  14,208              increase by frame size               01-DCCPR
000045A8 E3E0 C020 0021          00000020   6855+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000045AE 4720 B020               00000020   6856+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000045B2                                    6857+@PER_816 ds    0h                                                       01-DCCPR
000045B2 EBDE 2080 0024          00000080   6858+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000045B8 E3C0 2090 0024          00000090   6859+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000045BE B904 00D2                          6860+         lgr   13,2                set real frame pointer               01-DCCPR
000045C2 B904 00CF                          6861+         lgr   12,15               set base reg                         01-DCCPR
                        00004588            6862+         using @REGION_816_1,12                                         01-DCCPR
                                            6863 * ******* End of Prologue
                                            6864 * *
000045C6 E320 1000 0004          00000000   6865          LG    2,0(0,1)    ; slice
                                            6866 * ***           const rd_segment_t *seg;
                                            6867 * ***           size_t absof = slice->start + offset;
000045CC E340 2018 0004          00000018   6868          LG    4,24(0,2)   ; offset of start in rd_slice_s
000045D2 E340 1008 000A          00000008   6869          ALG   4,8(0,1)
                                            6870 * ***
                                            6871 * ***           if (((absof >= slice->end)))
000045D8 E340 2020 0021          00000020   6872          CLG   4,32(0,2)
000045DE 4740 C090               00004618   6873          BL    @L268
                                            6874 * ***                   return -1;
000045E2 A7F9 FFFF               0000FFFF   6875          LGHI  15,-1       ; -1
000045E6 47F0 C180               00004708   6876          B     @ret_lab_816
000045F0                                    6877          DS    0D
000045F0 000000D0                           6878 @FRAMESIZE_816 DC F'208'
000045F4 00000000
000045F8 0000000000001778                   6879 @lit_816_214 DC AD(rd_buf_get_segment_at_offset)
00004600 0000000000000000                   6880 @lit_816_217 DC AD(__assert)
                                                                                                                           Page  139 
  Active Usings: @REGION_816_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004608 000000000000CB02                   6881 @lit_816_216 DC AD(@strings@)
00004610 000000000000BFA0                   6882 @lit_816_215 DC AD(@DATA)
00004618                                    6883 @L268    DS    0H
                                            6884 * ***
                                            6885 * ***           seg = rd_buf_get_segment_at_offset(slice->buf, slice->\
                                            6886 * seg, absof);
00004618 E3F0 2000 0004          00000000   6887          LG    15,0(0,2)
0000461E E3F0 D0B0 0024          000000B0   6888          STG   15,176(0,13)
00004624 E3F0 2008 0004          00000008   6889          LG    15,8(0,2)
0000462A E3F0 D0B8 0024          000000B8   6890          STG   15,184(0,13)
00004630 E340 D0C0 0024          000000C0   6891          STG   4,192(0,13)
00004636 4110 D0B0               000000B0   6892          LA    1,176(0,13)
0000463A E3F0 C070 0004          000045F8   6893          LG    15,@lit_816_214 ; rd_buf_get_segment_at_offset
00004640                                    6894 @@gen_label286 DS    0H
00004640 05EF                               6895          BALR  14,15
00004642                                    6896 @@gen_label287 DS    0H
00004642 B904 003F                          6897          LGR   3,15
                                            6898 * ***           ((seg) ? (void)0 : __assert(__func__, "C:\\asgkafka\\l\
                                            6899 * ibrdkafka\\src\\rdbuf.c", 1031, "seg"));
00004646 B902 00F3                          6900          LTGR  15,3
0000464A 4770 C102               0000468A   6901          BNZ   @L270
0000464E                                    6902 @L269    DS    0H
0000464E E3F0 C088 0004          00004610   6903          LG    15,@lit_816_215
00004654 41F0 F124               00000124   6904          LA    15,292(0,15)
00004658 E3F0 D0B0 0024          000000B0   6905          STG   15,176(0,13)
0000465E E3F0 C080 0004          00004608   6906          LG    15,@lit_816_216
00004664 4110 F040               00000040   6907          LA    1,64(0,15)
00004668 E310 D0B8 0024          000000B8   6908          STG   1,184(0,13)
0000466E E548 D0C0 0407          000000C0   6909          MVGHI 192(13),1031
00004674 41F0 F34A               0000034A   6910          LA    15,842(0,15)
00004678 E3F0 D0C8 0024          000000C8   6911          STG   15,200(0,13)
0000467E 4110 D0B0               000000B0   6912          LA    1,176(0,13)
00004682 E3F0 C078 0004          00004600   6913          LG    15,@lit_816_217 ; __assert
00004688                                    6914 @@gen_label289 DS    0H
00004688 05EF                               6915          BALR  14,15
0000468A                                    6916 @@gen_label290 DS    0H
0000468A                                    6917 @L270    DS    0H
                                            6918 * ***
                                            6919 * ***           slice->seg = seg;
0000468A E330 2008 0024          00000008   6920          STG   3,8(0,2)    ; offset of seg in rd_slice_s
                                            6921 * ***           slice->rof = absof - seg->seg_absof;
00004690 E340 3028 000B          00000028   6922          SLG   4,40(0,3)
00004696 E340 2010 0024          00000010   6923          STG   4,16(0,2)   ; offset of rof in rd_slice_s
                                            6924 * ***           ((seg->seg_absof + slice->rof >= slice->start && seg->\
                                            6925 * seg_absof + slice->rof <= slice->end) ? (void)0 : __assert(__func__,\
                                            6926 *  "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1035, "seg->seg_absof + s\
                                            6927 * lice->rof >= slice->start && seg->seg_absof + slice->rof <= slice->e\
                                            6928 * nd"));
0000469C E3F0 3028 0004          00000028   6929          LG    15,40(0,3)  ; offset of seg_absof in rd_segment_s
000046A2 E3F0 2010 000A          00000010   6930          ALG   15,16(0,2)
000046A8 E3F0 2018 0021          00000018   6931          CLG   15,24(0,2)
000046AE 4740 C140               000046C8   6932          BL    @L271
                                                                                                                           Page  140 
  Active Usings: @REGION_816_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000046B2 E3F0 3028 0004          00000028   6933          LG    15,40(0,3)  ; offset of seg_absof in rd_segment_s
000046B8 E3F0 2010 000A          00000010   6934          ALG   15,16(0,2)
000046BE E3F0 2020 0021          00000020   6935          CLG   15,32(0,2)
000046C4 47D0 C17C               00004704   6936          BNH   @L272
000046C8                                    6937 @L271    DS    0H
000046C8 E3F0 C088 0004          00004610   6938          LG    15,@lit_816_215
000046CE 41F0 F124               00000124   6939          LA    15,292(0,15)
000046D2 E3F0 D0B0 0024          000000B0   6940          STG   15,176(0,13)
000046D8 E3F0 C080 0004          00004608   6941          LG    15,@lit_816_216
000046DE 4110 F040               00000040   6942          LA    1,64(0,15)
000046E2 E310 D0B8 0024          000000B8   6943          STG   1,184(0,13)
000046E8 E548 D0C0 040B          000000C0   6944          MVGHI 192(13),1035
000046EE 41F0 F34E               0000034E   6945          LA    15,846(0,15)
000046F2 E3F0 D0C8 0024          000000C8   6946          STG   15,200(0,13)
000046F8 4110 D0B0               000000B0   6947          LA    1,176(0,13)
000046FC E3F0 C078 0004          00004600   6948          LG    15,@lit_816_217 ; __assert
00004702                                    6949 @@gen_label293 DS    0H
00004702 05EF                               6950          BALR  14,15
00004704                                    6951 @@gen_label294 DS    0H
00004704                                    6952 @L272    DS    0H
                                            6953 * ***
                                            6954 * ***
                                            6955 * ***           return 0;
00004704 A7F9 0000               00000000   6956          LGHI  15,0        ; 0
                                            6957 * ***   }
00004708                                    6958 @ret_lab_816 DS 0H
                                            6959 * * **** Start of Epilogue
                                            6960          DCCEPIL
00004708                                    6961+         ds 0h                                                          01-DCCEP
                                            6962+* Epilog
00004708 D707 D088 D088 00000088 00000088   6963+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000470E E3D0 D080 0004          00000080   6964+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004714 E3C0 D090 0004          00000090   6965+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000471A E3B0 C018 0004          00000018   6966+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004720 E3C0 B010 0021          00000010   6967+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004726 E3E0 D008 0004          00000008   6968+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000472C EB1C D020 0004          00000020   6969+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004732 078E                               6970+         bcr 8,14                if same dsab, just return              01-DCCEP
00004734 E3F0 D010 0024          00000010   6971+         stg 15,16(0,13)         save return code                       01-DCCEP
0000473A E300 D018 0024          00000018   6972+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004740 E3F0 D090 0004          00000090   6973+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004746 E3F0 F018 0004          00000018   6974+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000474C 47F0 F040               00000040   6975+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6976+* End of Epilog
                                            6977 * * **** End of Epilogue
                                            6978          DROP  12
                                            6979 *
                                            6980 *   DSECT for automatic variables in "rd_slice_seek"
                                            6981 *      (FUNCTION #816)
                                            6982 *
00000000                00000000 000000B0   6983 @AUTO#rd_slice_seek DSECT
00000000                                    6984          DS    XL168
                                                                                                                           Page  141 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000A8                                    6985 rd_slice_seek#absof#0 DS 8XL1 ; absof
                                            6986 *
00004750                00000000 0000BFA0   6987 @CODE    CSECT
                                            6988 *
                                            6989 *
                                            6990 *
                                            6991 * ....... start of rd_slice_narrow
                                            6992 rd_slice_narrow ALIAS X'99846DA2938983856D9581999996A6'
00004750                                    6993 @LNAME820 DS   0H
00004750 0000000F                           6994          DC    X'0000000F'
00004754 99846DA293898385                   6995          DC    C'rd_slice_narrow'
00004763 00                                 6996          DC    X'00'
                                            6997 rd_slice_narrow DCCPRLG CINDEX=820,BASER=12,FRAME=200,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME820
                                            6998          macro
                                            6999          dccextrn &m
                                            7000          gblc    &$dccext(1000)
                                            7001          gbla    &$dccexti
                                            7002          lcla    &i
                                            7003 &$dccext(&$dccexti+1) setc    '&m'
                                            7004 &i       seta    1
                                            7005 .loop    aif    (&i gt &$dccexti).around
                                            7006          aif    ('&$dccext(&i)' eq '&m').getout
                                            7007 &i       seta    &i+1
                                            7008          ago     .loop
                                            7009 .around  anop
                                            7010 &$dccexti seta &$dccexti+1
                                            7011          extrn  &m
                                            7012 .getout  anop
                                            7013          mend
00004768                                    7014+$eye0145    ds    0d                                                    02-DCCCA
00004768 C4C3C3                             7015+         dc cl3'DCC'                                                    02-DCCCA
0000476B 01                                 7016+         dc xl1'01' format one                                          02-DCCCA
0000476C 00000000                           7017+         dc a(0)                                                        02-DCCCA
00004770 00000000000047DA                   7018+         dc ad(@PER_820)                                                02-DCCCA
00004778 00000000000000C8                   7019+         dc ad(200)                                                     02-DCCCA
00004780 0000000000000000                   7020+         dc ad(0)                                                       02-DCCCA
00004788 0000000000001000                   7021+         dc ad(4096)                                                    02-DCCCA
00004790 20                                 7022+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004791 03                                 7023+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004792 03                                 7024+         dc al1(3)                                                      02-DCCCA
00004793 08                                 7025+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004794 00                                 7026+         dc bl.8'00000000'                                              02-DCCCA
00004795 000000                             7027+         dc al3(0)                                                      02-DCCCA
00004798 0000000000004750                   7028+         dc ad(@LNAME820)                                               02-DCCCA
000047A0                                    7029+         ds 0d                                                          02-DCCCA
000047A0 0000000000004768                   7030+         dc ad($eye0145)                                                02-DCCCA
000047A8 0000000000000000                   7031+         dc ad(0)                                                       02-DCCCA
000047B0                                    7032+         ds    0d                                                       01-DCCPR
                                            7033+         entry rd_slice_narrow                                          01-DCCPR
000047B0                                    7034+rd_slice_narrow ds 0d                                                   01-DCCPR
000047B0                                    7035+@REGION_820_1 ds 0h                                                     01-DCCPR
                                                                                                                           Page  142 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000047B0 EBEC D008 0024          00000008   7036+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000047B6 E3E0 D088 0004          00000088   7037+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000047BC E3C0 D090 0004          00000090   7038+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000047C2 B904 002E                          7039+         lgr   2,14                copy addr of our savearea            01-DCCPR
000047C6 E3B0 C018 0004          00000018   7040+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000047CC A7EB 00C8               000000C8   7041+         aghi  14,200              increase by frame size               01-DCCPR
000047D0 E3E0 C020 0021          00000020   7042+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000047D6 4720 B020               00000020   7043+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000047DA                                    7044+@PER_820 ds    0h                                                       01-DCCPR
000047DA EBDE 2080 0024          00000080   7045+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000047E0 E3C0 2090 0024          00000090   7046+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000047E6 B904 00D2                          7047+         lgr   13,2                set real frame pointer               01-DCCPR
000047EA B904 00CF                          7048+         lgr   12,15               set base reg                         01-DCCPR
                        000047B0            7049+         using @REGION_820_1,12                                         01-DCCPR
                                            7050 * ******* End of Prologue
                                            7051 * *
                                            7052 * ***           if (((slice->start + size > slice->end)))
000047EE E320 1000 0004          00000000   7053          LG    2,0(0,1)    ; slice
000047F4 E3F0 2018 0004          00000018   7054          LG    15,24(0,2)  ; offset of start in rd_slice_s
000047FA E3F0 1010 000A          00000010   7055          ALG   15,16(0,1)
00004800 E3F0 2020 0021          00000020   7056          CLG   15,32(0,2)
00004806 47D0 C090               00004840   7057          BNH   @L273
                                            7058 * ***                   return 0;
0000480A A7F9 0000               00000000   7059          LGHI  15,0        ; 0
0000480E 47F0 C10A               000048BA   7060          B     @ret_lab_820
00004818                                    7061          DS    0D
00004818 000000C8                           7062 @FRAMESIZE_820 DC F'200'
0000481C 00000000
00004820 00000000000007F0                   7063 @lit_820_224 DC AD(rd_slice_abs_offset)
00004828 0000000000000000                   7064 @lit_820_227 DC AD(__assert)
00004830 000000000000CB02                   7065 @lit_820_226 DC AD(@strings@)
00004838 000000000000BFA0                   7066 @lit_820_225 DC AD(@DATA)
00004840                                    7067 @L273    DS    0H
                                            7068 * ***           *save_slice = *slice;
00004840 E3F0 1008 0004          00000008   7069          LG    15,8(0,1)   ; save_slice
00004846 D227 F000 2000 00000000 00000000   7070          MVC   0(40,15),0(2)
                                            7071 * ***           slice->end = slice->start + size;
0000484C E3F0 2018 0004          00000018   7072          LG    15,24(0,2)  ; offset of start in rd_slice_s
00004852 E3F0 1010 000A          00000010   7073          ALG   15,16(0,1)
00004858 E3F0 2020 0024          00000020   7074          STG   15,32(0,2)  ; offset of end in rd_slice_s
                                            7075 * ***           ((rd_slice_abs_offset(slice) <= slice->end) ? (void)0 \
                                            7076 * : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1059,\
                                            7077 *  "rd_slice_abs_offset(slice) <= slice->end"));
0000485E E320 D0A8 0024          000000A8   7078          STG   2,168(0,13)
00004864 4110 D0A8               000000A8   7079          LA    1,168(0,13)
00004868 E3F0 C070 0004          00004820   7080          LG    15,@lit_820_224 ; rd_slice_abs_offset
0000486E                                    7081 @@gen_label296 DS    0H
0000486E 05EF                               7082          BALR  14,15
00004870                                    7083 @@gen_label297 DS    0H
00004870 E3F0 2020 0021          00000020   7084          CLG   15,32(0,2)
00004876 47D0 C106               000048B6   7085          BNH   @L275
0000487A                                    7086 @L274    DS    0H
                                                                                                                           Page  143 
  Active Usings: @REGION_820_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000487A E3F0 C088 0004          00004838   7087          LG    15,@lit_820_225
00004880 41F0 F132               00000132   7088          LA    15,306(0,15)
00004884 E3F0 D0A8 0024          000000A8   7089          STG   15,168(0,13)
0000488A E3F0 C080 0004          00004830   7090          LG    15,@lit_820_226
00004890 4110 F040               00000040   7091          LA    1,64(0,15)
00004894 E310 D0B0 0024          000000B0   7092          STG   1,176(0,13)
0000489A E548 D0B8 0423          000000B8   7093          MVGHI 184(13),1059
000048A0 41F0 F3A8               000003A8   7094          LA    15,936(0,15)
000048A4 E3F0 D0C0 0024          000000C0   7095          STG   15,192(0,13)
000048AA 4110 D0A8               000000A8   7096          LA    1,168(0,13)
000048AE E3F0 C078 0004          00004828   7097          LG    15,@lit_820_227 ; __assert
000048B4                                    7098 @@gen_label299 DS    0H
000048B4 05EF                               7099          BALR  14,15
000048B6                                    7100 @@gen_label300 DS    0H
000048B6                                    7101 @L275    DS    0H
                                            7102 * ***           return 1;
000048B6 A7F9 0001               00000001   7103          LGHI  15,1        ; 1
                                            7104 * ***   }
000048BA                                    7105 @ret_lab_820 DS 0H
                                            7106 * * **** Start of Epilogue
                                            7107          DCCEPIL
000048BA                                    7108+         ds 0h                                                          01-DCCEP
                                            7109+* Epilog
000048BA D707 D088 D088 00000088 00000088   7110+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000048C0 E3D0 D080 0004          00000080   7111+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000048C6 E3C0 D090 0004          00000090   7112+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000048CC E3B0 C018 0004          00000018   7113+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000048D2 E3C0 B010 0021          00000010   7114+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000048D8 E3E0 D008 0004          00000008   7115+         lg  14,8(0,13)          load up return address                 01-DCCEP
000048DE EB1C D020 0004          00000020   7116+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000048E4 078E                               7117+         bcr 8,14                if same dsab, just return              01-DCCEP
000048E6 E3F0 D010 0024          00000010   7118+         stg 15,16(0,13)         save return code                       01-DCCEP
000048EC E300 D018 0024          00000018   7119+         stg 0,24(0,13)          save more return code                  01-DCCEP
000048F2 E3F0 D090 0004          00000090   7120+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000048F8 E3F0 F018 0004          00000018   7121+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000048FE 47F0 F040               00000040   7122+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7123+* End of Epilog
                                            7124 * * **** End of Epilogue
                                            7125          DROP  12
                                            7126 *
                                            7127 *   DSECT for automatic variables in "rd_slice_narrow"
                                            7128 *      (FUNCTION #820)
                                            7129 *
00000000                00000000 000000A8   7130 @AUTO#rd_slice_narrow DSECT
00000000                                    7131          DS    XL168
                                            7132 *
00004902                00000000 0000BFA0   7133 @CODE    CSECT
                                            7134 *
                                            7135 *
                                            7136 *
                                            7137 * ....... start of rd_slice_narrow_relative
                                            7138 rd_slice_narrow_relative ALIAS X'99846DA2938983856D9581999996A66D998593*
                                                                                                                           Page  144 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                81A389A585'
00004902                                    7139 @LNAME821 DS   0H
00004902 00000018                           7140          DC    X'00000018'
00004906 99846DA293898385                   7141          DC    C'rd_slice_narrow_relative'
0000491E 00                                 7142          DC    X'00'
                                            7143 rd_slice_narrow_relative DCCPRLG CINDEX=821,BASER=12,FRAME=192,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME821
                                            7144          macro
                                            7145          dccextrn &m
                                            7146          gblc    &$dccext(1000)
                                            7147          gbla    &$dccexti
                                            7148          lcla    &i
                                            7149 &$dccext(&$dccexti+1) setc    '&m'
                                            7150 &i       seta    1
                                            7151 .loop    aif    (&i gt &$dccexti).around
                                            7152          aif    ('&$dccext(&i)' eq '&m').getout
                                            7153 &i       seta    &i+1
                                            7154          ago     .loop
                                            7155 .around  anop
                                            7156 &$dccexti seta &$dccexti+1
                                            7157          extrn  &m
                                            7158 .getout  anop
                                            7159          mend
00004920                                    7160+$eye0148    ds    0d                                                    02-DCCCA
00004920 C4C3C3                             7161+         dc cl3'DCC'                                                    02-DCCCA
00004923 01                                 7162+         dc xl1'01' format one                                          02-DCCCA
00004924 00000000                           7163+         dc a(0)                                                        02-DCCCA
00004928 0000000000004992                   7164+         dc ad(@PER_821)                                                02-DCCCA
00004930 00000000000000C0                   7165+         dc ad(192)                                                     02-DCCCA
00004938 0000000000000000                   7166+         dc ad(0)                                                       02-DCCCA
00004940 0000000000001000                   7167+         dc ad(4096)                                                    02-DCCCA
00004948 20                                 7168+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004949 03                                 7169+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000494A 03                                 7170+         dc al1(3)                                                      02-DCCCA
0000494B 08                                 7171+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000494C 00                                 7172+         dc bl.8'00000000'                                              02-DCCCA
0000494D 000000                             7173+         dc al3(0)                                                      02-DCCCA
00004950 0000000000004902                   7174+         dc ad(@LNAME821)                                               02-DCCCA
00004958                                    7175+         ds 0d                                                          02-DCCCA
00004958 0000000000004920                   7176+         dc ad($eye0148)                                                02-DCCCA
00004960 0000000000000000                   7177+         dc ad(0)                                                       02-DCCCA
00004968                                    7178+         ds    0d                                                       01-DCCPR
                                            7179+         entry rd_slice_narrow_relative                                 01-DCCPR
00004968                                    7180+rd_slice_narrow_relative ds 0d                                          01-DCCPR
00004968                                    7181+@REGION_821_1 ds 0h                                                     01-DCCPR
00004968 EBEC D008 0024          00000008   7182+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000496E E3E0 D088 0004          00000088   7183+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004974 E3C0 D090 0004          00000090   7184+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000497A B904 002E                          7185+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000497E E3B0 C018 0004          00000018   7186+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004984 A7EB 00C0               000000C0   7187+         aghi  14,192              increase by frame size               01-DCCPR
00004988 E3E0 C020 0021          00000020   7188+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page  145 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000498E 4720 B020               00000020   7189+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004992                                    7190+@PER_821 ds    0h                                                       01-DCCPR
00004992 EBDE 2080 0024          00000080   7191+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004998 E3C0 2090 0024          00000090   7192+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000499E B904 00D2                          7193+         lgr   13,2                set real frame pointer               01-DCCPR
000049A2 B904 00CF                          7194+         lgr   12,15               set base reg                         01-DCCPR
                        00004968            7195+         using @REGION_821_1,12                                         01-DCCPR
000049A6 B904 0021                          7196          LGR   2,1         ; ptr to parm area
                                            7197 * ******* End of Prologue
                                            7198 * *
                                            7199 * ***           return rd_slice_narrow(slice, save_slice,
                                            7200 * ***                                  rd_slice_offset(slice) + relsiz\
                                            7201 * e);
000049AA E3F0 2000 0004          00000000   7202          LG    15,0(0,2)   ; slice
000049B0 E3F0 D0A8 0024          000000A8   7203          STG   15,168(0,13)
000049B6 4110 D0A8               000000A8   7204          LA    1,168(0,13)
000049BA E3F0 C0E0 0004          00004A48   7205          LG    15,@lit_821_230 ; rd_slice_offset
000049C0                                    7206 @@gen_label301 DS    0H
000049C0 05EF                               7207          BALR  14,15
000049C2                                    7208 @@gen_label302 DS    0H
000049C2 E3F0 2010 000A          00000010   7209          ALG   15,16(0,2)
000049C8 E310 2000 0004          00000000   7210          LG    1,0(0,2)    ; slice
000049CE E310 D0A8 0024          000000A8   7211          STG   1,168(0,13)
000049D4 E310 2008 0004          00000008   7212          LG    1,8(0,2)    ; save_slice
000049DA E310 D0B0 0024          000000B0   7213          STG   1,176(0,13)
000049E0 E3F0 D0B8 0024          000000B8   7214          STG   15,184(0,13)
000049E6 4110 D0A8               000000A8   7215          LA    1,168(0,13)
000049EA E3F0 C0E8 0004          00004A50   7216          LG    15,@lit_821_231 ; rd_slice_narrow
000049F0                                    7217 @@gen_label303 DS    0H
000049F0 05EF                               7218          BALR  14,15
000049F2                                    7219 @@gen_label304 DS    0H
000049F2 B914 00FF                          7220          LGFR  15,15
                                            7221 * ***   }
                                            7222 * * **** Start of Epilogue
                                            7223          DCCEPIL
000049F6                                    7224+         ds 0h                                                          01-DCCEP
                                            7225+* Epilog
000049F6 D707 D088 D088 00000088 00000088   7226+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000049FC E3D0 D080 0004          00000080   7227+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004A02 E3C0 D090 0004          00000090   7228+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004A08 E3B0 C018 0004          00000018   7229+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004A0E E3C0 B010 0021          00000010   7230+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004A14 E3E0 D008 0004          00000008   7231+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004A1A EB1C D020 0004          00000020   7232+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004A20 078E                               7233+         bcr 8,14                if same dsab, just return              01-DCCEP
00004A22 E3F0 D010 0024          00000010   7234+         stg 15,16(0,13)         save return code                       01-DCCEP
00004A28 E300 D018 0024          00000018   7235+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004A2E E3F0 D090 0004          00000090   7236+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004A34 E3F0 F018 0004          00000018   7237+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004A3A 47F0 F040               00000040   7238+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7239+* End of Epilog
                                            7240 * * **** End of Epilogue
                                                                                                                           Page  146 
  Active Usings: @REGION_821_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004A40                                    7241          DS    0D
00004A40 000000C0                           7242 @FRAMESIZE_821 DC F'192'
00004A44 00000000
00004A48 0000000000000898                   7243 @lit_821_230 DC AD(rd_slice_offset)
00004A50 00000000000047B0                   7244 @lit_821_231 DC AD(rd_slice_narrow)
                                            7245          DROP  12
                                            7246 *
                                            7247 *   DSECT for automatic variables in "rd_slice_narrow_relative"
                                            7248 *      (FUNCTION #821)
                                            7249 *
00000000                00000000 000000A8   7250 @AUTO#rd_slice_narrow_relative DSECT
00000000                                    7251          DS    XL168
                                            7252 *
00004A58                00000000 0000BFA0   7253 @CODE    CSECT
                                            7254 *
                                            7255 *
                                            7256 *
                                            7257 * ....... start of rd_slice_widen
                                            7258 rd_slice_widen ALIAS X'99846DA2938983856DA689848595'
00004A58                                    7259 @LNAME822 DS   0H
00004A58 0000000E                           7260          DC    X'0000000E'
00004A5C 99846DA293898385                   7261          DC    C'rd_slice_widen'
00004A6A 00                                 7262          DC    X'00'
                                            7263 rd_slice_widen DCCPRLG CINDEX=822,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME822
                                            7264          macro
                                            7265          dccextrn &m
                                            7266          gblc    &$dccext(1000)
                                            7267          gbla    &$dccexti
                                            7268          lcla    &i
                                            7269 &$dccext(&$dccexti+1) setc    '&m'
                                            7270 &i       seta    1
                                            7271 .loop    aif    (&i gt &$dccexti).around
                                            7272          aif    ('&$dccext(&i)' eq '&m').getout
                                            7273 &i       seta    &i+1
                                            7274          ago     .loop
                                            7275 .around  anop
                                            7276 &$dccexti seta &$dccexti+1
                                            7277          extrn  &m
                                            7278 .getout  anop
                                            7279          mend
00004A70                                    7280+$eye0151    ds    0d                                                    02-DCCCA
00004A70 C4C3C3                             7281+         dc cl3'DCC'                                                    02-DCCCA
00004A73 01                                 7282+         dc xl1'01' format one                                          02-DCCCA
00004A74 00000000                           7283+         dc a(0)                                                        02-DCCCA
00004A78 0000000000000000                   7284+         dc ad(0)                                                       02-DCCCA
00004A80 00000000000000A8                   7285+         dc ad(168)                                                     02-DCCCA
00004A88 0000000000000000                   7286+         dc ad(0)                                                       02-DCCCA
00004A90 0000000000001000                   7287+         dc ad(4096)                                                    02-DCCCA
00004A98 20                                 7288+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004A99 03                                 7289+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004A9A 03                                 7290+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page  147 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004A9B 08                                 7291+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004A9C 00                                 7292+         dc bl.8'00000000'                                              02-DCCCA
00004A9D 000000                             7293+         dc al3(0)                                                      02-DCCCA
00004AA0 0000000000004A58                   7294+         dc ad(@LNAME822)                                               02-DCCCA
00004AA8                                    7295+         ds 0d                                                          02-DCCCA
00004AA8 0000000000004A70                   7296+         dc ad($eye0151)                                                02-DCCCA
00004AB0 0000000000000000                   7297+         dc ad(0)                                                       02-DCCCA
00004AB8                                    7298+         ds    0d                                                       01-DCCPR
                                            7299+         entry rd_slice_widen                                           01-DCCPR
00004AB8                                    7300+rd_slice_widen ds 0d                                                    01-DCCPR
00004AB8                                    7301+@REGION_822_1 ds 0h                                                     01-DCCPR
00004AB8 EBEC D008 0024          00000008   7302+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            7303 * ******* End of Prologue
                                            7304 * *
                                            7305 * ***           slice->end = save_slice->end;
00004ABE E3F0 1000 0004          00000000   7306          LG    15,0(0,1)   ; slice
00004AC4 E310 1008 0004          00000008   7307          LG    1,8(0,1)    ; save_slice
00004ACA E310 1020 0004          00000020   7308          LG    1,32(0,1)   ; offset of end in rd_slice_s
00004AD0 E310 F020 0024          00000020   7309          STG   1,32(0,15)  ; offset of end in rd_slice_s
                                            7310 * ***   }
00004AD6                                    7311 @ret_lab_822 DS 0H
                                            7312 * * **** Start of Epilogue
                                            7313          DCCEPIL
00004AD6                                    7314+         ds 0h                                                          01-DCCEP
                                            7315+* Epilog
                                            7316+* Epilog
00004AD6 E3E0 D008 0004          00000008   7317+         lg    14,8(,13) restore the reg                                01-DCCEP
00004ADC EB1C D020 0004          00000020   7318+         lmg   1,12,32(13)                                              01-DCCEP
00004AE2 07FE                               7319+         br   14                                                        01-DCCEP
                                            7320+* End of Epilog
                                            7321 * * **** End of Epilogue
                                            7322 *
                                            7323 *   DSECT for automatic variables in "rd_slice_widen"
                                            7324 *      (FUNCTION #822)
                                            7325 *
00000000                00000000 000000A8   7326 @AUTO#rd_slice_widen DSECT
00000000                                    7327          DS    XL168
                                            7328 *
00004AE4                00000000 0000BFA0   7329 @CODE    CSECT
                                            7330 *
                                            7331 *
                                            7332 *
                                            7333 * ....... start of rd_slice_narrow_copy
                                            7334 rd_slice_narrow_copy ALIAS X'99846DA2938983856D9581999996A66D839697A8'
00004AE4                                    7335 @LNAME823 DS   0H
00004AE4 00000014                           7336          DC    X'00000014'
00004AE8 99846DA293898385                   7337          DC    C'rd_slice_narrow_copy'
00004AFC 00                                 7338          DC    X'00'
                                            7339 rd_slice_narrow_copy DCCPRLG CINDEX=823,BASER=12,FRAME=200,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME823
                                            7340          macro
                                            7341          dccextrn &m
                                                                                                                           Page  148 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7342          gblc    &$dccext(1000)
                                            7343          gbla    &$dccexti
                                            7344          lcla    &i
                                            7345 &$dccext(&$dccexti+1) setc    '&m'
                                            7346 &i       seta    1
                                            7347 .loop    aif    (&i gt &$dccexti).around
                                            7348          aif    ('&$dccext(&i)' eq '&m').getout
                                            7349 &i       seta    &i+1
                                            7350          ago     .loop
                                            7351 .around  anop
                                            7352 &$dccexti seta &$dccexti+1
                                            7353          extrn  &m
                                            7354 .getout  anop
                                            7355          mend
00004B00                                    7356+$eye0154    ds    0d                                                    02-DCCCA
00004B00 C4C3C3                             7357+         dc cl3'DCC'                                                    02-DCCCA
00004B03 01                                 7358+         dc xl1'01' format one                                          02-DCCCA
00004B04 00000000                           7359+         dc a(0)                                                        02-DCCCA
00004B08 0000000000004B72                   7360+         dc ad(@PER_823)                                                02-DCCCA
00004B10 00000000000000C8                   7361+         dc ad(200)                                                     02-DCCCA
00004B18 0000000000000000                   7362+         dc ad(0)                                                       02-DCCCA
00004B20 0000000000001000                   7363+         dc ad(4096)                                                    02-DCCCA
00004B28 20                                 7364+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004B29 03                                 7365+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004B2A 03                                 7366+         dc al1(3)                                                      02-DCCCA
00004B2B 08                                 7367+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004B2C 00                                 7368+         dc bl.8'00000000'                                              02-DCCCA
00004B2D 000000                             7369+         dc al3(0)                                                      02-DCCCA
00004B30 0000000000004AE4                   7370+         dc ad(@LNAME823)                                               02-DCCCA
00004B38                                    7371+         ds 0d                                                          02-DCCCA
00004B38 0000000000004B00                   7372+         dc ad($eye0154)                                                02-DCCCA
00004B40 0000000000000000                   7373+         dc ad(0)                                                       02-DCCCA
00004B48                                    7374+         ds    0d                                                       01-DCCPR
                                            7375+         entry rd_slice_narrow_copy                                     01-DCCPR
00004B48                                    7376+rd_slice_narrow_copy ds 0d                                              01-DCCPR
00004B48                                    7377+@REGION_823_1 ds 0h                                                     01-DCCPR
00004B48 EBEC D008 0024          00000008   7378+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004B4E E3E0 D088 0004          00000088   7379+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004B54 E3C0 D090 0004          00000090   7380+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004B5A B904 002E                          7381+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004B5E E3B0 C018 0004          00000018   7382+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004B64 A7EB 00C8               000000C8   7383+         aghi  14,200              increase by frame size               01-DCCPR
00004B68 E3E0 C020 0021          00000020   7384+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004B6E 4720 B020               00000020   7385+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004B72                                    7386+@PER_823 ds    0h                                                       01-DCCPR
00004B72 EBDE 2080 0024          00000080   7387+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004B78 E3C0 2090 0024          00000090   7388+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004B7E B904 00D2                          7389+         lgr   13,2                set real frame pointer               01-DCCPR
00004B82 B904 00CF                          7390+         lgr   12,15               set base reg                         01-DCCPR
                        00004B48            7391+         using @REGION_823_1,12                                         01-DCCPR
                                            7392 * ******* End of Prologue
                                            7393 * *
                                                                                                                           Page  149 
  Active Usings: @REGION_823_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7394 * ***           if (((orig->start + size > orig->end)))
00004B86 E3F0 1000 0004          00000000   7395          LG    15,0(0,1)   ; orig
00004B8C E320 1008 0004          00000008   7396          LG    2,8(0,1)    ; new_slice
00004B92 E330 F018 0004          00000018   7397          LG    3,24(0,15)  ; offset of start in rd_slice_s
00004B98 E330 1010 000A          00000010   7398          ALG   3,16(0,1)
00004B9E E330 F020 0021          00000020   7399          CLG   3,32(0,15)
00004BA4 47D0 C090               00004BD8   7400          BNH   @L276
                                            7401 * ***                   return 0;
00004BA8 A7F9 0000               00000000   7402          LGHI  15,0        ; 0
00004BAC 47F0 C104               00004C4C   7403          B     @ret_lab_823
00004BB0                                    7404          DS    0D
00004BB0 000000C8                           7405 @FRAMESIZE_823 DC F'200'
00004BB4 00000000
00004BB8 00000000000007F0                   7406 @lit_823_234 DC AD(rd_slice_abs_offset)
00004BC0 0000000000000000                   7407 @lit_823_237 DC AD(__assert)
00004BC8 000000000000CB02                   7408 @lit_823_236 DC AD(@strings@)
00004BD0 000000000000BFA0                   7409 @lit_823_235 DC AD(@DATA)
00004BD8                                    7410 @L276    DS    0H
                                            7411 * ***           *new_slice = *orig;
00004BD8 D227 2000 F000 00000000 00000000   7412          MVC   0(40,2),0(15)
                                            7413 * ***           new_slice->end = orig->start + size;
00004BDE E3F0 F018 0004          00000018   7414          LG    15,24(0,15) ; offset of start in rd_slice_s
00004BE4 E3F0 1010 000A          00000010   7415          ALG   15,16(0,1)
00004BEA E3F0 2020 0024          00000020   7416          STG   15,32(0,2)  ; offset of end in rd_slice_s
                                            7417 * ***           ((rd_slice_abs_offset(new_slice) <= new_slice->end) ? \
                                            7418 * (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c\
                                            7419 * ", 1099, "rd_slice_abs_offset(new_slice) <= new_slice->end"));
00004BF0 E320 D0A8 0024          000000A8   7420          STG   2,168(0,13)
00004BF6 4110 D0A8               000000A8   7421          LA    1,168(0,13)
00004BFA E3F0 C070 0004          00004BB8   7422          LG    15,@lit_823_234 ; rd_slice_abs_offset
00004C00                                    7423 @@gen_label306 DS    0H
00004C00 05EF                               7424          BALR  14,15
00004C02                                    7425 @@gen_label307 DS    0H
00004C02 E3F0 2020 0021          00000020   7426          CLG   15,32(0,2)
00004C08 47D0 C100               00004C48   7427          BNH   @L278
00004C0C                                    7428 @L277    DS    0H
00004C0C E3F0 C088 0004          00004BD0   7429          LG    15,@lit_823_235
00004C12 41F0 F142               00000142   7430          LA    15,322(0,15)
00004C16 E3F0 D0A8 0024          000000A8   7431          STG   15,168(0,13)
00004C1C E3F0 C080 0004          00004BC8   7432          LG    15,@lit_823_236
00004C22 4110 F040               00000040   7433          LA    1,64(0,15)
00004C26 E310 D0B0 0024          000000B0   7434          STG   1,176(0,13)
00004C2C E548 D0B8 044B          000000B8   7435          MVGHI 184(13),1099
00004C32 41F0 F3D2               000003D2   7436          LA    15,978(0,15)
00004C36 E3F0 D0C0 0024          000000C0   7437          STG   15,192(0,13)
00004C3C 4110 D0A8               000000A8   7438          LA    1,168(0,13)
00004C40 E3F0 C078 0004          00004BC0   7439          LG    15,@lit_823_237 ; __assert
00004C46                                    7440 @@gen_label309 DS    0H
00004C46 05EF                               7441          BALR  14,15
00004C48                                    7442 @@gen_label310 DS    0H
00004C48                                    7443 @L278    DS    0H
                                            7444 * ***           return 1;
                                                                                                                           Page  150 
  Active Usings: @REGION_823_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004C48 A7F9 0001               00000001   7445          LGHI  15,1        ; 1
                                            7446 * ***   }
00004C4C                                    7447 @ret_lab_823 DS 0H
                                            7448 * * **** Start of Epilogue
                                            7449          DCCEPIL
00004C4C                                    7450+         ds 0h                                                          01-DCCEP
                                            7451+* Epilog
00004C4C D707 D088 D088 00000088 00000088   7452+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004C52 E3D0 D080 0004          00000080   7453+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004C58 E3C0 D090 0004          00000090   7454+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004C5E E3B0 C018 0004          00000018   7455+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004C64 E3C0 B010 0021          00000010   7456+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004C6A E3E0 D008 0004          00000008   7457+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004C70 EB1C D020 0004          00000020   7458+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004C76 078E                               7459+         bcr 8,14                if same dsab, just return              01-DCCEP
00004C78 E3F0 D010 0024          00000010   7460+         stg 15,16(0,13)         save return code                       01-DCCEP
00004C7E E300 D018 0024          00000018   7461+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004C84 E3F0 D090 0004          00000090   7462+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004C8A E3F0 F018 0004          00000018   7463+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004C90 47F0 F040               00000040   7464+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7465+* End of Epilog
                                            7466 * * **** End of Epilogue
                                            7467          DROP  12
                                            7468 *
                                            7469 *   DSECT for automatic variables in "rd_slice_narrow_copy"
                                            7470 *      (FUNCTION #823)
                                            7471 *
00000000                00000000 000000A8   7472 @AUTO#rd_slice_narrow_copy DSECT
00000000                                    7473          DS    XL168
                                            7474 *
00004C94                00000000 0000BFA0   7475 @CODE    CSECT
                                            7476 *
                                            7477 *
                                            7478 *
                                            7479 * ....... start of rd_slice_narrow_copy_relative
                                            7480 rd_slice_narrow_copy_relative ALIAS X'99846DA2938983856D9581999996A66D8*
                                                                39697A86D99859381A389A585'
00004C94                                    7481 @LNAME824 DS   0H
00004C94 0000001D                           7482          DC    X'0000001D'
00004C98 99846DA293898385                   7483          DC    C'rd_slice_narrow_copy_relative'
00004CB5 00                                 7484          DC    X'00'
                                            7485 rd_slice_narrow_copy_relative DCCPRLG CINDEX=824,BASER=12,FRAME=192,ENT*
                                                                RY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME824
                                            7486          macro
                                            7487          dccextrn &m
                                            7488          gblc    &$dccext(1000)
                                            7489          gbla    &$dccexti
                                            7490          lcla    &i
                                            7491 &$dccext(&$dccexti+1) setc    '&m'
                                            7492 &i       seta    1
                                            7493 .loop    aif    (&i gt &$dccexti).around
                                            7494          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page  151 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7495 &i       seta    &i+1
                                            7496          ago     .loop
                                            7497 .around  anop
                                            7498 &$dccexti seta &$dccexti+1
                                            7499          extrn  &m
                                            7500 .getout  anop
                                            7501          mend
00004CB8                                    7502+$eye0157    ds    0d                                                    02-DCCCA
00004CB8 C4C3C3                             7503+         dc cl3'DCC'                                                    02-DCCCA
00004CBB 01                                 7504+         dc xl1'01' format one                                          02-DCCCA
00004CBC 00000000                           7505+         dc a(0)                                                        02-DCCCA
00004CC0 0000000000004D2A                   7506+         dc ad(@PER_824)                                                02-DCCCA
00004CC8 00000000000000C0                   7507+         dc ad(192)                                                     02-DCCCA
00004CD0 0000000000000000                   7508+         dc ad(0)                                                       02-DCCCA
00004CD8 0000000000001000                   7509+         dc ad(4096)                                                    02-DCCCA
00004CE0 20                                 7510+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004CE1 03                                 7511+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004CE2 03                                 7512+         dc al1(3)                                                      02-DCCCA
00004CE3 08                                 7513+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004CE4 00                                 7514+         dc bl.8'00000000'                                              02-DCCCA
00004CE5 000000                             7515+         dc al3(0)                                                      02-DCCCA
00004CE8 0000000000004C94                   7516+         dc ad(@LNAME824)                                               02-DCCCA
00004CF0                                    7517+         ds 0d                                                          02-DCCCA
00004CF0 0000000000004CB8                   7518+         dc ad($eye0157)                                                02-DCCCA
00004CF8 0000000000000000                   7519+         dc ad(0)                                                       02-DCCCA
00004D00                                    7520+         ds    0d                                                       01-DCCPR
                                            7521+         entry rd_slice_narrow_copy_relative                            01-DCCPR
00004D00                                    7522+rd_slice_narrow_copy_relative ds 0d                                     01-DCCPR
00004D00                                    7523+@REGION_824_1 ds 0h                                                     01-DCCPR
00004D00 EBEC D008 0024          00000008   7524+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004D06 E3E0 D088 0004          00000088   7525+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004D0C E3C0 D090 0004          00000090   7526+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004D12 B904 002E                          7527+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004D16 E3B0 C018 0004          00000018   7528+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004D1C A7EB 00C0               000000C0   7529+         aghi  14,192              increase by frame size               01-DCCPR
00004D20 E3E0 C020 0021          00000020   7530+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004D26 4720 B020               00000020   7531+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004D2A                                    7532+@PER_824 ds    0h                                                       01-DCCPR
00004D2A EBDE 2080 0024          00000080   7533+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004D30 E3C0 2090 0024          00000090   7534+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004D36 B904 00D2                          7535+         lgr   13,2                set real frame pointer               01-DCCPR
00004D3A B904 00CF                          7536+         lgr   12,15               set base reg                         01-DCCPR
                        00004D00            7537+         using @REGION_824_1,12                                         01-DCCPR
00004D3E B904 0021                          7538          LGR   2,1         ; ptr to parm area
                                            7539 * ******* End of Prologue
                                            7540 * *
                                            7541 * ***           return rd_slice_narrow_copy(orig, new_slice,
                                            7542 * ***                                       rd_slice_offset(orig) + re\
                                            7543 * lsize);
00004D42 E3F0 2000 0004          00000000   7544          LG    15,0(0,2)   ; orig
00004D48 E3F0 D0A8 0024          000000A8   7545          STG   15,168(0,13)
00004D4E 4110 D0A8               000000A8   7546          LA    1,168(0,13)
                                                                                                                           Page  152 
  Active Usings: @REGION_824_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004D52 E3F0 C0E0 0004          00004DE0   7547          LG    15,@lit_824_240 ; rd_slice_offset
00004D58                                    7548 @@gen_label311 DS    0H
00004D58 05EF                               7549          BALR  14,15
00004D5A                                    7550 @@gen_label312 DS    0H
00004D5A E3F0 2010 000A          00000010   7551          ALG   15,16(0,2)
00004D60 E310 2000 0004          00000000   7552          LG    1,0(0,2)    ; orig
00004D66 E310 D0A8 0024          000000A8   7553          STG   1,168(0,13)
00004D6C E310 2008 0004          00000008   7554          LG    1,8(0,2)    ; new_slice
00004D72 E310 D0B0 0024          000000B0   7555          STG   1,176(0,13)
00004D78 E3F0 D0B8 0024          000000B8   7556          STG   15,184(0,13)
00004D7E 4110 D0A8               000000A8   7557          LA    1,168(0,13)
00004D82 E3F0 C0E8 0004          00004DE8   7558          LG    15,@lit_824_241 ; rd_slice_narrow_copy
00004D88                                    7559 @@gen_label313 DS    0H
00004D88 05EF                               7560          BALR  14,15
00004D8A                                    7561 @@gen_label314 DS    0H
00004D8A B914 00FF                          7562          LGFR  15,15
                                            7563 * ***   }
                                            7564 * * **** Start of Epilogue
                                            7565          DCCEPIL
00004D8E                                    7566+         ds 0h                                                          01-DCCEP
                                            7567+* Epilog
00004D8E D707 D088 D088 00000088 00000088   7568+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004D94 E3D0 D080 0004          00000080   7569+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004D9A E3C0 D090 0004          00000090   7570+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004DA0 E3B0 C018 0004          00000018   7571+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004DA6 E3C0 B010 0021          00000010   7572+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004DAC E3E0 D008 0004          00000008   7573+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004DB2 EB1C D020 0004          00000020   7574+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004DB8 078E                               7575+         bcr 8,14                if same dsab, just return              01-DCCEP
00004DBA E3F0 D010 0024          00000010   7576+         stg 15,16(0,13)         save return code                       01-DCCEP
00004DC0 E300 D018 0024          00000018   7577+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004DC6 E3F0 D090 0004          00000090   7578+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004DCC E3F0 F018 0004          00000018   7579+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004DD2 47F0 F040               00000040   7580+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7581+* End of Epilog
                                            7582 * * **** End of Epilogue
00004DD8                                    7583          DS    0D
00004DD8 000000C0                           7584 @FRAMESIZE_824 DC F'192'
00004DDC 00000000
00004DE0 0000000000000898                   7585 @lit_824_240 DC AD(rd_slice_offset)
00004DE8 0000000000004B48                   7586 @lit_824_241 DC AD(rd_slice_narrow_copy)
                                            7587          DROP  12
                                            7588 *
                                            7589 *   DSECT for automatic variables in "rd_slice_narrow_copy_relative"
                                            7590 *      (FUNCTION #824)
                                            7591 *
00000000                00000000 000000A8   7592 @AUTO#rd_slice_narrow_copy_relative DSECT
00000000                                    7593          DS    XL168
                                            7594 *
00004DF0                00000000 0000BFA0   7595 @CODE    CSECT
                                            7596 *
                                            7597 *
                                                                                                                           Page  153 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7598 *
                                            7599 * ....... start of rd_slice_get_iov
                                            7600 rd_slice_get_iov ALIAS X'99846DA2938983856D8785A36D8996A5'
00004DF0                                    7601 @LNAME817 DS   0H
00004DF0 00000010                           7602          DC    X'00000010'
00004DF4 99846DA293898385                   7603          DC    C'rd_slice_get_iov'
00004E04 00                                 7604          DC    X'00'
                                            7605 rd_slice_get_iov DCCPRLG CINDEX=817,BASER=12,FRAME=232,ENTRY=YES,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME817
                                            7606          macro
                                            7607          dccextrn &m
                                            7608          gblc    &$dccext(1000)
                                            7609          gbla    &$dccexti
                                            7610          lcla    &i
                                            7611 &$dccext(&$dccexti+1) setc    '&m'
                                            7612 &i       seta    1
                                            7613 .loop    aif    (&i gt &$dccexti).around
                                            7614          aif    ('&$dccext(&i)' eq '&m').getout
                                            7615 &i       seta    &i+1
                                            7616          ago     .loop
                                            7617 .around  anop
                                            7618 &$dccexti seta &$dccexti+1
                                            7619          extrn  &m
                                            7620 .getout  anop
                                            7621          mend
00004E08                                    7622+$eye0160    ds    0d                                                    02-DCCCA
00004E08 C4C3C3                             7623+         dc cl3'DCC'                                                    02-DCCCA
00004E0B 01                                 7624+         dc xl1'01' format one                                          02-DCCCA
00004E0C 00000000                           7625+         dc a(0)                                                        02-DCCCA
00004E10 0000000000004E7A                   7626+         dc ad(@PER_817)                                                02-DCCCA
00004E18 00000000000000E8                   7627+         dc ad(232)                                                     02-DCCCA
00004E20 0000000000000000                   7628+         dc ad(0)                                                       02-DCCCA
00004E28 0000000000001000                   7629+         dc ad(4096)                                                    02-DCCCA
00004E30 20                                 7630+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004E31 03                                 7631+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004E32 03                                 7632+         dc al1(3)                                                      02-DCCCA
00004E33 08                                 7633+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004E34 00                                 7634+         dc bl.8'00000000'                                              02-DCCCA
00004E35 000000                             7635+         dc al3(0)                                                      02-DCCCA
00004E38 0000000000004DF0                   7636+         dc ad(@LNAME817)                                               02-DCCCA
00004E40                                    7637+         ds 0d                                                          02-DCCCA
00004E40 0000000000004E08                   7638+         dc ad($eye0160)                                                02-DCCCA
00004E48 0000000000000000                   7639+         dc ad(0)                                                       02-DCCCA
00004E50                                    7640+         ds    0d                                                       01-DCCPR
                                            7641+         entry rd_slice_get_iov                                         01-DCCPR
00004E50                                    7642+rd_slice_get_iov ds 0d                                                  01-DCCPR
00004E50                                    7643+@REGION_817_1 ds 0h                                                     01-DCCPR
00004E50 EBEC D008 0024          00000008   7644+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004E56 E3E0 D088 0004          00000088   7645+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004E5C E3C0 D090 0004          00000090   7646+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004E62 B904 002E                          7647+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004E66 E3B0 C018 0004          00000018   7648+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page  154 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004E6C A7EB 00E8               000000E8   7649+         aghi  14,232              increase by frame size               01-DCCPR
00004E70 E3E0 C020 0021          00000020   7650+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004E76 4720 B020               00000020   7651+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004E7A                                    7652+@PER_817 ds    0h                                                       01-DCCPR
00004E7A EBDE 2080 0024          00000080   7653+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004E80 E3C0 2090 0024          00000090   7654+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004E86 B904 00D2                          7655+         lgr   13,2                set real frame pointer               01-DCCPR
00004E8A B904 00CF                          7656+         lgr   12,15               set base reg                         01-DCCPR
                        00004E50            7657+         using @REGION_817_1,12                                         01-DCCPR
00004E8E B904 0041                          7658          LGR   4,1         ; ptr to parm area
                                            7659 * ******* End of Prologue
                                            7660 * *
                                            7661 * ***           const void *p;
                                            7662 * ***           size_t rlen;
                                            7663 * ***           size_t iovcnt = 0;
00004E92 A729 0000               00000000   7664          LGHI  2,0         ; 0
                                            7665 * ***           size_t sum = 0;
00004E96 B904 0032                          7666          LGR   3,2         ; sum
                                            7667 * ***           rd_slice_t copy = *slice;
00004E9A E3F0 4000 0004          00000000   7668          LG    15,0(0,4)   ; slice
00004EA0 D227 D0A8 F000 000000A8 00000000   7669          MVC   168(40,13),0(15)
                                            7670 * ***
                                            7671 * ***
                                            7672 * ***           while (sum < size_max && iovcnt < iov_max &&
00004EA6 47F0 C0A0               00004EF0   7673          B     @L282
00004EB0                                    7674          DS    0D
00004EB0 000000E8                           7675 @FRAMESIZE_817 DC F'232'
00004EB4 00000000
00004EB8 0000000000003C90                   7676 @lit_817_245 DC AD(rd_slice_reader)
00004EC0                                    7677 @L281    DS    0H
                                            7678 * ***                   iovs[iovcnt].iov_base  = (void *)p;
00004EC0 E310 4008 0004          00000008   7679          LG    1,8(0,4)    ; iovs
00004EC6 EB52 0004 000D          00000004   7680          SLLG  5,2,4(0)    ; *0x10
00004ECC E360 D0D0 0004          000000D0   7681          LG    6,208(0,13) ; p
00004ED2 E365 1000 0024          00000000   7682          STG   6,0(5,1)
                                            7683 * ***                   iovs[iovcnt++].iov_len = rlen;
00004ED8 B904 0052                          7684          LGR   5,2
00004EDC A72B 0001               00000001   7685          AGHI  2,1
00004EE0 EB55 0004 000D          00000004   7686          SLLG  5,5,4(0)    ; *0x10
00004EE6 E3F5 1008 0024          00000008   7687          STG   15,8(5,1)   ; offset of iov_len in iovec
                                            7688 * ***
                                            7689 * ***                   sum += rlen;
00004EEC B90A 003F                          7690          ALGR  3,15
                                            7691 * ***           }
00004EF0                                    7692 @L282    DS    0H
00004EF0 E330 4020 0021          00000020   7693          CLG   3,32(0,4)
00004EF6 47B0 C0DC               00004F2C   7694          BNL   @L283
00004EFA E320 4018 0021          00000018   7695          CLG   2,24(0,4)
00004F00 47B0 C0DC               00004F2C   7696          BNL   @L283
                                            7697 * ***                  (rlen = rd_slice_reader(&copy, &p))) {
00004F04 41F0 D0A8               000000A8   7698          LA    15,168(0,13)
00004F08 E3F0 D0D8 0024          000000D8   7699          STG   15,216(0,13)
                                                                                                                           Page  155 
  Active Usings: @REGION_817_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004F0E 41F0 D0D0               000000D0   7700          LA    15,208(0,13)
00004F12 E3F0 D0E0 0024          000000E0   7701          STG   15,224(0,13)
00004F18 4110 D0D8               000000D8   7702          LA    1,216(0,13)
00004F1C E3F0 C068 0004          00004EB8   7703          LG    15,@lit_817_245 ; rd_slice_reader
00004F22                                    7704 @@gen_label317 DS    0H
00004F22 05EF                               7705          BALR  14,15
00004F24                                    7706 @@gen_label318 DS    0H
00004F24 B902 00FF                          7707          LTGR  15,15
00004F28 4770 C070               00004EC0   7708          BNZ   @L281
00004F2C                                    7709 @L283    DS    0H
                                            7710 * ***
                                            7711 * ***           *iovcntp = iovcnt;
00004F2C E3F0 4010 0004          00000010   7712          LG    15,16(0,4)  ; iovcntp
00004F32 E320 F000 0024          00000000   7713          STG   2,0(0,15)   ; iovcntp
                                            7714 * ***
                                            7715 * ***           return sum;
00004F38 B904 00F3                          7716          LGR   15,3
                                            7717 * ***   }
                                            7718 * * **** Start of Epilogue
                                            7719          DCCEPIL
00004F3C                                    7720+         ds 0h                                                          01-DCCEP
                                            7721+* Epilog
00004F3C D707 D088 D088 00000088 00000088   7722+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004F42 E3D0 D080 0004          00000080   7723+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004F48 E3C0 D090 0004          00000090   7724+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004F4E E3B0 C018 0004          00000018   7725+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004F54 E3C0 B010 0021          00000010   7726+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004F5A E3E0 D008 0004          00000008   7727+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004F60 EB1C D020 0004          00000020   7728+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004F66 078E                               7729+         bcr 8,14                if same dsab, just return              01-DCCEP
00004F68 E3F0 D010 0024          00000010   7730+         stg 15,16(0,13)         save return code                       01-DCCEP
00004F6E E300 D018 0024          00000018   7731+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004F74 E3F0 D090 0004          00000090   7732+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004F7A E3F0 F018 0004          00000018   7733+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004F80 47F0 F040               00000040   7734+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7735+* End of Epilog
                                            7736 * * **** End of Epilogue
                                            7737          DROP  12
                                            7738 *
                                            7739 *   DSECT for automatic variables in "rd_slice_get_iov"
                                            7740 *      (FUNCTION #817)
                                            7741 *
00000000                00000000 000000D0   7742 @AUTO#rd_slice_get_iov DSECT
00000000                                    7743          DS    XL168
000000A8                                    7744 rd_slice_get_iov#copy#0 DS 40XL1 ; copy
000000D0                000000D0 000000A8   7745          ORG   @AUTO#rd_slice_get_iov+168
000000A8                                    7746 rd_slice_get_iov#sum#0 DS 8XL1 ; sum
000000B0                000000B0 000000A8   7747          ORG   @AUTO#rd_slice_get_iov+168
000000A8                                    7748 rd_slice_get_iov#iovcnt#0 DS 8XL1 ; iovcnt
000000B0                000000B0 000000A8   7749          ORG   @AUTO#rd_slice_get_iov+168
000000A8                                    7750 rd_slice_get_iov#rlen#0 DS 8XL1 ; rlen
                                            7751 *
                                                                                                                           Page  156 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004F84                00000000 0000BFA0   7752 @CODE    CSECT
                                            7753 *
                                            7754 *
                                            7755 *
                                            7756 * ....... start of rd_slice_crc32
                                            7757 rd_slice_crc32 ALIAS X'99846DA2938983856D839983F3F2'
00004F84                                    7758 @LNAME818 DS   0H
00004F84 0000000E                           7759          DC    X'0000000E'
00004F88 99846DA293898385                   7760          DC    C'rd_slice_crc32'
00004F96 00                                 7761          DC    X'00'
                                            7762 rd_slice_crc32 DCCPRLG CINDEX=818,BASER=12,FRAME=200,ENTRY=YES,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME818
                                            7763          macro
                                            7764          dccextrn &m
                                            7765          gblc    &$dccext(1000)
                                            7766          gbla    &$dccexti
                                            7767          lcla    &i
                                            7768 &$dccext(&$dccexti+1) setc    '&m'
                                            7769 &i       seta    1
                                            7770 .loop    aif    (&i gt &$dccexti).around
                                            7771          aif    ('&$dccext(&i)' eq '&m').getout
                                            7772 &i       seta    &i+1
                                            7773          ago     .loop
                                            7774 .around  anop
                                            7775 &$dccexti seta &$dccexti+1
                                            7776          extrn  &m
                                            7777 .getout  anop
                                            7778          mend
00004F98                                    7779+$eye0163    ds    0d                                                    02-DCCCA
00004F98 C4C3C3                             7780+         dc cl3'DCC'                                                    02-DCCCA
00004F9B 01                                 7781+         dc xl1'01' format one                                          02-DCCCA
00004F9C 00000000                           7782+         dc a(0)                                                        02-DCCCA
00004FA0 000000000000500A                   7783+         dc ad(@PER_818)                                                02-DCCCA
00004FA8 00000000000000C8                   7784+         dc ad(200)                                                     02-DCCCA
00004FB0 0000000000000000                   7785+         dc ad(0)                                                       02-DCCCA
00004FB8 0000000000001000                   7786+         dc ad(4096)                                                    02-DCCCA
00004FC0 20                                 7787+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004FC1 03                                 7788+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004FC2 03                                 7789+         dc al1(3)                                                      02-DCCCA
00004FC3 08                                 7790+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004FC4 00                                 7791+         dc bl.8'00000000'                                              02-DCCCA
00004FC5 000000                             7792+         dc al3(0)                                                      02-DCCCA
00004FC8 0000000000004F84                   7793+         dc ad(@LNAME818)                                               02-DCCCA
00004FD0                                    7794+         ds 0d                                                          02-DCCCA
00004FD0 0000000000004F98                   7795+         dc ad($eye0163)                                                02-DCCCA
00004FD8 0000000000000000                   7796+         dc ad(0)                                                       02-DCCCA
00004FE0                                    7797+         ds    0d                                                       01-DCCPR
                                            7798+         entry rd_slice_crc32                                           01-DCCPR
00004FE0                                    7799+rd_slice_crc32 ds 0d                                                    01-DCCPR
00004FE0                                    7800+@REGION_818_1 ds 0h                                                     01-DCCPR
00004FE0 EBEC D008 0024          00000008   7801+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004FE6 E3E0 D088 0004          00000088   7802+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page  157 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004FEC E3C0 D090 0004          00000090   7803+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004FF2 B904 002E                          7804+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004FF6 E3B0 C018 0004          00000018   7805+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004FFC A7EB 00C8               000000C8   7806+         aghi  14,200              increase by frame size               01-DCCPR
00005000 E3E0 C020 0021          00000020   7807+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005006 4720 B020               00000020   7808+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000500A                                    7809+@PER_818 ds    0h                                                       01-DCCPR
0000500A EBDE 2080 0024          00000080   7810+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005010 E3C0 2090 0024          00000090   7811+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005016 B904 00D2                          7812+         lgr   13,2                set real frame pointer               01-DCCPR
0000501A B904 00CF                          7813+         lgr   12,15               set base reg                         01-DCCPR
                        00004FE0            7814+         using @REGION_818_1,12                                         01-DCCPR
0000501E B904 0031                          7815          LGR   3,1         ; ptr to parm area
                                            7816 * ******* End of Prologue
                                            7817 * *
                                            7818 * ***           rd_crc32_t crc;
                                            7819 * ***           const void *p;
                                            7820 * ***           size_t rlen;
                                            7821 * ***
                                            7822 * ***           crc = rd_crc32_init();
00005022 E3F0 C058 0004          00005038   7823          LG    15,@lit_818_247 ; rd_crc32_init
00005028                                    7824 @@gen_label320 DS    0H
00005028 05EF                               7825          BALR  14,15
0000502A                                    7826 @@gen_label321 DS    0H
0000502A 182F                               7827          LR    2,15        ; crc
                                            7828 * ***
                                            7829 * ***           while ((rlen = rd_slice_reader(slice, &p)))
0000502C 47F0 C0A2               00005082   7830          B     @L287
00005030                                    7831          DS    0D
00005030 000000C8                           7832 @FRAMESIZE_818 DC F'200'
00005034 00000000
00005038 0000000000000950                   7833 @lit_818_247 DC AD(rd_crc32_init)
00005040 00000000000009C8                   7834 @lit_818_248 DC AD(rd_crc32_update)
00005048 0000000000003C90                   7835 @lit_818_249 DC AD(rd_slice_reader)
00005050 0000000000000B20                   7836 @lit_818_250 DC AD(rd_crc32_finalize)
00005058                                    7837 @L286    DS    0H
                                            7838 * ***                   crc = rd_crc32_update(crc, p, rlen);
00005058 B916 0012                          7839          LLGFR 1,2
0000505C E310 D0B0 0024          000000B0   7840          STG   1,176(0,13)
00005062 E310 D0A8 0004          000000A8   7841          LG    1,168(0,13) ; p
00005068 E310 D0B8 0024          000000B8   7842          STG   1,184(0,13)
0000506E E3F0 D0C0 0024          000000C0   7843          STG   15,192(0,13)
00005074 4110 D0B0               000000B0   7844          LA    1,176(0,13)
00005078 E3F0 C060 0004          00005040   7845          LG    15,@lit_818_248 ; rd_crc32_update
0000507E                                    7846 @@gen_label322 DS    0H
0000507E 05EF                               7847          BALR  14,15
00005080                                    7848 @@gen_label323 DS    0H
00005080 182F                               7849          LR    2,15        ; crc
00005082                                    7850 @L287    DS    0H
00005082 E3F0 3000 0004          00000000   7851          LG    15,0(0,3)   ; slice
00005088 E3F0 D0B0 0024          000000B0   7852          STG   15,176(0,13)
0000508E 41F0 D0A8               000000A8   7853          LA    15,168(0,13)
                                                                                                                           Page  158 
  Active Usings: @REGION_818_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005092 E3F0 D0B8 0024          000000B8   7854          STG   15,184(0,13)
00005098 4110 D0B0               000000B0   7855          LA    1,176(0,13)
0000509C E3F0 C068 0004          00005048   7856          LG    15,@lit_818_249 ; rd_slice_reader
000050A2                                    7857 @@gen_label324 DS    0H
000050A2 05EF                               7858          BALR  14,15
000050A4                                    7859 @@gen_label325 DS    0H
000050A4 B902 00FF                          7860          LTGR  15,15
000050A8 4770 C078               00005058   7861          BNZ   @L286
                                            7862 * ***
                                            7863 * ***           return (uint32_t)rd_crc32_finalize(crc);
000050AC B916 00F2                          7864          LLGFR 15,2
000050B0 E3F0 D0B0 0024          000000B0   7865          STG   15,176(0,13)
000050B6 4110 D0B0               000000B0   7866          LA    1,176(0,13)
000050BA E3F0 C070 0004          00005050   7867          LG    15,@lit_818_250 ; rd_crc32_finalize
000050C0                                    7868 @@gen_label327 DS    0H
000050C0 05EF                               7869          BALR  14,15
000050C2                                    7870 @@gen_label328 DS    0H
000050C2 B916 00FF                          7871          LLGFR 15,15
                                            7872 * ***   }
                                            7873 * * **** Start of Epilogue
                                            7874          DCCEPIL
000050C6                                    7875+         ds 0h                                                          01-DCCEP
                                            7876+* Epilog
000050C6 D707 D088 D088 00000088 00000088   7877+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000050CC E3D0 D080 0004          00000080   7878+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000050D2 E3C0 D090 0004          00000090   7879+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000050D8 E3B0 C018 0004          00000018   7880+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000050DE E3C0 B010 0021          00000010   7881+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000050E4 E3E0 D008 0004          00000008   7882+         lg  14,8(0,13)          load up return address                 01-DCCEP
000050EA EB1C D020 0004          00000020   7883+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000050F0 078E                               7884+         bcr 8,14                if same dsab, just return              01-DCCEP
000050F2 E3F0 D010 0024          00000010   7885+         stg 15,16(0,13)         save return code                       01-DCCEP
000050F8 E300 D018 0024          00000018   7886+         stg 0,24(0,13)          save more return code                  01-DCCEP
000050FE E3F0 D090 0004          00000090   7887+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005104 E3F0 F018 0004          00000018   7888+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000510A 47F0 F040               00000040   7889+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7890+* End of Epilog
                                            7891 * * **** End of Epilogue
                                            7892          DROP  12
                                            7893 *
                                            7894 *   DSECT for automatic variables in "rd_slice_crc32"
                                            7895 *      (FUNCTION #818)
                                            7896 *
00000000                00000000 000000B0   7897 @AUTO#rd_slice_crc32 DSECT
00000000                                    7898          DS    XL168
000000A8                                    7899 rd_slice_crc32#rlen#0 DS 8XL1 ; rlen
000000B0                000000B0 000000A8   7900          ORG   @AUTO#rd_slice_crc32+168
000000A8                                    7901 rd_slice_crc32#crc#0 DS 1F ; crc
                                            7902 *
0000510E                00000000 0000BFA0   7903 @CODE    CSECT
                                            7904 *
                                            7905 *
                                                                                                                           Page  159 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7906 *
                                            7907 * ....... start of rd_slice_crc32c
                                            7908 rd_slice_crc32c ALIAS X'99846DA2938983856D839983F3F283'
0000510E                                    7909 @LNAME819 DS   0H
0000510E 0000000F                           7910          DC    X'0000000F'
00005112 99846DA293898385                   7911          DC    C'rd_slice_crc32c'
00005121 00                                 7912          DC    X'00'
                                            7913 rd_slice_crc32c DCCPRLG CINDEX=819,BASER=12,FRAME=200,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME819
                                            7914          macro
                                            7915          dccextrn &m
                                            7916          gblc    &$dccext(1000)
                                            7917          gbla    &$dccexti
                                            7918          lcla    &i
                                            7919 &$dccext(&$dccexti+1) setc    '&m'
                                            7920 &i       seta    1
                                            7921 .loop    aif    (&i gt &$dccexti).around
                                            7922          aif    ('&$dccext(&i)' eq '&m').getout
                                            7923 &i       seta    &i+1
                                            7924          ago     .loop
                                            7925 .around  anop
                                            7926 &$dccexti seta &$dccexti+1
                                            7927          extrn  &m
                                            7928 .getout  anop
                                            7929          mend
00005128                                    7930+$eye0166    ds    0d                                                    02-DCCCA
00005128 C4C3C3                             7931+         dc cl3'DCC'                                                    02-DCCCA
0000512B 01                                 7932+         dc xl1'01' format one                                          02-DCCCA
0000512C 00000000                           7933+         dc a(0)                                                        02-DCCCA
00005130 000000000000519A                   7934+         dc ad(@PER_819)                                                02-DCCCA
00005138 00000000000000C8                   7935+         dc ad(200)                                                     02-DCCCA
00005140 0000000000000000                   7936+         dc ad(0)                                                       02-DCCCA
00005148 0000000000001000                   7937+         dc ad(4096)                                                    02-DCCCA
00005150 20                                 7938+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005151 03                                 7939+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005152 03                                 7940+         dc al1(3)                                                      02-DCCCA
00005153 08                                 7941+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005154 00                                 7942+         dc bl.8'00000000'                                              02-DCCCA
00005155 000000                             7943+         dc al3(0)                                                      02-DCCCA
00005158 000000000000510E                   7944+         dc ad(@LNAME819)                                               02-DCCCA
00005160                                    7945+         ds 0d                                                          02-DCCCA
00005160 0000000000005128                   7946+         dc ad($eye0166)                                                02-DCCCA
00005168 0000000000000000                   7947+         dc ad(0)                                                       02-DCCCA
00005170                                    7948+         ds    0d                                                       01-DCCPR
                                            7949+         entry rd_slice_crc32c                                          01-DCCPR
00005170                                    7950+rd_slice_crc32c ds 0d                                                   01-DCCPR
00005170                                    7951+@REGION_819_1 ds 0h                                                     01-DCCPR
00005170 EBEC D008 0024          00000008   7952+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005176 E3E0 D088 0004          00000088   7953+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000517C E3C0 D090 0004          00000090   7954+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005182 B904 002E                          7955+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005186 E3B0 C018 0004          00000018   7956+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page  160 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000518C A7EB 00C8               000000C8   7957+         aghi  14,200              increase by frame size               01-DCCPR
00005190 E3E0 C020 0021          00000020   7958+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005196 4720 B020               00000020   7959+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000519A                                    7960+@PER_819 ds    0h                                                       01-DCCPR
0000519A EBDE 2080 0024          00000080   7961+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000051A0 E3C0 2090 0024          00000090   7962+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000051A6 B904 00D2                          7963+         lgr   13,2                set real frame pointer               01-DCCPR
000051AA B904 00CF                          7964+         lgr   12,15               set base reg                         01-DCCPR
                        00005170            7965+         using @REGION_819_1,12                                         01-DCCPR
000051AE B904 0031                          7966          LGR   3,1         ; ptr to parm area
                                            7967 * ******* End of Prologue
                                            7968 * *
                                            7969 * ***           const void *p;
                                            7970 * ***           size_t rlen;
                                            7971 * ***           uint32_t crc = 0;
000051B2 A728 0000               00000000   7972          LHI   2,0         ; 0
                                            7973 * ***
                                            7974 * ***           while ((rlen = rd_slice_reader(slice, &p)))
000051B6 47F0 C092               00005202   7975          B     @L291
000051C0                                    7976          DS    0D
000051C0 000000C8                           7977 @FRAMESIZE_819 DC F'200'
000051C4 00000000
000051C8 0000000000000000                   7978 @lit_819_253 DC AD(crc32c)
000051D0 0000000000003C90                   7979 @lit_819_254 DC AD(rd_slice_reader)
000051D8                                    7980 @L290    DS    0H
                                            7981 * ***                   crc = crc32c(crc, (const char *)p, rlen);
000051D8 B916 0012                          7982          LLGFR 1,2
000051DC E310 D0B0 0024          000000B0   7983          STG   1,176(0,13)
000051E2 E310 D0A8 0004          000000A8   7984          LG    1,168(0,13) ; p
000051E8 E310 D0B8 0024          000000B8   7985          STG   1,184(0,13)
000051EE E3F0 D0C0 0024          000000C0   7986          STG   15,192(0,13)
000051F4 4110 D0B0               000000B0   7987          LA    1,176(0,13)
000051F8 E3F0 C058 0004          000051C8   7988          LG    15,@lit_819_253 ; crc32c
000051FE                                    7989 @@gen_label329 DS    0H
000051FE 05EF                               7990          BALR  14,15
00005200                                    7991 @@gen_label330 DS    0H
00005200 182F                               7992          LR    2,15        ; crc
00005202                                    7993 @L291    DS    0H
00005202 E3F0 3000 0004          00000000   7994          LG    15,0(0,3)   ; slice
00005208 E3F0 D0B0 0024          000000B0   7995          STG   15,176(0,13)
0000520E 41F0 D0A8               000000A8   7996          LA    15,168(0,13)
00005212 E3F0 D0B8 0024          000000B8   7997          STG   15,184(0,13)
00005218 4110 D0B0               000000B0   7998          LA    1,176(0,13)
0000521C E3F0 C060 0004          000051D0   7999          LG    15,@lit_819_254 ; rd_slice_reader
00005222                                    8000 @@gen_label331 DS    0H
00005222 05EF                               8001          BALR  14,15
00005224                                    8002 @@gen_label332 DS    0H
00005224 B902 00FF                          8003          LTGR  15,15
00005228 4770 C068               000051D8   8004          BNZ   @L290
                                            8005 * ***
                                            8006 * ***           return crc;
0000522C B916 00F2                          8007          LLGFR 15,2
                                                                                                                           Page  161 
  Active Usings: @REGION_819_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8008 * ***   }
                                            8009 * * **** Start of Epilogue
                                            8010          DCCEPIL
00005230                                    8011+         ds 0h                                                          01-DCCEP
                                            8012+* Epilog
00005230 D707 D088 D088 00000088 00000088   8013+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005236 E3D0 D080 0004          00000080   8014+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000523C E3C0 D090 0004          00000090   8015+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005242 E3B0 C018 0004          00000018   8016+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005248 E3C0 B010 0021          00000010   8017+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000524E E3E0 D008 0004          00000008   8018+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005254 EB1C D020 0004          00000020   8019+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000525A 078E                               8020+         bcr 8,14                if same dsab, just return              01-DCCEP
0000525C E3F0 D010 0024          00000010   8021+         stg 15,16(0,13)         save return code                       01-DCCEP
00005262 E300 D018 0024          00000018   8022+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005268 E3F0 D090 0004          00000090   8023+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000526E E3F0 F018 0004          00000018   8024+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005274 47F0 F040               00000040   8025+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8026+* End of Epilog
                                            8027 * * **** End of Epilogue
                                            8028          DROP  12
                                            8029 *
                                            8030 *   DSECT for automatic variables in "rd_slice_crc32c"
                                            8031 *      (FUNCTION #819)
                                            8032 *
00000000                00000000 000000B0   8033 @AUTO#rd_slice_crc32c DSECT
00000000                                    8034          DS    XL168
000000A8                                    8035 rd_slice_crc32c#crc#0 DS 1F ; crc
000000AC                000000AC 000000A8   8036          ORG   @AUTO#rd_slice_crc32c+168
000000A8                                    8037 rd_slice_crc32c#rlen#0 DS 8XL1 ; rlen
                                            8038 *
00005278                00000000 0000BFA0   8039 @CODE    CSECT
                                            8040 *
                                            8041 *
                                            8042 *
                                            8043 * ....... start of rd_segment_dump
00005278                                    8044 @LNAME850 DS   0H
00005278 0000000F                           8045          DC    X'0000000F'
0000527C 99846DA285879485                   8046          DC    C'rd_segment_dump'
0000528B 00                                 8047          DC    X'00'
                                            8048 rd_segment_dump DCCPRLG CINDEX=850,BASER=12,FRAME=248,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME850
                                            8049          macro
                                            8050          dccextrn &m
                                            8051          gblc    &$dccext(1000)
                                            8052          gbla    &$dccexti
                                            8053          lcla    &i
                                            8054 &$dccext(&$dccexti+1) setc    '&m'
                                            8055 &i       seta    1
                                            8056 .loop    aif    (&i gt &$dccexti).around
                                            8057          aif    ('&$dccext(&i)' eq '&m').getout
                                            8058 &i       seta    &i+1
                                                                                                                           Page  162 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8059          ago     .loop
                                            8060 .around  anop
                                            8061 &$dccexti seta &$dccexti+1
                                            8062          extrn  &m
                                            8063 .getout  anop
                                            8064          mend
00005290                                    8065+$eye0169    ds    0d                                                    02-DCCCA
00005290 C4C3C3                             8066+         dc cl3'DCC'                                                    02-DCCCA
00005293 01                                 8067+         dc xl1'01' format one                                          02-DCCCA
00005294 00000000                           8068+         dc a(0)                                                        02-DCCCA
00005298 0000000000005302                   8069+         dc ad(@PER_850)                                                02-DCCCA
000052A0 00000000000000F8                   8070+         dc ad(248)                                                     02-DCCCA
000052A8 0000000000000000                   8071+         dc ad(0)                                                       02-DCCCA
000052B0 0000000000001000                   8072+         dc ad(4096)                                                    02-DCCCA
000052B8 20                                 8073+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000052B9 03                                 8074+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000052BA 03                                 8075+         dc al1(3)                                                      02-DCCCA
000052BB 08                                 8076+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000052BC 00                                 8077+         dc bl.8'00000000'                                              02-DCCCA
000052BD 000000                             8078+         dc al3(0)                                                      02-DCCCA
000052C0 0000000000005278                   8079+         dc ad(@LNAME850)                                               02-DCCCA
000052C8                                    8080+         ds 0d                                                          02-DCCCA
000052C8 0000000000005290                   8081+         dc ad($eye0169)                                                02-DCCCA
000052D0 0000000000000000                   8082+         dc ad(0)                                                       02-DCCCA
000052D8                                    8083+         ds    0d                                                       01-DCCPR
000052D8                                    8084+rd_segment_dump ds 0d                                                   01-DCCPR
000052D8                                    8085+@REGION_850_1 ds 0h                                                     01-DCCPR
000052D8 EBEC D008 0024          00000008   8086+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000052DE E3E0 D088 0004          00000088   8087+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000052E4 E3C0 D090 0004          00000090   8088+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000052EA B904 002E                          8089+         lgr   2,14                copy addr of our savearea            01-DCCPR
000052EE E3B0 C018 0004          00000018   8090+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000052F4 A7EB 00F8               000000F8   8091+         aghi  14,248              increase by frame size               01-DCCPR
000052F8 E3E0 C020 0021          00000020   8092+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000052FE 4720 B020               00000020   8093+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005302                                    8094+@PER_850 ds    0h                                                       01-DCCPR
00005302 EBDE 2080 0024          00000080   8095+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005308 E3C0 2090 0024          00000090   8096+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000530E B904 00D2                          8097+         lgr   13,2                set real frame pointer               01-DCCPR
00005312 B904 00CF                          8098+         lgr   12,15               set base reg                         01-DCCPR
                        000052D8            8099+         using @REGION_850_1,12                                         01-DCCPR
                                            8100          DCCPRV REG=4      ; Get PRV from DVT
00005316 E340 B008 0004          00000008   8101+         LG 4,8(0,11)                                                   01-DCCPR
0000531C B904 0051                          8102          LGR   5,1         ; ptr to parm area
                                            8103 * ******* End of Prologue
                                            8104 * *
                                            8105 * ***           fprintf(__stderrp,
00005320 E320 5000 0004          00000000   8106          LG    2,0(0,5)    ; seg
00005326 E330 5010 0004          00000010   8107          LG    3,16(0,5)   ; relof
                                            8108 * ***                   "%s((rd_segment_t *)%p): "
                                            8109 * ***                   ind, seg, seg->seg_p, seg->seg_of,
                                            8110 * ***                   seg->seg_absof, seg->seg_size, seg->seg_free, \
                                                                                                                           Page  163 
  Active Usings: @REGION_850_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8111 * seg->seg_flags);
0000532C E360 C1C8 0016          000054A0   8112          LLGF  6,@lit_850_256 ; __stderrp
00005332 E3F6 4000 0004          00000000   8113          LG    15,0(6,4)   ; __stderrp
00005338 E3F0 D0A8 0024          000000A8   8114          STG   15,168(0,13)
                                            8115 * ***                   "p %p, of %" "zu" ", "
                                            8116 * ***                   "absof %" "zu" ", size %" "zu" ", free %p, fla\
                                            8117 * gs 0x%x\n",
0000533E E370 C1C0 0004          00005498   8118          LG    7,@lit_850_257
00005344 41F0 7404               00000404   8119          LA    15,1028(0,7)
00005348 E3F0 D0B0 0024          000000B0   8120          STG   15,176(0,13)
0000534E E3F0 5008 0004          00000008   8121          LG    15,8(0,5)   ; ind
00005354 E3F0 D0B8 0024          000000B8   8122          STG   15,184(0,13)
0000535A E320 D0C0 0024          000000C0   8123          STG   2,192(0,13)
00005360 E3F0 2010 0004          00000010   8124          LG    15,16(0,2)
00005366 E3F0 D0C8 0024          000000C8   8125          STG   15,200(0,13)
0000536C E3F0 2018 0004          00000018   8126          LG    15,24(0,2)
00005372 E3F0 D0D0 0024          000000D0   8127          STG   15,208(0,13)
00005378 E3F0 2028 0004          00000028   8128          LG    15,40(0,2)
0000537E E3F0 D0D8 0024          000000D8   8129          STG   15,216(0,13)
00005384 E3F0 2020 0004          00000020   8130          LG    15,32(0,2)
0000538A E3F0 D0E0 0024          000000E0   8131          STG   15,224(0,13)
00005390 E3F0 2030 0004          00000030   8132          LG    15,48(0,2)
00005396 E3F0 D0E8 0024          000000E8   8133          STG   15,232(0,13)
0000539C E3F0 2038 0014          00000038   8134          LGF   15,56(0,2)
000053A2 E3F0 D0F0 0024          000000F0   8135          STG   15,240(0,13)
000053A8 4110 D0A8               000000A8   8136          LA    1,168(0,13)
000053AC E3F0 C1B8 0004          00005490   8137          LG    15,@lit_850_258 ; fprintf
000053B2                                    8138 @@gen_label334 DS    0H
000053B2 05EF                               8139          BALR  14,15
000053B4                                    8140 @@gen_label335 DS    0H
                                            8141 * ***           ((relof <= seg->seg_of) ? (void)0 : __assert(__func__,\
                                            8142 *  "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1214, "relof <= seg->seg_\
                                            8143 * of"));
000053B4 E330 2018 0021          00000018   8144          CLG   3,24(0,2)
000053BA 47D0 C11C               000053F4   8145          BNH   @L293
000053BE                                    8146 @L292    DS    0H
000053BE E3F0 C1D8 0004          000054B0   8147          LG    15,@lit_850_259
000053C4 41F0 F158               00000158   8148          LA    15,344(0,15)
000053C8 E3F0 D0A8 0024          000000A8   8149          STG   15,168(0,13)
000053CE 41F0 7040               00000040   8150          LA    15,64(0,7)
000053D2 E3F0 D0B0 0024          000000B0   8151          STG   15,176(0,13)
000053D8 E548 D0B8 04BE          000000B8   8152          MVGHI 184(13),1214
000053DE 41F0 7156               00000156   8153          LA    15,342(0,7)
000053E2 E3F0 D0C0 0024          000000C0   8154          STG   15,192(0,13)
000053E8 4110 D0A8               000000A8   8155          LA    1,168(0,13)
000053EC E3F0 C1D0 0004          000054A8   8156          LG    15,@lit_850_260 ; __assert
000053F2                                    8157 @@gen_label337 DS    0H
000053F2 05EF                               8158          BALR  14,15
000053F4                                    8159 @@gen_label338 DS    0H
000053F4                                    8160 @L293    DS    0H
                                            8161 * ***           if (do_hexdump)
000053F4 E3F0 501C 0012          0000001C   8162          LT    15,28(0,5)  ; do_hexdump
                                                                                                                           Page  164 
  Active Usings: @REGION_850_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000053FA 4780 C168               00005440   8163          BZ    @ret_lab_850
                                            8164 * ***                   rd_hexdump(__stderrp, "segment",
                                            8165 * ***                              seg->seg_p+relof, seg->seg_of-relof\
                                            8166 * );
000053FE E3F6 4000 0004          00000000   8167          LG    15,0(6,4)   ; __stderrp
00005404 E3F0 D0A8 0024          000000A8   8168          STG   15,168(0,13)
0000540A 41F0 7454               00000454   8169          LA    15,1108(0,7)
0000540E E3F0 D0B0 0024          000000B0   8170          STG   15,176(0,13)
00005414 E3F0 2010 0004          00000010   8171          LG    15,16(0,2)  ; offset of seg_p in rd_segment_s
0000541A 41F3 F000               00000000   8172          LA    15,0(3,15)
0000541E E3F0 D0B8 0024          000000B8   8173          STG   15,184(0,13)
00005424 E3F0 2018 0004          00000018   8174          LG    15,24(0,2)  ; offset of seg_of in rd_segment_s
0000542A B90B 00F3                          8175          SLGR  15,3
0000542E E3F0 D0C0 0024          000000C0   8176          STG   15,192(0,13)
00005434 4110 D0A8               000000A8   8177          LA    1,168(0,13)
00005438 E3F0 C1E0 0004          000054B8   8178          LG    15,@lit_850_262 ; rd_hexdump
0000543E                                    8179 @@gen_label340 DS    0H
0000543E 05EF                               8180          BALR  14,15
00005440                                    8181 @@gen_label341 DS    0H
00005440                                    8182 @L294    DS    0H
                                            8183 * ***   }
00005440                                    8184 @ret_lab_850 DS 0H
                                            8185 * * **** Start of Epilogue
                                            8186          DCCEPIL
00005440                                    8187+         ds 0h                                                          01-DCCEP
                                            8188+* Epilog
00005440 D707 D088 D088 00000088 00000088   8189+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005446 E3D0 D080 0004          00000080   8190+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000544C E3C0 D090 0004          00000090   8191+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005452 E3B0 C018 0004          00000018   8192+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005458 E3C0 B010 0021          00000010   8193+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000545E E3E0 D008 0004          00000008   8194+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005464 EB1C D020 0004          00000020   8195+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000546A 078E                               8196+         bcr 8,14                if same dsab, just return              01-DCCEP
0000546C E3F0 D010 0024          00000010   8197+         stg 15,16(0,13)         save return code                       01-DCCEP
00005472 E300 D018 0024          00000018   8198+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005478 E3F0 D090 0004          00000090   8199+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000547E E3F0 F018 0004          00000018   8200+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005484 47F0 F040               00000040   8201+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8202+* End of Epilog
                                            8203 * * **** End of Epilogue
00005488                                    8204          DS    0D
00005488 000000F8                           8205 @FRAMESIZE_850 DC F'248'
0000548C 00000000
00005490 0000000000000000                   8206 @lit_850_258 DC AD(fprintf)
00005498 000000000000CB02                   8207 @lit_850_257 DC AD(@strings@)
000054A0 00000000                           8208 @lit_850_256 DC Q(__stderrp)
000054A4 00000000
000054A8 0000000000000000                   8209 @lit_850_260 DC AD(__assert)
000054B0 000000000000BFA0                   8210 @lit_850_259 DC AD(@DATA)
000054B8 0000000000000000                   8211 @lit_850_262 DC AD(rd_hexdump)
                                            8212          DROP  12
                                                                                                                           Page  165 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8213 *
                                            8214 *   DSECT for automatic variables in "rd_segment_dump"
                                            8215 *      (FUNCTION #850)
                                            8216 *
00000000                00000000 000000A8   8217 @AUTO#rd_segment_dump DSECT
00000000                                    8218          DS    XL168
                                            8219 *
000054C0                00000000 0000BFA0   8220 @CODE    CSECT
                                            8221 *
                                            8222 *
                                            8223 *
                                            8224 * ....... start of rd_buf_dump
                                            8225 rd_buf_dump ALIAS X'99846D82A4866D84A49497'
000054C0                                    8226 @LNAME801 DS   0H
000054C0 0000000B                           8227          DC    X'0000000B'
000054C4 99846D82A4866D84                   8228          DC    C'rd_buf_dump'
000054CF 00                                 8229          DC    X'00'
                                            8230 rd_buf_dump DCCPRLG CINDEX=801,BASER=12,FRAME=232,ENTRY=YES,ARCH=ZARCH,*
                                                                LNAMEADDR=@LNAME801
                                            8231          macro
                                            8232          dccextrn &m
                                            8233          gblc    &$dccext(1000)
                                            8234          gbla    &$dccexti
                                            8235          lcla    &i
                                            8236 &$dccext(&$dccexti+1) setc    '&m'
                                            8237 &i       seta    1
                                            8238 .loop    aif    (&i gt &$dccexti).around
                                            8239          aif    ('&$dccext(&i)' eq '&m').getout
                                            8240 &i       seta    &i+1
                                            8241          ago     .loop
                                            8242 .around  anop
                                            8243 &$dccexti seta &$dccexti+1
                                            8244          extrn  &m
                                            8245 .getout  anop
                                            8246          mend
000054D0                                    8247+$eye0173    ds    0d                                                    02-DCCCA
000054D0 C4C3C3                             8248+         dc cl3'DCC'                                                    02-DCCCA
000054D3 01                                 8249+         dc xl1'01' format one                                          02-DCCCA
000054D4 00000000                           8250+         dc a(0)                                                        02-DCCCA
000054D8 0000000000005542                   8251+         dc ad(@PER_801)                                                02-DCCCA
000054E0 00000000000000E8                   8252+         dc ad(232)                                                     02-DCCCA
000054E8 0000000000000000                   8253+         dc ad(0)                                                       02-DCCCA
000054F0 0000000000001000                   8254+         dc ad(4096)                                                    02-DCCCA
000054F8 20                                 8255+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000054F9 03                                 8256+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000054FA 03                                 8257+         dc al1(3)                                                      02-DCCCA
000054FB 08                                 8258+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000054FC 00                                 8259+         dc bl.8'00000000'                                              02-DCCCA
000054FD 000000                             8260+         dc al3(0)                                                      02-DCCCA
00005500 00000000000054C0                   8261+         dc ad(@LNAME801)                                               02-DCCCA
00005508                                    8262+         ds 0d                                                          02-DCCCA
00005508 00000000000054D0                   8263+         dc ad($eye0173)                                                02-DCCCA
                                                                                                                           Page  166 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005510 0000000000000000                   8264+         dc ad(0)                                                       02-DCCCA
00005518                                    8265+         ds    0d                                                       01-DCCPR
                                            8266+         entry rd_buf_dump                                              01-DCCPR
00005518                                    8267+rd_buf_dump ds 0d                                                       01-DCCPR
00005518                                    8268+@REGION_801_1 ds 0h                                                     01-DCCPR
00005518 EBEC D008 0024          00000008   8269+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000551E E3E0 D088 0004          00000088   8270+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005524 E3C0 D090 0004          00000090   8271+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000552A B904 002E                          8272+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000552E E3B0 C018 0004          00000018   8273+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005534 A7EB 00E8               000000E8   8274+         aghi  14,232              increase by frame size               01-DCCPR
00005538 E3E0 C020 0021          00000020   8275+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000553E 4720 B020               00000020   8276+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005542                                    8277+@PER_801 ds    0h                                                       01-DCCPR
00005542 EBDE 2080 0024          00000080   8278+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005548 E3C0 2090 0024          00000090   8279+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000554E B904 00D2                          8280+         lgr   13,2                set real frame pointer               01-DCCPR
00005552 B904 00CF                          8281+         lgr   12,15               set base reg                         01-DCCPR
                        00005518            8282+         using @REGION_801_1,12                                         01-DCCPR
                                            8283          DCCPRV REG=2      ; Get PRV from DVT
00005556 E320 B008 0004          00000008   8284+         LG 2,8(0,11)                                                   01-DCCPR
0000555C B904 0051                          8285          LGR   5,1         ; ptr to parm area
                                            8286 * ******* End of Prologue
                                            8287 * *
00005560 E340 5000 0004          00000000   8288          LG    4,0(0,5)    ; rbuf
                                            8289 * ***           const rd_segment_t *seg;
                                            8290 * ***
                                            8291 * ***           fprintf(__stderrp,
                                            8292 * ***                   "((rd_buf_t *)%p):\n"
                                            8293 * ***                   rbuf, rbuf->rbuf_len, rbuf->rbuf_size,
                                            8294 * ***                   rbuf->rbuf_extra_len, rbuf->rbuf_extra_size);
00005566 E360 C168 0016          00005680   8295          LLGF  6,@lit_801_264 ; __stderrp
0000556C E3F6 2000 0004          00000000   8296          LG    15,0(6,2)   ; __stderrp
00005572 E3F0 D0B0 0024          000000B0   8297          STG   15,176(0,13)
                                            8298 * ***                   " len %" "zu" " size %" "zu"
                                            8299 * ***                   ", %" "zu" "/%" "zu" " extra memory used\n",
00005578 E370 C160 0004          00005678   8300          LG    7,@lit_801_265
0000557E 41F0 745C               0000045C   8301          LA    15,1116(0,7)
00005582 E3F0 D0B8 0024          000000B8   8302          STG   15,184(0,13)
00005588 E340 D0C0 0024          000000C0   8303          STG   4,192(0,13)
0000558E E3F0 4020 0004          00000020   8304          LG    15,32(0,4)
00005594 E3F0 D0C8 0024          000000C8   8305          STG   15,200(0,13)
0000559A E3F0 4030 0004          00000030   8306          LG    15,48(0,4)
000055A0 E3F0 D0D0 0024          000000D0   8307          STG   15,208(0,13)
000055A6 E3F0 4040 0004          00000040   8308          LG    15,64(0,4)
000055AC E3F0 D0D8 0024          000000D8   8309          STG   15,216(0,13)
000055B2 E3F0 4048 0004          00000048   8310          LG    15,72(0,4)
000055B8 E3F0 D0E0 0024          000000E0   8311          STG   15,224(0,13)
000055BE 4110 D0B0               000000B0   8312          LA    1,176(0,13)
000055C2 E380 C158 0004          00005670   8313          LG    8,@lit_801_266 ; fprintf
000055C8 B904 00F8                          8314          LGR   15,8
000055CC                                    8315 @@gen_label342 DS    0H
                                                                                                                           Page  167 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000055CC 05EF                               8316          BALR  14,15
000055CE                                    8317 @@gen_label343 DS    0H
                                            8318 * ***
                                            8319 * ***           if (rbuf->rbuf_wpos) {
000055CE E3F0 4018 0002          00000018   8320          LTG   15,24(0,4)  ; offset of rbuf_wpos in rd_buf_s
000055D4 4780 C108               00005620   8321          BZ    @L295
                                            8322 * ***                   fprintf(__stderrp, " wpos:\n");
000055D8 E3F6 2000 0004          00000000   8323          LG    15,0(6,2)   ; __stderrp
000055DE E3F0 D0B0 0024          000000B0   8324          STG   15,176(0,13)
000055E4 41F0 749C               0000049C   8325          LA    15,1180(0,7)
000055E8 E3F0 D0B8 0024          000000B8   8326          STG   15,184(0,13)
000055EE 4110 D0B0               000000B0   8327          LA    1,176(0,13)
000055F2 B904 00F8                          8328          LGR   15,8
000055F6                                    8329 @@gen_label345 DS    0H
000055F6 05EF                               8330          BALR  14,15
000055F8                                    8331 @@gen_label346 DS    0H
                                            8332 * ***                   rd_segment_dump(rbuf->rbuf_wpos, "  ", 0, 0);
000055F8 E3F0 4018 0004          00000018   8333          LG    15,24(0,4)
000055FE E3F0 D0B0 0024          000000B0   8334          STG   15,176(0,13)
00005604 41F0 74A4               000004A4   8335          LA    15,1188(0,7)
00005608 E3F0 D0B8 0024          000000B8   8336          STG   15,184(0,13)
0000560E D70F D0C0 D0C0 000000C0 000000C0   8337          XC    192(16,13),192(13)
00005614 4110 D0B0               000000B0   8338          LA    1,176(0,13)
00005618 E3F0 C170 0004          00005688   8339          LG    15,@lit_801_269 ; rd_segment_dump
0000561E                                    8340 @@gen_label347 DS    0H
0000561E 05EF                               8341          BALR  14,15
00005620                                    8342 @@gen_label348 DS    0H
                                            8343 * ***           }
00005620                                    8344 @L295    DS    0H
                                            8345 * ***
                                            8346 * ***           if (rbuf->rbuf_segment_cnt > 0) {
00005620 E559 4010 0000          00000010   8347          CLGHSI 16(4),0
00005626 47D0 C20E               00005726   8348          BNH   @L296
                                            8349 * ***                   size_t segcnt = 0;
0000562A A739 0000               00000000   8350          LGHI  3,0         ; 0
                                            8351 * ***
                                            8352 * ***                   fprintf(__stderrp, " %" "zu" " linked segments\
                                            8353 * :\n",
                                            8354 * ***                           rbuf->rbuf_segment_cnt);
0000562E E3F6 2000 0004          00000000   8355          LG    15,0(6,2)   ; __stderrp
00005634 E3F0 D0B0 0024          000000B0   8356          STG   15,176(0,13)
0000563A 41F0 74A8               000004A8   8357          LA    15,1192(0,7)
0000563E E3F0 D0B8 0024          000000B8   8358          STG   15,184(0,13)
00005644 E3F0 4010 0004          00000010   8359          LG    15,16(0,4)
0000564A E3F0 D0C0 0024          000000C0   8360          STG   15,192(0,13)
00005650 4110 D0B0               000000B0   8361          LA    1,176(0,13)
00005654 B904 00F8                          8362          LGR   15,8
00005658                                    8363 @@gen_label350 DS    0H
00005658 05EF                               8364          BALR  14,15
0000565A                                    8365 @@gen_label351 DS    0H
                                            8366 * ***                   for ((seg) = ((&rbuf->rbuf_segments)->tqh_firs\
                                            8367 * t); (seg) != (((void *)0)); (seg) = ((seg)->seg_link .tqe_next)) {
                                                                                                                           Page  168 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000565A E320 4000 0004          00000000   8368          LG    2,0(0,4)    ; rbuf
00005660 47F0 C206               0000571E   8369          B     @L298
00005668                                    8370          DS    0D
00005668 000000E8                           8371 @FRAMESIZE_801 DC F'232'
0000566C 00000000
00005670 0000000000000000                   8372 @lit_801_266 DC AD(fprintf)
00005678 000000000000CB02                   8373 @lit_801_265 DC AD(@strings@)
00005680 00000000                           8374 @lit_801_264 DC Q(__stderrp)
00005684 00000000
00005688 00000000000052D8                   8375 @lit_801_269 DC AD(rd_segment_dump)
00005690 0000000000000000                   8376 @lit_801_276 DC AD(__assert)
00005698 000000000000BFA0                   8377 @lit_801_275 DC AD(@DATA)
000056A0                                    8378 @L297    DS    0H
                                            8379 * ***                           rd_segment_dump(seg, "  ", 0, do_hexdu\
                                            8380 * mp);
000056A0 E320 D0B0 0024          000000B0   8381          STG   2,176(0,13)
000056A6 E360 C160 0004          00005678   8382          LG    6,@lit_801_265
000056AC 41F0 64A4               000004A4   8383          LA    15,1188(0,6)
000056B0 E3F0 D0B8 0024          000000B8   8384          STG   15,184(0,13)
000056B6 D707 D0C0 D0C0 000000C0 000000C0   8385          XC    192(8,13),192(13)
000056BC E3F0 500C 0014          0000000C   8386          LGF   15,12(0,5)  ; do_hexdump
000056C2 E3F0 D0C8 0024          000000C8   8387          STG   15,200(0,13)
000056C8 4110 D0B0               000000B0   8388          LA    1,176(0,13)
000056CC E3F0 C170 0004          00005688   8389          LG    15,@lit_801_269 ; rd_segment_dump
000056D2                                    8390 @@gen_label352 DS    0H
000056D2 05EF                               8391          BALR  14,15
000056D4                                    8392 @@gen_label353 DS    0H
                                            8393 * ***                           segcnt++;
000056D4 A73B 0001               00000001   8394          AGHI  3,1
                                            8395 * ***                           ((segcnt <= rbuf->rbuf_segment_cnt) ? \
                                            8396 * (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c\
                                            8397 * ", 1243, "segcnt <= rbuf->rbuf_segment_cnt"));
000056D8 E330 4010 0021          00000010   8398          CLG   3,16(0,4)
000056DE 47D0 C200               00005718   8399          BNH   @L302
000056E2                                    8400 @L301    DS    0H
000056E2 E3F0 C180 0004          00005698   8401          LG    15,@lit_801_275
000056E8 41F0 F168               00000168   8402          LA    15,360(0,15)
000056EC E3F0 D0B0 0024          000000B0   8403          STG   15,176(0,13)
000056F2 41F0 6040               00000040   8404          LA    15,64(0,6)
000056F6 E3F0 D0B8 0024          000000B8   8405          STG   15,184(0,13)
000056FC E548 D0C0 04DB          000000C0   8406          MVGHI 192(13),1243
00005702 41F0 64C0               000004C0   8407          LA    15,1216(0,6)
00005706 E3F0 D0C8 0024          000000C8   8408          STG   15,200(0,13)
0000570C 4110 D0B0               000000B0   8409          LA    1,176(0,13)
00005710 E3F0 C178 0004          00005690   8410          LG    15,@lit_801_276 ; __assert
00005716                                    8411 @@gen_label355 DS    0H
00005716 05EF                               8412          BALR  14,15
00005718                                    8413 @@gen_label356 DS    0H
00005718                                    8414 @L302    DS    0H
                                            8415 * ***                   }
00005718 E320 2000 0004          00000000   8416          LG    2,0(0,2)    ; seg
0000571E                                    8417 @L298    DS    0H
                                                                                                                           Page  169 
  Active Usings: @REGION_801_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000571E B902 00F2                          8418          LTGR  15,2
00005722 4770 C188               000056A0   8419          BNE   @L297
                                            8420 * ***           }
00005726                                    8421 @L296    DS    0H
                                            8422 * ***   }
00005726                                    8423 @ret_lab_801 DS 0H
                                            8424 * * **** Start of Epilogue
                                            8425          DCCEPIL
00005726                                    8426+         ds 0h                                                          01-DCCEP
                                            8427+* Epilog
00005726 D707 D088 D088 00000088 00000088   8428+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000572C E3D0 D080 0004          00000080   8429+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005732 E3C0 D090 0004          00000090   8430+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005738 E3B0 C018 0004          00000018   8431+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000573E E3C0 B010 0021          00000010   8432+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005744 E3E0 D008 0004          00000008   8433+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000574A EB1C D020 0004          00000020   8434+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005750 078E                               8435+         bcr 8,14                if same dsab, just return              01-DCCEP
00005752 E3F0 D010 0024          00000010   8436+         stg 15,16(0,13)         save return code                       01-DCCEP
00005758 E300 D018 0024          00000018   8437+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000575E E3F0 D090 0004          00000090   8438+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005764 E3F0 F018 0004          00000018   8439+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000576A 47F0 F040               00000040   8440+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8441+* End of Epilog
                                            8442 * * **** End of Epilogue
                                            8443          DROP  12
                                            8444 *
                                            8445 *   DSECT for automatic variables in "rd_buf_dump"
                                            8446 *      (FUNCTION #801)
                                            8447 *
00000000                00000000 000000B0   8448 @AUTO#rd_buf_dump DSECT
00000000                                    8449          DS    XL168
000000A8                                    8450 rd_buf_dump#segcnt#2 DS 8XL1 ; segcnt
                                            8451 *
0000576E                00000000 0000BFA0   8452 @CODE    CSECT
                                            8453 *
                                            8454 *
                                            8455 *
                                            8456 * ....... start of rd_slice_dump
                                            8457 rd_slice_dump ALIAS X'99846DA2938983856D84A49497'
0000576E                                    8458 @LNAME825 DS   0H
0000576E 0000000D                           8459          DC    X'0000000D'
00005772 99846DA293898385                   8460          DC    C'rd_slice_dump'
0000577F 00                                 8461          DC    X'00'
                                            8462 rd_slice_dump DCCPRLG CINDEX=825,BASER=12,FRAME=272,ENTRY=YES,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME825
                                            8463          macro
                                            8464          dccextrn &m
                                            8465          gblc    &$dccext(1000)
                                            8466          gbla    &$dccexti
                                            8467          lcla    &i
                                            8468 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page  170 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8469 &i       seta    1
                                            8470 .loop    aif    (&i gt &$dccexti).around
                                            8471          aif    ('&$dccext(&i)' eq '&m').getout
                                            8472 &i       seta    &i+1
                                            8473          ago     .loop
                                            8474 .around  anop
                                            8475 &$dccexti seta &$dccexti+1
                                            8476          extrn  &m
                                            8477 .getout  anop
                                            8478          mend
00005780                                    8479+$eye0177    ds    0d                                                    02-DCCCA
00005780 C4C3C3                             8480+         dc cl3'DCC'                                                    02-DCCCA
00005783 01                                 8481+         dc xl1'01' format one                                          02-DCCCA
00005784 00000000                           8482+         dc a(0)                                                        02-DCCCA
00005788 00000000000057F2                   8483+         dc ad(@PER_825)                                                02-DCCCA
00005790 0000000000000110                   8484+         dc ad(272)                                                     02-DCCCA
00005798 0000000000000000                   8485+         dc ad(0)                                                       02-DCCCA
000057A0 0000000000001000                   8486+         dc ad(4096)                                                    02-DCCCA
000057A8 20                                 8487+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000057A9 03                                 8488+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000057AA 03                                 8489+         dc al1(3)                                                      02-DCCCA
000057AB 08                                 8490+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000057AC 00                                 8491+         dc bl.8'00000000'                                              02-DCCCA
000057AD 000000                             8492+         dc al3(0)                                                      02-DCCCA
000057B0 000000000000576E                   8493+         dc ad(@LNAME825)                                               02-DCCCA
000057B8                                    8494+         ds 0d                                                          02-DCCCA
000057B8 0000000000005780                   8495+         dc ad($eye0177)                                                02-DCCCA
000057C0 0000000000000000                   8496+         dc ad(0)                                                       02-DCCCA
000057C8                                    8497+         ds    0d                                                       01-DCCPR
                                            8498+         entry rd_slice_dump                                            01-DCCPR
000057C8                                    8499+rd_slice_dump ds 0d                                                     01-DCCPR
000057C8                                    8500+@REGION_825_1 ds 0h                                                     01-DCCPR
000057C8 EBEC D008 0024          00000008   8501+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000057CE E3E0 D088 0004          00000088   8502+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000057D4 E3C0 D090 0004          00000090   8503+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000057DA B904 002E                          8504+         lgr   2,14                copy addr of our savearea            01-DCCPR
000057DE E3B0 C018 0004          00000018   8505+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000057E4 A7EB 0110               00000110   8506+         aghi  14,272              increase by frame size               01-DCCPR
000057E8 E3E0 C020 0021          00000020   8507+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000057EE 4720 B020               00000020   8508+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000057F2                                    8509+@PER_825 ds    0h                                                       01-DCCPR
000057F2 EBDE 2080 0024          00000080   8510+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000057F8 E3C0 2090 0024          00000090   8511+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000057FE B904 00D2                          8512+         lgr   13,2                set real frame pointer               01-DCCPR
00005802 B904 00CF                          8513+         lgr   12,15               set base reg                         01-DCCPR
                        000057C8            8514+         using @REGION_825_1,12                                         01-DCCPR
                                            8515          DCCPRV REG=3      ; Get PRV from DVT
00005806 E330 B008 0004          00000008   8516+         LG 3,8(0,11)                                                   01-DCCPR
0000580C B904 0041                          8517          LGR   4,1         ; ptr to parm area
                                            8518 * ******* End of Prologue
                                            8519 * *
00005810 E320 4000 0004          00000000   8520          LG    2,0(0,4)    ; slice
                                                                                                                           Page  171 
  Active Usings: @REGION_825_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8521 * ***           const rd_segment_t *seg;
                                            8522 * ***           size_t relof;
                                            8523 * ***
                                            8524 * ***           fprintf(__stderrp,
                                            8525 * ***                   "((rd_slice_t *)%p):\n"
                                            8526 * ***                   slice, slice->buf, rd_buf_len(slice->buf),
                                            8527 * ***                   slice->seg, slice->seg ? slice->seg->seg_absof\
                                            8528 *  : 0,
                                            8529 * ***                   slice->rof, slice->start, slice->end,
                                            8530 * ***                   ((slice)->end - (slice)->start), rd_slice_offs\
                                            8531 * et(slice));
00005816 E3F0 2000 0004          00000000   8532          LG    15,0(0,2)
0000581C E3F0 D0B0 0024          000000B0   8533          STG   15,176(0,13)
00005822 4110 D0B0               000000B0   8534          LA    1,176(0,13)
00005826 E3F0 C090 0004          00005858   8535          LG    15,@lit_825_278 ; rd_buf_len
0000582C                                    8536 @@gen_label358 DS    0H
0000582C 05EF                               8537          BALR  14,15
0000582E                                    8538 @@gen_label359 DS    0H
0000582E B904 005F                          8539          LGR   5,15
00005832 E3F0 2008 0002          00000008   8540          LTG   15,8(0,2)   ; offset of seg in rd_slice_s
00005838 4780 C0C0               00005888   8541          BZ    @L303
0000583C E3F0 2008 0004          00000008   8542          LG    15,8(0,2)   ; offset of seg in rd_slice_s
00005842 E360 F028 0004          00000028   8543          LG    6,40(0,15)  ; offset of seg_absof in rd_segment_s
00005848 47F0 C0C4               0000588C   8544          B     @L304
00005850                                    8545          DS    0D
00005850 00000110                           8546 @FRAMESIZE_825 DC F'272'
00005854 00000000
00005858 0000000000000638                   8547 @lit_825_278 DC AD(rd_buf_len)
00005860 0000000000000898                   8548 @lit_825_280 DC AD(rd_slice_offset)
00005868 0000000000000000                   8549 @lit_825_283 DC AD(fprintf)
00005870 000000000000CB02                   8550 @lit_825_282 DC AD(@strings@)
00005878 00000000                           8551 @lit_825_281 DC Q(__stderrp)
0000587C 00000000
00005880 00000000000052D8                   8552 @lit_825_285 DC AD(rd_segment_dump)
00005888                                    8553 @L303    DS    0H
00005888 A769 0000               00000000   8554          LGHI  6,0         ; 0
0000588C                                    8555 @L304    DS    0H
0000588C E320 D0B0 0024          000000B0   8556          STG   2,176(0,13)
00005892 4110 D0B0               000000B0   8557          LA    1,176(0,13)
00005896 E3F0 C098 0004          00005860   8558          LG    15,@lit_825_280 ; rd_slice_offset
0000589C                                    8559 @@gen_label361 DS    0H
0000589C 05EF                               8560          BALR  14,15
0000589E                                    8561 @@gen_label362 DS    0H
0000589E E310 C0B0 0016          00005878   8562          LLGF  1,@lit_825_281 ; __stderrp
000058A4 E311 3000 0004          00000000   8563          LG    1,0(1,3)    ; __stderrp
000058AA E310 D0B0 0024          000000B0   8564          STG   1,176(0,13)
                                            8565 * ***                   "  buf %p (len %" "zu" "), seg %p (absof %" "z\
                                            8566 * u" "), "
                                            8567 * ***                   "rof %" "zu" ", start %" "zu" ", end %" "zu" "\
                                            8568 * , size %" "zu"
                                            8569 * ***                   ", offset %" "zu" "\n",
000058B0 E310 C0A8 0004          00005870   8570          LG    1,@lit_825_282
                                                                                                                           Page  172 
  Active Usings: @REGION_825_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000058B6 4110 14E2               000004E2   8571          LA    1,1250(0,1)
000058BA EB12 D0B8 0024          000000B8   8572          STMG  1,2,184(13)
000058C0 E310 2000 0004          00000000   8573          LG    1,0(0,2)
000058C6 E310 D0C8 0024          000000C8   8574          STG   1,200(0,13)
000058CC E350 D0D0 0024          000000D0   8575          STG   5,208(0,13)
000058D2 E310 2008 0004          00000008   8576          LG    1,8(0,2)
000058D8 E310 D0D8 0024          000000D8   8577          STG   1,216(0,13)
000058DE E360 D0E0 0024          000000E0   8578          STG   6,224(0,13)
000058E4 E310 2010 0004          00000010   8579          LG    1,16(0,2)
000058EA E310 D0E8 0024          000000E8   8580          STG   1,232(0,13)
000058F0 E310 2018 0004          00000018   8581          LG    1,24(0,2)
000058F6 E310 D0F0 0024          000000F0   8582          STG   1,240(0,13)
000058FC E310 2020 0004          00000020   8583          LG    1,32(0,2)
00005902 E310 D0F8 0024          000000F8   8584          STG   1,248(0,13)
00005908 E310 2020 0004          00000020   8585          LG    1,32(0,2)   ; offset of end in rd_slice_s
0000590E E310 2018 000B          00000018   8586          SLG   1,24(0,2)
00005914 E310 D100 0024          00000100   8587          STG   1,256(0,13)
0000591A E3F0 D108 0024          00000108   8588          STG   15,264(0,13)
00005920 4110 D0B0               000000B0   8589          LA    1,176(0,13)
00005924 E3F0 C0A0 0004          00005868   8590          LG    15,@lit_825_283 ; fprintf
0000592A                                    8591 @@gen_label363 DS    0H
0000592A 05EF                               8592          BALR  14,15
0000592C                                    8593 @@gen_label364 DS    0H
                                            8594 * ***           relof = slice->rof;
0000592C E3F0 2010 0004          00000010   8595          LG    15,16(0,2)  ; offset of rof in rd_slice_s
                                            8596 * ***
                                            8597 * ***           for (seg = slice->seg ; seg ; seg = ((seg)->seg_link .\
                                            8598 * tqe_next)) {
00005932 E320 2008 0004          00000008   8599          LG    2,8(0,2)    ; offset of seg in rd_slice_s
00005938 47F0 C1B2               0000597A   8600          B     @L306
0000593C                                    8601 @L305    DS    0H
                                            8602 * ***                   rd_segment_dump(seg, "  ", relof, do_hexdump);
0000593C E320 D0B0 0024          000000B0   8603          STG   2,176(0,13)
00005942 E310 C0A8 0004          00005870   8604          LG    1,@lit_825_282
00005948 4110 14A4               000004A4   8605          LA    1,1188(0,1)
0000594C E310 D0B8 0024          000000B8   8606          STG   1,184(0,13)
00005952 E3F0 D0C0 0024          000000C0   8607          STG   15,192(0,13)
00005958 E3F0 400C 0014          0000000C   8608          LGF   15,12(0,4)  ; do_hexdump
0000595E E3F0 D0C8 0024          000000C8   8609          STG   15,200(0,13)
00005964 4110 D0B0               000000B0   8610          LA    1,176(0,13)
00005968 E3F0 C0B8 0004          00005880   8611          LG    15,@lit_825_285 ; rd_segment_dump
0000596E                                    8612 @@gen_label365 DS    0H
0000596E 05EF                               8613          BALR  14,15
00005970                                    8614 @@gen_label366 DS    0H
                                            8615 * ***                   relof = 0;
00005970 A7F9 0000               00000000   8616          LGHI  15,0        ; 0
                                            8617 * ***           }
00005974 E320 2000 0004          00000000   8618          LG    2,0(0,2)    ; seg
0000597A                                    8619 @L306    DS    0H
0000597A B902 0012                          8620          LTGR  1,2
0000597E 4770 C174               0000593C   8621          BNZ   @L305
                                            8622 * ***   }
                                                                                                                           Page  173 
  Active Usings: @REGION_825_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005982                                    8623 @ret_lab_825 DS 0H
                                            8624 * * **** Start of Epilogue
                                            8625          DCCEPIL
00005982                                    8626+         ds 0h                                                          01-DCCEP
                                            8627+* Epilog
00005982 D707 D088 D088 00000088 00000088   8628+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005988 E3D0 D080 0004          00000080   8629+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000598E E3C0 D090 0004          00000090   8630+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005994 E3B0 C018 0004          00000018   8631+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000599A E3C0 B010 0021          00000010   8632+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000059A0 E3E0 D008 0004          00000008   8633+         lg  14,8(0,13)          load up return address                 01-DCCEP
000059A6 EB1C D020 0004          00000020   8634+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000059AC 078E                               8635+         bcr 8,14                if same dsab, just return              01-DCCEP
000059AE E3F0 D010 0024          00000010   8636+         stg 15,16(0,13)         save return code                       01-DCCEP
000059B4 E300 D018 0024          00000018   8637+         stg 0,24(0,13)          save more return code                  01-DCCEP
000059BA E3F0 D090 0004          00000090   8638+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000059C0 E3F0 F018 0004          00000018   8639+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000059C6 47F0 F040               00000040   8640+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8641+* End of Epilog
                                            8642 * * **** End of Epilogue
                                            8643          DROP  12
                                            8644 *
                                            8645 *   DSECT for automatic variables in "rd_slice_dump"
                                            8646 *      (FUNCTION #825)
                                            8647 *
00000000                00000000 000000B0   8648 @AUTO#rd_slice_dump DSECT
00000000                                    8649          DS    XL168
000000A8                                    8650 rd_slice_dump#relof#0 DS 8XL1 ; relof
                                            8651 *
000059CA                00000000 0000BFA0   8652 @CODE    CSECT
                                            8653 *
                                            8654 *
                                            8655 *
                                            8656 * ....... start of do_unittest_write_read
000059CA                                    8657 @LNAME851 DS   0H
000059CA 00000016                           8658          DC    X'00000016'
000059CE 84966DA49589A3A3                   8659          DC    C'do_unittest_write_read'
000059E4 00                                 8660          DC    X'00'
                                            8661 do_unittest_write_read DCCPRLG CINDEX=851,BASER=12,FRAME=6696,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME851
                                            8662          macro
                                            8663          dccextrn &m
                                            8664          gblc    &$dccext(1000)
                                            8665          gbla    &$dccexti
                                            8666          lcla    &i
                                            8667 &$dccext(&$dccexti+1) setc    '&m'
                                            8668 &i       seta    1
                                            8669 .loop    aif    (&i gt &$dccexti).around
                                            8670          aif    ('&$dccext(&i)' eq '&m').getout
                                            8671 &i       seta    &i+1
                                            8672          ago     .loop
                                            8673 .around  anop
                                                                                                                           Page  174 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8674 &$dccexti seta &$dccexti+1
                                            8675          extrn  &m
                                            8676 .getout  anop
                                            8677          mend
000059E8                                    8678+$eye0181    ds    0d                                                    02-DCCCA
000059E8 C4C3C3                             8679+         dc cl3'DCC'                                                    02-DCCCA
000059EB 01                                 8680+         dc xl1'01' format one                                          02-DCCCA
000059EC 00000000                           8681+         dc a(0)                                                        02-DCCCA
000059F0 0000000000005A5A                   8682+         dc ad(@PER_851)                                                02-DCCCA
000059F8 0000000000001A28                   8683+         dc ad(6696)                                                    02-DCCCA
00005A00 0000000000000000                   8684+         dc ad(0)                                                       02-DCCCA
00005A08 0000000000001000                   8685+         dc ad(4096)                                                    02-DCCCA
00005A10 20                                 8686+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005A11 03                                 8687+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005A12 03                                 8688+         dc al1(3)                                                      02-DCCCA
00005A13 08                                 8689+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005A14 00                                 8690+         dc bl.8'00000000'                                              02-DCCCA
00005A15 000000                             8691+         dc al3(0)                                                      02-DCCCA
00005A18 00000000000059CA                   8692+         dc ad(@LNAME851)                                               02-DCCCA
00005A20                                    8693+         ds 0d                                                          02-DCCCA
00005A20 00000000000059E8                   8694+         dc ad($eye0181)                                                02-DCCCA
00005A28 0000000000000000                   8695+         dc ad(0)                                                       02-DCCCA
00005A30                                    8696+         ds    0d                                                       01-DCCPR
00005A30                                    8697+do_unittest_write_read ds 0d                                            01-DCCPR
00005A30                                    8698+@REGION_851_1 ds 0h                                                     01-DCCPR
00005A30 EBEC D008 0024          00000008   8699+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005A36 E3E0 D088 0004          00000088   8700+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005A3C E3C0 D090 0004          00000090   8701+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005A42 B904 002E                          8702+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005A46 E3B0 C018 0004          00000018   8703+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005A4C A7EB 1A28               00001A28   8704+         aghi  14,6696             increase by frame size               01-DCCPR
00005A50 E3E0 C020 0021          00000020   8705+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005A56 4720 B020               00000020   8706+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005A5A                                    8707+@PER_851 ds    0h                                                       01-DCCPR
00005A5A EBDE 2080 0024          00000080   8708+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005A60 E3C0 2090 0024          00000090   8709+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005A66 B904 00D2                          8710+         lgr   13,2                set real frame pointer               01-DCCPR
00005A6A B904 00CF                          8711+         lgr   12,15               set base reg                         01-DCCPR
                        00005A30            8712+         using @REGION_851_1,12                                         01-DCCPR
                                            8713          DCCPRV REG=5      ; Get PRV from DVT
00005A6E E350 B008 0004          00000008   8714+         LG 5,8(0,11)                                                   01-DCCPR
                                            8715 * ******* End of Prologue
                                            8716 * *
                                            8717 * ***           rd_buf_t b;
                                            8718 * ***           char ones[1024];
                                            8719 * ***           char twos[1024];
                                            8720 * ***           char threes[1024];
                                            8721 * ***           char fiftyfives[100];
                                            8722 * ***           char buf[1024*3];
                                            8723 * ***           rd_slice_t slice;
                                            8724 * ***           size_t r, pos;
                                            8725 * ***
                                                                                                                           Page  175 
  Active Usings: @REGION_851_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8726 * ***           __memset(ones,0x1,sizeof(ones));
00005A74 41F0 D170               00000170   8727          LA    15,368(0,13)
                                            8728 * setting 1024 bytes to 0x01
00005A78 9201 F000      00000000 00000001   8729          MVI   0(15),1
00005A7C D2FF F001 F000 00000001 00000000   8730          MVC   1(256,15),0(15)
00005A82 41F0 F100               00000100   8731          LA    15,256(0,15)
00005A86 D2FF F001 F000 00000001 00000000   8732          MVC   1(256,15),0(15)
00005A8C 41F0 F100               00000100   8733          LA    15,256(0,15)
00005A90 D2FF F001 F000 00000001 00000000   8734          MVC   1(256,15),0(15)
00005A96 41F0 F100               00000100   8735          LA    15,256(0,15)
00005A9A D2FE F001 F000 00000001 00000000   8736          MVC   1(255,15),0(15)
                                            8737 * ***           __memset(twos,0x2,sizeof(twos));
00005AA0 B904 00FD                          8738          LGR   15,13
00005AA4 A7FB 1000               00001000   8739          AGHI  15,4096
00005AA8 4110 F5FC               000005FC   8740          LA    1,1532(0,15)
                                            8741 * setting 1024 bytes to 0x02
00005AAC 9202 1000      00000000 00000002   8742          MVI   0(1),2
00005AB0 D2FF 1001 1000 00000001 00000000   8743          MVC   1(256,1),0(1)
00005AB6 4110 1100               00000100   8744          LA    1,256(0,1)
00005ABA D2FF 1001 1000 00000001 00000000   8745          MVC   1(256,1),0(1)
00005AC0 4110 1100               00000100   8746          LA    1,256(0,1)
00005AC4 D2FF 1001 1000 00000001 00000000   8747          MVC   1(256,1),0(1)
00005ACA 4110 1100               00000100   8748          LA    1,256(0,1)
00005ACE D2FE 1001 1000 00000001 00000000   8749          MVC   1(255,1),0(1)
                                            8750 * ***           __memset(threes,0x3,sizeof(threes));
00005AD4 4110 F1FC               000001FC   8751          LA    1,508(0,15)
                                            8752 * setting 1024 bytes to 0x03
00005AD8 9203 1000      00000000 00000003   8753          MVI   0(1),3
00005ADC D2FF 1001 1000 00000001 00000000   8754          MVC   1(256,1),0(1)
00005AE2 4110 1100               00000100   8755          LA    1,256(0,1)
00005AE6 D2FF 1001 1000 00000001 00000000   8756          MVC   1(256,1),0(1)
00005AEC 4110 1100               00000100   8757          LA    1,256(0,1)
00005AF0 D2FF 1001 1000 00000001 00000000   8758          MVC   1(256,1),0(1)
00005AF6 4110 1100               00000100   8759          LA    1,256(0,1)
00005AFA D2FE 1001 1000 00000001 00000000   8760          MVC   1(255,1),0(1)
                                            8761 * ***           __memset(fiftyfives,0x55,sizeof(fiftyfives));
00005B00 41F0 F198               00000198   8762          LA    15,408(0,15)
                                            8763 * setting 100 bytes to 0x55
00005B04 9255 F000      00000000 00000055   8764          MVI   0(15),85
00005B08 D262 F001 F000 00000001 00000000   8765          MVC   1(99,15),0(15)
                                            8766 * ***           __memset(buf,0x55,sizeof(buf));
00005B0E 41F0 D598               00000598   8767          LA    15,1432(0,13)
                                            8768 * setting 3072 bytes to 0x55
00005B12 9255 F000      00000000 00000055   8769          MVI   0(15),85
00005B16 A719 000B               0000000B   8770          LGHI  1,11        ; 11
00005B1A                                    8771 @@gen_label368 DS 0H
00005B1A D2FF F001 F000 00000001 00000000   8772          MVC   1(256,15),0(15)
00005B20 41F0 F100               00000100   8773          LA    15,256(0,15)
00005B24 E310 C0EA 0046          00005B1A   8774          BCTG  1,@@gen_label368
00005B2A D2FE F001 F000 00000001 00000000   8775          MVC   1(255,15),0(15)
                                            8776 * ***
                                            8777 * ***           rd_buf_init(&b, 2, 1000);
                                                                                                                           Page  176 
  Active Usings: @REGION_851_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005B30 41F0 D120               00000120   8778          LA    15,288(0,13)
00005B34 B904 002D                          8779          LGR   2,13
00005B38 A72B 1000               00001000   8780          AGHI  2,4096
00005B3C E3F0 2A00 0024          00000A00   8781          STG   15,2560(0,2)
00005B42 E548 2A08 0002          00000A08   8782          MVGHI 2568(2),2
00005B48 E548 2A10 03E8          00000A10   8783          MVGHI 2576(2),1000
00005B4E 4110 2A00               00000A00   8784          LA    1,2560(0,2)
00005B52 E3F0 C260 0004          00005C90   8785          LG    15,@lit_851_289 ; rd_buf_init
00005B58                                    8786 @@gen_label369 DS    0H
00005B58 05EF                               8787          BALR  14,15
00005B5A                                    8788 @@gen_label370 DS    0H
                                            8789 * ***
                                            8790 * ***
                                            8791 * ***
                                            8792 * ***
                                            8793 * ***           r = rd_buf_write(&b, ones, 200);
00005B5A 41F0 D120               00000120   8794          LA    15,288(0,13)
00005B5E E3F0 2A00 0024          00000A00   8795          STG   15,2560(0,2)
00005B64 41F0 D170               00000170   8796          LA    15,368(0,13)
00005B68 E3F0 2A08 0024          00000A08   8797          STG   15,2568(0,2)
00005B6E E548 2A10 00C8          00000A10   8798          MVGHI 2576(2),200
00005B74 4110 2A00               00000A00   8799          LA    1,2560(0,2)
00005B78 E3F0 C268 0004          00005C98   8800          LG    15,@lit_851_290 ; rd_buf_write
00005B7E                                    8801 @@gen_label371 DS    0H
00005B7E 05EF                               8802          BALR  14,15
00005B80                                    8803 @@gen_label372 DS    0H
00005B80 B904 003F                          8804          LGR   3,15        ; r
                                            8805 * ***           do { if (!(r == 0)) { fprintf(__stderrp, "\033[31mRDUT\
                                            8806 * : FAIL: %s:%d: %s: " "assert failed: " "r == 0" ": ", "C:\\asgkafka\\
                                            8807 * \librdkafka\\src\\rdbuf.c", 1303, __FUNCTION__); fprintf(__stderrp, \
                                            8808 * "write() returned position %" "zu", r); fprintf(__stderrp, "\033[0m\\
                                            8809 * n"); if (rd_unittest_assert_on_failure) ((r == 0) ? (void)0 : __asse\
                                            8810 * rt(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1303, "r == 0\
                                            8811 * ")); return 1; } } while (0);
00005B84                                    8812 @L309    DS    0H
00005B84 B902 00F3                          8813          LTGR  15,3
00005B88 4780 C2B8               00005CE8   8814          BE    @L312
00005B8C E340 C288 0016          00005CB8   8815          LLGF  4,@lit_851_291 ; __stderrp
00005B92 E3F4 5000 0004          00000000   8816          LG    15,0(4,5)   ; __stderrp
00005B98 B904 002D                          8817          LGR   2,13
00005B9C A72B 1000               00001000   8818          AGHI  2,4096
00005BA0 E3F0 2A00 0024          00000A00   8819          STG   15,2560(0,2)
00005BA6 E360 C280 0004          00005CB0   8820          LG    6,@lit_851_292
00005BAC 41F0 6552               00000552   8821          LA    15,1362(0,6)
00005BB0 E3F0 2A08 0024          00000A08   8822          STG   15,2568(0,2)
00005BB6 41F0 6040               00000040   8823          LA    15,64(0,6)
00005BBA E3F0 2A10 0024          00000A10   8824          STG   15,2576(0,2)
00005BC0 E548 2A18 0517          00000A18   8825          MVGHI 2584(2),1303
00005BC6 E370 C278 0004          00005CA8   8826          LG    7,@lit_851_293
00005BCC 41F0 7174               00000174   8827          LA    15,372(0,7)
00005BD0 E3F0 2A20 0024          00000A20   8828          STG   15,2592(0,2)
00005BD6 4110 2A00               00000A00   8829          LA    1,2560(0,2)
                                                                                                                           Page  177 
  Active Usings: @REGION_851_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005BDA E380 C270 0004          00005CA0   8830          LG    8,@lit_851_294 ; fprintf
00005BE0 B904 00F8                          8831          LGR   15,8
00005BE4                                    8832 @@gen_label374 DS    0H
00005BE4 05EF                               8833          BALR  14,15
00005BE6                                    8834 @@gen_label375 DS    0H
00005BE6 E3F4 5000 0004          00000000   8835          LG    15,0(4,5)   ; __stderrp
00005BEC E3F0 2A00 0024          00000A00   8836          STG   15,2560(0,2)
00005BF2 41F0 6586               00000586   8837          LA    15,1414(0,6)
00005BF6 E3F0 2A08 0024          00000A08   8838          STG   15,2568(0,2)
00005BFC E330 2A10 0024          00000A10   8839          STG   3,2576(0,2)
00005C02 4110 2A00               00000A00   8840          LA    1,2560(0,2)
00005C06 B904 00F8                          8841          LGR   15,8
00005C0A                                    8842 @@gen_label376 DS    0H
00005C0A 05EF                               8843          BALR  14,15
00005C0C                                    8844 @@gen_label377 DS    0H
00005C0C E3F4 5000 0004          00000000   8845          LG    15,0(4,5)   ; __stderrp
00005C12 E3F0 2A00 0024          00000A00   8846          STG   15,2560(0,2)
00005C18 41F0 65A4               000005A4   8847          LA    15,1444(0,6)
00005C1C E3F0 2A08 0024          00000A08   8848          STG   15,2568(0,2)
00005C22 4110 2A00               00000A00   8849          LA    1,2560(0,2)
00005C26 B904 00F8                          8850          LGR   15,8
00005C2A                                    8851 @@gen_label378 DS    0H
00005C2A 05EF                               8852          BALR  14,15
00005C2C                                    8853 @@gen_label379 DS    0H
00005C2C E3F0 C28C 0016          00005CBC   8854          LLGF  15,@lit_851_299 ; rd_unittest_assert_on_failure
00005C32 41FF 5000               00000000   8855          LA    15,0(15,5)
00005C36 9500 F000      00000000 00000000   8856          CLI   0(15),0
00005C3A 4780 C246               00005C76   8857          BE    @L313
00005C3E B902 00F3                          8858          LTGR  15,3
00005C42 4780 C246               00005C76   8859          BE    @L313
00005C46                                    8860 @L314    DS    0H
00005C46 41F0 7174               00000174   8861          LA    15,372(0,7)
00005C4A E3F0 2A00 0024          00000A00   8862          STG   15,2560(0,2)
00005C50 41F0 6040               00000040   8863          LA    15,64(0,6)
00005C54 E3F0 2A08 0024          00000A08   8864          STG   15,2568(0,2)
00005C5A E548 2A10 0517          00000A10   8865          MVGHI 2576(2),1303
00005C60 41F0 62F2               000002F2   8866          LA    15,754(0,6)
00005C64 E3F0 2A18 0024          00000A18   8867          STG   15,2584(0,2)
00005C6A 4110 2A00               00000A00   8868          LA    1,2560(0,2)
00005C6E E3F0 C290 0004          00005CC0   8869          LG    15,@lit_851_300 ; __assert
00005C74                                    8870 @@gen_label382 DS    0H
00005C74 05EF                               8871          BALR  14,15
00005C76                                    8872 @@gen_label383 DS    0H
00005C76                                    8873 @L315    DS    0H
00005C76                                    8874 @L313    DS    0H
00005C76 A7F9 0001               00000001   8875          LGHI  15,1        ; 1
00005C7A E3C0 C298 001A          00005CC8   8876          ALGF  12,@lit_region_diff_851_1_2
                                            8877          DROP  12
                        0000631C            8878          USING @REGION_851_2,12
00005C80 47F0 C812               00006B2E   8879          B     @ret_lab_851
                                            8880          DROP  12
                        00005A30            8881          USING @REGION_851_1,12
                                                                                                                           Page  178 
  Active Usings: @REGION_851_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005C88                                    8882          DS    0D
00005C88 00001A28                           8883 @FRAMESIZE_851 DC F'6696'
00005C8C 00000000
00005C90 0000000000001E28                   8884 @lit_851_289 DC AD(rd_buf_init)
00005C98 00000000000022A8                   8885 @lit_851_290 DC AD(rd_buf_write)
00005CA0 0000000000000000                   8886 @lit_851_294 DC AD(fprintf)
00005CA8 000000000000BFA0                   8887 @lit_851_293 DC AD(@DATA)
00005CB0 000000000000CB02                   8888 @lit_851_292 DC AD(@strings@)
00005CB8 00000000                           8889 @lit_851_291 DC Q(__stderrp)
00005CBC 00000000                           8890 @lit_851_299 DC Q(rd_unittest_assert_on_failure)
00005CC0 0000000000000000                   8891 @lit_851_300 DC AD(__assert)
00005CC8 000008EC                           8892 @lit_region_diff_851_1_2  DC A(@REGION_851_2-@REGION_851_1)
00005CCC 00000000
00005CD0 0000000000000438                   8893 @lit_851_302 DC AD(rd_buf_write_pos)
00005CD8 0000000000003860                   8894 @lit_851_362 DC AD(rd_slice_init_full)
00005CE0 0000000000003ED0                   8895 @lit_851_363 DC AD(rd_slice_read)
00005CE8                                    8896 @L312    DS    0H
                                            8897 * ***           pos = rd_buf_write_pos(&b);
00005CE8 41F0 D120               00000120   8898          LA    15,288(0,13)
00005CEC B904 001D                          8899          LGR   1,13
00005CF0 A71B 1000               00001000   8900          AGHI  1,4096
00005CF4 E3F0 1A00 0024          00000A00   8901          STG   15,2560(0,1)
00005CFA 4110 1A00               00000A00   8902          LA    1,2560(0,1)
00005CFE E3F0 C2A0 0004          00005CD0   8903          LG    15,@lit_851_302 ; rd_buf_write_pos
00005D04                                    8904 @@gen_label384 DS    0H
00005D04 05EF                               8905          BALR  14,15
00005D06                                    8906 @@gen_label385 DS    0H
00005D06 B904 004F                          8907          LGR   4,15        ; pos
                                            8908 * ***           do { if (!(pos == 200)) { fprintf(__stderrp, "\033[31m\
                                            8909 * RDUT: FAIL: %s:%d: %s: " "assert failed: " "pos == 200" ": ", "C:\\a\
                                            8910 * sgkafka\\librdkafka\\src\\rdbuf.c", 1305, __FUNCTION__); fprintf(__s\
                                            8911 * tderrp, "pos() returned position %" "zu", pos); fprintf(__stderrp, "\
                                            8912 * \033[0m\n"); if (rd_unittest_assert_on_failure) ((pos == 200) ? (voi\
                                            8913 * d)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1\
                                            8914 * 305, "pos == 200")); return 1; } } while (0);
00005D0A                                    8915 @L316    DS    0H
00005D0A A74F 00C8               000000C8   8916          CGHI  4,200
00005D0E 4780 C3DA               00005E0A   8917          BE    @L319
00005D12 E330 C288 0016          00005CB8   8918          LLGF  3,@lit_851_291 ; __stderrp
00005D18 E3F3 5000 0004          00000000   8919          LG    15,0(3,5)   ; __stderrp
00005D1E B904 002D                          8920          LGR   2,13
00005D22 A72B 1000               00001000   8921          AGHI  2,4096
00005D26 E3F0 2A00 0024          00000A00   8922          STG   15,2560(0,2)
00005D2C E360 C280 0004          00005CB0   8923          LG    6,@lit_851_292
00005D32 41F0 65AA               000005AA   8924          LA    15,1450(0,6)
00005D36 E3F0 2A08 0024          00000A08   8925          STG   15,2568(0,2)
00005D3C 41F0 6040               00000040   8926          LA    15,64(0,6)
00005D40 E3F0 2A10 0024          00000A10   8927          STG   15,2576(0,2)
00005D46 E548 2A18 0519          00000A18   8928          MVGHI 2584(2),1305
00005D4C E370 C278 0004          00005CA8   8929          LG    7,@lit_851_293
00005D52 41F0 7174               00000174   8930          LA    15,372(0,7)
00005D56 E3F0 2A20 0024          00000A20   8931          STG   15,2592(0,2)
                                                                                                                           Page  179 
  Active Usings: @REGION_851_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005D5C 4110 2A00               00000A00   8932          LA    1,2560(0,2)
00005D60 E380 C270 0004          00005CA0   8933          LG    8,@lit_851_294 ; fprintf
00005D66 B904 00F8                          8934          LGR   15,8
00005D6A                                    8935 @@gen_label387 DS    0H
00005D6A 05EF                               8936          BALR  14,15
00005D6C                                    8937 @@gen_label388 DS    0H
00005D6C E3F3 5000 0004          00000000   8938          LG    15,0(3,5)   ; __stderrp
00005D72 E3F0 2A00 0024          00000A00   8939          STG   15,2560(0,2)
00005D78 41F0 65E2               000005E2   8940          LA    15,1506(0,6)
00005D7C E3F0 2A08 0024          00000A08   8941          STG   15,2568(0,2)
00005D82 E340 2A10 0024          00000A10   8942          STG   4,2576(0,2)
00005D88 4110 2A00               00000A00   8943          LA    1,2560(0,2)
00005D8C B904 00F8                          8944          LGR   15,8
00005D90                                    8945 @@gen_label389 DS    0H
00005D90 05EF                               8946          BALR  14,15
00005D92                                    8947 @@gen_label390 DS    0H
00005D92 E3F3 5000 0004          00000000   8948          LG    15,0(3,5)   ; __stderrp
00005D98 E3F0 2A00 0024          00000A00   8949          STG   15,2560(0,2)
00005D9E 41F0 65A4               000005A4   8950          LA    15,1444(0,6)
00005DA2 E3F0 2A08 0024          00000A08   8951          STG   15,2568(0,2)
00005DA8 4110 2A00               00000A00   8952          LA    1,2560(0,2)
00005DAC B904 00F8                          8953          LGR   15,8
00005DB0                                    8954 @@gen_label391 DS    0H
00005DB0 05EF                               8955          BALR  14,15
00005DB2                                    8956 @@gen_label392 DS    0H
00005DB2 E3F0 C28C 0016          00005CBC   8957          LLGF  15,@lit_851_299 ; rd_unittest_assert_on_failure
00005DB8 41FF 5000               00000000   8958          LA    15,0(15,5)
00005DBC 9500 F000      00000000 00000000   8959          CLI   0(15),0
00005DC0 4780 C3CC               00005DFC   8960          BE    @L320
00005DC4 A74F 00C8               000000C8   8961          CGHI  4,200
00005DC8 4780 C3CC               00005DFC   8962          BE    @L320
00005DCC                                    8963 @L321    DS    0H
00005DCC 41F0 7174               00000174   8964          LA    15,372(0,7)
00005DD0 E3F0 2A00 0024          00000A00   8965          STG   15,2560(0,2)
00005DD6 41F0 6040               00000040   8966          LA    15,64(0,6)
00005DDA E3F0 2A08 0024          00000A08   8967          STG   15,2568(0,2)
00005DE0 E548 2A10 0519          00000A10   8968          MVGHI 2576(2),1305
00005DE6 41F0 65FE               000005FE   8969          LA    15,1534(0,6)
00005DEA E3F0 2A18 0024          00000A18   8970          STG   15,2584(0,2)
00005DF0 4110 2A00               00000A00   8971          LA    1,2560(0,2)
00005DF4 E3F0 C290 0004          00005CC0   8972          LG    15,@lit_851_300 ; __assert
00005DFA                                    8973 @@gen_label395 DS    0H
00005DFA 05EF                               8974          BALR  14,15
00005DFC                                    8975 @@gen_label396 DS    0H
00005DFC                                    8976 @L322    DS    0H
00005DFC                                    8977 @L320    DS    0H
00005DFC A7F9 0001               00000001   8978          LGHI  15,1        ; 1
00005E00 E3C0 C298 001A          00005CC8   8979          ALGF  12,@lit_region_diff_851_1_2
                                            8980          DROP  12
                        0000631C            8981          USING @REGION_851_2,12
00005E06 47F0 C812               00006B2E   8982          B     @ret_lab_851
                                            8983          DROP  12
                                                                                                                           Page  180 
  Active Usings: @REGION_851_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00005A30            8984          USING @REGION_851_1,12
00005E0A                                    8985 @L319    DS    0H
                                            8986 * ***
                                            8987 * ***           r = rd_buf_write(&b, twos, 800);
00005E0A 41F0 D120               00000120   8988          LA    15,288(0,13)
00005E0E B904 001D                          8989          LGR   1,13
00005E12 A71B 1000               00001000   8990          AGHI  1,4096
00005E16 E3F0 1A00 0024          00000A00   8991          STG   15,2560(0,1)
00005E1C 41F0 15FC               000005FC   8992          LA    15,1532(0,1)
00005E20 E3F0 1A08 0024          00000A08   8993          STG   15,2568(0,1)
00005E26 E548 1A10 0320          00000A10   8994          MVGHI 2576(1),800
00005E2C 4110 1A00               00000A00   8995          LA    1,2560(0,1)
00005E30 E3F0 C268 0004          00005C98   8996          LG    15,@lit_851_290 ; rd_buf_write
00005E36                                    8997 @@gen_label397 DS    0H
00005E36 05EF                               8998          BALR  14,15
00005E38                                    8999 @@gen_label398 DS    0H
00005E38 B904 003F                          9000          LGR   3,15        ; r
                                            9001 * ***           do { if (!(r == 200)) { fprintf(__stderrp, "\033[31mRD\
                                            9002 * UT: FAIL: %s:%d: %s: " "assert failed: " "r == 200" ": ", "C:\\asgka\
                                            9003 * fka\\librdkafka\\src\\rdbuf.c", 1308, __FUNCTION__); fprintf(__stder\
                                            9004 * rp, "write() returned position %" "zu", r); fprintf(__stderrp, "\033\
                                            9005 * [0m\n"); if (rd_unittest_assert_on_failure) ((r == 200) ? (void)0 : \
                                            9006 * __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1308, "\
                                            9007 * r == 200")); return 1; } } while (0);
00005E3C                                    9008 @L323    DS    0H
00005E3C A73F 00C8               000000C8   9009          CGHI  3,200
00005E40 4780 C50C               00005F3C   9010          BE    @L326
00005E44 E340 C288 0016          00005CB8   9011          LLGF  4,@lit_851_291 ; __stderrp
00005E4A E3F4 5000 0004          00000000   9012          LG    15,0(4,5)   ; __stderrp
00005E50 B904 002D                          9013          LGR   2,13
00005E54 A72B 1000               00001000   9014          AGHI  2,4096
00005E58 E3F0 2A00 0024          00000A00   9015          STG   15,2560(0,2)
00005E5E E360 C280 0004          00005CB0   9016          LG    6,@lit_851_292
00005E64 41F0 660A               0000060A   9017          LA    15,1546(0,6)
00005E68 E3F0 2A08 0024          00000A08   9018          STG   15,2568(0,2)
00005E6E 41F0 6040               00000040   9019          LA    15,64(0,6)
00005E72 E3F0 2A10 0024          00000A10   9020          STG   15,2576(0,2)
00005E78 E548 2A18 051C          00000A18   9021          MVGHI 2584(2),1308
00005E7E E370 C278 0004          00005CA8   9022          LG    7,@lit_851_293
00005E84 41F0 7174               00000174   9023          LA    15,372(0,7)
00005E88 E3F0 2A20 0024          00000A20   9024          STG   15,2592(0,2)
00005E8E 4110 2A00               00000A00   9025          LA    1,2560(0,2)
00005E92 E380 C270 0004          00005CA0   9026          LG    8,@lit_851_294 ; fprintf
00005E98 B904 00F8                          9027          LGR   15,8
00005E9C                                    9028 @@gen_label400 DS    0H
00005E9C 05EF                               9029          BALR  14,15
00005E9E                                    9030 @@gen_label401 DS    0H
00005E9E E3F4 5000 0004          00000000   9031          LG    15,0(4,5)   ; __stderrp
00005EA4 E3F0 2A00 0024          00000A00   9032          STG   15,2560(0,2)
00005EAA 41F0 6586               00000586   9033          LA    15,1414(0,6)
00005EAE E3F0 2A08 0024          00000A08   9034          STG   15,2568(0,2)
00005EB4 E330 2A10 0024          00000A10   9035          STG   3,2576(0,2)
                                                                                                                           Page  181 
  Active Usings: @REGION_851_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005EBA 4110 2A00               00000A00   9036          LA    1,2560(0,2)
00005EBE B904 00F8                          9037          LGR   15,8
00005EC2                                    9038 @@gen_label402 DS    0H
00005EC2 05EF                               9039          BALR  14,15
00005EC4                                    9040 @@gen_label403 DS    0H
00005EC4 E3F4 5000 0004          00000000   9041          LG    15,0(4,5)   ; __stderrp
00005ECA E3F0 2A00 0024          00000A00   9042          STG   15,2560(0,2)
00005ED0 41F0 65A4               000005A4   9043          LA    15,1444(0,6)
00005ED4 E3F0 2A08 0024          00000A08   9044          STG   15,2568(0,2)
00005EDA 4110 2A00               00000A00   9045          LA    1,2560(0,2)
00005EDE B904 00F8                          9046          LGR   15,8
00005EE2                                    9047 @@gen_label404 DS    0H
00005EE2 05EF                               9048          BALR  14,15
00005EE4                                    9049 @@gen_label405 DS    0H
00005EE4 E3F0 C28C 0016          00005CBC   9050          LLGF  15,@lit_851_299 ; rd_unittest_assert_on_failure
00005EEA 41FF 5000               00000000   9051          LA    15,0(15,5)
00005EEE 9500 F000      00000000 00000000   9052          CLI   0(15),0
00005EF2 4780 C4FE               00005F2E   9053          BE    @L327
00005EF6 A73F 00C8               000000C8   9054          CGHI  3,200
00005EFA 4780 C4FE               00005F2E   9055          BE    @L327
00005EFE                                    9056 @L328    DS    0H
00005EFE 41F0 7174               00000174   9057          LA    15,372(0,7)
00005F02 E3F0 2A00 0024          00000A00   9058          STG   15,2560(0,2)
00005F08 41F0 6040               00000040   9059          LA    15,64(0,6)
00005F0C E3F0 2A08 0024          00000A08   9060          STG   15,2568(0,2)
00005F12 E548 2A10 051C          00000A10   9061          MVGHI 2576(2),1308
00005F18 41F0 6640               00000640   9062          LA    15,1600(0,6)
00005F1C E3F0 2A18 0024          00000A18   9063          STG   15,2584(0,2)
00005F22 4110 2A00               00000A00   9064          LA    1,2560(0,2)
00005F26 E3F0 C290 0004          00005CC0   9065          LG    15,@lit_851_300 ; __assert
00005F2C                                    9066 @@gen_label408 DS    0H
00005F2C 05EF                               9067          BALR  14,15
00005F2E                                    9068 @@gen_label409 DS    0H
00005F2E                                    9069 @L329    DS    0H
00005F2E                                    9070 @L327    DS    0H
00005F2E A7F9 0001               00000001   9071          LGHI  15,1        ; 1
00005F32 E3C0 C298 001A          00005CC8   9072          ALGF  12,@lit_region_diff_851_1_2
                                            9073          DROP  12
                        0000631C            9074          USING @REGION_851_2,12
00005F38 47F0 C812               00006B2E   9075          B     @ret_lab_851
                                            9076          DROP  12
                        00005A30            9077          USING @REGION_851_1,12
00005F3C                                    9078 @L326    DS    0H
                                            9079 * ***           pos = rd_buf_write_pos(&b);
00005F3C 41F0 D120               00000120   9080          LA    15,288(0,13)
00005F40 B904 001D                          9081          LGR   1,13
00005F44 A71B 1000               00001000   9082          AGHI  1,4096
00005F48 E3F0 1A00 0024          00000A00   9083          STG   15,2560(0,1)
00005F4E 4110 1A00               00000A00   9084          LA    1,2560(0,1)
00005F52 E3F0 C2A0 0004          00005CD0   9085          LG    15,@lit_851_302 ; rd_buf_write_pos
00005F58                                    9086 @@gen_label410 DS    0H
00005F58 05EF                               9087          BALR  14,15
                                                                                                                           Page  182 
  Active Usings: @REGION_851_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005F5A                                    9088 @@gen_label411 DS    0H
00005F5A B904 004F                          9089          LGR   4,15        ; pos
                                            9090 * ***           do { if (!(pos == 200+800)) { fprintf(__stderrp, "\033\
                                            9091 * [31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "pos == 200+800" ": "\
                                            9092 * , "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1310, __FUNCTION__); fpr\
                                            9093 * intf(__stderrp, "pos() returned position %" "zu", pos); fprintf(__st\
                                            9094 * derrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((pos == 200\
                                            9095 * +800) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\
                                            9096 * \rdbuf.c", 1310, "pos == 200+800")); return 1; } } while (0);
00005F5E                                    9097 @L330    DS    0H
00005F5E A74F 03E8               000003E8   9098          CGHI  4,1000
00005F62 4780 C62E               0000605E   9099          BE    @L333
00005F66 E330 C288 0016          00005CB8   9100          LLGF  3,@lit_851_291 ; __stderrp
00005F6C E3F3 5000 0004          00000000   9101          LG    15,0(3,5)   ; __stderrp
00005F72 B904 002D                          9102          LGR   2,13
00005F76 A72B 1000               00001000   9103          AGHI  2,4096
00005F7A E3F0 2A00 0024          00000A00   9104          STG   15,2560(0,2)
00005F80 E360 C280 0004          00005CB0   9105          LG    6,@lit_851_292
00005F86 41F0 664A               0000064A   9106          LA    15,1610(0,6)
00005F8A E3F0 2A08 0024          00000A08   9107          STG   15,2568(0,2)
00005F90 41F0 6040               00000040   9108          LA    15,64(0,6)
00005F94 E3F0 2A10 0024          00000A10   9109          STG   15,2576(0,2)
00005F9A E548 2A18 051E          00000A18   9110          MVGHI 2584(2),1310
00005FA0 E370 C278 0004          00005CA8   9111          LG    7,@lit_851_293
00005FA6 41F0 7174               00000174   9112          LA    15,372(0,7)
00005FAA E3F0 2A20 0024          00000A20   9113          STG   15,2592(0,2)
00005FB0 4110 2A00               00000A00   9114          LA    1,2560(0,2)
00005FB4 E380 C270 0004          00005CA0   9115          LG    8,@lit_851_294 ; fprintf
00005FBA B904 00F8                          9116          LGR   15,8
00005FBE                                    9117 @@gen_label413 DS    0H
00005FBE 05EF                               9118          BALR  14,15
00005FC0                                    9119 @@gen_label414 DS    0H
00005FC0 E3F3 5000 0004          00000000   9120          LG    15,0(3,5)   ; __stderrp
00005FC6 E3F0 2A00 0024          00000A00   9121          STG   15,2560(0,2)
00005FCC 41F0 65E2               000005E2   9122          LA    15,1506(0,6)
00005FD0 E3F0 2A08 0024          00000A08   9123          STG   15,2568(0,2)
00005FD6 E340 2A10 0024          00000A10   9124          STG   4,2576(0,2)
00005FDC 4110 2A00               00000A00   9125          LA    1,2560(0,2)
00005FE0 B904 00F8                          9126          LGR   15,8
00005FE4                                    9127 @@gen_label415 DS    0H
00005FE4 05EF                               9128          BALR  14,15
00005FE6                                    9129 @@gen_label416 DS    0H
00005FE6 E3F3 5000 0004          00000000   9130          LG    15,0(3,5)   ; __stderrp
00005FEC E3F0 2A00 0024          00000A00   9131          STG   15,2560(0,2)
00005FF2 41F0 65A4               000005A4   9132          LA    15,1444(0,6)
00005FF6 E3F0 2A08 0024          00000A08   9133          STG   15,2568(0,2)
00005FFC 4110 2A00               00000A00   9134          LA    1,2560(0,2)
00006000 B904 00F8                          9135          LGR   15,8
00006004                                    9136 @@gen_label417 DS    0H
00006004 05EF                               9137          BALR  14,15
00006006                                    9138 @@gen_label418 DS    0H
00006006 E3F0 C28C 0016          00005CBC   9139          LLGF  15,@lit_851_299 ; rd_unittest_assert_on_failure
                                                                                                                           Page  183 
  Active Usings: @REGION_851_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000600C 41FF 5000               00000000   9140          LA    15,0(15,5)
00006010 9500 F000      00000000 00000000   9141          CLI   0(15),0
00006014 4780 C620               00006050   9142          BE    @L334
00006018 A74F 03E8               000003E8   9143          CGHI  4,1000
0000601C 4780 C620               00006050   9144          BE    @L334
00006020                                    9145 @L335    DS    0H
00006020 41F0 7174               00000174   9146          LA    15,372(0,7)
00006024 E3F0 2A00 0024          00000A00   9147          STG   15,2560(0,2)
0000602A 41F0 6040               00000040   9148          LA    15,64(0,6)
0000602E E3F0 2A08 0024          00000A08   9149          STG   15,2568(0,2)
00006034 E548 2A10 051E          00000A10   9150          MVGHI 2576(2),1310
0000603A 41F0 6686               00000686   9151          LA    15,1670(0,6)
0000603E E3F0 2A18 0024          00000A18   9152          STG   15,2584(0,2)
00006044 4110 2A00               00000A00   9153          LA    1,2560(0,2)
00006048 E3F0 C290 0004          00005CC0   9154          LG    15,@lit_851_300 ; __assert
0000604E                                    9155 @@gen_label421 DS    0H
0000604E 05EF                               9156          BALR  14,15
00006050                                    9157 @@gen_label422 DS    0H
00006050                                    9158 @L336    DS    0H
00006050                                    9159 @L334    DS    0H
00006050 A7F9 0001               00000001   9160          LGHI  15,1        ; 1
00006054 E3C0 C298 001A          00005CC8   9161          ALGF  12,@lit_region_diff_851_1_2
                                            9162          DROP  12
                        0000631C            9163          USING @REGION_851_2,12
0000605A 47F0 C812               00006B2E   9164          B     @ret_lab_851
                                            9165          DROP  12
                        00005A30            9166          USING @REGION_851_1,12
0000605E                                    9167 @L333    DS    0H
                                            9168 * ***
                                            9169 * ***
                                            9170 * ***           r = rd_buf_write(&b, threes, 1);
0000605E 41F0 D120               00000120   9171          LA    15,288(0,13)
00006062 B904 001D                          9172          LGR   1,13
00006066 A71B 1000               00001000   9173          AGHI  1,4096
0000606A E3F0 1A00 0024          00000A00   9174          STG   15,2560(0,1)
00006070 41F0 11FC               000001FC   9175          LA    15,508(0,1)
00006074 E3F0 1A08 0024          00000A08   9176          STG   15,2568(0,1)
0000607A E548 1A10 0001          00000A10   9177          MVGHI 2576(1),1
00006080 4110 1A00               00000A00   9178          LA    1,2560(0,1)
00006084 E3F0 C268 0004          00005C98   9179          LG    15,@lit_851_290 ; rd_buf_write
0000608A                                    9180 @@gen_label423 DS    0H
0000608A 05EF                               9181          BALR  14,15
0000608C                                    9182 @@gen_label424 DS    0H
0000608C B904 003F                          9183          LGR   3,15        ; r
                                            9184 * ***           do { if (!(pos == 200+800)) { fprintf(__stderrp, "\033\
                                            9185 * [31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "pos == 200+800" ": "\
                                            9186 * , "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1314, __FUNCTION__); fpr\
                                            9187 * intf(__stderrp, "write() returned position %" "zu", r); fprintf(__st\
                                            9188 * derrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((pos == 200\
                                            9189 * +800) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\
                                            9190 * \rdbuf.c", 1314, "pos == 200+800")); return 1; } } while (0);
00006090                                    9191 @L337    DS    0H
                                                                                                                           Page  184 
  Active Usings: @REGION_851_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006090 A74F 03E8               000003E8   9192          CGHI  4,1000
00006094 4780 C760               00006190   9193          BE    @L340
00006098 E360 C288 0016          00005CB8   9194          LLGF  6,@lit_851_291 ; __stderrp
0000609E E3F6 5000 0004          00000000   9195          LG    15,0(6,5)   ; __stderrp
000060A4 B904 002D                          9196          LGR   2,13
000060A8 A72B 1000               00001000   9197          AGHI  2,4096
000060AC E3F0 2A00 0024          00000A00   9198          STG   15,2560(0,2)
000060B2 E370 C280 0004          00005CB0   9199          LG    7,@lit_851_292
000060B8 41F0 764A               0000064A   9200          LA    15,1610(0,7)
000060BC E3F0 2A08 0024          00000A08   9201          STG   15,2568(0,2)
000060C2 41F0 7040               00000040   9202          LA    15,64(0,7)
000060C6 E3F0 2A10 0024          00000A10   9203          STG   15,2576(0,2)
000060CC E548 2A18 0522          00000A18   9204          MVGHI 2584(2),1314
000060D2 E380 C278 0004          00005CA8   9205          LG    8,@lit_851_293
000060D8 41F0 8174               00000174   9206          LA    15,372(0,8)
000060DC E3F0 2A20 0024          00000A20   9207          STG   15,2592(0,2)
000060E2 4110 2A00               00000A00   9208          LA    1,2560(0,2)
000060E6 E390 C270 0004          00005CA0   9209          LG    9,@lit_851_294 ; fprintf
000060EC B904 00F9                          9210          LGR   15,9
000060F0                                    9211 @@gen_label426 DS    0H
000060F0 05EF                               9212          BALR  14,15
000060F2                                    9213 @@gen_label427 DS    0H
000060F2 E3F6 5000 0004          00000000   9214          LG    15,0(6,5)   ; __stderrp
000060F8 E3F0 2A00 0024          00000A00   9215          STG   15,2560(0,2)
000060FE 41F0 7586               00000586   9216          LA    15,1414(0,7)
00006102 E3F0 2A08 0024          00000A08   9217          STG   15,2568(0,2)
00006108 E330 2A10 0024          00000A10   9218          STG   3,2576(0,2)
0000610E 4110 2A00               00000A00   9219          LA    1,2560(0,2)
00006112 B904 00F9                          9220          LGR   15,9
00006116                                    9221 @@gen_label428 DS    0H
00006116 05EF                               9222          BALR  14,15
00006118                                    9223 @@gen_label429 DS    0H
00006118 E3F6 5000 0004          00000000   9224          LG    15,0(6,5)   ; __stderrp
0000611E E3F0 2A00 0024          00000A00   9225          STG   15,2560(0,2)
00006124 41F0 75A4               000005A4   9226          LA    15,1444(0,7)
00006128 E3F0 2A08 0024          00000A08   9227          STG   15,2568(0,2)
0000612E 4110 2A00               00000A00   9228          LA    1,2560(0,2)
00006132 B904 00F9                          9229          LGR   15,9
00006136                                    9230 @@gen_label430 DS    0H
00006136 05EF                               9231          BALR  14,15
00006138                                    9232 @@gen_label431 DS    0H
00006138 E3F0 C28C 0016          00005CBC   9233          LLGF  15,@lit_851_299 ; rd_unittest_assert_on_failure
0000613E 41FF 5000               00000000   9234          LA    15,0(15,5)
00006142 9500 F000      00000000 00000000   9235          CLI   0(15),0
00006146 4780 C752               00006182   9236          BE    @L341
0000614A A74F 03E8               000003E8   9237          CGHI  4,1000
0000614E 4780 C752               00006182   9238          BE    @L341
00006152                                    9239 @L342    DS    0H
00006152 41F0 8174               00000174   9240          LA    15,372(0,8)
00006156 E3F0 2A00 0024          00000A00   9241          STG   15,2560(0,2)
0000615C 41F0 7040               00000040   9242          LA    15,64(0,7)
00006160 E3F0 2A08 0024          00000A08   9243          STG   15,2568(0,2)
                                                                                                                           Page  185 
  Active Usings: @REGION_851_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006166 E548 2A10 0522          00000A10   9244          MVGHI 2576(2),1314
0000616C 41F0 7686               00000686   9245          LA    15,1670(0,7)
00006170 E3F0 2A18 0024          00000A18   9246          STG   15,2584(0,2)
00006176 4110 2A00               00000A00   9247          LA    1,2560(0,2)
0000617A E3F0 C290 0004          00005CC0   9248          LG    15,@lit_851_300 ; __assert
00006180                                    9249 @@gen_label434 DS    0H
00006180 05EF                               9250          BALR  14,15
00006182                                    9251 @@gen_label435 DS    0H
00006182                                    9252 @L343    DS    0H
00006182                                    9253 @L341    DS    0H
00006182 A7F9 0001               00000001   9254          LGHI  15,1        ; 1
00006186 E3C0 C298 001A          00005CC8   9255          ALGF  12,@lit_region_diff_851_1_2
                                            9256          DROP  12
                        0000631C            9257          USING @REGION_851_2,12
0000618C 47F0 C812               00006B2E   9258          B     @ret_lab_851
                                            9259          DROP  12
                        00005A30            9260          USING @REGION_851_1,12
00006190                                    9261 @L340    DS    0H
                                            9262 * ***
                                            9263 * ***           pos = rd_buf_write_pos(&b);
00006190 41F0 D120               00000120   9264          LA    15,288(0,13)
00006194 B904 001D                          9265          LGR   1,13
00006198 A71B 1000               00001000   9266          AGHI  1,4096
0000619C E3F0 1A00 0024          00000A00   9267          STG   15,2560(0,1)
000061A2 4110 1A00               00000A00   9268          LA    1,2560(0,1)
000061A6 E3F0 C2A0 0004          00005CD0   9269          LG    15,@lit_851_302 ; rd_buf_write_pos
000061AC                                    9270 @@gen_label436 DS    0H
000061AC 05EF                               9271          BALR  14,15
000061AE                                    9272 @@gen_label437 DS    0H
000061AE B904 004F                          9273          LGR   4,15        ; pos
                                            9274 * ***           do { if (!(pos == 200+800+1)) { fprintf(__stderrp, "\0\
                                            9275 * 33[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "pos == 200+800+1" \
                                            9276 * ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1317, __FUNCTION__);\
                                            9277 *  fprintf(__stderrp, "pos() returned position %" "zu", pos); fprintf(\
                                            9278 * __stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((pos ==\
                                            9279 *  200+800+1) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\
                                            9280 * \\src\\rdbuf.c", 1317, "pos == 200+800+1")); return 1; } } while (0)\
                                            9281 * ;
000061B2                                    9282 @L344    DS    0H
000061B2 A74F 03E9               000003E9   9283          CGHI  4,1001
000061B6 4780 C882               000062B2   9284          BE    @L347
000061BA E330 C288 0016          00005CB8   9285          LLGF  3,@lit_851_291 ; __stderrp
000061C0 E3F3 5000 0004          00000000   9286          LG    15,0(3,5)   ; __stderrp
000061C6 B904 002D                          9287          LGR   2,13
000061CA A72B 1000               00001000   9288          AGHI  2,4096
000061CE E3F0 2A00 0024          00000A00   9289          STG   15,2560(0,2)
000061D4 E360 C280 0004          00005CB0   9290          LG    6,@lit_851_292
000061DA 41F0 6696               00000696   9291          LA    15,1686(0,6)
000061DE E3F0 2A08 0024          00000A08   9292          STG   15,2568(0,2)
000061E4 41F0 6040               00000040   9293          LA    15,64(0,6)
000061E8 E3F0 2A10 0024          00000A10   9294          STG   15,2576(0,2)
000061EE E548 2A18 0525          00000A18   9295          MVGHI 2584(2),1317
                                                                                                                           Page  186 
  Active Usings: @REGION_851_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000061F4 E370 C278 0004          00005CA8   9296          LG    7,@lit_851_293
000061FA 41F0 7174               00000174   9297          LA    15,372(0,7)
000061FE E3F0 2A20 0024          00000A20   9298          STG   15,2592(0,2)
00006204 4110 2A00               00000A00   9299          LA    1,2560(0,2)
00006208 E380 C270 0004          00005CA0   9300          LG    8,@lit_851_294 ; fprintf
0000620E B904 00F8                          9301          LGR   15,8
00006212                                    9302 @@gen_label439 DS    0H
00006212 05EF                               9303          BALR  14,15
00006214                                    9304 @@gen_label440 DS    0H
00006214 E3F3 5000 0004          00000000   9305          LG    15,0(3,5)   ; __stderrp
0000621A E3F0 2A00 0024          00000A00   9306          STG   15,2560(0,2)
00006220 41F0 65E2               000005E2   9307          LA    15,1506(0,6)
00006224 E3F0 2A08 0024          00000A08   9308          STG   15,2568(0,2)
0000622A E340 2A10 0024          00000A10   9309          STG   4,2576(0,2)
00006230 4110 2A00               00000A00   9310          LA    1,2560(0,2)
00006234 B904 00F8                          9311          LGR   15,8
00006238                                    9312 @@gen_label441 DS    0H
00006238 05EF                               9313          BALR  14,15
0000623A                                    9314 @@gen_label442 DS    0H
0000623A E3F3 5000 0004          00000000   9315          LG    15,0(3,5)   ; __stderrp
00006240 E3F0 2A00 0024          00000A00   9316          STG   15,2560(0,2)
00006246 41F0 65A4               000005A4   9317          LA    15,1444(0,6)
0000624A E3F0 2A08 0024          00000A08   9318          STG   15,2568(0,2)
00006250 4110 2A00               00000A00   9319          LA    1,2560(0,2)
00006254 B904 00F8                          9320          LGR   15,8
00006258                                    9321 @@gen_label443 DS    0H
00006258 05EF                               9322          BALR  14,15
0000625A                                    9323 @@gen_label444 DS    0H
0000625A E3F0 C28C 0016          00005CBC   9324          LLGF  15,@lit_851_299 ; rd_unittest_assert_on_failure
00006260 41FF 5000               00000000   9325          LA    15,0(15,5)
00006264 9500 F000      00000000 00000000   9326          CLI   0(15),0
00006268 4780 C874               000062A4   9327          BE    @L348
0000626C A74F 03E9               000003E9   9328          CGHI  4,1001
00006270 4780 C874               000062A4   9329          BE    @L348
00006274                                    9330 @L349    DS    0H
00006274 41F0 7174               00000174   9331          LA    15,372(0,7)
00006278 E3F0 2A00 0024          00000A00   9332          STG   15,2560(0,2)
0000627E 41F0 6040               00000040   9333          LA    15,64(0,6)
00006282 E3F0 2A08 0024          00000A08   9334          STG   15,2568(0,2)
00006288 E548 2A10 0525          00000A10   9335          MVGHI 2576(2),1317
0000628E 41F0 66D4               000006D4   9336          LA    15,1748(0,6)
00006292 E3F0 2A18 0024          00000A18   9337          STG   15,2584(0,2)
00006298 4110 2A00               00000A00   9338          LA    1,2560(0,2)
0000629C E3F0 C290 0004          00005CC0   9339          LG    15,@lit_851_300 ; __assert
000062A2                                    9340 @@gen_label447 DS    0H
000062A2 05EF                               9341          BALR  14,15
000062A4                                    9342 @@gen_label448 DS    0H
000062A4                                    9343 @L350    DS    0H
000062A4                                    9344 @L348    DS    0H
000062A4 A7F9 0001               00000001   9345          LGHI  15,1        ; 1
000062A8 E3C0 C298 001A          00005CC8   9346          ALGF  12,@lit_region_diff_851_1_2
                                            9347          DROP  12
                                                                                                                           Page  187 
  Active Usings: @REGION_851_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        0000631C            9348          USING @REGION_851_2,12
000062AE 47F0 C812               00006B2E   9349          B     @ret_lab_851
                                            9350          DROP  12
                        00005A30            9351          USING @REGION_851_1,12
000062B2                                    9352 @L347    DS    0H
                                            9353 * ***
                                            9354 * ***
                                            9355 * ***
                                            9356 * ***
                                            9357 * ***
                                            9358 * ***           rd_slice_init_full(&slice, &b);
000062B2 41F0 D570               00000570   9359          LA    15,1392(0,13)
000062B6 B904 002D                          9360          LGR   2,13
000062BA A72B 1000               00001000   9361          AGHI  2,4096
000062BE E3F0 2A00 0024          00000A00   9362          STG   15,2560(0,2)
000062C4 41F0 D120               00000120   9363          LA    15,288(0,13)
000062C8 E3F0 2A08 0024          00000A08   9364          STG   15,2568(0,2)
000062CE 4110 2A00               00000A00   9365          LA    1,2560(0,2)
000062D2 E3F0 C2A8 0004          00005CD8   9366          LG    15,@lit_851_362 ; rd_slice_init_full
000062D8                                    9367 @@gen_label449 DS    0H
000062D8 05EF                               9368          BALR  14,15
000062DA                                    9369 @@gen_label450 DS    0H
                                            9370 * ***
                                            9371 * ***           r = rd_slice_read(&slice, buf, 200+800+2);
000062DA 41F0 D570               00000570   9372          LA    15,1392(0,13)
000062DE E3F0 2A00 0024          00000A00   9373          STG   15,2560(0,2)
000062E4 41F0 D598               00000598   9374          LA    15,1432(0,13)
000062E8 E3F0 2A08 0024          00000A08   9375          STG   15,2568(0,2)
000062EE E548 2A10 03EA          00000A10   9376          MVGHI 2576(2),1002
000062F4 4110 2A00               00000A00   9377          LA    1,2560(0,2)
000062F8 E3F0 C2B0 0004          00005CE0   9378          LG    15,@lit_851_363 ; rd_slice_read
000062FE                                    9379 @@gen_label451 DS    0H
000062FE 05EF                               9380          BALR  14,15
00006300                                    9381 @@gen_label452 DS    0H
00006300 B904 003F                          9382          LGR   3,15        ; r
                                            9383 * ***           do { if (!(r == 0)) { fprintf(__stderrp, "\033[31mRDUT\
                                            9384 * : FAIL: %s:%d: %s: " "assert failed: " "r == 0" ": ", "C:\\asgkafka\\
                                            9385 * \librdkafka\\src\\rdbuf.c", 1326, __FUNCTION__); fprintf(__stderrp, \
                                            9386 * "read() > remaining should have failed, gave %" "zu", r); fprintf(__\
                                            9387 * stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r == 0) \
                                            9388 * ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf\
                                            9389 * .c", 1326, "r == 0")); return 1; } } while (0);
00006304                                    9390 @L351    DS    0H
00006304 B902 00F3                          9391          LTGR  15,3
00006308 4770 C8E6               00006316   9392          BNE   *+14  Around region break
0000630C E3C0 C298 001A          00005CC8   9393          ALGF  12,@lit_region_diff_851_1_2
                                            9394          DROP  12
                        0000631C            9395          USING @REGION_851_2,12
00006312 47F0 C138               00006454   9396          B     @L354
                                            9397          DROP  12
                        00005A30            9398          USING @REGION_851_1,12
00006316 E3C0 C298 001A          00005CC8   9399          ALGF  12,@lit_region_diff_851_1_2
                                                                                                                           Page  188 
  Active Usings: @REGION_851_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000631C                                    9400 @REGION_851_2 DS 0H
                                            9401          DROP  12
                        0000631C            9402          USING @REGION_851_2,12
0000631C E340 C10C 0016          00006428   9403          LLGF  4,@lit_851_364 ; __stderrp
00006322 E3F4 5000 0004          00000000   9404          LG    15,0(4,5)   ; __stderrp
00006328 B904 002D                          9405          LGR   2,13
0000632C A72B 1000               00001000   9406          AGHI  2,4096
00006330 E3F0 2A00 0024          00000A00   9407          STG   15,2560(0,2)
00006336 E360 C104 0004          00006420   9408          LG    6,@lit_851_365
0000633C 41F0 6552               00000552   9409          LA    15,1362(0,6)
00006340 E3F0 2A08 0024          00000A08   9410          STG   15,2568(0,2)
00006346 41F0 6040               00000040   9411          LA    15,64(0,6)
0000634A E3F0 2A10 0024          00000A10   9412          STG   15,2576(0,2)
00006350 E548 2A18 052E          00000A18   9413          MVGHI 2584(2),1326
00006356 E370 C0FC 0004          00006418   9414          LG    7,@lit_851_366
0000635C 41F0 7174               00000174   9415          LA    15,372(0,7)
00006360 E3F0 2A20 0024          00000A20   9416          STG   15,2592(0,2)
00006366 4110 2A00               00000A00   9417          LA    1,2560(0,2)
0000636A E380 C0F4 0004          00006410   9418          LG    8,@lit_851_367 ; fprintf
00006370 B904 00F8                          9419          LGR   15,8
00006374                                    9420 @@gen_label454 DS    0H
00006374 05EF                               9421          BALR  14,15
00006376                                    9422 @@gen_label455 DS    0H
00006376 E3F4 5000 0004          00000000   9423          LG    15,0(4,5)   ; __stderrp
0000637C E3F0 2A00 0024          00000A00   9424          STG   15,2560(0,2)
00006382 41F0 66E6               000006E6   9425          LA    15,1766(0,6)
00006386 E3F0 2A08 0024          00000A08   9426          STG   15,2568(0,2)
0000638C E330 2A10 0024          00000A10   9427          STG   3,2576(0,2)
00006392 4110 2A00               00000A00   9428          LA    1,2560(0,2)
00006396 B904 00F8                          9429          LGR   15,8
0000639A                                    9430 @@gen_label456 DS    0H
0000639A 05EF                               9431          BALR  14,15
0000639C                                    9432 @@gen_label457 DS    0H
0000639C E3F4 5000 0004          00000000   9433          LG    15,0(4,5)   ; __stderrp
000063A2 E3F0 2A00 0024          00000A00   9434          STG   15,2560(0,2)
000063A8 41F0 65A4               000005A4   9435          LA    15,1444(0,6)
000063AC E3F0 2A08 0024          00000A08   9436          STG   15,2568(0,2)
000063B2 4110 2A00               00000A00   9437          LA    1,2560(0,2)
000063B6 B904 00F8                          9438          LGR   15,8
000063BA                                    9439 @@gen_label458 DS    0H
000063BA 05EF                               9440          BALR  14,15
000063BC                                    9441 @@gen_label459 DS    0H
000063BC E3F0 C110 0016          0000642C   9442          LLGF  15,@lit_851_372 ; rd_unittest_assert_on_failure
000063C2 41FF 5000               00000000   9443          LA    15,0(15,5)
000063C6 9500 F000      00000000 00000000   9444          CLI   0(15),0
000063CA 4780 C0EA               00006406   9445          BE    @L355
000063CE B902 00F3                          9446          LTGR  15,3
000063D2 4780 C0EA               00006406   9447          BE    @L355
000063D6                                    9448 @L356    DS    0H
000063D6 41F0 7174               00000174   9449          LA    15,372(0,7)
000063DA E3F0 2A00 0024          00000A00   9450          STG   15,2560(0,2)
000063E0 41F0 6040               00000040   9451          LA    15,64(0,6)
                                                                                                                           Page  189 
  Active Usings: @REGION_851_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000063E4 E3F0 2A08 0024          00000A08   9452          STG   15,2568(0,2)
000063EA E548 2A10 052E          00000A10   9453          MVGHI 2576(2),1326
000063F0 41F0 62F2               000002F2   9454          LA    15,754(0,6)
000063F4 E3F0 2A18 0024          00000A18   9455          STG   15,2584(0,2)
000063FA 4110 2A00               00000A00   9456          LA    1,2560(0,2)
000063FE E3F0 C114 0004          00006430   9457          LG    15,@lit_851_373 ; __assert
00006404                                    9458 @@gen_label462 DS    0H
00006404 05EF                               9459          BALR  14,15
00006406                                    9460 @@gen_label463 DS    0H
00006406                                    9461 @L357    DS    0H
00006406                                    9462 @L355    DS    0H
00006406 A7F9 0001               00000001   9463          LGHI  15,1        ; 1
0000640A 47F0 C812               00006B2E   9464          B     @ret_lab_851
00006410                                    9465          DS    0D
00006410 0000000000000000                   9466 @lit_851_367 DC AD(fprintf)
00006418 000000000000BFA0                   9467 @lit_851_366 DC AD(@DATA)
00006420 000000000000CB02                   9468 @lit_851_365 DC AD(@strings@)
00006428 00000000                           9469 @lit_851_364 DC Q(__stderrp)
0000642C 00000000                           9470 @lit_851_372 DC Q(rd_unittest_assert_on_failure)
00006430 0000000000000000                   9471 @lit_851_373 DC AD(__assert)
00006438 0000000000003ED0                   9472 @lit_851_375 DC AD(rd_slice_read)
00006440 00000000000007F0                   9473 @lit_851_380 DC AD(rd_slice_abs_offset)
00006448 0000000000001CD0                   9474 @lit_851_436 DC AD(rd_buf_destroy)
00006450 00000818                           9475 @lit_region_diff_851_2_3  DC A(@REGION_851_3-@REGION_851_2)
00006454                                    9476 @L354    DS    0H
                                            9477 * ***
                                            9478 * ***           r = rd_slice_read(&slice, buf, 200+800+1);
00006454 41F0 D570               00000570   9479          LA    15,1392(0,13)
00006458 B904 001D                          9480          LGR   1,13
0000645C A71B 1000               00001000   9481          AGHI  1,4096
00006460 E3F0 1A00 0024          00000A00   9482          STG   15,2560(0,1)
00006466 41F0 D598               00000598   9483          LA    15,1432(0,13)
0000646A E3F0 1A08 0024          00000A08   9484          STG   15,2568(0,1)
00006470 E548 1A10 03E9          00000A10   9485          MVGHI 2576(1),1001
00006476 4110 1A00               00000A00   9486          LA    1,2560(0,1)
0000647A E3F0 C11C 0004          00006438   9487          LG    15,@lit_851_375 ; rd_slice_read
00006480                                    9488 @@gen_label464 DS    0H
00006480 05EF                               9489          BALR  14,15
00006482                                    9490 @@gen_label465 DS    0H
00006482 B904 003F                          9491          LGR   3,15        ; r
                                            9492 * ***           do { if (!(r == 200+800+1)) { fprintf(__stderrp, "\033\
                                            9493 * [31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "r == 200+800+1" ": "\
                                            9494 * , "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1329, __FUNCTION__); fpr\
                                            9495 * intf(__stderrp, "read() returned %" "zu" " (%" "zu" " remains)", r, \
                                            9496 * ((&slice)->end - rd_slice_abs_offset(&slice))); fprintf(__stderrp, "\
                                            9497 * \033[0m\n"); if (rd_unittest_assert_on_failure) ((r == 200+800+1) ? \
                                            9498 * (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c\
                                            9499 * ", 1329, "r == 200+800+1")); return 1; } } while (0);
00006486                                    9500 @L358    DS    0H
00006486 A73F 03E9               000003E9   9501          CGHI  3,1001
0000648A 4780 C28A               000065A6   9502          BE    @L361
0000648E E340 C10C 0016          00006428   9503          LLGF  4,@lit_851_364 ; __stderrp
                                                                                                                           Page  190 
  Active Usings: @REGION_851_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006494 E3F4 5000 0004          00000000   9504          LG    15,0(4,5)   ; __stderrp
0000649A B904 002D                          9505          LGR   2,13
0000649E A72B 1000               00001000   9506          AGHI  2,4096
000064A2 E3F0 2A00 0024          00000A00   9507          STG   15,2560(0,2)
000064A8 E360 C104 0004          00006420   9508          LG    6,@lit_851_365
000064AE 41F0 6716               00000716   9509          LA    15,1814(0,6)
000064B2 E3F0 2A08 0024          00000A08   9510          STG   15,2568(0,2)
000064B8 41F0 6040               00000040   9511          LA    15,64(0,6)
000064BC E3F0 2A10 0024          00000A10   9512          STG   15,2576(0,2)
000064C2 E548 2A18 0531          00000A18   9513          MVGHI 2584(2),1329
000064C8 E370 C0FC 0004          00006418   9514          LG    7,@lit_851_366
000064CE 41F0 7174               00000174   9515          LA    15,372(0,7)
000064D2 E3F0 2A20 0024          00000A20   9516          STG   15,2592(0,2)
000064D8 4110 2A00               00000A00   9517          LA    1,2560(0,2)
000064DC E380 C0F4 0004          00006410   9518          LG    8,@lit_851_367 ; fprintf
000064E2 B904 00F8                          9519          LGR   15,8
000064E6                                    9520 @@gen_label467 DS    0H
000064E6 05EF                               9521          BALR  14,15
000064E8                                    9522 @@gen_label468 DS    0H
000064E8 E390 D590 0004          00000590   9523          LG    9,1424(0,13) ; offset of end in rd_slice_s
000064EE 41F0 D570               00000570   9524          LA    15,1392(0,13)
000064F2 E3F0 2A00 0024          00000A00   9525          STG   15,2560(0,2)
000064F8 4110 2A00               00000A00   9526          LA    1,2560(0,2)
000064FC E3F0 C124 0004          00006440   9527          LG    15,@lit_851_380 ; rd_slice_abs_offset
00006502                                    9528 @@gen_label469 DS    0H
00006502 05EF                               9529          BALR  14,15
00006504                                    9530 @@gen_label470 DS    0H
00006504 B90B 009F                          9531          SLGR  9,15
00006508 E3F4 5000 0004          00000000   9532          LG    15,0(4,5)   ; __stderrp
0000650E E3F0 2A00 0024          00000A00   9533          STG   15,2560(0,2)
00006514 41F0 6752               00000752   9534          LA    15,1874(0,6)
00006518 E3F0 2A08 0024          00000A08   9535          STG   15,2568(0,2)
0000651E E330 2A10 0024          00000A10   9536          STG   3,2576(0,2)
00006524 E390 2A18 0024          00000A18   9537          STG   9,2584(0,2)
0000652A 4110 2A00               00000A00   9538          LA    1,2560(0,2)
0000652E B904 00F8                          9539          LGR   15,8
00006532                                    9540 @@gen_label471 DS    0H
00006532 05EF                               9541          BALR  14,15
00006534                                    9542 @@gen_label472 DS    0H
00006534 E3F4 5000 0004          00000000   9543          LG    15,0(4,5)   ; __stderrp
0000653A E3F0 2A00 0024          00000A00   9544          STG   15,2560(0,2)
00006540 41F0 65A4               000005A4   9545          LA    15,1444(0,6)
00006544 E3F0 2A08 0024          00000A08   9546          STG   15,2568(0,2)
0000654A 4110 2A00               00000A00   9547          LA    1,2560(0,2)
0000654E B904 00F8                          9548          LGR   15,8
00006552                                    9549 @@gen_label473 DS    0H
00006552 05EF                               9550          BALR  14,15
00006554                                    9551 @@gen_label474 DS    0H
00006554 E3F0 C110 0016          0000642C   9552          LLGF  15,@lit_851_372 ; rd_unittest_assert_on_failure
0000655A 41FF 5000               00000000   9553          LA    15,0(15,5)
0000655E 9500 F000      00000000 00000000   9554          CLI   0(15),0
00006562 4780 C282               0000659E   9555          BE    @L362
                                                                                                                           Page  191 
  Active Usings: @REGION_851_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006566 A73F 03E9               000003E9   9556          CGHI  3,1001
0000656A 4780 C282               0000659E   9557          BE    @L362
0000656E                                    9558 @L363    DS    0H
0000656E 41F0 7174               00000174   9559          LA    15,372(0,7)
00006572 E3F0 2A00 0024          00000A00   9560          STG   15,2560(0,2)
00006578 41F0 6040               00000040   9561          LA    15,64(0,6)
0000657C E3F0 2A08 0024          00000A08   9562          STG   15,2568(0,2)
00006582 E548 2A10 0531          00000A10   9563          MVGHI 2576(2),1329
00006588 41F0 6774               00000774   9564          LA    15,1908(0,6)
0000658C E3F0 2A18 0024          00000A18   9565          STG   15,2584(0,2)
00006592 4110 2A00               00000A00   9566          LA    1,2560(0,2)
00006596 E3F0 C114 0004          00006430   9567          LG    15,@lit_851_373 ; __assert
0000659C                                    9568 @@gen_label477 DS    0H
0000659C 05EF                               9569          BALR  14,15
0000659E                                    9570 @@gen_label478 DS    0H
0000659E                                    9571 @L364    DS    0H
0000659E                                    9572 @L362    DS    0H
0000659E A7F9 0001               00000001   9573          LGHI  15,1        ; 1
000065A2 47F0 C812               00006B2E   9574          B     @ret_lab_851
000065A6                                    9575 @L361    DS    0H
                                            9576 * ***
                                            9577 * ***
                                            9578 * ***
                                            9579 * ***           do { if (!(!__memcmp(buf,ones,200))) { fprintf(__stder\
                                            9580 * rp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "!memcmp(buf\
                                            9581 * , ones, 200)" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1333, \
                                            9582 * __FUNCTION__); fprintf(__stderrp, "verify ones"); fprintf(__stderrp,\
                                            9583 *  "\033[0m\n"); if (rd_unittest_assert_on_failure) ((!__memcmp(buf,on\
                                            9584 * es,200)) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\s\
                                            9585 * rc\\rdbuf.c", 1333, "!__memcmp(buf,ones,200)")); return 1; } } while\
                                            9586 *  (0);
000065A6                                    9587 @L365    DS    0H
000065A6 41F0 D598               00000598   9588          LA    15,1432(0,13)
000065AA 4110 D170               00000170   9589          LA    1,368(0,13)
000065AE D5C7 F000 1000 00000000 00000000   9590          CLC   0(200,15),0(1)
000065B4 A7F9 0001               00000001   9591          LGHI  15,1
000065B8 4720 C2AC               000065C8   9592          BH    @@gen_label479
000065BC 4780 C2A8               000065C4   9593          BE    @@gen_label480
000065C0 A7FB FFFF               0000FFFF   9594          AGHI  15,-1
000065C4                                    9595 @@gen_label480 DS 0H
000065C4 A7FB FFFF               0000FFFF   9596          AGHI  15,-1
000065C8                                    9597 @@gen_label479 DS 0H
000065C8 12FF                               9598          LTR   15,15
000065CA 4780 C3BE               000066DA   9599          BZ    @L368
000065CE E330 C10C 0016          00006428   9600          LLGF  3,@lit_851_364 ; __stderrp
000065D4 E3F3 5000 0004          00000000   9601          LG    15,0(3,5)   ; __stderrp
000065DA B904 002D                          9602          LGR   2,13
000065DE A72B 1000               00001000   9603          AGHI  2,4096
000065E2 E3F0 2A00 0024          00000A00   9604          STG   15,2560(0,2)
000065E8 E340 C104 0004          00006420   9605          LG    4,@lit_851_365
000065EE 41F0 4784               00000784   9606          LA    15,1924(0,4)
000065F2 E3F0 2A08 0024          00000A08   9607          STG   15,2568(0,2)
                                                                                                                           Page  192 
  Active Usings: @REGION_851_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000065F8 41F0 4040               00000040   9608          LA    15,64(0,4)
000065FC E3F0 2A10 0024          00000A10   9609          STG   15,2576(0,2)
00006602 E548 2A18 0535          00000A18   9610          MVGHI 2584(2),1333
00006608 E360 C0FC 0004          00006418   9611          LG    6,@lit_851_366
0000660E 41F0 6174               00000174   9612          LA    15,372(0,6)
00006612 E3F0 2A20 0024          00000A20   9613          STG   15,2592(0,2)
00006618 4110 2A00               00000A00   9614          LA    1,2560(0,2)
0000661C E370 C0F4 0004          00006410   9615          LG    7,@lit_851_367 ; fprintf
00006622 B904 00F7                          9616          LGR   15,7
00006626                                    9617 @@gen_label482 DS    0H
00006626 05EF                               9618          BALR  14,15
00006628                                    9619 @@gen_label483 DS    0H
00006628 E3F3 5000 0004          00000000   9620          LG    15,0(3,5)   ; __stderrp
0000662E E3F0 2A00 0024          00000A00   9621          STG   15,2560(0,2)
00006634 41F0 47CA               000007CA   9622          LA    15,1994(0,4)
00006638 E3F0 2A08 0024          00000A08   9623          STG   15,2568(0,2)
0000663E 4110 2A00               00000A00   9624          LA    1,2560(0,2)
00006642 B904 00F7                          9625          LGR   15,7
00006646                                    9626 @@gen_label484 DS    0H
00006646 05EF                               9627          BALR  14,15
00006648                                    9628 @@gen_label485 DS    0H
00006648 E3F3 5000 0004          00000000   9629          LG    15,0(3,5)   ; __stderrp
0000664E E3F0 2A00 0024          00000A00   9630          STG   15,2560(0,2)
00006654 41F0 45A4               000005A4   9631          LA    15,1444(0,4)
00006658 E3F0 2A08 0024          00000A08   9632          STG   15,2568(0,2)
0000665E 4110 2A00               00000A00   9633          LA    1,2560(0,2)
00006662 B904 00F7                          9634          LGR   15,7
00006666                                    9635 @@gen_label486 DS    0H
00006666 05EF                               9636          BALR  14,15
00006668                                    9637 @@gen_label487 DS    0H
00006668 E3F0 C110 0016          0000642C   9638          LLGF  15,@lit_851_372 ; rd_unittest_assert_on_failure
0000666E 41FF 5000               00000000   9639          LA    15,0(15,5)
00006672 9500 F000      00000000 00000000   9640          CLI   0(15),0
00006676 4780 C3B6               000066D2   9641          BE    @L369
0000667A 41F0 D598               00000598   9642          LA    15,1432(0,13)
0000667E 4110 D170               00000170   9643          LA    1,368(0,13)
00006682 D5C7 F000 1000 00000000 00000000   9644          CLC   0(200,15),0(1)
00006688 A7F9 0001               00000001   9645          LGHI  15,1
0000668C 4720 C380               0000669C   9646          BH    @@gen_label489
00006690 4780 C37C               00006698   9647          BE    @@gen_label490
00006694 A7FB FFFF               0000FFFF   9648          AGHI  15,-1
00006698                                    9649 @@gen_label490 DS 0H
00006698 A7FB FFFF               0000FFFF   9650          AGHI  15,-1
0000669C                                    9651 @@gen_label489 DS 0H
0000669C 12FF                               9652          LTR   15,15
0000669E 4780 C3B6               000066D2   9653          BZ    @L369
000066A2                                    9654 @L370    DS    0H
000066A2 41F0 6174               00000174   9655          LA    15,372(0,6)
000066A6 E3F0 2A00 0024          00000A00   9656          STG   15,2560(0,2)
000066AC 41F0 4040               00000040   9657          LA    15,64(0,4)
000066B0 E3F0 2A08 0024          00000A08   9658          STG   15,2568(0,2)
000066B6 E548 2A10 0535          00000A10   9659          MVGHI 2576(2),1333
                                                                                                                           Page  193 
  Active Usings: @REGION_851_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000066BC 41F0 47D6               000007D6   9660          LA    15,2006(0,4)
000066C0 E3F0 2A18 0024          00000A18   9661          STG   15,2584(0,2)
000066C6 4110 2A00               00000A00   9662          LA    1,2560(0,2)
000066CA E3F0 C114 0004          00006430   9663          LG    15,@lit_851_373 ; __assert
000066D0                                    9664 @@gen_label492 DS    0H
000066D0 05EF                               9665          BALR  14,15
000066D2                                    9666 @@gen_label493 DS    0H
000066D2                                    9667 @L371    DS    0H
000066D2                                    9668 @L369    DS    0H
000066D2 A7F9 0001               00000001   9669          LGHI  15,1        ; 1
000066D6 47F0 C812               00006B2E   9670          B     @ret_lab_851
000066DA                                    9671 @L368    DS    0H
                                            9672 * ***           do { if (!(!__memcmp(buf+200,twos,800))) { fprintf(__s\
                                            9673 * tderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "!memcmp\
                                            9674 * (buf+200, twos, 800)" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c"\
                                            9675 * , 1334, __FUNCTION__); fprintf(__stderrp, "verify twos"); fprintf(__\
                                            9676 * stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((!__memcm\
                                            9677 * p(buf+200,twos,800)) ? (void)0 : __assert(__func__, "C:\\asgkafka\\l\
                                            9678 * ibrdkafka\\src\\rdbuf.c", 1334, "!__memcmp(buf+200,twos,800)")); ret\
                                            9679 * urn 1; } } while (0);
000066DA                                    9680 @L372    DS    0H
000066DA B904 00FD                          9681          LGR   15,13
000066DE A7FB 1000               00001000   9682          AGHI  15,4096
000066E2 4110 D660               00000660   9683          LA    1,1632(0,13)
000066E6 41F0 F5FC               000005FC   9684          LA    15,1532(0,15)
000066EA A729 0320               00000320   9685          LGHI  2,800       ; 800
000066EE A739 0000               00000000   9686          LGHI  3,0
000066F2                                    9687 @@gen_label496 DS 0H
000066F2 D500 1000 F000 00000000 00000000   9688          CLC   0(1,1),0(15)
000066F8 4770 C3F2               0000670E   9689          BNZ   @@gen_label495
000066FC 4110 1001               00000001   9690          LA    1,1(0,1)
00006700 41F0 F001               00000001   9691          LA    15,1(0,15)
00006704 E320 C3D6 0046          000066F2   9692          BCTG  2,@@gen_label496
0000670A 47F0 C402               0000671E   9693          B     @@gen_label494
0000670E                                    9694 @@gen_label495 DS 0H
0000670E 4330 1000               00000000   9695          IC    3,0(0,1)
00006712 A719 0000               00000000   9696          LGHI  1,0
00006716 4310 F000               00000000   9697          IC    1,0(0,15)
0000671A B90B 0031                          9698          SLGR  3,1
0000671E                                    9699 @@gen_label494 DS 0H
0000671E 1233                               9700          LTR   3,3
00006720 4780 C542               0000685E   9701          BZ    @L375
00006724 E330 C10C 0016          00006428   9702          LLGF  3,@lit_851_364 ; __stderrp
0000672A E3F3 5000 0004          00000000   9703          LG    15,0(3,5)   ; __stderrp
00006730 B904 002D                          9704          LGR   2,13
00006734 A72B 1000               00001000   9705          AGHI  2,4096
00006738 E3F0 2A00 0024          00000A00   9706          STG   15,2560(0,2)
0000673E E340 C104 0004          00006420   9707          LG    4,@lit_851_365
00006744 41F0 47EE               000007EE   9708          LA    15,2030(0,4)
00006748 E3F0 2A08 0024          00000A08   9709          STG   15,2568(0,2)
0000674E 41F0 4040               00000040   9710          LA    15,64(0,4)
00006752 E3F0 2A10 0024          00000A10   9711          STG   15,2576(0,2)
                                                                                                                           Page  194 
  Active Usings: @REGION_851_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006758 E548 2A18 0536          00000A18   9712          MVGHI 2584(2),1334
0000675E E3F0 C0FC 0004          00006418   9713          LG    15,@lit_851_366
00006764 41F0 F174               00000174   9714          LA    15,372(0,15)
00006768 E3F0 2A20 0024          00000A20   9715          STG   15,2592(0,2)
0000676E 4110 2A00               00000A00   9716          LA    1,2560(0,2)
00006772 E360 C0F4 0004          00006410   9717          LG    6,@lit_851_367 ; fprintf
00006778 B904 00F6                          9718          LGR   15,6
0000677C                                    9719 @@gen_label498 DS    0H
0000677C 05EF                               9720          BALR  14,15
0000677E                                    9721 @@gen_label499 DS    0H
0000677E E3F3 5000 0004          00000000   9722          LG    15,0(3,5)   ; __stderrp
00006784 E3F0 2A00 0024          00000A00   9723          STG   15,2560(0,2)
0000678A 41F0 4838               00000838   9724          LA    15,2104(0,4)
0000678E E3F0 2A08 0024          00000A08   9725          STG   15,2568(0,2)
00006794 4110 2A00               00000A00   9726          LA    1,2560(0,2)
00006798 B904 00F6                          9727          LGR   15,6
0000679C                                    9728 @@gen_label500 DS    0H
0000679C 05EF                               9729          BALR  14,15
0000679E                                    9730 @@gen_label501 DS    0H
0000679E E3F3 5000 0004          00000000   9731          LG    15,0(3,5)   ; __stderrp
000067A4 E3F0 2A00 0024          00000A00   9732          STG   15,2560(0,2)
000067AA 41F0 45A4               000005A4   9733          LA    15,1444(0,4)
000067AE E3F0 2A08 0024          00000A08   9734          STG   15,2568(0,2)
000067B4 4110 2A00               00000A00   9735          LA    1,2560(0,2)
000067B8 B904 00F6                          9736          LGR   15,6
000067BC                                    9737 @@gen_label502 DS    0H
000067BC 05EF                               9738          BALR  14,15
000067BE                                    9739 @@gen_label503 DS    0H
000067BE E3F0 C110 0016          0000642C   9740          LLGF  15,@lit_851_372 ; rd_unittest_assert_on_failure
000067C4 41FF 5000               00000000   9741          LA    15,0(15,5)
000067C8 9500 F000      00000000 00000000   9742          CLI   0(15),0
000067CC 4780 C53A               00006856   9743          BE    @L376
000067D0 41F0 D660               00000660   9744          LA    15,1632(0,13)
000067D4 4110 25FC               000005FC   9745          LA    1,1532(0,2)
000067D8 A729 0320               00000320   9746          LGHI  2,800       ; 800
000067DC A739 0000               00000000   9747          LGHI  3,0
000067E0                                    9748 @@gen_label507 DS 0H
000067E0 D500 F000 1000 00000000 00000000   9749          CLC   0(1,15),0(1)
000067E6 4770 C4E0               000067FC   9750          BNZ   @@gen_label506
000067EA 41F0 F001               00000001   9751          LA    15,1(0,15)
000067EE 4110 1001               00000001   9752          LA    1,1(0,1)
000067F2 E320 C4C4 0046          000067E0   9753          BCTG  2,@@gen_label507
000067F8 47F0 C4F0               0000680C   9754          B     @@gen_label505
000067FC                                    9755 @@gen_label506 DS 0H
000067FC 4330 F000               00000000   9756          IC    3,0(0,15)
00006800 A7F9 0000               00000000   9757          LGHI  15,0
00006804 43F0 1000               00000000   9758          IC    15,0(0,1)
00006808 B90B 003F                          9759          SLGR  3,15
0000680C                                    9760 @@gen_label505 DS 0H
0000680C 1233                               9761          LTR   3,3
0000680E 4780 C53A               00006856   9762          BZ    @L376
00006812                                    9763 @L377    DS    0H
                                                                                                                           Page  195 
  Active Usings: @REGION_851_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006812 E3F0 C0FC 0004          00006418   9764          LG    15,@lit_851_366
00006818 41F0 F174               00000174   9765          LA    15,372(0,15)
0000681C B904 001D                          9766          LGR   1,13
00006820 A71B 1000               00001000   9767          AGHI  1,4096
00006824 E3F0 1A00 0024          00000A00   9768          STG   15,2560(0,1)
0000682A E3F0 C104 0004          00006420   9769          LG    15,@lit_851_365
00006830 4120 F040               00000040   9770          LA    2,64(0,15)
00006834 E320 1A08 0024          00000A08   9771          STG   2,2568(0,1)
0000683A E548 1A10 0536          00000A10   9772          MVGHI 2576(1),1334
00006840 41F0 F844               00000844   9773          LA    15,2116(0,15)
00006844 E3F0 1A18 0024          00000A18   9774          STG   15,2584(0,1)
0000684A 4110 1A00               00000A00   9775          LA    1,2560(0,1)
0000684E E3F0 C114 0004          00006430   9776          LG    15,@lit_851_373 ; __assert
00006854                                    9777 @@gen_label509 DS    0H
00006854 05EF                               9778          BALR  14,15
00006856                                    9779 @@gen_label510 DS    0H
00006856                                    9780 @L378    DS    0H
00006856                                    9781 @L376    DS    0H
00006856 A7F9 0001               00000001   9782          LGHI  15,1        ; 1
0000685A 47F0 C812               00006B2E   9783          B     @ret_lab_851
0000685E                                    9784 @L375    DS    0H
                                            9785 * ***           do { if (!(!__memcmp(buf+200+800,threes,1))) { fprintf\
                                            9786 * (__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "!me\
                                            9787 * mcmp(buf+200+800, threes, 1)" ": ", "C:\\asgkafka\\librdkafka\\src\\\
                                            9788 * rdbuf.c", 1335, __FUNCTION__); fprintf(__stderrp, "verify threes"); \
                                            9789 * fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) \
                                            9790 * ((!__memcmp(buf+200+800,threes,1)) ? (void)0 : __assert(__func__, "C\
                                            9791 * :\\asgkafka\\librdkafka\\src\\rdbuf.c", 1335, "!__memcmp(buf+200+800\
                                            9792 * ,threes,1)")); return 1; } } while (0);
0000685E                                    9793 @L379    DS    0H
0000685E B904 002D                          9794          LGR   2,13
00006862 A72B 1000               00001000   9795          AGHI  2,4096
00006866 41F0 D980               00000980   9796          LA    15,2432(0,13)
0000686A 4110 21FC               000001FC   9797          LA    1,508(0,2)
0000686E D500 F000 1000 00000000 00000000   9798          CLC   0(1,15),0(1)
00006874 A7F9 0001               00000001   9799          LGHI  15,1
00006878 4720 C56C               00006888   9800          BH    @@gen_label511
0000687C 4780 C568               00006884   9801          BE    @@gen_label512
00006880 A7FB FFFF               0000FFFF   9802          AGHI  15,-1
00006884                                    9803 @@gen_label512 DS 0H
00006884 A7FB FFFF               0000FFFF   9804          AGHI  15,-1
00006888                                    9805 @@gen_label511 DS 0H
00006888 12FF                               9806          LTR   15,15
0000688A 4780 C676               00006992   9807          BZ    @L382
0000688E E330 C10C 0016          00006428   9808          LLGF  3,@lit_851_364 ; __stderrp
00006894 E3F3 5000 0004          00000000   9809          LG    15,0(3,5)   ; __stderrp
0000689A E3F0 2A00 0024          00000A00   9810          STG   15,2560(0,2)
000068A0 E340 C104 0004          00006420   9811          LG    4,@lit_851_365
000068A6 41F0 4860               00000860   9812          LA    15,2144(0,4)
000068AA E3F0 2A08 0024          00000A08   9813          STG   15,2568(0,2)
000068B0 41F0 4040               00000040   9814          LA    15,64(0,4)
000068B4 E3F0 2A10 0024          00000A10   9815          STG   15,2576(0,2)
                                                                                                                           Page  196 
  Active Usings: @REGION_851_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000068BA E548 2A18 0537          00000A18   9816          MVGHI 2584(2),1335
000068C0 E360 C0FC 0004          00006418   9817          LG    6,@lit_851_366
000068C6 41F0 6174               00000174   9818          LA    15,372(0,6)
000068CA E3F0 2A20 0024          00000A20   9819          STG   15,2592(0,2)
000068D0 4110 2A00               00000A00   9820          LA    1,2560(0,2)
000068D4 E370 C0F4 0004          00006410   9821          LG    7,@lit_851_367 ; fprintf
000068DA B904 00F7                          9822          LGR   15,7
000068DE                                    9823 @@gen_label514 DS    0H
000068DE 05EF                               9824          BALR  14,15
000068E0                                    9825 @@gen_label515 DS    0H
000068E0 E3F3 5000 0004          00000000   9826          LG    15,0(3,5)   ; __stderrp
000068E6 E3F0 2A00 0024          00000A00   9827          STG   15,2560(0,2)
000068EC 41F0 48AE               000008AE   9828          LA    15,2222(0,4)
000068F0 E3F0 2A08 0024          00000A08   9829          STG   15,2568(0,2)
000068F6 4110 2A00               00000A00   9830          LA    1,2560(0,2)
000068FA B904 00F7                          9831          LGR   15,7
000068FE                                    9832 @@gen_label516 DS    0H
000068FE 05EF                               9833          BALR  14,15
00006900                                    9834 @@gen_label517 DS    0H
00006900 E3F3 5000 0004          00000000   9835          LG    15,0(3,5)   ; __stderrp
00006906 E3F0 2A00 0024          00000A00   9836          STG   15,2560(0,2)
0000690C 41F0 45A4               000005A4   9837          LA    15,1444(0,4)
00006910 E3F0 2A08 0024          00000A08   9838          STG   15,2568(0,2)
00006916 4110 2A00               00000A00   9839          LA    1,2560(0,2)
0000691A B904 00F7                          9840          LGR   15,7
0000691E                                    9841 @@gen_label518 DS    0H
0000691E 05EF                               9842          BALR  14,15
00006920                                    9843 @@gen_label519 DS    0H
00006920 E3F0 C110 0016          0000642C   9844          LLGF  15,@lit_851_372 ; rd_unittest_assert_on_failure
00006926 41FF 5000               00000000   9845          LA    15,0(15,5)
0000692A 9500 F000      00000000 00000000   9846          CLI   0(15),0
0000692E 4780 C66E               0000698A   9847          BE    @L383
00006932 41F0 D980               00000980   9848          LA    15,2432(0,13)
00006936 4110 21FC               000001FC   9849          LA    1,508(0,2)
0000693A D500 F000 1000 00000000 00000000   9850          CLC   0(1,15),0(1)
00006940 A7F9 0001               00000001   9851          LGHI  15,1
00006944 4720 C638               00006954   9852          BH    @@gen_label521
00006948 4780 C634               00006950   9853          BE    @@gen_label522
0000694C A7FB FFFF               0000FFFF   9854          AGHI  15,-1
00006950                                    9855 @@gen_label522 DS 0H
00006950 A7FB FFFF               0000FFFF   9856          AGHI  15,-1
00006954                                    9857 @@gen_label521 DS 0H
00006954 12FF                               9858          LTR   15,15
00006956 4780 C66E               0000698A   9859          BZ    @L383
0000695A                                    9860 @L384    DS    0H
0000695A 41F0 6174               00000174   9861          LA    15,372(0,6)
0000695E E3F0 2A00 0024          00000A00   9862          STG   15,2560(0,2)
00006964 41F0 4040               00000040   9863          LA    15,64(0,4)
00006968 E3F0 2A08 0024          00000A08   9864          STG   15,2568(0,2)
0000696E E548 2A10 0537          00000A10   9865          MVGHI 2576(2),1335
00006974 41F0 48BC               000008BC   9866          LA    15,2236(0,4)
00006978 E3F0 2A18 0024          00000A18   9867          STG   15,2584(0,2)
                                                                                                                           Page  197 
  Active Usings: @REGION_851_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000697E 4110 2A00               00000A00   9868          LA    1,2560(0,2)
00006982 E3F0 C114 0004          00006430   9869          LG    15,@lit_851_373 ; __assert
00006988                                    9870 @@gen_label524 DS    0H
00006988 05EF                               9871          BALR  14,15
0000698A                                    9872 @@gen_label525 DS    0H
0000698A                                    9873 @L385    DS    0H
0000698A                                    9874 @L383    DS    0H
0000698A A7F9 0001               00000001   9875          LGHI  15,1        ; 1
0000698E 47F0 C812               00006B2E   9876          B     @ret_lab_851
00006992                                    9877 @L382    DS    0H
                                            9878 * ***           do { if (!(!__memcmp(buf+200+800+1,fiftyfives,100))) {\
                                            9879 *  fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed\
                                            9880 * : " "!memcmp(buf+200+800+1, fiftyfives, 100)" ": ", "C:\\asgkafka\\l\
                                            9881 * ibrdkafka\\src\\rdbuf.c", 1336, __FUNCTION__); fprintf(__stderrp, "v\
                                            9882 * erify 55s"); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert\
                                            9883 * _on_failure) ((!__memcmp(buf+200+800+1,fiftyfives,100)) ? (void)0 : \
                                            9884 * __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1336, "\
                                            9885 * !__memcmp(buf+200+800+1,fiftyfives,100)")); return 1; } } while (0);
00006992                                    9886 @L386    DS    0H
00006992 B904 002D                          9887          LGR   2,13
00006996 A72B 1000               00001000   9888          AGHI  2,4096
0000699A 41F0 D981               00000981   9889          LA    15,2433(0,13)
0000699E 4110 2198               00000198   9890          LA    1,408(0,2)
000069A2 D563 F000 1000 00000000 00000000   9891          CLC   0(100,15),0(1)
000069A8 A7F9 0001               00000001   9892          LGHI  15,1
000069AC 4720 C6A0               000069BC   9893          BH    @@gen_label526
000069B0 4780 C69C               000069B8   9894          BE    @@gen_label527
000069B4 A7FB FFFF               0000FFFF   9895          AGHI  15,-1
000069B8                                    9896 @@gen_label527 DS 0H
000069B8 A7FB FFFF               0000FFFF   9897          AGHI  15,-1
000069BC                                    9898 @@gen_label526 DS 0H
000069BC 12FF                               9899          LTR   15,15
000069BE 4780 C7AA               00006AC6   9900          BZ    @L389
000069C2 E330 C10C 0016          00006428   9901          LLGF  3,@lit_851_364 ; __stderrp
000069C8 E3F3 5000 0004          00000000   9902          LG    15,0(3,5)   ; __stderrp
000069CE E3F0 2A00 0024          00000A00   9903          STG   15,2560(0,2)
000069D4 E340 C104 0004          00006420   9904          LG    4,@lit_851_365
000069DA 41F0 48DC               000008DC   9905          LA    15,2268(0,4)
000069DE E3F0 2A08 0024          00000A08   9906          STG   15,2568(0,2)
000069E4 41F0 4040               00000040   9907          LA    15,64(0,4)
000069E8 E3F0 2A10 0024          00000A10   9908          STG   15,2576(0,2)
000069EE E548 2A18 0538          00000A18   9909          MVGHI 2584(2),1336
000069F4 E360 C0FC 0004          00006418   9910          LG    6,@lit_851_366
000069FA 41F0 6174               00000174   9911          LA    15,372(0,6)
000069FE E3F0 2A20 0024          00000A20   9912          STG   15,2592(0,2)
00006A04 4110 2A00               00000A00   9913          LA    1,2560(0,2)
00006A08 E370 C0F4 0004          00006410   9914          LG    7,@lit_851_367 ; fprintf
00006A0E B904 00F7                          9915          LGR   15,7
00006A12                                    9916 @@gen_label529 DS    0H
00006A12 05EF                               9917          BALR  14,15
00006A14                                    9918 @@gen_label530 DS    0H
00006A14 E3F3 5000 0004          00000000   9919          LG    15,0(3,5)   ; __stderrp
                                                                                                                           Page  198 
  Active Usings: @REGION_851_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006A1A E3F0 2A00 0024          00000A00   9920          STG   15,2560(0,2)
00006A20 41F0 4932               00000932   9921          LA    15,2354(0,4)
00006A24 E3F0 2A08 0024          00000A08   9922          STG   15,2568(0,2)
00006A2A 4110 2A00               00000A00   9923          LA    1,2560(0,2)
00006A2E B904 00F7                          9924          LGR   15,7
00006A32                                    9925 @@gen_label531 DS    0H
00006A32 05EF                               9926          BALR  14,15
00006A34                                    9927 @@gen_label532 DS    0H
00006A34 E3F3 5000 0004          00000000   9928          LG    15,0(3,5)   ; __stderrp
00006A3A E3F0 2A00 0024          00000A00   9929          STG   15,2560(0,2)
00006A40 41F0 45A4               000005A4   9930          LA    15,1444(0,4)
00006A44 E3F0 2A08 0024          00000A08   9931          STG   15,2568(0,2)
00006A4A 4110 2A00               00000A00   9932          LA    1,2560(0,2)
00006A4E B904 00F7                          9933          LGR   15,7
00006A52                                    9934 @@gen_label533 DS    0H
00006A52 05EF                               9935          BALR  14,15
00006A54                                    9936 @@gen_label534 DS    0H
00006A54 E3F0 C110 0016          0000642C   9937          LLGF  15,@lit_851_372 ; rd_unittest_assert_on_failure
00006A5A 41FF 5000               00000000   9938          LA    15,0(15,5)
00006A5E 9500 F000      00000000 00000000   9939          CLI   0(15),0
00006A62 4780 C7A2               00006ABE   9940          BE    @L390
00006A66 41F0 D981               00000981   9941          LA    15,2433(0,13)
00006A6A 4110 2198               00000198   9942          LA    1,408(0,2)
00006A6E D563 F000 1000 00000000 00000000   9943          CLC   0(100,15),0(1)
00006A74 A7F9 0001               00000001   9944          LGHI  15,1
00006A78 4720 C76C               00006A88   9945          BH    @@gen_label536
00006A7C 4780 C768               00006A84   9946          BE    @@gen_label537
00006A80 A7FB FFFF               0000FFFF   9947          AGHI  15,-1
00006A84                                    9948 @@gen_label537 DS 0H
00006A84 A7FB FFFF               0000FFFF   9949          AGHI  15,-1
00006A88                                    9950 @@gen_label536 DS 0H
00006A88 12FF                               9951          LTR   15,15
00006A8A 4780 C7A2               00006ABE   9952          BZ    @L390
00006A8E                                    9953 @L391    DS    0H
00006A8E 41F0 6174               00000174   9954          LA    15,372(0,6)
00006A92 E3F0 2A00 0024          00000A00   9955          STG   15,2560(0,2)
00006A98 41F0 4040               00000040   9956          LA    15,64(0,4)
00006A9C E3F0 2A08 0024          00000A08   9957          STG   15,2568(0,2)
00006AA2 E548 2A10 0538          00000A10   9958          MVGHI 2576(2),1336
00006AA8 41F0 493E               0000093E   9959          LA    15,2366(0,4)
00006AAC E3F0 2A18 0024          00000A18   9960          STG   15,2584(0,2)
00006AB2 4110 2A00               00000A00   9961          LA    1,2560(0,2)
00006AB6 E3F0 C114 0004          00006430   9962          LG    15,@lit_851_373 ; __assert
00006ABC                                    9963 @@gen_label539 DS    0H
00006ABC 05EF                               9964          BALR  14,15
00006ABE                                    9965 @@gen_label540 DS    0H
00006ABE                                    9966 @L392    DS    0H
00006ABE                                    9967 @L390    DS    0H
00006ABE A7F9 0001               00000001   9968          LGHI  15,1        ; 1
00006AC2 47F0 C812               00006B2E   9969          B     @ret_lab_851
00006AC6                                    9970 @L389    DS    0H
                                            9971 * ***
                                                                                                                           Page  199 
  Active Usings: @REGION_851_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9972 * ***           rd_buf_destroy(&b);
00006AC6 41F0 D120               00000120   9973          LA    15,288(0,13)
00006ACA E3F0 2A00 0024          00000A00   9974          STG   15,2560(0,2)
00006AD0 4110 2A00               00000A00   9975          LA    1,2560(0,2)
00006AD4 E3F0 C12C 0004          00006448   9976          LG    15,@lit_851_436 ; rd_buf_destroy
00006ADA                                    9977 @@gen_label541 DS    0H
00006ADA 05EF                               9978          BALR  14,15
00006ADC                                    9979 @@gen_label542 DS    0H
                                            9980 * ***
                                            9981 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                            9982 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1340, __FUNCTI\
                                            9983 * ON__); return 0; } while (0);
00006ADC                                    9984 @L393    DS    0H
00006ADC E3F0 C10C 0016          00006428   9985          LLGF  15,@lit_851_364 ; __stderrp
00006AE2 E3FF 5000 0004          00000000   9986          LG    15,0(15,5)  ; __stderrp
00006AE8 E3F0 2A00 0024          00000A00   9987          STG   15,2560(0,2)
00006AEE E3F0 C104 0004          00006420   9988          LG    15,@lit_851_365
00006AF4 4110 F966               00000966   9989          LA    1,2406(0,15)
00006AF8 E310 2A08 0024          00000A08   9990          STG   1,2568(0,2)
00006AFE 41F0 F040               00000040   9991          LA    15,64(0,15)
00006B02 E3F0 2A10 0024          00000A10   9992          STG   15,2576(0,2)
00006B08 E548 2A18 053C          00000A18   9993          MVGHI 2584(2),1340
00006B0E E3F0 C0FC 0004          00006418   9994          LG    15,@lit_851_366
00006B14 41F0 F174               00000174   9995          LA    15,372(0,15)
00006B18 E3F0 2A20 0024          00000A20   9996          STG   15,2592(0,2)
00006B1E 4110 2A00               00000A00   9997          LA    1,2560(0,2)
00006B22 E3F0 C0F4 0004          00006410   9998          LG    15,@lit_851_367 ; fprintf
00006B28                                    9999 @@gen_label543 DS    0H
00006B28 05EF                              10000          BALR  14,15
00006B2A                                   10001 @@gen_label544 DS    0H
00006B2A A7F9 0000               00000000  10002          LGHI  15,0        ; 0
                                           10003 * ***   }
00006B2E                                   10004 @ret_lab_851 DS 0H
00006B2E E3C0 C134 001A          00006450  10005          ALGF  12,@lit_region_diff_851_2_3
00006B34                                   10006 @REGION_851_3 DS 0H
                                           10007          DROP  12
                        00006B34           10008          USING @REGION_851_3,12
                                           10009 * * **** Start of Epilogue
                                           10010          DCCEPIL
00006B34                                   10011+         ds 0h                                                          01-DCCEP
                                           10012+* Epilog
00006B34 D707 D088 D088 00000088 00000088  10013+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006B3A E3D0 D080 0004          00000080  10014+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006B40 E3C0 D090 0004          00000090  10015+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006B46 E3B0 C018 0004          00000018  10016+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006B4C E3C0 B010 0021          00000010  10017+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006B52 E3E0 D008 0004          00000008  10018+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006B58 EB1C D020 0004          00000020  10019+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006B5E 078E                              10020+         bcr 8,14                if same dsab, just return              01-DCCEP
00006B60 E3F0 D010 0024          00000010  10021+         stg 15,16(0,13)         save return code                       01-DCCEP
00006B66 E300 D018 0024          00000018  10022+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006B6C E3F0 D090 0004          00000090  10023+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
                                                                                                                           Page  200 
  Active Usings: @REGION_851_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006B72 E3F0 F018 0004          00000018  10024+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006B78 47F0 F040               00000040  10025+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           10026+* End of Epilog
                                           10027 * * **** End of Epilogue
                                           10028          DROP  12
                                           10029 *
                                           10030 *   DSECT for automatic variables in "do_unittest_write_read"
                                           10031 *      (FUNCTION #851)
                                           10032 *
00000000                00000000 000019FC  10033 @AUTO#do_unittest_write_read DSECT
00000000                                   10034          DS    XL288
00000120                                   10035 do_unittest_write_read#pos#0 DS 8XL1 ; pos
00000128                00000128 00000120  10036          ORG   @AUTO#do_unittest_write_read+288
00000120                                   10037 do_unittest_write_read#r#0 DS 8XL1 ; r
00000128                00000128 00000120  10038          ORG   @AUTO#do_unittest_write_read+288
00000120                                   10039 do_unittest_write_read#b#0 DS 80XL1 ; b
00000170                00000170 00000170  10040          ORG   @AUTO#do_unittest_write_read+368
00000170                                   10041 do_unittest_write_read#ones#0 DS 1024XL1 ; ones
00000570                00000570 00000570  10042          ORG   @AUTO#do_unittest_write_read+1392
00000570                                   10043 do_unittest_write_read#slice#0 DS 40XL1 ; slice
00000598                00000598 00000598  10044          ORG   @AUTO#do_unittest_write_read+1432
00000598                                   10045 do_unittest_write_read#buf#0 DS 3072XL1 ; buf
00001198                00001198 00001198  10046          ORG   @AUTO#do_unittest_write_read+4504
00001198                                   10047 do_unittest_write_read#fiftyfives#0 DS 100XL1 ; fiftyfives
000011FC                000011FC 000011FC  10048          ORG   @AUTO#do_unittest_write_read+4604
000011FC                                   10049 do_unittest_write_read#threes#0 DS 1024XL1 ; threes
000015FC                000015FC 000015FC  10050          ORG   @AUTO#do_unittest_write_read+5628
000015FC                                   10051 do_unittest_write_read#twos#0 DS 1024XL1 ; twos
                                           10052 *
00006B7C                00000000 0000BFA0  10053 @CODE    CSECT
                                           10054 *
                                           10055 *
                                           10056 *
                                           10057 * ....... start of do_unittest_read_verify0
00006B7C                                   10058 @LNAME852 DS   0H
00006B7C 00000018                          10059          DC    X'00000018'
00006B80 84966DA49589A3A3                  10060          DC    C'do_unittest_read_verify0'
00006B98 00                                10061          DC    X'00'
                                           10062 do_unittest_read_verify0 DCCPRLG CINDEX=852,BASER=12,FRAME=1352,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME852
                                           10063          macro
                                           10064          dccextrn &m
                                           10065          gblc    &$dccext(1000)
                                           10066          gbla    &$dccexti
                                           10067          lcla    &i
                                           10068 &$dccext(&$dccexti+1) setc    '&m'
                                           10069 &i       seta    1
                                           10070 .loop    aif    (&i gt &$dccexti).around
                                           10071          aif    ('&$dccext(&i)' eq '&m').getout
                                           10072 &i       seta    &i+1
                                           10073          ago     .loop
                                           10074 .around  anop
                                                                                                                           Page  201 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10075 &$dccexti seta &$dccexti+1
                                           10076          extrn  &m
                                           10077 .getout  anop
                                           10078          mend
00006BA0                                   10079+$eye0185    ds    0d                                                    02-DCCCA
00006BA0 C4C3C3                            10080+         dc cl3'DCC'                                                    02-DCCCA
00006BA3 01                                10081+         dc xl1'01' format one                                          02-DCCCA
00006BA4 00000000                          10082+         dc a(0)                                                        02-DCCCA
00006BA8 0000000000006C12                  10083+         dc ad(@PER_852)                                                02-DCCCA
00006BB0 0000000000000548                  10084+         dc ad(1352)                                                    02-DCCCA
00006BB8 0000000000000000                  10085+         dc ad(0)                                                       02-DCCCA
00006BC0 0000000000001000                  10086+         dc ad(4096)                                                    02-DCCCA
00006BC8 20                                10087+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006BC9 03                                10088+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00006BCA 03                                10089+         dc al1(3)                                                      02-DCCCA
00006BCB 08                                10090+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00006BCC 00                                10091+         dc bl.8'00000000'                                              02-DCCCA
00006BCD 000000                            10092+         dc al3(0)                                                      02-DCCCA
00006BD0 0000000000006B7C                  10093+         dc ad(@LNAME852)                                               02-DCCCA
00006BD8                                   10094+         ds 0d                                                          02-DCCCA
00006BD8 0000000000006BA0                  10095+         dc ad($eye0185)                                                02-DCCCA
00006BE0 0000000000000000                  10096+         dc ad(0)                                                       02-DCCCA
00006BE8                                   10097+         ds    0d                                                       01-DCCPR
00006BE8                                   10098+do_unittest_read_verify0 ds 0d                                          01-DCCPR
00006BE8                                   10099+@REGION_852_1 ds 0h                                                     01-DCCPR
00006BE8 EBEC D008 0024          00000008  10100+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006BEE E3E0 D088 0004          00000088  10101+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006BF4 E3C0 D090 0004          00000090  10102+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006BFA B904 002E                         10103+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006BFE E3B0 C018 0004          00000018  10104+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006C04 A7EB 0548               00000548  10105+         aghi  14,1352             increase by frame size               01-DCCPR
00006C08 E3E0 C020 0021          00000020  10106+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006C0E 4720 B020               00000020  10107+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006C12                                   10108+@PER_852 ds    0h                                                       01-DCCPR
00006C12 EBDE 2080 0024          00000080  10109+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006C18 E3C0 2090 0024          00000090  10110+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006C1E B904 00D2                         10111+         lgr   13,2                set real frame pointer               01-DCCPR
00006C22 B904 00CF                         10112+         lgr   12,15               set base reg                         01-DCCPR
                        00006BE8           10113+         using @REGION_852_1,12                                         01-DCCPR
                                           10114          DCCPRV REG=6      ; Get PRV from DVT
00006C26 E360 B008 0004          00000008  10115+         LG 6,8(0,11)                                                   01-DCCPR
00006C2C B904 0021                         10116          LGR   2,1         ; ptr to parm area
                                           10117 * ******* End of Prologue
                                           10118 * *
00006C30 EB34 2010 0004          00000010  10119          LMG   3,4,16(2)   ; len
                                           10120 * ***           rd_slice_t slice, sub;
                                           10121 * ***           char buf[1024];
                                           10122 * ***           size_t half;
                                           10123 * ***           size_t r;
                                           10124 * ***           int i;
                                           10125 * ***
                                           10126 * ***           ((sizeof(buf) >= len) ? (void)0 : __assert(__func__, "\
                                                                                                                           Page  202 
  Active Usings: @REGION_852_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10127 * C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1363, "sizeof(buf) >= len")\
                                           10128 * );
00006C36 C23E 0000 0400                    10129          CLGFI 3,X'00000400'
00006C3C 47D0 C094               00006C7C  10130          BNH   @L397
00006C40                                   10131 @L396    DS    0H
00006C40 E3F0 C1E0 0004          00006DC8  10132          LG    15,@lit_852_452
00006C46 41F0 F18C               0000018C  10133          LA    15,396(0,15)
00006C4A E3F0 D520 0024          00000520  10134          STG   15,1312(0,13)
00006C50 E3F0 C1D8 0004          00006DC0  10135          LG    15,@lit_852_453
00006C56 4110 F040               00000040  10136          LA    1,64(0,15)
00006C5A E310 D528 0024          00000528  10137          STG   1,1320(0,13)
00006C60 E548 D530 0553          00000530  10138          MVGHI 1328(13),1363
00006C66 41F0 F986               00000986  10139          LA    15,2438(0,15)
00006C6A E3F0 D538 0024          00000538  10140          STG   15,1336(0,13)
00006C70 4110 D520               00000520  10141          LA    1,1312(0,13)
00006C74 E3F0 C1D0 0004          00006DB8  10142          LG    15,@lit_852_454 ; __assert
00006C7A                                   10143 @@gen_label546 DS    0H
00006C7A 05EF                              10144          BALR  14,15
00006C7C                                   10145 @@gen_label547 DS    0H
00006C7C                                   10146 @L397    DS    0H
                                           10147 * ***
                                           10148 * ***
                                           10149 * ***           i = rd_slice_init(&slice, b, absof, len);
00006C7C 41F0 D0A8               000000A8  10150          LA    15,168(0,13)
00006C80 E3F0 D520 0024          00000520  10151          STG   15,1312(0,13)
00006C86 E3F0 2000 0004          00000000  10152          LG    15,0(0,2)   ; b
00006C8C E3F0 D528 0024          00000528  10153          STG   15,1320(0,13)
00006C92 E3F0 2008 0004          00000008  10154          LG    15,8(0,2)   ; absof
00006C98 E3F0 D530 0024          00000530  10155          STG   15,1328(0,13)
00006C9E E330 D538 0024          00000538  10156          STG   3,1336(0,13)
00006CA4 4110 D520               00000520  10157          LA    1,1312(0,13)
00006CA8 E3F0 C1E8 0004          00006DD0  10158          LG    15,@lit_852_455 ; rd_slice_init
00006CAE                                   10159 @@gen_label548 DS    0H
00006CAE 05EF                              10160          BALR  14,15
00006CB0                                   10161 @@gen_label549 DS    0H
00006CB0 182F                              10162          LR    2,15        ; i
                                           10163 * ***           do { if (!(i == 0)) { fprintf(__stderrp, "\033[31mRDUT\
                                           10164 * : FAIL: %s:%d: %s: " "assert failed: " "i == 0" ": ", "C:\\asgkafka\\
                                           10165 * \librdkafka\\src\\rdbuf.c", 1367, __FUNCTION__); fprintf(__stderrp, \
                                           10166 * "slice_init() failed: %d", i); fprintf(__stderrp, "\033[0m\n"); if (\
                                           10167 * rd_unittest_assert_on_failure) ((i == 0) ? (void)0 : __assert(__func\
                                           10168 * __, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1367, "i == 0")); retu\
                                           10169 * rn 1; } } while (0);
00006CB2                                   10170 @L398    DS    0H
00006CB2 1222                              10171          LTR   2,2
00006CB4 4780 C230               00006E18  10172          BE    @L401
00006CB8 E330 C1F8 0016          00006DE0  10173          LLGF  3,@lit_852_456 ; __stderrp
00006CBE E3F3 6000 0004          00000000  10174          LG    15,0(3,6)   ; __stderrp
00006CC4 E3F0 D520 0024          00000520  10175          STG   15,1312(0,13)
00006CCA E340 C1D8 0004          00006DC0  10176          LG    4,@lit_852_453
00006CD0 41F0 499A               0000099A  10177          LA    15,2458(0,4)
00006CD4 E3F0 D528 0024          00000528  10178          STG   15,1320(0,13)
                                                                                                                           Page  203 
  Active Usings: @REGION_852_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006CDA 41F0 4040               00000040  10179          LA    15,64(0,4)
00006CDE E3F0 D530 0024          00000530  10180          STG   15,1328(0,13)
00006CE4 E548 D538 0557          00000538  10181          MVGHI 1336(13),1367
00006CEA E350 C1E0 0004          00006DC8  10182          LG    5,@lit_852_452
00006CF0 41F0 518C               0000018C  10183          LA    15,396(0,5)
00006CF4 E3F0 D540 0024          00000540  10184          STG   15,1344(0,13)
00006CFA 4110 D520               00000520  10185          LA    1,1312(0,13)
00006CFE E370 C1F0 0004          00006DD8  10186          LG    7,@lit_852_459 ; fprintf
00006D04 B904 00F7                         10187          LGR   15,7
00006D08                                   10188 @@gen_label551 DS    0H
00006D08 05EF                              10189          BALR  14,15
00006D0A                                   10190 @@gen_label552 DS    0H
00006D0A E3F3 6000 0004          00000000  10191          LG    15,0(3,6)   ; __stderrp
00006D10 E3F0 D520 0024          00000520  10192          STG   15,1312(0,13)
00006D16 41F0 49CE               000009CE  10193          LA    15,2510(0,4)
00006D1A E3F0 D528 0024          00000528  10194          STG   15,1320(0,13)
00006D20 B914 00F2                         10195          LGFR  15,2
00006D24 E3F0 D530 0024          00000530  10196          STG   15,1328(0,13)
00006D2A 4110 D520               00000520  10197          LA    1,1312(0,13)
00006D2E B904 00F7                         10198          LGR   15,7
00006D32                                   10199 @@gen_label553 DS    0H
00006D32 05EF                              10200          BALR  14,15
00006D34                                   10201 @@gen_label554 DS    0H
00006D34 E3F3 6000 0004          00000000  10202          LG    15,0(3,6)   ; __stderrp
00006D3A E3F0 D520 0024          00000520  10203          STG   15,1312(0,13)
00006D40 41F0 45A4               000005A4  10204          LA    15,1444(0,4)
00006D44 E3F0 D528 0024          00000528  10205          STG   15,1320(0,13)
00006D4A 4110 D520               00000520  10206          LA    1,1312(0,13)
00006D4E B904 00F7                         10207          LGR   15,7
00006D52                                   10208 @@gen_label555 DS    0H
00006D52 05EF                              10209          BALR  14,15
00006D54                                   10210 @@gen_label556 DS    0H
00006D54 E3F0 C1FC 0016          00006DE4  10211          LLGF  15,@lit_852_464 ; rd_unittest_assert_on_failure
00006D5A 41FF 6000               00000000  10212          LA    15,0(15,6)
00006D5E 9500 F000      00000000 00000000  10213          CLI   0(15),0
00006D62 4780 C1B4               00006D9C  10214          BE    @L402
00006D66 1222                              10215          LTR   2,2
00006D68 4780 C1B4               00006D9C  10216          BE    @L402
00006D6C                                   10217 @L403    DS    0H
00006D6C 41F0 518C               0000018C  10218          LA    15,396(0,5)
00006D70 E3F0 D520 0024          00000520  10219          STG   15,1312(0,13)
00006D76 41F0 4040               00000040  10220          LA    15,64(0,4)
00006D7A E3F0 D528 0024          00000528  10221          STG   15,1320(0,13)
00006D80 E548 D530 0557          00000530  10222          MVGHI 1328(13),1367
00006D86 41F0 49E6               000009E6  10223          LA    15,2534(0,4)
00006D8A E3F0 D538 0024          00000538  10224          STG   15,1336(0,13)
00006D90 4110 D520               00000520  10225          LA    1,1312(0,13)
00006D94 E3F0 C1D0 0004          00006DB8  10226          LG    15,@lit_852_454 ; __assert
00006D9A                                   10227 @@gen_label559 DS    0H
00006D9A 05EF                              10228          BALR  14,15
00006D9C                                   10229 @@gen_label560 DS    0H
00006D9C                                   10230 @L404    DS    0H
                                                                                                                           Page  204 
  Active Usings: @REGION_852_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006D9C                                   10231 @L402    DS    0H
00006D9C A7F9 0001               00000001  10232          LGHI  15,1        ; 1
00006DA0 E3C0 C200 001A          00006DE8  10233          ALGF  12,@lit_region_diff_852_1_2
                                           10234          DROP  12
                        00007468           10235          USING @REGION_852_2,12
00006DA6 47F0 C85C               00007CC4  10236          B     @ret_lab_852
                                           10237          DROP  12
                        00006BE8           10238          USING @REGION_852_1,12
00006DB0                                   10239          DS    0D
00006DB0 00000548                          10240 @FRAMESIZE_852 DC F'1352'
00006DB4 00000000
00006DB8 0000000000000000                  10241 @lit_852_454 DC AD(__assert)
00006DC0 000000000000CB02                  10242 @lit_852_453 DC AD(@strings@)
00006DC8 000000000000BFA0                  10243 @lit_852_452 DC AD(@DATA)
00006DD0 00000000000036D0                  10244 @lit_852_455 DC AD(rd_slice_init)
00006DD8 0000000000000000                  10245 @lit_852_459 DC AD(fprintf)
00006DE0 00000000                          10246 @lit_852_456 DC Q(__stderrp)
00006DE4 00000000                          10247 @lit_852_464 DC Q(rd_unittest_assert_on_failure)
00006DE8 00000880                          10248 @lit_region_diff_852_1_2  DC A(@REGION_852_2-@REGION_852_1)
00006DEC 00000000
00006DF0 0000000000003ED0                  10249 @lit_852_467 DC AD(rd_slice_read)
00006DF8 00000000000007F0                  10250 @lit_852_472 DC AD(rd_slice_abs_offset)
00006E00 0000000000000898                  10251 @lit_852_493 DC AD(rd_slice_offset)
00006E08 0000000000004588                  10252 @lit_852_505 DC AD(rd_slice_seek)
00006E10 00000000000006B8                  10253 @lit_852_529 DC AD(rd_slice_pos)
00006E18                                   10254 @L401    DS    0H
                                           10255 * ***
                                           10256 * ***           r = rd_slice_read(&slice, buf, len);
00006E18 41F0 D0A8               000000A8  10257          LA    15,168(0,13)
00006E1C E3F0 D520 0024          00000520  10258          STG   15,1312(0,13)
00006E22 41F0 D0F8               000000F8  10259          LA    15,248(0,13)
00006E26 E3F0 D528 0024          00000528  10260          STG   15,1320(0,13)
00006E2C E330 D530 0024          00000530  10261          STG   3,1328(0,13)
00006E32 4110 D520               00000520  10262          LA    1,1312(0,13)
00006E36 E3F0 C208 0004          00006DF0  10263          LG    15,@lit_852_467 ; rd_slice_read
00006E3C                                   10264 @@gen_label561 DS    0H
00006E3C 05EF                              10265          BALR  14,15
00006E3E                                   10266 @@gen_label562 DS    0H
00006E3E B904 002F                         10267          LGR   2,15        ; r
                                           10268 * ***           do { if (!(r == len)) { fprintf(__stderrp, "\033[31mRD\
                                           10269 * UT: FAIL: %s:%d: %s: " "assert failed: " "r == len" ": ", "C:\\asgka\
                                           10270 * fka\\librdkafka\\src\\rdbuf.c", 1370, __FUNCTION__); fprintf(__stder\
                                           10271 * rp, "read() returned %" "zu" " expected %" "zu" " (%" "zu" " remains\
                                           10272 * )", r, len, ((&slice)->end - rd_slice_abs_offset(&slice))); fprintf(\
                                           10273 * __stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r == l\
                                           10274 * en) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\r\
                                           10275 * dbuf.c", 1370, "r == len")); return 1; } } while (0);
00006E42                                   10276 @L405    DS    0H
00006E42 B921 0023                         10277          CLGR  2,3
00006E46 4780 C378               00006F60  10278          BE    @L408
00006E4A E340 C1F8 0016          00006DE0  10279          LLGF  4,@lit_852_456 ; __stderrp
00006E50 E3F4 6000 0004          00000000  10280          LG    15,0(4,6)   ; __stderrp
                                                                                                                           Page  205 
  Active Usings: @REGION_852_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006E56 E3F0 D520 0024          00000520  10281          STG   15,1312(0,13)
00006E5C E350 C1D8 0004          00006DC0  10282          LG    5,@lit_852_453
00006E62 41F0 59EE               000009EE  10283          LA    15,2542(0,5)
00006E66 E3F0 D528 0024          00000528  10284          STG   15,1320(0,13)
00006E6C 41F0 5040               00000040  10285          LA    15,64(0,5)
00006E70 E3F0 D530 0024          00000530  10286          STG   15,1328(0,13)
00006E76 E548 D538 055A          00000538  10287          MVGHI 1336(13),1370
00006E7C E370 C1E0 0004          00006DC8  10288          LG    7,@lit_852_452
00006E82 41F0 718C               0000018C  10289          LA    15,396(0,7)
00006E86 E3F0 D540 0024          00000540  10290          STG   15,1344(0,13)
00006E8C 4110 D520               00000520  10291          LA    1,1312(0,13)
00006E90 E380 C1F0 0004          00006DD8  10292          LG    8,@lit_852_459 ; fprintf
00006E96 B904 00F8                         10293          LGR   15,8
00006E9A                                   10294 @@gen_label564 DS    0H
00006E9A 05EF                              10295          BALR  14,15
00006E9C                                   10296 @@gen_label565 DS    0H
00006E9C E390 D0C8 0004          000000C8  10297          LG    9,200(0,13) ; offset of end in rd_slice_s
00006EA2 41F0 D0A8               000000A8  10298          LA    15,168(0,13)
00006EA6 E3F0 D520 0024          00000520  10299          STG   15,1312(0,13)
00006EAC 4110 D520               00000520  10300          LA    1,1312(0,13)
00006EB0 E3F0 C210 0004          00006DF8  10301          LG    15,@lit_852_472 ; rd_slice_abs_offset
00006EB6                                   10302 @@gen_label566 DS    0H
00006EB6 05EF                              10303          BALR  14,15
00006EB8                                   10304 @@gen_label567 DS    0H
00006EB8 B90B 009F                         10305          SLGR  9,15
00006EBC E3F4 6000 0004          00000000  10306          LG    15,0(4,6)   ; __stderrp
00006EC2 E3F0 D520 0024          00000520  10307          STG   15,1312(0,13)
00006EC8 41F0 5A24               00000A24  10308          LA    15,2596(0,5)
00006ECC E3F0 D528 0024          00000528  10309          STG   15,1320(0,13)
00006ED2 EB23 D530 0024          00000530  10310          STMG  2,3,1328(13)
00006ED8 E390 D540 0024          00000540  10311          STG   9,1344(0,13)
00006EDE 4110 D520               00000520  10312          LA    1,1312(0,13)
00006EE2 B904 00F8                         10313          LGR   15,8
00006EE6                                   10314 @@gen_label568 DS    0H
00006EE6 05EF                              10315          BALR  14,15
00006EE8                                   10316 @@gen_label569 DS    0H
00006EE8 E3F4 6000 0004          00000000  10317          LG    15,0(4,6)   ; __stderrp
00006EEE E3F0 D520 0024          00000520  10318          STG   15,1312(0,13)
00006EF4 41F0 55A4               000005A4  10319          LA    15,1444(0,5)
00006EF8 E3F0 D528 0024          00000528  10320          STG   15,1320(0,13)
00006EFE 4110 D520               00000520  10321          LA    1,1312(0,13)
00006F02 B904 00F8                         10322          LGR   15,8
00006F06                                   10323 @@gen_label570 DS    0H
00006F06 05EF                              10324          BALR  14,15
00006F08                                   10325 @@gen_label571 DS    0H
00006F08 E3F0 C1FC 0016          00006DE4  10326          LLGF  15,@lit_852_464 ; rd_unittest_assert_on_failure
00006F0E 41FF 6000               00000000  10327          LA    15,0(15,6)
00006F12 9500 F000      00000000 00000000  10328          CLI   0(15),0
00006F16 4780 C36A               00006F52  10329          BE    @L409
00006F1A B921 0023                         10330          CLGR  2,3
00006F1E 4780 C36A               00006F52  10331          BE    @L409
00006F22                                   10332 @L410    DS    0H
                                                                                                                           Page  206 
  Active Usings: @REGION_852_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006F22 41F0 718C               0000018C  10333          LA    15,396(0,7)
00006F26 E3F0 D520 0024          00000520  10334          STG   15,1312(0,13)
00006F2C 41F0 5040               00000040  10335          LA    15,64(0,5)
00006F30 E3F0 D528 0024          00000528  10336          STG   15,1320(0,13)
00006F36 E548 D530 055A          00000530  10337          MVGHI 1328(13),1370
00006F3C 41F0 5A54               00000A54  10338          LA    15,2644(0,5)
00006F40 E3F0 D538 0024          00000538  10339          STG   15,1336(0,13)
00006F46 4110 D520               00000520  10340          LA    1,1312(0,13)
00006F4A E3F0 C1D0 0004          00006DB8  10341          LG    15,@lit_852_454 ; __assert
00006F50                                   10342 @@gen_label574 DS    0H
00006F50 05EF                              10343          BALR  14,15
00006F52                                   10344 @@gen_label575 DS    0H
00006F52                                   10345 @L411    DS    0H
00006F52                                   10346 @L409    DS    0H
00006F52 A7F9 0001               00000001  10347          LGHI  15,1        ; 1
00006F56 E3C0 C200 001A          00006DE8  10348          ALGF  12,@lit_region_diff_852_1_2
                                           10349          DROP  12
                        00007468           10350          USING @REGION_852_2,12
00006F5C 47F0 C85C               00007CC4  10351          B     @ret_lab_852
                                           10352          DROP  12
                        00006BE8           10353          USING @REGION_852_1,12
00006F60                                   10354 @L408    DS    0H
                                           10355 * ***
                                           10356 * ***
                                           10357 * ***
                                           10358 * ***
                                           10359 * ***           do { if (!(!__memcmp(buf,verify,len))) { fprintf(__std\
                                           10360 * errp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "!memcmp(b\
                                           10361 * uf, verify, len)" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 13\
                                           10362 * 75, __FUNCTION__); fprintf(__stderrp, "verify"); fprintf(__stderrp, \
                                           10363 * "\033[0m\n"); if (rd_unittest_assert_on_failure) ((!__memcmp(buf,ver\
                                           10364 * ify,len)) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\\
                                           10365 * src\\rdbuf.c", 1375, "!__memcmp(buf,verify,len)")); return 1; } } wh\
                                           10366 * ile (0);
00006F60                                   10367 @L412    DS    0H
00006F60 41F0 D0F8               000000F8  10368          LA    15,248(0,13)
00006F64 B904 0014                         10369          LGR   1,4
00006F68 A759 0000               00000000  10370          LGHI  5,0
00006F6C B902 0023                         10371          LTGR  2,3
00006F70 4780 C3B8               00006FA0  10372          BZ    @@gen_label576
00006F74                                   10373 @@gen_label578 DS 0H
00006F74 D500 F000 1000 00000000 00000000  10374          CLC   0(1,15),0(1)
00006F7A 4770 C3A8               00006F90  10375          BNZ   @@gen_label577
00006F7E 41F0 F001               00000001  10376          LA    15,1(0,15)
00006F82 4110 1001               00000001  10377          LA    1,1(0,1)
00006F86 E320 C38C 0046          00006F74  10378          BCTG  2,@@gen_label578
00006F8C 47F0 C3B8               00006FA0  10379          B     @@gen_label576
00006F90                                   10380 @@gen_label577 DS 0H
00006F90 4350 F000               00000000  10381          IC    5,0(0,15)
00006F94 A7F9 0000               00000000  10382          LGHI  15,0
00006F98 43F0 1000               00000000  10383          IC    15,0(0,1)
00006F9C B90B 005F                         10384          SLGR  5,15
                                                                                                                           Page  207 
  Active Usings: @REGION_852_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006FA0                                   10385 @@gen_label576 DS 0H
00006FA0 1255                              10386          LTR   5,5
00006FA2 4780 C4EE               000070D6  10387          BZ    @L415
00006FA6 E320 C1F8 0016          00006DE0  10388          LLGF  2,@lit_852_456 ; __stderrp
00006FAC E3F2 6000 0004          00000000  10389          LG    15,0(2,6)   ; __stderrp
00006FB2 E3F0 D520 0024          00000520  10390          STG   15,1312(0,13)
00006FB8 E350 C1D8 0004          00006DC0  10391          LG    5,@lit_852_453
00006FBE 41F0 5A5E               00000A5E  10392          LA    15,2654(0,5)
00006FC2 E3F0 D528 0024          00000528  10393          STG   15,1320(0,13)
00006FC8 41F0 5040               00000040  10394          LA    15,64(0,5)
00006FCC E3F0 D530 0024          00000530  10395          STG   15,1328(0,13)
00006FD2 E548 D538 055F          00000538  10396          MVGHI 1336(13),1375
00006FD8 E3F0 C1E0 0004          00006DC8  10397          LG    15,@lit_852_452
00006FDE 41F0 F18C               0000018C  10398          LA    15,396(0,15)
00006FE2 E3F0 D540 0024          00000540  10399          STG   15,1344(0,13)
00006FE8 4110 D520               00000520  10400          LA    1,1312(0,13)
00006FEC E370 C1F0 0004          00006DD8  10401          LG    7,@lit_852_459 ; fprintf
00006FF2 B904 00F7                         10402          LGR   15,7
00006FF6                                   10403 @@gen_label580 DS    0H
00006FF6 05EF                              10404          BALR  14,15
00006FF8                                   10405 @@gen_label581 DS    0H
00006FF8 E3F2 6000 0004          00000000  10406          LG    15,0(2,6)   ; __stderrp
00006FFE E3F0 D520 0024          00000520  10407          STG   15,1312(0,13)
00007004 41F0 5AA6               00000AA6  10408          LA    15,2726(0,5)
00007008 E3F0 D528 0024          00000528  10409          STG   15,1320(0,13)
0000700E 4110 D520               00000520  10410          LA    1,1312(0,13)
00007012 B904 00F7                         10411          LGR   15,7
00007016                                   10412 @@gen_label582 DS    0H
00007016 05EF                              10413          BALR  14,15
00007018                                   10414 @@gen_label583 DS    0H
00007018 E3F2 6000 0004          00000000  10415          LG    15,0(2,6)   ; __stderrp
0000701E E3F0 D520 0024          00000520  10416          STG   15,1312(0,13)
00007024 41F0 55A4               000005A4  10417          LA    15,1444(0,5)
00007028 E3F0 D528 0024          00000528  10418          STG   15,1320(0,13)
0000702E 4110 D520               00000520  10419          LA    1,1312(0,13)
00007032 B904 00F7                         10420          LGR   15,7
00007036                                   10421 @@gen_label584 DS    0H
00007036 05EF                              10422          BALR  14,15
00007038                                   10423 @@gen_label585 DS    0H
00007038 E3F0 C1FC 0016          00006DE4  10424          LLGF  15,@lit_852_464 ; rd_unittest_assert_on_failure
0000703E 41FF 6000               00000000  10425          LA    15,0(15,6)
00007042 9500 F000      00000000 00000000  10426          CLI   0(15),0
00007046 4780 C4E0               000070C8  10427          BE    @L416
0000704A 41F0 D0F8               000000F8  10428          LA    15,248(0,13)
0000704E A729 0000               00000000  10429          LGHI  2,0
00007052 B902 0013                         10430          LTGR  1,3
00007056 4780 C49E               00007086  10431          BZ    @@gen_label587
0000705A                                   10432 @@gen_label589 DS 0H
0000705A D500 F000 4000 00000000 00000000  10433          CLC   0(1,15),0(4)
00007060 4770 C48E               00007076  10434          BNZ   @@gen_label588
00007064 41F0 F001               00000001  10435          LA    15,1(0,15)
00007068 4140 4001               00000001  10436          LA    4,1(0,4)
                                                                                                                           Page  208 
  Active Usings: @REGION_852_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000706C E310 C472 0046          0000705A  10437          BCTG  1,@@gen_label589
00007072 47F0 C49E               00007086  10438          B     @@gen_label587
00007076                                   10439 @@gen_label588 DS 0H
00007076 4320 F000               00000000  10440          IC    2,0(0,15)
0000707A A7F9 0000               00000000  10441          LGHI  15,0
0000707E 43F0 4000               00000000  10442          IC    15,0(0,4)
00007082 B90B 002F                         10443          SLGR  2,15
00007086                                   10444 @@gen_label587 DS 0H
00007086 1222                              10445          LTR   2,2
00007088 4780 C4E0               000070C8  10446          BZ    @L416
0000708C                                   10447 @L417    DS    0H
0000708C E3F0 C1E0 0004          00006DC8  10448          LG    15,@lit_852_452
00007092 41F0 F18C               0000018C  10449          LA    15,396(0,15)
00007096 E3F0 D520 0024          00000520  10450          STG   15,1312(0,13)
0000709C E3F0 C1D8 0004          00006DC0  10451          LG    15,@lit_852_453
000070A2 4110 F040               00000040  10452          LA    1,64(0,15)
000070A6 E310 D528 0024          00000528  10453          STG   1,1320(0,13)
000070AC E548 D530 055F          00000530  10454          MVGHI 1328(13),1375
000070B2 41F0 FAAE               00000AAE  10455          LA    15,2734(0,15)
000070B6 E3F0 D538 0024          00000538  10456          STG   15,1336(0,13)
000070BC 4110 D520               00000520  10457          LA    1,1312(0,13)
000070C0 E3F0 C1D0 0004          00006DB8  10458          LG    15,@lit_852_454 ; __assert
000070C6                                   10459 @@gen_label591 DS    0H
000070C6 05EF                              10460          BALR  14,15
000070C8                                   10461 @@gen_label592 DS    0H
000070C8                                   10462 @L418    DS    0H
000070C8                                   10463 @L416    DS    0H
000070C8 A7F9 0001               00000001  10464          LGHI  15,1        ; 1
000070CC E3C0 C200 001A          00006DE8  10465          ALGF  12,@lit_region_diff_852_1_2
                                           10466          DROP  12
                        00007468           10467          USING @REGION_852_2,12
000070D2 47F0 C85C               00007CC4  10468          B     @ret_lab_852
                                           10469          DROP  12
                        00006BE8           10470          USING @REGION_852_1,12
000070D6                                   10471 @L415    DS    0H
                                           10472 * ***
                                           10473 * ***           r = rd_slice_offset(&slice);
000070D6 41F0 D0A8               000000A8  10474          LA    15,168(0,13)
000070DA E3F0 D520 0024          00000520  10475          STG   15,1312(0,13)
000070E0 4110 D520               00000520  10476          LA    1,1312(0,13)
000070E4 E3F0 C218 0004          00006E00  10477          LG    15,@lit_852_493 ; rd_slice_offset
000070EA                                   10478 @@gen_label593 DS    0H
000070EA 05EF                              10479          BALR  14,15
000070EC                                   10480 @@gen_label594 DS    0H
000070EC B904 002F                         10481          LGR   2,15        ; r
                                           10482 * ***           do { if (!(r == len)) { fprintf(__stderrp, "\033[31mRD\
                                           10483 * UT: FAIL: %s:%d: %s: " "assert failed: " "r == len" ": ", "C:\\asgka\
                                           10484 * fka\\librdkafka\\src\\rdbuf.c", 1378, __FUNCTION__); fprintf(__stder\
                                           10485 * rp, "offset() returned %" "zu" ", not %" "zu", r, len); fprintf(__st\
                                           10486 * derrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r == len) \
                                           10487 * ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf\
                                           10488 * .c", 1378, "r == len")); return 1; } } while (0);
                                                                                                                           Page  209 
  Active Usings: @REGION_852_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000070F0                                   10489 @L419    DS    0H
000070F0 B921 0023                         10490          CLGR  2,3
000070F4 4780 C600               000071E8  10491          BE    @L422
000070F8 E340 C1F8 0016          00006DE0  10492          LLGF  4,@lit_852_456 ; __stderrp
000070FE E3F4 6000 0004          00000000  10493          LG    15,0(4,6)   ; __stderrp
00007104 E3F0 D520 0024          00000520  10494          STG   15,1312(0,13)
0000710A E350 C1D8 0004          00006DC0  10495          LG    5,@lit_852_453
00007110 41F0 59EE               000009EE  10496          LA    15,2542(0,5)
00007114 E3F0 D528 0024          00000528  10497          STG   15,1320(0,13)
0000711A 41F0 5040               00000040  10498          LA    15,64(0,5)
0000711E E3F0 D530 0024          00000530  10499          STG   15,1328(0,13)
00007124 E548 D538 0562          00000538  10500          MVGHI 1336(13),1378
0000712A E370 C1E0 0004          00006DC8  10501          LG    7,@lit_852_452
00007130 41F0 718C               0000018C  10502          LA    15,396(0,7)
00007134 E3F0 D540 0024          00000540  10503          STG   15,1344(0,13)
0000713A 4110 D520               00000520  10504          LA    1,1312(0,13)
0000713E E380 C1F0 0004          00006DD8  10505          LG    8,@lit_852_459 ; fprintf
00007144 B904 00F8                         10506          LGR   15,8
00007148                                   10507 @@gen_label596 DS    0H
00007148 05EF                              10508          BALR  14,15
0000714A                                   10509 @@gen_label597 DS    0H
0000714A E3F4 6000 0004          00000000  10510          LG    15,0(4,6)   ; __stderrp
00007150 E3F0 D520 0024          00000520  10511          STG   15,1312(0,13)
00007156 41F0 5AC8               00000AC8  10512          LA    15,2760(0,5)
0000715A E3F0 D528 0024          00000528  10513          STG   15,1320(0,13)
00007160 EB23 D530 0024          00000530  10514          STMG  2,3,1328(13)
00007166 4110 D520               00000520  10515          LA    1,1312(0,13)
0000716A B904 00F8                         10516          LGR   15,8
0000716E                                   10517 @@gen_label598 DS    0H
0000716E 05EF                              10518          BALR  14,15
00007170                                   10519 @@gen_label599 DS    0H
00007170 E3F4 6000 0004          00000000  10520          LG    15,0(4,6)   ; __stderrp
00007176 E3F0 D520 0024          00000520  10521          STG   15,1312(0,13)
0000717C 41F0 55A4               000005A4  10522          LA    15,1444(0,5)
00007180 E3F0 D528 0024          00000528  10523          STG   15,1320(0,13)
00007186 4110 D520               00000520  10524          LA    1,1312(0,13)
0000718A B904 00F8                         10525          LGR   15,8
0000718E                                   10526 @@gen_label600 DS    0H
0000718E 05EF                              10527          BALR  14,15
00007190                                   10528 @@gen_label601 DS    0H
00007190 E3F0 C1FC 0016          00006DE4  10529          LLGF  15,@lit_852_464 ; rd_unittest_assert_on_failure
00007196 41FF 6000               00000000  10530          LA    15,0(15,6)
0000719A 9500 F000      00000000 00000000  10531          CLI   0(15),0
0000719E 4780 C5F2               000071DA  10532          BE    @L423
000071A2 B921 0023                         10533          CLGR  2,3
000071A6 4780 C5F2               000071DA  10534          BE    @L423
000071AA                                   10535 @L424    DS    0H
000071AA 41F0 718C               0000018C  10536          LA    15,396(0,7)
000071AE E3F0 D520 0024          00000520  10537          STG   15,1312(0,13)
000071B4 41F0 5040               00000040  10538          LA    15,64(0,5)
000071B8 E3F0 D528 0024          00000528  10539          STG   15,1320(0,13)
000071BE E548 D530 0562          00000530  10540          MVGHI 1328(13),1378
                                                                                                                           Page  210 
  Active Usings: @REGION_852_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000071C4 41F0 5A54               00000A54  10541          LA    15,2644(0,5)
000071C8 E3F0 D538 0024          00000538  10542          STG   15,1336(0,13)
000071CE 4110 D520               00000520  10543          LA    1,1312(0,13)
000071D2 E3F0 C1D0 0004          00006DB8  10544          LG    15,@lit_852_454 ; __assert
000071D8                                   10545 @@gen_label604 DS    0H
000071D8 05EF                              10546          BALR  14,15
000071DA                                   10547 @@gen_label605 DS    0H
000071DA                                   10548 @L425    DS    0H
000071DA                                   10549 @L423    DS    0H
000071DA A7F9 0001               00000001  10550          LGHI  15,1        ; 1
000071DE E3C0 C200 001A          00006DE8  10551          ALGF  12,@lit_region_diff_852_1_2
                                           10552          DROP  12
                        00007468           10553          USING @REGION_852_2,12
000071E4 47F0 C85C               00007CC4  10554          B     @ret_lab_852
                                           10555          DROP  12
                        00006BE8           10556          USING @REGION_852_1,12
000071E8                                   10557 @L422    DS    0H
                                           10558 * ***
                                           10559 * ***
                                           10560 * ***           half = len / 2;
000071E8 EB53 0001 000C          00000001  10561          SRLG  5,3,1(0)    ; /0x2
                                           10562 * ***           i = rd_slice_seek(&slice, half);
000071EE 41F0 D0A8               000000A8  10563          LA    15,168(0,13)
000071F2 E3F0 D520 0024          00000520  10564          STG   15,1312(0,13)
000071F8 E350 D528 0024          00000528  10565          STG   5,1320(0,13)
000071FE 4110 D520               00000520  10566          LA    1,1312(0,13)
00007202 E3F0 C220 0004          00006E08  10567          LG    15,@lit_852_505 ; rd_slice_seek
00007208                                   10568 @@gen_label606 DS    0H
00007208 05EF                              10569          BALR  14,15
0000720A                                   10570 @@gen_label607 DS    0H
0000720A 182F                              10571          LR    2,15        ; i
                                           10572 * ***           do { if (!(i == 0)) { fprintf(__stderrp, "\033[31mRDUT\
                                           10573 * : FAIL: %s:%d: %s: " "assert failed: " "i == 0" ": ", "C:\\asgkafka\\
                                           10574 * \librdkafka\\src\\rdbuf.c", 1383, __FUNCTION__); fprintf(__stderrp, \
                                           10575 * "seek(%" "zu" ") returned %d", half, i); fprintf(__stderrp, "\033[0m\
                                           10576 * \n"); if (rd_unittest_assert_on_failure) ((i == 0) ? (void)0 : __ass\
                                           10577 * ert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1383, "i == \
                                           10578 * 0")); return 1; } } while (0);
0000720C                                   10579 @L426    DS    0H
0000720C 1222                              10580          LTR   2,2
0000720E 4780 C722               0000730A  10581          BE    @L429
00007212 E330 C1F8 0016          00006DE0  10582          LLGF  3,@lit_852_456 ; __stderrp
00007218 E3F3 6000 0004          00000000  10583          LG    15,0(3,6)   ; __stderrp
0000721E E3F0 D520 0024          00000520  10584          STG   15,1312(0,13)
00007224 E340 C1D8 0004          00006DC0  10585          LG    4,@lit_852_453
0000722A 41F0 499A               0000099A  10586          LA    15,2458(0,4)
0000722E E3F0 D528 0024          00000528  10587          STG   15,1320(0,13)
00007234 41F0 4040               00000040  10588          LA    15,64(0,4)
00007238 E3F0 D530 0024          00000530  10589          STG   15,1328(0,13)
0000723E E548 D538 0567          00000538  10590          MVGHI 1336(13),1383
00007244 E370 C1E0 0004          00006DC8  10591          LG    7,@lit_852_452
0000724A 41F0 718C               0000018C  10592          LA    15,396(0,7)
                                                                                                                           Page  211 
  Active Usings: @REGION_852_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000724E E3F0 D540 0024          00000540  10593          STG   15,1344(0,13)
00007254 4110 D520               00000520  10594          LA    1,1312(0,13)
00007258 E380 C1F0 0004          00006DD8  10595          LG    8,@lit_852_459 ; fprintf
0000725E B904 00F8                         10596          LGR   15,8
00007262                                   10597 @@gen_label609 DS    0H
00007262 05EF                              10598          BALR  14,15
00007264                                   10599 @@gen_label610 DS    0H
00007264 E3F3 6000 0004          00000000  10600          LG    15,0(3,6)   ; __stderrp
0000726A E3F0 D520 0024          00000520  10601          STG   15,1312(0,13)
00007270 41F0 4AE8               00000AE8  10602          LA    15,2792(0,4)
00007274 E3F0 D528 0024          00000528  10603          STG   15,1320(0,13)
0000727A E350 D530 0024          00000530  10604          STG   5,1328(0,13)
00007280 B914 00F2                         10605          LGFR  15,2
00007284 E3F0 D538 0024          00000538  10606          STG   15,1336(0,13)
0000728A 4110 D520               00000520  10607          LA    1,1312(0,13)
0000728E B904 00F8                         10608          LGR   15,8
00007292                                   10609 @@gen_label611 DS    0H
00007292 05EF                              10610          BALR  14,15
00007294                                   10611 @@gen_label612 DS    0H
00007294 E3F3 6000 0004          00000000  10612          LG    15,0(3,6)   ; __stderrp
0000729A E3F0 D520 0024          00000520  10613          STG   15,1312(0,13)
000072A0 41F0 45A4               000005A4  10614          LA    15,1444(0,4)
000072A4 E3F0 D528 0024          00000528  10615          STG   15,1320(0,13)
000072AA 4110 D520               00000520  10616          LA    1,1312(0,13)
000072AE B904 00F8                         10617          LGR   15,8
000072B2                                   10618 @@gen_label613 DS    0H
000072B2 05EF                              10619          BALR  14,15
000072B4                                   10620 @@gen_label614 DS    0H
000072B4 E3F0 C1FC 0016          00006DE4  10621          LLGF  15,@lit_852_464 ; rd_unittest_assert_on_failure
000072BA 41FF 6000               00000000  10622          LA    15,0(15,6)
000072BE 9500 F000      00000000 00000000  10623          CLI   0(15),0
000072C2 4780 C714               000072FC  10624          BE    @L430
000072C6 1222                              10625          LTR   2,2
000072C8 4780 C714               000072FC  10626          BE    @L430
000072CC                                   10627 @L431    DS    0H
000072CC 41F0 718C               0000018C  10628          LA    15,396(0,7)
000072D0 E3F0 D520 0024          00000520  10629          STG   15,1312(0,13)
000072D6 41F0 4040               00000040  10630          LA    15,64(0,4)
000072DA E3F0 D528 0024          00000528  10631          STG   15,1320(0,13)
000072E0 E548 D530 0567          00000530  10632          MVGHI 1328(13),1383
000072E6 41F0 49E6               000009E6  10633          LA    15,2534(0,4)
000072EA E3F0 D538 0024          00000538  10634          STG   15,1336(0,13)
000072F0 4110 D520               00000520  10635          LA    1,1312(0,13)
000072F4 E3F0 C1D0 0004          00006DB8  10636          LG    15,@lit_852_454 ; __assert
000072FA                                   10637 @@gen_label617 DS    0H
000072FA 05EF                              10638          BALR  14,15
000072FC                                   10639 @@gen_label618 DS    0H
000072FC                                   10640 @L432    DS    0H
000072FC                                   10641 @L430    DS    0H
000072FC A7F9 0001               00000001  10642          LGHI  15,1        ; 1
00007300 E3C0 C200 001A          00006DE8  10643          ALGF  12,@lit_region_diff_852_1_2
                                           10644          DROP  12
                                                                                                                           Page  212 
  Active Usings: @REGION_852_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00007468           10645          USING @REGION_852_2,12
00007306 47F0 C85C               00007CC4  10646          B     @ret_lab_852
                                           10647          DROP  12
                        00006BE8           10648          USING @REGION_852_1,12
0000730A                                   10649 @L429    DS    0H
                                           10650 * ***           r = rd_slice_offset(&slice);
0000730A 41F0 D0A8               000000A8  10651          LA    15,168(0,13)
0000730E E3F0 D520 0024          00000520  10652          STG   15,1312(0,13)
00007314 4110 D520               00000520  10653          LA    1,1312(0,13)
00007318 E3F0 C218 0004          00006E00  10654          LG    15,@lit_852_493 ; rd_slice_offset
0000731E                                   10655 @@gen_label619 DS    0H
0000731E 05EF                              10656          BALR  14,15
00007320                                   10657 @@gen_label620 DS    0H
00007320 B904 002F                         10658          LGR   2,15        ; r
                                           10659 * ***           do { if (!(r == half)) { fprintf(__stderrp, "\033[31mR\
                                           10660 * DUT: FAIL: %s:%d: %s: " "assert failed: " "r == half" ": ", "C:\\asg\
                                           10661 * kafka\\librdkafka\\src\\rdbuf.c", 1385, __FUNCTION__); fprintf(__std\
                                           10662 * errp, "offset() returned %" "zu" ", not %" "zu", r, half); fprintf(_\
                                           10663 * _stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r == ha\
                                           10664 * lf) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\r\
                                           10665 * dbuf.c", 1385, "r == half")); return 1; } } while (0);
00007324                                   10666 @L433    DS    0H
00007324 B921 0025                         10667          CLGR  2,5
00007328 4780 C83A               00007422  10668          BE    @L436
0000732C E330 C1F8 0016          00006DE0  10669          LLGF  3,@lit_852_456 ; __stderrp
00007332 E3F3 6000 0004          00000000  10670          LG    15,0(3,6)   ; __stderrp
00007338 E3F0 D520 0024          00000520  10671          STG   15,1312(0,13)
0000733E E340 C1D8 0004          00006DC0  10672          LG    4,@lit_852_453
00007344 41F0 4AFE               00000AFE  10673          LA    15,2814(0,4)
00007348 E3F0 D528 0024          00000528  10674          STG   15,1320(0,13)
0000734E 41F0 4040               00000040  10675          LA    15,64(0,4)
00007352 E3F0 D530 0024          00000530  10676          STG   15,1328(0,13)
00007358 E548 D538 0569          00000538  10677          MVGHI 1336(13),1385
0000735E E370 C1E0 0004          00006DC8  10678          LG    7,@lit_852_452
00007364 41F0 718C               0000018C  10679          LA    15,396(0,7)
00007368 E3F0 D540 0024          00000540  10680          STG   15,1344(0,13)
0000736E 4110 D520               00000520  10681          LA    1,1312(0,13)
00007372 E380 C1F0 0004          00006DD8  10682          LG    8,@lit_852_459 ; fprintf
00007378 B904 00F8                         10683          LGR   15,8
0000737C                                   10684 @@gen_label622 DS    0H
0000737C 05EF                              10685          BALR  14,15
0000737E                                   10686 @@gen_label623 DS    0H
0000737E E3F3 6000 0004          00000000  10687          LG    15,0(3,6)   ; __stderrp
00007384 E3F0 D520 0024          00000520  10688          STG   15,1312(0,13)
0000738A 41F0 4AC8               00000AC8  10689          LA    15,2760(0,4)
0000738E E3F0 D528 0024          00000528  10690          STG   15,1320(0,13)
00007394 E320 D530 0024          00000530  10691          STG   2,1328(0,13)
0000739A E350 D538 0024          00000538  10692          STG   5,1336(0,13)
000073A0 4110 D520               00000520  10693          LA    1,1312(0,13)
000073A4 B904 00F8                         10694          LGR   15,8
000073A8                                   10695 @@gen_label624 DS    0H
000073A8 05EF                              10696          BALR  14,15
                                                                                                                           Page  213 
  Active Usings: @REGION_852_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000073AA                                   10697 @@gen_label625 DS    0H
000073AA E3F3 6000 0004          00000000  10698          LG    15,0(3,6)   ; __stderrp
000073B0 E3F0 D520 0024          00000520  10699          STG   15,1312(0,13)
000073B6 41F0 45A4               000005A4  10700          LA    15,1444(0,4)
000073BA E3F0 D528 0024          00000528  10701          STG   15,1320(0,13)
000073C0 4110 D520               00000520  10702          LA    1,1312(0,13)
000073C4 B904 00F8                         10703          LGR   15,8
000073C8                                   10704 @@gen_label626 DS    0H
000073C8 05EF                              10705          BALR  14,15
000073CA                                   10706 @@gen_label627 DS    0H
000073CA E3F0 C1FC 0016          00006DE4  10707          LLGF  15,@lit_852_464 ; rd_unittest_assert_on_failure
000073D0 41FF 6000               00000000  10708          LA    15,0(15,6)
000073D4 9500 F000      00000000 00000000  10709          CLI   0(15),0
000073D8 4780 C82C               00007414  10710          BE    @L437
000073DC B921 0025                         10711          CLGR  2,5
000073E0 4780 C82C               00007414  10712          BE    @L437
000073E4                                   10713 @L438    DS    0H
000073E4 41F0 718C               0000018C  10714          LA    15,396(0,7)
000073E8 E3F0 D520 0024          00000520  10715          STG   15,1312(0,13)
000073EE 41F0 4040               00000040  10716          LA    15,64(0,4)
000073F2 E3F0 D528 0024          00000528  10717          STG   15,1320(0,13)
000073F8 E548 D530 0569          00000530  10718          MVGHI 1328(13),1385
000073FE 41F0 4B36               00000B36  10719          LA    15,2870(0,4)
00007402 E3F0 D538 0024          00000538  10720          STG   15,1336(0,13)
00007408 4110 D520               00000520  10721          LA    1,1312(0,13)
0000740C E3F0 C1D0 0004          00006DB8  10722          LG    15,@lit_852_454 ; __assert
00007412                                   10723 @@gen_label630 DS    0H
00007412 05EF                              10724          BALR  14,15
00007414                                   10725 @@gen_label631 DS    0H
00007414                                   10726 @L439    DS    0H
00007414                                   10727 @L437    DS    0H
00007414 A7F9 0001               00000001  10728          LGHI  15,1        ; 1
00007418 E3C0 C200 001A          00006DE8  10729          ALGF  12,@lit_region_diff_852_1_2
                                           10730          DROP  12
                        00007468           10731          USING @REGION_852_2,12
0000741E 47F0 C85C               00007CC4  10732          B     @ret_lab_852
                                           10733          DROP  12
                        00006BE8           10734          USING @REGION_852_1,12
00007422                                   10735 @L436    DS    0H
                                           10736 * ***
                                           10737 * ***
                                           10738 * ***
                                           10739 * ***           sub = rd_slice_pos(&slice);
00007422 41F0 D4F8               000004F8  10740          LA    15,1272(0,13)
00007426 E3F0 D520 0024          00000520  10741          STG   15,1312(0,13)
0000742C 41F0 D0A8               000000A8  10742          LA    15,168(0,13)
00007430 E3F0 D528 0024          00000528  10743          STG   15,1320(0,13)
00007436 4110 D520               00000520  10744          LA    1,1312(0,13)
0000743A E3F0 C228 0004          00006E10  10745          LG    15,@lit_852_529 ; rd_slice_pos
00007440                                   10746 @@gen_label632 DS    0H
00007440 05EF                              10747          BALR  14,15
00007442                                   10748 @@gen_label633 DS    0H
                                                                                                                           Page  214 
  Active Usings: @REGION_852_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007442 D227 D0D0 D4F8 000000D0 000004F8  10749          MVC   208(40,13),1272(13)
                                           10750 * ***           r = rd_slice_offset(&sub);
00007448 41F0 D0D0               000000D0  10751          LA    15,208(0,13)
0000744C E3F0 D520 0024          00000520  10752          STG   15,1312(0,13)
00007452 4110 D520               00000520  10753          LA    1,1312(0,13)
00007456 E3F0 C218 0004          00006E00  10754          LG    15,@lit_852_493 ; rd_slice_offset
0000745C                                   10755 @@gen_label634 DS    0H
0000745C 05EF                              10756          BALR  14,15
0000745E                                   10757 @@gen_label635 DS    0H
0000745E B904 002F                         10758          LGR   2,15        ; r
                                           10759 * ***           do { if (!(r == 0)) { fprintf(__stderrp, "\033[31mRDUT\
                                           10760 * : FAIL: %s:%d: %s: " "assert failed: " "r == 0" ": ", "C:\\asgkafka\\
                                           10761 * \librdkafka\\src\\rdbuf.c", 1391, __FUNCTION__); fprintf(__stderrp, \
                                           10762 * "sub: offset() returned %" "zu" ", not %" "zu", r, (size_t)0); fprin\
                                           10763 * tf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r =\
                                           10764 * = 0) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\\
                                           10765 * rdbuf.c", 1391, "r == 0")); return 1; } } while (0);
00007462 E3C0 C200 001A          00006DE8  10766          ALGF  12,@lit_region_diff_852_1_2
00007468                                   10767 @REGION_852_2 DS 0H
                                           10768          DROP  12
                        00007468           10769          USING @REGION_852_2,12
00007468                                   10770 @L440    DS    0H
00007468 B902 00F2                         10771          LTGR  15,2
0000746C 4780 C13C               000075A4  10772          BE    @L443
00007470 E330 C110 0016          00007578  10773          LLGF  3,@lit_852_531 ; __stderrp
00007476 E3F3 6000 0004          00000000  10774          LG    15,0(3,6)   ; __stderrp
0000747C E3F0 D520 0024          00000520  10775          STG   15,1312(0,13)
00007482 E340 C108 0004          00007570  10776          LG    4,@lit_852_532
00007488 41F0 4552               00000552  10777          LA    15,1362(0,4)
0000748C E3F0 D528 0024          00000528  10778          STG   15,1320(0,13)
00007492 41F0 4040               00000040  10779          LA    15,64(0,4)
00007496 E3F0 D530 0024          00000530  10780          STG   15,1328(0,13)
0000749C E548 D538 056F          00000538  10781          MVGHI 1336(13),1391
000074A2 E350 C100 0004          00007568  10782          LG    5,@lit_852_533
000074A8 41F0 518C               0000018C  10783          LA    15,396(0,5)
000074AC E3F0 D540 0024          00000540  10784          STG   15,1344(0,13)
000074B2 4110 D520               00000520  10785          LA    1,1312(0,13)
000074B6 E370 C0F8 0004          00007560  10786          LG    7,@lit_852_534 ; fprintf
000074BC B904 00F7                         10787          LGR   15,7
000074C0                                   10788 @@gen_label637 DS    0H
000074C0 05EF                              10789          BALR  14,15
000074C2                                   10790 @@gen_label638 DS    0H
000074C2 E3F3 6000 0004          00000000  10791          LG    15,0(3,6)   ; __stderrp
000074C8 E3F0 D520 0024          00000520  10792          STG   15,1312(0,13)
000074CE 41F0 4B40               00000B40  10793          LA    15,2880(0,4)
000074D2 E3F0 D528 0024          00000528  10794          STG   15,1320(0,13)
000074D8 E320 D530 0024          00000530  10795          STG   2,1328(0,13)
000074DE D707 D538 D538 00000538 00000538  10796          XC    1336(8,13),1336(13)
000074E4 4110 D520               00000520  10797          LA    1,1312(0,13)
000074E8 B904 00F7                         10798          LGR   15,7
000074EC                                   10799 @@gen_label639 DS    0H
000074EC 05EF                              10800          BALR  14,15
                                                                                                                           Page  215 
  Active Usings: @REGION_852_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000074EE                                   10801 @@gen_label640 DS    0H
000074EE E3F3 6000 0004          00000000  10802          LG    15,0(3,6)   ; __stderrp
000074F4 E3F0 D520 0024          00000520  10803          STG   15,1312(0,13)
000074FA 41F0 45A4               000005A4  10804          LA    15,1444(0,4)
000074FE E3F0 D528 0024          00000528  10805          STG   15,1320(0,13)
00007504 4110 D520               00000520  10806          LA    1,1312(0,13)
00007508 B904 00F7                         10807          LGR   15,7
0000750C                                   10808 @@gen_label641 DS    0H
0000750C 05EF                              10809          BALR  14,15
0000750E                                   10810 @@gen_label642 DS    0H
0000750E E3F0 C114 0016          0000757C  10811          LLGF  15,@lit_852_539 ; rd_unittest_assert_on_failure
00007514 41FF 6000               00000000  10812          LA    15,0(15,6)
00007518 9500 F000      00000000 00000000  10813          CLI   0(15),0
0000751C 4780 C0F0               00007558  10814          BE    @L444
00007520 B902 00F2                         10815          LTGR  15,2
00007524 4780 C0F0               00007558  10816          BE    @L444
00007528                                   10817 @L445    DS    0H
00007528 41F0 518C               0000018C  10818          LA    15,396(0,5)
0000752C E3F0 D520 0024          00000520  10819          STG   15,1312(0,13)
00007532 41F0 4040               00000040  10820          LA    15,64(0,4)
00007536 E3F0 D528 0024          00000528  10821          STG   15,1320(0,13)
0000753C E548 D530 056F          00000530  10822          MVGHI 1328(13),1391
00007542 41F0 42F2               000002F2  10823          LA    15,754(0,4)
00007546 E3F0 D538 0024          00000538  10824          STG   15,1336(0,13)
0000754C 4110 D520               00000520  10825          LA    1,1312(0,13)
00007550 E3F0 C118 0004          00007580  10826          LG    15,@lit_852_540 ; __assert
00007556                                   10827 @@gen_label645 DS    0H
00007556 05EF                              10828          BALR  14,15
00007558                                   10829 @@gen_label646 DS    0H
00007558                                   10830 @L446    DS    0H
00007558                                   10831 @L444    DS    0H
00007558 A7F9 0001               00000001  10832          LGHI  15,1        ; 1
0000755C 47F0 C85C               00007CC4  10833          B     @ret_lab_852
00007560                                   10834          DS    0D
00007560 0000000000000000                  10835 @lit_852_534 DC AD(fprintf)
00007568 000000000000BFA0                  10836 @lit_852_533 DC AD(@DATA)
00007570 000000000000CB02                  10837 @lit_852_532 DC AD(@strings@)
00007578 00000000                          10838 @lit_852_531 DC Q(__stderrp)
0000757C 00000000                          10839 @lit_852_539 DC Q(rd_unittest_assert_on_failure)
00007580 0000000000000000                  10840 @lit_852_540 DC AD(__assert)
00007588 00000000000007F0                  10841 @lit_852_553 DC AD(rd_slice_abs_offset)
00007590 0000000000003ED0                  10842 @lit_852_565 DC AD(rd_slice_read)
00007598 0000000000000898                  10843 @lit_852_591 DC AD(rd_slice_offset)
000075A0 00000862                          10844 @lit_region_diff_852_2_3  DC A(@REGION_852_3-@REGION_852_2)
000075A4                                   10845 @L443    DS    0H
                                           10846 * ***
                                           10847 * ***           r = ((&sub)->end - (&sub)->start);
000075A4 E320 D0F0 0004          000000F0  10848          LG    2,240(0,13) ; offset of end in rd_slice_s
000075AA E320 D0E8 000B          000000E8  10849          SLG   2,232(0,13)
                                           10850 * ***           do { if (!(r == half)) { fprintf(__stderrp, "\033[31mR\
                                           10851 * DUT: FAIL: %s:%d: %s: " "assert failed: " "r == half" ": ", "C:\\asg\
                                           10852 * kafka\\librdkafka\\src\\rdbuf.c", 1394, __FUNCTION__); fprintf(__std\
                                                                                                                           Page  216 
  Active Usings: @REGION_852_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10853 * errp, "sub: size() returned %" "zu" ", not %" "zu", r, half); fprint\
                                           10854 * f(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r ==\
                                           10855 *  half) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\
                                           10856 * \\rdbuf.c", 1394, "r == half")); return 1; } } while (0);
000075B0                                   10857 @L447    DS    0H
000075B0 B921 0025                         10858          CLGR  2,5
000075B4 4780 C240               000076A8  10859          BE    @L450
000075B8 E330 C110 0016          00007578  10860          LLGF  3,@lit_852_531 ; __stderrp
000075BE E3F3 6000 0004          00000000  10861          LG    15,0(3,6)   ; __stderrp
000075C4 E3F0 D520 0024          00000520  10862          STG   15,1312(0,13)
000075CA E340 C108 0004          00007570  10863          LG    4,@lit_852_532
000075D0 41F0 4AFE               00000AFE  10864          LA    15,2814(0,4)
000075D4 E3F0 D528 0024          00000528  10865          STG   15,1320(0,13)
000075DA 41F0 4040               00000040  10866          LA    15,64(0,4)
000075DE E3F0 D530 0024          00000530  10867          STG   15,1328(0,13)
000075E4 E548 D538 0572          00000538  10868          MVGHI 1336(13),1394
000075EA E370 C100 0004          00007568  10869          LG    7,@lit_852_533
000075F0 41F0 718C               0000018C  10870          LA    15,396(0,7)
000075F4 E3F0 D540 0024          00000540  10871          STG   15,1344(0,13)
000075FA 4110 D520               00000520  10872          LA    1,1312(0,13)
000075FE E380 C0F8 0004          00007560  10873          LG    8,@lit_852_534 ; fprintf
00007604 B904 00F8                         10874          LGR   15,8
00007608                                   10875 @@gen_label648 DS    0H
00007608 05EF                              10876          BALR  14,15
0000760A                                   10877 @@gen_label649 DS    0H
0000760A E3F3 6000 0004          00000000  10878          LG    15,0(3,6)   ; __stderrp
00007610 E3F0 D520 0024          00000520  10879          STG   15,1312(0,13)
00007616 41F0 4B64               00000B64  10880          LA    15,2916(0,4)
0000761A E3F0 D528 0024          00000528  10881          STG   15,1320(0,13)
00007620 E320 D530 0024          00000530  10882          STG   2,1328(0,13)
00007626 E350 D538 0024          00000538  10883          STG   5,1336(0,13)
0000762C 4110 D520               00000520  10884          LA    1,1312(0,13)
00007630 B904 00F8                         10885          LGR   15,8
00007634                                   10886 @@gen_label650 DS    0H
00007634 05EF                              10887          BALR  14,15
00007636                                   10888 @@gen_label651 DS    0H
00007636 E3F3 6000 0004          00000000  10889          LG    15,0(3,6)   ; __stderrp
0000763C E3F0 D520 0024          00000520  10890          STG   15,1312(0,13)
00007642 41F0 45A4               000005A4  10891          LA    15,1444(0,4)
00007646 E3F0 D528 0024          00000528  10892          STG   15,1320(0,13)
0000764C 4110 D520               00000520  10893          LA    1,1312(0,13)
00007650 B904 00F8                         10894          LGR   15,8
00007654                                   10895 @@gen_label652 DS    0H
00007654 05EF                              10896          BALR  14,15
00007656                                   10897 @@gen_label653 DS    0H
00007656 E3F0 C114 0016          0000757C  10898          LLGF  15,@lit_852_539 ; rd_unittest_assert_on_failure
0000765C 41FF 6000               00000000  10899          LA    15,0(15,6)
00007660 9500 F000      00000000 00000000  10900          CLI   0(15),0
00007664 4780 C238               000076A0  10901          BE    @L451
00007668 B921 0025                         10902          CLGR  2,5
0000766C 4780 C238               000076A0  10903          BE    @L451
00007670                                   10904 @L452    DS    0H
                                                                                                                           Page  217 
  Active Usings: @REGION_852_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007670 41F0 718C               0000018C  10905          LA    15,396(0,7)
00007674 E3F0 D520 0024          00000520  10906          STG   15,1312(0,13)
0000767A 41F0 4040               00000040  10907          LA    15,64(0,4)
0000767E E3F0 D528 0024          00000528  10908          STG   15,1320(0,13)
00007684 E548 D530 0572          00000530  10909          MVGHI 1328(13),1394
0000768A 41F0 4B36               00000B36  10910          LA    15,2870(0,4)
0000768E E3F0 D538 0024          00000538  10911          STG   15,1336(0,13)
00007694 4110 D520               00000520  10912          LA    1,1312(0,13)
00007698 E3F0 C118 0004          00007580  10913          LG    15,@lit_852_540 ; __assert
0000769E                                   10914 @@gen_label656 DS    0H
0000769E 05EF                              10915          BALR  14,15
000076A0                                   10916 @@gen_label657 DS    0H
000076A0                                   10917 @L453    DS    0H
000076A0                                   10918 @L451    DS    0H
000076A0 A7F9 0001               00000001  10919          LGHI  15,1        ; 1
000076A4 47F0 C85C               00007CC4  10920          B     @ret_lab_852
000076A8                                   10921 @L450    DS    0H
                                           10922 * ***
                                           10923 * ***           r = ((&sub)->end - rd_slice_abs_offset(&sub));
000076A8 E320 D0F0 0004          000000F0  10924          LG    2,240(0,13) ; offset of end in rd_slice_s
000076AE 41F0 D0D0               000000D0  10925          LA    15,208(0,13)
000076B2 E3F0 D520 0024          00000520  10926          STG   15,1312(0,13)
000076B8 4110 D520               00000520  10927          LA    1,1312(0,13)
000076BC E3F0 C120 0004          00007588  10928          LG    15,@lit_852_553 ; rd_slice_abs_offset
000076C2                                   10929 @@gen_label658 DS    0H
000076C2 05EF                              10930          BALR  14,15
000076C4                                   10931 @@gen_label659 DS    0H
000076C4 B90B 002F                         10932          SLGR  2,15
                                           10933 * ***           do { if (!(r == half)) { fprintf(__stderrp, "\033[31mR\
                                           10934 * DUT: FAIL: %s:%d: %s: " "assert failed: " "r == half" ": ", "C:\\asg\
                                           10935 * kafka\\librdkafka\\src\\rdbuf.c", 1397, __FUNCTION__); fprintf(__std\
                                           10936 * errp, "sub: remains() returned %" "zu" ", not %" "zu", r, half); fpr\
                                           10937 * intf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r\
                                           10938 *  == half) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\\
                                           10939 * src\\rdbuf.c", 1397, "r == half")); return 1; } } while (0);
000076C8                                   10940 @L454    DS    0H
000076C8 B921 0025                         10941          CLGR  2,5
000076CC 4780 C358               000077C0  10942          BE    @L457
000076D0 E330 C110 0016          00007578  10943          LLGF  3,@lit_852_531 ; __stderrp
000076D6 E3F3 6000 0004          00000000  10944          LG    15,0(3,6)   ; __stderrp
000076DC E3F0 D520 0024          00000520  10945          STG   15,1312(0,13)
000076E2 E340 C108 0004          00007570  10946          LG    4,@lit_852_532
000076E8 41F0 4AFE               00000AFE  10947          LA    15,2814(0,4)
000076EC E3F0 D528 0024          00000528  10948          STG   15,1320(0,13)
000076F2 41F0 4040               00000040  10949          LA    15,64(0,4)
000076F6 E3F0 D530 0024          00000530  10950          STG   15,1328(0,13)
000076FC E548 D538 0575          00000538  10951          MVGHI 1336(13),1397
00007702 E370 C100 0004          00007568  10952          LG    7,@lit_852_533
00007708 41F0 718C               0000018C  10953          LA    15,396(0,7)
0000770C E3F0 D540 0024          00000540  10954          STG   15,1344(0,13)
00007712 4110 D520               00000520  10955          LA    1,1312(0,13)
00007716 E380 C0F8 0004          00007560  10956          LG    8,@lit_852_534 ; fprintf
                                                                                                                           Page  218 
  Active Usings: @REGION_852_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000771C B904 00F8                         10957          LGR   15,8
00007720                                   10958 @@gen_label661 DS    0H
00007720 05EF                              10959          BALR  14,15
00007722                                   10960 @@gen_label662 DS    0H
00007722 E3F3 6000 0004          00000000  10961          LG    15,0(3,6)   ; __stderrp
00007728 E3F0 D520 0024          00000520  10962          STG   15,1312(0,13)
0000772E 41F0 4B86               00000B86  10963          LA    15,2950(0,4)
00007732 E3F0 D528 0024          00000528  10964          STG   15,1320(0,13)
00007738 E320 D530 0024          00000530  10965          STG   2,1328(0,13)
0000773E E350 D538 0024          00000538  10966          STG   5,1336(0,13)
00007744 4110 D520               00000520  10967          LA    1,1312(0,13)
00007748 B904 00F8                         10968          LGR   15,8
0000774C                                   10969 @@gen_label663 DS    0H
0000774C 05EF                              10970          BALR  14,15
0000774E                                   10971 @@gen_label664 DS    0H
0000774E E3F3 6000 0004          00000000  10972          LG    15,0(3,6)   ; __stderrp
00007754 E3F0 D520 0024          00000520  10973          STG   15,1312(0,13)
0000775A 41F0 45A4               000005A4  10974          LA    15,1444(0,4)
0000775E E3F0 D528 0024          00000528  10975          STG   15,1320(0,13)
00007764 4110 D520               00000520  10976          LA    1,1312(0,13)
00007768 B904 00F8                         10977          LGR   15,8
0000776C                                   10978 @@gen_label665 DS    0H
0000776C 05EF                              10979          BALR  14,15
0000776E                                   10980 @@gen_label666 DS    0H
0000776E E3F0 C114 0016          0000757C  10981          LLGF  15,@lit_852_539 ; rd_unittest_assert_on_failure
00007774 41FF 6000               00000000  10982          LA    15,0(15,6)
00007778 9500 F000      00000000 00000000  10983          CLI   0(15),0
0000777C 4780 C350               000077B8  10984          BE    @L458
00007780 B921 0025                         10985          CLGR  2,5
00007784 4780 C350               000077B8  10986          BE    @L458
00007788                                   10987 @L459    DS    0H
00007788 41F0 718C               0000018C  10988          LA    15,396(0,7)
0000778C E3F0 D520 0024          00000520  10989          STG   15,1312(0,13)
00007792 41F0 4040               00000040  10990          LA    15,64(0,4)
00007796 E3F0 D528 0024          00000528  10991          STG   15,1320(0,13)
0000779C E548 D530 0575          00000530  10992          MVGHI 1328(13),1397
000077A2 41F0 4B36               00000B36  10993          LA    15,2870(0,4)
000077A6 E3F0 D538 0024          00000538  10994          STG   15,1336(0,13)
000077AC 4110 D520               00000520  10995          LA    1,1312(0,13)
000077B0 E3F0 C118 0004          00007580  10996          LG    15,@lit_852_540 ; __assert
000077B6                                   10997 @@gen_label669 DS    0H
000077B6 05EF                              10998          BALR  14,15
000077B8                                   10999 @@gen_label670 DS    0H
000077B8                                   11000 @L460    DS    0H
000077B8                                   11001 @L458    DS    0H
000077B8 A7F9 0001               00000001  11002          LGHI  15,1        ; 1
000077BC 47F0 C85C               00007CC4  11003          B     @ret_lab_852
000077C0                                   11004 @L457    DS    0H
                                           11005 * ***
                                           11006 * ***
                                           11007 * ***
                                           11008 * ***
                                                                                                                           Page  219 
  Active Usings: @REGION_852_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11009 * ***           r = rd_slice_read(&sub, buf, half);
000077C0 41F0 D0D0               000000D0  11010          LA    15,208(0,13)
000077C4 E3F0 D520 0024          00000520  11011          STG   15,1312(0,13)
000077CA 41F0 D0F8               000000F8  11012          LA    15,248(0,13)
000077CE E3F0 D528 0024          00000528  11013          STG   15,1320(0,13)
000077D4 E350 D530 0024          00000530  11014          STG   5,1328(0,13)
000077DA 4110 D520               00000520  11015          LA    1,1312(0,13)
000077DE E3F0 C128 0004          00007590  11016          LG    15,@lit_852_565 ; rd_slice_read
000077E4                                   11017 @@gen_label671 DS    0H
000077E4 05EF                              11018          BALR  14,15
000077E6                                   11019 @@gen_label672 DS    0H
000077E6 B904 002F                         11020          LGR   2,15        ; r
                                           11021 * ***           do { if (!(r == half)) { fprintf(__stderrp, "\033[31mR\
                                           11022 * DUT: FAIL: %s:%d: %s: " "assert failed: " "r == half" ": ", "C:\\asg\
                                           11023 * kafka\\librdkafka\\src\\rdbuf.c", 1403, __FUNCTION__); fprintf(__std\
                                           11024 * errp, "sub read() returned %" "zu" " expected %" "zu" " (%" "zu" " r\
                                           11025 * emains)", r, len, ((&sub)->end - rd_slice_abs_offset(&sub))); fprint\
                                           11026 * f(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r ==\
                                           11027 *  half) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\
                                           11028 * \\rdbuf.c", 1403, "r == half")); return 1; } } while (0);
000077EA                                   11029 @L461    DS    0H
000077EA B921 0025                         11030          CLGR  2,5
000077EE 4780 C49A               00007902  11031          BE    @L464
000077F2 E340 C110 0016          00007578  11032          LLGF  4,@lit_852_531 ; __stderrp
000077F8 E3F4 6000 0004          00000000  11033          LG    15,0(4,6)   ; __stderrp
000077FE E3F0 D520 0024          00000520  11034          STG   15,1312(0,13)
00007804 E370 C108 0004          00007570  11035          LG    7,@lit_852_532
0000780A 41F0 7AFE               00000AFE  11036          LA    15,2814(0,7)
0000780E E3F0 D528 0024          00000528  11037          STG   15,1320(0,13)
00007814 41F0 7040               00000040  11038          LA    15,64(0,7)
00007818 E3F0 D530 0024          00000530  11039          STG   15,1328(0,13)
0000781E E548 D538 057B          00000538  11040          MVGHI 1336(13),1403
00007824 E380 C100 0004          00007568  11041          LG    8,@lit_852_533
0000782A 41F0 818C               0000018C  11042          LA    15,396(0,8)
0000782E E3F0 D540 0024          00000540  11043          STG   15,1344(0,13)
00007834 4110 D520               00000520  11044          LA    1,1312(0,13)
00007838 E390 C0F8 0004          00007560  11045          LG    9,@lit_852_534 ; fprintf
0000783E B904 00F9                         11046          LGR   15,9
00007842                                   11047 @@gen_label674 DS    0H
00007842 05EF                              11048          BALR  14,15
00007844                                   11049 @@gen_label675 DS    0H
00007844 E3A0 D0F0 0004          000000F0  11050          LG    10,240(0,13) ; offset of end in rd_slice_s
0000784A 41F0 D0D0               000000D0  11051          LA    15,208(0,13)
0000784E E3F0 D520 0024          00000520  11052          STG   15,1312(0,13)
00007854 4110 D520               00000520  11053          LA    1,1312(0,13)
00007858 E3F0 C120 0004          00007588  11054          LG    15,@lit_852_553 ; rd_slice_abs_offset
0000785E                                   11055 @@gen_label676 DS    0H
0000785E 05EF                              11056          BALR  14,15
00007860                                   11057 @@gen_label677 DS    0H
00007860 B90B 00AF                         11058          SLGR  10,15
00007864 E3F4 6000 0004          00000000  11059          LG    15,0(4,6)   ; __stderrp
0000786A E3F0 D520 0024          00000520  11060          STG   15,1312(0,13)
                                                                                                                           Page  220 
  Active Usings: @REGION_852_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007870 41F0 7BAC               00000BAC  11061          LA    15,2988(0,7)
00007874 E3F0 D528 0024          00000528  11062          STG   15,1320(0,13)
0000787A EB23 D530 0024          00000530  11063          STMG  2,3,1328(13)
00007880 E3A0 D540 0024          00000540  11064          STG   10,1344(0,13)
00007886 4110 D520               00000520  11065          LA    1,1312(0,13)
0000788A B904 00F9                         11066          LGR   15,9
0000788E                                   11067 @@gen_label678 DS    0H
0000788E 05EF                              11068          BALR  14,15
00007890                                   11069 @@gen_label679 DS    0H
00007890 E3F4 6000 0004          00000000  11070          LG    15,0(4,6)   ; __stderrp
00007896 E3F0 D520 0024          00000520  11071          STG   15,1312(0,13)
0000789C 41F0 75A4               000005A4  11072          LA    15,1444(0,7)
000078A0 E3F0 D528 0024          00000528  11073          STG   15,1320(0,13)
000078A6 4110 D520               00000520  11074          LA    1,1312(0,13)
000078AA B904 00F9                         11075          LGR   15,9
000078AE                                   11076 @@gen_label680 DS    0H
000078AE 05EF                              11077          BALR  14,15
000078B0                                   11078 @@gen_label681 DS    0H
000078B0 E3F0 C114 0016          0000757C  11079          LLGF  15,@lit_852_539 ; rd_unittest_assert_on_failure
000078B6 41FF 6000               00000000  11080          LA    15,0(15,6)
000078BA 9500 F000      00000000 00000000  11081          CLI   0(15),0
000078BE 4780 C492               000078FA  11082          BE    @L465
000078C2 B921 0025                         11083          CLGR  2,5
000078C6 4780 C492               000078FA  11084          BE    @L465
000078CA                                   11085 @L466    DS    0H
000078CA 41F0 818C               0000018C  11086          LA    15,396(0,8)
000078CE E3F0 D520 0024          00000520  11087          STG   15,1312(0,13)
000078D4 41F0 7040               00000040  11088          LA    15,64(0,7)
000078D8 E3F0 D528 0024          00000528  11089          STG   15,1320(0,13)
000078DE E548 D530 057B          00000530  11090          MVGHI 1328(13),1403
000078E4 41F0 7B36               00000B36  11091          LA    15,2870(0,7)
000078E8 E3F0 D538 0024          00000538  11092          STG   15,1336(0,13)
000078EE 4110 D520               00000520  11093          LA    1,1312(0,13)
000078F2 E3F0 C118 0004          00007580  11094          LG    15,@lit_852_540 ; __assert
000078F8                                   11095 @@gen_label684 DS    0H
000078F8 05EF                              11096          BALR  14,15
000078FA                                   11097 @@gen_label685 DS    0H
000078FA                                   11098 @L467    DS    0H
000078FA                                   11099 @L465    DS    0H
000078FA A7F9 0001               00000001  11100          LGHI  15,1        ; 1
000078FE 47F0 C85C               00007CC4  11101          B     @ret_lab_852
00007902                                   11102 @L464    DS    0H
                                           11103 * ***
                                           11104 * ***
                                           11105 * ***
                                           11106 * ***
                                           11107 * ***           do { if (!(!__memcmp(buf,verify,len))) { fprintf(__std\
                                           11108 * errp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "!memcmp(b\
                                           11109 * uf, verify, len)" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 14\
                                           11110 * 08, __FUNCTION__); fprintf(__stderrp, "verify"); fprintf(__stderrp, \
                                           11111 * "\033[0m\n"); if (rd_unittest_assert_on_failure) ((!__memcmp(buf,ver\
                                           11112 * ify,len)) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\\
                                                                                                                           Page  221 
  Active Usings: @REGION_852_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11113 * src\\rdbuf.c", 1408, "!__memcmp(buf,verify,len)")); return 1; } } wh\
                                           11114 * ile (0);
00007902                                   11115 @L468    DS    0H
00007902 41F0 D0F8               000000F8  11116          LA    15,248(0,13)
00007906 B904 0014                         11117          LGR   1,4
0000790A A759 0000               00000000  11118          LGHI  5,0
0000790E B902 0023                         11119          LTGR  2,3
00007912 4780 C4DA               00007942  11120          BZ    @@gen_label686
00007916                                   11121 @@gen_label688 DS 0H
00007916 D500 F000 1000 00000000 00000000  11122          CLC   0(1,15),0(1)
0000791C 4770 C4CA               00007932  11123          BNZ   @@gen_label687
00007920 41F0 F001               00000001  11124          LA    15,1(0,15)
00007924 4110 1001               00000001  11125          LA    1,1(0,1)
00007928 E320 C4AE 0046          00007916  11126          BCTG  2,@@gen_label688
0000792E 47F0 C4DA               00007942  11127          B     @@gen_label686
00007932                                   11128 @@gen_label687 DS 0H
00007932 4350 F000               00000000  11129          IC    5,0(0,15)
00007936 A7F9 0000               00000000  11130          LGHI  15,0
0000793A 43F0 1000               00000000  11131          IC    15,0(0,1)
0000793E B90B 005F                         11132          SLGR  5,15
00007942                                   11133 @@gen_label686 DS 0H
00007942 1255                              11134          LTR   5,5
00007944 4780 C60A               00007A72  11135          BZ    @L471
00007948 E320 C110 0016          00007578  11136          LLGF  2,@lit_852_531 ; __stderrp
0000794E E3F2 6000 0004          00000000  11137          LG    15,0(2,6)   ; __stderrp
00007954 E3F0 D520 0024          00000520  11138          STG   15,1312(0,13)
0000795A E350 C108 0004          00007570  11139          LG    5,@lit_852_532
00007960 41F0 5A5E               00000A5E  11140          LA    15,2654(0,5)
00007964 E3F0 D528 0024          00000528  11141          STG   15,1320(0,13)
0000796A 41F0 5040               00000040  11142          LA    15,64(0,5)
0000796E E3F0 D530 0024          00000530  11143          STG   15,1328(0,13)
00007974 E548 D538 0580          00000538  11144          MVGHI 1336(13),1408
0000797A E3F0 C100 0004          00007568  11145          LG    15,@lit_852_533
00007980 41F0 F18C               0000018C  11146          LA    15,396(0,15)
00007984 E3F0 D540 0024          00000540  11147          STG   15,1344(0,13)
0000798A 4110 D520               00000520  11148          LA    1,1312(0,13)
0000798E E370 C0F8 0004          00007560  11149          LG    7,@lit_852_534 ; fprintf
00007994 B904 00F7                         11150          LGR   15,7
00007998                                   11151 @@gen_label690 DS    0H
00007998 05EF                              11152          BALR  14,15
0000799A                                   11153 @@gen_label691 DS    0H
0000799A E3F2 6000 0004          00000000  11154          LG    15,0(2,6)   ; __stderrp
000079A0 E3F0 D520 0024          00000520  11155          STG   15,1312(0,13)
000079A6 41F0 5AA6               00000AA6  11156          LA    15,2726(0,5)
000079AA E3F0 D528 0024          00000528  11157          STG   15,1320(0,13)
000079B0 4110 D520               00000520  11158          LA    1,1312(0,13)
000079B4 B904 00F7                         11159          LGR   15,7
000079B8                                   11160 @@gen_label692 DS    0H
000079B8 05EF                              11161          BALR  14,15
000079BA                                   11162 @@gen_label693 DS    0H
000079BA E3F2 6000 0004          00000000  11163          LG    15,0(2,6)   ; __stderrp
000079C0 E3F0 D520 0024          00000520  11164          STG   15,1312(0,13)
                                                                                                                           Page  222 
  Active Usings: @REGION_852_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000079C6 41F0 55A4               000005A4  11165          LA    15,1444(0,5)
000079CA E3F0 D528 0024          00000528  11166          STG   15,1320(0,13)
000079D0 4110 D520               00000520  11167          LA    1,1312(0,13)
000079D4 B904 00F7                         11168          LGR   15,7
000079D8                                   11169 @@gen_label694 DS    0H
000079D8 05EF                              11170          BALR  14,15
000079DA                                   11171 @@gen_label695 DS    0H
000079DA E3F0 C114 0016          0000757C  11172          LLGF  15,@lit_852_539 ; rd_unittest_assert_on_failure
000079E0 41FF 6000               00000000  11173          LA    15,0(15,6)
000079E4 9500 F000      00000000 00000000  11174          CLI   0(15),0
000079E8 4780 C602               00007A6A  11175          BE    @L472
000079EC 41F0 D0F8               000000F8  11176          LA    15,248(0,13)
000079F0 A729 0000               00000000  11177          LGHI  2,0
000079F4 B902 0013                         11178          LTGR  1,3
000079F8 4780 C5C0               00007A28  11179          BZ    @@gen_label697
000079FC                                   11180 @@gen_label699 DS 0H
000079FC D500 F000 4000 00000000 00000000  11181          CLC   0(1,15),0(4)
00007A02 4770 C5B0               00007A18  11182          BNZ   @@gen_label698
00007A06 41F0 F001               00000001  11183          LA    15,1(0,15)
00007A0A 4140 4001               00000001  11184          LA    4,1(0,4)
00007A0E E310 C594 0046          000079FC  11185          BCTG  1,@@gen_label699
00007A14 47F0 C5C0               00007A28  11186          B     @@gen_label697
00007A18                                   11187 @@gen_label698 DS 0H
00007A18 4320 F000               00000000  11188          IC    2,0(0,15)
00007A1C A7F9 0000               00000000  11189          LGHI  15,0
00007A20 43F0 4000               00000000  11190          IC    15,0(0,4)
00007A24 B90B 002F                         11191          SLGR  2,15
00007A28                                   11192 @@gen_label697 DS 0H
00007A28 1222                              11193          LTR   2,2
00007A2A 4780 C602               00007A6A  11194          BZ    @L472
00007A2E                                   11195 @L473    DS    0H
00007A2E E3F0 C100 0004          00007568  11196          LG    15,@lit_852_533
00007A34 41F0 F18C               0000018C  11197          LA    15,396(0,15)
00007A38 E3F0 D520 0024          00000520  11198          STG   15,1312(0,13)
00007A3E E3F0 C108 0004          00007570  11199          LG    15,@lit_852_532
00007A44 4110 F040               00000040  11200          LA    1,64(0,15)
00007A48 E310 D528 0024          00000528  11201          STG   1,1320(0,13)
00007A4E E548 D530 0580          00000530  11202          MVGHI 1328(13),1408
00007A54 41F0 FAAE               00000AAE  11203          LA    15,2734(0,15)
00007A58 E3F0 D538 0024          00000538  11204          STG   15,1336(0,13)
00007A5E 4110 D520               00000520  11205          LA    1,1312(0,13)
00007A62 E3F0 C118 0004          00007580  11206          LG    15,@lit_852_540 ; __assert
00007A68                                   11207 @@gen_label701 DS    0H
00007A68 05EF                              11208          BALR  14,15
00007A6A                                   11209 @@gen_label702 DS    0H
00007A6A                                   11210 @L474    DS    0H
00007A6A                                   11211 @L472    DS    0H
00007A6A A7F9 0001               00000001  11212          LGHI  15,1        ; 1
00007A6E 47F0 C85C               00007CC4  11213          B     @ret_lab_852
00007A72                                   11214 @L471    DS    0H
                                           11215 * ***
                                           11216 * ***           r = rd_slice_offset(&sub);
                                                                                                                           Page  223 
  Active Usings: @REGION_852_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007A72 41F0 D0D0               000000D0  11217          LA    15,208(0,13)
00007A76 E3F0 D520 0024          00000520  11218          STG   15,1312(0,13)
00007A7C 4110 D520               00000520  11219          LA    1,1312(0,13)
00007A80 E3F0 C130 0004          00007598  11220          LG    15,@lit_852_591 ; rd_slice_offset
00007A86                                   11221 @@gen_label703 DS    0H
00007A86 05EF                              11222          BALR  14,15
00007A88                                   11223 @@gen_label704 DS    0H
00007A88 B904 002F                         11224          LGR   2,15        ; r
                                           11225 * ***           do { if (!(r == ((&sub)->end - (&sub)->start))) { fpri\
                                           11226 * ntf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "\
                                           11227 * r == rd_slice_size(&sub)" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbu\
                                           11228 * f.c", 1411, __FUNCTION__); fprintf(__stderrp, "sub offset() returned\
                                           11229 *  %" "zu" ", not %" "zu", r, ((&sub)->end - (&sub)->start)); fprintf(\
                                           11230 * __stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r == (\
                                           11231 * (&sub)->end - (&sub)->start)) ? (void)0 : __assert(__func__, "C:\\as\
                                           11232 * gkafka\\librdkafka\\src\\rdbuf.c", 1411, "r == ((&sub)->end - (&sub)\
                                           11233 * ->start)")); return 1; } } while (0);
00007A8C                                   11234 @L475    DS    0H
00007A8C E3F0 D0F0 0004          000000F0  11235          LG    15,240(0,13) ; offset of end in rd_slice_s
00007A92 E3F0 D0E8 000B          000000E8  11236          SLG   15,232(0,13)
00007A98 B921 002F                         11237          CLGR  2,15
00007A9C 4780 C740               00007BA8  11238          BE    @L478
00007AA0 E330 C110 0016          00007578  11239          LLGF  3,@lit_852_531 ; __stderrp
00007AA6 E3F3 6000 0004          00000000  11240          LG    15,0(3,6)   ; __stderrp
00007AAC E3F0 D520 0024          00000520  11241          STG   15,1312(0,13)
00007AB2 E340 C108 0004          00007570  11242          LG    4,@lit_852_532
00007AB8 41F0 4BE0               00000BE0  11243          LA    15,3040(0,4)
00007ABC E3F0 D528 0024          00000528  11244          STG   15,1320(0,13)
00007AC2 41F0 4040               00000040  11245          LA    15,64(0,4)
00007AC6 E3F0 D530 0024          00000530  11246          STG   15,1328(0,13)
00007ACC E548 D538 0583          00000538  11247          MVGHI 1336(13),1411
00007AD2 E350 C100 0004          00007568  11248          LG    5,@lit_852_533
00007AD8 41F0 518C               0000018C  11249          LA    15,396(0,5)
00007ADC E3F0 D540 0024          00000540  11250          STG   15,1344(0,13)
00007AE2 4110 D520               00000520  11251          LA    1,1312(0,13)
00007AE6 E370 C0F8 0004          00007560  11252          LG    7,@lit_852_534 ; fprintf
00007AEC B904 00F7                         11253          LGR   15,7
00007AF0                                   11254 @@gen_label706 DS    0H
00007AF0 05EF                              11255          BALR  14,15
00007AF2                                   11256 @@gen_label707 DS    0H
00007AF2 E3F3 6000 0004          00000000  11257          LG    15,0(3,6)   ; __stderrp
00007AF8 E3F0 D520 0024          00000520  11258          STG   15,1312(0,13)
00007AFE 41F0 4C26               00000C26  11259          LA    15,3110(0,4)
00007B02 E3F0 D528 0024          00000528  11260          STG   15,1320(0,13)
00007B08 E320 D530 0024          00000530  11261          STG   2,1328(0,13)
00007B0E E3F0 D0F0 0004          000000F0  11262          LG    15,240(0,13) ; offset of end in rd_slice_s
00007B14 E3F0 D0E8 000B          000000E8  11263          SLG   15,232(0,13)
00007B1A E3F0 D538 0024          00000538  11264          STG   15,1336(0,13)
00007B20 4110 D520               00000520  11265          LA    1,1312(0,13)
00007B24 B904 00F7                         11266          LGR   15,7
00007B28                                   11267 @@gen_label708 DS    0H
00007B28 05EF                              11268          BALR  14,15
                                                                                                                           Page  224 
  Active Usings: @REGION_852_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007B2A                                   11269 @@gen_label709 DS    0H
00007B2A E3F3 6000 0004          00000000  11270          LG    15,0(3,6)   ; __stderrp
00007B30 E3F0 D520 0024          00000520  11271          STG   15,1312(0,13)
00007B36 41F0 45A4               000005A4  11272          LA    15,1444(0,4)
00007B3A E3F0 D528 0024          00000528  11273          STG   15,1320(0,13)
00007B40 4110 D520               00000520  11274          LA    1,1312(0,13)
00007B44 B904 00F7                         11275          LGR   15,7
00007B48                                   11276 @@gen_label710 DS    0H
00007B48 05EF                              11277          BALR  14,15
00007B4A                                   11278 @@gen_label711 DS    0H
00007B4A E3F0 C114 0016          0000757C  11279          LLGF  15,@lit_852_539 ; rd_unittest_assert_on_failure
00007B50 41FF 6000               00000000  11280          LA    15,0(15,6)
00007B54 9500 F000      00000000 00000000  11281          CLI   0(15),0
00007B58 4780 C738               00007BA0  11282          BE    @L479
00007B5C E3F0 D0F0 0004          000000F0  11283          LG    15,240(0,13) ; offset of end in rd_slice_s
00007B62 E3F0 D0E8 000B          000000E8  11284          SLG   15,232(0,13)
00007B68 B921 002F                         11285          CLGR  2,15
00007B6C 4780 C738               00007BA0  11286          BE    @L479
00007B70                                   11287 @L480    DS    0H
00007B70 41F0 518C               0000018C  11288          LA    15,396(0,5)
00007B74 E3F0 D520 0024          00000520  11289          STG   15,1312(0,13)
00007B7A 41F0 4040               00000040  11290          LA    15,64(0,4)
00007B7E E3F0 D528 0024          00000528  11291          STG   15,1320(0,13)
00007B84 E548 D530 0583          00000530  11292          MVGHI 1328(13),1411
00007B8A 41F0 4C4A               00000C4A  11293          LA    15,3146(0,4)
00007B8E E3F0 D538 0024          00000538  11294          STG   15,1336(0,13)
00007B94 4110 D520               00000520  11295          LA    1,1312(0,13)
00007B98 E3F0 C118 0004          00007580  11296          LG    15,@lit_852_540 ; __assert
00007B9E                                   11297 @@gen_label714 DS    0H
00007B9E 05EF                              11298          BALR  14,15
00007BA0                                   11299 @@gen_label715 DS    0H
00007BA0                                   11300 @L481    DS    0H
00007BA0                                   11301 @L479    DS    0H
00007BA0 A7F9 0001               00000001  11302          LGHI  15,1        ; 1
00007BA4 47F0 C85C               00007CC4  11303          B     @ret_lab_852
00007BA8                                   11304 @L478    DS    0H
                                           11305 * ***
                                           11306 * ***
                                           11307 * ***           r = ((&sub)->end - rd_slice_abs_offset(&sub));
00007BA8 E320 D0F0 0004          000000F0  11308          LG    2,240(0,13) ; offset of end in rd_slice_s
00007BAE 41F0 D0D0               000000D0  11309          LA    15,208(0,13)
00007BB2 E3F0 D520 0024          00000520  11310          STG   15,1312(0,13)
00007BB8 4110 D520               00000520  11311          LA    1,1312(0,13)
00007BBC E3F0 C120 0004          00007588  11312          LG    15,@lit_852_553 ; rd_slice_abs_offset
00007BC2                                   11313 @@gen_label716 DS    0H
00007BC2 05EF                              11314          BALR  14,15
00007BC4                                   11315 @@gen_label717 DS    0H
00007BC4 B90B 002F                         11316          SLGR  2,15
                                           11317 * ***           do { if (!(r == 0)) { fprintf(__stderrp, "\033[31mRDUT\
                                           11318 * : FAIL: %s:%d: %s: " "assert failed: " "r == 0" ": ", "C:\\asgkafka\\
                                           11319 * \librdkafka\\src\\rdbuf.c", 1415, __FUNCTION__); fprintf(__stderrp, \
                                           11320 * "sub: remains() returned %" "zu" ", not %" "zu", r, (size_t)0); fpri\
                                                                                                                           Page  225 
  Active Usings: @REGION_852_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11321 * ntf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r \
                                           11322 * == 0) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\
                                           11323 * \rdbuf.c", 1415, "r == 0")); return 1; } } while (0);
00007BC8                                   11324 @L482    DS    0H
00007BC8 B902 00F2                         11325          LTGR  15,2
00007BCC 4780 C858               00007CC0  11326          BE    @L485
00007BD0 E330 C110 0016          00007578  11327          LLGF  3,@lit_852_531 ; __stderrp
00007BD6 E3F3 6000 0004          00000000  11328          LG    15,0(3,6)   ; __stderrp
00007BDC E3F0 D520 0024          00000520  11329          STG   15,1312(0,13)
00007BE2 E340 C108 0004          00007570  11330          LG    4,@lit_852_532
00007BE8 41F0 4552               00000552  11331          LA    15,1362(0,4)
00007BEC E3F0 D528 0024          00000528  11332          STG   15,1320(0,13)
00007BF2 41F0 4040               00000040  11333          LA    15,64(0,4)
00007BF6 E3F0 D530 0024          00000530  11334          STG   15,1328(0,13)
00007BFC E548 D538 0587          00000538  11335          MVGHI 1336(13),1415
00007C02 E350 C100 0004          00007568  11336          LG    5,@lit_852_533
00007C08 41F0 518C               0000018C  11337          LA    15,396(0,5)
00007C0C E3F0 D540 0024          00000540  11338          STG   15,1344(0,13)
00007C12 4110 D520               00000520  11339          LA    1,1312(0,13)
00007C16 E370 C0F8 0004          00007560  11340          LG    7,@lit_852_534 ; fprintf
00007C1C B904 00F7                         11341          LGR   15,7
00007C20                                   11342 @@gen_label719 DS    0H
00007C20 05EF                              11343          BALR  14,15
00007C22                                   11344 @@gen_label720 DS    0H
00007C22 E3F3 6000 0004          00000000  11345          LG    15,0(3,6)   ; __stderrp
00007C28 E3F0 D520 0024          00000520  11346          STG   15,1312(0,13)
00007C2E 41F0 4B86               00000B86  11347          LA    15,2950(0,4)
00007C32 E3F0 D528 0024          00000528  11348          STG   15,1320(0,13)
00007C38 E320 D530 0024          00000530  11349          STG   2,1328(0,13)
00007C3E D707 D538 D538 00000538 00000538  11350          XC    1336(8,13),1336(13)
00007C44 4110 D520               00000520  11351          LA    1,1312(0,13)
00007C48 B904 00F7                         11352          LGR   15,7
00007C4C                                   11353 @@gen_label721 DS    0H
00007C4C 05EF                              11354          BALR  14,15
00007C4E                                   11355 @@gen_label722 DS    0H
00007C4E E3F3 6000 0004          00000000  11356          LG    15,0(3,6)   ; __stderrp
00007C54 E3F0 D520 0024          00000520  11357          STG   15,1312(0,13)
00007C5A 41F0 45A4               000005A4  11358          LA    15,1444(0,4)
00007C5E E3F0 D528 0024          00000528  11359          STG   15,1320(0,13)
00007C64 4110 D520               00000520  11360          LA    1,1312(0,13)
00007C68 B904 00F7                         11361          LGR   15,7
00007C6C                                   11362 @@gen_label723 DS    0H
00007C6C 05EF                              11363          BALR  14,15
00007C6E                                   11364 @@gen_label724 DS    0H
00007C6E E3F0 C114 0016          0000757C  11365          LLGF  15,@lit_852_539 ; rd_unittest_assert_on_failure
00007C74 41FF 6000               00000000  11366          LA    15,0(15,6)
00007C78 9500 F000      00000000 00000000  11367          CLI   0(15),0
00007C7C 4780 C850               00007CB8  11368          BE    @L486
00007C80 B902 00F2                         11369          LTGR  15,2
00007C84 4780 C850               00007CB8  11370          BE    @L486
00007C88                                   11371 @L487    DS    0H
00007C88 41F0 518C               0000018C  11372          LA    15,396(0,5)
                                                                                                                           Page  226 
  Active Usings: @REGION_852_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007C8C E3F0 D520 0024          00000520  11373          STG   15,1312(0,13)
00007C92 41F0 4040               00000040  11374          LA    15,64(0,4)
00007C96 E3F0 D528 0024          00000528  11375          STG   15,1320(0,13)
00007C9C E548 D530 0587          00000530  11376          MVGHI 1328(13),1415
00007CA2 41F0 42F2               000002F2  11377          LA    15,754(0,4)
00007CA6 E3F0 D538 0024          00000538  11378          STG   15,1336(0,13)
00007CAC 4110 D520               00000520  11379          LA    1,1312(0,13)
00007CB0 E3F0 C118 0004          00007580  11380          LG    15,@lit_852_540 ; __assert
00007CB6                                   11381 @@gen_label727 DS    0H
00007CB6 05EF                              11382          BALR  14,15
00007CB8                                   11383 @@gen_label728 DS    0H
00007CB8                                   11384 @L488    DS    0H
00007CB8                                   11385 @L486    DS    0H
00007CB8 A7F9 0001               00000001  11386          LGHI  15,1        ; 1
00007CBC 47F0 C85C               00007CC4  11387          B     @ret_lab_852
00007CC0                                   11388 @L485    DS    0H
                                           11389 * ***
                                           11390 * ***
                                           11391 * ***
                                           11392 * ***           return 0;
00007CC0 A7F9 0000               00000000  11393          LGHI  15,0        ; 0
                                           11394 * ***   }
00007CC4                                   11395 @ret_lab_852 DS 0H
00007CC4 E3C0 C138 001A          000075A0  11396          ALGF  12,@lit_region_diff_852_2_3
00007CCA                                   11397 @REGION_852_3 DS 0H
                                           11398          DROP  12
                        00007CCA           11399          USING @REGION_852_3,12
                                           11400 * * **** Start of Epilogue
                                           11401          DCCEPIL
00007CCA                                   11402+         ds 0h                                                          01-DCCEP
                                           11403+* Epilog
00007CCA D707 D088 D088 00000088 00000088  11404+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00007CD0 E3D0 D080 0004          00000080  11405+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00007CD6 E3C0 D090 0004          00000090  11406+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00007CDC E3B0 C018 0004          00000018  11407+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00007CE2 E3C0 B010 0021          00000010  11408+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00007CE8 E3E0 D008 0004          00000008  11409+         lg  14,8(0,13)          load up return address                 01-DCCEP
00007CEE EB1C D020 0004          00000020  11410+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00007CF4 078E                              11411+         bcr 8,14                if same dsab, just return              01-DCCEP
00007CF6 E3F0 D010 0024          00000010  11412+         stg 15,16(0,13)         save return code                       01-DCCEP
00007CFC E300 D018 0024          00000018  11413+         stg 0,24(0,13)          save more return code                  01-DCCEP
00007D02 E3F0 D090 0004          00000090  11414+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00007D08 E3F0 F018 0004          00000018  11415+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00007D0E 47F0 F040               00000040  11416+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           11417+* End of Epilog
                                           11418 * * **** End of Epilogue
                                           11419          DROP  12
                                           11420 *
                                           11421 *   DSECT for automatic variables in "do_unittest_read_verify0"
                                           11422 *      (FUNCTION #852)
                                           11423 *
00000000                00000000 000004F8  11424 @AUTO#do_unittest_read_verify0 DSECT
                                                                                                                           Page  227 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                                   11425          DS    XL168
000000A8                                   11426 do_unittest_read_verify0#i#0 DS 1F ; i
000000AC                000000AC 000000A8  11427          ORG   @AUTO#do_unittest_read_verify0+168
000000A8                                   11428 do_unittest_read_verify0#r#0 DS 8XL1 ; r
000000B0                000000B0 000000A8  11429          ORG   @AUTO#do_unittest_read_verify0+168
000000A8                                   11430 do_unittest_read_verify0#half#0 DS 8XL1 ; half
000000B0                000000B0 000000A8  11431          ORG   @AUTO#do_unittest_read_verify0+168
000000A8                                   11432 do_unittest_read_verify0#slice#0 DS 40XL1 ; slice
000000D0                000000D0 000000D0  11433          ORG   @AUTO#do_unittest_read_verify0+208
000000D0                                   11434 do_unittest_read_verify0#sub#0 DS 40XL1 ; sub
000000F8                000000F8 000000F8  11435          ORG   @AUTO#do_unittest_read_verify0+248
000000F8                                   11436 do_unittest_read_verify0#buf#0 DS 1024XL1 ; buf
                                           11437 *
00007D12                00000000 0000BFA0  11438 @CODE    CSECT
                                           11439 *
                                           11440 *
                                           11441 *
                                           11442 * ....... start of do_unittest_write_split_seek
00007D12                                   11443 @LNAME853 DS   0H
00007D12 0000001C                          11444          DC    X'0000001C'
00007D16 84966DA49589A3A3                  11445          DC    C'do_unittest_write_split_seek'
00007D32 00                                11446          DC    X'00'
                                           11447 do_unittest_write_split_seek DCCPRLG CINDEX=853,BASER=12,FRAME=6648,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME853
                                           11448          macro
                                           11449          dccextrn &m
                                           11450          gblc    &$dccext(1000)
                                           11451          gbla    &$dccexti
                                           11452          lcla    &i
                                           11453 &$dccext(&$dccexti+1) setc    '&m'
                                           11454 &i       seta    1
                                           11455 .loop    aif    (&i gt &$dccexti).around
                                           11456          aif    ('&$dccext(&i)' eq '&m').getout
                                           11457 &i       seta    &i+1
                                           11458          ago     .loop
                                           11459 .around  anop
                                           11460 &$dccexti seta &$dccexti+1
                                           11461          extrn  &m
                                           11462 .getout  anop
                                           11463          mend
00007D38                                   11464+$eye0189    ds    0d                                                    02-DCCCA
00007D38 C4C3C3                            11465+         dc cl3'DCC'                                                    02-DCCCA
00007D3B 01                                11466+         dc xl1'01' format one                                          02-DCCCA
00007D3C 00000000                          11467+         dc a(0)                                                        02-DCCCA
00007D40 0000000000007DAA                  11468+         dc ad(@PER_853)                                                02-DCCCA
00007D48 00000000000019F8                  11469+         dc ad(6648)                                                    02-DCCCA
00007D50 0000000000000000                  11470+         dc ad(0)                                                       02-DCCCA
00007D58 0000000000001000                  11471+         dc ad(4096)                                                    02-DCCCA
00007D60 20                                11472+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00007D61 03                                11473+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00007D62 03                                11474+         dc al1(3)                                                      02-DCCCA
00007D63 08                                11475+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page  228 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007D64 00                                11476+         dc bl.8'00000000'                                              02-DCCCA
00007D65 000000                            11477+         dc al3(0)                                                      02-DCCCA
00007D68 0000000000007D12                  11478+         dc ad(@LNAME853)                                               02-DCCCA
00007D70                                   11479+         ds 0d                                                          02-DCCCA
00007D70 0000000000007D38                  11480+         dc ad($eye0189)                                                02-DCCCA
00007D78 0000000000000000                  11481+         dc ad(0)                                                       02-DCCCA
00007D80                                   11482+         ds    0d                                                       01-DCCPR
00007D80                                   11483+do_unittest_write_split_seek ds 0d                                      01-DCCPR
00007D80                                   11484+@REGION_853_1 ds 0h                                                     01-DCCPR
00007D80 EBEC D008 0024          00000008  11485+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00007D86 E3E0 D088 0004          00000088  11486+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00007D8C E3C0 D090 0004          00000090  11487+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00007D92 B904 002E                         11488+         lgr   2,14                copy addr of our savearea            01-DCCPR
00007D96 E3B0 C018 0004          00000018  11489+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00007D9C A7EB 19F8               000019F8  11490+         aghi  14,6648             increase by frame size               01-DCCPR
00007DA0 E3E0 C020 0021          00000020  11491+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00007DA6 4720 B020               00000020  11492+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00007DAA                                   11493+@PER_853 ds    0h                                                       01-DCCPR
00007DAA EBDE 2080 0024          00000080  11494+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00007DB0 E3C0 2090 0024          00000090  11495+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00007DB6 B904 00D2                         11496+         lgr   13,2                set real frame pointer               01-DCCPR
00007DBA B904 00CF                         11497+         lgr   12,15               set base reg                         01-DCCPR
                        00007D80           11498+         using @REGION_853_1,12                                         01-DCCPR
                                           11499          DCCPRV REG=5      ; Get PRV from DVT
00007DBE E350 B008 0004          00000008  11500+         LG 5,8(0,11)                                                   01-DCCPR
                                           11501 * ******* End of Prologue
                                           11502 * *
                                           11503 * ***           rd_buf_t b;
                                           11504 * ***           char ones[1024];
                                           11505 * ***           char twos[1024];
                                           11506 * ***           char threes[1024];
                                           11507 * ***           char fiftyfives[100];
                                           11508 * ***           char buf[1024*3];
                                           11509 * ***           size_t r, pos;
                                           11510 * ***           rd_segment_t *seg, *newseg;
                                           11511 * ***
                                           11512 * ***           __memset(ones,0x1,sizeof(ones));
00007DC4 41F0 D168               00000168  11513          LA    15,360(0,13)
                                           11514 * setting 1024 bytes to 0x01
00007DC8 9201 F000      00000000 00000001  11515          MVI   0(15),1
00007DCC D2FF F001 F000 00000001 00000000  11516          MVC   1(256,15),0(15)
00007DD2 41F0 F100               00000100  11517          LA    15,256(0,15)
00007DD6 D2FF F001 F000 00000001 00000000  11518          MVC   1(256,15),0(15)
00007DDC 41F0 F100               00000100  11519          LA    15,256(0,15)
00007DE0 D2FF F001 F000 00000001 00000000  11520          MVC   1(256,15),0(15)
00007DE6 41F0 F100               00000100  11521          LA    15,256(0,15)
00007DEA D2FE F001 F000 00000001 00000000  11522          MVC   1(255,15),0(15)
                                           11523 * ***           __memset(twos,0x2,sizeof(twos));
00007DF0 41F0 D568               00000568  11524          LA    15,1384(0,13)
                                           11525 * setting 1024 bytes to 0x02
00007DF4 9202 F000      00000000 00000002  11526          MVI   0(15),2
00007DF8 D2FF F001 F000 00000001 00000000  11527          MVC   1(256,15),0(15)
                                                                                                                           Page  229 
  Active Usings: @REGION_853_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007DFE 41F0 F100               00000100  11528          LA    15,256(0,15)
00007E02 D2FF F001 F000 00000001 00000000  11529          MVC   1(256,15),0(15)
00007E08 41F0 F100               00000100  11530          LA    15,256(0,15)
00007E0C D2FF F001 F000 00000001 00000000  11531          MVC   1(256,15),0(15)
00007E12 41F0 F100               00000100  11532          LA    15,256(0,15)
00007E16 D2FE F001 F000 00000001 00000000  11533          MVC   1(255,15),0(15)
                                           11534 * ***           __memset(threes,0x3,sizeof(threes));
00007E1C 41F0 D968               00000968  11535          LA    15,2408(0,13)
                                           11536 * setting 1024 bytes to 0x03
00007E20 9203 F000      00000000 00000003  11537          MVI   0(15),3
00007E24 D2FF F001 F000 00000001 00000000  11538          MVC   1(256,15),0(15)
00007E2A 41F0 F100               00000100  11539          LA    15,256(0,15)
00007E2E D2FF F001 F000 00000001 00000000  11540          MVC   1(256,15),0(15)
00007E34 41F0 F100               00000100  11541          LA    15,256(0,15)
00007E38 D2FF F001 F000 00000001 00000000  11542          MVC   1(256,15),0(15)
00007E3E 41F0 F100               00000100  11543          LA    15,256(0,15)
00007E42 D2FE F001 F000 00000001 00000000  11544          MVC   1(255,15),0(15)
                                           11545 * ***           __memset(fiftyfives,0x55,sizeof(fiftyfives));
00007E48 B904 00FD                         11546          LGR   15,13
00007E4C A7FB 1000               00001000  11547          AGHI  15,4096
00007E50 41F0 F968               00000968  11548          LA    15,2408(0,15)
                                           11549 * setting 100 bytes to 0x55
00007E54 9255 F000      00000000 00000055  11550          MVI   0(15),85
00007E58 D262 F001 F000 00000001 00000000  11551          MVC   1(99,15),0(15)
                                           11552 * ***           __memset(buf,0x55,sizeof(buf));
00007E5E 41F0 DD68               00000D68  11553          LA    15,3432(0,13)
                                           11554 * setting 3072 bytes to 0x55
00007E62 9255 F000      00000000 00000055  11555          MVI   0(15),85
00007E66 A719 000B               0000000B  11556          LGHI  1,11        ; 11
00007E6A                                   11557 @@gen_label729 DS 0H
00007E6A D2FF F001 F000 00000001 00000000  11558          MVC   1(256,15),0(15)
00007E70 41F0 F100               00000100  11559          LA    15,256(0,15)
00007E74 E310 C0EA 0046          00007E6A  11560          BCTG  1,@@gen_label729
00007E7A D2FE F001 F000 00000001 00000000  11561          MVC   1(255,15),0(15)
                                           11562 * ***
                                           11563 * ***           rd_buf_init(&b, 0, 0);
00007E80 41F0 D118               00000118  11564          LA    15,280(0,13)
00007E84 B904 002D                         11565          LGR   2,13
00007E88 A72B 1000               00001000  11566          AGHI  2,4096
00007E8C E3F0 29D0 0024          000009D0  11567          STG   15,2512(0,2)
00007E92 D70F 29D8 29D8 000009D8 000009D8  11568          XC    2520(16,2),2520(2)
00007E98 4110 29D0               000009D0  11569          LA    1,2512(0,2)
00007E9C E3F0 C258 0004          00007FD8  11570          LG    15,@lit_853_626 ; rd_buf_init
00007EA2                                   11571 @@gen_label730 DS    0H
00007EA2 05EF                              11572          BALR  14,15
00007EA4                                   11573 @@gen_label731 DS    0H
                                           11574 * ***
                                           11575 * ***
                                           11576 * ***
                                           11577 * ***
                                           11578 * ***           r = rd_buf_write(&b, ones, 400);
00007EA4 41F0 D118               00000118  11579          LA    15,280(0,13)
                                                                                                                           Page  230 
  Active Usings: @REGION_853_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007EA8 E3F0 29D0 0024          000009D0  11580          STG   15,2512(0,2)
00007EAE 41F0 D168               00000168  11581          LA    15,360(0,13)
00007EB2 E3F0 29D8 0024          000009D8  11582          STG   15,2520(0,2)
00007EB8 E548 29E0 0190          000009E0  11583          MVGHI 2528(2),400
00007EBE 4110 29D0               000009D0  11584          LA    1,2512(0,2)
00007EC2 E3F0 C260 0004          00007FE0  11585          LG    15,@lit_853_627 ; rd_buf_write
00007EC8                                   11586 @@gen_label732 DS    0H
00007EC8 05EF                              11587          BALR  14,15
00007ECA                                   11588 @@gen_label733 DS    0H
00007ECA B904 004F                         11589          LGR   4,15        ; r
                                           11590 * ***           do { if (!(r == 0)) { fprintf(__stderrp, "\033[31mRDUT\
                                           11591 * : FAIL: %s:%d: %s: " "assert failed: " "r == 0" ": ", "C:\\asgkafka\\
                                           11592 * \librdkafka\\src\\rdbuf.c", 1448, __FUNCTION__); fprintf(__stderrp, \
                                           11593 * "write() returned position %" "zu", r); fprintf(__stderrp, "\033[0m\\
                                           11594 * n"); if (rd_unittest_assert_on_failure) ((r == 0) ? (void)0 : __asse\
                                           11595 * rt(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1448, "r == 0\
                                           11596 * ")); return 1; } } while (0);
00007ECE                                   11597 @L489    DS    0H
00007ECE B902 00F4                         11598          LTGR  15,4
00007ED2 4780 C2B4               00008034  11599          BE    @L492
00007ED6 E330 C280 0016          00008000  11600          LLGF  3,@lit_853_628 ; __stderrp
00007EDC E3F3 5000 0004          00000000  11601          LG    15,0(3,5)   ; __stderrp
00007EE2 B904 002D                         11602          LGR   2,13
00007EE6 A72B 1000               00001000  11603          AGHI  2,4096
00007EEA E3F0 29D0 0024          000009D0  11604          STG   15,2512(0,2)
00007EF0 E360 C278 0004          00007FF8  11605          LG    6,@lit_853_629
00007EF6 41F0 6552               00000552  11606          LA    15,1362(0,6)
00007EFA E3F0 29D8 0024          000009D8  11607          STG   15,2520(0,2)
00007F00 41F0 6040               00000040  11608          LA    15,64(0,6)
00007F04 E3F0 29E0 0024          000009E0  11609          STG   15,2528(0,2)
00007F0A E548 29E8 05A8          000009E8  11610          MVGHI 2536(2),1448
00007F10 E370 C270 0004          00007FF0  11611          LG    7,@lit_853_630
00007F16 41F0 71A6               000001A6  11612          LA    15,422(0,7)
00007F1A E3F0 29F0 0024          000009F0  11613          STG   15,2544(0,2)
00007F20 4110 29D0               000009D0  11614          LA    1,2512(0,2)
00007F24 E380 C268 0004          00007FE8  11615          LG    8,@lit_853_631 ; fprintf
00007F2A B904 00F8                         11616          LGR   15,8
00007F2E                                   11617 @@gen_label735 DS    0H
00007F2E 05EF                              11618          BALR  14,15
00007F30                                   11619 @@gen_label736 DS    0H
00007F30 E3F3 5000 0004          00000000  11620          LG    15,0(3,5)   ; __stderrp
00007F36 E3F0 29D0 0024          000009D0  11621          STG   15,2512(0,2)
00007F3C 41F0 6586               00000586  11622          LA    15,1414(0,6)
00007F40 E3F0 29D8 0024          000009D8  11623          STG   15,2520(0,2)
00007F46 E340 29E0 0024          000009E0  11624          STG   4,2528(0,2)
00007F4C 4110 29D0               000009D0  11625          LA    1,2512(0,2)
00007F50 B904 00F8                         11626          LGR   15,8
00007F54                                   11627 @@gen_label737 DS    0H
00007F54 05EF                              11628          BALR  14,15
00007F56                                   11629 @@gen_label738 DS    0H
00007F56 E3F3 5000 0004          00000000  11630          LG    15,0(3,5)   ; __stderrp
00007F5C E3F0 29D0 0024          000009D0  11631          STG   15,2512(0,2)
                                                                                                                           Page  231 
  Active Usings: @REGION_853_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007F62 41F0 65A4               000005A4  11632          LA    15,1444(0,6)
00007F66 E3F0 29D8 0024          000009D8  11633          STG   15,2520(0,2)
00007F6C 4110 29D0               000009D0  11634          LA    1,2512(0,2)
00007F70 B904 00F8                         11635          LGR   15,8
00007F74                                   11636 @@gen_label739 DS    0H
00007F74 05EF                              11637          BALR  14,15
00007F76                                   11638 @@gen_label740 DS    0H
00007F76 E3F0 C284 0016          00008004  11639          LLGF  15,@lit_853_636 ; rd_unittest_assert_on_failure
00007F7C 41FF 5000               00000000  11640          LA    15,0(15,5)
00007F80 9500 F000      00000000 00000000  11641          CLI   0(15),0
00007F84 4780 C240               00007FC0  11642          BE    @L493
00007F88 B902 00F4                         11643          LTGR  15,4
00007F8C 4780 C240               00007FC0  11644          BE    @L493
00007F90                                   11645 @L494    DS    0H
00007F90 41F0 71A6               000001A6  11646          LA    15,422(0,7)
00007F94 E3F0 29D0 0024          000009D0  11647          STG   15,2512(0,2)
00007F9A 41F0 6040               00000040  11648          LA    15,64(0,6)
00007F9E E3F0 29D8 0024          000009D8  11649          STG   15,2520(0,2)
00007FA4 E548 29E0 05A8          000009E0  11650          MVGHI 2528(2),1448
00007FAA 41F0 62F2               000002F2  11651          LA    15,754(0,6)
00007FAE E3F0 29E8 0024          000009E8  11652          STG   15,2536(0,2)
00007FB4 4110 29D0               000009D0  11653          LA    1,2512(0,2)
00007FB8 E3F0 C288 0004          00008008  11654          LG    15,@lit_853_637 ; __assert
00007FBE                                   11655 @@gen_label743 DS    0H
00007FBE 05EF                              11656          BALR  14,15
00007FC0                                   11657 @@gen_label744 DS    0H
00007FC0                                   11658 @L495    DS    0H
00007FC0                                   11659 @L493    DS    0H
00007FC0 A7F9 0001               00000001  11660          LGHI  15,1        ; 1
00007FC4 E3C0 C290 001A          00008010  11661          ALGF  12,@lit_region_diff_853_1_3
                                           11662          DROP  12
                        0000908A           11663          USING @REGION_853_3,12
00007FCA 47F0 C5E0               0000966A  11664          B     @ret_lab_853
                                           11665          DROP  12
                        00007D80           11666          USING @REGION_853_1,12
00007FD0                                   11667          DS    0D
00007FD0 000019F8                          11668 @FRAMESIZE_853 DC F'6648'
00007FD4 00000000
00007FD8 0000000000001E28                  11669 @lit_853_626 DC AD(rd_buf_init)
00007FE0 00000000000022A8                  11670 @lit_853_627 DC AD(rd_buf_write)
00007FE8 0000000000000000                  11671 @lit_853_631 DC AD(fprintf)
00007FF0 000000000000BFA0                  11672 @lit_853_630 DC AD(@DATA)
00007FF8 000000000000CB02                  11673 @lit_853_629 DC AD(@strings@)
00008000 00000000                          11674 @lit_853_628 DC Q(__stderrp)
00008004 00000000                          11675 @lit_853_636 DC Q(rd_unittest_assert_on_failure)
00008008 0000000000000000                  11676 @lit_853_637 DC AD(__assert)
00008010 0000130A                          11677 @lit_region_diff_853_1_3  DC A(@REGION_853_3-@REGION_853_1)
00008014 00000000
00008018 0000000000000438                  11678 @lit_853_639 DC AD(rd_buf_write_pos)
00008020 0000000000006BE8                  11679 @lit_853_651 DC AD(do_unittest_read_verify0)
00008028 00000000000030C8                  11680 @lit_853_663 DC AD(rd_buf_write_seek)
00008030 00000918                          11681 @lit_region_diff_853_1_2  DC A(@REGION_853_2-@REGION_853_1)
                                                                                                                           Page  232 
  Active Usings: @REGION_853_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008034                                   11682 @L492    DS    0H
                                           11683 * ***           pos = rd_buf_write_pos(&b);
00008034 41F0 D118               00000118  11684          LA    15,280(0,13)
00008038 B904 001D                         11685          LGR   1,13
0000803C A71B 1000               00001000  11686          AGHI  1,4096
00008040 E3F0 19D0 0024          000009D0  11687          STG   15,2512(0,1)
00008046 4110 19D0               000009D0  11688          LA    1,2512(0,1)
0000804A E3F0 C298 0004          00008018  11689          LG    15,@lit_853_639 ; rd_buf_write_pos
00008050                                   11690 @@gen_label745 DS    0H
00008050 05EF                              11691          BALR  14,15
00008052                                   11692 @@gen_label746 DS    0H
00008052 B904 003F                         11693          LGR   3,15        ; pos
                                           11694 * ***           do { if (!(pos == 400)) { fprintf(__stderrp, "\033[31m\
                                           11695 * RDUT: FAIL: %s:%d: %s: " "assert failed: " "pos == 400" ": ", "C:\\a\
                                           11696 * sgkafka\\librdkafka\\src\\rdbuf.c", 1450, __FUNCTION__); fprintf(__s\
                                           11697 * tderrp, "pos() returned position %" "zu", pos); fprintf(__stderrp, "\
                                           11698 * \033[0m\n"); if (rd_unittest_assert_on_failure) ((pos == 400) ? (voi\
                                           11699 * d)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1\
                                           11700 * 450, "pos == 400")); return 1; } } while (0);
00008056                                   11701 @L496    DS    0H
00008056 A73F 0190               00000190  11702          CGHI  3,400
0000805A 4780 C3D6               00008156  11703          BE    @L499
0000805E E340 C280 0016          00008000  11704          LLGF  4,@lit_853_628 ; __stderrp
00008064 E3F4 5000 0004          00000000  11705          LG    15,0(4,5)   ; __stderrp
0000806A B904 002D                         11706          LGR   2,13
0000806E A72B 1000               00001000  11707          AGHI  2,4096
00008072 E3F0 29D0 0024          000009D0  11708          STG   15,2512(0,2)
00008078 E360 C278 0004          00007FF8  11709          LG    6,@lit_853_629
0000807E 41F0 6C6E               00000C6E  11710          LA    15,3182(0,6)
00008082 E3F0 29D8 0024          000009D8  11711          STG   15,2520(0,2)
00008088 41F0 6040               00000040  11712          LA    15,64(0,6)
0000808C E3F0 29E0 0024          000009E0  11713          STG   15,2528(0,2)
00008092 E548 29E8 05AA          000009E8  11714          MVGHI 2536(2),1450
00008098 E370 C270 0004          00007FF0  11715          LG    7,@lit_853_630
0000809E 41F0 71A6               000001A6  11716          LA    15,422(0,7)
000080A2 E3F0 29F0 0024          000009F0  11717          STG   15,2544(0,2)
000080A8 4110 29D0               000009D0  11718          LA    1,2512(0,2)
000080AC E380 C268 0004          00007FE8  11719          LG    8,@lit_853_631 ; fprintf
000080B2 B904 00F8                         11720          LGR   15,8
000080B6                                   11721 @@gen_label748 DS    0H
000080B6 05EF                              11722          BALR  14,15
000080B8                                   11723 @@gen_label749 DS    0H
000080B8 E3F4 5000 0004          00000000  11724          LG    15,0(4,5)   ; __stderrp
000080BE E3F0 29D0 0024          000009D0  11725          STG   15,2512(0,2)
000080C4 41F0 65E2               000005E2  11726          LA    15,1506(0,6)
000080C8 E3F0 29D8 0024          000009D8  11727          STG   15,2520(0,2)
000080CE E330 29E0 0024          000009E0  11728          STG   3,2528(0,2)
000080D4 4110 29D0               000009D0  11729          LA    1,2512(0,2)
000080D8 B904 00F8                         11730          LGR   15,8
000080DC                                   11731 @@gen_label750 DS    0H
000080DC 05EF                              11732          BALR  14,15
000080DE                                   11733 @@gen_label751 DS    0H
                                                                                                                           Page  233 
  Active Usings: @REGION_853_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000080DE E3F4 5000 0004          00000000  11734          LG    15,0(4,5)   ; __stderrp
000080E4 E3F0 29D0 0024          000009D0  11735          STG   15,2512(0,2)
000080EA 41F0 65A4               000005A4  11736          LA    15,1444(0,6)
000080EE E3F0 29D8 0024          000009D8  11737          STG   15,2520(0,2)
000080F4 4110 29D0               000009D0  11738          LA    1,2512(0,2)
000080F8 B904 00F8                         11739          LGR   15,8
000080FC                                   11740 @@gen_label752 DS    0H
000080FC 05EF                              11741          BALR  14,15
000080FE                                   11742 @@gen_label753 DS    0H
000080FE E3F0 C284 0016          00008004  11743          LLGF  15,@lit_853_636 ; rd_unittest_assert_on_failure
00008104 41FF 5000               00000000  11744          LA    15,0(15,5)
00008108 9500 F000      00000000 00000000  11745          CLI   0(15),0
0000810C 4780 C3C8               00008148  11746          BE    @L500
00008110 A73F 0190               00000190  11747          CGHI  3,400
00008114 4780 C3C8               00008148  11748          BE    @L500
00008118                                   11749 @L501    DS    0H
00008118 41F0 71A6               000001A6  11750          LA    15,422(0,7)
0000811C E3F0 29D0 0024          000009D0  11751          STG   15,2512(0,2)
00008122 41F0 6040               00000040  11752          LA    15,64(0,6)
00008126 E3F0 29D8 0024          000009D8  11753          STG   15,2520(0,2)
0000812C E548 29E0 05AA          000009E0  11754          MVGHI 2528(2),1450
00008132 41F0 6CA6               00000CA6  11755          LA    15,3238(0,6)
00008136 E3F0 29E8 0024          000009E8  11756          STG   15,2536(0,2)
0000813C 4110 29D0               000009D0  11757          LA    1,2512(0,2)
00008140 E3F0 C288 0004          00008008  11758          LG    15,@lit_853_637 ; __assert
00008146                                   11759 @@gen_label756 DS    0H
00008146 05EF                              11760          BALR  14,15
00008148                                   11761 @@gen_label757 DS    0H
00008148                                   11762 @L502    DS    0H
00008148                                   11763 @L500    DS    0H
00008148 A7F9 0001               00000001  11764          LGHI  15,1        ; 1
0000814C E3C0 C290 001A          00008010  11765          ALGF  12,@lit_region_diff_853_1_3
                                           11766          DROP  12
                        0000908A           11767          USING @REGION_853_3,12
00008152 47F0 C5E0               0000966A  11768          B     @ret_lab_853
                                           11769          DROP  12
                        00007D80           11770          USING @REGION_853_1,12
00008156                                   11771 @L499    DS    0H
                                           11772 * ***
                                           11773 * ***           do { int __fail = do_unittest_read_verify0(&b,0,400,on\
                                           11774 * es); do { if (!(!__fail)) { fprintf(__stderrp, "\033[31mRDUT: FAIL: \
                                           11775 * %s:%d: %s: " "assert failed: " "!__fail" ": ", "C:\\asgkafka\\librdk\
                                           11776 * afka\\src\\rdbuf.c", 1452, __FUNCTION__); fprintf(__stderrp, "read_v\
                                           11777 * erify(absof=%" "zu" ",len=%" "zu" ") " "failed", (size_t)0, (size_t)\
                                           11778 * 400); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_fai\
                                           11779 * lure) ((!__fail) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librd\
                                           11780 * kafka\\src\\rdbuf.c", 1452, "!__fail")); return 1; } } while (0); } \
                                           11781 * while (0);
00008156                                   11782 @L503    DS    0H
00008156 41F0 D118               00000118  11783          LA    15,280(0,13)
0000815A B904 001D                         11784          LGR   1,13
0000815E A71B 1000               00001000  11785          AGHI  1,4096
                                                                                                                           Page  234 
  Active Usings: @REGION_853_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008162 E3F0 19D0 0024          000009D0  11786          STG   15,2512(0,1)
00008168 D707 19D8 19D8 000009D8 000009D8  11787          XC    2520(8,1),2520(1)
0000816E E548 19E0 0190          000009E0  11788          MVGHI 2528(1),400
00008174 41F0 D168               00000168  11789          LA    15,360(0,13)
00008178 E3F0 19E8 0024          000009E8  11790          STG   15,2536(0,1)
0000817E 4110 19D0               000009D0  11791          LA    1,2512(0,1)
00008182 E3F0 C2A0 0004          00008020  11792          LG    15,@lit_853_651 ; do_unittest_read_verify0
00008188                                   11793 @@gen_label758 DS    0H
00008188 05EF                              11794          BALR  14,15
0000818A                                   11795 @@gen_label759 DS    0H
0000818A 183F                              11796          LR    3,15
0000818C                                   11797 @L506    DS    0H
0000818C 1233                              11798          LTR   3,3
0000818E 4780 C50E               0000828E  11799          BZ    @L509
00008192 E340 C280 0016          00008000  11800          LLGF  4,@lit_853_628 ; __stderrp
00008198 E3F4 5000 0004          00000000  11801          LG    15,0(4,5)   ; __stderrp
0000819E B904 002D                         11802          LGR   2,13
000081A2 A72B 1000               00001000  11803          AGHI  2,4096
000081A6 E3F0 29D0 0024          000009D0  11804          STG   15,2512(0,2)
000081AC E360 C278 0004          00007FF8  11805          LG    6,@lit_853_629
000081B2 41F0 6CB2               00000CB2  11806          LA    15,3250(0,6)
000081B6 E3F0 29D8 0024          000009D8  11807          STG   15,2520(0,2)
000081BC 41F0 6040               00000040  11808          LA    15,64(0,6)
000081C0 E3F0 29E0 0024          000009E0  11809          STG   15,2528(0,2)
000081C6 E548 29E8 05AC          000009E8  11810          MVGHI 2536(2),1452
000081CC E370 C270 0004          00007FF0  11811          LG    7,@lit_853_630
000081D2 41F0 71A6               000001A6  11812          LA    15,422(0,7)
000081D6 E3F0 29F0 0024          000009F0  11813          STG   15,2544(0,2)
000081DC 4110 29D0               000009D0  11814          LA    1,2512(0,2)
000081E0 E380 C268 0004          00007FE8  11815          LG    8,@lit_853_631 ; fprintf
000081E6 B904 00F8                         11816          LGR   15,8
000081EA                                   11817 @@gen_label761 DS    0H
000081EA 05EF                              11818          BALR  14,15
000081EC                                   11819 @@gen_label762 DS    0H
000081EC E3F4 5000 0004          00000000  11820          LG    15,0(4,5)   ; __stderrp
000081F2 E3F0 29D0 0024          000009D0  11821          STG   15,2512(0,2)
000081F8 41F0 6CE8               00000CE8  11822          LA    15,3304(0,6)
000081FC E3F0 29D8 0024          000009D8  11823          STG   15,2520(0,2)
00008202 D707 29E0 29E0 000009E0 000009E0  11824          XC    2528(8,2),2528(2)
00008208 E548 29E8 0190          000009E8  11825          MVGHI 2536(2),400
0000820E 4110 29D0               000009D0  11826          LA    1,2512(0,2)
00008212 B904 00F8                         11827          LGR   15,8
00008216                                   11828 @@gen_label763 DS    0H
00008216 05EF                              11829          BALR  14,15
00008218                                   11830 @@gen_label764 DS    0H
00008218 E3F4 5000 0004          00000000  11831          LG    15,0(4,5)   ; __stderrp
0000821E E3F0 29D0 0024          000009D0  11832          STG   15,2512(0,2)
00008224 41F0 65A4               000005A4  11833          LA    15,1444(0,6)
00008228 E3F0 29D8 0024          000009D8  11834          STG   15,2520(0,2)
0000822E 4110 29D0               000009D0  11835          LA    1,2512(0,2)
00008232 B904 00F8                         11836          LGR   15,8
00008236                                   11837 @@gen_label765 DS    0H
                                                                                                                           Page  235 
  Active Usings: @REGION_853_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008236 05EF                              11838          BALR  14,15
00008238                                   11839 @@gen_label766 DS    0H
00008238 E3F0 C284 0016          00008004  11840          LLGF  15,@lit_853_636 ; rd_unittest_assert_on_failure
0000823E 41FF 5000               00000000  11841          LA    15,0(15,5)
00008242 9500 F000      00000000 00000000  11842          CLI   0(15),0
00008246 4780 C500               00008280  11843          BE    @L510
0000824A 1233                              11844          LTR   3,3
0000824C 4780 C500               00008280  11845          BZ    @L510
00008250                                   11846 @L511    DS    0H
00008250 41F0 71A6               000001A6  11847          LA    15,422(0,7)
00008254 E3F0 29D0 0024          000009D0  11848          STG   15,2512(0,2)
0000825A 41F0 6040               00000040  11849          LA    15,64(0,6)
0000825E E3F0 29D8 0024          000009D8  11850          STG   15,2520(0,2)
00008264 E548 29E0 05AC          000009E0  11851          MVGHI 2528(2),1452
0000826A 41F0 6D0E               00000D0E  11852          LA    15,3342(0,6)
0000826E E3F0 29E8 0024          000009E8  11853          STG   15,2536(0,2)
00008274 4110 29D0               000009D0  11854          LA    1,2512(0,2)
00008278 E3F0 C288 0004          00008008  11855          LG    15,@lit_853_637 ; __assert
0000827E                                   11856 @@gen_label769 DS    0H
0000827E 05EF                              11857          BALR  14,15
00008280                                   11858 @@gen_label770 DS    0H
00008280                                   11859 @L512    DS    0H
00008280                                   11860 @L510    DS    0H
00008280 A7F9 0001               00000001  11861          LGHI  15,1        ; 1
00008284 E3C0 C290 001A          00008010  11862          ALGF  12,@lit_region_diff_853_1_3
                                           11863          DROP  12
                        0000908A           11864          USING @REGION_853_3,12
0000828A 47F0 C5E0               0000966A  11865          B     @ret_lab_853
                                           11866          DROP  12
                        00007D80           11867          USING @REGION_853_1,12
0000828E                                   11868 @L509    DS    0H
                                           11869 * ***
                                           11870 * ***
                                           11871 * ***
                                           11872 * ***
                                           11873 * ***           r = rd_buf_write_seek(&b, 200);
0000828E 41F0 D118               00000118  11874          LA    15,280(0,13)
00008292 B904 001D                         11875          LGR   1,13
00008296 A71B 1000               00001000  11876          AGHI  1,4096
0000829A E3F0 19D0 0024          000009D0  11877          STG   15,2512(0,1)
000082A0 E548 19D8 00C8          000009D8  11878          MVGHI 2520(1),200
000082A6 4110 19D0               000009D0  11879          LA    1,2512(0,1)
000082AA E3F0 C2A8 0004          00008028  11880          LG    15,@lit_853_663 ; rd_buf_write_seek
000082B0                                   11881 @@gen_label771 DS    0H
000082B0 05EF                              11882          BALR  14,15
000082B2                                   11883 @@gen_label772 DS    0H
000082B2 B914 004F                         11884          LGFR  4,15
                                           11885 * ***           do { if (!(r == 0)) { fprintf(__stderrp, "\033[31mRDUT\
                                           11886 * : FAIL: %s:%d: %s: " "assert failed: " "r == 0" ": ", "C:\\asgkafka\\
                                           11887 * \librdkafka\\src\\rdbuf.c", 1458, __FUNCTION__); fprintf(__stderrp, \
                                           11888 * "seek() failed"); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_a\
                                           11889 * ssert_on_failure) ((r == 0) ? (void)0 : __assert(__func__, "C:\\asgk\
                                                                                                                           Page  236 
  Active Usings: @REGION_853_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           11890 * afka\\librdkafka\\src\\rdbuf.c", 1458, "r == 0")); return 1; } } whi\
                                           11891 * le (0);
000082B6                                   11892 @L513    DS    0H
000082B6 B902 00F4                         11893          LTGR  15,4
000082BA 4780 C630               000083B0  11894          BE    @L516
000082BE E330 C280 0016          00008000  11895          LLGF  3,@lit_853_628 ; __stderrp
000082C4 E3F3 5000 0004          00000000  11896          LG    15,0(3,5)   ; __stderrp
000082CA B904 002D                         11897          LGR   2,13
000082CE A72B 1000               00001000  11898          AGHI  2,4096
000082D2 E3F0 29D0 0024          000009D0  11899          STG   15,2512(0,2)
000082D8 E360 C278 0004          00007FF8  11900          LG    6,@lit_853_629
000082DE 41F0 6552               00000552  11901          LA    15,1362(0,6)
000082E2 E3F0 29D8 0024          000009D8  11902          STG   15,2520(0,2)
000082E8 41F0 6040               00000040  11903          LA    15,64(0,6)
000082EC E3F0 29E0 0024          000009E0  11904          STG   15,2528(0,2)
000082F2 E548 29E8 05B2          000009E8  11905          MVGHI 2536(2),1458
000082F8 E370 C270 0004          00007FF0  11906          LG    7,@lit_853_630
000082FE 41F0 71A6               000001A6  11907          LA    15,422(0,7)
00008302 E3F0 29F0 0024          000009F0  11908          STG   15,2544(0,2)
00008308 4110 29D0               000009D0  11909          LA    1,2512(0,2)
0000830C E380 C268 0004          00007FE8  11910          LG    8,@lit_853_631 ; fprintf
00008312 B904 00F8                         11911          LGR   15,8
00008316                                   11912 @@gen_label774 DS    0H
00008316 05EF                              11913          BALR  14,15
00008318                                   11914 @@gen_label775 DS    0H
00008318 E3F3 5000 0004          00000000  11915          LG    15,0(3,5)   ; __stderrp
0000831E E3F0 29D0 0024          000009D0  11916          STG   15,2512(0,2)
00008324 41F0 6D16               00000D16  11917          LA    15,3350(0,6)
00008328 E3F0 29D8 0024          000009D8  11918          STG   15,2520(0,2)
0000832E 4110 29D0               000009D0  11919          LA    1,2512(0,2)
00008332 B904 00F8                         11920          LGR   15,8
00008336                                   11921 @@gen_label776 DS    0H
00008336 05EF                              11922          BALR  14,15
00008338                                   11923 @@gen_label777 DS    0H
00008338 E3F3 5000 0004          00000000  11924          LG    15,0(3,5)   ; __stderrp
0000833E E3F0 29D0 0024          000009D0  11925          STG   15,2512(0,2)
00008344 41F0 65A4               000005A4  11926          LA    15,1444(0,6)
00008348 E3F0 29D8 0024          000009D8  11927          STG   15,2520(0,2)
0000834E 4110 29D0               000009D0  11928          LA    1,2512(0,2)
00008352 B904 00F8                         11929          LGR   15,8
00008356                                   11930 @@gen_label778 DS    0H
00008356 05EF                              11931          BALR  14,15
00008358                                   11932 @@gen_label779 DS    0H
00008358 E3F0 C284 0016          00008004  11933          LLGF  15,@lit_853_636 ; rd_unittest_assert_on_failure
0000835E 41FF 5000               00000000  11934          LA    15,0(15,5)
00008362 9500 F000      00000000 00000000  11935          CLI   0(15),0
00008366 4780 C622               000083A2  11936          BE    @L517
0000836A B902 00F4                         11937          LTGR  15,4
0000836E 4780 C622               000083A2  11938          BE    @L517
00008372                                   11939 @L518    DS    0H
00008372 41F0 71A6               000001A6  11940          LA    15,422(0,7)
00008376 E3F0 29D0 0024          000009D0  11941          STG   15,2512(0,2)
                                                                                                                           Page  237 
  Active Usings: @REGION_853_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000837C 41F0 6040               00000040  11942          LA    15,64(0,6)
00008380 E3F0 29D8 0024          000009D8  11943          STG   15,2520(0,2)
00008386 E548 29E0 05B2          000009E0  11944          MVGHI 2528(2),1458
0000838C 41F0 62F2               000002F2  11945          LA    15,754(0,6)
00008390 E3F0 29E8 0024          000009E8  11946          STG   15,2536(0,2)
00008396 4110 29D0               000009D0  11947          LA    1,2512(0,2)
0000839A E3F0 C288 0004          00008008  11948          LG    15,@lit_853_637 ; __assert
000083A0                                   11949 @@gen_label782 DS    0H
000083A0 05EF                              11950          BALR  14,15
000083A2                                   11951 @@gen_label783 DS    0H
000083A2                                   11952 @L519    DS    0H
000083A2                                   11953 @L517    DS    0H
000083A2 A7F9 0001               00000001  11954          LGHI  15,1        ; 1
000083A6 E3C0 C290 001A          00008010  11955          ALGF  12,@lit_region_diff_853_1_3
                                           11956          DROP  12
                        0000908A           11957          USING @REGION_853_3,12
000083AC 47F0 C5E0               0000966A  11958          B     @ret_lab_853
                                           11959          DROP  12
                        00007D80           11960          USING @REGION_853_1,12
000083B0                                   11961 @L516    DS    0H
                                           11962 * ***           pos = rd_buf_write_pos(&b);
000083B0 41F0 D118               00000118  11963          LA    15,280(0,13)
000083B4 B904 001D                         11964          LGR   1,13
000083B8 A71B 1000               00001000  11965          AGHI  1,4096
000083BC E3F0 19D0 0024          000009D0  11966          STG   15,2512(0,1)
000083C2 4110 19D0               000009D0  11967          LA    1,2512(0,1)
000083C6 E3F0 C298 0004          00008018  11968          LG    15,@lit_853_639 ; rd_buf_write_pos
000083CC                                   11969 @@gen_label784 DS    0H
000083CC 05EF                              11970          BALR  14,15
000083CE                                   11971 @@gen_label785 DS    0H
000083CE B904 003F                         11972          LGR   3,15        ; pos
                                           11973 * ***           do { if (!(pos == 200)) { fprintf(__stderrp, "\033[31m\
                                           11974 * RDUT: FAIL: %s:%d: %s: " "assert failed: " "pos == 200" ": ", "C:\\a\
                                           11975 * sgkafka\\librdkafka\\src\\rdbuf.c", 1460, __FUNCTION__); fprintf(__s\
                                           11976 * tderrp, "pos() returned position %" "zu", pos); fprintf(__stderrp, "\
                                           11977 * \033[0m\n"); if (rd_unittest_assert_on_failure) ((pos == 200) ? (voi\
                                           11978 * d)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1\
                                           11979 * 460, "pos == 200")); return 1; } } while (0);
000083D2                                   11980 @L520    DS    0H
000083D2 A73F 00C8               000000C8  11981          CGHI  3,200
000083D6 4780 C752               000084D2  11982          BE    @L523
000083DA E340 C280 0016          00008000  11983          LLGF  4,@lit_853_628 ; __stderrp
000083E0 E3F4 5000 0004          00000000  11984          LG    15,0(4,5)   ; __stderrp
000083E6 B904 002D                         11985          LGR   2,13
000083EA A72B 1000               00001000  11986          AGHI  2,4096
000083EE E3F0 29D0 0024          000009D0  11987          STG   15,2512(0,2)
000083F4 E360 C278 0004          00007FF8  11988          LG    6,@lit_853_629
000083FA 41F0 65AA               000005AA  11989          LA    15,1450(0,6)
000083FE E3F0 29D8 0024          000009D8  11990          STG   15,2520(0,2)
00008404 41F0 6040               00000040  11991          LA    15,64(0,6)
00008408 E3F0 29E0 0024          000009E0  11992          STG   15,2528(0,2)
0000840E E548 29E8 05B4          000009E8  11993          MVGHI 2536(2),1460
                                                                                                                           Page  238 
  Active Usings: @REGION_853_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008414 E370 C270 0004          00007FF0  11994          LG    7,@lit_853_630
0000841A 41F0 71A6               000001A6  11995          LA    15,422(0,7)
0000841E E3F0 29F0 0024          000009F0  11996          STG   15,2544(0,2)
00008424 4110 29D0               000009D0  11997          LA    1,2512(0,2)
00008428 E380 C268 0004          00007FE8  11998          LG    8,@lit_853_631 ; fprintf
0000842E B904 00F8                         11999          LGR   15,8
00008432                                   12000 @@gen_label787 DS    0H
00008432 05EF                              12001          BALR  14,15
00008434                                   12002 @@gen_label788 DS    0H
00008434 E3F4 5000 0004          00000000  12003          LG    15,0(4,5)   ; __stderrp
0000843A E3F0 29D0 0024          000009D0  12004          STG   15,2512(0,2)
00008440 41F0 65E2               000005E2  12005          LA    15,1506(0,6)
00008444 E3F0 29D8 0024          000009D8  12006          STG   15,2520(0,2)
0000844A E330 29E0 0024          000009E0  12007          STG   3,2528(0,2)
00008450 4110 29D0               000009D0  12008          LA    1,2512(0,2)
00008454 B904 00F8                         12009          LGR   15,8
00008458                                   12010 @@gen_label789 DS    0H
00008458 05EF                              12011          BALR  14,15
0000845A                                   12012 @@gen_label790 DS    0H
0000845A E3F4 5000 0004          00000000  12013          LG    15,0(4,5)   ; __stderrp
00008460 E3F0 29D0 0024          000009D0  12014          STG   15,2512(0,2)
00008466 41F0 65A4               000005A4  12015          LA    15,1444(0,6)
0000846A E3F0 29D8 0024          000009D8  12016          STG   15,2520(0,2)
00008470 4110 29D0               000009D0  12017          LA    1,2512(0,2)
00008474 B904 00F8                         12018          LGR   15,8
00008478                                   12019 @@gen_label791 DS    0H
00008478 05EF                              12020          BALR  14,15
0000847A                                   12021 @@gen_label792 DS    0H
0000847A E3F0 C284 0016          00008004  12022          LLGF  15,@lit_853_636 ; rd_unittest_assert_on_failure
00008480 41FF 5000               00000000  12023          LA    15,0(15,5)
00008484 9500 F000      00000000 00000000  12024          CLI   0(15),0
00008488 4780 C744               000084C4  12025          BE    @L524
0000848C A73F 00C8               000000C8  12026          CGHI  3,200
00008490 4780 C744               000084C4  12027          BE    @L524
00008494                                   12028 @L525    DS    0H
00008494 41F0 71A6               000001A6  12029          LA    15,422(0,7)
00008498 E3F0 29D0 0024          000009D0  12030          STG   15,2512(0,2)
0000849E 41F0 6040               00000040  12031          LA    15,64(0,6)
000084A2 E3F0 29D8 0024          000009D8  12032          STG   15,2520(0,2)
000084A8 E548 29E0 05B4          000009E0  12033          MVGHI 2528(2),1460
000084AE 41F0 65FE               000005FE  12034          LA    15,1534(0,6)
000084B2 E3F0 29E8 0024          000009E8  12035          STG   15,2536(0,2)
000084B8 4110 29D0               000009D0  12036          LA    1,2512(0,2)
000084BC E3F0 C288 0004          00008008  12037          LG    15,@lit_853_637 ; __assert
000084C2                                   12038 @@gen_label795 DS    0H
000084C2 05EF                              12039          BALR  14,15
000084C4                                   12040 @@gen_label796 DS    0H
000084C4                                   12041 @L526    DS    0H
000084C4                                   12042 @L524    DS    0H
000084C4 A7F9 0001               00000001  12043          LGHI  15,1        ; 1
000084C8 E3C0 C290 001A          00008010  12044          ALGF  12,@lit_region_diff_853_1_3
                                           12045          DROP  12
                                                                                                                           Page  239 
  Active Usings: @REGION_853_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        0000908A           12046          USING @REGION_853_3,12
000084CE 47F0 C5E0               0000966A  12047          B     @ret_lab_853
                                           12048          DROP  12
                        00007D80           12049          USING @REGION_853_1,12
000084D2                                   12050 @L523    DS    0H
                                           12051 * ***
                                           12052 * ***           r = rd_buf_write(&b, twos, 100);
000084D2 41F0 D118               00000118  12053          LA    15,280(0,13)
000084D6 B904 001D                         12054          LGR   1,13
000084DA A71B 1000               00001000  12055          AGHI  1,4096
000084DE E3F0 19D0 0024          000009D0  12056          STG   15,2512(0,1)
000084E4 41F0 D568               00000568  12057          LA    15,1384(0,13)
000084E8 E3F0 19D8 0024          000009D8  12058          STG   15,2520(0,1)
000084EE E548 19E0 0064          000009E0  12059          MVGHI 2528(1),100
000084F4 4110 19D0               000009D0  12060          LA    1,2512(0,1)
000084F8 E3F0 C260 0004          00007FE0  12061          LG    15,@lit_853_627 ; rd_buf_write
000084FE                                   12062 @@gen_label797 DS    0H
000084FE 05EF                              12063          BALR  14,15
00008500                                   12064 @@gen_label798 DS    0H
00008500 B904 004F                         12065          LGR   4,15        ; r
                                           12066 * ***           do { if (!(pos == 200)) { fprintf(__stderrp, "\033[31m\
                                           12067 * RDUT: FAIL: %s:%d: %s: " "assert failed: " "pos == 200" ": ", "C:\\a\
                                           12068 * sgkafka\\librdkafka\\src\\rdbuf.c", 1463, __FUNCTION__); fprintf(__s\
                                           12069 * tderrp, "write() returned position %" "zu", r); fprintf(__stderrp, "\
                                           12070 * \033[0m\n"); if (rd_unittest_assert_on_failure) ((pos == 200) ? (voi\
                                           12071 * d)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1\
                                           12072 * 463, "pos == 200")); return 1; } } while (0);
00008504                                   12073 @L527    DS    0H
00008504 A73F 00C8               000000C8  12074          CGHI  3,200
00008508 4780 C884               00008604  12075          BE    @L530
0000850C E360 C280 0016          00008000  12076          LLGF  6,@lit_853_628 ; __stderrp
00008512 E3F6 5000 0004          00000000  12077          LG    15,0(6,5)   ; __stderrp
00008518 B904 002D                         12078          LGR   2,13
0000851C A72B 1000               00001000  12079          AGHI  2,4096
00008520 E3F0 29D0 0024          000009D0  12080          STG   15,2512(0,2)
00008526 E370 C278 0004          00007FF8  12081          LG    7,@lit_853_629
0000852C 41F0 75AA               000005AA  12082          LA    15,1450(0,7)
00008530 E3F0 29D8 0024          000009D8  12083          STG   15,2520(0,2)
00008536 41F0 7040               00000040  12084          LA    15,64(0,7)
0000853A E3F0 29E0 0024          000009E0  12085          STG   15,2528(0,2)
00008540 E548 29E8 05B7          000009E8  12086          MVGHI 2536(2),1463
00008546 E380 C270 0004          00007FF0  12087          LG    8,@lit_853_630
0000854C 41F0 81A6               000001A6  12088          LA    15,422(0,8)
00008550 E3F0 29F0 0024          000009F0  12089          STG   15,2544(0,2)
00008556 4110 29D0               000009D0  12090          LA    1,2512(0,2)
0000855A E390 C268 0004          00007FE8  12091          LG    9,@lit_853_631 ; fprintf
00008560 B904 00F9                         12092          LGR   15,9
00008564                                   12093 @@gen_label800 DS    0H
00008564 05EF                              12094          BALR  14,15
00008566                                   12095 @@gen_label801 DS    0H
00008566 E3F6 5000 0004          00000000  12096          LG    15,0(6,5)   ; __stderrp
0000856C E3F0 29D0 0024          000009D0  12097          STG   15,2512(0,2)
                                                                                                                           Page  240 
  Active Usings: @REGION_853_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008572 41F0 7586               00000586  12098          LA    15,1414(0,7)
00008576 E3F0 29D8 0024          000009D8  12099          STG   15,2520(0,2)
0000857C E340 29E0 0024          000009E0  12100          STG   4,2528(0,2)
00008582 4110 29D0               000009D0  12101          LA    1,2512(0,2)
00008586 B904 00F9                         12102          LGR   15,9
0000858A                                   12103 @@gen_label802 DS    0H
0000858A 05EF                              12104          BALR  14,15
0000858C                                   12105 @@gen_label803 DS    0H
0000858C E3F6 5000 0004          00000000  12106          LG    15,0(6,5)   ; __stderrp
00008592 E3F0 29D0 0024          000009D0  12107          STG   15,2512(0,2)
00008598 41F0 75A4               000005A4  12108          LA    15,1444(0,7)
0000859C E3F0 29D8 0024          000009D8  12109          STG   15,2520(0,2)
000085A2 4110 29D0               000009D0  12110          LA    1,2512(0,2)
000085A6 B904 00F9                         12111          LGR   15,9
000085AA                                   12112 @@gen_label804 DS    0H
000085AA 05EF                              12113          BALR  14,15
000085AC                                   12114 @@gen_label805 DS    0H
000085AC E3F0 C284 0016          00008004  12115          LLGF  15,@lit_853_636 ; rd_unittest_assert_on_failure
000085B2 41FF 5000               00000000  12116          LA    15,0(15,5)
000085B6 9500 F000      00000000 00000000  12117          CLI   0(15),0
000085BA 4780 C876               000085F6  12118          BE    @L531
000085BE A73F 00C8               000000C8  12119          CGHI  3,200
000085C2 4780 C876               000085F6  12120          BE    @L531
000085C6                                   12121 @L532    DS    0H
000085C6 41F0 81A6               000001A6  12122          LA    15,422(0,8)
000085CA E3F0 29D0 0024          000009D0  12123          STG   15,2512(0,2)
000085D0 41F0 7040               00000040  12124          LA    15,64(0,7)
000085D4 E3F0 29D8 0024          000009D8  12125          STG   15,2520(0,2)
000085DA E548 29E0 05B7          000009E0  12126          MVGHI 2528(2),1463
000085E0 41F0 75FE               000005FE  12127          LA    15,1534(0,7)
000085E4 E3F0 29E8 0024          000009E8  12128          STG   15,2536(0,2)
000085EA 4110 29D0               000009D0  12129          LA    1,2512(0,2)
000085EE E3F0 C288 0004          00008008  12130          LG    15,@lit_853_637 ; __assert
000085F4                                   12131 @@gen_label808 DS    0H
000085F4 05EF                              12132          BALR  14,15
000085F6                                   12133 @@gen_label809 DS    0H
000085F6                                   12134 @L533    DS    0H
000085F6                                   12135 @L531    DS    0H
000085F6 A7F9 0001               00000001  12136          LGHI  15,1        ; 1
000085FA E3C0 C290 001A          00008010  12137          ALGF  12,@lit_region_diff_853_1_3
                                           12138          DROP  12
                        0000908A           12139          USING @REGION_853_3,12
00008600 47F0 C5E0               0000966A  12140          B     @ret_lab_853
                                           12141          DROP  12
                        00007D80           12142          USING @REGION_853_1,12
00008604                                   12143 @L530    DS    0H
                                           12144 * ***           pos = rd_buf_write_pos(&b);
00008604 41F0 D118               00000118  12145          LA    15,280(0,13)
00008608 B904 001D                         12146          LGR   1,13
0000860C A71B 1000               00001000  12147          AGHI  1,4096
00008610 E3F0 19D0 0024          000009D0  12148          STG   15,2512(0,1)
00008616 4110 19D0               000009D0  12149          LA    1,2512(0,1)
                                                                                                                           Page  241 
  Active Usings: @REGION_853_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000861A E3F0 C298 0004          00008018  12150          LG    15,@lit_853_639 ; rd_buf_write_pos
00008620                                   12151 @@gen_label810 DS    0H
00008620 05EF                              12152          BALR  14,15
00008622                                   12153 @@gen_label811 DS    0H
00008622 B904 003F                         12154          LGR   3,15        ; pos
                                           12155 * ***           do { if (!(pos == 200+100)) { fprintf(__stderrp, "\033\
                                           12156 * [31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "pos == 200+100" ": "\
                                           12157 * , "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1465, __FUNCTION__); fpr\
                                           12158 * intf(__stderrp, "pos() returned position %" "zu", pos); fprintf(__st\
                                           12159 * derrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((pos == 200\
                                           12160 * +100) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\
                                           12161 * \rdbuf.c", 1465, "pos == 200+100")); return 1; } } while (0);
00008626                                   12162 @L534    DS    0H
00008626 A73F 012C               0000012C  12163          CGHI  3,300
0000862A 4770 C8B8               00008638  12164          BNE   *+14  Around region break
0000862E E3C0 C2B0 001A          00008030  12165          ALGF  12,@lit_region_diff_853_1_2
                                           12166          DROP  12
                        00008698           12167          USING @REGION_853_2,12
00008634 47F0 C100               00008798  12168          B     @L537
                                           12169          DROP  12
                        00007D80           12170          USING @REGION_853_1,12
00008638 E340 C280 0016          00008000  12171          LLGF  4,@lit_853_628 ; __stderrp
0000863E E3F4 5000 0004          00000000  12172          LG    15,0(4,5)   ; __stderrp
00008644 B904 002D                         12173          LGR   2,13
00008648 A72B 1000               00001000  12174          AGHI  2,4096
0000864C E3F0 29D0 0024          000009D0  12175          STG   15,2512(0,2)
00008652 E360 C278 0004          00007FF8  12176          LG    6,@lit_853_629
00008658 41F0 6D24               00000D24  12177          LA    15,3364(0,6)
0000865C E3F0 29D8 0024          000009D8  12178          STG   15,2520(0,2)
00008662 41F0 6040               00000040  12179          LA    15,64(0,6)
00008666 E3F0 29E0 0024          000009E0  12180          STG   15,2528(0,2)
0000866C E548 29E8 05B9          000009E8  12181          MVGHI 2536(2),1465
00008672 E370 C270 0004          00007FF0  12182          LG    7,@lit_853_630
00008678 41F0 71A6               000001A6  12183          LA    15,422(0,7)
0000867C E3F0 29F0 0024          000009F0  12184          STG   15,2544(0,2)
00008682 4110 29D0               000009D0  12185          LA    1,2512(0,2)
00008686 E380 C268 0004          00007FE8  12186          LG    8,@lit_853_631 ; fprintf
0000868C B904 00F8                         12187          LGR   15,8
00008690                                   12188 @@gen_label813 DS    0H
00008690 05EF                              12189          BALR  14,15
00008692                                   12190 @@gen_label814 DS    0H
00008692 E3C0 C2B0 001A          00008030  12191          ALGF  12,@lit_region_diff_853_1_2
00008698                                   12192 @REGION_853_2 DS 0H
                                           12193          DROP  12
                        00008698           12194          USING @REGION_853_2,12
00008698 E3F4 5000 0004          00000000  12195          LG    15,0(4,5)   ; __stderrp
0000869E E3F0 29D0 0024          000009D0  12196          STG   15,2512(0,2)
000086A4 41F0 65E2               000005E2  12197          LA    15,1506(0,6)
000086A8 E3F0 29D8 0024          000009D8  12198          STG   15,2520(0,2)
000086AE E330 29E0 0024          000009E0  12199          STG   3,2528(0,2)
000086B4 4110 29D0               000009D0  12200          LA    1,2512(0,2)
000086B8 B904 00F8                         12201          LGR   15,8
                                                                                                                           Page  242 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000086BC                                   12202 @@gen_label815 DS    0H
000086BC 05EF                              12203          BALR  14,15
000086BE                                   12204 @@gen_label816 DS    0H
000086BE E3F4 5000 0004          00000000  12205          LG    15,0(4,5)   ; __stderrp
000086C4 E3F0 29D0 0024          000009D0  12206          STG   15,2512(0,2)
000086CA 41F0 65A4               000005A4  12207          LA    15,1444(0,6)
000086CE E3F0 29D8 0024          000009D8  12208          STG   15,2520(0,2)
000086D4 4110 29D0               000009D0  12209          LA    1,2512(0,2)
000086D8 B904 00F8                         12210          LGR   15,8
000086DC                                   12211 @@gen_label817 DS    0H
000086DC 05EF                              12212          BALR  14,15
000086DE                                   12213 @@gen_label818 DS    0H
000086DE E3F0 C0A0 0016          00008738  12214          LLGF  15,@lit_853_708 ; rd_unittest_assert_on_failure
000086E4 41FF 5000               00000000  12215          LA    15,0(15,5)
000086E8 9500 F000      00000000 00000000  12216          CLI   0(15),0
000086EC 4780 C090               00008728  12217          BE    @L538
000086F0 A73F 012C               0000012C  12218          CGHI  3,300
000086F4 4780 C090               00008728  12219          BE    @L538
000086F8                                   12220 @L539    DS    0H
000086F8 41F0 71A6               000001A6  12221          LA    15,422(0,7)
000086FC E3F0 29D0 0024          000009D0  12222          STG   15,2512(0,2)
00008702 41F0 6040               00000040  12223          LA    15,64(0,6)
00008706 E3F0 29D8 0024          000009D8  12224          STG   15,2520(0,2)
0000870C E548 29E0 05B9          000009E0  12225          MVGHI 2528(2),1465
00008712 41F0 6D60               00000D60  12226          LA    15,3424(0,6)
00008716 E3F0 29E8 0024          000009E8  12227          STG   15,2536(0,2)
0000871C 4110 29D0               000009D0  12228          LA    1,2512(0,2)
00008720 E3F0 C0A8 0004          00008740  12229          LG    15,@lit_853_709 ; __assert
00008726                                   12230 @@gen_label821 DS    0H
00008726 05EF                              12231          BALR  14,15
00008728                                   12232 @@gen_label822 DS    0H
00008728                                   12233 @L540    DS    0H
00008728                                   12234 @L538    DS    0H
00008728 A7F9 0001               00000001  12235          LGHI  15,1        ; 1
0000872C E3C0 C0B0 001A          00008748  12236          ALGF  12,@lit_region_diff_853_2_3
                                           12237          DROP  12
                        0000908A           12238          USING @REGION_853_3,12
00008732 47F0 C5E0               0000966A  12239          B     @ret_lab_853
                                           12240          DROP  12
                        00008698           12241          USING @REGION_853_2,12
00008738                                   12242          DS    0D
00008738 00000000                          12243 @lit_853_708 DC Q(rd_unittest_assert_on_failure)
0000873C 00000000
00008740 0000000000000000                  12244 @lit_853_709 DC AD(__assert)
00008748 000009F2                          12245 @lit_region_diff_853_2_3  DC A(@REGION_853_3-@REGION_853_2)
0000874C 00000000
00008750 0000000000006BE8                  12246 @lit_853_711 DC AD(do_unittest_read_verify0)
00008758 0000000000000000                  12247 @lit_853_715 DC AD(fprintf)
00008760 000000000000BFA0                  12248 @lit_853_714 DC AD(@DATA)
00008768 000000000000CB02                  12249 @lit_853_713 DC AD(@strings@)
00008770 00000000                          12250 @lit_853_712 DC Q(__stderrp)
00008774 00000000
                                                                                                                           Page  243 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008778 0000000000000438                  12251 @lit_853_735 DC AD(rd_buf_write_pos)
00008780 0000000000001778                  12252 @lit_853_747 DC AD(rd_buf_get_segment_at_offset)
00008788 0000000000001868                  12253 @lit_853_759 DC AD(rd_segment_split)
00008790 0000000000000D90                  12254 @lit_853_760 DC AD(rd_buf_append_segment)
00008798                                   12255 @L537    DS    0H
                                           12256 * ***
                                           12257 * ***           do { int __fail = do_unittest_read_verify0(&b,0,200,on\
                                           12258 * es); do { if (!(!__fail)) { fprintf(__stderrp, "\033[31mRDUT: FAIL: \
                                           12259 * %s:%d: %s: " "assert failed: " "!__fail" ": ", "C:\\asgkafka\\librdk\
                                           12260 * afka\\src\\rdbuf.c", 1467, __FUNCTION__); fprintf(__stderrp, "read_v\
                                           12261 * erify(absof=%" "zu" ",len=%" "zu" ") " "failed", (size_t)0, (size_t)\
                                           12262 * 200); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_fai\
                                           12263 * lure) ((!__fail) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librd\
                                           12264 * kafka\\src\\rdbuf.c", 1467, "!__fail")); return 1; } } while (0); } \
                                           12265 * while (0);
00008798                                   12266 @L541    DS    0H
00008798 41F0 D118               00000118  12267          LA    15,280(0,13)
0000879C B904 001D                         12268          LGR   1,13
000087A0 A71B 1000               00001000  12269          AGHI  1,4096
000087A4 E3F0 19D0 0024          000009D0  12270          STG   15,2512(0,1)
000087AA D707 19D8 19D8 000009D8 000009D8  12271          XC    2520(8,1),2520(1)
000087B0 E548 19E0 00C8          000009E0  12272          MVGHI 2528(1),200
000087B6 41F0 D168               00000168  12273          LA    15,360(0,13)
000087BA E3F0 19E8 0024          000009E8  12274          STG   15,2536(0,1)
000087C0 4110 19D0               000009D0  12275          LA    1,2512(0,1)
000087C4 E3F0 C0B8 0004          00008750  12276          LG    15,@lit_853_711 ; do_unittest_read_verify0
000087CA                                   12277 @@gen_label823 DS    0H
000087CA 05EF                              12278          BALR  14,15
000087CC                                   12279 @@gen_label824 DS    0H
000087CC 183F                              12280          LR    3,15
000087CE                                   12281 @L544    DS    0H
000087CE 1233                              12282          LTR   3,3
000087D0 4780 C238               000088D0  12283          BZ    @L547
000087D4 E340 C0D8 0016          00008770  12284          LLGF  4,@lit_853_712 ; __stderrp
000087DA E3F4 5000 0004          00000000  12285          LG    15,0(4,5)   ; __stderrp
000087E0 B904 002D                         12286          LGR   2,13
000087E4 A72B 1000               00001000  12287          AGHI  2,4096
000087E8 E3F0 29D0 0024          000009D0  12288          STG   15,2512(0,2)
000087EE E360 C0D0 0004          00008768  12289          LG    6,@lit_853_713
000087F4 41F0 6CB2               00000CB2  12290          LA    15,3250(0,6)
000087F8 E3F0 29D8 0024          000009D8  12291          STG   15,2520(0,2)
000087FE 41F0 6040               00000040  12292          LA    15,64(0,6)
00008802 E3F0 29E0 0024          000009E0  12293          STG   15,2528(0,2)
00008808 E548 29E8 05BB          000009E8  12294          MVGHI 2536(2),1467
0000880E E370 C0C8 0004          00008760  12295          LG    7,@lit_853_714
00008814 41F0 71A6               000001A6  12296          LA    15,422(0,7)
00008818 E3F0 29F0 0024          000009F0  12297          STG   15,2544(0,2)
0000881E 4110 29D0               000009D0  12298          LA    1,2512(0,2)
00008822 E380 C0C0 0004          00008758  12299          LG    8,@lit_853_715 ; fprintf
00008828 B904 00F8                         12300          LGR   15,8
0000882C                                   12301 @@gen_label826 DS    0H
0000882C 05EF                              12302          BALR  14,15
                                                                                                                           Page  244 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000882E                                   12303 @@gen_label827 DS    0H
0000882E E3F4 5000 0004          00000000  12304          LG    15,0(4,5)   ; __stderrp
00008834 E3F0 29D0 0024          000009D0  12305          STG   15,2512(0,2)
0000883A 41F0 6CE8               00000CE8  12306          LA    15,3304(0,6)
0000883E E3F0 29D8 0024          000009D8  12307          STG   15,2520(0,2)
00008844 D707 29E0 29E0 000009E0 000009E0  12308          XC    2528(8,2),2528(2)
0000884A E548 29E8 00C8          000009E8  12309          MVGHI 2536(2),200
00008850 4110 29D0               000009D0  12310          LA    1,2512(0,2)
00008854 B904 00F8                         12311          LGR   15,8
00008858                                   12312 @@gen_label828 DS    0H
00008858 05EF                              12313          BALR  14,15
0000885A                                   12314 @@gen_label829 DS    0H
0000885A E3F4 5000 0004          00000000  12315          LG    15,0(4,5)   ; __stderrp
00008860 E3F0 29D0 0024          000009D0  12316          STG   15,2512(0,2)
00008866 41F0 65A4               000005A4  12317          LA    15,1444(0,6)
0000886A E3F0 29D8 0024          000009D8  12318          STG   15,2520(0,2)
00008870 4110 29D0               000009D0  12319          LA    1,2512(0,2)
00008874 B904 00F8                         12320          LGR   15,8
00008878                                   12321 @@gen_label830 DS    0H
00008878 05EF                              12322          BALR  14,15
0000887A                                   12323 @@gen_label831 DS    0H
0000887A E3F0 C0A0 0016          00008738  12324          LLGF  15,@lit_853_708 ; rd_unittest_assert_on_failure
00008880 41FF 5000               00000000  12325          LA    15,0(15,5)
00008884 9500 F000      00000000 00000000  12326          CLI   0(15),0
00008888 4780 C22A               000088C2  12327          BE    @L548
0000888C 1233                              12328          LTR   3,3
0000888E 4780 C22A               000088C2  12329          BZ    @L548
00008892                                   12330 @L549    DS    0H
00008892 41F0 71A6               000001A6  12331          LA    15,422(0,7)
00008896 E3F0 29D0 0024          000009D0  12332          STG   15,2512(0,2)
0000889C 41F0 6040               00000040  12333          LA    15,64(0,6)
000088A0 E3F0 29D8 0024          000009D8  12334          STG   15,2520(0,2)
000088A6 E548 29E0 05BB          000009E0  12335          MVGHI 2528(2),1467
000088AC 41F0 6D0E               00000D0E  12336          LA    15,3342(0,6)
000088B0 E3F0 29E8 0024          000009E8  12337          STG   15,2536(0,2)
000088B6 4110 29D0               000009D0  12338          LA    1,2512(0,2)
000088BA E3F0 C0A8 0004          00008740  12339          LG    15,@lit_853_709 ; __assert
000088C0                                   12340 @@gen_label834 DS    0H
000088C0 05EF                              12341          BALR  14,15
000088C2                                   12342 @@gen_label835 DS    0H
000088C2                                   12343 @L550    DS    0H
000088C2                                   12344 @L548    DS    0H
000088C2 A7F9 0001               00000001  12345          LGHI  15,1        ; 1
000088C6 E3C0 C0B0 001A          00008748  12346          ALGF  12,@lit_region_diff_853_2_3
                                           12347          DROP  12
                        0000908A           12348          USING @REGION_853_3,12
000088CC 47F0 C5E0               0000966A  12349          B     @ret_lab_853
                                           12350          DROP  12
                        00008698           12351          USING @REGION_853_2,12
000088D0                                   12352 @L547    DS    0H
                                           12353 * ***           do { int __fail = do_unittest_read_verify0(&b,200,100,\
                                           12354 * twos); do { if (!(!__fail)) { fprintf(__stderrp, "\033[31mRDUT: FAIL\
                                                                                                                           Page  245 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12355 * : %s:%d: %s: " "assert failed: " "!__fail" ": ", "C:\\asgkafka\\libr\
                                           12356 * dkafka\\src\\rdbuf.c", 1468, __FUNCTION__); fprintf(__stderrp, "read\
                                           12357 * _verify(absof=%" "zu" ",len=%" "zu" ") " "failed", (size_t)200, (siz\
                                           12358 * e_t)100); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on\
                                           12359 * _failure) ((!__fail) ? (void)0 : __assert(__func__, "C:\\asgkafka\\l\
                                           12360 * ibrdkafka\\src\\rdbuf.c", 1468, "!__fail")); return 1; } } while (0)\
                                           12361 * ; } while (0);
000088D0                                   12362 @L551    DS    0H
000088D0 41F0 D118               00000118  12363          LA    15,280(0,13)
000088D4 B904 001D                         12364          LGR   1,13
000088D8 A71B 1000               00001000  12365          AGHI  1,4096
000088DC E3F0 19D0 0024          000009D0  12366          STG   15,2512(0,1)
000088E2 E548 19D8 00C8          000009D8  12367          MVGHI 2520(1),200
000088E8 E548 19E0 0064          000009E0  12368          MVGHI 2528(1),100
000088EE 41F0 D568               00000568  12369          LA    15,1384(0,13)
000088F2 E3F0 19E8 0024          000009E8  12370          STG   15,2536(0,1)
000088F8 4110 19D0               000009D0  12371          LA    1,2512(0,1)
000088FC E3F0 C0B8 0004          00008750  12372          LG    15,@lit_853_711 ; do_unittest_read_verify0
00008902                                   12373 @@gen_label836 DS    0H
00008902 05EF                              12374          BALR  14,15
00008904                                   12375 @@gen_label837 DS    0H
00008904 183F                              12376          LR    3,15
00008906                                   12377 @L554    DS    0H
00008906 1233                              12378          LTR   3,3
00008908 4780 C370               00008A08  12379          BZ    @L557
0000890C E340 C0D8 0016          00008770  12380          LLGF  4,@lit_853_712 ; __stderrp
00008912 E3F4 5000 0004          00000000  12381          LG    15,0(4,5)   ; __stderrp
00008918 B904 002D                         12382          LGR   2,13
0000891C A72B 1000               00001000  12383          AGHI  2,4096
00008920 E3F0 29D0 0024          000009D0  12384          STG   15,2512(0,2)
00008926 E360 C0D0 0004          00008768  12385          LG    6,@lit_853_713
0000892C 41F0 6CB2               00000CB2  12386          LA    15,3250(0,6)
00008930 E3F0 29D8 0024          000009D8  12387          STG   15,2520(0,2)
00008936 41F0 6040               00000040  12388          LA    15,64(0,6)
0000893A E3F0 29E0 0024          000009E0  12389          STG   15,2528(0,2)
00008940 E548 29E8 05BC          000009E8  12390          MVGHI 2536(2),1468
00008946 E370 C0C8 0004          00008760  12391          LG    7,@lit_853_714
0000894C 41F0 71A6               000001A6  12392          LA    15,422(0,7)
00008950 E3F0 29F0 0024          000009F0  12393          STG   15,2544(0,2)
00008956 4110 29D0               000009D0  12394          LA    1,2512(0,2)
0000895A E380 C0C0 0004          00008758  12395          LG    8,@lit_853_715 ; fprintf
00008960 B904 00F8                         12396          LGR   15,8
00008964                                   12397 @@gen_label839 DS    0H
00008964 05EF                              12398          BALR  14,15
00008966                                   12399 @@gen_label840 DS    0H
00008966 E3F4 5000 0004          00000000  12400          LG    15,0(4,5)   ; __stderrp
0000896C E3F0 29D0 0024          000009D0  12401          STG   15,2512(0,2)
00008972 41F0 6CE8               00000CE8  12402          LA    15,3304(0,6)
00008976 E3F0 29D8 0024          000009D8  12403          STG   15,2520(0,2)
0000897C E548 29E0 00C8          000009E0  12404          MVGHI 2528(2),200
00008982 E548 29E8 0064          000009E8  12405          MVGHI 2536(2),100
00008988 4110 29D0               000009D0  12406          LA    1,2512(0,2)
                                                                                                                           Page  246 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000898C B904 00F8                         12407          LGR   15,8
00008990                                   12408 @@gen_label841 DS    0H
00008990 05EF                              12409          BALR  14,15
00008992                                   12410 @@gen_label842 DS    0H
00008992 E3F4 5000 0004          00000000  12411          LG    15,0(4,5)   ; __stderrp
00008998 E3F0 29D0 0024          000009D0  12412          STG   15,2512(0,2)
0000899E 41F0 65A4               000005A4  12413          LA    15,1444(0,6)
000089A2 E3F0 29D8 0024          000009D8  12414          STG   15,2520(0,2)
000089A8 4110 29D0               000009D0  12415          LA    1,2512(0,2)
000089AC B904 00F8                         12416          LGR   15,8
000089B0                                   12417 @@gen_label843 DS    0H
000089B0 05EF                              12418          BALR  14,15
000089B2                                   12419 @@gen_label844 DS    0H
000089B2 E3F0 C0A0 0016          00008738  12420          LLGF  15,@lit_853_708 ; rd_unittest_assert_on_failure
000089B8 41FF 5000               00000000  12421          LA    15,0(15,5)
000089BC 9500 F000      00000000 00000000  12422          CLI   0(15),0
000089C0 4780 C362               000089FA  12423          BE    @L558
000089C4 1233                              12424          LTR   3,3
000089C6 4780 C362               000089FA  12425          BZ    @L558
000089CA                                   12426 @L559    DS    0H
000089CA 41F0 71A6               000001A6  12427          LA    15,422(0,7)
000089CE E3F0 29D0 0024          000009D0  12428          STG   15,2512(0,2)
000089D4 41F0 6040               00000040  12429          LA    15,64(0,6)
000089D8 E3F0 29D8 0024          000009D8  12430          STG   15,2520(0,2)
000089DE E548 29E0 05BC          000009E0  12431          MVGHI 2528(2),1468
000089E4 41F0 6D0E               00000D0E  12432          LA    15,3342(0,6)
000089E8 E3F0 29E8 0024          000009E8  12433          STG   15,2536(0,2)
000089EE 4110 29D0               000009D0  12434          LA    1,2512(0,2)
000089F2 E3F0 C0A8 0004          00008740  12435          LG    15,@lit_853_709 ; __assert
000089F8                                   12436 @@gen_label847 DS    0H
000089F8 05EF                              12437          BALR  14,15
000089FA                                   12438 @@gen_label848 DS    0H
000089FA                                   12439 @L560    DS    0H
000089FA                                   12440 @L558    DS    0H
000089FA A7F9 0001               00000001  12441          LGHI  15,1        ; 1
000089FE E3C0 C0B0 001A          00008748  12442          ALGF  12,@lit_region_diff_853_2_3
                                           12443          DROP  12
                        0000908A           12444          USING @REGION_853_3,12
00008A04 47F0 C5E0               0000966A  12445          B     @ret_lab_853
                                           12446          DROP  12
                        00008698           12447          USING @REGION_853_2,12
00008A08                                   12448 @L557    DS    0H
                                           12449 * ***
                                           12450 * ***
                                           12451 * ***           pos = rd_buf_write_pos(&b);
00008A08 41F0 D118               00000118  12452          LA    15,280(0,13)
00008A0C B904 001D                         12453          LGR   1,13
00008A10 A71B 1000               00001000  12454          AGHI  1,4096
00008A14 E3F0 19D0 0024          000009D0  12455          STG   15,2512(0,1)
00008A1A 4110 19D0               000009D0  12456          LA    1,2512(0,1)
00008A1E E3F0 C0E0 0004          00008778  12457          LG    15,@lit_853_735 ; rd_buf_write_pos
00008A24                                   12458 @@gen_label849 DS    0H
                                                                                                                           Page  247 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008A24 05EF                              12459          BALR  14,15
00008A26                                   12460 @@gen_label850 DS    0H
00008A26 B904 003F                         12461          LGR   3,15        ; pos
                                           12462 * ***           do { if (!(pos == 200+100)) { fprintf(__stderrp, "\033\
                                           12463 * [31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "pos == 200+100" ": "\
                                           12464 * , "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1472, __FUNCTION__); fpr\
                                           12465 * intf(__stderrp, "pos() returned position %" "zu", pos); fprintf(__st\
                                           12466 * derrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((pos == 200\
                                           12467 * +100) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\
                                           12468 * \rdbuf.c", 1472, "pos == 200+100")); return 1; } } while (0);
00008A2A                                   12469 @L561    DS    0H
00008A2A A73F 012C               0000012C  12470          CGHI  3,300
00008A2E 4780 C492               00008B2A  12471          BE    @L564
00008A32 E340 C0D8 0016          00008770  12472          LLGF  4,@lit_853_712 ; __stderrp
00008A38 E3F4 5000 0004          00000000  12473          LG    15,0(4,5)   ; __stderrp
00008A3E B904 002D                         12474          LGR   2,13
00008A42 A72B 1000               00001000  12475          AGHI  2,4096
00008A46 E3F0 29D0 0024          000009D0  12476          STG   15,2512(0,2)
00008A4C E360 C0D0 0004          00008768  12477          LG    6,@lit_853_713
00008A52 41F0 6D24               00000D24  12478          LA    15,3364(0,6)
00008A56 E3F0 29D8 0024          000009D8  12479          STG   15,2520(0,2)
00008A5C 41F0 6040               00000040  12480          LA    15,64(0,6)
00008A60 E3F0 29E0 0024          000009E0  12481          STG   15,2528(0,2)
00008A66 E548 29E8 05C0          000009E8  12482          MVGHI 2536(2),1472
00008A6C E370 C0C8 0004          00008760  12483          LG    7,@lit_853_714
00008A72 41F0 71A6               000001A6  12484          LA    15,422(0,7)
00008A76 E3F0 29F0 0024          000009F0  12485          STG   15,2544(0,2)
00008A7C 4110 29D0               000009D0  12486          LA    1,2512(0,2)
00008A80 E380 C0C0 0004          00008758  12487          LG    8,@lit_853_715 ; fprintf
00008A86 B904 00F8                         12488          LGR   15,8
00008A8A                                   12489 @@gen_label852 DS    0H
00008A8A 05EF                              12490          BALR  14,15
00008A8C                                   12491 @@gen_label853 DS    0H
00008A8C E3F4 5000 0004          00000000  12492          LG    15,0(4,5)   ; __stderrp
00008A92 E3F0 29D0 0024          000009D0  12493          STG   15,2512(0,2)
00008A98 41F0 65E2               000005E2  12494          LA    15,1506(0,6)
00008A9C E3F0 29D8 0024          000009D8  12495          STG   15,2520(0,2)
00008AA2 E330 29E0 0024          000009E0  12496          STG   3,2528(0,2)
00008AA8 4110 29D0               000009D0  12497          LA    1,2512(0,2)
00008AAC B904 00F8                         12498          LGR   15,8
00008AB0                                   12499 @@gen_label854 DS    0H
00008AB0 05EF                              12500          BALR  14,15
00008AB2                                   12501 @@gen_label855 DS    0H
00008AB2 E3F4 5000 0004          00000000  12502          LG    15,0(4,5)   ; __stderrp
00008AB8 E3F0 29D0 0024          000009D0  12503          STG   15,2512(0,2)
00008ABE 41F0 65A4               000005A4  12504          LA    15,1444(0,6)
00008AC2 E3F0 29D8 0024          000009D8  12505          STG   15,2520(0,2)
00008AC8 4110 29D0               000009D0  12506          LA    1,2512(0,2)
00008ACC B904 00F8                         12507          LGR   15,8
00008AD0                                   12508 @@gen_label856 DS    0H
00008AD0 05EF                              12509          BALR  14,15
00008AD2                                   12510 @@gen_label857 DS    0H
                                                                                                                           Page  248 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008AD2 E3F0 C0A0 0016          00008738  12511          LLGF  15,@lit_853_708 ; rd_unittest_assert_on_failure
00008AD8 41FF 5000               00000000  12512          LA    15,0(15,5)
00008ADC 9500 F000      00000000 00000000  12513          CLI   0(15),0
00008AE0 4780 C484               00008B1C  12514          BE    @L565
00008AE4 A73F 012C               0000012C  12515          CGHI  3,300
00008AE8 4780 C484               00008B1C  12516          BE    @L565
00008AEC                                   12517 @L566    DS    0H
00008AEC 41F0 71A6               000001A6  12518          LA    15,422(0,7)
00008AF0 E3F0 29D0 0024          000009D0  12519          STG   15,2512(0,2)
00008AF6 41F0 6040               00000040  12520          LA    15,64(0,6)
00008AFA E3F0 29D8 0024          000009D8  12521          STG   15,2520(0,2)
00008B00 E548 29E0 05C0          000009E0  12522          MVGHI 2528(2),1472
00008B06 41F0 6D60               00000D60  12523          LA    15,3424(0,6)
00008B0A E3F0 29E8 0024          000009E8  12524          STG   15,2536(0,2)
00008B10 4110 29D0               000009D0  12525          LA    1,2512(0,2)
00008B14 E3F0 C0A8 0004          00008740  12526          LG    15,@lit_853_709 ; __assert
00008B1A                                   12527 @@gen_label860 DS    0H
00008B1A 05EF                              12528          BALR  14,15
00008B1C                                   12529 @@gen_label861 DS    0H
00008B1C                                   12530 @L567    DS    0H
00008B1C                                   12531 @L565    DS    0H
00008B1C A7F9 0001               00000001  12532          LGHI  15,1        ; 1
00008B20 E3C0 C0B0 001A          00008748  12533          ALGF  12,@lit_region_diff_853_2_3
                                           12534          DROP  12
                        0000908A           12535          USING @REGION_853_3,12
00008B26 47F0 C5E0               0000966A  12536          B     @ret_lab_853
                                           12537          DROP  12
                        00008698           12538          USING @REGION_853_2,12
00008B2A                                   12539 @L564    DS    0H
                                           12540 * ***
                                           12541 * ***
                                           12542 * ***
                                           12543 * ***           seg = rd_buf_get_segment_at_offset(&b, ((void *)0), 50\
                                           12544 * );
00008B2A 41F0 D118               00000118  12545          LA    15,280(0,13)
00008B2E B904 001D                         12546          LGR   1,13
00008B32 A71B 1000               00001000  12547          AGHI  1,4096
00008B36 E3F0 19D0 0024          000009D0  12548          STG   15,2512(0,1)
00008B3C D707 19D8 19D8 000009D8 000009D8  12549          XC    2520(8,1),2520(1)
00008B42 E548 19E0 0032          000009E0  12550          MVGHI 2528(1),50
00008B48 4110 19D0               000009D0  12551          LA    1,2512(0,1)
00008B4C E3F0 C0E8 0004          00008780  12552          LG    15,@lit_853_747 ; rd_buf_get_segment_at_offset
00008B52                                   12553 @@gen_label862 DS    0H
00008B52 05EF                              12554          BALR  14,15
00008B54                                   12555 @@gen_label863 DS    0H
00008B54 B904 003F                         12556          LGR   3,15        ; seg
                                           12557 * ***           do { if (!(seg->seg_of != 0)) { fprintf(__stderrp, "\0\
                                           12558 * 33[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "seg->seg_of != 0" \
                                           12559 * ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1477, __FUNCTION__);\
                                           12560 *  fprintf(__stderrp, "assumed mid-segment"); fprintf(__stderrp, "\033\
                                           12561 * [0m\n"); if (rd_unittest_assert_on_failure) ((seg->seg_of != 0) ? (v\
                                           12562 * oid)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c",\
                                                                                                                           Page  249 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           12563 *  1477, "seg->seg_of != 0")); return 1; } } while (0);
00008B58                                   12564 @L568    DS    0H
00008B58 E559 3018 0000          00000018  12565          CLGHSI 24(3),0
00008B5E 4770 C5BE               00008C56  12566          BNE   @L571
00008B62 E340 C0D8 0016          00008770  12567          LLGF  4,@lit_853_712 ; __stderrp
00008B68 E3F4 5000 0004          00000000  12568          LG    15,0(4,5)   ; __stderrp
00008B6E B904 002D                         12569          LGR   2,13
00008B72 A72B 1000               00001000  12570          AGHI  2,4096
00008B76 E3F0 29D0 0024          000009D0  12571          STG   15,2512(0,2)
00008B7C E360 C0D0 0004          00008768  12572          LG    6,@lit_853_713
00008B82 41F0 6D70               00000D70  12573          LA    15,3440(0,6)
00008B86 E3F0 29D8 0024          000009D8  12574          STG   15,2520(0,2)
00008B8C 41F0 6040               00000040  12575          LA    15,64(0,6)
00008B90 E3F0 29E0 0024          000009E0  12576          STG   15,2528(0,2)
00008B96 E548 29E8 05C5          000009E8  12577          MVGHI 2536(2),1477
00008B9C E370 C0C8 0004          00008760  12578          LG    7,@lit_853_714
00008BA2 41F0 71A6               000001A6  12579          LA    15,422(0,7)
00008BA6 E3F0 29F0 0024          000009F0  12580          STG   15,2544(0,2)
00008BAC 4110 29D0               000009D0  12581          LA    1,2512(0,2)
00008BB0 E380 C0C0 0004          00008758  12582          LG    8,@lit_853_715 ; fprintf
00008BB6 B904 00F8                         12583          LGR   15,8
00008BBA                                   12584 @@gen_label865 DS    0H
00008BBA 05EF                              12585          BALR  14,15
00008BBC                                   12586 @@gen_label866 DS    0H
00008BBC E3F4 5000 0004          00000000  12587          LG    15,0(4,5)   ; __stderrp
00008BC2 E3F0 29D0 0024          000009D0  12588          STG   15,2512(0,2)
00008BC8 41F0 6DAE               00000DAE  12589          LA    15,3502(0,6)
00008BCC E3F0 29D8 0024          000009D8  12590          STG   15,2520(0,2)
00008BD2 4110 29D0               000009D0  12591          LA    1,2512(0,2)
00008BD6 B904 00F8                         12592          LGR   15,8
00008BDA                                   12593 @@gen_label867 DS    0H
00008BDA 05EF                              12594          BALR  14,15
00008BDC                                   12595 @@gen_label868 DS    0H
00008BDC E3F4 5000 0004          00000000  12596          LG    15,0(4,5)   ; __stderrp
00008BE2 E3F0 29D0 0024          000009D0  12597          STG   15,2512(0,2)
00008BE8 41F0 65A4               000005A4  12598          LA    15,1444(0,6)
00008BEC E3F0 29D8 0024          000009D8  12599          STG   15,2520(0,2)
00008BF2 4110 29D0               000009D0  12600          LA    1,2512(0,2)
00008BF6 B904 00F8                         12601          LGR   15,8
00008BFA                                   12602 @@gen_label869 DS    0H
00008BFA 05EF                              12603          BALR  14,15
00008BFC                                   12604 @@gen_label870 DS    0H
00008BFC E3F0 C0A0 0016          00008738  12605          LLGF  15,@lit_853_708 ; rd_unittest_assert_on_failure
00008C02 41FF 5000               00000000  12606          LA    15,0(15,5)
00008C06 9500 F000      00000000 00000000  12607          CLI   0(15),0
00008C0A 4780 C5B0               00008C48  12608          BE    @L572
00008C0E E559 3018 0000          00000018  12609          CLGHSI 24(3),0
00008C14 4770 C5B0               00008C48  12610          BNE   @L572
00008C18                                   12611 @L573    DS    0H
00008C18 41F0 71A6               000001A6  12612          LA    15,422(0,7)
00008C1C E3F0 29D0 0024          000009D0  12613          STG   15,2512(0,2)
00008C22 41F0 6040               00000040  12614          LA    15,64(0,6)
                                                                                                                           Page  250 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008C26 E3F0 29D8 0024          000009D8  12615          STG   15,2520(0,2)
00008C2C E548 29E0 05C5          000009E0  12616          MVGHI 2528(2),1477
00008C32 41F0 6DC2               00000DC2  12617          LA    15,3522(0,6)
00008C36 E3F0 29E8 0024          000009E8  12618          STG   15,2536(0,2)
00008C3C 4110 29D0               000009D0  12619          LA    1,2512(0,2)
00008C40 E3F0 C0A8 0004          00008740  12620          LG    15,@lit_853_709 ; __assert
00008C46                                   12621 @@gen_label873 DS    0H
00008C46 05EF                              12622          BALR  14,15
00008C48                                   12623 @@gen_label874 DS    0H
00008C48                                   12624 @L574    DS    0H
00008C48                                   12625 @L572    DS    0H
00008C48 A7F9 0001               00000001  12626          LGHI  15,1        ; 1
00008C4C E3C0 C0B0 001A          00008748  12627          ALGF  12,@lit_region_diff_853_2_3
                                           12628          DROP  12
                        0000908A           12629          USING @REGION_853_3,12
00008C52 47F0 C5E0               0000966A  12630          B     @ret_lab_853
                                           12631          DROP  12
                        00008698           12632          USING @REGION_853_2,12
00008C56                                   12633 @L571    DS    0H
                                           12634 * ***           newseg = rd_segment_split(&b, seg, 50);
00008C56 41F0 D118               00000118  12635          LA    15,280(0,13)
00008C5A B904 002D                         12636          LGR   2,13
00008C5E A72B 1000               00001000  12637          AGHI  2,4096
00008C62 E3F0 29D0 0024          000009D0  12638          STG   15,2512(0,2)
00008C68 E330 29D8 0024          000009D8  12639          STG   3,2520(0,2)
00008C6E E548 29E0 0032          000009E0  12640          MVGHI 2528(2),50
00008C74 4110 29D0               000009D0  12641          LA    1,2512(0,2)
00008C78 E3F0 C0F0 0004          00008788  12642          LG    15,@lit_853_759 ; rd_segment_split
00008C7E                                   12643 @@gen_label875 DS    0H
00008C7E 05EF                              12644          BALR  14,15
00008C80                                   12645 @@gen_label876 DS    0H
00008C80 B904 004F                         12646          LGR   4,15
                                           12647 * ***           rd_buf_append_segment(&b, newseg);
00008C84 4110 D118               00000118  12648          LA    1,280(0,13)
00008C88 E310 29D0 0024          000009D0  12649          STG   1,2512(0,2)
00008C8E E340 29D8 0024          000009D8  12650          STG   4,2520(0,2)
00008C94 4110 29D0               000009D0  12651          LA    1,2512(0,2)
00008C98 E3F0 C0F8 0004          00008790  12652          LG    15,@lit_853_760 ; rd_buf_append_segment
00008C9E                                   12653 @@gen_label877 DS    0H
00008C9E 05EF                              12654          BALR  14,15
00008CA0                                   12655 @@gen_label878 DS    0H
                                           12656 * ***           seg = rd_buf_get_segment_at_offset(&b, ((void *)0), 50\
                                           12657 * );
00008CA0 41F0 D118               00000118  12658          LA    15,280(0,13)
00008CA4 E3F0 29D0 0024          000009D0  12659          STG   15,2512(0,2)
00008CAA D707 29D8 29D8 000009D8 000009D8  12660          XC    2520(8,2),2520(2)
00008CB0 E548 29E0 0032          000009E0  12661          MVGHI 2528(2),50
00008CB6 4110 29D0               000009D0  12662          LA    1,2512(0,2)
00008CBA E3F0 C0E8 0004          00008780  12663          LG    15,@lit_853_747 ; rd_buf_get_segment_at_offset
00008CC0                                   12664 @@gen_label879 DS    0H
00008CC0 05EF                              12665          BALR  14,15
00008CC2                                   12666 @@gen_label880 DS    0H
                                                                                                                           Page  251 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008CC2 B904 003F                         12667          LGR   3,15        ; seg
                                           12668 * ***           do { if (!(seg != ((void *)0))) { fprintf(__stderrp, "\
                                           12669 * \033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "seg != NULL" ": \
                                           12670 * ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1481, __FUNCTION__); fp\
                                           12671 * rintf(__stderrp, "seg"); fprintf(__stderrp, "\033[0m\n"); if (rd_uni\
                                           12672 * ttest_assert_on_failure) ((seg != ((void *)0)) ? (void)0 : __assert(\
                                           12673 * __func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1481, "seg != ((\
                                           12674 * void *)0)")); return 1; } } while (0);
00008CC6                                   12675 @L575    DS    0H
00008CC6 B902 00F3                         12676          LTGR  15,3
00008CCA 4770 C728               00008DC0  12677          BNE   @L578
00008CCE E340 C0D8 0016          00008770  12678          LLGF  4,@lit_853_712 ; __stderrp
00008CD4 E3F4 5000 0004          00000000  12679          LG    15,0(4,5)   ; __stderrp
00008CDA B904 002D                         12680          LGR   2,13
00008CDE A72B 1000               00001000  12681          AGHI  2,4096
00008CE2 E3F0 29D0 0024          000009D0  12682          STG   15,2512(0,2)
00008CE8 E360 C0D0 0004          00008768  12683          LG    6,@lit_853_713
00008CEE 41F0 6DD4               00000DD4  12684          LA    15,3540(0,6)
00008CF2 E3F0 29D8 0024          000009D8  12685          STG   15,2520(0,2)
00008CF8 41F0 6040               00000040  12686          LA    15,64(0,6)
00008CFC E3F0 29E0 0024          000009E0  12687          STG   15,2528(0,2)
00008D02 E548 29E8 05C9          000009E8  12688          MVGHI 2536(2),1481
00008D08 E370 C0C8 0004          00008760  12689          LG    7,@lit_853_714
00008D0E 41F0 71A6               000001A6  12690          LA    15,422(0,7)
00008D12 E3F0 29F0 0024          000009F0  12691          STG   15,2544(0,2)
00008D18 4110 29D0               000009D0  12692          LA    1,2512(0,2)
00008D1C E380 C0C0 0004          00008758  12693          LG    8,@lit_853_715 ; fprintf
00008D22 B904 00F8                         12694          LGR   15,8
00008D26                                   12695 @@gen_label882 DS    0H
00008D26 05EF                              12696          BALR  14,15
00008D28                                   12697 @@gen_label883 DS    0H
00008D28 E3F4 5000 0004          00000000  12698          LG    15,0(4,5)   ; __stderrp
00008D2E E3F0 29D0 0024          000009D0  12699          STG   15,2512(0,2)
00008D34 41F0 634A               0000034A  12700          LA    15,842(0,6)
00008D38 E3F0 29D8 0024          000009D8  12701          STG   15,2520(0,2)
00008D3E 4110 29D0               000009D0  12702          LA    1,2512(0,2)
00008D42 B904 00F8                         12703          LGR   15,8
00008D46                                   12704 @@gen_label884 DS    0H
00008D46 05EF                              12705          BALR  14,15
00008D48                                   12706 @@gen_label885 DS    0H
00008D48 E3F4 5000 0004          00000000  12707          LG    15,0(4,5)   ; __stderrp
00008D4E E3F0 29D0 0024          000009D0  12708          STG   15,2512(0,2)
00008D54 41F0 65A4               000005A4  12709          LA    15,1444(0,6)
00008D58 E3F0 29D8 0024          000009D8  12710          STG   15,2520(0,2)
00008D5E 4110 29D0               000009D0  12711          LA    1,2512(0,2)
00008D62 B904 00F8                         12712          LGR   15,8
00008D66                                   12713 @@gen_label886 DS    0H
00008D66 05EF                              12714          BALR  14,15
00008D68                                   12715 @@gen_label887 DS    0H
00008D68 E3F0 C0A0 0016          00008738  12716          LLGF  15,@lit_853_708 ; rd_unittest_assert_on_failure
00008D6E 41FF 5000               00000000  12717          LA    15,0(15,5)
00008D72 9500 F000      00000000 00000000  12718          CLI   0(15),0
                                                                                                                           Page  252 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008D76 4780 C71A               00008DB2  12719          BE    @L579
00008D7A B902 00F3                         12720          LTGR  15,3
00008D7E 4770 C71A               00008DB2  12721          BNE   @L579
00008D82                                   12722 @L580    DS    0H
00008D82 41F0 71A6               000001A6  12723          LA    15,422(0,7)
00008D86 E3F0 29D0 0024          000009D0  12724          STG   15,2512(0,2)
00008D8C 41F0 6040               00000040  12725          LA    15,64(0,6)
00008D90 E3F0 29D8 0024          000009D8  12726          STG   15,2520(0,2)
00008D96 E548 29E0 05C9          000009E0  12727          MVGHI 2528(2),1481
00008D9C 41F0 6E0E               00000E0E  12728          LA    15,3598(0,6)
00008DA0 E3F0 29E8 0024          000009E8  12729          STG   15,2536(0,2)
00008DA6 4110 29D0               000009D0  12730          LA    1,2512(0,2)
00008DAA E3F0 C0A8 0004          00008740  12731          LG    15,@lit_853_709 ; __assert
00008DB0                                   12732 @@gen_label890 DS    0H
00008DB0 05EF                              12733          BALR  14,15
00008DB2                                   12734 @@gen_label891 DS    0H
00008DB2                                   12735 @L581    DS    0H
00008DB2                                   12736 @L579    DS    0H
00008DB2 A7F9 0001               00000001  12737          LGHI  15,1        ; 1
00008DB6 E3C0 C0B0 001A          00008748  12738          ALGF  12,@lit_region_diff_853_2_3
                                           12739          DROP  12
                        0000908A           12740          USING @REGION_853_3,12
00008DBC 47F0 C5E0               0000966A  12741          B     @ret_lab_853
                                           12742          DROP  12
                        00008698           12743          USING @REGION_853_2,12
00008DC0                                   12744 @L578    DS    0H
                                           12745 * ***           do { if (!(seg == newseg)) { fprintf(__stderrp, "\033[\
                                           12746 * 31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "seg == newseg" ": ", \
                                           12747 * "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1482, __FUNCTION__); fprin\
                                           12748 * tf(__stderrp, "newseg %p, seg %p", newseg, seg); fprintf(__stderrp, \
                                           12749 * "\033[0m\n"); if (rd_unittest_assert_on_failure) ((seg == newseg) ? \
                                           12750 * (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c\
                                           12751 * ", 1482, "seg == newseg")); return 1; } } while (0);
00008DC0                                   12752 @L582    DS    0H
00008DC0 B920 0034                         12753          CGR   3,4
00008DC4 4780 C82E               00008EC6  12754          BE    @L585
00008DC8 E360 C0D8 0016          00008770  12755          LLGF  6,@lit_853_712 ; __stderrp
00008DCE E3F6 5000 0004          00000000  12756          LG    15,0(6,5)   ; __stderrp
00008DD4 B904 002D                         12757          LGR   2,13
00008DD8 A72B 1000               00001000  12758          AGHI  2,4096
00008DDC E3F0 29D0 0024          000009D0  12759          STG   15,2512(0,2)
00008DE2 E370 C0D0 0004          00008768  12760          LG    7,@lit_853_713
00008DE8 41F0 7E22               00000E22  12761          LA    15,3618(0,7)
00008DEC E3F0 29D8 0024          000009D8  12762          STG   15,2520(0,2)
00008DF2 41F0 7040               00000040  12763          LA    15,64(0,7)
00008DF6 E3F0 29E0 0024          000009E0  12764          STG   15,2528(0,2)
00008DFC E548 29E8 05CA          000009E8  12765          MVGHI 2536(2),1482
00008E02 E380 C0C8 0004          00008760  12766          LG    8,@lit_853_714
00008E08 41F0 81A6               000001A6  12767          LA    15,422(0,8)
00008E0C E3F0 29F0 0024          000009F0  12768          STG   15,2544(0,2)
00008E12 4110 29D0               000009D0  12769          LA    1,2512(0,2)
00008E16 E390 C0C0 0004          00008758  12770          LG    9,@lit_853_715 ; fprintf
                                                                                                                           Page  253 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008E1C B904 00F9                         12771          LGR   15,9
00008E20                                   12772 @@gen_label893 DS    0H
00008E20 05EF                              12773          BALR  14,15
00008E22                                   12774 @@gen_label894 DS    0H
00008E22 E3F6 5000 0004          00000000  12775          LG    15,0(6,5)   ; __stderrp
00008E28 E3F0 29D0 0024          000009D0  12776          STG   15,2512(0,2)
00008E2E 41F0 7E5E               00000E5E  12777          LA    15,3678(0,7)
00008E32 E3F0 29D8 0024          000009D8  12778          STG   15,2520(0,2)
00008E38 E340 29E0 0024          000009E0  12779          STG   4,2528(0,2)
00008E3E E330 29E8 0024          000009E8  12780          STG   3,2536(0,2)
00008E44 4110 29D0               000009D0  12781          LA    1,2512(0,2)
00008E48 B904 00F9                         12782          LGR   15,9
00008E4C                                   12783 @@gen_label895 DS    0H
00008E4C 05EF                              12784          BALR  14,15
00008E4E                                   12785 @@gen_label896 DS    0H
00008E4E E3F6 5000 0004          00000000  12786          LG    15,0(6,5)   ; __stderrp
00008E54 E3F0 29D0 0024          000009D0  12787          STG   15,2512(0,2)
00008E5A 41F0 75A4               000005A4  12788          LA    15,1444(0,7)
00008E5E E3F0 29D8 0024          000009D8  12789          STG   15,2520(0,2)
00008E64 4110 29D0               000009D0  12790          LA    1,2512(0,2)
00008E68 B904 00F9                         12791          LGR   15,9
00008E6C                                   12792 @@gen_label897 DS    0H
00008E6C 05EF                              12793          BALR  14,15
00008E6E                                   12794 @@gen_label898 DS    0H
00008E6E E3F0 C0A0 0016          00008738  12795          LLGF  15,@lit_853_708 ; rd_unittest_assert_on_failure
00008E74 41FF 5000               00000000  12796          LA    15,0(15,5)
00008E78 9500 F000      00000000 00000000  12797          CLI   0(15),0
00008E7C 4780 C820               00008EB8  12798          BE    @L586
00008E80 B920 0034                         12799          CGR   3,4
00008E84 4780 C820               00008EB8  12800          BE    @L586
00008E88                                   12801 @L587    DS    0H
00008E88 41F0 81A6               000001A6  12802          LA    15,422(0,8)
00008E8C E3F0 29D0 0024          000009D0  12803          STG   15,2512(0,2)
00008E92 41F0 7040               00000040  12804          LA    15,64(0,7)
00008E96 E3F0 29D8 0024          000009D8  12805          STG   15,2520(0,2)
00008E9C E548 29E0 05CA          000009E0  12806          MVGHI 2528(2),1482
00008EA2 41F0 7E70               00000E70  12807          LA    15,3696(0,7)
00008EA6 E3F0 29E8 0024          000009E8  12808          STG   15,2536(0,2)
00008EAC 4110 29D0               000009D0  12809          LA    1,2512(0,2)
00008EB0 E3F0 C0A8 0004          00008740  12810          LG    15,@lit_853_709 ; __assert
00008EB6                                   12811 @@gen_label901 DS    0H
00008EB6 05EF                              12812          BALR  14,15
00008EB8                                   12813 @@gen_label902 DS    0H
00008EB8                                   12814 @L588    DS    0H
00008EB8                                   12815 @L586    DS    0H
00008EB8 A7F9 0001               00000001  12816          LGHI  15,1        ; 1
00008EBC E3C0 C0B0 001A          00008748  12817          ALGF  12,@lit_region_diff_853_2_3
                                           12818          DROP  12
                        0000908A           12819          USING @REGION_853_3,12
00008EC2 47F0 C5E0               0000966A  12820          B     @ret_lab_853
                                           12821          DROP  12
                        00008698           12822          USING @REGION_853_2,12
                                                                                                                           Page  254 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008EC6                                   12823 @L585    DS    0H
                                           12824 * ***           do { if (!(seg->seg_of > 0)) { fprintf(__stderrp, "\03\
                                           12825 * 3[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "seg->seg_of > 0" ":\
                                           12826 *  ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1483, __FUNCTION__); f\
                                           12827 * printf(__stderrp, "assumed beginning of segment, got %" "zu", seg->s\
                                           12828 * eg_of); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_f\
                                           12829 * ailure) ((seg->seg_of > 0) ? (void)0 : __assert(__func__, "C:\\asgka\
                                           12830 * fka\\librdkafka\\src\\rdbuf.c", 1483, "seg->seg_of > 0")); return 1;\
                                           12831 *  } } while (0);
00008EC6                                   12832 @L589    DS    0H
00008EC6 E559 3018 0000          00000018  12833          CLGHSI 24(3),0
00008ECC 4720 C938               00008FD0  12834          BH    @L592
00008ED0 E340 C0D8 0016          00008770  12835          LLGF  4,@lit_853_712 ; __stderrp
00008ED6 E3F4 5000 0004          00000000  12836          LG    15,0(4,5)   ; __stderrp
00008EDC B904 002D                         12837          LGR   2,13
00008EE0 A72B 1000               00001000  12838          AGHI  2,4096
00008EE4 E3F0 29D0 0024          000009D0  12839          STG   15,2512(0,2)
00008EEA E360 C0D0 0004          00008768  12840          LG    6,@lit_853_713
00008EF0 41F0 6E7E               00000E7E  12841          LA    15,3710(0,6)
00008EF4 E3F0 29D8 0024          000009D8  12842          STG   15,2520(0,2)
00008EFA 41F0 6040               00000040  12843          LA    15,64(0,6)
00008EFE E3F0 29E0 0024          000009E0  12844          STG   15,2528(0,2)
00008F04 E548 29E8 05CB          000009E8  12845          MVGHI 2536(2),1483
00008F0A E370 C0C8 0004          00008760  12846          LG    7,@lit_853_714
00008F10 41F0 71A6               000001A6  12847          LA    15,422(0,7)
00008F14 E3F0 29F0 0024          000009F0  12848          STG   15,2544(0,2)
00008F1A 4110 29D0               000009D0  12849          LA    1,2512(0,2)
00008F1E E380 C0C0 0004          00008758  12850          LG    8,@lit_853_715 ; fprintf
00008F24 B904 00F8                         12851          LGR   15,8
00008F28                                   12852 @@gen_label904 DS    0H
00008F28 05EF                              12853          BALR  14,15
00008F2A                                   12854 @@gen_label905 DS    0H
00008F2A E3F4 5000 0004          00000000  12855          LG    15,0(4,5)   ; __stderrp
00008F30 E3F0 29D0 0024          000009D0  12856          STG   15,2512(0,2)
00008F36 41F0 6EBC               00000EBC  12857          LA    15,3772(0,6)
00008F3A E3F0 29D8 0024          000009D8  12858          STG   15,2520(0,2)
00008F40 E3F0 3018 0004          00000018  12859          LG    15,24(0,3)
00008F46 E3F0 29E0 0024          000009E0  12860          STG   15,2528(0,2)
00008F4C 4110 29D0               000009D0  12861          LA    1,2512(0,2)
00008F50 B904 00F8                         12862          LGR   15,8
00008F54                                   12863 @@gen_label906 DS    0H
00008F54 05EF                              12864          BALR  14,15
00008F56                                   12865 @@gen_label907 DS    0H
00008F56 E3F4 5000 0004          00000000  12866          LG    15,0(4,5)   ; __stderrp
00008F5C E3F0 29D0 0024          000009D0  12867          STG   15,2512(0,2)
00008F62 41F0 65A4               000005A4  12868          LA    15,1444(0,6)
00008F66 E3F0 29D8 0024          000009D8  12869          STG   15,2520(0,2)
00008F6C 4110 29D0               000009D0  12870          LA    1,2512(0,2)
00008F70 B904 00F8                         12871          LGR   15,8
00008F74                                   12872 @@gen_label908 DS    0H
00008F74 05EF                              12873          BALR  14,15
00008F76                                   12874 @@gen_label909 DS    0H
                                                                                                                           Page  255 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008F76 E3F0 C0A0 0016          00008738  12875          LLGF  15,@lit_853_708 ; rd_unittest_assert_on_failure
00008F7C 41FF 5000               00000000  12876          LA    15,0(15,5)
00008F80 9500 F000      00000000 00000000  12877          CLI   0(15),0
00008F84 4780 C92A               00008FC2  12878          BE    @L593
00008F88 E559 3018 0000          00000018  12879          CLGHSI 24(3),0
00008F8E 4720 C92A               00008FC2  12880          BH    @L593
00008F92                                   12881 @L594    DS    0H
00008F92 41F0 71A6               000001A6  12882          LA    15,422(0,7)
00008F96 E3F0 29D0 0024          000009D0  12883          STG   15,2512(0,2)
00008F9C 41F0 6040               00000040  12884          LA    15,64(0,6)
00008FA0 E3F0 29D8 0024          000009D8  12885          STG   15,2520(0,2)
00008FA6 E548 29E0 05CB          000009E0  12886          MVGHI 2528(2),1483
00008FAC 41F0 6EE2               00000EE2  12887          LA    15,3810(0,6)
00008FB0 E3F0 29E8 0024          000009E8  12888          STG   15,2536(0,2)
00008FB6 4110 29D0               000009D0  12889          LA    1,2512(0,2)
00008FBA E3F0 C0A8 0004          00008740  12890          LG    15,@lit_853_709 ; __assert
00008FC0                                   12891 @@gen_label912 DS    0H
00008FC0 05EF                              12892          BALR  14,15
00008FC2                                   12893 @@gen_label913 DS    0H
00008FC2                                   12894 @L595    DS    0H
00008FC2                                   12895 @L593    DS    0H
00008FC2 A7F9 0001               00000001  12896          LGHI  15,1        ; 1
00008FC6 E3C0 C0B0 001A          00008748  12897          ALGF  12,@lit_region_diff_853_2_3
                                           12898          DROP  12
                        0000908A           12899          USING @REGION_853_3,12
00008FCC 47F0 C5E0               0000966A  12900          B     @ret_lab_853
                                           12901          DROP  12
                        00008698           12902          USING @REGION_853_2,12
00008FD0                                   12903 @L592    DS    0H
                                           12904 * ***
                                           12905 * ***
                                           12906 * ***           pos = rd_buf_write_pos(&b);
00008FD0 41F0 D118               00000118  12907          LA    15,280(0,13)
00008FD4 B904 001D                         12908          LGR   1,13
00008FD8 A71B 1000               00001000  12909          AGHI  1,4096
00008FDC E3F0 19D0 0024          000009D0  12910          STG   15,2512(0,1)
00008FE2 4110 19D0               000009D0  12911          LA    1,2512(0,1)
00008FE6 E3F0 C0E0 0004          00008778  12912          LG    15,@lit_853_735 ; rd_buf_write_pos
00008FEC                                   12913 @@gen_label914 DS    0H
00008FEC 05EF                              12914          BALR  14,15
00008FEE                                   12915 @@gen_label915 DS    0H
00008FEE B904 003F                         12916          LGR   3,15        ; pos
                                           12917 * ***           do { if (!(pos == 200+100)) { fprintf(__stderrp, "\033\
                                           12918 * [31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "pos == 200+100" ": "\
                                           12919 * , "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1487, __FUNCTION__); fpr\
                                           12920 * intf(__stderrp, "pos() returned position %" "zu", pos); fprintf(__st\
                                           12921 * derrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((pos == 200\
                                           12922 * +100) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\
                                           12923 * \rdbuf.c", 1487, "pos == 200+100")); return 1; } } while (0);
00008FF2                                   12924 @L596    DS    0H
00008FF2 A73F 012C               0000012C  12925          CGHI  3,300
00008FF6 4770 C96C               00009004  12926          BNE   *+14  Around region break
                                                                                                                           Page  256 
  Active Usings: @REGION_853_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008FFA E3C0 C0B0 001A          00008748  12927          ALGF  12,@lit_region_diff_853_2_3
                                           12928          DROP  12
                        0000908A           12929          USING @REGION_853_3,12
00009000 47F0 C0BE               00009148  12930          B     @L599
                                           12931          DROP  12
                        00008698           12932          USING @REGION_853_2,12
00009004 E340 C0D8 0016          00008770  12933          LLGF  4,@lit_853_712 ; __stderrp
0000900A E3F4 5000 0004          00000000  12934          LG    15,0(4,5)   ; __stderrp
00009010 B904 002D                         12935          LGR   2,13
00009014 A72B 1000               00001000  12936          AGHI  2,4096
00009018 E3F0 29D0 0024          000009D0  12937          STG   15,2512(0,2)
0000901E E360 C0D0 0004          00008768  12938          LG    6,@lit_853_713
00009024 41F0 6D24               00000D24  12939          LA    15,3364(0,6)
00009028 E3F0 29D8 0024          000009D8  12940          STG   15,2520(0,2)
0000902E 41F0 6040               00000040  12941          LA    15,64(0,6)
00009032 E3F0 29E0 0024          000009E0  12942          STG   15,2528(0,2)
00009038 E548 29E8 05CF          000009E8  12943          MVGHI 2536(2),1487
0000903E E370 C0C8 0004          00008760  12944          LG    7,@lit_853_714
00009044 41F0 71A6               000001A6  12945          LA    15,422(0,7)
00009048 E3F0 29F0 0024          000009F0  12946          STG   15,2544(0,2)
0000904E 4110 29D0               000009D0  12947          LA    1,2512(0,2)
00009052 E380 C0C0 0004          00008758  12948          LG    8,@lit_853_715 ; fprintf
00009058 B904 00F8                         12949          LGR   15,8
0000905C                                   12950 @@gen_label917 DS    0H
0000905C 05EF                              12951          BALR  14,15
0000905E                                   12952 @@gen_label918 DS    0H
0000905E E3F4 5000 0004          00000000  12953          LG    15,0(4,5)   ; __stderrp
00009064 E3F0 29D0 0024          000009D0  12954          STG   15,2512(0,2)
0000906A 41F0 65E2               000005E2  12955          LA    15,1506(0,6)
0000906E E3F0 29D8 0024          000009D8  12956          STG   15,2520(0,2)
00009074 E330 29E0 0024          000009E0  12957          STG   3,2528(0,2)
0000907A 4110 29D0               000009D0  12958          LA    1,2512(0,2)
0000907E B904 00F8                         12959          LGR   15,8
00009082                                   12960 @@gen_label919 DS    0H
00009082 05EF                              12961          BALR  14,15
00009084                                   12962 @@gen_label920 DS    0H
00009084 E3C0 C0B0 001A          00008748  12963          ALGF  12,@lit_region_diff_853_2_3
0000908A                                   12964 @REGION_853_3 DS 0H
                                           12965          DROP  12
                        0000908A           12966          USING @REGION_853_3,12
0000908A E3F4 5000 0004          00000000  12967          LG    15,0(4,5)   ; __stderrp
00009090 E3F0 29D0 0024          000009D0  12968          STG   15,2512(0,2)
00009096 41F0 65A4               000005A4  12969          LA    15,1444(0,6)
0000909A E3F0 29D8 0024          000009D8  12970          STG   15,2520(0,2)
000090A0 4110 29D0               000009D0  12971          LA    1,2512(0,2)
000090A4 B904 00F8                         12972          LGR   15,8
000090A8                                   12973 @@gen_label921 DS    0H
000090A8 05EF                              12974          BALR  14,15
000090AA                                   12975 @@gen_label922 DS    0H
000090AA E3F0 C076 0016          00009100  12976          LLGF  15,@lit_853_804 ; rd_unittest_assert_on_failure
000090B0 41FF 5000               00000000  12977          LA    15,0(15,5)
000090B4 9500 F000      00000000 00000000  12978          CLI   0(15),0
                                                                                                                           Page  257 
  Active Usings: @REGION_853_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000090B8 4780 C06A               000090F4  12979          BE    @L600
000090BC A73F 012C               0000012C  12980          CGHI  3,300
000090C0 4780 C06A               000090F4  12981          BE    @L600
000090C4                                   12982 @L601    DS    0H
000090C4 41F0 71A6               000001A6  12983          LA    15,422(0,7)
000090C8 E3F0 29D0 0024          000009D0  12984          STG   15,2512(0,2)
000090CE 41F0 6040               00000040  12985          LA    15,64(0,6)
000090D2 E3F0 29D8 0024          000009D8  12986          STG   15,2520(0,2)
000090D8 E548 29E0 05CF          000009E0  12987          MVGHI 2528(2),1487
000090DE 41F0 6D60               00000D60  12988          LA    15,3424(0,6)
000090E2 E3F0 29E8 0024          000009E8  12989          STG   15,2536(0,2)
000090E8 4110 29D0               000009D0  12990          LA    1,2512(0,2)
000090EC E3F0 C07E 0004          00009108  12991          LG    15,@lit_853_805 ; __assert
000090F2                                   12992 @@gen_label925 DS    0H
000090F2 05EF                              12993          BALR  14,15
000090F4                                   12994 @@gen_label926 DS    0H
000090F4                                   12995 @L602    DS    0H
000090F4                                   12996 @L600    DS    0H
000090F4 A7F9 0001               00000001  12997          LGHI  15,1        ; 1
000090F8 47F0 C5E0               0000966A  12998          B     @ret_lab_853
00009100                                   12999          DS    0D
00009100 00000000                          13000 @lit_853_804 DC Q(rd_unittest_assert_on_failure)
00009104 00000000
00009108 0000000000000000                  13001 @lit_853_805 DC AD(__assert)
00009110 0000000000006BE8                  13002 @lit_853_807 DC AD(do_unittest_read_verify0)
00009118 0000000000000000                  13003 @lit_853_811 DC AD(fprintf)
00009120 000000000000BFA0                  13004 @lit_853_810 DC AD(@DATA)
00009128 000000000000CB02                  13005 @lit_853_809 DC AD(@strings@)
00009130 00000000                          13006 @lit_853_808 DC Q(__stderrp)
00009134 00000000
00009138 00000000000030C8                  13007 @lit_853_831 DC AD(rd_buf_write_seek)
00009140 0000000000001CD0                  13008 @lit_853_855 DC AD(rd_buf_destroy)
00009148                                   13009 @L599    DS    0H
                                           13010 * ***
                                           13011 * ***
                                           13012 * ***           do { int __fail = do_unittest_read_verify0(&b,0,200,on\
                                           13013 * es); do { if (!(!__fail)) { fprintf(__stderrp, "\033[31mRDUT: FAIL: \
                                           13014 * %s:%d: %s: " "assert failed: " "!__fail" ": ", "C:\\asgkafka\\librdk\
                                           13015 * afka\\src\\rdbuf.c", 1490, __FUNCTION__); fprintf(__stderrp, "read_v\
                                           13016 * erify(absof=%" "zu" ",len=%" "zu" ") " "failed", (size_t)0, (size_t)\
                                           13017 * 200); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_fai\
                                           13018 * lure) ((!__fail) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librd\
                                           13019 * kafka\\src\\rdbuf.c", 1490, "!__fail")); return 1; } } while (0); } \
                                           13020 * while (0);
00009148                                   13021 @L603    DS    0H
00009148 41F0 D118               00000118  13022          LA    15,280(0,13)
0000914C B904 001D                         13023          LGR   1,13
00009150 A71B 1000               00001000  13024          AGHI  1,4096
00009154 E3F0 19D0 0024          000009D0  13025          STG   15,2512(0,1)
0000915A D707 19D8 19D8 000009D8 000009D8  13026          XC    2520(8,1),2520(1)
00009160 E548 19E0 00C8          000009E0  13027          MVGHI 2528(1),200
00009166 41F0 D168               00000168  13028          LA    15,360(0,13)
                                                                                                                           Page  258 
  Active Usings: @REGION_853_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000916A E3F0 19E8 0024          000009E8  13029          STG   15,2536(0,1)
00009170 4110 19D0               000009D0  13030          LA    1,2512(0,1)
00009174 E3F0 C086 0004          00009110  13031          LG    15,@lit_853_807 ; do_unittest_read_verify0
0000917A                                   13032 @@gen_label927 DS    0H
0000917A 05EF                              13033          BALR  14,15
0000917C                                   13034 @@gen_label928 DS    0H
0000917C 183F                              13035          LR    3,15
0000917E                                   13036 @L606    DS    0H
0000917E 1233                              13037          LTR   3,3
00009180 4780 C1F0               0000927A  13038          BZ    @L609
00009184 E340 C0A6 0016          00009130  13039          LLGF  4,@lit_853_808 ; __stderrp
0000918A E3F4 5000 0004          00000000  13040          LG    15,0(4,5)   ; __stderrp
00009190 B904 002D                         13041          LGR   2,13
00009194 A72B 1000               00001000  13042          AGHI  2,4096
00009198 E3F0 29D0 0024          000009D0  13043          STG   15,2512(0,2)
0000919E E360 C09E 0004          00009128  13044          LG    6,@lit_853_809
000091A4 41F0 6CB2               00000CB2  13045          LA    15,3250(0,6)
000091A8 E3F0 29D8 0024          000009D8  13046          STG   15,2520(0,2)
000091AE 41F0 6040               00000040  13047          LA    15,64(0,6)
000091B2 E3F0 29E0 0024          000009E0  13048          STG   15,2528(0,2)
000091B8 E548 29E8 05D2          000009E8  13049          MVGHI 2536(2),1490
000091BE E370 C096 0004          00009120  13050          LG    7,@lit_853_810
000091C4 41F0 71A6               000001A6  13051          LA    15,422(0,7)
000091C8 E3F0 29F0 0024          000009F0  13052          STG   15,2544(0,2)
000091CE 4110 29D0               000009D0  13053          LA    1,2512(0,2)
000091D2 E380 C08E 0004          00009118  13054          LG    8,@lit_853_811 ; fprintf
000091D8 B904 00F8                         13055          LGR   15,8
000091DC                                   13056 @@gen_label930 DS    0H
000091DC 05EF                              13057          BALR  14,15
000091DE                                   13058 @@gen_label931 DS    0H
000091DE E3F4 5000 0004          00000000  13059          LG    15,0(4,5)   ; __stderrp
000091E4 E3F0 29D0 0024          000009D0  13060          STG   15,2512(0,2)
000091EA 41F0 6CE8               00000CE8  13061          LA    15,3304(0,6)
000091EE E3F0 29D8 0024          000009D8  13062          STG   15,2520(0,2)
000091F4 D707 29E0 29E0 000009E0 000009E0  13063          XC    2528(8,2),2528(2)
000091FA E548 29E8 00C8          000009E8  13064          MVGHI 2536(2),200
00009200 4110 29D0               000009D0  13065          LA    1,2512(0,2)
00009204 B904 00F8                         13066          LGR   15,8
00009208                                   13067 @@gen_label932 DS    0H
00009208 05EF                              13068          BALR  14,15
0000920A                                   13069 @@gen_label933 DS    0H
0000920A E3F4 5000 0004          00000000  13070          LG    15,0(4,5)   ; __stderrp
00009210 E3F0 29D0 0024          000009D0  13071          STG   15,2512(0,2)
00009216 41F0 65A4               000005A4  13072          LA    15,1444(0,6)
0000921A E3F0 29D8 0024          000009D8  13073          STG   15,2520(0,2)
00009220 4110 29D0               000009D0  13074          LA    1,2512(0,2)
00009224 B904 00F8                         13075          LGR   15,8
00009228                                   13076 @@gen_label934 DS    0H
00009228 05EF                              13077          BALR  14,15
0000922A                                   13078 @@gen_label935 DS    0H
0000922A E3F0 C076 0016          00009100  13079          LLGF  15,@lit_853_804 ; rd_unittest_assert_on_failure
00009230 41FF 5000               00000000  13080          LA    15,0(15,5)
                                                                                                                           Page  259 
  Active Usings: @REGION_853_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009234 9500 F000      00000000 00000000  13081          CLI   0(15),0
00009238 4780 C1E8               00009272  13082          BE    @L610
0000923C 1233                              13083          LTR   3,3
0000923E 4780 C1E8               00009272  13084          BZ    @L610
00009242                                   13085 @L611    DS    0H
00009242 41F0 71A6               000001A6  13086          LA    15,422(0,7)
00009246 E3F0 29D0 0024          000009D0  13087          STG   15,2512(0,2)
0000924C 41F0 6040               00000040  13088          LA    15,64(0,6)
00009250 E3F0 29D8 0024          000009D8  13089          STG   15,2520(0,2)
00009256 E548 29E0 05D2          000009E0  13090          MVGHI 2528(2),1490
0000925C 41F0 6D0E               00000D0E  13091          LA    15,3342(0,6)
00009260 E3F0 29E8 0024          000009E8  13092          STG   15,2536(0,2)
00009266 4110 29D0               000009D0  13093          LA    1,2512(0,2)
0000926A E3F0 C07E 0004          00009108  13094          LG    15,@lit_853_805 ; __assert
00009270                                   13095 @@gen_label938 DS    0H
00009270 05EF                              13096          BALR  14,15
00009272                                   13097 @@gen_label939 DS    0H
00009272                                   13098 @L612    DS    0H
00009272                                   13099 @L610    DS    0H
00009272 A7F9 0001               00000001  13100          LGHI  15,1        ; 1
00009276 47F0 C5E0               0000966A  13101          B     @ret_lab_853
0000927A                                   13102 @L609    DS    0H
                                           13103 * ***           do { int __fail = do_unittest_read_verify0(&b,200,100,\
                                           13104 * twos); do { if (!(!__fail)) { fprintf(__stderrp, "\033[31mRDUT: FAIL\
                                           13105 * : %s:%d: %s: " "assert failed: " "!__fail" ": ", "C:\\asgkafka\\libr\
                                           13106 * dkafka\\src\\rdbuf.c", 1491, __FUNCTION__); fprintf(__stderrp, "read\
                                           13107 * _verify(absof=%" "zu" ",len=%" "zu" ") " "failed", (size_t)200, (siz\
                                           13108 * e_t)100); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on\
                                           13109 * _failure) ((!__fail) ? (void)0 : __assert(__func__, "C:\\asgkafka\\l\
                                           13110 * ibrdkafka\\src\\rdbuf.c", 1491, "!__fail")); return 1; } } while (0)\
                                           13111 * ; } while (0);
0000927A                                   13112 @L613    DS    0H
0000927A 41F0 D118               00000118  13113          LA    15,280(0,13)
0000927E B904 001D                         13114          LGR   1,13
00009282 A71B 1000               00001000  13115          AGHI  1,4096
00009286 E3F0 19D0 0024          000009D0  13116          STG   15,2512(0,1)
0000928C E548 19D8 00C8          000009D8  13117          MVGHI 2520(1),200
00009292 E548 19E0 0064          000009E0  13118          MVGHI 2528(1),100
00009298 41F0 D568               00000568  13119          LA    15,1384(0,13)
0000929C E3F0 19E8 0024          000009E8  13120          STG   15,2536(0,1)
000092A2 4110 19D0               000009D0  13121          LA    1,2512(0,1)
000092A6 E3F0 C086 0004          00009110  13122          LG    15,@lit_853_807 ; do_unittest_read_verify0
000092AC                                   13123 @@gen_label940 DS    0H
000092AC 05EF                              13124          BALR  14,15
000092AE                                   13125 @@gen_label941 DS    0H
000092AE 183F                              13126          LR    3,15
000092B0                                   13127 @L616    DS    0H
000092B0 1233                              13128          LTR   3,3
000092B2 4780 C322               000093AC  13129          BZ    @L619
000092B6 E340 C0A6 0016          00009130  13130          LLGF  4,@lit_853_808 ; __stderrp
000092BC E3F4 5000 0004          00000000  13131          LG    15,0(4,5)   ; __stderrp
000092C2 B904 002D                         13132          LGR   2,13
                                                                                                                           Page  260 
  Active Usings: @REGION_853_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000092C6 A72B 1000               00001000  13133          AGHI  2,4096
000092CA E3F0 29D0 0024          000009D0  13134          STG   15,2512(0,2)
000092D0 E360 C09E 0004          00009128  13135          LG    6,@lit_853_809
000092D6 41F0 6CB2               00000CB2  13136          LA    15,3250(0,6)
000092DA E3F0 29D8 0024          000009D8  13137          STG   15,2520(0,2)
000092E0 41F0 6040               00000040  13138          LA    15,64(0,6)
000092E4 E3F0 29E0 0024          000009E0  13139          STG   15,2528(0,2)
000092EA E548 29E8 05D3          000009E8  13140          MVGHI 2536(2),1491
000092F0 E370 C096 0004          00009120  13141          LG    7,@lit_853_810
000092F6 41F0 71A6               000001A6  13142          LA    15,422(0,7)
000092FA E3F0 29F0 0024          000009F0  13143          STG   15,2544(0,2)
00009300 4110 29D0               000009D0  13144          LA    1,2512(0,2)
00009304 E380 C08E 0004          00009118  13145          LG    8,@lit_853_811 ; fprintf
0000930A B904 00F8                         13146          LGR   15,8
0000930E                                   13147 @@gen_label943 DS    0H
0000930E 05EF                              13148          BALR  14,15
00009310                                   13149 @@gen_label944 DS    0H
00009310 E3F4 5000 0004          00000000  13150          LG    15,0(4,5)   ; __stderrp
00009316 E3F0 29D0 0024          000009D0  13151          STG   15,2512(0,2)
0000931C 41F0 6CE8               00000CE8  13152          LA    15,3304(0,6)
00009320 E3F0 29D8 0024          000009D8  13153          STG   15,2520(0,2)
00009326 E548 29E0 00C8          000009E0  13154          MVGHI 2528(2),200
0000932C E548 29E8 0064          000009E8  13155          MVGHI 2536(2),100
00009332 4110 29D0               000009D0  13156          LA    1,2512(0,2)
00009336 B904 00F8                         13157          LGR   15,8
0000933A                                   13158 @@gen_label945 DS    0H
0000933A 05EF                              13159          BALR  14,15
0000933C                                   13160 @@gen_label946 DS    0H
0000933C E3F4 5000 0004          00000000  13161          LG    15,0(4,5)   ; __stderrp
00009342 E3F0 29D0 0024          000009D0  13162          STG   15,2512(0,2)
00009348 41F0 65A4               000005A4  13163          LA    15,1444(0,6)
0000934C E3F0 29D8 0024          000009D8  13164          STG   15,2520(0,2)
00009352 4110 29D0               000009D0  13165          LA    1,2512(0,2)
00009356 B904 00F8                         13166          LGR   15,8
0000935A                                   13167 @@gen_label947 DS    0H
0000935A 05EF                              13168          BALR  14,15
0000935C                                   13169 @@gen_label948 DS    0H
0000935C E3F0 C076 0016          00009100  13170          LLGF  15,@lit_853_804 ; rd_unittest_assert_on_failure
00009362 41FF 5000               00000000  13171          LA    15,0(15,5)
00009366 9500 F000      00000000 00000000  13172          CLI   0(15),0
0000936A 4780 C31A               000093A4  13173          BE    @L620
0000936E 1233                              13174          LTR   3,3
00009370 4780 C31A               000093A4  13175          BZ    @L620
00009374                                   13176 @L621    DS    0H
00009374 41F0 71A6               000001A6  13177          LA    15,422(0,7)
00009378 E3F0 29D0 0024          000009D0  13178          STG   15,2512(0,2)
0000937E 41F0 6040               00000040  13179          LA    15,64(0,6)
00009382 E3F0 29D8 0024          000009D8  13180          STG   15,2520(0,2)
00009388 E548 29E0 05D3          000009E0  13181          MVGHI 2528(2),1491
0000938E 41F0 6D0E               00000D0E  13182          LA    15,3342(0,6)
00009392 E3F0 29E8 0024          000009E8  13183          STG   15,2536(0,2)
00009398 4110 29D0               000009D0  13184          LA    1,2512(0,2)
                                                                                                                           Page  261 
  Active Usings: @REGION_853_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000939C E3F0 C07E 0004          00009108  13185          LG    15,@lit_853_805 ; __assert
000093A2                                   13186 @@gen_label951 DS    0H
000093A2 05EF                              13187          BALR  14,15
000093A4                                   13188 @@gen_label952 DS    0H
000093A4                                   13189 @L622    DS    0H
000093A4                                   13190 @L620    DS    0H
000093A4 A7F9 0001               00000001  13191          LGHI  15,1        ; 1
000093A8 47F0 C5E0               0000966A  13192          B     @ret_lab_853
000093AC                                   13193 @L619    DS    0H
                                           13194 * ***
                                           13195 * ***
                                           13196 * ***
                                           13197 * ***           r = rd_buf_write_seek(&b, 50);
000093AC 41F0 D118               00000118  13198          LA    15,280(0,13)
000093B0 B904 001D                         13199          LGR   1,13
000093B4 A71B 1000               00001000  13200          AGHI  1,4096
000093B8 E3F0 19D0 0024          000009D0  13201          STG   15,2512(0,1)
000093BE E548 19D8 0032          000009D8  13202          MVGHI 2520(1),50
000093C4 4110 19D0               000009D0  13203          LA    1,2512(0,1)
000093C8 E3F0 C0AE 0004          00009138  13204          LG    15,@lit_853_831 ; rd_buf_write_seek
000093CE                                   13205 @@gen_label953 DS    0H
000093CE 05EF                              13206          BALR  14,15
000093D0                                   13207 @@gen_label954 DS    0H
000093D0 B914 004F                         13208          LGFR  4,15
                                           13209 * ***           do { if (!(r == 0)) { fprintf(__stderrp, "\033[31mRDUT\
                                           13210 * : FAIL: %s:%d: %s: " "assert failed: " "r == 0" ": ", "C:\\asgkafka\\
                                           13211 * \librdkafka\\src\\rdbuf.c", 1496, __FUNCTION__); fprintf(__stderrp, \
                                           13212 * "seek() failed"); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_a\
                                           13213 * ssert_on_failure) ((r == 0) ? (void)0 : __assert(__func__, "C:\\asgk\
                                           13214 * afka\\librdkafka\\src\\rdbuf.c", 1496, "r == 0")); return 1; } } whi\
                                           13215 * le (0);
000093D4                                   13216 @L623    DS    0H
000093D4 B902 00F4                         13217          LTGR  15,4
000093D8 4780 C43E               000094C8  13218          BE    @L626
000093DC E330 C0A6 0016          00009130  13219          LLGF  3,@lit_853_808 ; __stderrp
000093E2 E3F3 5000 0004          00000000  13220          LG    15,0(3,5)   ; __stderrp
000093E8 B904 002D                         13221          LGR   2,13
000093EC A72B 1000               00001000  13222          AGHI  2,4096
000093F0 E3F0 29D0 0024          000009D0  13223          STG   15,2512(0,2)
000093F6 E360 C09E 0004          00009128  13224          LG    6,@lit_853_809
000093FC 41F0 6552               00000552  13225          LA    15,1362(0,6)
00009400 E3F0 29D8 0024          000009D8  13226          STG   15,2520(0,2)
00009406 41F0 6040               00000040  13227          LA    15,64(0,6)
0000940A E3F0 29E0 0024          000009E0  13228          STG   15,2528(0,2)
00009410 E548 29E8 05D8          000009E8  13229          MVGHI 2536(2),1496
00009416 E370 C096 0004          00009120  13230          LG    7,@lit_853_810
0000941C 41F0 71A6               000001A6  13231          LA    15,422(0,7)
00009420 E3F0 29F0 0024          000009F0  13232          STG   15,2544(0,2)
00009426 4110 29D0               000009D0  13233          LA    1,2512(0,2)
0000942A E380 C08E 0004          00009118  13234          LG    8,@lit_853_811 ; fprintf
00009430 B904 00F8                         13235          LGR   15,8
00009434                                   13236 @@gen_label956 DS    0H
                                                                                                                           Page  262 
  Active Usings: @REGION_853_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009434 05EF                              13237          BALR  14,15
00009436                                   13238 @@gen_label957 DS    0H
00009436 E3F3 5000 0004          00000000  13239          LG    15,0(3,5)   ; __stderrp
0000943C E3F0 29D0 0024          000009D0  13240          STG   15,2512(0,2)
00009442 41F0 6D16               00000D16  13241          LA    15,3350(0,6)
00009446 E3F0 29D8 0024          000009D8  13242          STG   15,2520(0,2)
0000944C 4110 29D0               000009D0  13243          LA    1,2512(0,2)
00009450 B904 00F8                         13244          LGR   15,8
00009454                                   13245 @@gen_label958 DS    0H
00009454 05EF                              13246          BALR  14,15
00009456                                   13247 @@gen_label959 DS    0H
00009456 E3F3 5000 0004          00000000  13248          LG    15,0(3,5)   ; __stderrp
0000945C E3F0 29D0 0024          000009D0  13249          STG   15,2512(0,2)
00009462 41F0 65A4               000005A4  13250          LA    15,1444(0,6)
00009466 E3F0 29D8 0024          000009D8  13251          STG   15,2520(0,2)
0000946C 4110 29D0               000009D0  13252          LA    1,2512(0,2)
00009470 B904 00F8                         13253          LGR   15,8
00009474                                   13254 @@gen_label960 DS    0H
00009474 05EF                              13255          BALR  14,15
00009476                                   13256 @@gen_label961 DS    0H
00009476 E3F0 C076 0016          00009100  13257          LLGF  15,@lit_853_804 ; rd_unittest_assert_on_failure
0000947C 41FF 5000               00000000  13258          LA    15,0(15,5)
00009480 9500 F000      00000000 00000000  13259          CLI   0(15),0
00009484 4780 C436               000094C0  13260          BE    @L627
00009488 B902 00F4                         13261          LTGR  15,4
0000948C 4780 C436               000094C0  13262          BE    @L627
00009490                                   13263 @L628    DS    0H
00009490 41F0 71A6               000001A6  13264          LA    15,422(0,7)
00009494 E3F0 29D0 0024          000009D0  13265          STG   15,2512(0,2)
0000949A 41F0 6040               00000040  13266          LA    15,64(0,6)
0000949E E3F0 29D8 0024          000009D8  13267          STG   15,2520(0,2)
000094A4 E548 29E0 05D8          000009E0  13268          MVGHI 2528(2),1496
000094AA 41F0 62F2               000002F2  13269          LA    15,754(0,6)
000094AE E3F0 29E8 0024          000009E8  13270          STG   15,2536(0,2)
000094B4 4110 29D0               000009D0  13271          LA    1,2512(0,2)
000094B8 E3F0 C07E 0004          00009108  13272          LG    15,@lit_853_805 ; __assert
000094BE                                   13273 @@gen_label964 DS    0H
000094BE 05EF                              13274          BALR  14,15
000094C0                                   13275 @@gen_label965 DS    0H
000094C0                                   13276 @L629    DS    0H
000094C0                                   13277 @L627    DS    0H
000094C0 A7F9 0001               00000001  13278          LGHI  15,1        ; 1
000094C4 47F0 C5E0               0000966A  13279          B     @ret_lab_853
000094C8                                   13280 @L626    DS    0H
                                           13281 * ***           do { int __fail = do_unittest_read_verify0(&b,0,50,one\
                                           13282 * s); do { if (!(!__fail)) { fprintf(__stderrp, "\033[31mRDUT: FAIL: %\
                                           13283 * s:%d: %s: " "assert failed: " "!__fail" ": ", "C:\\asgkafka\\librdka\
                                           13284 * fka\\src\\rdbuf.c", 1497, __FUNCTION__); fprintf(__stderrp, "read_ve\
                                           13285 * rify(absof=%" "zu" ",len=%" "zu" ") " "failed", (size_t)0, (size_t)5\
                                           13286 * 0); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failu\
                                           13287 * re) ((!__fail) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdka\
                                           13288 * fka\\src\\rdbuf.c", 1497, "!__fail")); return 1; } } while (0); } wh\
                                                                                                                           Page  263 
  Active Usings: @REGION_853_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           13289 * ile (0);
000094C8                                   13290 @L630    DS    0H
000094C8 41F0 D118               00000118  13291          LA    15,280(0,13)
000094CC B904 001D                         13292          LGR   1,13
000094D0 A71B 1000               00001000  13293          AGHI  1,4096
000094D4 E3F0 19D0 0024          000009D0  13294          STG   15,2512(0,1)
000094DA D707 19D8 19D8 000009D8 000009D8  13295          XC    2520(8,1),2520(1)
000094E0 E548 19E0 0032          000009E0  13296          MVGHI 2528(1),50
000094E6 41F0 D168               00000168  13297          LA    15,360(0,13)
000094EA E3F0 19E8 0024          000009E8  13298          STG   15,2536(0,1)
000094F0 4110 19D0               000009D0  13299          LA    1,2512(0,1)
000094F4 E3F0 C086 0004          00009110  13300          LG    15,@lit_853_807 ; do_unittest_read_verify0
000094FA                                   13301 @@gen_label966 DS    0H
000094FA 05EF                              13302          BALR  14,15
000094FC                                   13303 @@gen_label967 DS    0H
000094FC 183F                              13304          LR    3,15
000094FE                                   13305 @L633    DS    0H
000094FE 1233                              13306          LTR   3,3
00009500 4780 C570               000095FA  13307          BZ    @L636
00009504 E340 C0A6 0016          00009130  13308          LLGF  4,@lit_853_808 ; __stderrp
0000950A E3F4 5000 0004          00000000  13309          LG    15,0(4,5)   ; __stderrp
00009510 B904 002D                         13310          LGR   2,13
00009514 A72B 1000               00001000  13311          AGHI  2,4096
00009518 E3F0 29D0 0024          000009D0  13312          STG   15,2512(0,2)
0000951E E360 C09E 0004          00009128  13313          LG    6,@lit_853_809
00009524 41F0 6CB2               00000CB2  13314          LA    15,3250(0,6)
00009528 E3F0 29D8 0024          000009D8  13315          STG   15,2520(0,2)
0000952E 41F0 6040               00000040  13316          LA    15,64(0,6)
00009532 E3F0 29E0 0024          000009E0  13317          STG   15,2528(0,2)
00009538 E548 29E8 05D9          000009E8  13318          MVGHI 2536(2),1497
0000953E E370 C096 0004          00009120  13319          LG    7,@lit_853_810
00009544 41F0 71A6               000001A6  13320          LA    15,422(0,7)
00009548 E3F0 29F0 0024          000009F0  13321          STG   15,2544(0,2)
0000954E 4110 29D0               000009D0  13322          LA    1,2512(0,2)
00009552 E380 C08E 0004          00009118  13323          LG    8,@lit_853_811 ; fprintf
00009558 B904 00F8                         13324          LGR   15,8
0000955C                                   13325 @@gen_label969 DS    0H
0000955C 05EF                              13326          BALR  14,15
0000955E                                   13327 @@gen_label970 DS    0H
0000955E E3F4 5000 0004          00000000  13328          LG    15,0(4,5)   ; __stderrp
00009564 E3F0 29D0 0024          000009D0  13329          STG   15,2512(0,2)
0000956A 41F0 6CE8               00000CE8  13330          LA    15,3304(0,6)
0000956E E3F0 29D8 0024          000009D8  13331          STG   15,2520(0,2)
00009574 D707 29E0 29E0 000009E0 000009E0  13332          XC    2528(8,2),2528(2)
0000957A E548 29E8 0032          000009E8  13333          MVGHI 2536(2),50
00009580 4110 29D0               000009D0  13334          LA    1,2512(0,2)
00009584 B904 00F8                         13335          LGR   15,8
00009588                                   13336 @@gen_label971 DS    0H
00009588 05EF                              13337          BALR  14,15
0000958A                                   13338 @@gen_label972 DS    0H
0000958A E3F4 5000 0004          00000000  13339          LG    15,0(4,5)   ; __stderrp
00009590 E3F0 29D0 0024          000009D0  13340          STG   15,2512(0,2)
                                                                                                                           Page  264 
  Active Usings: @REGION_853_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009596 41F0 65A4               000005A4  13341          LA    15,1444(0,6)
0000959A E3F0 29D8 0024          000009D8  13342          STG   15,2520(0,2)
000095A0 4110 29D0               000009D0  13343          LA    1,2512(0,2)
000095A4 B904 00F8                         13344          LGR   15,8
000095A8                                   13345 @@gen_label973 DS    0H
000095A8 05EF                              13346          BALR  14,15
000095AA                                   13347 @@gen_label974 DS    0H
000095AA E3F0 C076 0016          00009100  13348          LLGF  15,@lit_853_804 ; rd_unittest_assert_on_failure
000095B0 41FF 5000               00000000  13349          LA    15,0(15,5)
000095B4 9500 F000      00000000 00000000  13350          CLI   0(15),0
000095B8 4780 C568               000095F2  13351          BE    @L637
000095BC 1233                              13352          LTR   3,3
000095BE 4780 C568               000095F2  13353          BZ    @L637
000095C2                                   13354 @L638    DS    0H
000095C2 41F0 71A6               000001A6  13355          LA    15,422(0,7)
000095C6 E3F0 29D0 0024          000009D0  13356          STG   15,2512(0,2)
000095CC 41F0 6040               00000040  13357          LA    15,64(0,6)
000095D0 E3F0 29D8 0024          000009D8  13358          STG   15,2520(0,2)
000095D6 E548 29E0 05D9          000009E0  13359          MVGHI 2528(2),1497
000095DC 41F0 6D0E               00000D0E  13360          LA    15,3342(0,6)
000095E0 E3F0 29E8 0024          000009E8  13361          STG   15,2536(0,2)
000095E6 4110 29D0               000009D0  13362          LA    1,2512(0,2)
000095EA E3F0 C07E 0004          00009108  13363          LG    15,@lit_853_805 ; __assert
000095F0                                   13364 @@gen_label977 DS    0H
000095F0 05EF                              13365          BALR  14,15
000095F2                                   13366 @@gen_label978 DS    0H
000095F2                                   13367 @L639    DS    0H
000095F2                                   13368 @L637    DS    0H
000095F2 A7F9 0001               00000001  13369          LGHI  15,1        ; 1
000095F6 47F0 C5E0               0000966A  13370          B     @ret_lab_853
000095FA                                   13371 @L636    DS    0H
                                           13372 * ***
                                           13373 * ***           rd_buf_destroy(&b);
000095FA 41F0 D118               00000118  13374          LA    15,280(0,13)
000095FE B904 002D                         13375          LGR   2,13
00009602 A72B 1000               00001000  13376          AGHI  2,4096
00009606 E3F0 29D0 0024          000009D0  13377          STG   15,2512(0,2)
0000960C 4110 29D0               000009D0  13378          LA    1,2512(0,2)
00009610 E3F0 C0B6 0004          00009140  13379          LG    15,@lit_853_855 ; rd_buf_destroy
00009616                                   13380 @@gen_label979 DS    0H
00009616 05EF                              13381          BALR  14,15
00009618                                   13382 @@gen_label980 DS    0H
                                           13383 * ***
                                           13384 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                           13385 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1501, __FUNCTI\
                                           13386 * ON__); return 0; } while (0);
00009618                                   13387 @L640    DS    0H
00009618 E3F0 C0A6 0016          00009130  13388          LLGF  15,@lit_853_808 ; __stderrp
0000961E E3FF 5000 0004          00000000  13389          LG    15,0(15,5)  ; __stderrp
00009624 E3F0 29D0 0024          000009D0  13390          STG   15,2512(0,2)
0000962A E3F0 C09E 0004          00009128  13391          LG    15,@lit_853_809
00009630 4110 F966               00000966  13392          LA    1,2406(0,15)
                                                                                                                           Page  265 
  Active Usings: @REGION_853_3,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009634 E310 29D8 0024          000009D8  13393          STG   1,2520(0,2)
0000963A 41F0 F040               00000040  13394          LA    15,64(0,15)
0000963E E3F0 29E0 0024          000009E0  13395          STG   15,2528(0,2)
00009644 E548 29E8 05DD          000009E8  13396          MVGHI 2536(2),1501
0000964A E3F0 C096 0004          00009120  13397          LG    15,@lit_853_810
00009650 41F0 F1A6               000001A6  13398          LA    15,422(0,15)
00009654 E3F0 29F0 0024          000009F0  13399          STG   15,2544(0,2)
0000965A 4110 29D0               000009D0  13400          LA    1,2512(0,2)
0000965E E3F0 C08E 0004          00009118  13401          LG    15,@lit_853_811 ; fprintf
00009664                                   13402 @@gen_label981 DS    0H
00009664 05EF                              13403          BALR  14,15
00009666                                   13404 @@gen_label982 DS    0H
00009666 A7F9 0000               00000000  13405          LGHI  15,0        ; 0
                                           13406 * ***   }
0000966A                                   13407 @ret_lab_853 DS 0H
                                           13408 * * **** Start of Epilogue
                                           13409          DCCEPIL
0000966A                                   13410+         ds 0h                                                          01-DCCEP
                                           13411+* Epilog
0000966A D707 D088 D088 00000088 00000088  13412+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00009670 E3D0 D080 0004          00000080  13413+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00009676 E3C0 D090 0004          00000090  13414+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000967C E3B0 C018 0004          00000018  13415+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00009682 E3C0 B010 0021          00000010  13416+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00009688 E3E0 D008 0004          00000008  13417+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000968E EB1C D020 0004          00000020  13418+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00009694 078E                              13419+         bcr 8,14                if same dsab, just return              01-DCCEP
00009696 E3F0 D010 0024          00000010  13420+         stg 15,16(0,13)         save return code                       01-DCCEP
0000969C E300 D018 0024          00000018  13421+         stg 0,24(0,13)          save more return code                  01-DCCEP
000096A2 E3F0 D090 0004          00000090  13422+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000096A8 E3F0 F018 0004          00000018  13423+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000096AE 47F0 F040               00000040  13424+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           13425+* End of Epilog
                                           13426 * * **** End of Epilogue
                                           13427          DROP  12
                                           13428 *
                                           13429 *   DSECT for automatic variables in "do_unittest_write_split_seek"
                                           13430 *      (FUNCTION #853)
                                           13431 *
00000000                00000000 000019CC  13432 @AUTO#do_unittest_write_split_seek DSECT
00000000                                   13433          DS    XL280
00000118                                   13434 do_unittest_write_split_seek#__fail#42 DS 1F ; __fail
0000011C                0000011C 00000118  13435          ORG   @AUTO#do_unittest_write_split_seek+280
00000118                                   13436 do_unittest_write_split_seek#__fail#37 DS 1F ; __fail
0000011C                0000011C 00000118  13437          ORG   @AUTO#do_unittest_write_split_seek+280
00000118                                   13438 do_unittest_write_split_seek#__fail#34 DS 1F ; __fail
0000011C                0000011C 00000118  13439          ORG   @AUTO#do_unittest_write_split_seek+280
00000118                                   13440 do_unittest_write_split_seek#__fail#19 DS 1F ; __fail
0000011C                0000011C 00000118  13441          ORG   @AUTO#do_unittest_write_split_seek+280
00000118                                   13442 do_unittest_write_split_seek#__fail#16 DS 1F ; __fail
0000011C                0000011C 00000118  13443          ORG   @AUTO#do_unittest_write_split_seek+280
00000118                                   13444 do_unittest_write_split_seek#__fail#5 DS 1F ; __fail
                                                                                                                           Page  266 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000011C                0000011C 00000118  13445          ORG   @AUTO#do_unittest_write_split_seek+280
00000118                                   13446 do_unittest_write_split_seek#pos#0 DS 8XL1 ; pos
00000120                00000120 00000118  13447          ORG   @AUTO#do_unittest_write_split_seek+280
00000118                                   13448 do_unittest_write_split_seek#r#0 DS 8XL1 ; r
00000120                00000120 00000118  13449          ORG   @AUTO#do_unittest_write_split_seek+280
00000118                                   13450 do_unittest_write_split_seek#b#0 DS 80XL1 ; b
00000168                00000168 00000168  13451          ORG   @AUTO#do_unittest_write_split_seek+360
00000168                                   13452 do_unittest_write_split_seek#ones#0 DS 1024XL1 ; ones
00000568                00000568 00000568  13453          ORG   @AUTO#do_unittest_write_split_seek+1384
00000568                                   13454 do_unittest_write_split_seek#twos#0 DS 1024XL1 ; twos
00000968                00000968 00000968  13455          ORG   @AUTO#do_unittest_write_split_seek+2408
00000968                                   13456 do_unittest_write_split_seek#threes#0 DS 1024XL1 ; threes
00000D68                00000D68 00000D68  13457          ORG   @AUTO#do_unittest_write_split_seek+3432
00000D68                                   13458 do_unittest_write_split_seek#buf#0 DS 3072XL1 ; buf
00001968                00001968 00001968  13459          ORG   @AUTO#do_unittest_write_split_seek+6504
00001968                                   13460 do_unittest_write_split_seek#fiftyfives#0 DS 100XL1 ; fiftyfives
                                           13461 *
000096B2                00000000 0000BFA0  13462 @CODE    CSECT
                                           13463 *
                                           13464 *
                                           13465 *
                                           13466 * ....... start of do_unittest_write_read_payload_correctness
000096B2                                   13467 @LNAME854 DS   0H
000096B2 0000002A                          13468          DC    X'0000002A'
000096B6 84966DA49589A3A3                  13469          DC    C'do_unittest_write_read_payload_c'
000096D6 9699998583A39585                  13470          DC    C'orrectness'
000096E0 00                                13471          DC    X'00'
                                           13472 do_unittest_write_read_payload_correctness DCCPRLG CINDEX=854,BASER=12,*
                                                                FRAME=360,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME854
                                           13473          macro
                                           13474          dccextrn &m
                                           13475          gblc    &$dccext(1000)
                                           13476          gbla    &$dccexti
                                           13477          lcla    &i
                                           13478 &$dccext(&$dccexti+1) setc    '&m'
                                           13479 &i       seta    1
                                           13480 .loop    aif    (&i gt &$dccexti).around
                                           13481          aif    ('&$dccext(&i)' eq '&m').getout
                                           13482 &i       seta    &i+1
                                           13483          ago     .loop
                                           13484 .around  anop
                                           13485 &$dccexti seta &$dccexti+1
                                           13486          extrn  &m
                                           13487 .getout  anop
                                           13488          mend
000096E8                                   13489+$eye0193    ds    0d                                                    02-DCCCA
000096E8 C4C3C3                            13490+         dc cl3'DCC'                                                    02-DCCCA
000096EB 01                                13491+         dc xl1'01' format one                                          02-DCCCA
000096EC 00000000                          13492+         dc a(0)                                                        02-DCCCA
000096F0 000000000000975A                  13493+         dc ad(@PER_854)                                                02-DCCCA
000096F8 0000000000000168                  13494+         dc ad(360)                                                     02-DCCCA
00009700 0000000000000000                  13495+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  267 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009708 0000000000001000                  13496+         dc ad(4096)                                                    02-DCCCA
00009710 20                                13497+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00009711 03                                13498+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00009712 03                                13499+         dc al1(3)                                                      02-DCCCA
00009713 08                                13500+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00009714 00                                13501+         dc bl.8'00000000'                                              02-DCCCA
00009715 000000                            13502+         dc al3(0)                                                      02-DCCCA
00009718 00000000000096B2                  13503+         dc ad(@LNAME854)                                               02-DCCCA
00009720                                   13504+         ds 0d                                                          02-DCCCA
00009720 00000000000096E8                  13505+         dc ad($eye0193)                                                02-DCCCA
00009728 0000000000000000                  13506+         dc ad(0)                                                       02-DCCCA
00009730                                   13507+         ds    0d                                                       01-DCCPR
00009730                                   13508+do_unittest_write_read_payload_correctness ds 0d                        01-DCCPR
00009730                                   13509+@REGION_854_1 ds 0h                                                     01-DCCPR
00009730 EBEC D008 0024          00000008  13510+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00009736 E3E0 D088 0004          00000088  13511+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000973C E3C0 D090 0004          00000090  13512+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00009742 B904 002E                         13513+         lgr   2,14                copy addr of our savearea            01-DCCPR
00009746 E3B0 C018 0004          00000018  13514+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000974C A7EB 0168               00000168  13515+         aghi  14,360              increase by frame size               01-DCCPR
00009750 E3E0 C020 0021          00000020  13516+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00009756 4720 B020               00000020  13517+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000975A                                   13518+@PER_854 ds    0h                                                       01-DCCPR
0000975A EBDE 2080 0024          00000080  13519+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00009760 E3C0 2090 0024          00000090  13520+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00009766 B904 00D2                         13521+         lgr   13,2                set real frame pointer               01-DCCPR
0000976A B904 00CF                         13522+         lgr   12,15               set base reg                         01-DCCPR
                        00009730           13523+         using @REGION_854_1,12                                         01-DCCPR
                                           13524          DCCPRV REG=7      ; Get PRV from DVT
0000976E E370 B008 0004          00000008  13525+         LG 7,8(0,11)                                                   01-DCCPR
                                           13526 * ******* End of Prologue
                                           13527 * *
                                           13528 * ***           uint32_t crc;
                                           13529 * ***           uint32_t write_crc, read_crc;
                                           13530 * ***           const int seed = 12345;
00009774 E54C D0B8 3039          000000B8  13531          MVHI  184(13),12345 ; seed
                                           13532 * ***           rd_buf_t b;
                                           13533 * ***           const size_t max_cnt = 20000;
0000977A A749 4E20               00004E20  13534          LGHI  4,20000     ; 20000
                                           13535 * ***           rd_slice_t slice;
                                           13536 * ***           size_t r;
                                           13537 * ***           size_t i;
                                           13538 * ***           int pass;
                                           13539 * ***
                                           13540 * ***           crc = rd_crc32_init();
0000977E E3F0 C0B8 0004          000097E8  13541          LG    15,@lit_854_881 ; rd_crc32_init
00009784                                   13542 @@gen_label983 DS    0H
00009784 05EF                              13543          BALR  14,15
00009786                                   13544 @@gen_label984 DS    0H
00009786 50F0 D0AC               000000AC  13545          ST    15,172(0,13) ; crc
                                           13546 * ***           crc = rd_crc32_update(crc, (void *)&seed, sizeof(seed)\
                                           13547 * );
                                                                                                                           Page  268 
  Active Usings: @REGION_854_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000978A B916 00FF                         13548          LLGFR 15,15
0000978E E3F0 D138 0024          00000138  13549          STG   15,312(0,13)
00009794 41F0 D0B8               000000B8  13550          LA    15,184(0,13)
00009798 E3F0 D140 0024          00000140  13551          STG   15,320(0,13)
0000979E E548 D148 0004          00000148  13552          MVGHI 328(13),4
000097A4 4110 D138               00000138  13553          LA    1,312(0,13)
000097A8 E3F0 C0C0 0004          000097F0  13554          LG    15,@lit_854_882 ; rd_crc32_update
000097AE                                   13555 @@gen_label985 DS    0H
000097AE 05EF                              13556          BALR  14,15
000097B0                                   13557 @@gen_label986 DS    0H
000097B0 50F0 D0AC               000000AC  13558          ST    15,172(0,13) ; crc
                                           13559 * ***
                                           13560 * ***           rd_buf_init(&b, 0, 0);
000097B4 41F0 D0E8               000000E8  13561          LA    15,232(0,13)
000097B8 E3F0 D138 0024          00000138  13562          STG   15,312(0,13)
000097BE D70F D140 D140 00000140 00000140  13563          XC    320(16,13),320(13)
000097C4 4110 D138               00000138  13564          LA    1,312(0,13)
000097C8 E3F0 C0C8 0004          000097F8  13565          LG    15,@lit_854_883 ; rd_buf_init
000097CE                                   13566 @@gen_label987 DS    0H
000097CE 05EF                              13567          BALR  14,15
000097D0                                   13568 @@gen_label988 DS    0H
                                           13569 * ***           for (i = 0 ; i < max_cnt ; i++) {
000097D0 E548 D0B0 0000          000000B0  13570          MVGHI 176(13),0   ; i
000097D6 47F0 C1A2               000098D2  13571          B     @L644
000097E0                                   13572          DS    0D
000097E0 00000168                          13573 @FRAMESIZE_854 DC F'360'
000097E4 00000000
000097E8 0000000000000950                  13574 @lit_854_881 DC AD(rd_crc32_init)
000097F0 00000000000009C8                  13575 @lit_854_882 DC AD(rd_crc32_update)
000097F8 0000000000001E28                  13576 @lit_854_883 DC AD(rd_buf_init)
00009800 00000000000022A8                  13577 @lit_854_885 DC AD(rd_buf_write)
00009808 0000000000000B20                  13578 @lit_854_886 DC AD(rd_crc32_finalize)
00009810 0000000000000638                  13579 @lit_854_887 DC AD(rd_buf_len)
00009818 0000000000000000                  13580 @lit_854_891 DC AD(fprintf)
00009820 000000000000BFA0                  13581 @lit_854_890 DC AD(@DATA)
00009828 000000000000CB02                  13582 @lit_854_889 DC AD(@strings@)
00009830 00000000                          13583 @lit_854_888 DC Q(__stderrp)
00009834 00000000                          13584 @lit_854_896 DC Q(rd_unittest_assert_on_failure)
00009838 0000000000000000                  13585 @lit_854_897 DC AD(__assert)
00009840 000008E2                          13586 @lit_region_diff_854_1_2  DC A(@REGION_854_2-@REGION_854_1)
00009844 00000000
00009848 0000000000003860                  13587 @lit_854_899 DC AD(rd_slice_init_full)
00009850 00000000000007F0                  13588 @lit_854_900 DC AD(rd_slice_abs_offset)
00009858 00000000000040C0                  13589 @lit_854_921 DC AD(rd_slice_peek)
00009860 0000000000003ED0                  13590 @lit_854_922 DC AD(rd_slice_read)
00009868 000000000000DB02                  13591 @lit_854_928 DC AD(@strings@+4096)
00009870                                   13592 @L643    DS    0H
                                           13593 * ***                   crc = rd_crc32_update(crc, (void *)&i, sizeof(\
                                           13594 * i));
00009870 E3F0 D0AC 0016          000000AC  13595          LLGF  15,172(0,13) ; crc
00009876 E3F0 D138 0024          00000138  13596          STG   15,312(0,13)
0000987C 41F0 D0B0               000000B0  13597          LA    15,176(0,13)
                                                                                                                           Page  269 
  Active Usings: @REGION_854_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009880 E3F0 D140 0024          00000140  13598          STG   15,320(0,13)
00009886 E548 D148 0008          00000148  13599          MVGHI 328(13),8
0000988C 4110 D138               00000138  13600          LA    1,312(0,13)
00009890 E3F0 C0C0 0004          000097F0  13601          LG    15,@lit_854_882 ; rd_crc32_update
00009896                                   13602 @@gen_label989 DS    0H
00009896 05EF                              13603          BALR  14,15
00009898                                   13604 @@gen_label990 DS    0H
00009898 50F0 D0AC               000000AC  13605          ST    15,172(0,13) ; crc
                                           13606 * ***                   rd_buf_write(&b, &crc, sizeof(crc));
0000989C 41F0 D0E8               000000E8  13607          LA    15,232(0,13)
000098A0 E3F0 D138 0024          00000138  13608          STG   15,312(0,13)
000098A6 41F0 D0AC               000000AC  13609          LA    15,172(0,13)
000098AA E3F0 D140 0024          00000140  13610          STG   15,320(0,13)
000098B0 E548 D148 0004          00000148  13611          MVGHI 328(13),4
000098B6 4110 D138               00000138  13612          LA    1,312(0,13)
000098BA E3F0 C0D0 0004          00009800  13613          LG    15,@lit_854_885 ; rd_buf_write
000098C0                                   13614 @@gen_label991 DS    0H
000098C0 05EF                              13615          BALR  14,15
000098C2                                   13616 @@gen_label992 DS    0H
                                           13617 * ***           }
000098C2 E3F0 D0B0 0004          000000B0  13618          LG    15,176(0,13) ; i
000098C8 A7FB 0001               00000001  13619          AGHI  15,1
000098CC E3F0 D0B0 0024          000000B0  13620          STG   15,176(0,13) ; i
000098D2                                   13621 @L644    DS    0H
000098D2 E3F0 D0B0 0004          000000B0  13622          LG    15,176(0,13) ; i
000098D8 B921 00F4                         13623          CLGR  15,4
000098DC 4740 C140               00009870  13624          BL    @L643
                                           13625 * ***
                                           13626 * ***           write_crc = rd_crc32_finalize(crc);
000098E0 E3F0 D0AC 0016          000000AC  13627          LLGF  15,172(0,13) ; crc
000098E6 E3F0 D138 0024          00000138  13628          STG   15,312(0,13)
000098EC 4110 D138               00000138  13629          LA    1,312(0,13)
000098F0 E3F0 C0D8 0004          00009808  13630          LG    15,@lit_854_886 ; rd_crc32_finalize
000098F6                                   13631 @@gen_label994 DS    0H
000098F6 05EF                              13632          BALR  14,15
000098F8                                   13633 @@gen_label995 DS    0H
000098F8 186F                              13634          LR    6,15
                                           13635 * ***
                                           13636 * ***           r = rd_buf_len(&b);
000098FA 41F0 D0E8               000000E8  13637          LA    15,232(0,13)
000098FE E3F0 D138 0024          00000138  13638          STG   15,312(0,13)
00009904 4110 D138               00000138  13639          LA    1,312(0,13)
00009908 E3F0 C0E0 0004          00009810  13640          LG    15,@lit_854_887 ; rd_buf_len
0000990E                                   13641 @@gen_label996 DS    0H
0000990E 05EF                              13642          BALR  14,15
00009910                                   13643 @@gen_label997 DS    0H
00009910 B904 002F                         13644          LGR   2,15        ; r
                                           13645 * ***           do { if (!(r == max_cnt * sizeof(crc))) { fprintf(__st\
                                           13646 * derrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "r == max\
                                           13647 * _cnt * sizeof(crc)" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", \
                                           13648 * 1531, __FUNCTION__); fprintf(__stderrp, "expected length %" "zu" ", \
                                           13649 * not %" "zu", r, max_cnt * sizeof(crc)); fprintf(__stderrp, "\033[0m\\
                                                                                                                           Page  270 
  Active Usings: @REGION_854_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           13650 * n"); if (rd_unittest_assert_on_failure) ((r == max_cnt * sizeof(crc)\
                                           13651 * ) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdb\
                                           13652 * uf.c", 1531, "r == max_cnt * sizeof(crc)")); return 1; } } while (0)\
                                           13653 * ;
00009914                                   13654 @L647    DS    0H
00009914 EBF4 0002 000D          00000002  13655          SLLG  15,4,2(0)   ; *0x4
0000991A B921 002F                         13656          CLGR  2,15
0000991E 4780 C2F4               00009A24  13657          BE    @L650
00009922 E330 C100 0016          00009830  13658          LLGF  3,@lit_854_888 ; __stderrp
00009928 E3F3 7000 0004          00000000  13659          LG    15,0(3,7)   ; __stderrp
0000992E E3F0 D138 0024          00000138  13660          STG   15,312(0,13)
00009934 E350 C0F8 0004          00009828  13661          LG    5,@lit_854_889
0000993A 41F0 5EF2               00000EF2  13662          LA    15,3826(0,5)
0000993E E3F0 D140 0024          00000140  13663          STG   15,320(0,13)
00009944 41F0 5040               00000040  13664          LA    15,64(0,5)
00009948 E3F0 D148 0024          00000148  13665          STG   15,328(0,13)
0000994E E548 D150 05FB          00000150  13666          MVGHI 336(13),1531
00009954 E360 C0F0 0004          00009820  13667          LG    6,@lit_854_890
0000995A 41F0 61C4               000001C4  13668          LA    15,452(0,6)
0000995E E3F0 D158 0024          00000158  13669          STG   15,344(0,13)
00009964 4110 D138               00000138  13670          LA    1,312(0,13)
00009968 E380 C0E8 0004          00009818  13671          LG    8,@lit_854_891 ; fprintf
0000996E B904 00F8                         13672          LGR   15,8
00009972                                   13673 @@gen_label999 DS    0H
00009972 05EF                              13674          BALR  14,15
00009974                                   13675 @@gen_label1000 DS    0H
00009974 E3F3 7000 0004          00000000  13676          LG    15,0(3,7)   ; __stderrp
0000997A E3F0 D138 0024          00000138  13677          STG   15,312(0,13)
00009980 41F0 5F3A               00000F3A  13678          LA    15,3898(0,5)
00009984 E3F0 D140 0024          00000140  13679          STG   15,320(0,13)
0000998A E320 D148 0024          00000148  13680          STG   2,328(0,13)
00009990 EBF4 0002 000D          00000002  13681          SLLG  15,4,2(0)   ; *0x4
00009996 E3F0 D150 0024          00000150  13682          STG   15,336(0,13)
0000999C 4110 D138               00000138  13683          LA    1,312(0,13)
000099A0 B904 00F8                         13684          LGR   15,8
000099A4                                   13685 @@gen_label1001 DS    0H
000099A4 05EF                              13686          BALR  14,15
000099A6                                   13687 @@gen_label1002 DS    0H
000099A6 E3F3 7000 0004          00000000  13688          LG    15,0(3,7)   ; __stderrp
000099AC E3F0 D138 0024          00000138  13689          STG   15,312(0,13)
000099B2 41F0 55A4               000005A4  13690          LA    15,1444(0,5)
000099B6 E3F0 D140 0024          00000140  13691          STG   15,320(0,13)
000099BC 4110 D138               00000138  13692          LA    1,312(0,13)
000099C0 B904 00F8                         13693          LGR   15,8
000099C4                                   13694 @@gen_label1003 DS    0H
000099C4 05EF                              13695          BALR  14,15
000099C6                                   13696 @@gen_label1004 DS    0H
000099C6 E3F0 C104 0016          00009834  13697          LLGF  15,@lit_854_896 ; rd_unittest_assert_on_failure
000099CC 41FF 7000               00000000  13698          LA    15,0(15,7)
000099D0 9500 F000      00000000 00000000  13699          CLI   0(15),0
000099D4 4780 C2E6               00009A16  13700          BE    @L651
000099D8 EBF4 0002 000D          00000002  13701          SLLG  15,4,2(0)   ; *0x4
                                                                                                                           Page  271 
  Active Usings: @REGION_854_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000099DE B921 002F                         13702          CLGR  2,15
000099E2 4780 C2E6               00009A16  13703          BE    @L651
000099E6                                   13704 @L652    DS    0H
000099E6 41F0 61C4               000001C4  13705          LA    15,452(0,6)
000099EA E3F0 D138 0024          00000138  13706          STG   15,312(0,13)
000099F0 41F0 5040               00000040  13707          LA    15,64(0,5)
000099F4 E3F0 D140 0024          00000140  13708          STG   15,320(0,13)
000099FA E548 D148 05FB          00000148  13709          MVGHI 328(13),1531
00009A00 41F0 5F58               00000F58  13710          LA    15,3928(0,5)
00009A04 E3F0 D150 0024          00000150  13711          STG   15,336(0,13)
00009A0A 4110 D138               00000138  13712          LA    1,312(0,13)
00009A0E E3F0 C108 0004          00009838  13713          LG    15,@lit_854_897 ; __assert
00009A14                                   13714 @@gen_label1007 DS    0H
00009A14 05EF                              13715          BALR  14,15
00009A16                                   13716 @@gen_label1008 DS    0H
00009A16                                   13717 @L653    DS    0H
00009A16                                   13718 @L651    DS    0H
00009A16 A7F9 0001               00000001  13719          LGHI  15,1        ; 1
00009A1A E3C0 C110 001A          00009840  13720          ALGF  12,@lit_region_diff_854_1_2
                                           13721          DROP  12
                        0000A012           13722          USING @REGION_854_2,12
00009A20 47F0 C214               0000A226  13723          B     @ret_lab_854
                                           13724          DROP  12
                        00009730           13725          USING @REGION_854_1,12
00009A24                                   13726 @L650    DS    0H
                                           13727 * ***
                                           13728 * ***
                                           13729 * ***
                                           13730 * ***
                                           13731 * ***
                                           13732 * ***
                                           13733 * ***           rd_slice_init_full(&slice, &b);
00009A24 41F0 D0C0               000000C0  13734          LA    15,192(0,13)
00009A28 E3F0 D138 0024          00000138  13735          STG   15,312(0,13)
00009A2E 41F0 D0E8               000000E8  13736          LA    15,232(0,13)
00009A32 E3F0 D140 0024          00000140  13737          STG   15,320(0,13)
00009A38 4110 D138               00000138  13738          LA    1,312(0,13)
00009A3C E3F0 C118 0004          00009848  13739          LG    15,@lit_854_899 ; rd_slice_init_full
00009A42                                   13740 @@gen_label1009 DS    0H
00009A42 05EF                              13741          BALR  14,15
00009A44                                   13742 @@gen_label1010 DS    0H
                                           13743 * ***
                                           13744 * ***           r = ((&slice)->end - rd_slice_abs_offset(&slice));
00009A44 E320 D0E0 0004          000000E0  13745          LG    2,224(0,13) ; offset of end in rd_slice_s
00009A4A 41F0 D0C0               000000C0  13746          LA    15,192(0,13)
00009A4E E3F0 D138 0024          00000138  13747          STG   15,312(0,13)
00009A54 4110 D138               00000138  13748          LA    1,312(0,13)
00009A58 E3F0 C120 0004          00009850  13749          LG    15,@lit_854_900 ; rd_slice_abs_offset
00009A5E                                   13750 @@gen_label1011 DS    0H
00009A5E 05EF                              13751          BALR  14,15
00009A60                                   13752 @@gen_label1012 DS    0H
00009A60 B90B 002F                         13753          SLGR  2,15
                                                                                                                           Page  272 
  Active Usings: @REGION_854_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           13754 * ***           do { if (!(r == rd_buf_len(&b))) { fprintf(__stderrp, \
                                           13755 * "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "r == rd_buf_len\
                                           13756 * (&b)" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1541, __FUNCTI\
                                           13757 * ON__); fprintf(__stderrp, "slice remains %" "zu" ", should be %" "zu\
                                           13758 * ", r, rd_buf_len(&b)); fprintf(__stderrp, "\033[0m\n"); if (rd_unitt\
                                           13759 * est_assert_on_failure) ((r == rd_buf_len(&b)) ? (void)0 : __assert(_\
                                           13760 * _func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1541, "r == rd_bu\
                                           13761 * f_len(&b)")); return 1; } } while (0);
00009A64                                   13762 @L654    DS    0H
00009A64 41F0 D0E8               000000E8  13763          LA    15,232(0,13)
00009A68 E3F0 D138 0024          00000138  13764          STG   15,312(0,13)
00009A6E 4110 D138               00000138  13765          LA    1,312(0,13)
00009A72 E330 C0E0 0004          00009810  13766          LG    3,@lit_854_887 ; rd_buf_len
00009A78 B904 00F3                         13767          LGR   15,3
00009A7C                                   13768 @@gen_label1013 DS    0H
00009A7C 05EF                              13769          BALR  14,15
00009A7E                                   13770 @@gen_label1014 DS    0H
00009A7E B921 002F                         13771          CLGR  2,15
00009A82 4780 C46E               00009B9E  13772          BE    @L657
00009A86 E340 C100 0016          00009830  13773          LLGF  4,@lit_854_888 ; __stderrp
00009A8C E3F4 7000 0004          00000000  13774          LG    15,0(4,7)   ; __stderrp
00009A92 E3F0 D138 0024          00000138  13775          STG   15,312(0,13)
00009A98 E350 C0F8 0004          00009828  13776          LG    5,@lit_854_889
00009A9E 41F0 5F74               00000F74  13777          LA    15,3956(0,5)
00009AA2 E3F0 D140 0024          00000140  13778          STG   15,320(0,13)
00009AA8 41F0 5040               00000040  13779          LA    15,64(0,5)
00009AAC E3F0 D148 0024          00000148  13780          STG   15,328(0,13)
00009AB2 E548 D150 0605          00000150  13781          MVGHI 336(13),1541
00009AB8 E360 C0F0 0004          00009820  13782          LG    6,@lit_854_890
00009ABE 41F0 61C4               000001C4  13783          LA    15,452(0,6)
00009AC2 E3F0 D158 0024          00000158  13784          STG   15,344(0,13)
00009AC8 4110 D138               00000138  13785          LA    1,312(0,13)
00009ACC E380 C0E8 0004          00009818  13786          LG    8,@lit_854_891 ; fprintf
00009AD2 B904 00F8                         13787          LGR   15,8
00009AD6                                   13788 @@gen_label1016 DS    0H
00009AD6 05EF                              13789          BALR  14,15
00009AD8                                   13790 @@gen_label1017 DS    0H
00009AD8 41F0 D0E8               000000E8  13791          LA    15,232(0,13)
00009ADC E3F0 D138 0024          00000138  13792          STG   15,312(0,13)
00009AE2 4110 D138               00000138  13793          LA    1,312(0,13)
00009AE6 B904 00F3                         13794          LGR   15,3
00009AEA                                   13795 @@gen_label1018 DS    0H
00009AEA 05EF                              13796          BALR  14,15
00009AEC                                   13797 @@gen_label1019 DS    0H
00009AEC E314 7000 0004          00000000  13798          LG    1,0(4,7)    ; __stderrp
00009AF2 E310 D138 0024          00000138  13799          STG   1,312(0,13)
00009AF8 4110 5FB6               00000FB6  13800          LA    1,4022(0,5)
00009AFC EB12 D140 0024          00000140  13801          STMG  1,2,320(13)
00009B02 E3F0 D150 0024          00000150  13802          STG   15,336(0,13)
00009B08 4110 D138               00000138  13803          LA    1,312(0,13)
00009B0C B904 00F8                         13804          LGR   15,8
00009B10                                   13805 @@gen_label1020 DS    0H
                                                                                                                           Page  273 
  Active Usings: @REGION_854_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009B10 05EF                              13806          BALR  14,15
00009B12                                   13807 @@gen_label1021 DS    0H
00009B12 E3F4 7000 0004          00000000  13808          LG    15,0(4,7)   ; __stderrp
00009B18 E3F0 D138 0024          00000138  13809          STG   15,312(0,13)
00009B1E 41F0 55A4               000005A4  13810          LA    15,1444(0,5)
00009B22 E3F0 D140 0024          00000140  13811          STG   15,320(0,13)
00009B28 4110 D138               00000138  13812          LA    1,312(0,13)
00009B2C B904 00F8                         13813          LGR   15,8
00009B30                                   13814 @@gen_label1022 DS    0H
00009B30 05EF                              13815          BALR  14,15
00009B32                                   13816 @@gen_label1023 DS    0H
00009B32 E3F0 C104 0016          00009834  13817          LLGF  15,@lit_854_896 ; rd_unittest_assert_on_failure
00009B38 41FF 7000               00000000  13818          LA    15,0(15,7)
00009B3C 9500 F000      00000000 00000000  13819          CLI   0(15),0
00009B40 4780 C460               00009B90  13820          BE    @L658
00009B44 41F0 D0E8               000000E8  13821          LA    15,232(0,13)
00009B48 E3F0 D138 0024          00000138  13822          STG   15,312(0,13)
00009B4E 4110 D138               00000138  13823          LA    1,312(0,13)
00009B52 B904 00F3                         13824          LGR   15,3
00009B56                                   13825 @@gen_label1025 DS    0H
00009B56 05EF                              13826          BALR  14,15
00009B58                                   13827 @@gen_label1026 DS    0H
00009B58 B921 002F                         13828          CLGR  2,15
00009B5C 4780 C460               00009B90  13829          BE    @L658
00009B60                                   13830 @L659    DS    0H
00009B60 41F0 61C4               000001C4  13831          LA    15,452(0,6)
00009B64 E3F0 D138 0024          00000138  13832          STG   15,312(0,13)
00009B6A 41F0 5040               00000040  13833          LA    15,64(0,5)
00009B6E E3F0 D140 0024          00000140  13834          STG   15,320(0,13)
00009B74 E548 D148 0605          00000148  13835          MVGHI 328(13),1541
00009B7A 41F0 5FD8               00000FD8  13836          LA    15,4056(0,5)
00009B7E E3F0 D150 0024          00000150  13837          STG   15,336(0,13)
00009B84 4110 D138               00000138  13838          LA    1,312(0,13)
00009B88 E3F0 C108 0004          00009838  13839          LG    15,@lit_854_897 ; __assert
00009B8E                                   13840 @@gen_label1028 DS    0H
00009B8E 05EF                              13841          BALR  14,15
00009B90                                   13842 @@gen_label1029 DS    0H
00009B90                                   13843 @L660    DS    0H
00009B90                                   13844 @L658    DS    0H
00009B90 A7F9 0001               00000001  13845          LGHI  15,1        ; 1
00009B94 E3C0 C110 001A          00009840  13846          ALGF  12,@lit_region_diff_854_1_2
                                           13847          DROP  12
                        0000A012           13848          USING @REGION_854_2,12
00009B9A 47F0 C214               0000A226  13849          B     @ret_lab_854
                                           13850          DROP  12
                        00009730           13851          USING @REGION_854_1,12
00009B9E                                   13852 @L657    DS    0H
                                           13853 * ***
                                           13854 * ***
                                           13855 * ***
                                           13856 * ***           for (pass = 0 ; pass < 2 ; pass++) {
00009B9E A738 0000               00000000  13857          LHI   3,0         ; 0
                                                                                                                           Page  274 
  Active Usings: @REGION_854_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009BA2 E3C0 C110 001A          00009840  13858          ALGF  12,@lit_region_diff_854_1_2
                                           13859          DROP  12
                        0000A012           13860          USING @REGION_854_2,12
00009BA8 47F0 C082               0000A094  13861          B     @L662
                                           13862          DROP  12
                        00009730           13863          USING @REGION_854_1,12
00009BAC                                   13864 @L661    DS    0H
                                           13865 * ***
                                           13866 * ***
                                           13867 * ***
                                           13868 * ***
                                           13869 * ***                   const char *pass_str = pass == 0 ? "peek":"rea\
                                           13870 * d";
00009BAC 1233                              13871          LTR   3,3
00009BAE 4770 C490               00009BC0  13872          BNE   @L665
00009BB2 E3F0 C0F8 0004          00009828  13873          LG    15,@lit_854_889
00009BB8 4150 FFEC               00000FEC  13874          LA    5,4076(0,15)
00009BBC 47F0 C49A               00009BCA  13875          B     @L666
00009BC0                                   13876 @L665    DS    0H
00009BC0 E3F0 C0F8 0004          00009828  13877          LG    15,@lit_854_889
00009BC6 4150 FFF2               00000FF2  13878          LA    5,4082(0,15)
00009BCA                                   13879 @L666    DS    0H
                                           13880 * ***
                                           13881 * ***                   crc = rd_crc32_init();
00009BCA E3F0 C0B8 0004          000097E8  13882          LG    15,@lit_854_881 ; rd_crc32_init
00009BD0                                   13883 @@gen_label1031 DS    0H
00009BD0 05EF                              13884          BALR  14,15
00009BD2                                   13885 @@gen_label1032 DS    0H
00009BD2 50F0 D0AC               000000AC  13886          ST    15,172(0,13) ; crc
                                           13887 * ***                   crc = rd_crc32_update(crc, (void *)&seed, size\
                                           13888 * of(seed));
00009BD6 B916 00FF                         13889          LLGFR 15,15
00009BDA E3F0 D138 0024          00000138  13890          STG   15,312(0,13)
00009BE0 41F0 D0B8               000000B8  13891          LA    15,184(0,13)
00009BE4 E3F0 D140 0024          00000140  13892          STG   15,320(0,13)
00009BEA E548 D148 0004          00000148  13893          MVGHI 328(13),4
00009BF0 4110 D138               00000138  13894          LA    1,312(0,13)
00009BF4 E3F0 C0C0 0004          000097F0  13895          LG    15,@lit_854_882 ; rd_crc32_update
00009BFA                                   13896 @@gen_label1033 DS    0H
00009BFA 05EF                              13897          BALR  14,15
00009BFC                                   13898 @@gen_label1034 DS    0H
00009BFC 50F0 D0AC               000000AC  13899          ST    15,172(0,13) ; crc
                                           13900 * ***
                                           13901 * ***                   for (i = 0 ; i < max_cnt ; i++) {
00009C00 E548 D0B0 0000          000000B0  13902          MVGHI 176(13),0   ; i
00009C06 47F0 C7C6               00009EF6  13903          B     @L668
00009C0A                                   13904 @L667    DS    0H
                                           13905 * ***                           uint32_t buf_crc;
                                           13906 * ***
                                           13907 * ***                           crc = rd_crc32_update(crc, (void *)&i,\
                                           13908 *  sizeof(i));
00009C0A E3F0 D0AC 0016          000000AC  13909          LLGF  15,172(0,13) ; crc
                                                                                                                           Page  275 
  Active Usings: @REGION_854_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009C10 E3F0 D138 0024          00000138  13910          STG   15,312(0,13)
00009C16 41F0 D0B0               000000B0  13911          LA    15,176(0,13)
00009C1A E3F0 D140 0024          00000140  13912          STG   15,320(0,13)
00009C20 E548 D148 0008          00000148  13913          MVGHI 328(13),8
00009C26 4110 D138               00000138  13914          LA    1,312(0,13)
00009C2A E3F0 C0C0 0004          000097F0  13915          LG    15,@lit_854_882 ; rd_crc32_update
00009C30                                   13916 @@gen_label1035 DS    0H
00009C30 05EF                              13917          BALR  14,15
00009C32                                   13918 @@gen_label1036 DS    0H
00009C32 50F0 D0AC               000000AC  13919          ST    15,172(0,13) ; crc
                                           13920 * ***
                                           13921 * ***                           if (pass == 0)
00009C36 1233                              13922          LTR   3,3
00009C38 4770 C54C               00009C7C  13923          BNE   @L671
                                           13924 * ***                                   r = rd_slice_peek(&slice, i * \
                                           13925 * sizeof(buf_crc),
                                           13926 * ***                                                     &buf_crc, si\
                                           13927 * zeof(buf_crc));
00009C3C 41F0 D0C0               000000C0  13928          LA    15,192(0,13)
00009C40 E3F0 D138 0024          00000138  13929          STG   15,312(0,13)
00009C46 E3F0 D0B0 0004          000000B0  13930          LG    15,176(0,13) ; i
00009C4C EBFF 0002 000D          00000002  13931          SLLG  15,15,2(0)  ; *0x4
00009C52 E3F0 D140 0024          00000140  13932          STG   15,320(0,13)
00009C58 41F0 D0A8               000000A8  13933          LA    15,168(0,13)
00009C5C E3F0 D148 0024          00000148  13934          STG   15,328(0,13)
00009C62 E548 D150 0004          00000150  13935          MVGHI 336(13),4
00009C68 4110 D138               00000138  13936          LA    1,312(0,13)
00009C6C E3F0 C128 0004          00009858  13937          LG    15,@lit_854_921 ; rd_slice_peek
00009C72                                   13938 @@gen_label1038 DS    0H
00009C72 05EF                              13939          BALR  14,15
00009C74                                   13940 @@gen_label1039 DS    0H
00009C74 B904 002F                         13941          LGR   2,15        ; r
00009C78 47F0 C576               00009CA6  13942          B     @L673
                                           13943 * ***                           else
00009C7C                                   13944 @L671    DS    0H
                                           13945 * ***                                   r = rd_slice_read(&slice, &buf\
                                           13946 * _crc,
                                           13947 * ***                                                     sizeof(buf_c\
                                           13948 * rc));
00009C7C 41F0 D0C0               000000C0  13949          LA    15,192(0,13)
00009C80 E3F0 D138 0024          00000138  13950          STG   15,312(0,13)
00009C86 41F0 D0A8               000000A8  13951          LA    15,168(0,13)
00009C8A E3F0 D140 0024          00000140  13952          STG   15,320(0,13)
00009C90 E548 D148 0004          00000148  13953          MVGHI 328(13),4
00009C96 4110 D138               00000138  13954          LA    1,312(0,13)
00009C9A E3F0 C130 0004          00009860  13955          LG    15,@lit_854_922 ; rd_slice_read
00009CA0                                   13956 @@gen_label1040 DS    0H
00009CA0 05EF                              13957          BALR  14,15
00009CA2                                   13958 @@gen_label1041 DS    0H
00009CA2 B904 002F                         13959          LGR   2,15        ; r
00009CA6                                   13960 @L672    DS    0H
                                           13961 * ***                           do { if (!(r == sizeof(buf_crc))) { fp\
                                                                                                                           Page  276 
  Active Usings: @REGION_854_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           13962 * rintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: "\
                                           13963 *  "r == sizeof(buf_crc)" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.\
                                           13964 * c", 1566, __FUNCTION__); fprintf(__stderrp, "%s() at #%" "zu" " fail\
                                           13965 * ed: " "r is %" "zu" " not %" "zu", pass_str, i, r, sizeof(buf_crc));\
                                           13966 *  fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure)\
                                           13967 *  ((r == sizeof(buf_crc)) ? (void)0 : __assert(__func__, "C:\\asgkafk\
                                           13968 * a\\librdkafka\\src\\rdbuf.c", 1566, "r == sizeof(buf_crc)")); return\
                                           13969 *  1; } } while (0);
00009CA6                                   13970 @L673    DS    0H
00009CA6 A72F 0004               00000004  13971          CGHI  2,4
00009CAA 4780 C68C               00009DBC  13972          BE    @L676
00009CAE E330 C100 0016          00009830  13973          LLGF  3,@lit_854_888 ; __stderrp
00009CB4 E3F3 7000 0004          00000000  13974          LG    15,0(3,7)   ; __stderrp
00009CBA E3F0 D138 0024          00000138  13975          STG   15,312(0,13)
00009CC0 E340 C0F8 0004          00009828  13976          LG    4,@lit_854_889
00009CC6 41F0 4FF8               00000FF8  13977          LA    15,4088(0,4)
00009CCA E3F0 D140 0024          00000140  13978          STG   15,320(0,13)
00009CD0 41F0 4040               00000040  13979          LA    15,64(0,4)
00009CD4 E3F0 D148 0024          00000148  13980          STG   15,328(0,13)
00009CDA E548 D150 061E          00000150  13981          MVGHI 336(13),1566
00009CE0 E360 C0F0 0004          00009820  13982          LG    6,@lit_854_890
00009CE6 41F0 61C4               000001C4  13983          LA    15,452(0,6)
00009CEA E3F0 D158 0024          00000158  13984          STG   15,344(0,13)
00009CF0 4110 D138               00000138  13985          LA    1,312(0,13)
00009CF4 E380 C0E8 0004          00009818  13986          LG    8,@lit_854_891 ; fprintf
00009CFA B904 00F8                         13987          LGR   15,8
00009CFE                                   13988 @@gen_label1043 DS    0H
00009CFE 05EF                              13989          BALR  14,15
00009D00                                   13990 @@gen_label1044 DS    0H
00009D00 E3F3 7000 0004          00000000  13991          LG    15,0(3,7)   ; __stderrp
00009D06 E3F0 D138 0024          00000138  13992          STG   15,312(0,13)
00009D0C E390 C138 0004          00009868  13993          LG    9,@lit_854_928
00009D12 41F0 903A               0000003A  13994          LA    15,58(0,9)
00009D16 E3F0 D140 0024          00000140  13995          STG   15,320(0,13)
00009D1C E350 D148 0024          00000148  13996          STG   5,328(0,13)
00009D22 E3F0 D0B0 0004          000000B0  13997          LG    15,176(0,13) ; i
00009D28 E3F0 D150 0024          00000150  13998          STG   15,336(0,13)
00009D2E E320 D158 0024          00000158  13999          STG   2,344(0,13)
00009D34 E548 D160 0004          00000160  14000          MVGHI 352(13),4
00009D3A 4110 D138               00000138  14001          LA    1,312(0,13)
00009D3E B904 00F8                         14002          LGR   15,8
00009D42                                   14003 @@gen_label1045 DS    0H
00009D42 05EF                              14004          BALR  14,15
00009D44                                   14005 @@gen_label1046 DS    0H
00009D44 E3F3 7000 0004          00000000  14006          LG    15,0(3,7)   ; __stderrp
00009D4A E3F0 D138 0024          00000138  14007          STG   15,312(0,13)
00009D50 41F0 45A4               000005A4  14008          LA    15,1444(0,4)
00009D54 E3F0 D140 0024          00000140  14009          STG   15,320(0,13)
00009D5A 4110 D138               00000138  14010          LA    1,312(0,13)
00009D5E B904 00F8                         14011          LGR   15,8
00009D62                                   14012 @@gen_label1047 DS    0H
00009D62 05EF                              14013          BALR  14,15
                                                                                                                           Page  277 
  Active Usings: @REGION_854_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009D64                                   14014 @@gen_label1048 DS    0H
00009D64 E3F0 C104 0016          00009834  14015          LLGF  15,@lit_854_896 ; rd_unittest_assert_on_failure
00009D6A 41FF 7000               00000000  14016          LA    15,0(15,7)
00009D6E 9500 F000      00000000 00000000  14017          CLI   0(15),0
00009D72 4780 C67E               00009DAE  14018          BE    @L677
00009D76 A72F 0004               00000004  14019          CGHI  2,4
00009D7A 4780 C67E               00009DAE  14020          BE    @L677
00009D7E                                   14021 @L678    DS    0H
00009D7E 41F0 61C4               000001C4  14022          LA    15,452(0,6)
00009D82 E3F0 D138 0024          00000138  14023          STG   15,312(0,13)
00009D88 41F0 4040               00000040  14024          LA    15,64(0,4)
00009D8C E3F0 D140 0024          00000140  14025          STG   15,320(0,13)
00009D92 E548 D148 061E          00000148  14026          MVGHI 328(13),1566
00009D98 41F0 9060               00000060  14027          LA    15,96(0,9)
00009D9C E3F0 D150 0024          00000150  14028          STG   15,336(0,13)
00009DA2 4110 D138               00000138  14029          LA    1,312(0,13)
00009DA6 E3F0 C108 0004          00009838  14030          LG    15,@lit_854_897 ; __assert
00009DAC                                   14031 @@gen_label1051 DS    0H
00009DAC 05EF                              14032          BALR  14,15
00009DAE                                   14033 @@gen_label1052 DS    0H
00009DAE                                   14034 @L679    DS    0H
00009DAE                                   14035 @L677    DS    0H
00009DAE A7F9 0001               00000001  14036          LGHI  15,1        ; 1
00009DB2 E3C0 C110 001A          00009840  14037          ALGF  12,@lit_region_diff_854_1_2
                                           14038          DROP  12
                        0000A012           14039          USING @REGION_854_2,12
00009DB8 47F0 C214               0000A226  14040          B     @ret_lab_854
                                           14041          DROP  12
                        00009730           14042          USING @REGION_854_1,12
00009DBC                                   14043 @L676    DS    0H
                                           14044 * ***
                                           14045 * ***
                                           14046 * ***
                                           14047 * ***                           do { if (!(buf_crc == crc)) { fprintf(\
                                           14048 * __stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "buf_\
                                           14049 * crc == crc" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1570, __\
                                           14050 * FUNCTION__); fprintf(__stderrp, "%s: invalid crc at #%" "zu" ": expe\
                                           14051 * cted %" "u" ", read %" "u", pass_str, i, crc, buf_crc); fprintf(__st\
                                           14052 * derrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((buf_crc ==\
                                           14053 *  crc) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\
                                           14054 * \rdbuf.c", 1570, "buf_crc == crc")); return 1; } } while (0);
00009DBC                                   14055 @L680    DS    0H
00009DBC 58F0 D0A8               000000A8  14056          L     15,168(0,13) ; buf_crc
00009DC0 55F0 D0AC               000000AC  14057          CL    15,172(0,13)
00009DC4 4780 C7B6               00009EE6  14058          BE    @L683
00009DC8 E320 C100 0016          00009830  14059          LLGF  2,@lit_854_888 ; __stderrp
00009DCE E3F2 7000 0004          00000000  14060          LG    15,0(2,7)   ; __stderrp
00009DD4 E3F0 D138 0024          00000138  14061          STG   15,312(0,13)
00009DDA E330 C138 0004          00009868  14062          LG    3,@lit_854_928
00009DE0 41F0 3076               00000076  14063          LA    15,118(0,3)
00009DE4 E3F0 D140 0024          00000140  14064          STG   15,320(0,13)
00009DEA E340 C0F8 0004          00009828  14065          LG    4,@lit_854_889
                                                                                                                           Page  278 
  Active Usings: @REGION_854_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009DF0 41F0 4040               00000040  14066          LA    15,64(0,4)
00009DF4 E3F0 D148 0024          00000148  14067          STG   15,328(0,13)
00009DFA E548 D150 0622          00000150  14068          MVGHI 336(13),1570
00009E00 E360 C0F0 0004          00009820  14069          LG    6,@lit_854_890
00009E06 41F0 61C4               000001C4  14070          LA    15,452(0,6)
00009E0A E3F0 D158 0024          00000158  14071          STG   15,344(0,13)
00009E10 4110 D138               00000138  14072          LA    1,312(0,13)
00009E14 E380 C0E8 0004          00009818  14073          LG    8,@lit_854_891 ; fprintf
00009E1A B904 00F8                         14074          LGR   15,8
00009E1E                                   14075 @@gen_label1054 DS    0H
00009E1E 05EF                              14076          BALR  14,15
00009E20                                   14077 @@gen_label1055 DS    0H
00009E20 E3F2 7000 0004          00000000  14078          LG    15,0(2,7)   ; __stderrp
00009E26 E3F0 D138 0024          00000138  14079          STG   15,312(0,13)
00009E2C 41F0 30B2               000000B2  14080          LA    15,178(0,3)
00009E30 E3F0 D140 0024          00000140  14081          STG   15,320(0,13)
00009E36 E350 D148 0024          00000148  14082          STG   5,328(0,13)
00009E3C E3F0 D0B0 0004          000000B0  14083          LG    15,176(0,13) ; i
00009E42 E3F0 D150 0024          00000150  14084          STG   15,336(0,13)
00009E48 E3F0 D0AC 0016          000000AC  14085          LLGF  15,172(0,13) ; crc
00009E4E E3F0 D158 0024          00000158  14086          STG   15,344(0,13)
00009E54 E3F0 D0A8 0016          000000A8  14087          LLGF  15,168(0,13) ; buf_crc
00009E5A E3F0 D160 0024          00000160  14088          STG   15,352(0,13)
00009E60 4110 D138               00000138  14089          LA    1,312(0,13)
00009E64 B904 00F8                         14090          LGR   15,8
00009E68                                   14091 @@gen_label1056 DS    0H
00009E68 05EF                              14092          BALR  14,15
00009E6A                                   14093 @@gen_label1057 DS    0H
00009E6A E3F2 7000 0004          00000000  14094          LG    15,0(2,7)   ; __stderrp
00009E70 E3F0 D138 0024          00000138  14095          STG   15,312(0,13)
00009E76 41F0 45A4               000005A4  14096          LA    15,1444(0,4)
00009E7A E3F0 D140 0024          00000140  14097          STG   15,320(0,13)
00009E80 4110 D138               00000138  14098          LA    1,312(0,13)
00009E84 B904 00F8                         14099          LGR   15,8
00009E88                                   14100 @@gen_label1058 DS    0H
00009E88 05EF                              14101          BALR  14,15
00009E8A                                   14102 @@gen_label1059 DS    0H
00009E8A E3F0 C104 0016          00009834  14103          LLGF  15,@lit_854_896 ; rd_unittest_assert_on_failure
00009E90 41FF 7000               00000000  14104          LA    15,0(15,7)
00009E94 9500 F000      00000000 00000000  14105          CLI   0(15),0
00009E98 4780 C7A8               00009ED8  14106          BE    @L684
00009E9C 58F0 D0A8               000000A8  14107          L     15,168(0,13) ; buf_crc
00009EA0 55F0 D0AC               000000AC  14108          CL    15,172(0,13)
00009EA4 4780 C7A8               00009ED8  14109          BE    @L684
00009EA8                                   14110 @L685    DS    0H
00009EA8 41F0 61C4               000001C4  14111          LA    15,452(0,6)
00009EAC E3F0 D138 0024          00000138  14112          STG   15,312(0,13)
00009EB2 41F0 4040               00000040  14113          LA    15,64(0,4)
00009EB6 E3F0 D140 0024          00000140  14114          STG   15,320(0,13)
00009EBC E548 D148 0622          00000148  14115          MVGHI 328(13),1570
00009EC2 41F0 30E0               000000E0  14116          LA    15,224(0,3)
00009EC6 E3F0 D150 0024          00000150  14117          STG   15,336(0,13)
                                                                                                                           Page  279 
  Active Usings: @REGION_854_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009ECC 4110 D138               00000138  14118          LA    1,312(0,13)
00009ED0 E3F0 C108 0004          00009838  14119          LG    15,@lit_854_897 ; __assert
00009ED6                                   14120 @@gen_label1062 DS    0H
00009ED6 05EF                              14121          BALR  14,15
00009ED8                                   14122 @@gen_label1063 DS    0H
00009ED8                                   14123 @L686    DS    0H
00009ED8                                   14124 @L684    DS    0H
00009ED8 A7F9 0001               00000001  14125          LGHI  15,1        ; 1
00009EDC E3C0 C110 001A          00009840  14126          ALGF  12,@lit_region_diff_854_1_2
                                           14127          DROP  12
                        0000A012           14128          USING @REGION_854_2,12
00009EE2 47F0 C214               0000A226  14129          B     @ret_lab_854
                                           14130          DROP  12
                        00009730           14131          USING @REGION_854_1,12
00009EE6                                   14132 @L683    DS    0H
                                           14133 * ***
                                           14134 * ***
                                           14135 * ***
                                           14136 * ***                   }
00009EE6 E3F0 D0B0 0004          000000B0  14137          LG    15,176(0,13) ; i
00009EEC A7FB 0001               00000001  14138          AGHI  15,1
00009EF0 E3F0 D0B0 0024          000000B0  14139          STG   15,176(0,13) ; i
00009EF6                                   14140 @L668    DS    0H
00009EF6 E3F0 D0B0 0004          000000B0  14141          LG    15,176(0,13) ; i
00009EFC B921 00F4                         14142          CLGR  15,4
00009F00 4740 C4DA               00009C0A  14143          BL    @L667
                                           14144 * ***
                                           14145 * ***                   read_crc = rd_crc32_finalize(crc);
00009F04 E3F0 D0AC 0016          000000AC  14146          LLGF  15,172(0,13) ; crc
00009F0A E3F0 D138 0024          00000138  14147          STG   15,312(0,13)
00009F10 4110 D138               00000138  14148          LA    1,312(0,13)
00009F14 E3F0 C0D8 0004          00009808  14149          LG    15,@lit_854_886 ; rd_crc32_finalize
00009F1A                                   14150 @@gen_label1065 DS    0H
00009F1A 05EF                              14151          BALR  14,15
00009F1C                                   14152 @@gen_label1066 DS    0H
00009F1C 182F                              14153          LR    2,15
                                           14154 * ***
                                           14155 * ***                   do { if (!(read_crc == write_crc)) { fprintf(_\
                                           14156 * _stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "read_\
                                           14157 * crc == write_crc" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 15\
                                           14158 * 78, __FUNCTION__); fprintf(__stderrp, "%s: finalized read crc %" "u"\
                                           14159 *  " != write crc %" "u", pass_str, read_crc, write_crc); fprintf(__st\
                                           14160 * derrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((read_crc =\
                                           14161 * = write_crc) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafk\
                                           14162 * a\\src\\rdbuf.c", 1578, "read_crc == write_crc")); return 1; } } whi\
                                           14163 * le (0);
00009F1E                                   14164 @L687    DS    0H
00009F1E 1526                              14165          CLR   2,6
00009F20 4770 C7FE               00009F2E  14166          BNE   *+14  Around region break
00009F24 E3C0 C110 001A          00009840  14167          ALGF  12,@lit_region_diff_854_1_2
                                           14168          DROP  12
                        0000A012           14169          USING @REGION_854_2,12
                                                                                                                           Page  280 
  Active Usings: @REGION_854_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009F2A 47F0 C07E               0000A090  14170          B     @L690
                                           14171          DROP  12
                        00009730           14172          USING @REGION_854_1,12
00009F2E E330 C100 0016          00009830  14173          LLGF  3,@lit_854_888 ; __stderrp
00009F34 E3F3 7000 0004          00000000  14174          LG    15,0(3,7)   ; __stderrp
00009F3A E3F0 D138 0024          00000138  14175          STG   15,312(0,13)
00009F40 E340 C138 0004          00009868  14176          LG    4,@lit_854_928
00009F46 41F0 40F0               000000F0  14177          LA    15,240(0,4)
00009F4A E3F0 D140 0024          00000140  14178          STG   15,320(0,13)
00009F50 E380 C0F8 0004          00009828  14179          LG    8,@lit_854_889
00009F56 41F0 8040               00000040  14180          LA    15,64(0,8)
00009F5A E3F0 D148 0024          00000148  14181          STG   15,328(0,13)
00009F60 E548 D150 062A          00000150  14182          MVGHI 336(13),1578
00009F66 E390 C0F0 0004          00009820  14183          LG    9,@lit_854_890
00009F6C 41F0 91C4               000001C4  14184          LA    15,452(0,9)
00009F70 E3F0 D158 0024          00000158  14185          STG   15,344(0,13)
00009F76 4110 D138               00000138  14186          LA    1,312(0,13)
00009F7A E3A0 C0E8 0004          00009818  14187          LG    10,@lit_854_891 ; fprintf
00009F80 B904 00FA                         14188          LGR   15,10
00009F84                                   14189 @@gen_label1068 DS    0H
00009F84 05EF                              14190          BALR  14,15
00009F86                                   14191 @@gen_label1069 DS    0H
00009F86 E3F3 7000 0004          00000000  14192          LG    15,0(3,7)   ; __stderrp
00009F8C E3F0 D138 0024          00000138  14193          STG   15,312(0,13)
00009F92 41F0 4134               00000134  14194          LA    15,308(0,4)
00009F96 E3F0 D140 0024          00000140  14195          STG   15,320(0,13)
00009F9C E350 D148 0024          00000148  14196          STG   5,328(0,13)
00009FA2 B916 00F2                         14197          LLGFR 15,2
00009FA6 E3F0 D150 0024          00000150  14198          STG   15,336(0,13)
00009FAC B916 00F6                         14199          LLGFR 15,6
00009FB0 E3F0 D158 0024          00000158  14200          STG   15,344(0,13)
00009FB6 4110 D138               00000138  14201          LA    1,312(0,13)
00009FBA B904 00FA                         14202          LGR   15,10
00009FBE                                   14203 @@gen_label1070 DS    0H
00009FBE 05EF                              14204          BALR  14,15
00009FC0                                   14205 @@gen_label1071 DS    0H
00009FC0 E3F3 7000 0004          00000000  14206          LG    15,0(3,7)   ; __stderrp
00009FC6 E3F0 D138 0024          00000138  14207          STG   15,312(0,13)
00009FCC 41F0 85A4               000005A4  14208          LA    15,1444(0,8)
00009FD0 E3F0 D140 0024          00000140  14209          STG   15,320(0,13)
00009FD6 4110 D138               00000138  14210          LA    1,312(0,13)
00009FDA B904 00FA                         14211          LGR   15,10
00009FDE                                   14212 @@gen_label1072 DS    0H
00009FDE 05EF                              14213          BALR  14,15
00009FE0                                   14214 @@gen_label1073 DS    0H
00009FE0 E3F0 C104 0016          00009834  14215          LLGF  15,@lit_854_896 ; rd_unittest_assert_on_failure
00009FE6 41FF 7000               00000000  14216          LA    15,0(15,7)
00009FEA 9500 F000      00000000 00000000  14217          CLI   0(15),0
00009FEE 4770 C8CC               00009FFC  14218          BNE   *+14  Around region break
00009FF2 E3C0 C110 001A          00009840  14219          ALGF  12,@lit_region_diff_854_1_2
                                           14220          DROP  12
                        0000A012           14221          USING @REGION_854_2,12
                                                                                                                           Page  281 
  Active Usings: @REGION_854_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00009FF8 47F0 C030               0000A042  14222          B     @L691
                                           14223          DROP  12
                        00009730           14224          USING @REGION_854_1,12
00009FFC 1526                              14225          CLR   2,6
00009FFE 4770 C8DC               0000A00C  14226          BNE   *+14  Around region break
0000A002 E3C0 C110 001A          00009840  14227          ALGF  12,@lit_region_diff_854_1_2
                                           14228          DROP  12
                        0000A012           14229          USING @REGION_854_2,12
0000A008 47F0 C030               0000A042  14230          B     @L691
                                           14231          DROP  12
                        00009730           14232          USING @REGION_854_1,12
0000A00C E3C0 C110 001A          00009840  14233          ALGF  12,@lit_region_diff_854_1_2
0000A012                                   14234 @REGION_854_2 DS 0H
                                           14235          DROP  12
                        0000A012           14236          USING @REGION_854_2,12
0000A012                                   14237 @L692    DS    0H
0000A012 41F0 91C4               000001C4  14238          LA    15,452(0,9)
0000A016 E3F0 D138 0024          00000138  14239          STG   15,312(0,13)
0000A01C 41F0 8040               00000040  14240          LA    15,64(0,8)
0000A020 E3F0 D140 0024          00000140  14241          STG   15,320(0,13)
0000A026 E548 D148 062A          00000148  14242          MVGHI 328(13),1578
0000A02C 41F0 415E               0000015E  14243          LA    15,350(0,4)
0000A030 E3F0 D150 0024          00000150  14244          STG   15,336(0,13)
0000A036 4110 D138               00000138  14245          LA    1,312(0,13)
0000A03A E3F0 C03E 0004          0000A050  14246          LG    15,@lit_854_958 ; __assert
0000A040                                   14247 @@gen_label1076 DS    0H
0000A040 05EF                              14248          BALR  14,15
0000A042                                   14249 @@gen_label1077 DS    0H
0000A042                                   14250 @L693    DS    0H
0000A042                                   14251 @L691    DS    0H
0000A042 A7F9 0001               00000001  14252          LGHI  15,1        ; 1
0000A046 47F0 C214               0000A226  14253          B     @ret_lab_854
0000A050                                   14254          DS    0D
0000A050 0000000000000000                  14255 @lit_854_958 DC AD(__assert)
0000A058 000008E2                          14256 @lit_region_diff_854_2_1  DC A(@REGION_854_2-@REGION_854_1)
0000A05C 00000000
0000A060 00000000000007F0                  14257 @lit_854_960 DC AD(rd_slice_abs_offset)
0000A068 0000000000000000                  14258 @lit_854_964 DC AD(fprintf)
0000A070 000000000000BFA0                  14259 @lit_854_963 DC AD(@DATA)
0000A078 000000000000CB02                  14260 @lit_854_962 DC AD(@strings@)
0000A080 00000000                          14261 @lit_854_961 DC Q(__stderrp)
0000A084 00000000                          14262 @lit_854_969 DC Q(rd_unittest_assert_on_failure)
0000A088 0000000000001CD0                  14263 @lit_854_972 DC AD(rd_buf_destroy)
0000A090                                   14264 @L690    DS    0H
                                           14265 * ***
                                           14266 * ***
                                           14267 * ***
                                           14268 * ***
                                           14269 * ***           }
0000A090 A73A 0001               00000001  14270          AHI   3,1
0000A094                                   14271 @L662    DS    0H
0000A094 A73E 0002               00000002  14272          CHI   3,2
                                                                                                                           Page  282 
  Active Usings: @REGION_854_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A098 47B0 C094               0000A0A6  14273          BNL   *+14  Around region break
0000A09C E3C0 C046 001B          0000A058  14274          SLGF  12,@lit_region_diff_854_2_1
                                           14275          DROP  12
                        00009730           14276          USING @REGION_854_1,12
0000A0A2 47F0 C47C               00009BAC  14277          B     @L661
                                           14278          DROP  12
                        0000A012           14279          USING @REGION_854_2,12
                                           14280 * ***
                                           14281 * ***           r = ((&slice)->end - rd_slice_abs_offset(&slice));
0000A0A6 E320 D0E0 0004          000000E0  14282          LG    2,224(0,13) ; offset of end in rd_slice_s
0000A0AC 41F0 D0C0               000000C0  14283          LA    15,192(0,13)
0000A0B0 E3F0 D138 0024          00000138  14284          STG   15,312(0,13)
0000A0B6 4110 D138               00000138  14285          LA    1,312(0,13)
0000A0BA E3F0 C04E 0004          0000A060  14286          LG    15,@lit_854_960 ; rd_slice_abs_offset
0000A0C0                                   14287 @@gen_label1079 DS    0H
0000A0C0 05EF                              14288          BALR  14,15
0000A0C2                                   14289 @@gen_label1080 DS    0H
0000A0C2 B90B 002F                         14290          SLGR  2,15
                                           14291 * ***           do { if (!(r == 0)) { fprintf(__stderrp, "\033[31mRDUT\
                                           14292 * : FAIL: %s:%d: %s: " "assert failed: " "r == 0" ": ", "C:\\asgkafka\\
                                           14293 * \librdkafka\\src\\rdbuf.c", 1586, __FUNCTION__); fprintf(__stderrp, \
                                           14294 * "slice remains %" "zu" ", should be %" "zu", r, (size_t)0); fprintf(\
                                           14295 * __stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r == 0\
                                           14296 * ) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdb\
                                           14297 * uf.c", 1586, "r == 0")); return 1; } } while (0);
0000A0C6                                   14298 @L694    DS    0H
0000A0C6 B902 00F2                         14299          LTGR  15,2
0000A0CA 4780 C1AC               0000A1BE  14300          BE    @L697
0000A0CE E330 C06E 0016          0000A080  14301          LLGF  3,@lit_854_961 ; __stderrp
0000A0D4 E3F3 7000 0004          00000000  14302          LG    15,0(3,7)   ; __stderrp
0000A0DA E3F0 D138 0024          00000138  14303          STG   15,312(0,13)
0000A0E0 E340 C066 0004          0000A078  14304          LG    4,@lit_854_962
0000A0E6 41F0 4552               00000552  14305          LA    15,1362(0,4)
0000A0EA E3F0 D140 0024          00000140  14306          STG   15,320(0,13)
0000A0F0 41F0 4040               00000040  14307          LA    15,64(0,4)
0000A0F4 E3F0 D148 0024          00000148  14308          STG   15,328(0,13)
0000A0FA E548 D150 0632          00000150  14309          MVGHI 336(13),1586
0000A100 E350 C05E 0004          0000A070  14310          LG    5,@lit_854_963
0000A106 41F0 51C4               000001C4  14311          LA    15,452(0,5)
0000A10A E3F0 D158 0024          00000158  14312          STG   15,344(0,13)
0000A110 4110 D138               00000138  14313          LA    1,312(0,13)
0000A114 E360 C056 0004          0000A068  14314          LG    6,@lit_854_964 ; fprintf
0000A11A B904 00F6                         14315          LGR   15,6
0000A11E                                   14316 @@gen_label1082 DS    0H
0000A11E 05EF                              14317          BALR  14,15
0000A120                                   14318 @@gen_label1083 DS    0H
0000A120 E3F3 7000 0004          00000000  14319          LG    15,0(3,7)   ; __stderrp
0000A126 E3F0 D138 0024          00000138  14320          STG   15,312(0,13)
0000A12C 41F0 4FB6               00000FB6  14321          LA    15,4022(0,4)
0000A130 E3F0 D140 0024          00000140  14322          STG   15,320(0,13)
0000A136 E320 D148 0024          00000148  14323          STG   2,328(0,13)
0000A13C D707 D150 D150 00000150 00000150  14324          XC    336(8,13),336(13)
                                                                                                                           Page  283 
  Active Usings: @REGION_854_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A142 4110 D138               00000138  14325          LA    1,312(0,13)
0000A146 B904 00F6                         14326          LGR   15,6
0000A14A                                   14327 @@gen_label1084 DS    0H
0000A14A 05EF                              14328          BALR  14,15
0000A14C                                   14329 @@gen_label1085 DS    0H
0000A14C E3F3 7000 0004          00000000  14330          LG    15,0(3,7)   ; __stderrp
0000A152 E3F0 D138 0024          00000138  14331          STG   15,312(0,13)
0000A158 41F0 45A4               000005A4  14332          LA    15,1444(0,4)
0000A15C E3F0 D140 0024          00000140  14333          STG   15,320(0,13)
0000A162 4110 D138               00000138  14334          LA    1,312(0,13)
0000A166 B904 00F6                         14335          LGR   15,6
0000A16A                                   14336 @@gen_label1086 DS    0H
0000A16A 05EF                              14337          BALR  14,15
0000A16C                                   14338 @@gen_label1087 DS    0H
0000A16C E3F0 C072 0016          0000A084  14339          LLGF  15,@lit_854_969 ; rd_unittest_assert_on_failure
0000A172 41FF 7000               00000000  14340          LA    15,0(15,7)
0000A176 9500 F000      00000000 00000000  14341          CLI   0(15),0
0000A17A 4780 C1A4               0000A1B6  14342          BE    @L698
0000A17E B902 00F2                         14343          LTGR  15,2
0000A182 4780 C1A4               0000A1B6  14344          BE    @L698
0000A186                                   14345 @L699    DS    0H
0000A186 41F0 51C4               000001C4  14346          LA    15,452(0,5)
0000A18A E3F0 D138 0024          00000138  14347          STG   15,312(0,13)
0000A190 41F0 4040               00000040  14348          LA    15,64(0,4)
0000A194 E3F0 D140 0024          00000140  14349          STG   15,320(0,13)
0000A19A E548 D148 0632          00000148  14350          MVGHI 328(13),1586
0000A1A0 41F0 42F2               000002F2  14351          LA    15,754(0,4)
0000A1A4 E3F0 D150 0024          00000150  14352          STG   15,336(0,13)
0000A1AA 4110 D138               00000138  14353          LA    1,312(0,13)
0000A1AE E3F0 C03E 0004          0000A050  14354          LG    15,@lit_854_958 ; __assert
0000A1B4                                   14355 @@gen_label1090 DS    0H
0000A1B4 05EF                              14356          BALR  14,15
0000A1B6                                   14357 @@gen_label1091 DS    0H
0000A1B6                                   14358 @L700    DS    0H
0000A1B6                                   14359 @L698    DS    0H
0000A1B6 A7F9 0001               00000001  14360          LGHI  15,1        ; 1
0000A1BA 47F0 C214               0000A226  14361          B     @ret_lab_854
0000A1BE                                   14362 @L697    DS    0H
                                           14363 * ***
                                           14364 * ***
                                           14365 * ***
                                           14366 * ***           rd_buf_destroy(&b);
0000A1BE 41F0 D0E8               000000E8  14367          LA    15,232(0,13)
0000A1C2 E3F0 D138 0024          00000138  14368          STG   15,312(0,13)
0000A1C8 4110 D138               00000138  14369          LA    1,312(0,13)
0000A1CC E3F0 C076 0004          0000A088  14370          LG    15,@lit_854_972 ; rd_buf_destroy
0000A1D2                                   14371 @@gen_label1092 DS    0H
0000A1D2 05EF                              14372          BALR  14,15
0000A1D4                                   14373 @@gen_label1093 DS    0H
                                           14374 * ***
                                           14375 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                           14376 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1592, __FUNCTI\
                                                                                                                           Page  284 
  Active Usings: @REGION_854_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           14377 * ON__); return 0; } while (0);
0000A1D4                                   14378 @L701    DS    0H
0000A1D4 E3F0 C06E 0016          0000A080  14379          LLGF  15,@lit_854_961 ; __stderrp
0000A1DA E3FF 7000 0004          00000000  14380          LG    15,0(15,7)  ; __stderrp
0000A1E0 E3F0 D138 0024          00000138  14381          STG   15,312(0,13)
0000A1E6 E3F0 C066 0004          0000A078  14382          LG    15,@lit_854_962
0000A1EC 4110 F966               00000966  14383          LA    1,2406(0,15)
0000A1F0 E310 D140 0024          00000140  14384          STG   1,320(0,13)
0000A1F6 41F0 F040               00000040  14385          LA    15,64(0,15)
0000A1FA E3F0 D148 0024          00000148  14386          STG   15,328(0,13)
0000A200 E548 D150 0638          00000150  14387          MVGHI 336(13),1592
0000A206 E3F0 C05E 0004          0000A070  14388          LG    15,@lit_854_963
0000A20C 41F0 F1C4               000001C4  14389          LA    15,452(0,15)
0000A210 E3F0 D158 0024          00000158  14390          STG   15,344(0,13)
0000A216 4110 D138               00000138  14391          LA    1,312(0,13)
0000A21A E3F0 C056 0004          0000A068  14392          LG    15,@lit_854_964 ; fprintf
0000A220                                   14393 @@gen_label1094 DS    0H
0000A220 05EF                              14394          BALR  14,15
0000A222                                   14395 @@gen_label1095 DS    0H
0000A222 A7F9 0000               00000000  14396          LGHI  15,0        ; 0
                                           14397 * ***   }
0000A226                                   14398 @ret_lab_854 DS 0H
                                           14399 * * **** Start of Epilogue
                                           14400          DCCEPIL
0000A226                                   14401+         ds 0h                                                          01-DCCEP
                                           14402+* Epilog
0000A226 D707 D088 D088 00000088 00000088  14403+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000A22C E3D0 D080 0004          00000080  14404+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000A232 E3C0 D090 0004          00000090  14405+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000A238 E3B0 C018 0004          00000018  14406+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000A23E E3C0 B010 0021          00000010  14407+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000A244 E3E0 D008 0004          00000008  14408+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000A24A EB1C D020 0004          00000020  14409+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000A250 078E                              14410+         bcr 8,14                if same dsab, just return              01-DCCEP
0000A252 E3F0 D010 0024          00000010  14411+         stg 15,16(0,13)         save return code                       01-DCCEP
0000A258 E300 D018 0024          00000018  14412+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000A25E E3F0 D090 0004          00000090  14413+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000A264 E3F0 F018 0004          00000018  14414+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000A26A 47F0 F040               00000040  14415+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           14416+* End of Epilog
                                           14417 * * **** End of Epilogue
                                           14418          DROP  12
                                           14419 *
                                           14420 *   DSECT for automatic variables in "do_unittest_write_read_payload_c
                                           14421 *           orrectness"
                                           14422 *      (FUNCTION #854)
                                           14423 *
00000000                00000000 00000138  14424 @AUTO#do_unittest_write_read_payload_correctness DSECT
00000000                                   14425          DS    XL168
000000A8                                   14426 do_unittest_write_read_payload_correctness#buf_crc#7 DS 1F ; buf_crc
000000AC                000000AC 000000A8  14427          ORG   @AUTO#do_unittest_write_read_payload_correctness+168
000000A8                                   14428 do_unittest_write_read_payload_correctness#pass#0 DS 1F ; pass
                                                                                                                           Page  285 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000AC                000000AC 000000A8  14429          ORG   @AUTO#do_unittest_write_read_payload_correctness+168
000000A8                                   14430 do_unittest_write_read_payload_correctness#r#0 DS 8XL1 ; r
000000B0                000000B0 000000A8  14431          ORG   @AUTO#do_unittest_write_read_payload_correctness+168
000000A8                                   14432 do_unittest_write_read_payload_correctness#max_cnt#0 DS 8XL1 ; max_cnt
000000B0                000000B0 000000A8  14433          ORG   @AUTO#do_unittest_write_read_payload_correctness+168
000000A8                                   14434 do_unittest_write_read_payload_correctness#read_crc#0 DS 1F ; read_crc
000000AC                000000AC 000000A8  14435          ORG   @AUTO#do_unittest_write_read_payload_correctness+168
000000A8                                   14436 do_unittest_write_read_payload_correctness#write_crc#0 DS 1F ; write_cr*
                                                                c
000000AC                000000AC 000000AC  14437          ORG   @AUTO#do_unittest_write_read_payload_correctness+172
000000AC                                   14438 do_unittest_write_read_payload_correctness#crc#0 DS 1F ; crc
000000B0                000000B0 000000B0  14439          ORG   @AUTO#do_unittest_write_read_payload_correctness+176
000000B0                                   14440 do_unittest_write_read_payload_correctness#i#0 DS 8XL1 ; i
000000B8                000000B8 000000B8  14441          ORG   @AUTO#do_unittest_write_read_payload_correctness+184
000000B8                                   14442 do_unittest_write_read_payload_correctness#seed#0 DS 1F ; seed
000000BC                000000BC 000000C0  14443          ORG   @AUTO#do_unittest_write_read_payload_correctness+192
000000C0                                   14444 do_unittest_write_read_payload_correctness#slice#0 DS 40XL1 ; slice
000000E8                000000E8 000000E8  14445          ORG   @AUTO#do_unittest_write_read_payload_correctness+232
000000E8                                   14446 do_unittest_write_read_payload_correctness#b#0 DS 80XL1 ; b
                                           14447 *
0000A26E                00000000 0000BFA0  14448 @CODE    CSECT
                                           14449 *
                                           14450 *
                                           14451 *
                                           14452 * ....... start of do_unittest_iov_verify0
0000A26E                                   14453 @LNAME855 DS   0H
0000A26E 00000017                          14454          DC    X'00000017'
0000A272 84966DA49589A3A3                  14455          DC    C'do_unittest_iov_verify0'
0000A289 00                                14456          DC    X'00'
                                           14457 do_unittest_iov_verify0 DCCPRLG CINDEX=855,BASER=12,FRAME=472,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME855
                                           14458          macro
                                           14459          dccextrn &m
                                           14460          gblc    &$dccext(1000)
                                           14461          gbla    &$dccexti
                                           14462          lcla    &i
                                           14463 &$dccext(&$dccexti+1) setc    '&m'
                                           14464 &i       seta    1
                                           14465 .loop    aif    (&i gt &$dccexti).around
                                           14466          aif    ('&$dccext(&i)' eq '&m').getout
                                           14467 &i       seta    &i+1
                                           14468          ago     .loop
                                           14469 .around  anop
                                           14470 &$dccexti seta &$dccexti+1
                                           14471          extrn  &m
                                           14472 .getout  anop
                                           14473          mend
0000A290                                   14474+$eye0197    ds    0d                                                    02-DCCCA
0000A290 C4C3C3                            14475+         dc cl3'DCC'                                                    02-DCCCA
0000A293 01                                14476+         dc xl1'01' format one                                          02-DCCCA
0000A294 00000000                          14477+         dc a(0)                                                        02-DCCCA
0000A298 000000000000A302                  14478+         dc ad(@PER_855)                                                02-DCCCA
                                                                                                                           Page  286 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A2A0 00000000000001D8                  14479+         dc ad(472)                                                     02-DCCCA
0000A2A8 0000000000000000                  14480+         dc ad(0)                                                       02-DCCCA
0000A2B0 0000000000001000                  14481+         dc ad(4096)                                                    02-DCCCA
0000A2B8 20                                14482+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000A2B9 03                                14483+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000A2BA 03                                14484+         dc al1(3)                                                      02-DCCCA
0000A2BB 08                                14485+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000A2BC 00                                14486+         dc bl.8'00000000'                                              02-DCCCA
0000A2BD 000000                            14487+         dc al3(0)                                                      02-DCCCA
0000A2C0 000000000000A26E                  14488+         dc ad(@LNAME855)                                               02-DCCCA
0000A2C8                                   14489+         ds 0d                                                          02-DCCCA
0000A2C8 000000000000A290                  14490+         dc ad($eye0197)                                                02-DCCCA
0000A2D0 0000000000000000                  14491+         dc ad(0)                                                       02-DCCCA
0000A2D8                                   14492+         ds    0d                                                       01-DCCPR
0000A2D8                                   14493+do_unittest_iov_verify0 ds 0d                                           01-DCCPR
0000A2D8                                   14494+@REGION_855_1 ds 0h                                                     01-DCCPR
0000A2D8 EBEC D008 0024          00000008  14495+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000A2DE E3E0 D088 0004          00000088  14496+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000A2E4 E3C0 D090 0004          00000090  14497+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000A2EA B904 002E                         14498+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000A2EE E3B0 C018 0004          00000018  14499+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000A2F4 A7EB 01D8               000001D8  14500+         aghi  14,472              increase by frame size               01-DCCPR
0000A2F8 E3E0 C020 0021          00000020  14501+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000A2FE 4720 B020               00000020  14502+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000A302                                   14503+@PER_855 ds    0h                                                       01-DCCPR
0000A302 EBDE 2080 0024          00000080  14504+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000A308 E3C0 2090 0024          00000090  14505+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000A30E B904 00D2                         14506+         lgr   13,2                set real frame pointer               01-DCCPR
0000A312 B904 00CF                         14507+         lgr   12,15               set base reg                         01-DCCPR
                        0000A2D8           14508+         using @REGION_855_1,12                                         01-DCCPR
                                           14509          DCCPRV REG=5      ; Get PRV from DVT
0000A316 E350 B008 0004          00000008  14510+         LG 5,8(0,11)                                                   01-DCCPR
0000A31C B904 0041                         14511          LGR   4,1         ; ptr to parm area
                                           14512 * ******* End of Prologue
                                           14513 * *
                                           14514 * ***                   struct iovec iov[16];
0000A320 EB23 4008 0004          00000008  14515          LMG   2,3,8(4)    ; exp_iovcnt
                                           14516 * ***
                                           14517 * ***           size_t iovcnt;
                                           14518 * ***           size_t i;
                                           14519 * ***           size_t totsize, sum;
                                           14520 * ***
                                           14521 * ***           ((exp_iovcnt <= 16) ? (void)0 : __assert(__func__, "C:\
                                           14522 * \\asgkafka\\librdkafka\\src\\rdbuf.c", 1607, "exp_iovcnt <= 16"));
0000A326 C22E 0000 0010                    14523          CLGFI 2,X'00000010'
0000A32C 47D0 C09A               0000A372  14524          BNH   @L705
0000A330                                   14525 @L704    DS    0H
0000A330 E3F0 C1F8 0004          0000A4D0  14526          LG    15,@lit_855_990
0000A336 41F0 F1F0               000001F0  14527          LA    15,496(0,15)
0000A33A E3F0 D1B0 0024          000001B0  14528          STG   15,432(0,13)
0000A340 E3F0 C1F0 0004          0000A4C8  14529          LG    15,@lit_855_991
0000A346 41F0 F040               00000040  14530          LA    15,64(0,15)
                                                                                                                           Page  287 
  Active Usings: @REGION_855_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A34A E3F0 D1B8 0024          000001B8  14531          STG   15,440(0,13)
0000A350 E548 D1C0 0647          000001C0  14532          MVGHI 448(13),1607
0000A356 E3F0 C1E8 0004          0000A4C0  14533          LG    15,@lit_855_992
0000A35C 41F0 F174               00000174  14534          LA    15,372(0,15)
0000A360 E3F0 D1C8 0024          000001C8  14535          STG   15,456(0,13)
0000A366 4110 D1B0               000001B0  14536          LA    1,432(0,13)
0000A36A E3F0 C1E0 0004          0000A4B8  14537          LG    15,@lit_855_993 ; __assert
0000A370                                   14538 @@gen_label1097 DS    0H
0000A370 05EF                              14539          BALR  14,15
0000A372                                   14540 @@gen_label1098 DS    0H
0000A372                                   14541 @L705    DS    0H
                                           14542 * ***
                                           14543 * ***           totsize = rd_buf_get_write_iov(b, iov, &iovcnt,
                                           14544 * ***                                          16, exp_totsize);
0000A372 E3F0 4000 0004          00000000  14545          LG    15,0(0,4)   ; b
0000A378 E3F0 D1B0 0024          000001B0  14546          STG   15,432(0,13)
0000A37E 41F0 D0A8               000000A8  14547          LA    15,168(0,13)
0000A382 E3F0 D1B8 0024          000001B8  14548          STG   15,440(0,13)
0000A388 41F0 D1A8               000001A8  14549          LA    15,424(0,13)
0000A38C E3F0 D1C0 0024          000001C0  14550          STG   15,448(0,13)
0000A392 E548 D1C8 0010          000001C8  14551          MVGHI 456(13),16
0000A398 E330 D1D0 0024          000001D0  14552          STG   3,464(0,13)
0000A39E 4110 D1B0               000001B0  14553          LA    1,432(0,13)
0000A3A2 E3F0 C200 0004          0000A4D8  14554          LG    15,@lit_855_994 ; rd_buf_get_write_iov
0000A3A8                                   14555 @@gen_label1099 DS    0H
0000A3A8 05EF                              14556          BALR  14,15
0000A3AA                                   14557 @@gen_label1100 DS    0H
0000A3AA B904 004F                         14558          LGR   4,15
                                           14559 * ***           do { if (!(totsize >= exp_totsize)) { fprintf(__stderr\
                                           14560 * p, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "totsize >= e\
                                           14561 * xp_totsize" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1611, __\
                                           14562 * FUNCTION__); fprintf(__stderrp, "iov total size %" "zu" " expected >\
                                           14563 * = %" "zu", totsize, exp_totsize); fprintf(__stderrp, "\033[0m\n"); i\
                                           14564 * f (rd_unittest_assert_on_failure) ((totsize >= exp_totsize) ? (void)\
                                           14565 * 0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 161\
                                           14566 * 1, "totsize >= exp_totsize")); return 1; } } while (0);
0000A3AE                                   14567 @L706    DS    0H
0000A3AE B921 0043                         14568          CLGR  4,3
0000A3B2 47B0 C21C               0000A4F4  14569          BNL   @L709
0000A3B6 E320 C210 0016          0000A4E8  14570          LLGF  2,@lit_855_995 ; __stderrp
0000A3BC E3F2 5000 0004          00000000  14571          LG    15,0(2,5)   ; __stderrp
0000A3C2 E3F0 D1B0 0024          000001B0  14572          STG   15,432(0,13)
0000A3C8 E360 C1E8 0004          0000A4C0  14573          LG    6,@lit_855_992
0000A3CE 41F0 6186               00000186  14574          LA    15,390(0,6)
0000A3D2 E3F0 D1B8 0024          000001B8  14575          STG   15,440(0,13)
0000A3D8 E370 C1F0 0004          0000A4C8  14576          LG    7,@lit_855_991
0000A3DE 41F0 7040               00000040  14577          LA    15,64(0,7)
0000A3E2 E3F0 D1C0 0024          000001C0  14578          STG   15,448(0,13)
0000A3E8 E548 D1C8 064B          000001C8  14579          MVGHI 456(13),1611
0000A3EE E380 C1F8 0004          0000A4D0  14580          LG    8,@lit_855_990
0000A3F4 41F0 81F0               000001F0  14581          LA    15,496(0,8)
0000A3F8 E3F0 D1D0 0024          000001D0  14582          STG   15,464(0,13)
                                                                                                                           Page  288 
  Active Usings: @REGION_855_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A3FE 4110 D1B0               000001B0  14583          LA    1,432(0,13)
0000A402 E390 C208 0004          0000A4E0  14584          LG    9,@lit_855_999 ; fprintf
0000A408 B904 00F9                         14585          LGR   15,9
0000A40C                                   14586 @@gen_label1102 DS    0H
0000A40C 05EF                              14587          BALR  14,15
0000A40E                                   14588 @@gen_label1103 DS    0H
0000A40E E3F2 5000 0004          00000000  14589          LG    15,0(2,5)   ; __stderrp
0000A414 E3F0 D1B0 0024          000001B0  14590          STG   15,432(0,13)
0000A41A 41F0 61CA               000001CA  14591          LA    15,458(0,6)
0000A41E E3F0 D1B8 0024          000001B8  14592          STG   15,440(0,13)
0000A424 E340 D1C0 0024          000001C0  14593          STG   4,448(0,13)
0000A42A E330 D1C8 0024          000001C8  14594          STG   3,456(0,13)
0000A430 4110 D1B0               000001B0  14595          LA    1,432(0,13)
0000A434 B904 00F9                         14596          LGR   15,9
0000A438                                   14597 @@gen_label1104 DS    0H
0000A438 05EF                              14598          BALR  14,15
0000A43A                                   14599 @@gen_label1105 DS    0H
0000A43A E3F2 5000 0004          00000000  14600          LG    15,0(2,5)   ; __stderrp
0000A440 E3F0 D1B0 0024          000001B0  14601          STG   15,432(0,13)
0000A446 41F0 75A4               000005A4  14602          LA    15,1444(0,7)
0000A44A E3F0 D1B8 0024          000001B8  14603          STG   15,440(0,13)
0000A450 4110 D1B0               000001B0  14604          LA    1,432(0,13)
0000A454 B904 00F9                         14605          LGR   15,9
0000A458                                   14606 @@gen_label1106 DS    0H
0000A458 05EF                              14607          BALR  14,15
0000A45A                                   14608 @@gen_label1107 DS    0H
0000A45A E3F0 C214 0016          0000A4EC  14609          LLGF  15,@lit_855_1004 ; rd_unittest_assert_on_failure
0000A460 41FF 5000               00000000  14610          LA    15,0(15,5)
0000A464 9500 F000      00000000 00000000  14611          CLI   0(15),0
0000A468 4780 C1CC               0000A4A4  14612          BE    @L710
0000A46C B921 0043                         14613          CLGR  4,3
0000A470 47B0 C1CC               0000A4A4  14614          BNL   @L710
0000A474                                   14615 @L711    DS    0H
0000A474 41F0 81F0               000001F0  14616          LA    15,496(0,8)
0000A478 E3F0 D1B0 0024          000001B0  14617          STG   15,432(0,13)
0000A47E 41F0 7040               00000040  14618          LA    15,64(0,7)
0000A482 E3F0 D1B8 0024          000001B8  14619          STG   15,440(0,13)
0000A488 E548 D1C0 064B          000001C0  14620          MVGHI 448(13),1611
0000A48E 41F0 61EE               000001EE  14621          LA    15,494(0,6)
0000A492 E3F0 D1C8 0024          000001C8  14622          STG   15,456(0,13)
0000A498 4110 D1B0               000001B0  14623          LA    1,432(0,13)
0000A49C E3F0 C1E0 0004          0000A4B8  14624          LG    15,@lit_855_993 ; __assert
0000A4A2                                   14625 @@gen_label1110 DS    0H
0000A4A2 05EF                              14626          BALR  14,15
0000A4A4                                   14627 @@gen_label1111 DS    0H
0000A4A4                                   14628 @L712    DS    0H
0000A4A4                                   14629 @L710    DS    0H
0000A4A4 A7F9 0001               00000001  14630          LGHI  15,1        ; 1
0000A4A8 47F0 C77C               0000AA54  14631          B     @ret_lab_855
0000A4B0                                   14632          DS    0D
0000A4B0 000001D8                          14633 @FRAMESIZE_855 DC F'472'
0000A4B4 00000000
                                                                                                                           Page  289 
  Active Usings: @REGION_855_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A4B8 0000000000000000                  14634 @lit_855_993 DC AD(__assert)
0000A4C0 000000000000DB02                  14635 @lit_855_992 DC AD(@strings@+4096)
0000A4C8 000000000000CB02                  14636 @lit_855_991 DC AD(@strings@)
0000A4D0 000000000000BFA0                  14637 @lit_855_990 DC AD(@DATA)
0000A4D8 00000000000032F8                  14638 @lit_855_994 DC AD(rd_buf_get_write_iov)
0000A4E0 0000000000000000                  14639 @lit_855_999 DC AD(fprintf)
0000A4E8 00000000                          14640 @lit_855_995 DC Q(__stderrp)
0000A4EC 00000000                          14641 @lit_855_1004 DC Q(rd_unittest_assert_on_failure)
0000A4F0 00000782                          14642 @lit_region_diff_855_1_2  DC A(@REGION_855_2-@REGION_855_1)
0000A4F4                                   14643 @L709    DS    0H
                                           14644 * ***
                                           14645 * ***
                                           14646 * ***           do { if (!(iovcnt >= exp_iovcnt && iovcnt <= 16)) { fp\
                                           14647 * rintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: "\
                                           14648 *  "iovcnt >= exp_iovcnt && iovcnt <= MY_IOV_MAX" ": ", "C:\\asgkafka\\
                                           14649 * \librdkafka\\src\\rdbuf.c", 1614, __FUNCTION__); fprintf(__stderrp, \
                                           14650 * "iovcnt %" "zu" ", expected %" "zu" " < x <= MY_IOV_MAX", iovcnt, ex\
                                           14651 * p_iovcnt); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_o\
                                           14652 * n_failure) ((iovcnt >= exp_iovcnt && iovcnt <= 16) ? (void)0 : __ass\
                                           14653 * ert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1614, "iovcn\
                                           14654 * t >= exp_iovcnt && iovcnt <= 16")); return 1; } } while (0);
0000A4F4                                   14655 @L713    DS    0H
0000A4F4 E3F0 D1A8 0004          000001A8  14656          LG    15,424(0,13) ; iovcnt
0000A4FA B921 00F2                         14657          CLGR  15,2
0000A4FE 4740 C234               0000A50C  14658          BL    @L717
0000A502 C2FE 0000 0010                    14659          CLGFI 15,X'00000010'
0000A508 47D0 C340               0000A618  14660          BNH   @L716
0000A50C                                   14661 @L717    DS    0H
0000A50C E330 C210 0016          0000A4E8  14662          LLGF  3,@lit_855_995 ; __stderrp
0000A512 E3F3 5000 0004          00000000  14663          LG    15,0(3,5)   ; __stderrp
0000A518 E3F0 D1B0 0024          000001B0  14664          STG   15,432(0,13)
0000A51E E340 C1E8 0004          0000A4C0  14665          LG    4,@lit_855_992
0000A524 41F0 4206               00000206  14666          LA    15,518(0,4)
0000A528 E3F0 D1B8 0024          000001B8  14667          STG   15,440(0,13)
0000A52E E360 C1F0 0004          0000A4C8  14668          LG    6,@lit_855_991
0000A534 41F0 6040               00000040  14669          LA    15,64(0,6)
0000A538 E3F0 D1C0 0024          000001C0  14670          STG   15,448(0,13)
0000A53E E548 D1C8 064E          000001C8  14671          MVGHI 456(13),1614
0000A544 E370 C1F8 0004          0000A4D0  14672          LG    7,@lit_855_990
0000A54A 41F0 71F0               000001F0  14673          LA    15,496(0,7)
0000A54E E3F0 D1D0 0024          000001D0  14674          STG   15,464(0,13)
0000A554 4110 D1B0               000001B0  14675          LA    1,432(0,13)
0000A558 E380 C208 0004          0000A4E0  14676          LG    8,@lit_855_999 ; fprintf
0000A55E B904 00F8                         14677          LGR   15,8
0000A562                                   14678 @@gen_label1114 DS    0H
0000A562 05EF                              14679          BALR  14,15
0000A564                                   14680 @@gen_label1115 DS    0H
0000A564 E3F3 5000 0004          00000000  14681          LG    15,0(3,5)   ; __stderrp
0000A56A E3F0 D1B0 0024          000001B0  14682          STG   15,432(0,13)
0000A570 41F0 4260               00000260  14683          LA    15,608(0,4)
0000A574 E3F0 D1B8 0024          000001B8  14684          STG   15,440(0,13)
0000A57A E3F0 D1A8 0004          000001A8  14685          LG    15,424(0,13) ; iovcnt
                                                                                                                           Page  290 
  Active Usings: @REGION_855_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A580 E3F0 D1C0 0024          000001C0  14686          STG   15,448(0,13)
0000A586 E320 D1C8 0024          000001C8  14687          STG   2,456(0,13)
0000A58C 4110 D1B0               000001B0  14688          LA    1,432(0,13)
0000A590 B904 00F8                         14689          LGR   15,8
0000A594                                   14690 @@gen_label1116 DS    0H
0000A594 05EF                              14691          BALR  14,15
0000A596                                   14692 @@gen_label1117 DS    0H
0000A596 E3F3 5000 0004          00000000  14693          LG    15,0(3,5)   ; __stderrp
0000A59C E3F0 D1B0 0024          000001B0  14694          STG   15,432(0,13)
0000A5A2 41F0 65A4               000005A4  14695          LA    15,1444(0,6)
0000A5A6 E3F0 D1B8 0024          000001B8  14696          STG   15,440(0,13)
0000A5AC 4110 D1B0               000001B0  14697          LA    1,432(0,13)
0000A5B0 B904 00F8                         14698          LGR   15,8
0000A5B4                                   14699 @@gen_label1118 DS    0H
0000A5B4 05EF                              14700          BALR  14,15
0000A5B6                                   14701 @@gen_label1119 DS    0H
0000A5B6 E3F0 C214 0016          0000A4EC  14702          LLGF  15,@lit_855_1004 ; rd_unittest_assert_on_failure
0000A5BC 41FF 5000               00000000  14703          LA    15,0(15,5)
0000A5C0 9500 F000      00000000 00000000  14704          CLI   0(15),0
0000A5C4 4780 C338               0000A610  14705          BE    @L718
0000A5C8 E3F0 D1A8 0004          000001A8  14706          LG    15,424(0,13) ; iovcnt
0000A5CE B921 00F2                         14707          CLGR  15,2
0000A5D2 4740 C308               0000A5E0  14708          BL    @L719
0000A5D6 C2FE 0000 0010                    14709          CLGFI 15,X'00000010'
0000A5DC 47D0 C338               0000A610  14710          BNH   @L718
0000A5E0                                   14711 @L719    DS    0H
0000A5E0 41F0 71F0               000001F0  14712          LA    15,496(0,7)
0000A5E4 E3F0 D1B0 0024          000001B0  14713          STG   15,432(0,13)
0000A5EA 41F0 6040               00000040  14714          LA    15,64(0,6)
0000A5EE E3F0 D1B8 0024          000001B8  14715          STG   15,440(0,13)
0000A5F4 E548 D1C0 064E          000001C0  14716          MVGHI 448(13),1614
0000A5FA 41F0 428C               0000028C  14717          LA    15,652(0,4)
0000A5FE E3F0 D1C8 0024          000001C8  14718          STG   15,456(0,13)
0000A604 4110 D1B0               000001B0  14719          LA    1,432(0,13)
0000A608 E3F0 C1E0 0004          0000A4B8  14720          LG    15,@lit_855_993 ; __assert
0000A60E                                   14721 @@gen_label1123 DS    0H
0000A60E 05EF                              14722          BALR  14,15
0000A610                                   14723 @@gen_label1124 DS    0H
0000A610                                   14724 @L720    DS    0H
0000A610                                   14725 @L718    DS    0H
0000A610 A7F9 0001               00000001  14726          LGHI  15,1        ; 1
0000A614 47F0 C77C               0000AA54  14727          B     @ret_lab_855
0000A618                                   14728 @L716    DS    0H
                                           14729 * ***
                                           14730 * ***
                                           14731 * ***
                                           14732 * ***
                                           14733 * ***           sum = 0;
0000A618 A739 0000               00000000  14734          LGHI  3,0         ; 0
                                           14735 * ***           for (i = 0 ; i < iovcnt ; i++) {
0000A61C B904 0023                         14736          LGR   2,3         ; i
0000A620 47F0 C676               0000A94E  14737          B     @L722
                                                                                                                           Page  291 
  Active Usings: @REGION_855_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           14738 * ***                   do { if (!(iov[i].iov_base)) { fprintf(__stder\
                                           14739 * rp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "iov[i].iov_\
                                           14740 * base" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1621, __FUNCTI\
                                           14741 * ON__); fprintf(__stderrp, "iov #%" "zu" " iov_base not set", i); fpr\
                                           14742 * intf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((i\
                                           14743 * ov[i].iov_base) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdk\
                                           14744 * afka\\src\\rdbuf.c", 1621, "iov[i].iov_base")); return 1; } } while \
                                           14745 * (0);
0000A624                                   14746 @L725    DS    0H
0000A624 EBF2 0004 000D          00000004  14747          SLLG  15,2,4(0)   ; *0x10
0000A62A E3FF D0A8 0002          000000A8  14748          LTG   15,168(15,13)
0000A630 4770 C454               0000A72C  14749          BNZ   @L728
0000A634 E330 C210 0016          0000A4E8  14750          LLGF  3,@lit_855_995 ; __stderrp
0000A63A E3F3 5000 0004          00000000  14751          LG    15,0(3,5)   ; __stderrp
0000A640 E3F0 D1B0 0024          000001B0  14752          STG   15,432(0,13)
0000A646 E340 C1E8 0004          0000A4C0  14753          LG    4,@lit_855_992
0000A64C 41F0 42B2               000002B2  14754          LA    15,690(0,4)
0000A650 E3F0 D1B8 0024          000001B8  14755          STG   15,440(0,13)
0000A656 E360 C1F0 0004          0000A4C8  14756          LG    6,@lit_855_991
0000A65C 41F0 6040               00000040  14757          LA    15,64(0,6)
0000A660 E3F0 D1C0 0024          000001C0  14758          STG   15,448(0,13)
0000A666 E548 D1C8 0655          000001C8  14759          MVGHI 456(13),1621
0000A66C E370 C1F8 0004          0000A4D0  14760          LG    7,@lit_855_990
0000A672 41F0 71F0               000001F0  14761          LA    15,496(0,7)
0000A676 E3F0 D1D0 0024          000001D0  14762          STG   15,464(0,13)
0000A67C 4110 D1B0               000001B0  14763          LA    1,432(0,13)
0000A680 E380 C208 0004          0000A4E0  14764          LG    8,@lit_855_999 ; fprintf
0000A686 B904 00F8                         14765          LGR   15,8
0000A68A                                   14766 @@gen_label1126 DS    0H
0000A68A 05EF                              14767          BALR  14,15
0000A68C                                   14768 @@gen_label1127 DS    0H
0000A68C E3F3 5000 0004          00000000  14769          LG    15,0(3,5)   ; __stderrp
0000A692 E3F0 D1B0 0024          000001B0  14770          STG   15,432(0,13)
0000A698 41F0 42F0               000002F0  14771          LA    15,752(0,4)
0000A69C E3F0 D1B8 0024          000001B8  14772          STG   15,440(0,13)
0000A6A2 E320 D1C0 0024          000001C0  14773          STG   2,448(0,13)
0000A6A8 4110 D1B0               000001B0  14774          LA    1,432(0,13)
0000A6AC B904 00F8                         14775          LGR   15,8
0000A6B0                                   14776 @@gen_label1128 DS    0H
0000A6B0 05EF                              14777          BALR  14,15
0000A6B2                                   14778 @@gen_label1129 DS    0H
0000A6B2 E3F3 5000 0004          00000000  14779          LG    15,0(3,5)   ; __stderrp
0000A6B8 E3F0 D1B0 0024          000001B0  14780          STG   15,432(0,13)
0000A6BE 41F0 65A4               000005A4  14781          LA    15,1444(0,6)
0000A6C2 E3F0 D1B8 0024          000001B8  14782          STG   15,440(0,13)
0000A6C8 4110 D1B0               000001B0  14783          LA    1,432(0,13)
0000A6CC B904 00F8                         14784          LGR   15,8
0000A6D0                                   14785 @@gen_label1130 DS    0H
0000A6D0 05EF                              14786          BALR  14,15
0000A6D2                                   14787 @@gen_label1131 DS    0H
0000A6D2 E3F0 C214 0016          0000A4EC  14788          LLGF  15,@lit_855_1004 ; rd_unittest_assert_on_failure
0000A6D8 41FF 5000               00000000  14789          LA    15,0(15,5)
                                                                                                                           Page  292 
  Active Usings: @REGION_855_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A6DC 9500 F000      00000000 00000000  14790          CLI   0(15),0
0000A6E0 4780 C44C               0000A724  14791          BE    @L729
0000A6E4 EBF2 0004 000D          00000004  14792          SLLG  15,2,4(0)   ; *0x10
0000A6EA E3FF D0A8 0002          000000A8  14793          LTG   15,168(15,13)
0000A6F0 4770 C44C               0000A724  14794          BNZ   @L729
0000A6F4                                   14795 @L730    DS    0H
0000A6F4 41F0 71F0               000001F0  14796          LA    15,496(0,7)
0000A6F8 E3F0 D1B0 0024          000001B0  14797          STG   15,432(0,13)
0000A6FE 41F0 6040               00000040  14798          LA    15,64(0,6)
0000A702 E3F0 D1B8 0024          000001B8  14799          STG   15,440(0,13)
0000A708 E548 D1C0 0655          000001C0  14800          MVGHI 448(13),1621
0000A70E 41F0 430A               0000030A  14801          LA    15,778(0,4)
0000A712 E3F0 D1C8 0024          000001C8  14802          STG   15,456(0,13)
0000A718 4110 D1B0               000001B0  14803          LA    1,432(0,13)
0000A71C E3F0 C1E0 0004          0000A4B8  14804          LG    15,@lit_855_993 ; __assert
0000A722                                   14805 @@gen_label1134 DS    0H
0000A722 05EF                              14806          BALR  14,15
0000A724                                   14807 @@gen_label1135 DS    0H
0000A724                                   14808 @L731    DS    0H
0000A724                                   14809 @L729    DS    0H
0000A724 A7F9 0001               00000001  14810          LGHI  15,1        ; 1
0000A728 47F0 C77C               0000AA54  14811          B     @ret_lab_855
0000A72C                                   14812 @L728    DS    0H
                                           14813 * ***
                                           14814 * ***                   do { if (!(iov[i].iov_len)) { fprintf(__stderr\
                                           14815 * p, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "iov[i].iov_l\
                                           14816 * en" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1623, __FUNCTION\
                                           14817 * __); fprintf(__stderrp, "iov #%" "zu" " iov_len %" "zu" " out of ran\
                                           14818 * ge", i, iov[i].iov_len); fprintf(__stderrp, "\033[0m\n"); if (rd_uni\
                                           14819 * ttest_assert_on_failure) ((iov[i].iov_len) ? (void)0 : __assert(__fu\
                                           14820 * nc__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1623, "iov[i].iov_le\
                                           14821 * n")); return 1; } } while (0);
0000A72C                                   14822 @L732    DS    0H
0000A72C EBF2 0004 000D          00000004  14823          SLLG  15,2,4(0)   ; *0x10
0000A732 E3FF D0B0 0002          000000B0  14824          LTG   15,176(15,13) ; offset of iov_len in iovec
0000A738 4770 C56E               0000A846  14825          BNZ   @L735
0000A73C E330 C210 0016          0000A4E8  14826          LLGF  3,@lit_855_995 ; __stderrp
0000A742 E3F3 5000 0004          00000000  14827          LG    15,0(3,5)   ; __stderrp
0000A748 E3F0 D1B0 0024          000001B0  14828          STG   15,432(0,13)
0000A74E E340 C1E8 0004          0000A4C0  14829          LG    4,@lit_855_992
0000A754 41F0 431A               0000031A  14830          LA    15,794(0,4)
0000A758 E3F0 D1B8 0024          000001B8  14831          STG   15,440(0,13)
0000A75E E360 C1F0 0004          0000A4C8  14832          LG    6,@lit_855_991
0000A764 41F0 6040               00000040  14833          LA    15,64(0,6)
0000A768 E3F0 D1C0 0024          000001C0  14834          STG   15,448(0,13)
0000A76E E548 D1C8 0657          000001C8  14835          MVGHI 456(13),1623
0000A774 E370 C1F8 0004          0000A4D0  14836          LG    7,@lit_855_990
0000A77A 41F0 71F0               000001F0  14837          LA    15,496(0,7)
0000A77E E3F0 D1D0 0024          000001D0  14838          STG   15,464(0,13)
0000A784 4110 D1B0               000001B0  14839          LA    1,432(0,13)
0000A788 E380 C208 0004          0000A4E0  14840          LG    8,@lit_855_999 ; fprintf
0000A78E B904 00F8                         14841          LGR   15,8
                                                                                                                           Page  293 
  Active Usings: @REGION_855_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A792                                   14842 @@gen_label1137 DS    0H
0000A792 05EF                              14843          BALR  14,15
0000A794                                   14844 @@gen_label1138 DS    0H
0000A794 E3F3 5000 0004          00000000  14845          LG    15,0(3,5)   ; __stderrp
0000A79A E3F0 D1B0 0024          000001B0  14846          STG   15,432(0,13)
0000A7A0 41F0 4356               00000356  14847          LA    15,854(0,4)
0000A7A4 E3F0 D1B8 0024          000001B8  14848          STG   15,440(0,13)
0000A7AA E320 D1C0 0024          000001C0  14849          STG   2,448(0,13)
0000A7B0 EBF2 0004 000D          00000004  14850          SLLG  15,2,4(0)   ; *0x10
0000A7B6 E3FF D0B0 0004          000000B0  14851          LG    15,176(15,13)
0000A7BC E3F0 D1C8 0024          000001C8  14852          STG   15,456(0,13)
0000A7C2 4110 D1B0               000001B0  14853          LA    1,432(0,13)
0000A7C6 B904 00F8                         14854          LGR   15,8
0000A7CA                                   14855 @@gen_label1139 DS    0H
0000A7CA 05EF                              14856          BALR  14,15
0000A7CC                                   14857 @@gen_label1140 DS    0H
0000A7CC E3F3 5000 0004          00000000  14858          LG    15,0(3,5)   ; __stderrp
0000A7D2 E3F0 D1B0 0024          000001B0  14859          STG   15,432(0,13)
0000A7D8 41F0 65A4               000005A4  14860          LA    15,1444(0,6)
0000A7DC E3F0 D1B8 0024          000001B8  14861          STG   15,440(0,13)
0000A7E2 4110 D1B0               000001B0  14862          LA    1,432(0,13)
0000A7E6 B904 00F8                         14863          LGR   15,8
0000A7EA                                   14864 @@gen_label1141 DS    0H
0000A7EA 05EF                              14865          BALR  14,15
0000A7EC                                   14866 @@gen_label1142 DS    0H
0000A7EC E3F0 C214 0016          0000A4EC  14867          LLGF  15,@lit_855_1004 ; rd_unittest_assert_on_failure
0000A7F2 41FF 5000               00000000  14868          LA    15,0(15,5)
0000A7F6 9500 F000      00000000 00000000  14869          CLI   0(15),0
0000A7FA 4780 C566               0000A83E  14870          BE    @L736
0000A7FE EBF2 0004 000D          00000004  14871          SLLG  15,2,4(0)   ; *0x10
0000A804 E3FF D0B0 0002          000000B0  14872          LTG   15,176(15,13) ; offset of iov_len in iovec
0000A80A 4770 C566               0000A83E  14873          BNZ   @L736
0000A80E                                   14874 @L737    DS    0H
0000A80E 41F0 71F0               000001F0  14875          LA    15,496(0,7)
0000A812 E3F0 D1B0 0024          000001B0  14876          STG   15,432(0,13)
0000A818 41F0 6040               00000040  14877          LA    15,64(0,6)
0000A81C E3F0 D1B8 0024          000001B8  14878          STG   15,440(0,13)
0000A822 E548 D1C0 0657          000001C0  14879          MVGHI 448(13),1623
0000A828 41F0 4378               00000378  14880          LA    15,888(0,4)
0000A82C E3F0 D1C8 0024          000001C8  14881          STG   15,456(0,13)
0000A832 4110 D1B0               000001B0  14882          LA    1,432(0,13)
0000A836 E3F0 C1E0 0004          0000A4B8  14883          LG    15,@lit_855_993 ; __assert
0000A83C                                   14884 @@gen_label1145 DS    0H
0000A83C 05EF                              14885          BALR  14,15
0000A83E                                   14886 @@gen_label1146 DS    0H
0000A83E                                   14887 @L738    DS    0H
0000A83E                                   14888 @L736    DS    0H
0000A83E A7F9 0001               00000001  14889          LGHI  15,1        ; 1
0000A842 47F0 C77C               0000AA54  14890          B     @ret_lab_855
0000A846                                   14891 @L735    DS    0H
                                           14892 * ***
                                           14893 * ***
                                                                                                                           Page  294 
  Active Usings: @REGION_855_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           14894 * ***                   sum += iov[i].iov_len;
0000A846 EBF2 0004 000D          00000004  14895          SLLG  15,2,4(0)   ; *0x10
0000A84C E33F D0B0 000A          000000B0  14896          ALG   3,176(15,13)
                                           14897 * ***                   do { if (!(sum <= totsize)) { fprintf(__stderr\
                                           14898 * p, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "sum <= totsi\
                                           14899 * ze" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1627, __FUNCTION\
                                           14900 * __); fprintf(__stderrp, "sum %" "zu" " > totsize %" "zu", sum, totsi\
                                           14901 * ze); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_fail\
                                           14902 * ure) ((sum <= totsize) ? (void)0 : __assert(__func__, "C:\\asgkafka\\
                                           14903 * \librdkafka\\src\\rdbuf.c", 1627, "sum <= totsize")); return 1; } } \
                                           14904 * while (0);
0000A852                                   14905 @L739    DS    0H
0000A852 B921 0034                         14906          CLGR  3,4
0000A856 47D0 C672               0000A94A  14907          BNH   @L742
0000A85A E320 C210 0016          0000A4E8  14908          LLGF  2,@lit_855_995 ; __stderrp
0000A860 E3F2 5000 0004          00000000  14909          LG    15,0(2,5)   ; __stderrp
0000A866 E3F0 D1B0 0024          000001B0  14910          STG   15,432(0,13)
0000A86C E360 C1E8 0004          0000A4C0  14911          LG    6,@lit_855_992
0000A872 41F0 6388               00000388  14912          LA    15,904(0,6)
0000A876 E3F0 D1B8 0024          000001B8  14913          STG   15,440(0,13)
0000A87C E370 C1F0 0004          0000A4C8  14914          LG    7,@lit_855_991
0000A882 41F0 7040               00000040  14915          LA    15,64(0,7)
0000A886 E3F0 D1C0 0024          000001C0  14916          STG   15,448(0,13)
0000A88C E548 D1C8 065B          000001C8  14917          MVGHI 456(13),1627
0000A892 E380 C1F8 0004          0000A4D0  14918          LG    8,@lit_855_990
0000A898 41F0 81F0               000001F0  14919          LA    15,496(0,8)
0000A89C E3F0 D1D0 0024          000001D0  14920          STG   15,464(0,13)
0000A8A2 4110 D1B0               000001B0  14921          LA    1,432(0,13)
0000A8A6 E390 C208 0004          0000A4E0  14922          LG    9,@lit_855_999 ; fprintf
0000A8AC B904 00F9                         14923          LGR   15,9
0000A8B0                                   14924 @@gen_label1148 DS    0H
0000A8B0 05EF                              14925          BALR  14,15
0000A8B2                                   14926 @@gen_label1149 DS    0H
0000A8B2 E3F2 5000 0004          00000000  14927          LG    15,0(2,5)   ; __stderrp
0000A8B8 E3F0 D1B0 0024          000001B0  14928          STG   15,432(0,13)
0000A8BE 41F0 63C4               000003C4  14929          LA    15,964(0,6)
0000A8C2 E3F0 D1B8 0024          000001B8  14930          STG   15,440(0,13)
0000A8C8 EB34 D1C0 0024          000001C0  14931          STMG  3,4,448(13)
0000A8CE 4110 D1B0               000001B0  14932          LA    1,432(0,13)
0000A8D2 B904 00F9                         14933          LGR   15,9
0000A8D6                                   14934 @@gen_label1150 DS    0H
0000A8D6 05EF                              14935          BALR  14,15
0000A8D8                                   14936 @@gen_label1151 DS    0H
0000A8D8 E3F2 5000 0004          00000000  14937          LG    15,0(2,5)   ; __stderrp
0000A8DE E3F0 D1B0 0024          000001B0  14938          STG   15,432(0,13)
0000A8E4 41F0 75A4               000005A4  14939          LA    15,1444(0,7)
0000A8E8 E3F0 D1B8 0024          000001B8  14940          STG   15,440(0,13)
0000A8EE 4110 D1B0               000001B0  14941          LA    1,432(0,13)
0000A8F2 B904 00F9                         14942          LGR   15,9
0000A8F6                                   14943 @@gen_label1152 DS    0H
0000A8F6 05EF                              14944          BALR  14,15
0000A8F8                                   14945 @@gen_label1153 DS    0H
                                                                                                                           Page  295 
  Active Usings: @REGION_855_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A8F8 E3F0 C214 0016          0000A4EC  14946          LLGF  15,@lit_855_1004 ; rd_unittest_assert_on_failure
0000A8FE 41FF 5000               00000000  14947          LA    15,0(15,5)
0000A902 9500 F000      00000000 00000000  14948          CLI   0(15),0
0000A906 4780 C66A               0000A942  14949          BE    @L743
0000A90A B921 0034                         14950          CLGR  3,4
0000A90E 47D0 C66A               0000A942  14951          BNH   @L743
0000A912                                   14952 @L744    DS    0H
0000A912 41F0 81F0               000001F0  14953          LA    15,496(0,8)
0000A916 E3F0 D1B0 0024          000001B0  14954          STG   15,432(0,13)
0000A91C 41F0 7040               00000040  14955          LA    15,64(0,7)
0000A920 E3F0 D1B8 0024          000001B8  14956          STG   15,440(0,13)
0000A926 E548 D1C0 065B          000001C0  14957          MVGHI 448(13),1627
0000A92C 41F0 63DA               000003DA  14958          LA    15,986(0,6)
0000A930 E3F0 D1C8 0024          000001C8  14959          STG   15,456(0,13)
0000A936 4110 D1B0               000001B0  14960          LA    1,432(0,13)
0000A93A E3F0 C1E0 0004          0000A4B8  14961          LG    15,@lit_855_993 ; __assert
0000A940                                   14962 @@gen_label1156 DS    0H
0000A940 05EF                              14963          BALR  14,15
0000A942                                   14964 @@gen_label1157 DS    0H
0000A942                                   14965 @L745    DS    0H
0000A942                                   14966 @L743    DS    0H
0000A942 A7F9 0001               00000001  14967          LGHI  15,1        ; 1
0000A946 47F0 C77C               0000AA54  14968          B     @ret_lab_855
0000A94A                                   14969 @L742    DS    0H
                                           14970 * ***
                                           14971 * ***           }
0000A94A A72B 0001               00000001  14972          AGHI  2,1
0000A94E                                   14973 @L722    DS    0H
0000A94E E320 D1A8 0021          000001A8  14974          CLG   2,424(0,13)
0000A954 4740 C34C               0000A624  14975          BL    @L725
                                           14976 * ***
                                           14977 * ***           do { if (!(sum == totsize)) { fprintf(__stderrp, "\033\
                                           14978 * [31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "sum == totsize" ": "\
                                           14979 * , "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1631, __FUNCTION__); fpr\
                                           14980 * intf(__stderrp, "sum %" "zu" " != totsize %" "zu", sum, totsize); fp\
                                           14981 * rintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((\
                                           14982 * sum == totsize) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdk\
                                           14983 * afka\\src\\rdbuf.c", 1631, "sum == totsize")); return 1; } } while (\
                                           14984 * 0);
0000A958                                   14985 @L746    DS    0H
0000A958 B921 0034                         14986          CLGR  3,4
0000A95C 4780 C778               0000AA50  14987          BE    @L749
0000A960 E320 C210 0016          0000A4E8  14988          LLGF  2,@lit_855_995 ; __stderrp
0000A966 E3F2 5000 0004          00000000  14989          LG    15,0(2,5)   ; __stderrp
0000A96C E3F0 D1B0 0024          000001B0  14990          STG   15,432(0,13)
0000A972 E360 C1E8 0004          0000A4C0  14991          LG    6,@lit_855_992
0000A978 41F0 63EA               000003EA  14992          LA    15,1002(0,6)
0000A97C E3F0 D1B8 0024          000001B8  14993          STG   15,440(0,13)
0000A982 E370 C1F0 0004          0000A4C8  14994          LG    7,@lit_855_991
0000A988 41F0 7040               00000040  14995          LA    15,64(0,7)
0000A98C E3F0 D1C0 0024          000001C0  14996          STG   15,448(0,13)
0000A992 E548 D1C8 065F          000001C8  14997          MVGHI 456(13),1631
                                                                                                                           Page  296 
  Active Usings: @REGION_855_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000A998 E380 C1F8 0004          0000A4D0  14998          LG    8,@lit_855_990
0000A99E 41F0 81F0               000001F0  14999          LA    15,496(0,8)
0000A9A2 E3F0 D1D0 0024          000001D0  15000          STG   15,464(0,13)
0000A9A8 4110 D1B0               000001B0  15001          LA    1,432(0,13)
0000A9AC E390 C208 0004          0000A4E0  15002          LG    9,@lit_855_999 ; fprintf
0000A9B2 B904 00F9                         15003          LGR   15,9
0000A9B6                                   15004 @@gen_label1160 DS    0H
0000A9B6 05EF                              15005          BALR  14,15
0000A9B8                                   15006 @@gen_label1161 DS    0H
0000A9B8 E3F2 5000 0004          00000000  15007          LG    15,0(2,5)   ; __stderrp
0000A9BE E3F0 D1B0 0024          000001B0  15008          STG   15,432(0,13)
0000A9C4 41F0 6426               00000426  15009          LA    15,1062(0,6)
0000A9C8 E3F0 D1B8 0024          000001B8  15010          STG   15,440(0,13)
0000A9CE EB34 D1C0 0024          000001C0  15011          STMG  3,4,448(13)
0000A9D4 4110 D1B0               000001B0  15012          LA    1,432(0,13)
0000A9D8 B904 00F9                         15013          LGR   15,9
0000A9DC                                   15014 @@gen_label1162 DS    0H
0000A9DC 05EF                              15015          BALR  14,15
0000A9DE                                   15016 @@gen_label1163 DS    0H
0000A9DE E3F2 5000 0004          00000000  15017          LG    15,0(2,5)   ; __stderrp
0000A9E4 E3F0 D1B0 0024          000001B0  15018          STG   15,432(0,13)
0000A9EA 41F0 75A4               000005A4  15019          LA    15,1444(0,7)
0000A9EE E3F0 D1B8 0024          000001B8  15020          STG   15,440(0,13)
0000A9F4 4110 D1B0               000001B0  15021          LA    1,432(0,13)
0000A9F8 B904 00F9                         15022          LGR   15,9
0000A9FC                                   15023 @@gen_label1164 DS    0H
0000A9FC 05EF                              15024          BALR  14,15
0000A9FE                                   15025 @@gen_label1165 DS    0H
0000A9FE E3F0 C214 0016          0000A4EC  15026          LLGF  15,@lit_855_1004 ; rd_unittest_assert_on_failure
0000AA04 41FF 5000               00000000  15027          LA    15,0(15,5)
0000AA08 9500 F000      00000000 00000000  15028          CLI   0(15),0
0000AA0C 4780 C770               0000AA48  15029          BE    @L750
0000AA10 B921 0034                         15030          CLGR  3,4
0000AA14 4780 C770               0000AA48  15031          BE    @L750
0000AA18                                   15032 @L751    DS    0H
0000AA18 41F0 81F0               000001F0  15033          LA    15,496(0,8)
0000AA1C E3F0 D1B0 0024          000001B0  15034          STG   15,432(0,13)
0000AA22 41F0 7040               00000040  15035          LA    15,64(0,7)
0000AA26 E3F0 D1B8 0024          000001B8  15036          STG   15,440(0,13)
0000AA2C E548 D1C0 065F          000001C0  15037          MVGHI 448(13),1631
0000AA32 41F0 643E               0000043E  15038          LA    15,1086(0,6)
0000AA36 E3F0 D1C8 0024          000001C8  15039          STG   15,456(0,13)
0000AA3C 4110 D1B0               000001B0  15040          LA    1,432(0,13)
0000AA40 E3F0 C1E0 0004          0000A4B8  15041          LG    15,@lit_855_993 ; __assert
0000AA46                                   15042 @@gen_label1168 DS    0H
0000AA46 05EF                              15043          BALR  14,15
0000AA48                                   15044 @@gen_label1169 DS    0H
0000AA48                                   15045 @L752    DS    0H
0000AA48                                   15046 @L750    DS    0H
0000AA48 A7F9 0001               00000001  15047          LGHI  15,1        ; 1
0000AA4C 47F0 C77C               0000AA54  15048          B     @ret_lab_855
0000AA50                                   15049 @L749    DS    0H
                                                                                                                           Page  297 
  Active Usings: @REGION_855_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           15050 * ***
                                           15051 * ***
                                           15052 * ***
                                           15053 * ***           return 0;
0000AA50 A7F9 0000               00000000  15054          LGHI  15,0        ; 0
                                           15055 * ***   }
0000AA54                                   15056 @ret_lab_855 DS 0H
0000AA54 E3C0 C218 001A          0000A4F0  15057          ALGF  12,@lit_region_diff_855_1_2
0000AA5A                                   15058 @REGION_855_2 DS 0H
                                           15059          DROP  12
                        0000AA5A           15060          USING @REGION_855_2,12
                                           15061 * * **** Start of Epilogue
                                           15062          DCCEPIL
0000AA5A                                   15063+         ds 0h                                                          01-DCCEP
                                           15064+* Epilog
0000AA5A D707 D088 D088 00000088 00000088  15065+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000AA60 E3D0 D080 0004          00000080  15066+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000AA66 E3C0 D090 0004          00000090  15067+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000AA6C E3B0 C018 0004          00000018  15068+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000AA72 E3C0 B010 0021          00000010  15069+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000AA78 E3E0 D008 0004          00000008  15070+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000AA7E EB1C D020 0004          00000020  15071+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000AA84 078E                              15072+         bcr 8,14                if same dsab, just return              01-DCCEP
0000AA86 E3F0 D010 0024          00000010  15073+         stg 15,16(0,13)         save return code                       01-DCCEP
0000AA8C E300 D018 0024          00000018  15074+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000AA92 E3F0 D090 0004          00000090  15075+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000AA98 E3F0 F018 0004          00000018  15076+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000AA9E 47F0 F040               00000040  15077+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           15078+* End of Epilog
                                           15079 * * **** End of Epilogue
                                           15080          DROP  12
                                           15081 *
                                           15082 *   DSECT for automatic variables in "do_unittest_iov_verify0"
                                           15083 *      (FUNCTION #855)
                                           15084 *
00000000                00000000 000001B0  15085 @AUTO#do_unittest_iov_verify0 DSECT
00000000                                   15086          DS    XL168
000000A8                                   15087 do_unittest_iov_verify0#sum#0 DS 8XL1 ; sum
000000B0                000000B0 000000A8  15088          ORG   @AUTO#do_unittest_iov_verify0+168
000000A8                                   15089 do_unittest_iov_verify0#totsize#0 DS 8XL1 ; totsize
000000B0                000000B0 000000A8  15090          ORG   @AUTO#do_unittest_iov_verify0+168
000000A8                                   15091 do_unittest_iov_verify0#i#0 DS 8XL1 ; i
000000B0                000000B0 000000A8  15092          ORG   @AUTO#do_unittest_iov_verify0+168
000000A8                                   15093 do_unittest_iov_verify0#iov#0 DS 256XL1 ; iov
000001A8                000001A8 000001A8  15094          ORG   @AUTO#do_unittest_iov_verify0+424
000001A8                                   15095 do_unittest_iov_verify0#iovcnt#0 DS 8XL1 ; iovcnt
                                           15096 *
0000AAA2                00000000 0000BFA0  15097 @CODE    CSECT
                                           15098 *
                                           15099 *
                                           15100 *
                                           15101 * ....... start of do_unittest_write_iov
                                                                                                                           Page  298 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AAA2                                   15102 @LNAME856 DS   0H
0000AAA2 00000015                          15103          DC    X'00000015'
0000AAA6 84966DA49589A3A3                  15104          DC    C'do_unittest_write_iov'
0000AABB 00                                15105          DC    X'00'
                                           15106 do_unittest_write_iov DCCPRLG CINDEX=856,BASER=12,FRAME=288,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME856
                                           15107          macro
                                           15108          dccextrn &m
                                           15109          gblc    &$dccext(1000)
                                           15110          gbla    &$dccexti
                                           15111          lcla    &i
                                           15112 &$dccext(&$dccexti+1) setc    '&m'
                                           15113 &i       seta    1
                                           15114 .loop    aif    (&i gt &$dccexti).around
                                           15115          aif    ('&$dccext(&i)' eq '&m').getout
                                           15116 &i       seta    &i+1
                                           15117          ago     .loop
                                           15118 .around  anop
                                           15119 &$dccexti seta &$dccexti+1
                                           15120          extrn  &m
                                           15121 .getout  anop
                                           15122          mend
0000AAC0                                   15123+$eye0201    ds    0d                                                    02-DCCCA
0000AAC0 C4C3C3                            15124+         dc cl3'DCC'                                                    02-DCCCA
0000AAC3 01                                15125+         dc xl1'01' format one                                          02-DCCCA
0000AAC4 00000000                          15126+         dc a(0)                                                        02-DCCCA
0000AAC8 000000000000AB32                  15127+         dc ad(@PER_856)                                                02-DCCCA
0000AAD0 0000000000000120                  15128+         dc ad(288)                                                     02-DCCCA
0000AAD8 0000000000000000                  15129+         dc ad(0)                                                       02-DCCCA
0000AAE0 0000000000001000                  15130+         dc ad(4096)                                                    02-DCCCA
0000AAE8 20                                15131+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000AAE9 03                                15132+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000AAEA 03                                15133+         dc al1(3)                                                      02-DCCCA
0000AAEB 08                                15134+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000AAEC 00                                15135+         dc bl.8'00000000'                                              02-DCCCA
0000AAED 000000                            15136+         dc al3(0)                                                      02-DCCCA
0000AAF0 000000000000AAA2                  15137+         dc ad(@LNAME856)                                               02-DCCCA
0000AAF8                                   15138+         ds 0d                                                          02-DCCCA
0000AAF8 000000000000AAC0                  15139+         dc ad($eye0201)                                                02-DCCCA
0000AB00 0000000000000000                  15140+         dc ad(0)                                                       02-DCCCA
0000AB08                                   15141+         ds    0d                                                       01-DCCPR
0000AB08                                   15142+do_unittest_write_iov ds 0d                                             01-DCCPR
0000AB08                                   15143+@REGION_856_1 ds 0h                                                     01-DCCPR
0000AB08 EBEC D008 0024          00000008  15144+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000AB0E E3E0 D088 0004          00000088  15145+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000AB14 E3C0 D090 0004          00000090  15146+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000AB1A B904 002E                         15147+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000AB1E E3B0 C018 0004          00000018  15148+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000AB24 A7EB 0120               00000120  15149+         aghi  14,288              increase by frame size               01-DCCPR
0000AB28 E3E0 C020 0021          00000020  15150+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000AB2E 4720 B020               00000020  15151+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000AB32                                   15152+@PER_856 ds    0h                                                       01-DCCPR
                                                                                                                           Page  299 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AB32 EBDE 2080 0024          00000080  15153+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000AB38 E3C0 2090 0024          00000090  15154+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000AB3E B904 00D2                         15155+         lgr   13,2                set real frame pointer               01-DCCPR
0000AB42 B904 00CF                         15156+         lgr   12,15               set base reg                         01-DCCPR
                        0000AB08           15157+         using @REGION_856_1,12                                         01-DCCPR
                                           15158          DCCPRV REG=3      ; Get PRV from DVT
0000AB46 E330 B008 0004          00000008  15159+         LG 3,8(0,11)                                                   01-DCCPR
                                           15160 * ******* End of Prologue
                                           15161 * *
                                           15162 * ***           rd_buf_t b;
                                           15163 * ***
                                           15164 * ***           rd_buf_init(&b, 0, 0);
0000AB4C 41F0 D0A8               000000A8  15165          LA    15,168(0,13)
0000AB50 E3F0 D0F8 0024          000000F8  15166          STG   15,248(0,13)
0000AB56 D70F D100 D100 00000100 00000100  15167          XC    256(16,13),256(13)
0000AB5C 4110 D0F8               000000F8  15168          LA    1,248(0,13)
0000AB60 E3F0 C1A0 0004          0000ACA8  15169          LG    15,@lit_856_1072 ; rd_buf_init
0000AB66                                   15170 @@gen_label1170 DS    0H
0000AB66 05EF                              15171          BALR  14,15
0000AB68                                   15172 @@gen_label1171 DS    0H
                                           15173 * ***           rd_buf_write_ensure(&b, 100, 100);
0000AB68 41F0 D0A8               000000A8  15174          LA    15,168(0,13)
0000AB6C E3F0 D0F8 0024          000000F8  15175          STG   15,248(0,13)
0000AB72 E548 D100 0064          00000100  15176          MVGHI 256(13),100
0000AB78 E548 D108 0064          00000108  15177          MVGHI 264(13),100
0000AB7E 4110 D0F8               000000F8  15178          LA    1,248(0,13)
0000AB82 E3F0 C1A8 0004          0000ACB0  15179          LG    15,@lit_856_1073 ; rd_buf_write_ensure
0000AB88                                   15180 @@gen_label1172 DS    0H
0000AB88 05EF                              15181          BALR  14,15
0000AB8A                                   15182 @@gen_label1173 DS    0H
                                           15183 * ***
                                           15184 * ***           do { int __fail = do_unittest_iov_verify0(&b, 1, 100);\
                                           15185 *  do { if (!(!__fail)) { fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:%\
                                           15186 * d: %s: " "assert failed: " "!__fail" ": ", "C:\\asgkafka\\librdkafka\
                                           15187 * \\src\\rdbuf.c", 1648, __FUNCTION__); fprintf(__stderrp, "iov_verify\
                                           15188 * () failed"); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert\
                                           15189 * _on_failure) ((!__fail) ? (void)0 : __assert(__func__, "C:\\asgkafka\
                                           15190 * \\librdkafka\\src\\rdbuf.c", 1648, "!__fail")); return 1; } } while \
                                           15191 * (0); } while (0);
0000AB8A                                   15192 @L753    DS    0H
0000AB8A 41F0 D0A8               000000A8  15193          LA    15,168(0,13)
0000AB8E E3F0 D0F8 0024          000000F8  15194          STG   15,248(0,13)
0000AB94 E548 D100 0001          00000100  15195          MVGHI 256(13),1
0000AB9A E548 D108 0064          00000108  15196          MVGHI 264(13),100
0000ABA0 4110 D0F8               000000F8  15197          LA    1,248(0,13)
0000ABA4 E3F0 C1B0 0004          0000ACB8  15198          LG    15,@lit_856_1074 ; do_unittest_iov_verify0
0000ABAA                                   15199 @@gen_label1174 DS    0H
0000ABAA 05EF                              15200          BALR  14,15
0000ABAC                                   15201 @@gen_label1175 DS    0H
0000ABAC 182F                              15202          LR    2,15
0000ABAE                                   15203 @L756    DS    0H
0000ABAE 1222                              15204          LTR   2,2
                                                                                                                           Page  300 
  Active Usings: @REGION_856_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000ABB0 4780 C1F8               0000AD00  15205          BZ    @L759
0000ABB4 E340 C1D0 0016          0000ACD8  15206          LLGF  4,@lit_856_1075 ; __stderrp
0000ABBA E3F4 3000 0004          00000000  15207          LG    15,0(4,3)   ; __stderrp
0000ABC0 E3F0 D0F8 0024          000000F8  15208          STG   15,248(0,13)
0000ABC6 E350 C1C8 0004          0000ACD0  15209          LG    5,@lit_856_1076
0000ABCC 41F0 5CB2               00000CB2  15210          LA    15,3250(0,5)
0000ABD0 E3F0 D100 0024          00000100  15211          STG   15,256(0,13)
0000ABD6 41F0 5040               00000040  15212          LA    15,64(0,5)
0000ABDA E3F0 D108 0024          00000108  15213          STG   15,264(0,13)
0000ABE0 E548 D110 0670          00000110  15214          MVGHI 272(13),1648
0000ABE6 E360 C1C0 0004          0000ACC8  15215          LG    6,@lit_856_1077
0000ABEC 41F0 6208               00000208  15216          LA    15,520(0,6)
0000ABF0 E3F0 D118 0024          00000118  15217          STG   15,280(0,13)
0000ABF6 4110 D0F8               000000F8  15218          LA    1,248(0,13)
0000ABFA E370 C1B8 0004          0000ACC0  15219          LG    7,@lit_856_1078 ; fprintf
0000AC00 B904 00F7                         15220          LGR   15,7
0000AC04                                   15221 @@gen_label1177 DS    0H
0000AC04 05EF                              15222          BALR  14,15
0000AC06                                   15223 @@gen_label1178 DS    0H
0000AC06 E3F4 3000 0004          00000000  15224          LG    15,0(4,3)   ; __stderrp
0000AC0C E3F0 D0F8 0024          000000F8  15225          STG   15,248(0,13)
0000AC12 E3F0 C1D8 0004          0000ACE0  15226          LG    15,@lit_856_1080
0000AC18 41F0 F44E               0000044E  15227          LA    15,1102(0,15)
0000AC1C E3F0 D100 0024          00000100  15228          STG   15,256(0,13)
0000AC22 4110 D0F8               000000F8  15229          LA    1,248(0,13)
0000AC26 B904 00F7                         15230          LGR   15,7
0000AC2A                                   15231 @@gen_label1179 DS    0H
0000AC2A 05EF                              15232          BALR  14,15
0000AC2C                                   15233 @@gen_label1180 DS    0H
0000AC2C E3F4 3000 0004          00000000  15234          LG    15,0(4,3)   ; __stderrp
0000AC32 E3F0 D0F8 0024          000000F8  15235          STG   15,248(0,13)
0000AC38 41F0 55A4               000005A4  15236          LA    15,1444(0,5)
0000AC3C E3F0 D100 0024          00000100  15237          STG   15,256(0,13)
0000AC42 4110 D0F8               000000F8  15238          LA    1,248(0,13)
0000AC46 B904 00F7                         15239          LGR   15,7
0000AC4A                                   15240 @@gen_label1181 DS    0H
0000AC4A 05EF                              15241          BALR  14,15
0000AC4C                                   15242 @@gen_label1182 DS    0H
0000AC4C E3F0 C1E0 0016          0000ACE8  15243          LLGF  15,@lit_856_1084 ; rd_unittest_assert_on_failure
0000AC52 41FF 3000               00000000  15244          LA    15,0(15,3)
0000AC56 9500 F000      00000000 00000000  15245          CLI   0(15),0
0000AC5A 4780 C18C               0000AC94  15246          BE    @L760
0000AC5E 1222                              15247          LTR   2,2
0000AC60 4780 C18C               0000AC94  15248          BZ    @L760
0000AC64                                   15249 @L761    DS    0H
0000AC64 41F0 6208               00000208  15250          LA    15,520(0,6)
0000AC68 E3F0 D0F8 0024          000000F8  15251          STG   15,248(0,13)
0000AC6E 41F0 5040               00000040  15252          LA    15,64(0,5)
0000AC72 E3F0 D100 0024          00000100  15253          STG   15,256(0,13)
0000AC78 E548 D108 0670          00000108  15254          MVGHI 264(13),1648
0000AC7E 41F0 5D0E               00000D0E  15255          LA    15,3342(0,5)
0000AC82 E3F0 D110 0024          00000110  15256          STG   15,272(0,13)
                                                                                                                           Page  301 
  Active Usings: @REGION_856_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AC88 4110 D0F8               000000F8  15257          LA    1,248(0,13)
0000AC8C E3F0 C1E8 0004          0000ACF0  15258          LG    15,@lit_856_1085 ; __assert
0000AC92                                   15259 @@gen_label1185 DS    0H
0000AC92 05EF                              15260          BALR  14,15
0000AC94                                   15261 @@gen_label1186 DS    0H
0000AC94                                   15262 @L762    DS    0H
0000AC94                                   15263 @L760    DS    0H
0000AC94 A7F9 0001               00000001  15264          LGHI  15,1        ; 1
0000AC98 47F0 C394               0000AE9C  15265          B     @ret_lab_856
0000ACA0                                   15266          DS    0D
0000ACA0 00000120                          15267 @FRAMESIZE_856 DC F'288'
0000ACA4 00000000
0000ACA8 0000000000001E28                  15268 @lit_856_1072 DC AD(rd_buf_init)
0000ACB0 0000000000001600                  15269 @lit_856_1073 DC AD(rd_buf_write_ensure)
0000ACB8 000000000000A2D8                  15270 @lit_856_1074 DC AD(do_unittest_iov_verify0)
0000ACC0 0000000000000000                  15271 @lit_856_1078 DC AD(fprintf)
0000ACC8 000000000000BFA0                  15272 @lit_856_1077 DC AD(@DATA)
0000ACD0 000000000000CB02                  15273 @lit_856_1076 DC AD(@strings@)
0000ACD8 00000000                          15274 @lit_856_1075 DC Q(__stderrp)
0000ACDC 00000000
0000ACE0 000000000000DB02                  15275 @lit_856_1080 DC AD(@strings@+4096)
0000ACE8 00000000                          15276 @lit_856_1084 DC Q(rd_unittest_assert_on_failure)
0000ACEC 00000000
0000ACF0 0000000000000000                  15277 @lit_856_1085 DC AD(__assert)
0000ACF8 0000000000001CD0                  15278 @lit_856_1101 DC AD(rd_buf_destroy)
0000AD00                                   15279 @L759    DS    0H
                                           15280 * ***
                                           15281 * ***
                                           15282 * ***           rd_buf_write_ensure(&b, 30000, 0);
0000AD00 41F0 D0A8               000000A8  15283          LA    15,168(0,13)
0000AD04 E3F0 D0F8 0024          000000F8  15284          STG   15,248(0,13)
0000AD0A E548 D100 7530          00000100  15285          MVGHI 256(13),30000
0000AD10 D707 D108 D108 00000108 00000108  15286          XC    264(8,13),264(13)
0000AD16 4110 D0F8               000000F8  15287          LA    1,248(0,13)
0000AD1A E3F0 C1A8 0004          0000ACB0  15288          LG    15,@lit_856_1073 ; rd_buf_write_ensure
0000AD20                                   15289 @@gen_label1187 DS    0H
0000AD20 05EF                              15290          BALR  14,15
0000AD22                                   15291 @@gen_label1188 DS    0H
                                           15292 * ***
                                           15293 * ***           do { int __fail = do_unittest_iov_verify0(&b, 2, 100+3\
                                           15294 * 0000); do { if (!(!__fail)) { fprintf(__stderrp, "\033[31mRDUT: FAIL\
                                           15295 * : %s:%d: %s: " "assert failed: " "!__fail" ": ", "C:\\asgkafka\\libr\
                                           15296 * dkafka\\src\\rdbuf.c", 1653, __FUNCTION__); fprintf(__stderrp, "iov_\
                                           15297 * verify() failed"); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_\
                                           15298 * assert_on_failure) ((!__fail) ? (void)0 : __assert(__func__, "C:\\as\
                                           15299 * gkafka\\librdkafka\\src\\rdbuf.c", 1653, "!__fail")); return 1; } } \
                                           15300 * while (0); } while (0);
0000AD22                                   15301 @L763    DS    0H
0000AD22 41F0 D0A8               000000A8  15302          LA    15,168(0,13)
0000AD26 E3F0 D0F8 0024          000000F8  15303          STG   15,248(0,13)
0000AD2C E548 D100 0002          00000100  15304          MVGHI 256(13),2
0000AD32 E548 D108 7594          00000108  15305          MVGHI 264(13),30100
                                                                                                                           Page  302 
  Active Usings: @REGION_856_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AD38 4110 D0F8               000000F8  15306          LA    1,248(0,13)
0000AD3C E3F0 C1B0 0004          0000ACB8  15307          LG    15,@lit_856_1074 ; do_unittest_iov_verify0
0000AD42                                   15308 @@gen_label1189 DS    0H
0000AD42 05EF                              15309          BALR  14,15
0000AD44                                   15310 @@gen_label1190 DS    0H
0000AD44 182F                              15311          LR    2,15
0000AD46                                   15312 @L766    DS    0H
0000AD46 1222                              15313          LTR   2,2
0000AD48 4780 C32C               0000AE34  15314          BZ    @L769
0000AD4C E340 C1D0 0016          0000ACD8  15315          LLGF  4,@lit_856_1075 ; __stderrp
0000AD52 E3F4 3000 0004          00000000  15316          LG    15,0(4,3)   ; __stderrp
0000AD58 E3F0 D0F8 0024          000000F8  15317          STG   15,248(0,13)
0000AD5E E350 C1C8 0004          0000ACD0  15318          LG    5,@lit_856_1076
0000AD64 41F0 5CB2               00000CB2  15319          LA    15,3250(0,5)
0000AD68 E3F0 D100 0024          00000100  15320          STG   15,256(0,13)
0000AD6E 41F0 5040               00000040  15321          LA    15,64(0,5)
0000AD72 E3F0 D108 0024          00000108  15322          STG   15,264(0,13)
0000AD78 E548 D110 0675          00000110  15323          MVGHI 272(13),1653
0000AD7E E360 C1C0 0004          0000ACC8  15324          LG    6,@lit_856_1077
0000AD84 41F0 6208               00000208  15325          LA    15,520(0,6)
0000AD88 E3F0 D118 0024          00000118  15326          STG   15,280(0,13)
0000AD8E 4110 D0F8               000000F8  15327          LA    1,248(0,13)
0000AD92 E370 C1B8 0004          0000ACC0  15328          LG    7,@lit_856_1078 ; fprintf
0000AD98 B904 00F7                         15329          LGR   15,7
0000AD9C                                   15330 @@gen_label1192 DS    0H
0000AD9C 05EF                              15331          BALR  14,15
0000AD9E                                   15332 @@gen_label1193 DS    0H
0000AD9E E3F4 3000 0004          00000000  15333          LG    15,0(4,3)   ; __stderrp
0000ADA4 E3F0 D0F8 0024          000000F8  15334          STG   15,248(0,13)
0000ADAA E3F0 C1D8 0004          0000ACE0  15335          LG    15,@lit_856_1080
0000ADB0 41F0 F44E               0000044E  15336          LA    15,1102(0,15)
0000ADB4 E3F0 D100 0024          00000100  15337          STG   15,256(0,13)
0000ADBA 4110 D0F8               000000F8  15338          LA    1,248(0,13)
0000ADBE B904 00F7                         15339          LGR   15,7
0000ADC2                                   15340 @@gen_label1194 DS    0H
0000ADC2 05EF                              15341          BALR  14,15
0000ADC4                                   15342 @@gen_label1195 DS    0H
0000ADC4 E3F4 3000 0004          00000000  15343          LG    15,0(4,3)   ; __stderrp
0000ADCA E3F0 D0F8 0024          000000F8  15344          STG   15,248(0,13)
0000ADD0 41F0 55A4               000005A4  15345          LA    15,1444(0,5)
0000ADD4 E3F0 D100 0024          00000100  15346          STG   15,256(0,13)
0000ADDA 4110 D0F8               000000F8  15347          LA    1,248(0,13)
0000ADDE B904 00F7                         15348          LGR   15,7
0000ADE2                                   15349 @@gen_label1196 DS    0H
0000ADE2 05EF                              15350          BALR  14,15
0000ADE4                                   15351 @@gen_label1197 DS    0H
0000ADE4 E3F0 C1E0 0016          0000ACE8  15352          LLGF  15,@lit_856_1084 ; rd_unittest_assert_on_failure
0000ADEA 41FF 3000               00000000  15353          LA    15,0(15,3)
0000ADEE 9500 F000      00000000 00000000  15354          CLI   0(15),0
0000ADF2 4780 C324               0000AE2C  15355          BE    @L770
0000ADF6 1222                              15356          LTR   2,2
0000ADF8 4780 C324               0000AE2C  15357          BZ    @L770
                                                                                                                           Page  303 
  Active Usings: @REGION_856_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000ADFC                                   15358 @L771    DS    0H
0000ADFC 41F0 6208               00000208  15359          LA    15,520(0,6)
0000AE00 E3F0 D0F8 0024          000000F8  15360          STG   15,248(0,13)
0000AE06 41F0 5040               00000040  15361          LA    15,64(0,5)
0000AE0A E3F0 D100 0024          00000100  15362          STG   15,256(0,13)
0000AE10 E548 D108 0675          00000108  15363          MVGHI 264(13),1653
0000AE16 41F0 5D0E               00000D0E  15364          LA    15,3342(0,5)
0000AE1A E3F0 D110 0024          00000110  15365          STG   15,272(0,13)
0000AE20 4110 D0F8               000000F8  15366          LA    1,248(0,13)
0000AE24 E3F0 C1E8 0004          0000ACF0  15367          LG    15,@lit_856_1085 ; __assert
0000AE2A                                   15368 @@gen_label1200 DS    0H
0000AE2A 05EF                              15369          BALR  14,15
0000AE2C                                   15370 @@gen_label1201 DS    0H
0000AE2C                                   15371 @L772    DS    0H
0000AE2C                                   15372 @L770    DS    0H
0000AE2C A7F9 0001               00000001  15373          LGHI  15,1        ; 1
0000AE30 47F0 C394               0000AE9C  15374          B     @ret_lab_856
0000AE34                                   15375 @L769    DS    0H
                                           15376 * ***
                                           15377 * ***
                                           15378 * ***           rd_buf_destroy(&b);
0000AE34 41F0 D0A8               000000A8  15379          LA    15,168(0,13)
0000AE38 E3F0 D0F8 0024          000000F8  15380          STG   15,248(0,13)
0000AE3E 4110 D0F8               000000F8  15381          LA    1,248(0,13)
0000AE42 E3F0 C1F0 0004          0000ACF8  15382          LG    15,@lit_856_1101 ; rd_buf_destroy
0000AE48                                   15383 @@gen_label1202 DS    0H
0000AE48 05EF                              15384          BALR  14,15
0000AE4A                                   15385 @@gen_label1203 DS    0H
                                           15386 * ***
                                           15387 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                           15388 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1658, __FUNCTI\
                                           15389 * ON__); return 0; } while (0);
0000AE4A                                   15390 @L773    DS    0H
0000AE4A E3F0 C1D0 0016          0000ACD8  15391          LLGF  15,@lit_856_1075 ; __stderrp
0000AE50 E3FF 3000 0004          00000000  15392          LG    15,0(15,3)  ; __stderrp
0000AE56 E3F0 D0F8 0024          000000F8  15393          STG   15,248(0,13)
0000AE5C E3F0 C1C8 0004          0000ACD0  15394          LG    15,@lit_856_1076
0000AE62 4110 F966               00000966  15395          LA    1,2406(0,15)
0000AE66 E310 D100 0024          00000100  15396          STG   1,256(0,13)
0000AE6C 41F0 F040               00000040  15397          LA    15,64(0,15)
0000AE70 E3F0 D108 0024          00000108  15398          STG   15,264(0,13)
0000AE76 E548 D110 067A          00000110  15399          MVGHI 272(13),1658
0000AE7C E3F0 C1C0 0004          0000ACC8  15400          LG    15,@lit_856_1077
0000AE82 41F0 F208               00000208  15401          LA    15,520(0,15)
0000AE86 E3F0 D118 0024          00000118  15402          STG   15,280(0,13)
0000AE8C 4110 D0F8               000000F8  15403          LA    1,248(0,13)
0000AE90 E3F0 C1B8 0004          0000ACC0  15404          LG    15,@lit_856_1078 ; fprintf
0000AE96                                   15405 @@gen_label1204 DS    0H
0000AE96 05EF                              15406          BALR  14,15
0000AE98                                   15407 @@gen_label1205 DS    0H
0000AE98 A7F9 0000               00000000  15408          LGHI  15,0        ; 0
                                           15409 * ***   }
                                                                                                                           Page  304 
  Active Usings: @REGION_856_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AE9C                                   15410 @ret_lab_856 DS 0H
                                           15411 * * **** Start of Epilogue
                                           15412          DCCEPIL
0000AE9C                                   15413+         ds 0h                                                          01-DCCEP
                                           15414+* Epilog
0000AE9C D707 D088 D088 00000088 00000088  15415+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000AEA2 E3D0 D080 0004          00000080  15416+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000AEA8 E3C0 D090 0004          00000090  15417+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000AEAE E3B0 C018 0004          00000018  15418+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000AEB4 E3C0 B010 0021          00000010  15419+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000AEBA E3E0 D008 0004          00000008  15420+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000AEC0 EB1C D020 0004          00000020  15421+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000AEC6 078E                              15422+         bcr 8,14                if same dsab, just return              01-DCCEP
0000AEC8 E3F0 D010 0024          00000010  15423+         stg 15,16(0,13)         save return code                       01-DCCEP
0000AECE E300 D018 0024          00000018  15424+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000AED4 E3F0 D090 0004          00000090  15425+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000AEDA E3F0 F018 0004          00000018  15426+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000AEE0 47F0 F040               00000040  15427+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           15428+* End of Epilog
                                           15429 * * **** End of Epilogue
                                           15430          DROP  12
                                           15431 *
                                           15432 *   DSECT for automatic variables in "do_unittest_write_iov"
                                           15433 *      (FUNCTION #856)
                                           15434 *
00000000                00000000 000000F8  15435 @AUTO#do_unittest_write_iov DSECT
00000000                                   15436          DS    XL168
000000A8                                   15437 do_unittest_write_iov#__fail#4 DS 1F ; __fail
000000AC                000000AC 000000A8  15438          ORG   @AUTO#do_unittest_write_iov+168
000000A8                                   15439 do_unittest_write_iov#__fail#1 DS 1F ; __fail
000000AC                000000AC 000000A8  15440          ORG   @AUTO#do_unittest_write_iov+168
000000A8                                   15441 do_unittest_write_iov#b#0 DS 80XL1 ; b
                                           15442 *
0000AEE4                00000000 0000BFA0  15443 @CODE    CSECT
                                           15444 *
                                           15445 *
                                           15446 *
                                           15447 * ....... start of do_unittest_erase
0000AEE4                                   15448 @LNAME857 DS   0H
0000AEE4 00000011                          15449          DC    X'00000011'
0000AEE8 84966DA49589A3A3                  15450          DC    C'do_unittest_erase'
0000AEF9 00                                15451          DC    X'00'
                                           15452 do_unittest_erase DCCPRLG CINDEX=857,BASER=12,FRAME=344,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME857
                                           15453          macro
                                           15454          dccextrn &m
                                           15455          gblc    &$dccext(1000)
                                           15456          gbla    &$dccexti
                                           15457          lcla    &i
                                           15458 &$dccext(&$dccexti+1) setc    '&m'
                                           15459 &i       seta    1
                                           15460 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page  305 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           15461          aif    ('&$dccext(&i)' eq '&m').getout
                                           15462 &i       seta    &i+1
                                           15463          ago     .loop
                                           15464 .around  anop
                                           15465 &$dccexti seta &$dccexti+1
                                           15466          extrn  &m
                                           15467 .getout  anop
                                           15468          mend
0000AF00                                   15469+$eye0205    ds    0d                                                    02-DCCCA
0000AF00 C4C3C3                            15470+         dc cl3'DCC'                                                    02-DCCCA
0000AF03 01                                15471+         dc xl1'01' format one                                          02-DCCCA
0000AF04 00000000                          15472+         dc a(0)                                                        02-DCCCA
0000AF08 000000000000AF72                  15473+         dc ad(@PER_857)                                                02-DCCCA
0000AF10 0000000000000158                  15474+         dc ad(344)                                                     02-DCCCA
0000AF18 0000000000000000                  15475+         dc ad(0)                                                       02-DCCCA
0000AF20 0000000000001000                  15476+         dc ad(4096)                                                    02-DCCCA
0000AF28 20                                15477+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000AF29 03                                15478+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000AF2A 03                                15479+         dc al1(3)                                                      02-DCCCA
0000AF2B 08                                15480+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000AF2C 00                                15481+         dc bl.8'00000000'                                              02-DCCCA
0000AF2D 000000                            15482+         dc al3(0)                                                      02-DCCCA
0000AF30 000000000000AEE4                  15483+         dc ad(@LNAME857)                                               02-DCCCA
0000AF38                                   15484+         ds 0d                                                          02-DCCCA
0000AF38 000000000000AF00                  15485+         dc ad($eye0205)                                                02-DCCCA
0000AF40 0000000000000000                  15486+         dc ad(0)                                                       02-DCCCA
0000AF48                                   15487+         ds    0d                                                       01-DCCPR
0000AF48                                   15488+do_unittest_erase ds 0d                                                 01-DCCPR
0000AF48                                   15489+@REGION_857_1 ds 0h                                                     01-DCCPR
0000AF48 EBEC D008 0024          00000008  15490+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000AF4E E3E0 D088 0004          00000088  15491+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000AF54 E3C0 D090 0004          00000090  15492+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000AF5A B904 002E                         15493+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000AF5E E3B0 C018 0004          00000018  15494+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000AF64 A7EB 0158               00000158  15495+         aghi  14,344              increase by frame size               01-DCCPR
0000AF68 E3E0 C020 0021          00000020  15496+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000AF6E 4720 B020               00000020  15497+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000AF72                                   15498+@PER_857 ds    0h                                                       01-DCCPR
0000AF72 EBDE 2080 0024          00000080  15499+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000AF78 E3C0 2090 0024          00000090  15500+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000AF7E B904 00D2                         15501+         lgr   13,2                set real frame pointer               01-DCCPR
0000AF82 B904 00CF                         15502+         lgr   12,15               set base reg                         01-DCCPR
                        0000AF48           15503+         using @REGION_857_1,12                                         01-DCCPR
                                           15504          DCCPRV REG=6      ; Get PRV from DVT
0000AF86 E360 B008 0004          00000008  15505+         LG 6,8(0,11)                                                   01-DCCPR
                                           15506 * ******* End of Prologue
                                           15507 * *
                                           15508 * ***           static const struct {
                                           15509 * ***                   const char *segs[4];
                                           15510 * ***                   const char *writes[4];
                                           15511 * ***                   struct {
                                           15512 * ***                           size_t of;
                                                                                                                           Page  306 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           15513 * ***                           size_t size;
                                           15514 * ***                           size_t retsize;
                                           15515 * ***                   } erasures[4];
                                           15516 * ***
                                           15517 * ***                   const char *expect;
                                           15518 * ***           } in[] = {
                                           15519 * ***
                                           15520 * ***
                                           15521 * ***                   { .segs = { "12", "3", "45" },
                                           15522 * ***                     .erasures = { { 1, 4, 4 } },
                                           15523 * ***                     .expect = "1",
                                           15524 * ***                   },
                                           15525 * ***
                                           15526 * ***
                                           15527 * ***                   { .segs = { "12", "3", "45" },
                                           15528 * ***                     .erasures = { { 0, 2, 2 } },
                                           15529 * ***                     .expect = "345",
                                           15530 * ***                   },
                                           15531 * ***
                                           15532 * ***
                                           15533 * ***                   { .segs = { "12", "3", "45" },
                                           15534 * ***                     .erasures = { { 3, 2, 2 } },
                                           15535 * ***                     .expect = "123",
                                           15536 * ***                   },
                                           15537 * ***
                                           15538 * ***   # 1700 "C:\asgkafka\librdkafka\src\rdbuf.c"
                                           15539 * ***                   { .segs = { "12", "3", "45" },
                                           15540 * ***                     .erasures = { { 1, 1, 1 },
                                           15541 * ***                                   { 1, 1, 1 },
                                           15542 * ***                                   { 2, 1, 1 } },
                                           15543 * ***                     .expect = "14",
                                           15544 * ***                   },
                                           15545 * ***
                                           15546 * ***
                                           15547 * ***                   { .segs = { "12", "3", "45" },
                                           15548 * ***                     .erasures = { { 0, 5, 5 } },
                                           15549 * ***                     .expect = "",
                                           15550 * ***                   },
                                           15551 * ***
                                           15552 * ***
                                           15553 * ***                   { .segs = { "12", "3", "45" },
                                           15554 * ***                     .erasures = { { 0, 1, 1 } },
                                           15555 * ***                     .expect = "2345",
                                           15556 * ***                   },
                                           15557 * ***
                                           15558 * ***
                                           15559 * ***                   { .segs = { "12", "3", "45" },
                                           15560 * ***                     .erasures = { { 4, 1, 1 } },
                                           15561 * ***                     .expect = "1234",
                                           15562 * ***                   },
                                           15563 * ***
                                           15564 * ***
                                                                                                                           Page  307 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           15565 * ***                   { .segs = { "12", "3", "45" },
                                           15566 * ***                     .erasures = { { 5, 10, 0 } },
                                           15567 * ***                     .expect = "12345",
                                           15568 * ***                   },
                                           15569 * ***
                                           15570 * ***
                                           15571 * ***                   { .segs = { "12", "3", "45" },
                                           15572 * ***                     .erasures = { { 4, 3, 1 }, { 4, 3, 0 }, { 4,\
                                           15573 *  3, 0 } },
                                           15574 * ***                     .expect = "1234",
                                           15575 * ***                   },
                                           15576 * ***
                                           15577 * ***
                                           15578 * ***                   { .segs = { "1" },
                                           15579 * ***                     .erasures = { { 0, 3, 1 } },
                                           15580 * ***                     .expect = "",
                                           15581 * ***                   },
                                           15582 * ***
                                           15583 * ***
                                           15584 * ***                   { .segs = { "123456" },
                                           15585 * ***                     .erasures = { { 0, 6, 6 } },
                                           15586 * ***                     .expect = "",
                                           15587 * ***                   },
                                           15588 * ***
                                           15589 * ***
                                           15590 * ***                   { .segs = { "123456789a" },
                                           15591 * ***                     .erasures = { { 4, 3, 3 } },
                                           15592 * ***                     .expect = "123489a",
                                           15593 * ***                   },
                                           15594 * ***
                                           15595 * ***
                                           15596 * ***                   { .segs = { "1234", "5678" },
                                           15597 * ***                     .erasures = { { 3, 3, 3 } },
                                           15598 * ***                     .writes = { "9abc" },
                                           15599 * ***                     .expect = "123789abc"
                                           15600 * ***
                                           15601 * ***                   { .expect = ((void *)0) }
                                           15602 * ***           };
                                           15603 * ***           int i;
                                           15604 * ***
                                           15605 * ***           for (i = 0 ; in[i].expect ; i++) {
0000AF8C A728 0000               00000000  15606          LHI   2,0         ; 0
0000AF90 E3C0 C05C 001A          0000AFA4  15607          ALGF  12,@lit_region_diff_857_1_2
                                           15608          DROP  12
                        0000B852           15609          USING @REGION_857_2,12
0000AF96 47F0 C54A               0000BD9C  15610          B     @L777
                                           15611          DROP  12
                        0000AF48           15612          USING @REGION_857_1,12
0000AFA0                                   15613          DS    0D
0000AFA0 00000158                          15614 @FRAMESIZE_857 DC F'344'
0000AFA4 0000090A                          15615 @lit_region_diff_857_1_2  DC A(@REGION_857_2-@REGION_857_1)
0000AFA8 000000000000BFA0                  15616 @lit_857_1109 DC AD(@DATA)
                                                                                                                           Page  308 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000AFB0 0000000000001E28                  15617 @lit_857_1110 DC AD(rd_buf_init)
0000AFB8 00000000000002C8                  15618 @lit_857_1113 DC AD(rd_strdup)
0000AFC0 0000000000002AC8                  15619 @lit_857_1115 DC AD(rd_buf_push0)
0000AFC8 00000000000001C0                  15620 @lit_857_1114 DC AD(rd_free)
0000AFD0 0000000000002CD0                  15621 @lit_857_1119 DC AD(rd_buf_erase)
0000AFD8 0000000000000000                  15622 @lit_857_1124 DC AD(fprintf)
0000AFE0 000000000000CB02                  15623 @lit_857_1123 DC AD(@strings@)
0000AFE8 000000000000DB02                  15624 @lit_857_1122 DC AD(@strings@+4096)
0000AFF0 00000000                          15625 @lit_857_1121 DC Q(__stderrp)
0000AFF4 00000000                          15626 @lit_857_1129 DC Q(rd_unittest_assert_on_failure)
0000AFF8 0000000000000000                  15627 @lit_857_1130 DC AD(__assert)
0000B000 00000000000022A8                  15628 @lit_857_1136 DC AD(rd_buf_write)
0000B008 0000000000000638                  15629 @lit_857_1138 DC AD(rd_buf_len)
0000B010 00000000000036D0                  15630 @lit_857_1154 DC AD(rd_slice_init)
0000B018                                   15631 @L776    DS    0H
                                           15632 * ***                   rd_buf_t b;
                                           15633 * ***                   rd_slice_t s;
                                           15634 * ***                   size_t expsz = __strlen(in[i].expect);
0000B018 B914 00F2                         15635          LGFR  15,2
0000B01C E310 C060 0004          0000AFA8  15636          LG    1,@lit_857_1109
0000B022 A7FD 00A8               000000A8  15637          MGHI  15,168
0000B026 E3FF 12C0 0004          000002C0  15638          LG    15,704(15,1)
0000B02C B904 001F                         15639          LGR   1,15
0000B030 A709 0000               00000000  15640          LGHI  0,0
0000B034                                   15641 @@gen_label1206 DS 0H
0000B034 B25E 000F                         15642          SRST  0,15
0000B038 4710 C0EC               0000B034  15643          BC  1,@@gen_label1206
0000B03C B904 0050                         15644          LGR   5,0
0000B040 B90B 0051                         15645          SLGR  5,1
                                           15646 * ***                   char *out;
                                           15647 * ***                   int j;
                                           15648 * ***                   size_t r;
                                           15649 * ***                   int r2;
                                           15650 * ***
                                           15651 * ***                   rd_buf_init(&b, 0, 0);
0000B044 41F0 D0A8               000000A8  15652          LA    15,168(0,13)
0000B048 E3F0 D120 0024          00000120  15653          STG   15,288(0,13)
0000B04E D70F D128 D128 00000128 00000128  15654          XC    296(16,13),296(13)
0000B054 4110 D120               00000120  15655          LA    1,288(0,13)
0000B058 E3F0 C068 0004          0000AFB0  15656          LG    15,@lit_857_1110 ; rd_buf_init
0000B05E                                   15657 @@gen_label1207 DS    0H
0000B05E 05EF                              15658          BALR  14,15
0000B060                                   15659 @@gen_label1208 DS    0H
                                           15660 * ***
                                           15661 * ***
                                           15662 * ***                   for (j = 0 ; in[i].segs[j] ; j++)
0000B060 A738 0000               00000000  15663          LHI   3,0         ; 0
0000B064 47F0 C1B6               0000B0FE  15664          B     @L781
0000B068                                   15665 @L780    DS    0H
                                           15666 * ***                           rd_buf_push0(&b,rd_strdup(in[i].segs[j\
                                           15667 * ]),__strlen(in[i].segs[j]),rd_free,1 );
0000B068 B914 00F3                         15668          LGFR  15,3
                                                                                                                           Page  309 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B06C B914 0012                         15669          LGFR  1,2
0000B070 E340 C060 0004          0000AFA8  15670          LG    4,@lit_857_1109
0000B076 A71D 00A8               000000A8  15671          MGHI  1,168
0000B07A EBFF 0003 000D          00000003  15672          SLLG  15,15,3(0)  ; *0x8
0000B080 41F1 F000               00000000  15673          LA    15,0(1,15)
0000B084 E3FF 4220 0004          00000220  15674          LG    15,544(15,4)
0000B08A E3F0 D120 0024          00000120  15675          STG   15,288(0,13)
0000B090 4110 D120               00000120  15676          LA    1,288(0,13)
0000B094 E3F0 C070 0004          0000AFB8  15677          LG    15,@lit_857_1113 ; rd_strdup
0000B09A                                   15678 @@gen_label1209 DS    0H
0000B09A 05EF                              15679          BALR  14,15
0000B09C                                   15680 @@gen_label1210 DS    0H
0000B09C B914 0013                         15681          LGFR  1,3
0000B0A0 B914 0072                         15682          LGFR  7,2
0000B0A4 A77D 00A8               000000A8  15683          MGHI  7,168
0000B0A8 EB11 0003 000D          00000003  15684          SLLG  1,1,3(0)    ; *0x8
0000B0AE 4117 1000               00000000  15685          LA    1,0(7,1)
0000B0B2 E311 4220 0004          00000220  15686          LG    1,544(1,4)
0000B0B8 B904 0041                         15687          LGR   4,1
0000B0BC A709 0000               00000000  15688          LGHI  0,0
0000B0C0                                   15689 @@gen_label1211 DS 0H
0000B0C0 B25E 0001                         15690          SRST  0,1
0000B0C4 4710 C178               0000B0C0  15691          BC  1,@@gen_label1211
0000B0C8 B90B 0004                         15692          SLGR  0,4
0000B0CC 4110 D0A8               000000A8  15693          LA    1,168(0,13)
0000B0D0 E310 D120 0024          00000120  15694          STG   1,288(0,13)
0000B0D6 EBF0 D128 0024          00000128  15695          STMG  15,0,296(13)
0000B0DC E3F0 C080 0004          0000AFC8  15696          LG    15,@lit_857_1114 ; rd_free
0000B0E2 E3F0 D138 0024          00000138  15697          STG   15,312(0,13)
0000B0E8 E548 D140 0001          00000140  15698          MVGHI 320(13),1
0000B0EE 4110 D120               00000120  15699          LA    1,288(0,13)
0000B0F2 E3F0 C078 0004          0000AFC0  15700          LG    15,@lit_857_1115 ; rd_buf_push0
0000B0F8                                   15701 @@gen_label1212 DS    0H
0000B0F8 05EF                              15702          BALR  14,15
0000B0FA                                   15703 @@gen_label1213 DS    0H
0000B0FA A73A 0001               00000001  15704          AHI   3,1
0000B0FE                                   15705 @L781    DS    0H
0000B0FE B914 00F3                         15706          LGFR  15,3
0000B102 B914 0012                         15707          LGFR  1,2
0000B106 E340 C060 0004          0000AFA8  15708          LG    4,@lit_857_1109
0000B10C A71D 00A8               000000A8  15709          MGHI  1,168
0000B110 EBFF 0003 000D          00000003  15710          SLLG  15,15,3(0)  ; *0x8
0000B116 41F1 F000               00000000  15711          LA    15,0(1,15)
0000B11A E3FF 4220 0002          00000220  15712          LTG   15,544(15,4)
0000B120 4770 C120               0000B068  15713          BNZ   @L780
                                           15714 * ***
                                           15715 * ***
                                           15716 * ***
                                           15717 * ***                   for (j = 0 ; in[i].erasures[j].retsize ; j++) \
                                           15718 * {
0000B124 A738 0000               00000000  15719          LHI   3,0         ; 0
0000B128 47F0 C3E2               0000B32A  15720          B     @L785
                                                                                                                           Page  310 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B12C                                   15721 @L784    DS    0H
                                           15722 * ***                           r = rd_buf_erase(&b,
                                           15723 * ***                                            in[i].erasures[j].of,
                                           15724 * ***                                            in[i].erasures[j].siz\
                                           15725 * e);
0000B12C 41F0 D0A8               000000A8  15726          LA    15,168(0,13)
0000B130 E3F0 D120 0024          00000120  15727          STG   15,288(0,13)
0000B136 B914 00F3                         15728          LGFR  15,3
0000B13A B914 0012                         15729          LGFR  1,2
0000B13E E340 C060 0004          0000AFA8  15730          LG    4,@lit_857_1109
0000B144 A71D 00A8               000000A8  15731          MGHI  1,168
0000B148 EB7F 0002 000D          00000002  15732          SLLG  7,15,2(0)   ;   .
0000B14E B90B 007F                         15733          SLGR  7,15        ;   .
0000B152 EB77 0003 000D          00000003  15734          SLLG  7,7,3(0)    ;   .
0000B158 41F1 7000               00000000  15735          LA    15,0(1,7)
0000B15C E3FF 4260 0004          00000260  15736          LG    15,608(15,4)
0000B162 E3F0 D128 0024          00000128  15737          STG   15,296(0,13)
0000B168 B914 00F3                         15738          LGFR  15,3
0000B16C B914 0012                         15739          LGFR  1,2
0000B170 A71D 00A8               000000A8  15740          MGHI  1,168
0000B174 EB7F 0002 000D          00000002  15741          SLLG  7,15,2(0)   ;   .
0000B17A B90B 007F                         15742          SLGR  7,15        ;   .
0000B17E EB77 0003 000D          00000003  15743          SLLG  7,7,3(0)    ;   .
0000B184 41F1 7000               00000000  15744          LA    15,0(1,7)
0000B188 E3FF 4268 0004          00000268  15745          LG    15,616(15,4)
0000B18E E3F0 D130 0024          00000130  15746          STG   15,304(0,13)
0000B194 4110 D120               00000120  15747          LA    1,288(0,13)
0000B198 E3F0 C088 0004          0000AFD0  15748          LG    15,@lit_857_1119 ; rd_buf_erase
0000B19E                                   15749 @@gen_label1215 DS    0H
0000B19E 05EF                              15750          BALR  14,15
0000B1A0                                   15751 @@gen_label1216 DS    0H
0000B1A0 B904 004F                         15752          LGR   4,15        ; r
                                           15753 * ***                           do { if (!(r == in[i].erasures[j].rets\
                                           15754 * ize)) { fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert\
                                           15755 *  failed: " "r == in[i].erasures[j].retsize" ": ", "C:\\asgkafka\\lib\
                                           15756 * rdkafka\\src\\rdbuf.c", 1787, __FUNCTION__); fprintf(__stderrp, "exp\
                                           15757 * ected retsize %" "zu" " for i=%d,j=%d" ", not %" "zu", in[i].erasure\
                                           15758 * s[j].retsize, i, j, r); fprintf(__stderrp, "\033[0m\n"); if (rd_unit\
                                           15759 * test_assert_on_failure) ((r == in[i].erasures[j].retsize) ? (void)0 \
                                           15760 * : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1787,\
                                           15761 *  "r == in[i].erasures[j].retsize")); return 1; } } while (0);
0000B1A4                                   15762 @L788    DS    0H
0000B1A4 B914 00F3                         15763          LGFR  15,3
0000B1A8 B914 0012                         15764          LGFR  1,2
0000B1AC E370 C060 0004          0000AFA8  15765          LG    7,@lit_857_1109
0000B1B2 A71D 00A8               000000A8  15766          MGHI  1,168
0000B1B6 EB8F 0002 000D          00000002  15767          SLLG  8,15,2(0)   ;   .
0000B1BC B90B 008F                         15768          SLGR  8,15        ;   .
0000B1C0 EB88 0003 000D          00000003  15769          SLLG  8,8,3(0)    ;   .
0000B1C6 41F1 8000               00000000  15770          LA    15,0(1,8)
0000B1CA E34F 7270 0021          00000270  15771          CLG   4,624(15,7)
0000B1D0 4780 C3DE               0000B326  15772          BE    @L791
                                                                                                                           Page  311 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B1D4 E350 C0A8 0016          0000AFF0  15773          LLGF  5,@lit_857_1121 ; __stderrp
0000B1DA E3F5 6000 0004          00000000  15774          LG    15,0(5,6)   ; __stderrp
0000B1E0 E3F0 D120 0024          00000120  15775          STG   15,288(0,13)
0000B1E6 E380 C0A0 0004          0000AFE8  15776          LG    8,@lit_857_1122
0000B1EC 41F0 8462               00000462  15777          LA    15,1122(0,8)
0000B1F0 E3F0 D128 0024          00000128  15778          STG   15,296(0,13)
0000B1F6 E390 C098 0004          0000AFE0  15779          LG    9,@lit_857_1123
0000B1FC 41F0 9040               00000040  15780          LA    15,64(0,9)
0000B200 E3F0 D130 0024          00000130  15781          STG   15,304(0,13)
0000B206 E548 D138 06FB          00000138  15782          MVGHI 312(13),1787
0000B20C 41F0 7B50               00000B50  15783          LA    15,2896(0,7)
0000B210 E3F0 D140 0024          00000140  15784          STG   15,320(0,13)
0000B216 4110 D120               00000120  15785          LA    1,288(0,13)
0000B21A E3A0 C090 0004          0000AFD8  15786          LG    10,@lit_857_1124 ; fprintf
0000B220 B904 00FA                         15787          LGR   15,10
0000B224                                   15788 @@gen_label1218 DS    0H
0000B224 05EF                              15789          BALR  14,15
0000B226                                   15790 @@gen_label1219 DS    0H
0000B226 E3F5 6000 0004          00000000  15791          LG    15,0(5,6)   ; __stderrp
0000B22C E3F0 D120 0024          00000120  15792          STG   15,288(0,13)
0000B232 41F0 84AE               000004AE  15793          LA    15,1198(0,8)
0000B236 E3F0 D128 0024          00000128  15794          STG   15,296(0,13)
0000B23C B914 00F3                         15795          LGFR  15,3
0000B240 B914 0012                         15796          LGFR  1,2
0000B244 A71D 00A8               000000A8  15797          MGHI  1,168
0000B248 EBBF 0002 000D          00000002  15798          SLLG  11,15,2(0)  ;   .
0000B24E B90B 00BF                         15799          SLGR  11,15       ;   .
0000B252 EBBB 0003 000D          00000003  15800          SLLG  11,11,3(0)  ;   .
0000B258 41F1 B000               00000000  15801          LA    15,0(1,11)
0000B25C E3FF 7270 0004          00000270  15802          LG    15,624(15,7)
0000B262 E3F0 D130 0024          00000130  15803          STG   15,304(0,13)
0000B268 B914 00F2                         15804          LGFR  15,2
0000B26C E3F0 D138 0024          00000138  15805          STG   15,312(0,13)
0000B272 B914 00F3                         15806          LGFR  15,3
0000B276 E3F0 D140 0024          00000140  15807          STG   15,320(0,13)
0000B27C E340 D148 0024          00000148  15808          STG   4,328(0,13)
0000B282 4110 D120               00000120  15809          LA    1,288(0,13)
0000B286 B904 00FA                         15810          LGR   15,10
0000B28A                                   15811 @@gen_label1220 DS    0H
0000B28A 05EF                              15812          BALR  14,15
0000B28C                                   15813 @@gen_label1221 DS    0H
0000B28C E3F5 6000 0004          00000000  15814          LG    15,0(5,6)   ; __stderrp
0000B292 E3F0 D120 0024          00000120  15815          STG   15,288(0,13)
0000B298 41F0 95A4               000005A4  15816          LA    15,1444(0,9)
0000B29C E3F0 D128 0024          00000128  15817          STG   15,296(0,13)
0000B2A2 4110 D120               00000120  15818          LA    1,288(0,13)
0000B2A6 B904 00FA                         15819          LGR   15,10
0000B2AA                                   15820 @@gen_label1222 DS    0H
0000B2AA 05EF                              15821          BALR  14,15
0000B2AC                                   15822 @@gen_label1223 DS    0H
0000B2AC E3F0 C0AC 0016          0000AFF4  15823          LLGF  15,@lit_857_1129 ; rd_unittest_assert_on_failure
0000B2B2 41FF 6000               00000000  15824          LA    15,0(15,6)
                                                                                                                           Page  312 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B2B6 9500 F000      00000000 00000000  15825          CLI   0(15),0
0000B2BA 4780 C3D0               0000B318  15826          BE    @L792
0000B2BE B914 00F3                         15827          LGFR  15,3
0000B2C2 B914 0012                         15828          LGFR  1,2
0000B2C6 A71D 00A8               000000A8  15829          MGHI  1,168
0000B2CA EB2F 0002 000D          00000002  15830          SLLG  2,15,2(0)   ;   .
0000B2D0 B90B 002F                         15831          SLGR  2,15        ;   .
0000B2D4 EB22 0003 000D          00000003  15832          SLLG  2,2,3(0)    ;   .
0000B2DA 41F1 2000               00000000  15833          LA    15,0(1,2)
0000B2DE E34F 7270 0021          00000270  15834          CLG   4,624(15,7)
0000B2E4 4780 C3D0               0000B318  15835          BE    @L792
0000B2E8                                   15836 @L793    DS    0H
0000B2E8 41F0 7B50               00000B50  15837          LA    15,2896(0,7)
0000B2EC E3F0 D120 0024          00000120  15838          STG   15,288(0,13)
0000B2F2 41F0 9040               00000040  15839          LA    15,64(0,9)
0000B2F6 E3F0 D128 0024          00000128  15840          STG   15,296(0,13)
0000B2FC E548 D130 06FB          00000130  15841          MVGHI 304(13),1787
0000B302 41F0 84DA               000004DA  15842          LA    15,1242(0,8)
0000B306 E3F0 D138 0024          00000138  15843          STG   15,312(0,13)
0000B30C 4110 D120               00000120  15844          LA    1,288(0,13)
0000B310 E3F0 C0B0 0004          0000AFF8  15845          LG    15,@lit_857_1130 ; __assert
0000B316                                   15846 @@gen_label1226 DS    0H
0000B316 05EF                              15847          BALR  14,15
0000B318                                   15848 @@gen_label1227 DS    0H
0000B318                                   15849 @L794    DS    0H
0000B318                                   15850 @L792    DS    0H
0000B318 A7F9 0001               00000001  15851          LGHI  15,1        ; 1
0000B31C E3C0 C05C 001A          0000AFA4  15852          ALGF  12,@lit_region_diff_857_1_2
                                           15853          DROP  12
                        0000B852           15854          USING @REGION_857_2,12
0000B322 47F0 C5B8               0000BE0A  15855          B     @ret_lab_857
                                           15856          DROP  12
                        0000AF48           15857          USING @REGION_857_1,12
0000B326                                   15858 @L791    DS    0H
                                           15859 * ***
                                           15860 * ***
                                           15861 * ***
                                           15862 * ***                   }
0000B326 A73A 0001               00000001  15863          AHI   3,1
0000B32A                                   15864 @L785    DS    0H
0000B32A B914 00F3                         15865          LGFR  15,3
0000B32E B914 0012                         15866          LGFR  1,2
0000B332 E340 C060 0004          0000AFA8  15867          LG    4,@lit_857_1109
0000B338 A71D 00A8               000000A8  15868          MGHI  1,168
0000B33C EB7F 0002 000D          00000002  15869          SLLG  7,15,2(0)   ;   .
0000B342 B90B 007F                         15870          SLGR  7,15        ;   .
0000B346 EB77 0003 000D          00000003  15871          SLLG  7,7,3(0)    ;   .
0000B34C 41F1 7000               00000000  15872          LA    15,0(1,7)
0000B350 E3FF 4270 0002          00000270  15873          LTG   15,624(15,4) ; offset of retsize in 0000029
0000B356 4770 C1E4               0000B12C  15874          BNZ   @L784
                                           15875 * ***
                                           15876 * ***
                                                                                                                           Page  313 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           15877 * ***                   for (j = 0 ; in[i].writes[j] ; j++)
0000B35A A738 0000               00000000  15878          LHI   3,0         ; 0
0000B35E 47F0 C492               0000B3DA  15879          B     @L796
0000B362                                   15880 @L795    DS    0H
                                           15881 * ***                           rd_buf_write(&b, in[i].writes[j],
                                           15882 * ***                                        __strlen(in[i].writes[j])\
                                           15883 * );
0000B362 B914 00F3                         15884          LGFR  15,3
0000B366 B914 0012                         15885          LGFR  1,2
0000B36A E340 C060 0004          0000AFA8  15886          LG    4,@lit_857_1109
0000B370 A71D 00A8               000000A8  15887          MGHI  1,168
0000B374 EBFF 0003 000D          00000003  15888          SLLG  15,15,3(0)  ; *0x8
0000B37A 41F1 F000               00000000  15889          LA    15,0(1,15)
0000B37E E3FF 4240 0004          00000240  15890          LG    15,576(15,4)
0000B384 B904 001F                         15891          LGR   1,15
0000B388 A709 0000               00000000  15892          LGHI  0,0
0000B38C                                   15893 @@gen_label1229 DS 0H
0000B38C B25E 000F                         15894          SRST  0,15
0000B390 4710 C444               0000B38C  15895          BC  1,@@gen_label1229
0000B394 B90B 0001                         15896          SLGR  0,1
0000B398 41F0 D0A8               000000A8  15897          LA    15,168(0,13)
0000B39C E3F0 D120 0024          00000120  15898          STG   15,288(0,13)
0000B3A2 B914 00F3                         15899          LGFR  15,3
0000B3A6 B914 0012                         15900          LGFR  1,2
0000B3AA E340 C060 0004          0000AFA8  15901          LG    4,@lit_857_1109
0000B3B0 A71D 00A8               000000A8  15902          MGHI  1,168
0000B3B4 EBFF 0003 000D          00000003  15903          SLLG  15,15,3(0)  ; *0x8
0000B3BA 41F1 F000               00000000  15904          LA    15,0(1,15)
0000B3BE E3FF 4240 0004          00000240  15905          LG    15,576(15,4)
0000B3C4 EBF0 D128 0024          00000128  15906          STMG  15,0,296(13)
0000B3CA 4110 D120               00000120  15907          LA    1,288(0,13)
0000B3CE E3F0 C0B8 0004          0000B000  15908          LG    15,@lit_857_1136 ; rd_buf_write
0000B3D4                                   15909 @@gen_label1230 DS    0H
0000B3D4 05EF                              15910          BALR  14,15
0000B3D6                                   15911 @@gen_label1231 DS    0H
0000B3D6 A73A 0001               00000001  15912          AHI   3,1
0000B3DA                                   15913 @L796    DS    0H
0000B3DA B914 00F3                         15914          LGFR  15,3
0000B3DE B914 0012                         15915          LGFR  1,2
0000B3E2 E340 C060 0004          0000AFA8  15916          LG    4,@lit_857_1109
0000B3E8 A71D 00A8               000000A8  15917          MGHI  1,168
0000B3EC EBFF 0003 000D          00000003  15918          SLLG  15,15,3(0)  ; *0x8
0000B3F2 41F1 F000               00000000  15919          LA    15,0(1,15)
0000B3F6 E3FF 4240 0002          00000240  15920          LTG   15,576(15,4)
0000B3FC 4770 C41A               0000B362  15921          BNZ   @L795
                                           15922 * ***
                                           15923 * ***                   do { if (!(expsz == rd_buf_len(&b))) { fprintf\
                                           15924 * (__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "exp\
                                           15925 * sz == rd_buf_len(&b)" ": ", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c"\
                                           15926 * , 1798, __FUNCTION__); fprintf(__stderrp, "expected buffer to be %" \
                                           15927 * "zu" " bytes, not " "%" "zu" " for i=%d", expsz, rd_buf_len(&b), i);\
                                           15928 *  fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure)\
                                                                                                                           Page  314 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           15929 *  ((expsz == rd_buf_len(&b)) ? (void)0 : __assert(__func__, "C:\\asgk\
                                           15930 * afka\\librdkafka\\src\\rdbuf.c", 1798, "expsz == rd_buf_len(&b)")); \
                                           15931 * return 1; } } while (0);
0000B400                                   15932 @L799    DS    0H
0000B400 41F0 D0A8               000000A8  15933          LA    15,168(0,13)
0000B404 E3F0 D120 0024          00000120  15934          STG   15,288(0,13)
0000B40A 4110 D120               00000120  15935          LA    1,288(0,13)
0000B40E E330 C0C0 0004          0000B008  15936          LG    3,@lit_857_1138 ; rd_buf_len
0000B414 B904 00F3                         15937          LGR   15,3
0000B418                                   15938 @@gen_label1233 DS    0H
0000B418 05EF                              15939          BALR  14,15
0000B41A                                   15940 @@gen_label1234 DS    0H
0000B41A B921 005F                         15941          CLGR  5,15
0000B41E 4780 C608               0000B550  15942          BE    @L802
0000B422 E340 C0A8 0016          0000AFF0  15943          LLGF  4,@lit_857_1121 ; __stderrp
0000B428 E3F4 6000 0004          00000000  15944          LG    15,0(4,6)   ; __stderrp
0000B42E E3F0 D120 0024          00000120  15945          STG   15,288(0,13)
0000B434 E370 C0A0 0004          0000AFE8  15946          LG    7,@lit_857_1122
0000B43A 41F0 74FA               000004FA  15947          LA    15,1274(0,7)
0000B43E E3F0 D128 0024          00000128  15948          STG   15,296(0,13)
0000B444 E380 C098 0004          0000AFE0  15949          LG    8,@lit_857_1123
0000B44A 41F0 8040               00000040  15950          LA    15,64(0,8)
0000B44E E3F0 D130 0024          00000130  15951          STG   15,304(0,13)
0000B454 E548 D138 0706          00000138  15952          MVGHI 312(13),1798
0000B45A E390 C060 0004          0000AFA8  15953          LG    9,@lit_857_1109
0000B460 41F0 9B50               00000B50  15954          LA    15,2896(0,9)
0000B464 E3F0 D140 0024          00000140  15955          STG   15,320(0,13)
0000B46A 4110 D120               00000120  15956          LA    1,288(0,13)
0000B46E E3A0 C090 0004          0000AFD8  15957          LG    10,@lit_857_1124 ; fprintf
0000B474 B904 00FA                         15958          LGR   15,10
0000B478                                   15959 @@gen_label1236 DS    0H
0000B478 05EF                              15960          BALR  14,15
0000B47A                                   15961 @@gen_label1237 DS    0H
0000B47A 41F0 D0A8               000000A8  15962          LA    15,168(0,13)
0000B47E E3F0 D120 0024          00000120  15963          STG   15,288(0,13)
0000B484 4110 D120               00000120  15964          LA    1,288(0,13)
0000B488 B904 00F3                         15965          LGR   15,3
0000B48C                                   15966 @@gen_label1238 DS    0H
0000B48C 05EF                              15967          BALR  14,15
0000B48E                                   15968 @@gen_label1239 DS    0H
0000B48E E314 6000 0004          00000000  15969          LG    1,0(4,6)    ; __stderrp
0000B494 E310 D120 0024          00000120  15970          STG   1,288(0,13)
0000B49A 4110 7540               00000540  15971          LA    1,1344(0,7)
0000B49E E310 D128 0024          00000128  15972          STG   1,296(0,13)
0000B4A4 E350 D130 0024          00000130  15973          STG   5,304(0,13)
0000B4AA E3F0 D138 0024          00000138  15974          STG   15,312(0,13)
0000B4B0 B914 00F2                         15975          LGFR  15,2
0000B4B4 E3F0 D140 0024          00000140  15976          STG   15,320(0,13)
0000B4BA 4110 D120               00000120  15977          LA    1,288(0,13)
0000B4BE B904 00FA                         15978          LGR   15,10
0000B4C2                                   15979 @@gen_label1240 DS    0H
0000B4C2 05EF                              15980          BALR  14,15
                                                                                                                           Page  315 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B4C4                                   15981 @@gen_label1241 DS    0H
0000B4C4 E3F4 6000 0004          00000000  15982          LG    15,0(4,6)   ; __stderrp
0000B4CA E3F0 D120 0024          00000120  15983          STG   15,288(0,13)
0000B4D0 41F0 85A4               000005A4  15984          LA    15,1444(0,8)
0000B4D4 E3F0 D128 0024          00000128  15985          STG   15,296(0,13)
0000B4DA 4110 D120               00000120  15986          LA    1,288(0,13)
0000B4DE B904 00FA                         15987          LGR   15,10
0000B4E2                                   15988 @@gen_label1242 DS    0H
0000B4E2 05EF                              15989          BALR  14,15
0000B4E4                                   15990 @@gen_label1243 DS    0H
0000B4E4 E3F0 C0AC 0016          0000AFF4  15991          LLGF  15,@lit_857_1129 ; rd_unittest_assert_on_failure
0000B4EA 41FF 6000               00000000  15992          LA    15,0(15,6)
0000B4EE 9500 F000      00000000 00000000  15993          CLI   0(15),0
0000B4F2 4780 C5FA               0000B542  15994          BE    @L803
0000B4F6 41F0 D0A8               000000A8  15995          LA    15,168(0,13)
0000B4FA E3F0 D120 0024          00000120  15996          STG   15,288(0,13)
0000B500 4110 D120               00000120  15997          LA    1,288(0,13)
0000B504 B904 00F3                         15998          LGR   15,3
0000B508                                   15999 @@gen_label1245 DS    0H
0000B508 05EF                              16000          BALR  14,15
0000B50A                                   16001 @@gen_label1246 DS    0H
0000B50A B921 005F                         16002          CLGR  5,15
0000B50E 4780 C5FA               0000B542  16003          BE    @L803
0000B512                                   16004 @L804    DS    0H
0000B512 41F0 9B50               00000B50  16005          LA    15,2896(0,9)
0000B516 E3F0 D120 0024          00000120  16006          STG   15,288(0,13)
0000B51C 41F0 8040               00000040  16007          LA    15,64(0,8)
0000B520 E3F0 D128 0024          00000128  16008          STG   15,296(0,13)
0000B526 E548 D130 0706          00000130  16009          MVGHI 304(13),1798
0000B52C 41F0 7572               00000572  16010          LA    15,1394(0,7)
0000B530 E3F0 D138 0024          00000138  16011          STG   15,312(0,13)
0000B536 4110 D120               00000120  16012          LA    1,288(0,13)
0000B53A E3F0 C0B0 0004          0000AFF8  16013          LG    15,@lit_857_1130 ; __assert
0000B540                                   16014 @@gen_label1248 DS    0H
0000B540 05EF                              16015          BALR  14,15
0000B542                                   16016 @@gen_label1249 DS    0H
0000B542                                   16017 @L805    DS    0H
0000B542                                   16018 @L803    DS    0H
0000B542 A7F9 0001               00000001  16019          LGHI  15,1        ; 1
0000B546 E3C0 C05C 001A          0000AFA4  16020          ALGF  12,@lit_region_diff_857_1_2
                                           16021          DROP  12
                        0000B852           16022          USING @REGION_857_2,12
0000B54C 47F0 C5B8               0000BE0A  16023          B     @ret_lab_857
                                           16024          DROP  12
                        0000AF48           16025          USING @REGION_857_1,12
0000B550                                   16026 @L802    DS    0H
                                           16027 * ***
                                           16028 * ***
                                           16029 * ***
                                           16030 * ***
                                           16031 * ***
                                           16032 * ***                   r2 = rd_slice_init(&s, &b, 0, rd_buf_len(&b));
                                                                                                                           Page  316 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B550 41F0 D0A8               000000A8  16033          LA    15,168(0,13)
0000B554 E3F0 D120 0024          00000120  16034          STG   15,288(0,13)
0000B55A 4110 D120               00000120  16035          LA    1,288(0,13)
0000B55E B904 00F3                         16036          LGR   15,3
0000B562                                   16037 @@gen_label1250 DS    0H
0000B562 05EF                              16038          BALR  14,15
0000B564                                   16039 @@gen_label1251 DS    0H
0000B564 4110 D0F8               000000F8  16040          LA    1,248(0,13)
0000B568 E310 D120 0024          00000120  16041          STG   1,288(0,13)
0000B56E 4110 D0A8               000000A8  16042          LA    1,168(0,13)
0000B572 E310 D128 0024          00000128  16043          STG   1,296(0,13)
0000B578 D707 D130 D130 00000130 00000130  16044          XC    304(8,13),304(13)
0000B57E E3F0 D138 0024          00000138  16045          STG   15,312(0,13)
0000B584 4110 D120               00000120  16046          LA    1,288(0,13)
0000B588 E3F0 C0C8 0004          0000B010  16047          LG    15,@lit_857_1154 ; rd_slice_init
0000B58E                                   16048 @@gen_label1252 DS    0H
0000B58E 05EF                              16049          BALR  14,15
0000B590                                   16050 @@gen_label1253 DS    0H
0000B590 183F                              16051          LR    3,15
                                           16052 * ***                   do { if (!((r2 == -1 && rd_buf_len(&b) == 0) |\
                                           16053 * | (r2 == 0 && rd_buf_len(&b) > 0))) { fprintf(__stderrp, "\033[31mRD\
                                           16054 * UT: FAIL: %s:%d: %s: " "assert failed: " "(r2 == -1 && rd_buf_len(&b\
                                           16055 * ) == 0) || (r2 == 0 && rd_buf_len(&b) > 0)" ": ", "C:\\asgkafka\\lib\
                                           16056 * rdkafka\\src\\rdbuf.c", 1805, __FUNCTION__); fprintf(__stderrp, "sli\
                                           16057 * ce_init(%" "zu" ") returned %d for i=%d", rd_buf_len(&b), r2, i); fp\
                                           16058 * rintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((\
                                           16059 * (r2 == -1 && rd_buf_len(&b) == 0) || (r2 == 0 && rd_buf_len(&b) > 0)\
                                           16060 * ) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdb\
                                           16061 * uf.c", 1805, "(r2 == -1 && rd_buf_len(&b) == 0) || (r2 == 0 && rd_bu\
                                           16062 * f_len(&b) > 0)")); return 1; } } while (0);
0000B592                                   16063 @L806    DS    0H
0000B592 A73E FFFF               0000FFFF  16064          CHI   3,-1
0000B596 4770 C670               0000B5B8  16065          BNE   @L809
0000B59A 41F0 D0A8               000000A8  16066          LA    15,168(0,13)
0000B59E E3F0 D120 0024          00000120  16067          STG   15,288(0,13)
0000B5A4 4110 D120               00000120  16068          LA    1,288(0,13)
0000B5A8 E3F0 C0C0 0004          0000B008  16069          LG    15,@lit_857_1138 ; rd_buf_len
0000B5AE                                   16070 @@gen_label1255 DS    0H
0000B5AE 05EF                              16071          BALR  14,15
0000B5B0                                   16072 @@gen_label1256 DS    0H
0000B5B0 B902 00FF                         16073          LTGR  15,15
0000B5B4 4780 C7FE               0000B746  16074          BE    @L810
0000B5B8                                   16075 @L809    DS    0H
0000B5B8 1233                              16076          LTR   3,3
0000B5BA 4770 C696               0000B5DE  16077          BNE   @L811
0000B5BE 41F0 D0A8               000000A8  16078          LA    15,168(0,13)
0000B5C2 E3F0 D120 0024          00000120  16079          STG   15,288(0,13)
0000B5C8 4110 D120               00000120  16080          LA    1,288(0,13)
0000B5CC E3F0 C0C0 0004          0000B008  16081          LG    15,@lit_857_1138 ; rd_buf_len
0000B5D2                                   16082 @@gen_label1259 DS    0H
0000B5D2 05EF                              16083          BALR  14,15
0000B5D4                                   16084 @@gen_label1260 DS    0H
                                                                                                                           Page  317 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B5D4 C2FE 0000 0000                    16085          CLGFI 15,X'00000000'
0000B5DA 4720 C7FE               0000B746  16086          BH    @L810
0000B5DE                                   16087 @L811    DS    0H
0000B5DE E340 C0A8 0016          0000AFF0  16088          LLGF  4,@lit_857_1121 ; __stderrp
0000B5E4 E3F4 6000 0004          00000000  16089          LG    15,0(4,6)   ; __stderrp
0000B5EA E3F0 D120 0024          00000120  16090          STG   15,288(0,13)
0000B5F0 E350 C0A0 0004          0000AFE8  16091          LG    5,@lit_857_1122
0000B5F6 41F0 558A               0000058A  16092          LA    15,1418(0,5)
0000B5FA E3F0 D128 0024          00000128  16093          STG   15,296(0,13)
0000B600 E370 C098 0004          0000AFE0  16094          LG    7,@lit_857_1123
0000B606 41F0 7040               00000040  16095          LA    15,64(0,7)
0000B60A E3F0 D130 0024          00000130  16096          STG   15,304(0,13)
0000B610 E548 D138 070D          00000138  16097          MVGHI 312(13),1805
0000B616 E380 C060 0004          0000AFA8  16098          LG    8,@lit_857_1109
0000B61C 41F0 8B50               00000B50  16099          LA    15,2896(0,8)
0000B620 E3F0 D140 0024          00000140  16100          STG   15,320(0,13)
0000B626 4110 D120               00000120  16101          LA    1,288(0,13)
0000B62A E390 C090 0004          0000AFD8  16102          LG    9,@lit_857_1124 ; fprintf
0000B630 B904 00F9                         16103          LGR   15,9
0000B634                                   16104 @@gen_label1262 DS    0H
0000B634 05EF                              16105          BALR  14,15
0000B636                                   16106 @@gen_label1263 DS    0H
0000B636 41F0 D0A8               000000A8  16107          LA    15,168(0,13)
0000B63A E3F0 D120 0024          00000120  16108          STG   15,288(0,13)
0000B640 4110 D120               00000120  16109          LA    1,288(0,13)
0000B644 E3A0 C0C0 0004          0000B008  16110          LG    10,@lit_857_1138 ; rd_buf_len
0000B64A B904 00FA                         16111          LGR   15,10
0000B64E                                   16112 @@gen_label1264 DS    0H
0000B64E 05EF                              16113          BALR  14,15
0000B650                                   16114 @@gen_label1265 DS    0H
0000B650 E314 6000 0004          00000000  16115          LG    1,0(4,6)    ; __stderrp
0000B656 E310 D120 0024          00000120  16116          STG   1,288(0,13)
0000B65C 4110 55FC               000005FC  16117          LA    1,1532(0,5)
0000B660 E310 D128 0024          00000128  16118          STG   1,296(0,13)
0000B666 E3F0 D130 0024          00000130  16119          STG   15,304(0,13)
0000B66C B914 00F3                         16120          LGFR  15,3
0000B670 E3F0 D138 0024          00000138  16121          STG   15,312(0,13)
0000B676 B914 00F2                         16122          LGFR  15,2
0000B67A E3F0 D140 0024          00000140  16123          STG   15,320(0,13)
0000B680 4110 D120               00000120  16124          LA    1,288(0,13)
0000B684 B904 00F9                         16125          LGR   15,9
0000B688                                   16126 @@gen_label1266 DS    0H
0000B688 05EF                              16127          BALR  14,15
0000B68A                                   16128 @@gen_label1267 DS    0H
0000B68A E3F4 6000 0004          00000000  16129          LG    15,0(4,6)   ; __stderrp
0000B690 E3F0 D120 0024          00000120  16130          STG   15,288(0,13)
0000B696 41F0 75A4               000005A4  16131          LA    15,1444(0,7)
0000B69A E3F0 D128 0024          00000128  16132          STG   15,296(0,13)
0000B6A0 4110 D120               00000120  16133          LA    1,288(0,13)
0000B6A4 B904 00F9                         16134          LGR   15,9
0000B6A8                                   16135 @@gen_label1268 DS    0H
0000B6A8 05EF                              16136          BALR  14,15
                                                                                                                           Page  318 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B6AA                                   16137 @@gen_label1269 DS    0H
0000B6AA E3F0 C0AC 0016          0000AFF4  16138          LLGF  15,@lit_857_1129 ; rd_unittest_assert_on_failure
0000B6B0 41FF 6000               00000000  16139          LA    15,0(15,6)
0000B6B4 9500 F000      00000000 00000000  16140          CLI   0(15),0
0000B6B8 4780 C7F0               0000B738  16141          BE    @L812
0000B6BC A73E FFFF               0000FFFF  16142          CHI   3,-1
0000B6C0 4770 C798               0000B6E0  16143          BNE   @L813
0000B6C4 41F0 D0A8               000000A8  16144          LA    15,168(0,13)
0000B6C8 E3F0 D120 0024          00000120  16145          STG   15,288(0,13)
0000B6CE 4110 D120               00000120  16146          LA    1,288(0,13)
0000B6D2 B904 00FA                         16147          LGR   15,10
0000B6D6                                   16148 @@gen_label1272 DS    0H
0000B6D6 05EF                              16149          BALR  14,15
0000B6D8                                   16150 @@gen_label1273 DS    0H
0000B6D8 B902 00FF                         16151          LTGR  15,15
0000B6DC 4780 C7F0               0000B738  16152          BE    @L812
0000B6E0                                   16153 @L813    DS    0H
0000B6E0 1233                              16154          LTR   3,3
0000B6E2 4770 C7C0               0000B708  16155          BNE   @L814
0000B6E6 41F0 D0A8               000000A8  16156          LA    15,168(0,13)
0000B6EA E3F0 D120 0024          00000120  16157          STG   15,288(0,13)
0000B6F0 4110 D120               00000120  16158          LA    1,288(0,13)
0000B6F4 B904 00FA                         16159          LGR   15,10
0000B6F8                                   16160 @@gen_label1276 DS    0H
0000B6F8 05EF                              16161          BALR  14,15
0000B6FA                                   16162 @@gen_label1277 DS    0H
0000B6FA C2FE 0000 0000                    16163          CLGFI 15,X'00000000'
0000B700 47D0 C7C0               0000B708  16164          BNH   @L814
0000B704                                   16165 @L815    DS    0H
0000B704 47F0 C7F0               0000B738  16166          B     @L812
0000B708                                   16167 @L814    DS    0H
0000B708 41F0 8B50               00000B50  16168          LA    15,2896(0,8)
0000B70C E3F0 D120 0024          00000120  16169          STG   15,288(0,13)
0000B712 41F0 7040               00000040  16170          LA    15,64(0,7)
0000B716 E3F0 D128 0024          00000128  16171          STG   15,296(0,13)
0000B71C E548 D130 070D          00000130  16172          MVGHI 304(13),1805
0000B722 41F0 5622               00000622  16173          LA    15,1570(0,5)
0000B726 E3F0 D138 0024          00000138  16174          STG   15,312(0,13)
0000B72C 4110 D120               00000120  16175          LA    1,288(0,13)
0000B730 E3F0 C0B0 0004          0000AFF8  16176          LG    15,@lit_857_1130 ; __assert
0000B736                                   16177 @@gen_label1279 DS    0H
0000B736 05EF                              16178          BALR  14,15
0000B738                                   16179 @@gen_label1280 DS    0H
0000B738                                   16180 @L816    DS    0H
0000B738                                   16181 @L812    DS    0H
0000B738 A7F9 0001               00000001  16182          LGHI  15,1        ; 1
0000B73C E3C0 C05C 001A          0000AFA4  16183          ALGF  12,@lit_region_diff_857_1_2
                                           16184          DROP  12
                        0000B852           16185          USING @REGION_857_2,12
0000B742 47F0 C5B8               0000BE0A  16186          B     @ret_lab_857
                                           16187          DROP  12
                        0000AF48           16188          USING @REGION_857_1,12
                                                                                                                           Page  319 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B746                                   16189 @L810    DS    0H
                                           16190 * ***
                                           16191 * ***
                                           16192 * ***
                                           16193 * ***                   if (r2 == -1)
0000B746 A73E FFFF               0000FFFF  16194          CHI   3,-1
0000B74A 4770 C810               0000B758  16195          BNE   @L818
                                           16196 * ***                           continue;
0000B74E E3C0 C05C 001A          0000AFA4  16197          ALGF  12,@lit_region_diff_857_1_2
                                           16198          DROP  12
                        0000B852           16199          USING @REGION_857_2,12
0000B754 47F0 C546               0000BD98  16200          B     @L779
                                           16201          DROP  12
                        0000AF48           16202          USING @REGION_857_1,12
                                           16203 * ***
                                           16204 * ***                   do { if (!(expsz == ((&s)->end - (&s)->start))\
                                           16205 * ) { fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert fai\
                                           16206 * led: " "expsz == rd_slice_size(&s)" ": ", "C:\\asgkafka\\librdkafka\\
                                           16207 * \src\\rdbuf.c", 1812, __FUNCTION__); fprintf(__stderrp, "expected sl\
                                           16208 * ice to be %" "zu" " bytes, not %" "zu" " for i=%d", expsz, ((&s)->en\
                                           16209 * d - (&s)->start), i); fprintf(__stderrp, "\033[0m\n"); if (rd_unitte\
                                           16210 * st_assert_on_failure) ((expsz == ((&s)->end - (&s)->start)) ? (void)\
                                           16211 * 0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 181\
                                           16212 * 2, "expsz == ((&s)->end - (&s)->start)")); return 1; } } while (0);
0000B758                                   16213 @L818    DS    0H
0000B758 E3F0 D118 0004          00000118  16214          LG    15,280(0,13) ; offset of end in rd_slice_s
0000B75E E3F0 D110 000B          00000110  16215          SLG   15,272(0,13)
0000B764 B921 005F                         16216          CLGR  5,15
0000B768 4770 C82E               0000B776  16217          BNE   *+14  Around region break
0000B76C E3C0 C05C 001A          0000AFA4  16218          ALGF  12,@lit_region_diff_857_1_2
                                           16219          DROP  12
                        0000B852           16220          USING @REGION_857_2,12
0000B772 47F0 C0AA               0000B8FC  16221          B     @L821
                                           16222          DROP  12
                        0000AF48           16223          USING @REGION_857_1,12
0000B776 E330 C0A8 0016          0000AFF0  16224          LLGF  3,@lit_857_1121 ; __stderrp
0000B77C E3F3 6000 0004          00000000  16225          LG    15,0(3,6)   ; __stderrp
0000B782 E3F0 D120 0024          00000120  16226          STG   15,288(0,13)
0000B788 E340 C0A0 0004          0000AFE8  16227          LG    4,@lit_857_1122
0000B78E 41F0 4668               00000668  16228          LA    15,1640(0,4)
0000B792 E3F0 D128 0024          00000128  16229          STG   15,296(0,13)
0000B798 E370 C098 0004          0000AFE0  16230          LG    7,@lit_857_1123
0000B79E 41F0 7040               00000040  16231          LA    15,64(0,7)
0000B7A2 E3F0 D130 0024          00000130  16232          STG   15,304(0,13)
0000B7A8 E548 D138 0714          00000138  16233          MVGHI 312(13),1812
0000B7AE E380 C060 0004          0000AFA8  16234          LG    8,@lit_857_1109
0000B7B4 41F0 8B50               00000B50  16235          LA    15,2896(0,8)
0000B7B8 E3F0 D140 0024          00000140  16236          STG   15,320(0,13)
0000B7BE 4110 D120               00000120  16237          LA    1,288(0,13)
0000B7C2 E390 C090 0004          0000AFD8  16238          LG    9,@lit_857_1124 ; fprintf
0000B7C8 B904 00F9                         16239          LGR   15,9
0000B7CC                                   16240 @@gen_label1283 DS    0H
                                                                                                                           Page  320 
  Active Usings: @REGION_857_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B7CC 05EF                              16241          BALR  14,15
0000B7CE                                   16242 @@gen_label1284 DS    0H
0000B7CE E3F3 6000 0004          00000000  16243          LG    15,0(3,6)   ; __stderrp
0000B7D4 E3F0 D120 0024          00000120  16244          STG   15,288(0,13)
0000B7DA 41F0 46B0               000006B0  16245          LA    15,1712(0,4)
0000B7DE E3F0 D128 0024          00000128  16246          STG   15,296(0,13)
0000B7E4 E350 D130 0024          00000130  16247          STG   5,304(0,13)
0000B7EA E3F0 D118 0004          00000118  16248          LG    15,280(0,13) ; offset of end in rd_slice_s
0000B7F0 E3F0 D110 000B          00000110  16249          SLG   15,272(0,13)
0000B7F6 E3F0 D138 0024          00000138  16250          STG   15,312(0,13)
0000B7FC B914 00F2                         16251          LGFR  15,2
0000B800 E3F0 D140 0024          00000140  16252          STG   15,320(0,13)
0000B806 4110 D120               00000120  16253          LA    1,288(0,13)
0000B80A B904 00F9                         16254          LGR   15,9
0000B80E                                   16255 @@gen_label1285 DS    0H
0000B80E 05EF                              16256          BALR  14,15
0000B810                                   16257 @@gen_label1286 DS    0H
0000B810 E3F3 6000 0004          00000000  16258          LG    15,0(3,6)   ; __stderrp
0000B816 E3F0 D120 0024          00000120  16259          STG   15,288(0,13)
0000B81C 41F0 75A4               000005A4  16260          LA    15,1444(0,7)
0000B820 E3F0 D128 0024          00000128  16261          STG   15,296(0,13)
0000B826 4110 D120               00000120  16262          LA    1,288(0,13)
0000B82A B904 00F9                         16263          LGR   15,9
0000B82E                                   16264 @@gen_label1287 DS    0H
0000B82E 05EF                              16265          BALR  14,15
0000B830                                   16266 @@gen_label1288 DS    0H
0000B830 E3F0 C0AC 0016          0000AFF4  16267          LLGF  15,@lit_857_1129 ; rd_unittest_assert_on_failure
0000B836 41FF 6000               00000000  16268          LA    15,0(15,6)
0000B83A 9500 F000      00000000 00000000  16269          CLI   0(15),0
0000B83E 4770 C904               0000B84C  16270          BNE   *+14  Around region break
0000B842 E3C0 C05C 001A          0000AFA4  16271          ALGF  12,@lit_region_diff_857_1_2
                                           16272          DROP  12
                        0000B852           16273          USING @REGION_857_2,12
0000B848 47F0 C044               0000B896  16274          B     @L822
                                           16275          DROP  12
                        0000AF48           16276          USING @REGION_857_1,12
0000B84C E3C0 C05C 001A          0000AFA4  16277          ALGF  12,@lit_region_diff_857_1_2
0000B852                                   16278 @REGION_857_2 DS 0H
                                           16279          DROP  12
                        0000B852           16280          USING @REGION_857_2,12
0000B852 E3F0 D118 0004          00000118  16281          LG    15,280(0,13) ; offset of end in rd_slice_s
0000B858 E3F0 D110 000B          00000110  16282          SLG   15,272(0,13)
0000B85E B921 005F                         16283          CLGR  5,15
0000B862 4780 C044               0000B896  16284          BE    @L822
0000B866                                   16285 @L823    DS    0H
0000B866 41F0 8B50               00000B50  16286          LA    15,2896(0,8)
0000B86A E3F0 D120 0024          00000120  16287          STG   15,288(0,13)
0000B870 41F0 7040               00000040  16288          LA    15,64(0,7)
0000B874 E3F0 D128 0024          00000128  16289          STG   15,296(0,13)
0000B87A E548 D130 0714          00000130  16290          MVGHI 304(13),1812
0000B880 41F0 46E2               000006E2  16291          LA    15,1762(0,4)
0000B884 E3F0 D138 0024          00000138  16292          STG   15,312(0,13)
                                                                                                                           Page  321 
  Active Usings: @REGION_857_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000B88A 4110 D120               00000120  16293          LA    1,288(0,13)
0000B88E E3F0 C04E 0004          0000B8A0  16294          LG    15,@lit_857_1182 ; __assert
0000B894                                   16295 @@gen_label1291 DS    0H
0000B894 05EF                              16296          BALR  14,15
0000B896                                   16297 @@gen_label1292 DS    0H
0000B896                                   16298 @L824    DS    0H
0000B896                                   16299 @L822    DS    0H
0000B896 A7F9 0001               00000001  16300          LGHI  15,1        ; 1
0000B89A 47F0 C5B8               0000BE0A  16301          B     @ret_lab_857
0000B8A0                                   16302          DS    0D
0000B8A0 0000000000000000                  16303 @lit_857_1182 DC AD(__assert)
0000B8A8 0000000000000058                  16304 @lit_857_1184 DC AD(rd_malloc)
0000B8B0 0000000000003ED0                  16305 @lit_857_1185 DC AD(rd_slice_read)
0000B8B8 0000000000000000                  16306 @lit_857_1190 DC AD(fprintf)
0000B8C0 000000000000BFA0                  16307 @lit_857_1189 DC AD(@DATA)
0000B8C8 000000000000CB02                  16308 @lit_857_1188 DC AD(@strings@)
0000B8D0 000000000000DB02                  16309 @lit_857_1187 DC AD(@strings@+4096)
0000B8D8 00000000                          16310 @lit_857_1186 DC Q(__stderrp)
0000B8DC 00000000                          16311 @lit_857_1195 DC Q(rd_unittest_assert_on_failure)
0000B8E0 00000000000001C0                  16312 @lit_857_1214 DC AD(rd_free)
0000B8E8 00000000000007F0                  16313 @lit_857_1215 DC AD(rd_slice_abs_offset)
0000B8F0 0000000000001CD0                  16314 @lit_857_1230 DC AD(rd_buf_destroy)
0000B8F8 0000090A                          16315 @lit_region_diff_857_2_1  DC A(@REGION_857_2-@REGION_857_1)
0000B8FC                                   16316 @L821    DS    0H
                                           16317 * ***
                                           16318 * ***
                                           16319 * ***
                                           16320 * ***
                                           16321 * ***                   out = rd_malloc(expsz);
0000B8FC E350 D120 0024          00000120  16322          STG   5,288(0,13)
0000B902 4110 D120               00000120  16323          LA    1,288(0,13)
0000B906 E3F0 C056 0004          0000B8A8  16324          LG    15,@lit_857_1184 ; rd_malloc
0000B90C                                   16325 @@gen_label1293 DS    0H
0000B90C 05EF                              16326          BALR  14,15
0000B90E                                   16327 @@gen_label1294 DS    0H
0000B90E B904 003F                         16328          LGR   3,15
                                           16329 * ***
                                           16330 * ***                   r = rd_slice_read(&s, out, expsz);
0000B912 4110 D0F8               000000F8  16331          LA    1,248(0,13)
0000B916 E310 D120 0024          00000120  16332          STG   1,288(0,13)
0000B91C E330 D128 0024          00000128  16333          STG   3,296(0,13)
0000B922 E350 D130 0024          00000130  16334          STG   5,304(0,13)
0000B928 4110 D120               00000120  16335          LA    1,288(0,13)
0000B92C E3F0 C05E 0004          0000B8B0  16336          LG    15,@lit_857_1185 ; rd_slice_read
0000B932                                   16337 @@gen_label1295 DS    0H
0000B932 05EF                              16338          BALR  14,15
0000B934                                   16339 @@gen_label1296 DS    0H
0000B934 B904 004F                         16340          LGR   4,15        ; r
                                           16341 * ***                   do { if (!(r == expsz)) { fprintf(__stderrp, "\
                                           16342 * \033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "r == expsz" ": "\
                                           16343 * , "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1820, __FUNCTION__); fpr\
                                           16344 * intf(__stderrp, "expected to read %" "zu" " bytes, not %" "zu" " for\
                                                                                                                           Page  322 
  Active Usings: @REGION_857_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           16345 *  i=%d", expsz, r, i); fprintf(__stderrp, "\033[0m\n"); if (rd_unitte\
                                           16346 * st_assert_on_failure) ((r == expsz) ? (void)0 : __assert(__func__, "\
                                           16347 * C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1820, "r == expsz")); retur\
                                           16348 * n 1; } } while (0);
0000B938                                   16349 @L825    DS    0H
0000B938 B921 0045                         16350          CLGR  4,5
0000B93C 4780 C1EE               0000BA40  16351          BE    @L828
0000B940 E330 C086 0016          0000B8D8  16352          LLGF  3,@lit_857_1186 ; __stderrp
0000B946 E3F3 6000 0004          00000000  16353          LG    15,0(3,6)   ; __stderrp
0000B94C E3F0 D120 0024          00000120  16354          STG   15,288(0,13)
0000B952 E370 C07E 0004          0000B8D0  16355          LG    7,@lit_857_1187
0000B958 41F0 7706               00000706  16356          LA    15,1798(0,7)
0000B95C E3F0 D128 0024          00000128  16357          STG   15,296(0,13)
0000B962 E380 C076 0004          0000B8C8  16358          LG    8,@lit_857_1188
0000B968 41F0 8040               00000040  16359          LA    15,64(0,8)
0000B96C E3F0 D130 0024          00000130  16360          STG   15,304(0,13)
0000B972 E548 D138 071C          00000138  16361          MVGHI 312(13),1820
0000B978 E390 C06E 0004          0000B8C0  16362          LG    9,@lit_857_1189
0000B97E 41F0 9B50               00000B50  16363          LA    15,2896(0,9)
0000B982 E3F0 D140 0024          00000140  16364          STG   15,320(0,13)
0000B988 4110 D120               00000120  16365          LA    1,288(0,13)
0000B98C E3A0 C066 0004          0000B8B8  16366          LG    10,@lit_857_1190 ; fprintf
0000B992 B904 00FA                         16367          LGR   15,10
0000B996                                   16368 @@gen_label1298 DS    0H
0000B996 05EF                              16369          BALR  14,15
0000B998                                   16370 @@gen_label1299 DS    0H
0000B998 E3F3 6000 0004          00000000  16371          LG    15,0(3,6)   ; __stderrp
0000B99E E3F0 D120 0024          00000120  16372          STG   15,288(0,13)
0000B9A4 41F0 773E               0000073E  16373          LA    15,1854(0,7)
0000B9A8 E3F0 D128 0024          00000128  16374          STG   15,296(0,13)
0000B9AE E350 D130 0024          00000130  16375          STG   5,304(0,13)
0000B9B4 E340 D138 0024          00000138  16376          STG   4,312(0,13)
0000B9BA B914 00F2                         16377          LGFR  15,2
0000B9BE E3F0 D140 0024          00000140  16378          STG   15,320(0,13)
0000B9C4 4110 D120               00000120  16379          LA    1,288(0,13)
0000B9C8 B904 00FA                         16380          LGR   15,10
0000B9CC                                   16381 @@gen_label1300 DS    0H
0000B9CC 05EF                              16382          BALR  14,15
0000B9CE                                   16383 @@gen_label1301 DS    0H
0000B9CE E3F3 6000 0004          00000000  16384          LG    15,0(3,6)   ; __stderrp
0000B9D4 E3F0 D120 0024          00000120  16385          STG   15,288(0,13)
0000B9DA 41F0 85A4               000005A4  16386          LA    15,1444(0,8)
0000B9DE E3F0 D128 0024          00000128  16387          STG   15,296(0,13)
0000B9E4 4110 D120               00000120  16388          LA    1,288(0,13)
0000B9E8 B904 00FA                         16389          LGR   15,10
0000B9EC                                   16390 @@gen_label1302 DS    0H
0000B9EC 05EF                              16391          BALR  14,15
0000B9EE                                   16392 @@gen_label1303 DS    0H
0000B9EE E3F0 C08A 0016          0000B8DC  16393          LLGF  15,@lit_857_1195 ; rd_unittest_assert_on_failure
0000B9F4 41FF 6000               00000000  16394          LA    15,0(15,6)
0000B9F8 9500 F000      00000000 00000000  16395          CLI   0(15),0
0000B9FC 4780 C1E6               0000BA38  16396          BE    @L829
                                                                                                                           Page  323 
  Active Usings: @REGION_857_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BA00 B921 0045                         16397          CLGR  4,5
0000BA04 4780 C1E6               0000BA38  16398          BE    @L829
0000BA08                                   16399 @L830    DS    0H
0000BA08 41F0 9B50               00000B50  16400          LA    15,2896(0,9)
0000BA0C E3F0 D120 0024          00000120  16401          STG   15,288(0,13)
0000BA12 41F0 8040               00000040  16402          LA    15,64(0,8)
0000BA16 E3F0 D128 0024          00000128  16403          STG   15,296(0,13)
0000BA1C E548 D130 071C          00000130  16404          MVGHI 304(13),1820
0000BA22 41F0 776C               0000076C  16405          LA    15,1900(0,7)
0000BA26 E3F0 D138 0024          00000138  16406          STG   15,312(0,13)
0000BA2C 4110 D120               00000120  16407          LA    1,288(0,13)
0000BA30 E3F0 C04E 0004          0000B8A0  16408          LG    15,@lit_857_1182 ; __assert
0000BA36                                   16409 @@gen_label1306 DS    0H
0000BA36 05EF                              16410          BALR  14,15
0000BA38                                   16411 @@gen_label1307 DS    0H
0000BA38                                   16412 @L831    DS    0H
0000BA38                                   16413 @L829    DS    0H
0000BA38 A7F9 0001               00000001  16414          LGHI  15,1        ; 1
0000BA3C 47F0 C5B8               0000BE0A  16415          B     @ret_lab_857
0000BA40                                   16416 @L828    DS    0H
                                           16417 * ***
                                           16418 * ***
                                           16419 * ***
                                           16420 * ***
                                           16421 * ***                   do { if (!(!__memcmp(out,in[i].expect,expsz)))\
                                           16422 *  { fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert fail\
                                           16423 * ed: " "!memcmp(out, in[i].expect, expsz)" ": ", "C:\\asgkafka\\librd\
                                           16424 * kafka\\src\\rdbuf.c", 1825, __FUNCTION__); fprintf(__stderrp, "Expec\
                                           16425 * ted \"%.*s\", not \"%.*s\" for i=%d", (int)expsz, in[i].expect, (int\
                                           16426 * )r, out, i); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert\
                                           16427 * _on_failure) ((!__memcmp(out,in[i].expect,expsz)) ? (void)0 : __asse\
                                           16428 * rt(__func__, "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1825, "!__mem\
                                           16429 * cmp(out,in[i].expect,expsz)")); return 1; } } while (0);
0000BA40                                   16430 @L832    DS    0H
0000BA40 B914 00F2                         16431          LGFR  15,2
0000BA44 E310 C06E 0004          0000B8C0  16432          LG    1,@lit_857_1189
0000BA4A A7FD 00A8               000000A8  16433          MGHI  15,168
0000BA4E B904 0073                         16434          LGR   7,3
0000BA52 E3FF 12C0 0004          000002C0  16435          LG    15,704(15,1)
0000BA58 A789 0000               00000000  16436          LGHI  8,0
0000BA5C B902 0015                         16437          LTGR  1,5
0000BA60 4780 C23E               0000BA90  16438          BZ    @@gen_label1308
0000BA64                                   16439 @@gen_label1310 DS 0H
0000BA64 D500 7000 F000 00000000 00000000  16440          CLC   0(1,7),0(15)
0000BA6A 4770 C22E               0000BA80  16441          BNZ   @@gen_label1309
0000BA6E 4170 7001               00000001  16442          LA    7,1(0,7)
0000BA72 41F0 F001               00000001  16443          LA    15,1(0,15)
0000BA76 E310 C212 0046          0000BA64  16444          BCTG  1,@@gen_label1310
0000BA7C 47F0 C23E               0000BA90  16445          B     @@gen_label1308
0000BA80                                   16446 @@gen_label1309 DS 0H
0000BA80 4380 7000               00000000  16447          IC    8,0(0,7)
0000BA84 A779 0000               00000000  16448          LGHI  7,0
                                                                                                                           Page  324 
  Active Usings: @REGION_857_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BA88 4370 F000               00000000  16449          IC    7,0(0,15)
0000BA8C B90B 0087                         16450          SLGR  8,7
0000BA90                                   16451 @@gen_label1308 DS 0H
0000BA90 1288                              16452          LTR   8,8
0000BA92 4780 C3BC               0000BC0E  16453          BZ    @L835
0000BA96 E370 C086 0016          0000B8D8  16454          LLGF  7,@lit_857_1186 ; __stderrp
0000BA9C E3F7 6000 0004          00000000  16455          LG    15,0(7,6)   ; __stderrp
0000BAA2 E3F0 D120 0024          00000120  16456          STG   15,288(0,13)
0000BAA8 E380 C07E 0004          0000B8D0  16457          LG    8,@lit_857_1187
0000BAAE 41F0 8778               00000778  16458          LA    15,1912(0,8)
0000BAB2 E3F0 D128 0024          00000128  16459          STG   15,296(0,13)
0000BAB8 E390 C076 0004          0000B8C8  16460          LG    9,@lit_857_1188
0000BABE 41F0 9040               00000040  16461          LA    15,64(0,9)
0000BAC2 E3F0 D130 0024          00000130  16462          STG   15,304(0,13)
0000BAC8 E548 D138 0721          00000138  16463          MVGHI 312(13),1825
0000BACE E3A0 C06E 0004          0000B8C0  16464          LG    10,@lit_857_1189
0000BAD4 41F0 AB50               00000B50  16465          LA    15,2896(0,10)
0000BAD8 E3F0 D140 0024          00000140  16466          STG   15,320(0,13)
0000BADE 4110 D120               00000120  16467          LA    1,288(0,13)
0000BAE2 E3B0 C066 0004          0000B8B8  16468          LG    11,@lit_857_1190 ; fprintf
0000BAE8 B904 00FB                         16469          LGR   15,11
0000BAEC                                   16470 @@gen_label1312 DS    0H
0000BAEC 05EF                              16471          BALR  14,15
0000BAEE                                   16472 @@gen_label1313 DS    0H
0000BAEE E3F7 6000 0004          00000000  16473          LG    15,0(7,6)   ; __stderrp
0000BAF4 E3F0 D120 0024          00000120  16474          STG   15,288(0,13)
0000BAFA 41F0 87C8               000007C8  16475          LA    15,1992(0,8)
0000BAFE E3F0 D128 0024          00000128  16476          STG   15,296(0,13)
0000BB04 B914 00F5                         16477          LGFR  15,5
0000BB08 E3F0 D130 0024          00000130  16478          STG   15,304(0,13)
0000BB0E B914 00F2                         16479          LGFR  15,2
0000BB12 A7FD 00A8               000000A8  16480          MGHI  15,168
0000BB16 E3FF A2C0 0004          000002C0  16481          LG    15,704(15,10)
0000BB1C E3F0 D138 0024          00000138  16482          STG   15,312(0,13)
0000BB22 B914 00F4                         16483          LGFR  15,4
0000BB26 E3F0 D140 0024          00000140  16484          STG   15,320(0,13)
0000BB2C E330 D148 0024          00000148  16485          STG   3,328(0,13)
0000BB32 B914 00F2                         16486          LGFR  15,2
0000BB36 E3F0 D150 0024          00000150  16487          STG   15,336(0,13)
0000BB3C 4110 D120               00000120  16488          LA    1,288(0,13)
0000BB40 B904 00FB                         16489          LGR   15,11
0000BB44                                   16490 @@gen_label1314 DS    0H
0000BB44 05EF                              16491          BALR  14,15
0000BB46                                   16492 @@gen_label1315 DS    0H
0000BB46 E3F7 6000 0004          00000000  16493          LG    15,0(7,6)   ; __stderrp
0000BB4C E3F0 D120 0024          00000120  16494          STG   15,288(0,13)
0000BB52 41F0 95A4               000005A4  16495          LA    15,1444(0,9)
0000BB56 E3F0 D128 0024          00000128  16496          STG   15,296(0,13)
0000BB5C 4110 D120               00000120  16497          LA    1,288(0,13)
0000BB60 B904 00FB                         16498          LGR   15,11
0000BB64                                   16499 @@gen_label1316 DS    0H
0000BB64 05EF                              16500          BALR  14,15
                                                                                                                           Page  325 
  Active Usings: @REGION_857_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BB66                                   16501 @@gen_label1317 DS    0H
0000BB66 E3F0 C08A 0016          0000B8DC  16502          LLGF  15,@lit_857_1195 ; rd_unittest_assert_on_failure
0000BB6C 41FF 6000               00000000  16503          LA    15,0(15,6)
0000BB70 9500 F000      00000000 00000000  16504          CLI   0(15),0
0000BB74 4780 C3B4               0000BC06  16505          BE    @L836
0000BB78 B914 00F2                         16506          LGFR  15,2
0000BB7C A7FD 00A8               000000A8  16507          MGHI  15,168
0000BB80 E3FF A2C0 0004          000002C0  16508          LG    15,704(15,10)
0000BB86 A729 0000               00000000  16509          LGHI  2,0
0000BB8A B902 0015                         16510          LTGR  1,5
0000BB8E 4780 C36C               0000BBBE  16511          BZ    @@gen_label1319
0000BB92                                   16512 @@gen_label1321 DS 0H
0000BB92 D500 3000 F000 00000000 00000000  16513          CLC   0(1,3),0(15)
0000BB98 4770 C35C               0000BBAE  16514          BNZ   @@gen_label1320
0000BB9C 4130 3001               00000001  16515          LA    3,1(0,3)
0000BBA0 41F0 F001               00000001  16516          LA    15,1(0,15)
0000BBA4 E310 C340 0046          0000BB92  16517          BCTG  1,@@gen_label1321
0000BBAA 47F0 C36C               0000BBBE  16518          B     @@gen_label1319
0000BBAE                                   16519 @@gen_label1320 DS 0H
0000BBAE 4320 3000               00000000  16520          IC    2,0(0,3)
0000BBB2 A739 0000               00000000  16521          LGHI  3,0
0000BBB6 4330 F000               00000000  16522          IC    3,0(0,15)
0000BBBA B90B 0023                         16523          SLGR  2,3
0000BBBE                                   16524 @@gen_label1319 DS 0H
0000BBBE 1222                              16525          LTR   2,2
0000BBC0 4780 C3B4               0000BC06  16526          BZ    @L836
0000BBC4                                   16527 @L837    DS    0H
0000BBC4 E3F0 C06E 0004          0000B8C0  16528          LG    15,@lit_857_1189
0000BBCA 41F0 FB50               00000B50  16529          LA    15,2896(0,15)
0000BBCE E3F0 D120 0024          00000120  16530          STG   15,288(0,13)
0000BBD4 E3F0 C076 0004          0000B8C8  16531          LG    15,@lit_857_1188
0000BBDA 41F0 F040               00000040  16532          LA    15,64(0,15)
0000BBDE E3F0 D128 0024          00000128  16533          STG   15,296(0,13)
0000BBE4 E548 D130 0721          00000130  16534          MVGHI 304(13),1825
0000BBEA E3F0 C07E 0004          0000B8D0  16535          LG    15,@lit_857_1187
0000BBF0 41F0 F7EE               000007EE  16536          LA    15,2030(0,15)
0000BBF4 E3F0 D138 0024          00000138  16537          STG   15,312(0,13)
0000BBFA 4110 D120               00000120  16538          LA    1,288(0,13)
0000BBFE E3F0 C04E 0004          0000B8A0  16539          LG    15,@lit_857_1182 ; __assert
0000BC04                                   16540 @@gen_label1323 DS    0H
0000BC04 05EF                              16541          BALR  14,15
0000BC06                                   16542 @@gen_label1324 DS    0H
0000BC06                                   16543 @L838    DS    0H
0000BC06                                   16544 @L836    DS    0H
0000BC06 A7F9 0001               00000001  16545          LGHI  15,1        ; 1
0000BC0A 47F0 C5B8               0000BE0A  16546          B     @ret_lab_857
0000BC0E                                   16547 @L835    DS    0H
                                           16548 * ***
                                           16549 * ***
                                           16550 * ***
                                           16551 * ***
                                           16552 * ***                   rd_free(out);
                                                                                                                           Page  326 
  Active Usings: @REGION_857_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BC0E E330 D120 0024          00000120  16553          STG   3,288(0,13)
0000BC14 4110 D120               00000120  16554          LA    1,288(0,13)
0000BC18 E3F0 C08E 0004          0000B8E0  16555          LG    15,@lit_857_1214 ; rd_free
0000BC1E                                   16556 @@gen_label1325 DS    0H
0000BC1E 05EF                              16557          BALR  14,15
0000BC20                                   16558 @@gen_label1326 DS    0H
                                           16559 * ***
                                           16560 * ***                   do { if (!(((&s)->end - rd_slice_abs_offset(&s\
                                           16561 * )) == 0)) { fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "as\
                                           16562 * sert failed: " "rd_slice_remains(&s) == 0" ": ", "C:\\asgkafka\\libr\
                                           16563 * dkafka\\src\\rdbuf.c", 1832, __FUNCTION__); fprintf(__stderrp, "expe\
                                           16564 * cted no remaining bytes in slice, but got " "%" "zu" " for i=%d", ((\
                                           16565 * &s)->end - rd_slice_abs_offset(&s)), i); fprintf(__stderrp, "\033[0m\
                                           16566 * \n"); if (rd_unittest_assert_on_failure) ((((&s)->end - rd_slice_abs\
                                           16567 * _offset(&s)) == 0) ? (void)0 : __assert(__func__, "C:\\asgkafka\\lib\
                                           16568 * rdkafka\\src\\rdbuf.c", 1832, "((&s)->end - rd_slice_abs_offset(&s))\
                                           16569 *  == 0")); return 1; } } while (0);
0000BC20                                   16570 @L839    DS    0H
0000BC20 E330 D118 0004          00000118  16571          LG    3,280(0,13) ; offset of end in rd_slice_s
0000BC26 41F0 D0F8               000000F8  16572          LA    15,248(0,13)
0000BC2A E3F0 D120 0024          00000120  16573          STG   15,288(0,13)
0000BC30 4110 D120               00000120  16574          LA    1,288(0,13)
0000BC34 E340 C096 0004          0000B8E8  16575          LG    4,@lit_857_1215 ; rd_slice_abs_offset
0000BC3A B904 00F4                         16576          LGR   15,4
0000BC3E                                   16577 @@gen_label1327 DS    0H
0000BC3E 05EF                              16578          BALR  14,15
0000BC40                                   16579 @@gen_label1328 DS    0H
0000BC40 B90B 003F                         16580          SLGR  3,15
0000BC44 B902 0033                         16581          LTGR  3,3
0000BC48 4780 C530               0000BD82  16582          BE    @L842
0000BC4C E330 C086 0016          0000B8D8  16583          LLGF  3,@lit_857_1186 ; __stderrp
0000BC52 E3F3 6000 0004          00000000  16584          LG    15,0(3,6)   ; __stderrp
0000BC58 E3F0 D120 0024          00000120  16585          STG   15,288(0,13)
0000BC5E E350 C07E 0004          0000B8D0  16586          LG    5,@lit_857_1187
0000BC64 41F0 5810               00000810  16587          LA    15,2064(0,5)
0000BC68 E3F0 D128 0024          00000128  16588          STG   15,296(0,13)
0000BC6E E370 C076 0004          0000B8C8  16589          LG    7,@lit_857_1188
0000BC74 41F0 7040               00000040  16590          LA    15,64(0,7)
0000BC78 E3F0 D130 0024          00000130  16591          STG   15,304(0,13)
0000BC7E E548 D138 0728          00000138  16592          MVGHI 312(13),1832
0000BC84 E380 C06E 0004          0000B8C0  16593          LG    8,@lit_857_1189
0000BC8A 41F0 8B50               00000B50  16594          LA    15,2896(0,8)
0000BC8E E3F0 D140 0024          00000140  16595          STG   15,320(0,13)
0000BC94 4110 D120               00000120  16596          LA    1,288(0,13)
0000BC98 E390 C066 0004          0000B8B8  16597          LG    9,@lit_857_1190 ; fprintf
0000BC9E B904 00F9                         16598          LGR   15,9
0000BCA2                                   16599 @@gen_label1330 DS    0H
0000BCA2 05EF                              16600          BALR  14,15
0000BCA4                                   16601 @@gen_label1331 DS    0H
0000BCA4 E3A0 D118 0004          00000118  16602          LG    10,280(0,13) ; offset of end in rd_slice_s
0000BCAA 41F0 D0F8               000000F8  16603          LA    15,248(0,13)
0000BCAE E3F0 D120 0024          00000120  16604          STG   15,288(0,13)
                                                                                                                           Page  327 
  Active Usings: @REGION_857_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BCB4 4110 D120               00000120  16605          LA    1,288(0,13)
0000BCB8 B904 00F4                         16606          LGR   15,4
0000BCBC                                   16607 @@gen_label1332 DS    0H
0000BCBC 05EF                              16608          BALR  14,15
0000BCBE                                   16609 @@gen_label1333 DS    0H
0000BCBE B90B 00AF                         16610          SLGR  10,15
0000BCC2 E3F3 6000 0004          00000000  16611          LG    15,0(3,6)   ; __stderrp
0000BCC8 E3F0 D120 0024          00000120  16612          STG   15,288(0,13)
0000BCCE 41F0 5858               00000858  16613          LA    15,2136(0,5)
0000BCD2 E3F0 D128 0024          00000128  16614          STG   15,296(0,13)
0000BCD8 E3A0 D130 0024          00000130  16615          STG   10,304(0,13)
0000BCDE B914 00F2                         16616          LGFR  15,2
0000BCE2 E3F0 D138 0024          00000138  16617          STG   15,312(0,13)
0000BCE8 4110 D120               00000120  16618          LA    1,288(0,13)
0000BCEC B904 00F9                         16619          LGR   15,9
0000BCF0                                   16620 @@gen_label1334 DS    0H
0000BCF0 05EF                              16621          BALR  14,15
0000BCF2                                   16622 @@gen_label1335 DS    0H
0000BCF2 E3F3 6000 0004          00000000  16623          LG    15,0(3,6)   ; __stderrp
0000BCF8 E3F0 D120 0024          00000120  16624          STG   15,288(0,13)
0000BCFE 41F0 75A4               000005A4  16625          LA    15,1444(0,7)
0000BD02 E3F0 D128 0024          00000128  16626          STG   15,296(0,13)
0000BD08 4110 D120               00000120  16627          LA    1,288(0,13)
0000BD0C B904 00F9                         16628          LGR   15,9
0000BD10                                   16629 @@gen_label1336 DS    0H
0000BD10 05EF                              16630          BALR  14,15
0000BD12                                   16631 @@gen_label1337 DS    0H
0000BD12 E3F0 C08A 0016          0000B8DC  16632          LLGF  15,@lit_857_1195 ; rd_unittest_assert_on_failure
0000BD18 41FF 6000               00000000  16633          LA    15,0(15,6)
0000BD1C 9500 F000      00000000 00000000  16634          CLI   0(15),0
0000BD20 4780 C528               0000BD7A  16635          BE    @L843
0000BD24 E320 D118 0004          00000118  16636          LG    2,280(0,13) ; offset of end in rd_slice_s
0000BD2A 41F0 D0F8               000000F8  16637          LA    15,248(0,13)
0000BD2E E3F0 D120 0024          00000120  16638          STG   15,288(0,13)
0000BD34 4110 D120               00000120  16639          LA    1,288(0,13)
0000BD38 B904 00F4                         16640          LGR   15,4
0000BD3C                                   16641 @@gen_label1339 DS    0H
0000BD3C 05EF                              16642          BALR  14,15
0000BD3E                                   16643 @@gen_label1340 DS    0H
0000BD3E B90B 002F                         16644          SLGR  2,15
0000BD42 B902 0022                         16645          LTGR  2,2
0000BD46 4780 C528               0000BD7A  16646          BE    @L843
0000BD4A                                   16647 @L844    DS    0H
0000BD4A 41F0 8B50               00000B50  16648          LA    15,2896(0,8)
0000BD4E E3F0 D120 0024          00000120  16649          STG   15,288(0,13)
0000BD54 41F0 7040               00000040  16650          LA    15,64(0,7)
0000BD58 E3F0 D128 0024          00000128  16651          STG   15,296(0,13)
0000BD5E E548 D130 0728          00000130  16652          MVGHI 304(13),1832
0000BD64 41F0 5894               00000894  16653          LA    15,2196(0,5)
0000BD68 E3F0 D138 0024          00000138  16654          STG   15,312(0,13)
0000BD6E 4110 D120               00000120  16655          LA    1,288(0,13)
0000BD72 E3F0 C04E 0004          0000B8A0  16656          LG    15,@lit_857_1182 ; __assert
                                                                                                                           Page  328 
  Active Usings: @REGION_857_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BD78                                   16657 @@gen_label1342 DS    0H
0000BD78 05EF                              16658          BALR  14,15
0000BD7A                                   16659 @@gen_label1343 DS    0H
0000BD7A                                   16660 @L845    DS    0H
0000BD7A                                   16661 @L843    DS    0H
0000BD7A A7F9 0001               00000001  16662          LGHI  15,1        ; 1
0000BD7E 47F0 C5B8               0000BE0A  16663          B     @ret_lab_857
0000BD82                                   16664 @L842    DS    0H
                                           16665 * ***
                                           16666 * ***
                                           16667 * ***
                                           16668 * ***
                                           16669 * ***                   rd_buf_destroy(&b);
0000BD82 41F0 D0A8               000000A8  16670          LA    15,168(0,13)
0000BD86 E3F0 D120 0024          00000120  16671          STG   15,288(0,13)
0000BD8C 4110 D120               00000120  16672          LA    1,288(0,13)
0000BD90 E3F0 C09E 0004          0000B8F0  16673          LG    15,@lit_857_1230 ; rd_buf_destroy
0000BD96                                   16674 @@gen_label1344 DS    0H
0000BD96 05EF                              16675          BALR  14,15
0000BD98                                   16676 @@gen_label1345 DS    0H
                                           16677 * ***           }
0000BD98                                   16678 @L779    DS    0H
0000BD98 A72A 0001               00000001  16679          AHI   2,1
0000BD9C                                   16680 @L777    DS    0H
0000BD9C B914 00F2                         16681          LGFR  15,2
0000BDA0 E310 C06E 0004          0000B8C0  16682          LG    1,@lit_857_1189
0000BDA6 A7FD 00A8               000000A8  16683          MGHI  15,168
0000BDAA E3FF 12C0 0002          000002C0  16684          LTG   15,704(15,1) ; offset of expect in 0000028
0000BDB0 4780 C56C               0000BDBE  16685          BZ    *+14  Around region break
0000BDB4 E3C0 C0A6 001B          0000B8F8  16686          SLGF  12,@lit_region_diff_857_2_1
                                           16687          DROP  12
                        0000AF48           16688          USING @REGION_857_1,12
0000BDBA 47F0 C0D0               0000B018  16689          B     @L776
                                           16690          DROP  12
                        0000B852           16691          USING @REGION_857_2,12
                                           16692 * ***
                                           16693 * ***
                                           16694 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                           16695 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdbuf.c", 1841, __FUNCTI\
                                           16696 * ON__); return 0; } while (0);
0000BDBE                                   16697 @L846    DS    0H
0000BDBE E3F0 C086 0016          0000B8D8  16698          LLGF  15,@lit_857_1186 ; __stderrp
0000BDC4 E3FF 6000 0004          00000000  16699          LG    15,0(15,6)  ; __stderrp
0000BDCA E3F0 D120 0024          00000120  16700          STG   15,288(0,13)
0000BDD0 E3F0 C076 0004          0000B8C8  16701          LG    15,@lit_857_1188
0000BDD6 4120 F966               00000966  16702          LA    2,2406(0,15)
0000BDDA E320 D128 0024          00000128  16703          STG   2,296(0,13)
0000BDE0 41F0 F040               00000040  16704          LA    15,64(0,15)
0000BDE4 E3F0 D130 0024          00000130  16705          STG   15,304(0,13)
0000BDEA E548 D138 0731          00000138  16706          MVGHI 312(13),1841
0000BDF0 41F0 1B50               00000B50  16707          LA    15,2896(0,1)
0000BDF4 E3F0 D140 0024          00000140  16708          STG   15,320(0,13)
                                                                                                                           Page  329 
  Active Usings: @REGION_857_2,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BDFA 4110 D120               00000120  16709          LA    1,288(0,13)
0000BDFE E3F0 C066 0004          0000B8B8  16710          LG    15,@lit_857_1190 ; fprintf
0000BE04                                   16711 @@gen_label1347 DS    0H
0000BE04 05EF                              16712          BALR  14,15
0000BE06                                   16713 @@gen_label1348 DS    0H
0000BE06 A7F9 0000               00000000  16714          LGHI  15,0        ; 0
                                           16715 * ***   }
0000BE0A                                   16716 @ret_lab_857 DS 0H
                                           16717 * * **** Start of Epilogue
                                           16718          DCCEPIL
0000BE0A                                   16719+         ds 0h                                                          01-DCCEP
                                           16720+* Epilog
0000BE0A D707 D088 D088 00000088 00000088  16721+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000BE10 E3D0 D080 0004          00000080  16722+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000BE16 E3C0 D090 0004          00000090  16723+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000BE1C E3B0 C018 0004          00000018  16724+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000BE22 E3C0 B010 0021          00000010  16725+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000BE28 E3E0 D008 0004          00000008  16726+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000BE2E EB1C D020 0004          00000020  16727+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000BE34 078E                              16728+         bcr 8,14                if same dsab, just return              01-DCCEP
0000BE36 E3F0 D010 0024          00000010  16729+         stg 15,16(0,13)         save return code                       01-DCCEP
0000BE3C E300 D018 0024          00000018  16730+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000BE42 E3F0 D090 0004          00000090  16731+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000BE48 E3F0 F018 0004          00000018  16732+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000BE4E 47F0 F040               00000040  16733+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           16734+* End of Epilog
                                           16735 * * **** End of Epilogue
                                           16736          DROP  12
                                           16737 *
                                           16738 *   DSECT for automatic variables in "do_unittest_erase"
                                           16739 *      (FUNCTION #857)
                                           16740 *
00000000                00000000 00000120  16741 @AUTO#do_unittest_erase DSECT
00000000                                   16742          DS    XL168
000000A8                                   16743 do_unittest_erase#r2#1 DS 1F ; r2
000000AC                000000AC 000000A8  16744          ORG   @AUTO#do_unittest_erase+168
000000A8                                   16745 do_unittest_erase#r#1 DS 8XL1 ; r
000000B0                000000B0 000000A8  16746          ORG   @AUTO#do_unittest_erase+168
000000A8                                   16747 do_unittest_erase#j#1 DS 1F ; j
000000AC                000000AC 000000A8  16748          ORG   @AUTO#do_unittest_erase+168
000000A8                                   16749 do_unittest_erase#expsz#1 DS 8XL1 ; expsz
000000B0                000000B0 000000A8  16750          ORG   @AUTO#do_unittest_erase+168
000000A8                                   16751 do_unittest_erase#b#1 DS 80XL1 ; b
000000F8                000000F8 000000A8  16752          ORG   @AUTO#do_unittest_erase+168
000000A8                                   16753 do_unittest_erase#i#0 DS 1F ; i
000000AC                000000AC 000000F8  16754          ORG   @AUTO#do_unittest_erase+248
000000F8                                   16755 do_unittest_erase#s#1 DS 40XL1 ; s
                                           16756 *
0000BE52                00000000 0000BFA0  16757 @CODE    CSECT
                                           16758 *
                                           16759 *
                                           16760 *
                                                                                                                           Page  330 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           16761 * ....... start of unittest_rdbuf
                                           16762 unittest_rdbuf ALIAS X'A49589A3A385A2A36D998482A486'
0000BE52                                   16763 @LNAME802 DS   0H
0000BE52 0000000E                          16764          DC    X'0000000E'
0000BE56 A49589A3A385A2A3                  16765          DC    C'unittest_rdbuf'
0000BE64 00                                16766          DC    X'00'
                                           16767 unittest_rdbuf DCCPRLG CINDEX=802,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME802
                                           16768          macro
                                           16769          dccextrn &m
                                           16770          gblc    &$dccext(1000)
                                           16771          gbla    &$dccexti
                                           16772          lcla    &i
                                           16773 &$dccext(&$dccexti+1) setc    '&m'
                                           16774 &i       seta    1
                                           16775 .loop    aif    (&i gt &$dccexti).around
                                           16776          aif    ('&$dccext(&i)' eq '&m').getout
                                           16777 &i       seta    &i+1
                                           16778          ago     .loop
                                           16779 .around  anop
                                           16780 &$dccexti seta &$dccexti+1
                                           16781          extrn  &m
                                           16782 .getout  anop
                                           16783          mend
0000BE68                                   16784+$eye0209    ds    0d                                                    02-DCCCA
0000BE68 C4C3C3                            16785+         dc cl3'DCC'                                                    02-DCCCA
0000BE6B 01                                16786+         dc xl1'01' format one                                          02-DCCCA
0000BE6C 00000000                          16787+         dc a(0)                                                        02-DCCCA
0000BE70 000000000000BEDA                  16788+         dc ad(@PER_802)                                                02-DCCCA
0000BE78 00000000000000B0                  16789+         dc ad(176)                                                     02-DCCCA
0000BE80 0000000000000000                  16790+         dc ad(0)                                                       02-DCCCA
0000BE88 0000000000001000                  16791+         dc ad(4096)                                                    02-DCCCA
0000BE90 20                                16792+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
0000BE91 03                                16793+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000BE92 03                                16794+         dc al1(3)                                                      02-DCCCA
0000BE93 08                                16795+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000BE94 00                                16796+         dc bl.8'00000000'                                              02-DCCCA
0000BE95 000000                            16797+         dc al3(0)                                                      02-DCCCA
0000BE98 000000000000BE52                  16798+         dc ad(@LNAME802)                                               02-DCCCA
0000BEA0                                   16799+         ds 0d                                                          02-DCCCA
0000BEA0 000000000000BE68                  16800+         dc ad($eye0209)                                                02-DCCCA
0000BEA8 0000000000000000                  16801+         dc ad(0)                                                       02-DCCCA
0000BEB0                                   16802+         ds    0d                                                       01-DCCPR
                                           16803+         entry unittest_rdbuf                                           01-DCCPR
0000BEB0                                   16804+unittest_rdbuf ds 0d                                                    01-DCCPR
0000BEB0                                   16805+@REGION_802_1 ds 0h                                                     01-DCCPR
0000BEB0 EBEC D008 0024          00000008  16806+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000BEB6 E3E0 D088 0004          00000088  16807+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000BEBC E3C0 D090 0004          00000090  16808+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000BEC2 B904 002E                         16809+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000BEC6 E3B0 C018 0004          00000018  16810+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000BECC A7EB 00B0               000000B0  16811+         aghi  14,176              increase by frame size               01-DCCPR
                                                                                                                           Page  331 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BED0 E3E0 C020 0021          00000020  16812+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000BED6 4720 B020               00000020  16813+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000BEDA                                   16814+@PER_802 ds    0h                                                       01-DCCPR
0000BEDA EBDE 2080 0024          00000080  16815+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
0000BEE0 E3C0 2090 0024          00000090  16816+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000BEE6 B904 00D2                         16817+         lgr   13,2                set real frame pointer               01-DCCPR
0000BEEA B904 00CF                         16818+         lgr   12,15               set base reg                         01-DCCPR
                        0000BEB0           16819+         using @REGION_802_1,12                                         01-DCCPR
                                           16820 * ******* End of Prologue
                                           16821 * *
                                           16822 * ***           int fails = 0;
0000BEEE A728 0000               00000000  16823          LHI   2,0         ; 0
                                           16824 * ***
                                           16825 * ***           fails += do_unittest_write_read();
0000BEF2 E3F0 C0C8 0004          0000BF78  16826          LG    15,@lit_802_1247 ; do_unittest_write_read
0000BEF8                                   16827 @@gen_label1349 DS    0H
0000BEF8 05EF                              16828          BALR  14,15
0000BEFA                                   16829 @@gen_label1350 DS    0H
0000BEFA 1A2F                              16830          AR    2,15
                                           16831 * ***           fails += do_unittest_write_split_seek();
0000BEFC E3F0 C0D0 0004          0000BF80  16832          LG    15,@lit_802_1248 ; do_unittest_write_split_seek
0000BF02                                   16833 @@gen_label1351 DS    0H
0000BF02 05EF                              16834          BALR  14,15
0000BF04                                   16835 @@gen_label1352 DS    0H
0000BF04 1A2F                              16836          AR    2,15
                                           16837 * ***           fails += do_unittest_write_read_payload_correctness();
0000BF06 E3F0 C0D8 0004          0000BF88  16838          LG    15,@lit_802_1249 ; do_unittest_write_read_payload_correc*
                                                                tness
0000BF0C                                   16839 @@gen_label1353 DS    0H
0000BF0C 05EF                              16840          BALR  14,15
0000BF0E                                   16841 @@gen_label1354 DS    0H
0000BF0E 1A2F                              16842          AR    2,15
                                           16843 * ***           fails += do_unittest_write_iov();
0000BF10 E3F0 C0E0 0004          0000BF90  16844          LG    15,@lit_802_1250 ; do_unittest_write_iov
0000BF16                                   16845 @@gen_label1355 DS    0H
0000BF16 05EF                              16846          BALR  14,15
0000BF18                                   16847 @@gen_label1356 DS    0H
0000BF18 1A2F                              16848          AR    2,15
                                           16849 * ***           fails += do_unittest_erase();
0000BF1A E3F0 C0E8 0004          0000BF98  16850          LG    15,@lit_802_1251 ; do_unittest_erase
0000BF20                                   16851 @@gen_label1357 DS    0H
0000BF20 05EF                              16852          BALR  14,15
0000BF22                                   16853 @@gen_label1358 DS    0H
0000BF22 1A2F                              16854          AR    2,15
                                           16855 * ***
                                           16856 * ***           return fails;
0000BF24 B914 00F2                         16857          LGFR  15,2
                                           16858 * ***   }
                                           16859 * * **** Start of Epilogue
                                           16860          DCCEPIL
0000BF28                                   16861+         ds 0h                                                          01-DCCEP
                                           16862+* Epilog
                                                                                                                           Page  332 
  Active Usings: @REGION_802_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BF28 D707 D088 D088 00000088 00000088  16863+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000BF2E E3D0 D080 0004          00000080  16864+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000BF34 E3C0 D090 0004          00000090  16865+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000BF3A E3B0 C018 0004          00000018  16866+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000BF40 E3C0 B010 0021          00000010  16867+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000BF46 E3E0 D008 0004          00000008  16868+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000BF4C EB1C D020 0004          00000020  16869+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000BF52 078E                              16870+         bcr 8,14                if same dsab, just return              01-DCCEP
0000BF54 E3F0 D010 0024          00000010  16871+         stg 15,16(0,13)         save return code                       01-DCCEP
0000BF5A E300 D018 0024          00000018  16872+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000BF60 E3F0 D090 0004          00000090  16873+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000BF66 E3F0 F018 0004          00000018  16874+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000BF6C 47F0 F040               00000040  16875+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                           16876+* End of Epilog
                                           16877 * * **** End of Epilogue
0000BF70                                   16878          DS    0D
0000BF70 000000B0                          16879 @FRAMESIZE_802 DC F'176'
0000BF74 00000000
0000BF78 0000000000005A30                  16880 @lit_802_1247 DC AD(do_unittest_write_read)
0000BF80 0000000000007D80                  16881 @lit_802_1248 DC AD(do_unittest_write_split_seek)
0000BF88 0000000000009730                  16882 @lit_802_1249 DC AD(do_unittest_write_read_payload_correctness)
0000BF90 000000000000AB08                  16883 @lit_802_1250 DC AD(do_unittest_write_iov)
0000BF98 000000000000AF48                  16884 @lit_802_1251 DC AD(do_unittest_erase)
                                           16885          DROP  12
                                           16886 *
                                           16887 *   DSECT for automatic variables in "unittest_rdbuf"
                                           16888 *      (FUNCTION #802)
                                           16889 *
00000000                00000000 000000AC  16890 @AUTO#unittest_rdbuf DSECT
00000000                                   16891          DS    XL168
000000A8                                   16892 unittest_rdbuf#fails#0 DS 1F ; fails
                                           16893 *
0000BFA0                00000000 0000BFA0  16894 @CODE    CSECT
                                           16895 @@STATIC ALIAS X'7C998482A48650'
                                           16896 @@STATIC DXD   64D
                                           16897 *
                                           16898 *  Non-Re-Entrant Data Section
                                           16899 *
0000BFA0                0000BFA0 00002480  16900 @DATA    CSECT
                                           16901 @DATA    RMODE ANY
                                           16902 @DATA    AMODE ANY
0000BFA0 99846D8381939396                  16903 @@T349   DC    X'99846D838193939683'               rd.calloc
0000BFA9 00                                16904          DC    1X'00'
0000BFAA 99846D9481939396                  16905 @@T34D   DC    X'99846D948193939683'               rd.malloc
0000BFB3 00                                16906          DC    1X'00'
0000BFB4 99846D9985819393                  16907 @@T352   DC    X'99846D99858193939683'             rd.realloc
0000BFBE 0000                              16908          DC    2X'00'
0000BFC0 99846DA2A39984A4                  16909 @@T358   DC    X'99846DA2A39984A497'               rd.strdup
0000BFC9 00                                16910          DC    1X'00'
0000BFCA 99846DA2A3999584                  16911 @@T35D   DC    X'99846DA2A3999584A497'             rd.strndup
0000BFD4 0000                              16912          DC    2X'00'
0000BFD6 99846D9985868395                  16913 @@T365   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
                                                                                                                           Page  333 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000BFE4 0000                              16914          DC    2X'00'
0000BFE6 99846D82A4866D81                  16915 @@T3E5   DC    X'99846D82A4866D81939396836DA28587' rd.buf.alloc.seg
0000BFF6 948595A3F0                        16916          DC    X'948595A3F0'                       ment0
0000BFFB 00                                16917          DC    1X'00'
0000BFFC 99846DA285879485                  16918 @@T403   DC    X'99846DA28587948595A36DA2979389A3' rd.segment.split
0000C00C 0000                              16919          DC    2X'00'
0000C00E 99846D82A4866D84                  16920 @@T407   DC    X'99846D82A4866D8485A2A39996A86DA2' rd.buf.destroy.s
0000C01E 8587948595A3                      16921          DC    X'8587948595A3'                     egment
0000C024 0000                              16922          DC    2X'00'
0000C026 99846D82A4866D89                  16923 @@T40F   DC    X'99846D82A4866D899589A3'           rd.buf.init
0000C031 00                                16924          DC    1X'00'
0000C032 99846D82A4866DA6                  16925 @@T423   DC    X'99846D82A4866DA69989A385'         rd.buf.write
0000C03E 0000                              16926          DC    2X'00'
0000C040 99846DA285879485                  16927 @@T431   DC    X'99846DA28587948595A36DA69989A385' rd.segment.write
0000C050 6DA4978481A385                    16928          DC    X'6DA4978481A385'                   .update
0000C057 00                                16929          DC    1X'00'
0000C058 99846D82A4866DA6                  16930 @@T43A   DC    X'99846D82A4866DA69989A3856DA49784' rd.buf.write.upd
0000C068 81A385                            16931          DC    X'81A385'                           ate
0000C06B 00                                16932          DC    1X'00'
0000C06C 99846D82A4866D85                  16933 @@T44F   DC    X'99846D82A4866D859981A285'         rd.buf.erase
0000C078 0000                              16934          DC    2X'00'
0000C07A 99846D82A4866DA6                  16935 @@T456   DC    X'99846D82A4866DA69989A3856DA28585' rd.buf.write.see
0000C08A 92                                16936          DC    X'92'                               k
0000C08B 00                                16937          DC    1X'00'
0000C08C 99846DA293898385                  16938 @@T466   DC    X'99846DA2938983856D899589A36DA285' rd.slice.init.se
0000C09C 87                                16939          DC    X'87'                               g
0000C09D 00                                16940          DC    1X'00'
0000C09E 99846DA293898385                  16941 @@T46F   DC    X'99846DA2938983856D899589A36D86A4' rd.slice.init.fu
0000C0AE 9393                              16942          DC    X'9393'                             ll
0000C0B0 0000                              16943          DC    2X'00'
0000C0B2 99846DA293898385                  16944 @@T478   DC    X'99846DA2938983856D998581848599F0' rd.slice.reader0
0000C0C2 0000                              16945          DC    2X'00'
0000C0C4 99846DA293898385                  16946 @@T498   DC    X'99846DA2938983856DA2858592'       rd.slice.seek
0000C0D1 00                                16947          DC    1X'00'
0000C0D2 99846DA293898385                  16948 @@T49C   DC    X'99846DA2938983856D9581999996A6'   rd.slice.narrow
0000C0E1 00                                16949          DC    1X'00'
0000C0E2 99846DA293898385                  16950 @@T4A5   DC    X'99846DA2938983856D9581999996A66D' rd.slice.narrow.
0000C0F2 839697A8                          16951          DC    X'839697A8'                         copy
0000C0F6 0000                              16952          DC    2X'00'
0000C0F8 99846DA285879485                  16953 @@T4C0   DC    X'99846DA28587948595A36D84A49497'   rd.segment.dump
0000C107 00                                16954          DC    1X'00'
0000C108 99846D82A4866D84                  16955 @@T4C5   DC    X'99846D82A4866D84A49497'           rd.buf.dump
0000C113 00                                16956          DC    1X'00'
0000C114 84966DA49589A3A3                  16957 @@T4D5   DC    X'84966DA49589A3A385A2A36DA69989A3' do.unittest.writ
0000C124 856D99858184                      16958          DC    X'856D99858184'                     e.read
0000C12A 0000                              16959          DC    2X'00'
0000C12C 84966DA49589A3A3                  16960 @@T4E1   DC    X'84966DA49589A3A385A2A36D99858184' do.unittest.read
0000C13C 6DA585998986A8F0                  16961          DC    X'6DA585998986A8F0'                 .verify0
0000C144 0000                              16962          DC    2X'00'
0000C146 84966DA49589A3A3                  16963 @@T4EE   DC    X'84966DA49589A3A385A2A36DA69989A3' do.unittest.writ
0000C156 856DA2979389A36D                  16964          DC    X'856DA2979389A36DA2858592'         e.split.seek
0000C162 0000                              16965          DC    2X'00'
                                                                                                                           Page  334 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C164 84966DA49589A3A3                  16966 @@T500   DC    X'84966DA49589A3A385A2A36DA69989A3' do.unittest.writ
0000C174 856D998581846D97                  16967          DC    X'856D998581846D9781A8939681846D83' e.read.payload.c
0000C184 9699998583A39585                  16968          DC    X'9699998583A39585A2A2'             orrectness
0000C18E 0000                              16969          DC    2X'00'
0000C190 84966DA49589A3A3                  16970 @@T50D   DC    X'84966DA49589A3A385A2A36D8996A56D' do.unittest.iov.
0000C1A0 A585998986A8F0                    16971          DC    X'A585998986A8F0'                   verify0
0000C1A7 00                                16972          DC    1X'00'
0000C1A8 84966DA49589A3A3                  16973 @@T511   DC    X'84966DA49589A3A385A2A36DA69989A3' do.unittest.writ
0000C1B8 856D8996A5                        16974          DC    X'856D8996A5'                       e.iov
0000C1BD 000000                            16975          DC    3X'00'
0000C1C0 000000000000E3C2                  16976 @@T514   DC    ADL8(@strings@+6336)
0000C1C8 000000000000E3C6                  16977          DC    ADL8(@strings@+6340)
0000C1D0 000000000000E3C8                  16978          DC    ADL8(@strings@+6342)
0000C1D8 0000000000000000                  16979          DC    44X'00'
0000C204 0000000100000000                  16980          DC    X'00000001000000000000000400000000' ................
0000C214 00000004                          16981          DC    X'00000004'                         ....
0000C218 0000000000000000                  16982          DC    72X'00'
0000C260 000000000000E3CC                  16983          DC    ADL8(@strings@+6346)
0000C268 000000000000E3C2                  16984          DC    ADL8(@strings@+6336)
0000C270 000000000000E3C6                  16985          DC    ADL8(@strings@+6340)
0000C278 000000000000E3C8                  16986          DC    ADL8(@strings@+6342)
0000C280 0000000000000000                  16987          DC    52X'00'
0000C2B4 0000000200000000                  16988          DC    X'000000020000000000000002'         ............
0000C2C0 0000000000000000                  16989          DC    72X'00'
0000C308 000000000000E3CE                  16990          DC    ADL8(@strings@+6348)
0000C310 000000000000E3C2                  16991          DC    ADL8(@strings@+6336)
0000C318 000000000000E3C6                  16992          DC    ADL8(@strings@+6340)
0000C320 000000000000E3C8                  16993          DC    ADL8(@strings@+6342)
0000C328 0000000000000000                  16994          DC    44X'00'
0000C354 0000000300000000                  16995          DC    X'00000003000000000000000200000000' ................
0000C364 00000002                          16996          DC    X'00000002'                         ....
0000C368 0000000000000000                  16997          DC    72X'00'
0000C3B0 000000000000E3D2                  16998          DC    ADL8(@strings@+6352)
0000C3B8 000000000000E3C2                  16999          DC    ADL8(@strings@+6336)
0000C3C0 000000000000E3C6                  17000          DC    ADL8(@strings@+6340)
0000C3C8 000000000000E3C8                  17001          DC    ADL8(@strings@+6342)
0000C3D0 0000000000000000                  17002          DC    44X'00'
0000C3FC 0000000100000000                  17003          DC    X'00000001000000000000000100000000' ................
0000C40C 0000000100000000                  17004          DC    X'00000001000000000000000100000000' ................
0000C41C 0000000100000000                  17005          DC    X'00000001000000000000000100000000' ................
0000C42C 0000000200000000                  17006          DC    X'00000002000000000000000100000000' ................
0000C43C 00000001                          17007          DC    X'00000001'                         ....
0000C440 0000000000000000                  17008          DC    24X'00'
0000C458 000000000000E3D6                  17009          DC    ADL8(@strings@+6356)
0000C460 000000000000E3C2                  17010          DC    ADL8(@strings@+6336)
0000C468 000000000000E3C6                  17011          DC    ADL8(@strings@+6340)
0000C470 000000000000E3C8                  17012          DC    ADL8(@strings@+6342)
0000C478 0000000000000000                  17013          DC    52X'00'
0000C4AC 0000000500000000                  17014          DC    X'000000050000000000000005'         ............
0000C4B8 0000000000000000                  17015          DC    72X'00'
0000C500 000000000000E3DA                  17016          DC    ADL8(@strings@+6360)
0000C508 000000000000E3C2                  17017          DC    ADL8(@strings@+6336)
                                                                                                                           Page  335 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C510 000000000000E3C6                  17018          DC    ADL8(@strings@+6340)
0000C518 000000000000E3C8                  17019          DC    ADL8(@strings@+6342)
0000C520 0000000000000000                  17020          DC    52X'00'
0000C554 0000000100000000                  17021          DC    X'000000010000000000000001'         ............
0000C560 0000000000000000                  17022          DC    72X'00'
0000C5A8 000000000000E3DC                  17023          DC    ADL8(@strings@+6362)
0000C5B0 000000000000E3C2                  17024          DC    ADL8(@strings@+6336)
0000C5B8 000000000000E3C6                  17025          DC    ADL8(@strings@+6340)
0000C5C0 000000000000E3C8                  17026          DC    ADL8(@strings@+6342)
0000C5C8 0000000000000000                  17027          DC    44X'00'
0000C5F4 0000000400000000                  17028          DC    X'00000004000000000000000100000000' ................
0000C604 00000001                          17029          DC    X'00000001'                         ....
0000C608 0000000000000000                  17030          DC    72X'00'
0000C650 000000000000E3E2                  17031          DC    ADL8(@strings@+6368)
0000C658 000000000000E3C2                  17032          DC    ADL8(@strings@+6336)
0000C660 000000000000E3C6                  17033          DC    ADL8(@strings@+6340)
0000C668 000000000000E3C8                  17034          DC    ADL8(@strings@+6342)
0000C670 0000000000000000                  17035          DC    44X'00'
0000C69C 0000000500000000                  17036          DC    X'00000005000000000000000A'         ............
0000C6A8 0000000000000000                  17037          DC    80X'00'
0000C6F8 000000000000E3E8                  17038          DC    ADL8(@strings@+6374)
0000C700 000000000000E3C2                  17039          DC    ADL8(@strings@+6336)
0000C708 000000000000E3C6                  17040          DC    ADL8(@strings@+6340)
0000C710 000000000000E3C8                  17041          DC    ADL8(@strings@+6342)
0000C718 0000000000000000                  17042          DC    44X'00'
0000C744 0000000400000000                  17043          DC    X'00000004000000000000000300000000' ................
0000C754 0000000100000000                  17044          DC    X'00000001000000000000000400000000' ................
0000C764 00000003                          17045          DC    X'00000003'                         ....
0000C768 0000000000000000                  17046          DC    12X'00'
0000C774 0000000400000000                  17047          DC    X'000000040000000000000003'         ............
0000C780 0000000000000000                  17048          DC    32X'00'
0000C7A0 000000000000E3E2                  17049          DC    ADL8(@strings@+6368)
0000C7A8 000000000000E3CC                  17050          DC    ADL8(@strings@+6346)
0000C7B0 0000000000000000                  17051          DC    68X'00'
0000C7F4 0000000300000000                  17052          DC    X'000000030000000000000001'         ............
0000C800 0000000000000000                  17053          DC    72X'00'
0000C848 000000000000E3DA                  17054          DC    ADL8(@strings@+6360)
0000C850 000000000000E3EE                  17055          DC    ADL8(@strings@+6380)
0000C858 0000000000000000                  17056          DC    68X'00'
0000C89C 0000000600000000                  17057          DC    X'000000060000000000000006'         ............
0000C8A8 0000000000000000                  17058          DC    72X'00'
0000C8F0 000000000000E3DA                  17059          DC    ADL8(@strings@+6360)
0000C8F8 000000000000E3F6                  17060          DC    ADL8(@strings@+6388)
0000C900 0000000000000000                  17061          DC    60X'00'
0000C93C 0000000400000000                  17062          DC    X'00000004000000000000000300000000' ................
0000C94C 00000003                          17063          DC    X'00000003'                         ....
0000C950 0000000000000000                  17064          DC    72X'00'
0000C998 000000000000E402                  17065          DC    ADL8(@strings@+6400)
0000C9A0 000000000000E3E2                  17066          DC    ADL8(@strings@+6368)
0000C9A8 000000000000E40A                  17067          DC    ADL8(@strings@+6408)
0000C9B0 0000000000000000                  17068          DC    16X'00'
0000C9C0 000000000000E410                  17069          DC    ADL8(@strings@+6414)
                                                                                                                           Page  336 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000C9C8 0000000000000000                  17070          DC    28X'00'
0000C9E4 0000000300000000                  17071          DC    X'00000003000000000000000300000000' ................
0000C9F4 00000003                          17072          DC    X'00000003'                         ....
0000C9F8 0000000000000000                  17073          DC    72X'00'
0000CA40 000000000000E416                  17074          DC    ADL8(@strings@+6420)
0000CA48 0000000000000000                  17075          DC    168X'00'
0000CAF0 84966DA49589A3A3                  17076 @@T51D   DC    X'84966DA49589A3A385A2A36D859981A2' do.unittest.eras
0000CB00 85                                17077          DC    X'85'                               e
0000CB01 00                                17078          DC    1X'00'
0000CB02                                   17079 @strings@ DS   0H
0000CB02 C37AE081A2879281                  17080          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
0000CB12 849281869281E0A2                  17081          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
0000CB22 97009500A2858794                  17082          DC    X'97009500A28587948595A34081939396' p.n.segment.allo
0000CB32 8381A38996954086                  17083          DC    X'8381A38996954086818993A499850000' cation.failure..
0000CB42 C37AE081A2879281                  17084          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
0000CB52 849281869281E0A2                  17085          DC    X'849281869281E0A29983E0998482A486' dkafka.src.rdbuf
0000CB62 4B8300005A5C7FA2                  17086          DC    X'4B8300005A5C7FA28587948595A34081' .c.....segment.a
0000CB72 9393968381A38996                  17087          DC    X'9393968381A38996954086818993A499' llocation.failur
0000CB82 857F0000A2858740                  17088          DC    X'857F0000A28587407E7E409982A48660' e...seg....rbuf.
0000CB92 6E9982A4866DA697                  17089          DC    X'6E9982A4866DA69796A200008182A296' .rbuf.wpos..abso
0000CBA2 86406E7E40A28587                  17090          DC    X'86406E7E40A28587606EA285876D8182' f....seg..seg.ab
0000CBB2 A296864050504081                  17091          DC    X'A29686405050408182A29686404C7E40' sof....absof....
0000CBC2 A28587606EA28587                  17092          DC    X'A28587606EA285876D8182A29686404E' seg..seg.absof..
0000CBD2 40A28587606EA285                  17093          DC    X'40A28587606EA285876D968600009982' .seg..seg.of..rb
0000CBE2 A486606E9982A486                  17094          DC    X'A486606E9982A4866DA28587948595A3' uf..rbuf.segment
0000CBF2 6D8395A3406E40F0                  17095          DC    X'6D8395A3406E40F0405050409982A486' .cnt...0....rbuf
0000CC02 606E9982A4866D93                  17096          DC    X'606E9982A4866D938595406E7E40A285' ..rbuf.len....se
0000CC12 87606EA285876D96                  17097          DC    X'87606EA285876D9686405050409982A4' g..seg.of....rbu
0000CC22 86606E9982A4866D                  17098          DC    X'86606E9982A4866DA289A985406E7E40' f..rbuf.size....
0000CC32 A28587606EA28587                  17099          DC    X'A28587606EA285876DA289A985005A82' seg..seg.size..b
0000CC42 A4866DA289A98500                  17100          DC    X'A4866DA289A98500998594818995A240' uf.size.remains.
0000CC52 7E7E40F000009985                  17101          DC    X'7E7E40F000009985939686404C7E40A2' ...0..relof....s
0000CC62 8587606EA285876D                  17102          DC    X'8587606EA285876D968600008995A581' eg..seg.of..inva
0000CC72 938984408182A296                  17103          DC    X'938984408182A29693A4A38540968686' lid.absolute.off
0000CC82 A285A300A2858740                  17104          DC    X'A285A300A28587405050405C7F8995A5' set.seg......inv
0000CC92 81938984408182A2                  17105          DC    X'81938984408182A29693A4A385409686' alid.absolute.of
0000CCA2 86A285A37F00A285                  17106          DC    X'86A285A37F00A28587606EA285876D81' fset..seg..seg.a
0000CCB2 82A29686404C7E40                  17107          DC    X'82A29686404C7E4099846D82A4866D93' bsof....rd.buf.l
0000CCC2 85954D9982A4865D                  17108          DC    X'85954D9982A4865D0000C9D5E3C5D9D5' en.rbuf...INTERN
0000CCD2 C1D340C5D9D9D6D9                  17109          DC    X'C1D340C5D9D9D6D97A40938982998492' AL.ERROR..librdk
0000CCE2 81869281406CA27A                  17110          DC    X'81869281406CA27A6C847A4000009984' afka..s..d....rd
0000CCF2 6D82A4866D859981                  17111          DC    X'6D82A4866D859981A2854D5D40838193' .buf.erase...cal
0000CD02 9385844096954099                  17112          DC    X'938584409695409985818460969593A8' led.on.read.only
0000CD12 40A28587948595A3                  17113          DC    X'40A28587948595A300001500C9D5E3C5' .segment....INTE
0000CD22 D9D5C1D340C5D9D9                  17114          DC    X'D9D5C1D340C5D9D9D6D940C9D540D3C9' RNAL.ERROR.IN.LI
0000CD32 C2D9C4D2C1C6D2C1                  17115          DC    X'C2D9C4D2C1C6D2C100005A5C7FC9D5E3' BRDKAFKA.....INT
0000CD42 C5D9D5C1D340C5D9                  17116          DC    X'C5D9D5C1D340C5D9D9D6D940C9D540D3' ERNAL.ERROR.IN.L
0000CD52 C9C2D9C4D2C1C6D2                  17117          DC    X'C9C2D9C4D2C1C6D2C17F0000A2858760' IBRDKAFKA...seg.
0000CD62 6EA285876D8182A2                  17118          DC    X'6EA285876D8182A29686406E7E409686' .seg.absof....of
0000CD72 00009982A486606E                  17119          DC    X'00009982A486606E9982A4866D938595' ..rbuf..rbuf.len
0000CD82 407E7E408182A296                  17120          DC    X'407E7E408182A2968600A28587606EA2' ....absof.seg..s
0000CD92 85876D8182A29686                  17121          DC    X'85876D8182A296864E999686406E7E40' eg.absof.rof....
                                                                                                                           Page  337 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000CDA2 A293898385606EA2                  17122          DC    X'A293898385606EA2A38199A340505040' slice..start....
0000CDB2 A28587606EA28587                  17123          DC    X'A28587606EA285876D8182A296864E99' seg..seg.absof.r
0000CDC2 9686404C7E40A293                  17124          DC    X'9686404C7E40A293898385606E859584' of....slice..end
0000CDD2 0000A29389838560                  17125          DC    X'0000A293898385606E859584404C7E40' ..slice..end....
0000CDE2 99846D82A4866D93                  17126          DC    X'99846D82A4866D9385954D9982A4865D' rd.buf.len.rbuf.
0000CDF2 000099407E7E40F0                  17127          DC    X'000099407E7E40F00000A28587606EA2' ..r....0..seg..s
0000CE02 85876D8182A29686                  17128          DC    X'85876D8182A29686404E40999686406E' eg.absof...rof..
0000CE12 7E40A29389838560                  17129          DC    X'7E40A293898385606EA2A38199A34050' ..slice..start..
0000CE22 5040A28587606EA2                  17130          DC    X'5040A28587606EA285876D8182A29686' ..seg..seg.absof
0000CE32 404E409996864E99                  17131          DC    X'404E409996864E99938595404C7E40A2' ...rof.rlen....s
0000CE42 93898385606E8595                  17132          DC    X'93898385606E85958400A2858700A285' lice..end.seg.se
0000CE52 87606EA285876D81                  17133          DC    X'87606EA285876D8182A29686404E40A2' g..seg.absof...s
0000CE62 93898385606E9996                  17134          DC    X'93898385606E999686406E7E40A29389' lice..rof....sli
0000CE72 8385606EA2A38199                  17135          DC    X'8385606EA2A38199A340505040A28587' ce..start....seg
0000CE82 606EA285876D8182                  17136          DC    X'606EA285876D8182A29686404E40A293' ..seg.absof...sl
0000CE92 898385606E999686                  17137          DC    X'898385606E999686404C7E40A2938983' ice..rof....slic
0000CEA2 85606E8595840000                  17138          DC    X'85606E859584000099846DA293898385' e..end..rd.slice
0000CEB2 6D8182A26D968686                  17139          DC    X'6D8182A26D968686A285A34DA2938983' .abs.offset.slic
0000CEC2 855D404C7E40A293                  17140          DC    X'855D404C7E40A293898385606E859584' e.....slice..end
0000CED2 000099846DA29389                  17141          DC    X'000099846DA2938983856D8182A26D96' ..rd.slice.abs.o
0000CEE2 8686A285A34D9585                  17142          DC    X'8686A285A34D9585A66DA2938983855D' ffset.new.slice.
0000CEF2 404C7E409585A66D                  17143          DC    X'404C7E409585A66DA293898385606E85' ....new.slice..e
0000CF02 958400006CA24D4D                  17144          DC    X'958400006CA24D4D99846DA285879485' nd...s..rd.segme
0000CF12 95A36DA3405C5D6C                  17145          DC    X'95A36DA3405C5D6C975D7A4097406C97' nt.t....p...p..p
0000CF22 6B409686406CA9A4                  17146          DC    X'6B409686406CA9A46B408182A2968640' ..of..zu..absof.
0000CF32 6CA9A46B40A289A9                  17147          DC    X'6CA9A46B40A289A985406CA9A46B4086' .zu..size..zu..f
0000CF42 998585406C976B40                  17148          DC    X'998585406C976B4086938187A240F0A7' ree..p..flags.0x
0000CF52 6CA71500A2858794                  17149          DC    X'6CA71500A28587948595A3004D4D9984' .x..segment...rd
0000CF62 6D82A4866DA3405C                  17150          DC    X'6D82A4866DA3405C5D6C975D7A154093' .buf.t....p....l
0000CF72 8595406CA9A440A2                  17151          DC    X'8595406CA9A440A289A985406CA9A46B' en..zu.size..zu.
0000CF82 406CA9A4616CA9A4                  17152          DC    X'406CA9A4616CA9A44085A7A399814094' ..zu..zu.extra.m
0000CF92 85949699A840A4A2                  17153          DC    X'85949699A840A4A28584150040A69796' emory.used...wpo
0000CFA2 A27A150040400000                  17154          DC    X'A27A150040400000406CA9A440938995' s.........zu.lin
0000CFB2 92858440A2858794                  17155          DC    X'92858440A28587948595A3A27A150000' ked.segments....
0000CFC2 A285878395A3404C                  17156          DC    X'A285878395A3404C7E409982A486606E' segcnt....rbuf..
0000CFD2 9982A4866DA28587                  17157          DC    X'9982A4866DA28587948595A36D8395A3' rbuf.segment.cnt
0000CFE2 00004D4D99846DA2                  17158          DC    X'00004D4D99846DA2938983856DA3405C' ....rd.slice.t..
0000CFF2 5D6C975D7A154040                  17159          DC    X'5D6C975D7A15404082A486406C97404D' ..p.....buf..p..
0000D002 938595406CA9A45D                  17160          DC    X'938595406CA9A45D6B40A28587406C97' len..zu...seg..p
0000D012 404D8182A2968640                  17161          DC    X'404D8182A29686406CA9A45D6B409996' ..absof..zu...ro
0000D022 86406CA9A46B40A2                  17162          DC    X'86406CA9A46B40A2A38199A3406CA9A4' f..zu..start..zu
0000D032 6B40859584406CA9                  17163          DC    X'6B40859584406CA9A46B40A289A98540' ..end..zu..size.
0000D042 6CA9A46B40968686                  17164          DC    X'6CA9A46B40968686A285A3406CA9A415' .zu..offset..zu.
0000D052 00001BADF3F194D9                  17165          DC    X'00001BADF3F194D9C4E4E37A40C6C1C9' ....31mRDUT..FAI
0000D062 D37A406CA27A6C84                  17166          DC    X'D37A406CA27A6C847A406CA27A4081A2' L...s..d...s..as
0000D072 A28599A340868189                  17167          DC    X'A28599A3408681899385847A4099407E' sert.failed..r..
0000D082 7E40F07A4000A699                  17168          DC    X'7E40F07A4000A69989A3854D5D409985' ..0...write...re
0000D092 A3A4999585844097                  17169          DC    X'A3A499958584409796A289A389969540' turned.position.
0000D0A2 6CA9A4001BADF094                  17170          DC    X'6CA9A4001BADF09415001BADF3F194D9' .zu...0m....31mR
0000D0B2 C4E4E37A40C6C1C9                  17171          DC    X'C4E4E37A40C6C1C9D37A406CA27A6C84' DUT..FAIL...s..d
0000D0C2 7A406CA27A4081A2                  17172          DC    X'7A406CA27A4081A2A28599A340868189' ...s..assert.fai
0000D0D2 9385847A409796A2                  17173          DC    X'9385847A409796A2407E7E40F2F0F07A' led..pos....200.
                                                                                                                           Page  338 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D0E2 40009796A24D5D40                  17174          DC    X'40009796A24D5D409985A3A499958584' ..pos...returned
0000D0F2 409796A289A38996                  17175          DC    X'409796A289A3899695406CA9A4009796' .position..zu.po
0000D102 A2407E7E40F2F0F0                  17176          DC    X'A2407E7E40F2F0F000001BADF3F194D9' s....200....31mR
0000D112 C4E4E37A40C6C1C9                  17177          DC    X'C4E4E37A40C6C1C9D37A406CA27A6C84' DUT..FAIL...s..d
0000D122 7A406CA27A4081A2                  17178          DC    X'7A406CA27A4081A2A28599A340868189' ...s..assert.fai
0000D132 9385847A4099407E                  17179          DC    X'9385847A4099407E7E40F2F0F07A4000' led..r....200...
0000D142 99407E7E40F2F0F0                  17180          DC    X'99407E7E40F2F0F000001BADF3F194D9' r....200....31mR
0000D152 C4E4E37A40C6C1C9                  17181          DC    X'C4E4E37A40C6C1C9D37A406CA27A6C84' DUT..FAIL...s..d
0000D162 7A406CA27A4081A2                  17182          DC    X'7A406CA27A4081A2A28599A340868189' ...s..assert.fai
0000D172 9385847A409796A2                  17183          DC    X'9385847A409796A2407E7E40F2F0F04E' led..pos....200.
0000D182 F8F0F07A40009796                  17184          DC    X'F8F0F07A40009796A2407E7E40F2F0F0' 800...pos....200
0000D192 4EF8F0F000001BAD                  17185          DC    X'4EF8F0F000001BADF3F194D9C4E4E37A' .800....31mRDUT.
0000D1A2 40C6C1C9D37A406C                  17186          DC    X'40C6C1C9D37A406CA27A6C847A406CA2' .FAIL...s..d...s
0000D1B2 7A4081A2A28599A3                  17187          DC    X'7A4081A2A28599A3408681899385847A' ..assert.failed.
0000D1C2 409796A2407E7E40                  17188          DC    X'409796A2407E7E40F2F0F04EF8F0F04E' .pos....200.800.
0000D1D2 F17A40009796A240                  17189          DC    X'F17A40009796A2407E7E40F2F0F04EF8' 1...pos....200.8
0000D1E2 F0F04EF100009985                  17190          DC    X'F0F04EF10000998581844D5D406E4099' 00.1..read.....r
0000D1F2 8594818995899587                  17191          DC    X'859481899589958740A28896A4938440' emaining.should.
0000D202 8881A58540868189                  17192          DC    X'8881A585408681899385846B408781A5' have.failed..gav
0000D212 85406CA9A4001BAD                  17193          DC    X'85406CA9A4001BADF3F194D9C4E4E37A' e..zu...31mRDUT.
0000D222 40C6C1C9D37A406C                  17194          DC    X'40C6C1C9D37A406CA27A6C847A406CA2' .FAIL...s..d...s
0000D232 7A4081A2A28599A3                  17195          DC    X'7A4081A2A28599A3408681899385847A' ..assert.failed.
0000D242 4099407E7E40F2F0                  17196          DC    X'4099407E7E40F2F0F04EF8F0F04EF17A' .r....200.800.1.
0000D252 4000998581844D5D                  17197          DC    X'4000998581844D5D409985A3A4999585' ..read...returne
0000D262 84406CA9A4404D6C                  17198          DC    X'84406CA9A4404D6CA9A4409985948189' d..zu...zu.remai
0000D272 95A25D0099407E7E                  17199          DC    X'95A25D0099407E7E40F2F0F04EF8F0F0' ns..r....200.800
0000D282 4EF100001BADF3F1                  17200          DC    X'4EF100001BADF3F194D9C4E4E37A40C6' .1....31mRDUT..F
0000D292 C1C9D37A406CA27A                  17201          DC    X'C1C9D37A406CA27A6C847A406CA27A40' AIL...s..d...s..
0000D2A2 81A2A28599A34086                  17202          DC    X'81A2A28599A3408681899385847A405A' assert.failed...
0000D2B2 9485948394974D82                  17203          DC    X'9485948394974D82A4866B40969585A2' memcmp.buf..ones
0000D2C2 6B40F2F0F05D7A40                  17204          DC    X'6B40F2F0F05D7A400000A585998986A8' ..200.....verify
0000D2D2 40969585A2005A6D                  17205          DC    X'40969585A2005A6D6D9485948394974D' .ones....memcmp.
0000D2E2 82A4866B969585A2                  17206          DC    X'82A4866B969585A26BF2F0F05D001BAD' buf.ones.200....
0000D2F2 F3F194D9C4E4E37A                  17207          DC    X'F3F194D9C4E4E37A40C6C1C9D37A406C' 31mRDUT..FAIL...
0000D302 A27A6C847A406CA2                  17208          DC    X'A27A6C847A406CA27A4081A2A28599A3' s..d...s..assert
0000D312 408681899385847A                  17209          DC    X'408681899385847A405A948594839497' .failed...memcmp
0000D322 4D82A4864EF2F0F0                  17210          DC    X'4D82A4864EF2F0F06B40A3A696A26B40' .buf.200..twos..
0000D332 F8F0F05D7A400000                  17211          DC    X'F8F0F05D7A400000A585998986A840A3' 800.....verify.t
0000D342 A696A2005A6D6D94                  17212          DC    X'A696A2005A6D6D9485948394974D82A4' wos....memcmp.bu
0000D352 864EF2F0F06BA3A6                  17213          DC    X'864EF2F0F06BA3A696A26BF8F0F05D00' f.200.twos.800..
0000D362 1BADF3F194D9C4E4                  17214          DC    X'1BADF3F194D9C4E4E37A40C6C1C9D37A' ..31mRDUT..FAIL.
0000D372 406CA27A6C847A40                  17215          DC    X'406CA27A6C847A406CA27A4081A2A285' ..s..d...s..asse
0000D382 99A3408681899385                  17216          DC    X'99A3408681899385847A405A94859483' rt.failed...memc
0000D392 94974D82A4864EF2                  17217          DC    X'94974D82A4864EF2F0F04EF8F0F06B40' mp.buf.200.800..
0000D3A2 A388998585A26B40                  17218          DC    X'A388998585A26B40F15D7A400000A585' threes..1.....ve
0000D3B2 998986A840A38899                  17219          DC    X'998986A840A388998585A2005A6D6D94' rify.threes....m
0000D3C2 85948394974D82A4                  17220          DC    X'85948394974D82A4864EF2F0F04EF8F0' emcmp.buf.200.80
0000D3D2 F06BA388998585A2                  17221          DC    X'F06BA388998585A26BF15D001BADF3F1' 0.threes.1....31
0000D3E2 94D9C4E4E37A40C6                  17222          DC    X'94D9C4E4E37A40C6C1C9D37A406CA27A' mRDUT..FAIL...s.
0000D3F2 6C847A406CA27A40                  17223          DC    X'6C847A406CA27A4081A2A28599A34086' .d...s..assert.f
0000D402 81899385847A405A                  17224          DC    X'81899385847A405A9485948394974D82' ailed...memcmp.b
0000D412 A4864EF2F0F04EF8                  17225          DC    X'A4864EF2F0F04EF8F0F04EF16B408689' uf.200.800.1..fi
                                                                                                                           Page  339 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D422 86A3A88689A585A2                  17226          DC    X'86A3A88689A585A26B40F1F0F05D7A40' ftyfives..100...
0000D432 0000A585998986A8                  17227          DC    X'0000A585998986A840F5F5A200005A6D' ..verify.55s....
0000D442 6D9485948394974D                  17228          DC    X'6D9485948394974D82A4864EF2F0F04E' .memcmp.buf.200.
0000D452 F8F0F04EF16B8689                  17229          DC    X'F8F0F04EF16B868986A3A88689A585A2' 800.1.fiftyfives
0000D462 6BF1F0F05D001BAD                  17230          DC    X'6BF1F0F05D001BADF3F294D9C4E4E37A' .100....32mRDUT.
0000D472 40D7C1E2E27A406C                  17231          DC    X'40D7C1E2E27A406CA27A6C847A406CA2' .PASS...s..d...s
0000D482 1BADF0941500A289                  17232          DC    X'1BADF0941500A289A98596864D82A486' ..0m..sizeof.buf
0000D492 5D406E7E40938595                  17233          DC    X'5D406E7E4093859500001BADF3F194D9' .....len....31mR
0000D4A2 C4E4E37A40C6C1C9                  17234          DC    X'C4E4E37A40C6C1C9D37A406CA27A6C84' DUT..FAIL...s..d
0000D4B2 7A406CA27A4081A2                  17235          DC    X'7A406CA27A4081A2A28599A340868189' ...s..assert.fai
0000D4C2 9385847A4089407E                  17236          DC    X'9385847A4089407E7E40F07A4000A293' led..i....0...sl
0000D4D2 8983856D899589A3                  17237          DC    X'8983856D899589A34D5D408681899385' ice.init...faile
0000D4E2 847A406C84008940                  17238          DC    X'847A406C840089407E7E40F000001BAD' d...d.i....0....
0000D4F2 F3F194D9C4E4E37A                  17239          DC    X'F3F194D9C4E4E37A40C6C1C9D37A406C' 31mRDUT..FAIL...
0000D502 A27A6C847A406CA2                  17240          DC    X'A27A6C847A406CA27A4081A2A28599A3' s..d...s..assert
0000D512 408681899385847A                  17241          DC    X'408681899385847A4099407E7E409385' .failed..r....le
0000D522 957A400099858184                  17242          DC    X'957A4000998581844D5D409985A3A499' n...read...retur
0000D532 958584406CA9A440                  17243          DC    X'958584406CA9A44085A7978583A38584' ned..zu.expected
0000D542 406CA9A4404D6CA9                  17244          DC    X'406CA9A4404D6CA9A440998594818995' ..zu...zu.remain
0000D552 A25D000099407E7E                  17245          DC    X'A25D000099407E7E4093859500001BAD' s...r....len....
0000D562 F3F194D9C4E4E37A                  17246          DC    X'F3F194D9C4E4E37A40C6C1C9D37A406C' 31mRDUT..FAIL...
0000D572 A27A6C847A406CA2                  17247          DC    X'A27A6C847A406CA27A4081A2A28599A3' s..d...s..assert
0000D582 408681899385847A                  17248          DC    X'408681899385847A405A948594839497' .failed...memcmp
0000D592 4D82A4866B40A585                  17249          DC    X'4D82A4866B40A585998986A86B409385' .buf..verify..le
0000D5A2 955D7A400000A585                  17250          DC    X'955D7A400000A585998986A800005A6D' n.....verify....
0000D5B2 6D9485948394974D                  17251          DC    X'6D9485948394974D82A4866BA5859989' .memcmp.buf.veri
0000D5C2 86A86B9385955D00                  17252          DC    X'86A86B9385955D00968686A285A34D5D' fy.len..offset..
0000D5D2 409985A3A4999585                  17253          DC    X'409985A3A499958584406CA9A46B4095' .returned..zu..n
0000D5E2 96A3406CA9A40000                  17254          DC    X'96A3406CA9A40000A28585924D6CA9A4' ot..zu..seek..zu
0000D5F2 5D409985A3A49995                  17255          DC    X'5D409985A3A499958584406C84001BAD' ..returned..d...
0000D602 F3F194D9C4E4E37A                  17256          DC    X'F3F194D9C4E4E37A40C6C1C9D37A406C' 31mRDUT..FAIL...
0000D612 A27A6C847A406CA2                  17257          DC    X'A27A6C847A406CA27A4081A2A28599A3' s..d...s..assert
0000D622 408681899385847A                  17258          DC    X'408681899385847A4099407E7E408881' .failed..r....ha
0000D632 93867A4000009940                  17259          DC    X'93867A40000099407E7E408881938600' lf....r....half.
0000D642 A2A4827A40968686                  17260          DC    X'A2A4827A40968686A285A34D5D409985' sub..offset...re
0000D652 A3A499958584406C                  17261          DC    X'A3A499958584406CA9A46B409596A340' turned..zu..not.
0000D662 6CA9A400A2A4827A                  17262          DC    X'6CA9A400A2A4827A40A289A9854D5D40' .zu.sub..size...
0000D672 9985A3A499958584                  17263          DC    X'9985A3A499958584406CA9A46B409596' returned..zu..no
0000D682 A3406CA9A400A2A4                  17264          DC    X'A3406CA9A400A2A4827A409985948189' t..zu.sub..remai
0000D692 95A24D5D409985A3                  17265          DC    X'95A24D5D409985A3A499958584406CA9' ns...returned..z
0000D6A2 A46B409596A3406C                  17266          DC    X'A46B409596A3406CA9A40000A2A48240' u..not..zu..sub.
0000D6B2 998581844D5D4099                  17267          DC    X'998581844D5D409985A3A49995858440' read...returned.
0000D6C2 6CA9A44085A79785                  17268          DC    X'6CA9A44085A7978583A38584406CA9A4' .zu.expected..zu
0000D6D2 404D6CA9A4409985                  17269          DC    X'404D6CA9A440998594818995A25D0000' ...zu.remains...
0000D6E2 1BADF3F194D9C4E4                  17270          DC    X'1BADF3F194D9C4E4E37A40C6C1C9D37A' ..31mRDUT..FAIL.
0000D6F2 406CA27A6C847A40                  17271          DC    X'406CA27A6C847A406CA27A4081A2A285' ..s..d...s..asse
0000D702 99A3408681899385                  17272          DC    X'99A3408681899385847A4099407E7E40' rt.failed..r....
0000D712 99846DA293898385                  17273          DC    X'99846DA2938983856DA289A9854D50A2' rd.slice.size..s
0000D722 A4825D7A4000A2A4                  17274          DC    X'A4825D7A4000A2A48240968686A285A3' ub....sub.offset
0000D732 4D5D409985A3A499                  17275          DC    X'4D5D409985A3A499958584406CA9A46B' ...returned..zu.
0000D742 409596A3406CA9A4                  17276          DC    X'409596A3406CA9A4000099407E7E404D' .not..zu..r.....
0000D752 4D50A2A4825D606E                  17277          DC    X'4D50A2A4825D606E8595844060404D50' ..sub...end.....
                                                                                                                           Page  340 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000D762 A2A4825D606EA2A3                  17278          DC    X'A2A4825D606EA2A38199A35D00001BAD' sub...start.....
0000D772 F3F194D9C4E4E37A                  17279          DC    X'F3F194D9C4E4E37A40C6C1C9D37A406C' 31mRDUT..FAIL...
0000D782 A27A6C847A406CA2                  17280          DC    X'A27A6C847A406CA27A4081A2A28599A3' s..d...s..assert
0000D792 408681899385847A                  17281          DC    X'408681899385847A409796A2407E7E40' .failed..pos....
0000D7A2 F4F0F07A40009796                  17282          DC    X'F4F0F07A40009796A2407E7E40F4F0F0' 400...pos....400
0000D7B2 00001BADF3F194D9                  17283          DC    X'00001BADF3F194D9C4E4E37A40C6C1C9' ....31mRDUT..FAI
0000D7C2 D37A406CA27A6C84                  17284          DC    X'D37A406CA27A6C847A406CA27A4081A2' L...s..d...s..as
0000D7D2 A28599A340868189                  17285          DC    X'A28599A3408681899385847A405A6D6D' sert.failed.....
0000D7E2 868189937A400000                  17286          DC    X'868189937A400000998581846DA58599' fail....read.ver
0000D7F2 8986A84D8182A296                  17287          DC    X'8986A84D8182A296867E6CA9A46B9385' ify.absof..zu.le
0000D802 957E6CA9A45D4086                  17288          DC    X'957E6CA9A45D40868189938584005A6D' n..zu..failed...
0000D812 6D8681899300A285                  17289          DC    X'6D8681899300A28585924D5D40868189' .fail.seek...fai
0000D822 938584001BADF3F1                  17290          DC    X'938584001BADF3F194D9C4E4E37A40C6' led...31mRDUT..F
0000D832 C1C9D37A406CA27A                  17291          DC    X'C1C9D37A406CA27A6C847A406CA27A40' AIL...s..d...s..
0000D842 81A2A28599A34086                  17292          DC    X'81A2A28599A3408681899385847A4097' assert.failed..p
0000D852 96A2407E7E40F2F0                  17293          DC    X'96A2407E7E40F2F0F04EF1F0F07A4000' os....200.100...
0000D862 9796A2407E7E40F2                  17294          DC    X'9796A2407E7E40F2F0F04EF1F0F00000' pos....200.100..
0000D872 1BADF3F194D9C4E4                  17295          DC    X'1BADF3F194D9C4E4E37A40C6C1C9D37A' ..31mRDUT..FAIL.
0000D882 406CA27A6C847A40                  17296          DC    X'406CA27A6C847A406CA27A4081A2A285' ..s..d...s..asse
0000D892 99A3408681899385                  17297          DC    X'99A3408681899385847A40A28587606E' rt.failed..seg..
0000D8A2 A285876D9686405A                  17298          DC    X'A285876D9686405A7E40F07A400081A2' seg.of....0...as
0000D8B2 A2A4948584409489                  17299          DC    X'A2A49485844094898460A28587948595' sumed.mid.segmen
0000D8C2 A300A28587606EA2                  17300          DC    X'A300A28587606EA285876D9686405A7E' t.seg..seg.of...
0000D8D2 40F000001BADF3F1                  17301          DC    X'40F000001BADF3F194D9C4E4E37A40C6' .0....31mRDUT..F
0000D8E2 C1C9D37A406CA27A                  17302          DC    X'C1C9D37A406CA27A6C847A406CA27A40' AIL...s..d...s..
0000D8F2 81A2A28599A34086                  17303          DC    X'81A2A28599A3408681899385847A40A2' assert.failed..s
0000D902 8587405A7E40D5E4                  17304          DC    X'8587405A7E40D5E4D3D37A400000A285' eg....NULL....se
0000D912 87405A7E404D4DA5                  17305          DC    X'87405A7E404D4DA5968984405C5DF05D' g......void...0.
0000D922 00001BADF3F194D9                  17306          DC    X'00001BADF3F194D9C4E4E37A40C6C1C9' ....31mRDUT..FAI
0000D932 D37A406CA27A6C84                  17307          DC    X'D37A406CA27A6C847A406CA27A4081A2' L...s..d...s..as
0000D942 A28599A340868189                  17308          DC    X'A28599A3408681899385847A40A28587' sert.failed..seg
0000D952 407E7E409585A6A2                  17309          DC    X'407E7E409585A6A285877A4000009585' ....newseg....ne
0000D962 A6A28587406C976B                  17310          DC    X'A6A28587406C976B40A28587406C9700' wseg..p..seg..p.
0000D972 A28587407E7E4095                  17311          DC    X'A28587407E7E409585A6A28587001BAD' seg....newseg...
0000D982 F3F194D9C4E4E37A                  17312          DC    X'F3F194D9C4E4E37A40C6C1C9D37A406C' 31mRDUT..FAIL...
0000D992 A27A6C847A406CA2                  17313          DC    X'A27A6C847A406CA27A4081A2A28599A3' s..d...s..assert
0000D9A2 408681899385847A                  17314          DC    X'408681899385847A40A28587606EA285' .failed..seg..se
0000D9B2 876D9686406E40F0                  17315          DC    X'876D9686406E40F07A40000081A2A2A4' g.of...0....assu
0000D9C2 9485844082858789                  17316          DC    X'94858440828587899595899587409686' med.beginning.of
0000D9D2 40A28587948595A3                  17317          DC    X'40A28587948595A36B408796A3406CA9' .segment..got..z
0000D9E2 A400A28587606EA2                  17318          DC    X'A400A28587606EA285876D9686406E40' u.seg..seg.of...
0000D9F2 F0001BADF3F194D9                  17319          DC    X'F0001BADF3F194D9C4E4E37A40C6C1C9' 0...31mRDUT..FAI
0000DA02 D37A406CA27A6C84                  17320          DC    X'D37A406CA27A6C847A406CA27A4081A2' L...s..d...s..as
0000DA12 A28599A340868189                  17321          DC    X'A28599A3408681899385847A4099407E' sert.failed..r..
0000DA22 7E409481A76D8395                  17322          DC    X'7E409481A76D8395A3405C40A289A985' ..max.cnt...size
0000DA32 96864D8399835D7A                  17323          DC    X'96864D8399835D7A400085A7978583A3' of.crc....expect
0000DA42 85844093859587A3                  17324          DC    X'85844093859587A388406CA9A46B4095' ed.length..zu..n
0000DA52 96A3406CA9A40000                  17325          DC    X'96A3406CA9A4000099407E7E409481A7' ot..zu..r....max
0000DA62 6D8395A3405C40A2                  17326          DC    X'6D8395A3405C40A289A98596864D8399' .cnt...sizeof.cr
0000DA72 835D00001BADF3F1                  17327          DC    X'835D00001BADF3F194D9C4E4E37A40C6' c.....31mRDUT..F
0000DA82 C1C9D37A406CA27A                  17328          DC    X'C1C9D37A406CA27A6C847A406CA27A40' AIL...s..d...s..
0000DA92 81A2A28599A34086                  17329          DC    X'81A2A28599A3408681899385847A4099' assert.failed..r
                                                                                                                           Page  341 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DAA2 407E7E4099846D82                  17330          DC    X'407E7E4099846D82A4866D9385954D50' ....rd.buf.len..
0000DAB2 825D7A400000A293                  17331          DC    X'825D7A400000A2938983854099859481' b.....slice.rema
0000DAC2 8995A2406CA9A46B                  17332          DC    X'8995A2406CA9A46B40A28896A4938440' ins..zu..should.
0000DAD2 8285406CA9A40000                  17333          DC    X'8285406CA9A4000099407E7E4099846D' be..zu..r....rd.
0000DAE2 82A4866D9385954D                  17334          DC    X'82A4866D9385954D50825D0097858592' buf.len..b..peek
0000DAF2 0000998581840000                  17335          DC    X'00009985818400001BADF3F194D9C4E4' ..read....31mRDU
0000DB02 E37A40C6C1C9D37A                  17336          DC    X'E37A40C6C1C9D37A406CA27A6C847A40' T..FAIL...s..d..
0000DB12 6CA27A4081A2A285                  17337          DC    X'6CA27A4081A2A28599A3408681899385' .s..assert.faile
0000DB22 847A4099407E7E40                  17338          DC    X'847A4099407E7E40A289A98596864D82' d..r....sizeof.b
0000DB32 A4866D8399835D7A                  17339          DC    X'A4866D8399835D7A40006CA24D5D4081' uf.crc.....s...a
0000DB42 A3407B6CA9A44086                  17340          DC    X'A3407B6CA9A4408681899385847A4099' t...zu.failed..r
0000DB52 4089A2406CA9A440                  17341          DC    X'4089A2406CA9A4409596A3406CA9A400' .is..zu.not..zu.
0000DB62 99407E7E40A289A9                  17342          DC    X'99407E7E40A289A98596864D82A4866D' r....sizeof.buf.
0000DB72 8399835D00001BAD                  17343          DC    X'8399835D00001BADF3F194D9C4E4E37A' crc.....31mRDUT.
0000DB82 40C6C1C9D37A406C                  17344          DC    X'40C6C1C9D37A406CA27A6C847A406CA2' .FAIL...s..d...s
0000DB92 7A4081A2A28599A3                  17345          DC    X'7A4081A2A28599A3408681899385847A' ..assert.failed.
0000DBA2 4082A4866D839983                  17346          DC    X'4082A4866D839983407E7E408399837A' .buf.crc....crc.
0000DBB2 40006CA27A408995                  17347          DC    X'40006CA27A408995A581938984408399' ...s..invalid.cr
0000DBC2 834081A3407B6CA9                  17348          DC    X'834081A3407B6CA9A47A4085A7978583' c.at...zu..expec
0000DBD2 A38584406CA46B40                  17349          DC    X'A38584406CA46B4099858184406CA400' ted..u..read..u.
0000DBE2 82A4866D83998340                  17350          DC    X'82A4866D839983407E7E408399830000' buf.crc....crc..
0000DBF2 1BADF3F194D9C4E4                  17351          DC    X'1BADF3F194D9C4E4E37A40C6C1C9D37A' ..31mRDUT..FAIL.
0000DC02 406CA27A6C847A40                  17352          DC    X'406CA27A6C847A406CA27A4081A2A285' ..s..d...s..asse
0000DC12 99A3408681899385                  17353          DC    X'99A3408681899385847A40998581846D' rt.failed..read.
0000DC22 839983407E7E40A6                  17354          DC    X'839983407E7E40A69989A3856D839983' crc....write.crc
0000DC32 7A4000006CA27A40                  17355          DC    X'7A4000006CA27A40868995819389A985' .....s..finalize
0000DC42 8440998581844083                  17356          DC    X'84409985818440839983406CA4405A7E' d.read.crc..u...
0000DC52 40A69989A3854083                  17357          DC    X'40A69989A38540839983406CA4009985' .write.crc..u.re
0000DC62 81846D839983407E                  17358          DC    X'81846D839983407E7E40A69989A3856D' ad.crc....write.
0000DC72 8399830085A7976D                  17359          DC    X'8399830085A7976D8996A58395A3404C' crc.exp.iovcnt..
0000DC82 7E40F1F600001BAD                  17360          DC    X'7E40F1F600001BADF3F194D9C4E4E37A' ..16....31mRDUT.
0000DC92 40C6C1C9D37A406C                  17361          DC    X'40C6C1C9D37A406CA27A6C847A406CA2' .FAIL...s..d...s
0000DCA2 7A4081A2A28599A3                  17362          DC    X'7A4081A2A28599A3408681899385847A' ..assert.failed.
0000DCB2 40A396A3A289A985                  17363          DC    X'40A396A3A289A985406E7E4085A7976D' .totsize....exp.
0000DCC2 A396A3A289A9857A                  17364          DC    X'A396A3A289A9857A40008996A540A396' totsize...iov.to
0000DCD2 A3819340A289A985                  17365          DC    X'A3819340A289A985406CA9A44085A797' tal.size..zu.exp
0000DCE2 8583A38584406E7E                  17366          DC    X'8583A38584406E7E406CA9A40000A396' ected.....zu..to
0000DCF2 A3A289A985406E7E                  17367          DC    X'A3A289A985406E7E4085A7976DA396A3' tsize....exp.tot
0000DD02 A289A98500001BAD                  17368          DC    X'A289A98500001BADF3F194D9C4E4E37A' size....31mRDUT.
0000DD12 40C6C1C9D37A406C                  17369          DC    X'40C6C1C9D37A406CA27A6C847A406CA2' .FAIL...s..d...s
0000DD22 7A4081A2A28599A3                  17370          DC    X'7A4081A2A28599A3408681899385847A' ..assert.failed.
0000DD32 408996A58395A340                  17371          DC    X'408996A58395A3406E7E4085A7976D89' .iovcnt....exp.i
0000DD42 96A58395A3405050                  17372          DC    X'96A58395A3405050408996A58395A340' ovcnt....iovcnt.
0000DD52 4C7E40D4E86DC9D6                  17373          DC    X'4C7E40D4E86DC9D6E56DD4C1E77A4000' ...MY.IOV.MAX...
0000DD62 8996A58395A3406C                  17374          DC    X'8996A58395A3406CA9A46B4085A79785' iovcnt..zu..expe
0000DD72 83A38584406CA9A4                  17375          DC    X'83A38584406CA9A4404C40A7404C7E40' cted..zu...x....
0000DD82 D4E86DC9D6E56DD4                  17376          DC    X'D4E86DC9D6E56DD4C1E700008996A583' MY.IOV.MAX..iovc
0000DD92 95A3406E7E4085A7                  17377          DC    X'95A3406E7E4085A7976D8996A58395A3' nt....exp.iovcnt
0000DDA2 405050408996A583                  17378          DC    X'405050408996A58395A3404C7E40F1F6' ....iovcnt....16
0000DDB2 00001BADF3F194D9                  17379          DC    X'00001BADF3F194D9C4E4E37A40C6C1C9' ....31mRDUT..FAI
0000DDC2 D37A406CA27A6C84                  17380          DC    X'D37A406CA27A6C847A406CA27A4081A2' L...s..d...s..as
0000DDD2 A28599A340868189                  17381          DC    X'A28599A3408681899385847A408996A5' sert.failed..iov
                                                                                                                           Page  342 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000DDE2 AD89BD4B8996A56D                  17382          DC    X'AD89BD4B8996A56D8281A2857A400000' .i..iov.base....
0000DDF2 8996A5407B6CA9A4                  17383          DC    X'8996A5407B6CA9A4408996A56D8281A2' iov...zu.iov.bas
0000DE02 85409596A340A285                  17384          DC    X'85409596A340A285A3008996A5AD89BD' e.not.set.iov.i.
0000DE12 4B8996A56D8281A2                  17385          DC    X'4B8996A56D8281A285001BADF3F194D9' .iov.base...31mR
0000DE22 C4E4E37A40C6C1C9                  17386          DC    X'C4E4E37A40C6C1C9D37A406CA27A6C84' DUT..FAIL...s..d
0000DE32 7A406CA27A4081A2                  17387          DC    X'7A406CA27A4081A2A28599A340868189' ...s..assert.fai
0000DE42 9385847A408996A5                  17388          DC    X'9385847A408996A5AD89BD4B8996A56D' led..iov.i..iov.
0000DE52 9385957A40008996                  17389          DC    X'9385957A40008996A5407B6CA9A44089' len...iov...zu.i
0000DE62 96A56D938595406C                  17390          DC    X'96A56D938595406CA9A44096A4A34096' ov.len..zu.out.o
0000DE72 8640998195878500                  17391          DC    X'86409981958785008996A5AD89BD4B89' f.range.iov.i..i
0000DE82 96A56D9385950000                  17392          DC    X'96A56D93859500001BADF3F194D9C4E4' ov.len....31mRDU
0000DE92 E37A40C6C1C9D37A                  17393          DC    X'E37A40C6C1C9D37A406CA27A6C847A40' T..FAIL...s..d..
0000DEA2 6CA27A4081A2A285                  17394          DC    X'6CA27A4081A2A28599A3408681899385' .s..assert.faile
0000DEB2 847A40A2A494404C                  17395          DC    X'847A40A2A494404C7E40A396A3A289A9' d..sum....totsiz
0000DEC2 857A4000A2A49440                  17396          DC    X'857A4000A2A494406CA9A4406E40A396' e...sum..zu...to
0000DED2 A3A289A985406CA9                  17397          DC    X'A3A289A985406CA9A400A2A494404C7E' tsize..zu.sum...
0000DEE2 40A396A3A289A985                  17398          DC    X'40A396A3A289A98500001BADF3F194D9' .totsize....31mR
0000DEF2 C4E4E37A40C6C1C9                  17399          DC    X'C4E4E37A40C6C1C9D37A406CA27A6C84' DUT..FAIL...s..d
0000DF02 7A406CA27A4081A2                  17400          DC    X'7A406CA27A4081A2A28599A340868189' ...s..assert.fai
0000DF12 9385847A40A2A494                  17401          DC    X'9385847A40A2A494407E7E40A396A3A2' led..sum....tots
0000DF22 89A9857A4000A2A4                  17402          DC    X'89A9857A4000A2A494406CA9A4405A7E' ize...sum..zu...
0000DF32 40A396A3A289A985                  17403          DC    X'40A396A3A289A985406CA9A40000A2A4' .totsize..zu..su
0000DF42 94407E7E40A396A3                  17404          DC    X'94407E7E40A396A3A289A98500008996' m....totsize..io
0000DF52 A56DA585998986A8                  17405          DC    X'A56DA585998986A84D5D408681899385' v.verify...faile
0000DF62 84001BADF3F194D9                  17406          DC    X'84001BADF3F194D9C4E4E37A40C6C1C9' d...31mRDUT..FAI
0000DF72 D37A406CA27A6C84                  17407          DC    X'D37A406CA27A6C847A406CA27A4081A2' L...s..d...s..as
0000DF82 A28599A340868189                  17408          DC    X'A28599A3408681899385847A4099407E' sert.failed..r..
0000DF92 7E408995AD89BD4B                  17409          DC    X'7E408995AD89BD4B859981A2A49985A2' ..in.i..erasures
0000DFA2 AD91BD4B9985A3A2                  17410          DC    X'AD91BD4B9985A3A289A9857A400085A7' .j..retsize...ex
0000DFB2 978583A385844099                  17411          DC    X'978583A38584409985A3A289A985406C' pected.retsize..
0000DFC2 A9A4408696994089                  17412          DC    X'A9A44086969940897E6C846B917E6C84' zu.for.i..d.j..d
0000DFD2 6B409596A3406CA9                  17413          DC    X'6B409596A3406CA9A40099407E7E4089' ..not..zu.r....i
0000DFE2 95AD89BD4B859981                  17414          DC    X'95AD89BD4B859981A2A49985A2AD91BD' n.i..erasures.j.
0000DFF2 4B9985A3A289A985                  17415          DC    X'4B9985A3A289A98500001BADF3F194D9' .retsize....31mR
0000E002 C4E4E37A40C6C1C9                  17416          DC    X'C4E4E37A40C6C1C9D37A406CA27A6C84' DUT..FAIL...s..d
0000E012 7A406CA27A4081A2                  17417          DC    X'7A406CA27A4081A2A28599A340868189' ...s..assert.fai
0000E022 9385847A4085A797                  17418          DC    X'9385847A4085A797A2A9407E7E409984' led..expsz....rd
0000E032 6D82A4866D938595                  17419          DC    X'6D82A4866D9385954D50825D7A400000' .buf.len..b.....
0000E042 85A7978583A38584                  17420          DC    X'85A7978583A385844082A48686859940' expected.buffer.
0000E052 A396408285406CA9                  17421          DC    X'A396408285406CA9A44082A8A385A26B' to.be..zu.bytes.
0000E062 409596A3406CA9A4                  17422          DC    X'409596A3406CA9A44086969940897E6C' .not..zu.for.i..
0000E072 840085A797A2A940                  17423          DC    X'840085A797A2A9407E7E4099846D82A4' d.expsz....rd.bu
0000E082 866D9385954D5082                  17424          DC    X'866D9385954D50825D001BADF3F194D9' f.len..b....31mR
0000E092 C4E4E37A40C6C1C9                  17425          DC    X'C4E4E37A40C6C1C9D37A406CA27A6C84' DUT..FAIL...s..d
0000E0A2 7A406CA27A4081A2                  17426          DC    X'7A406CA27A4081A2A28599A340868189' ...s..assert.fai
0000E0B2 9385847A404D99F2                  17427          DC    X'9385847A404D99F2407E7E4060F14050' led...r2.....1..
0000E0C2 504099846D82A486                  17428          DC    X'504099846D82A4866D9385954D50825D' ..rd.buf.len..b.
0000E0D2 407E7E40F05D404F                  17429          DC    X'407E7E40F05D404F4F404D99F2407E7E' ....0......r2...
0000E0E2 40F0405050409984                  17430          DC    X'40F04050504099846D82A4866D938595' .0....rd.buf.len
0000E0F2 4D50825D406E40F0                  17431          DC    X'4D50825D406E40F05D7A4000A2938983' ..b....0....slic
0000E102 856D899589A34D6C                  17432          DC    X'856D899589A34D6CA9A45D409985A3A4' e.init..zu..retu
0000E112 99958584406C8440                  17433          DC    X'99958584406C844086969940897E6C84' rned..d.for.i..d
                                                                                                                           Page  343 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E122 00004D99F2407E7E                  17434          DC    X'00004D99F2407E7E4060F14050504099' ...r2.....1....r
0000E132 846D82A4866D9385                  17435          DC    X'846D82A4866D9385954D50825D407E7E' d.buf.len..b....
0000E142 40F05D404F4F404D                  17436          DC    X'40F05D404F4F404D99F2407E7E40F040' .0......r2....0.
0000E152 50504099846D82A4                  17437          DC    X'50504099846D82A4866D9385954D5082' ...rd.buf.len..b
0000E162 5D406E40F05D0000                  17438          DC    X'5D406E40F05D00001BADF3F194D9C4E4' ....0.....31mRDU
0000E172 E37A40C6C1C9D37A                  17439          DC    X'E37A40C6C1C9D37A406CA27A6C847A40' T..FAIL...s..d..
0000E182 6CA27A4081A2A285                  17440          DC    X'6CA27A4081A2A28599A3408681899385' .s..assert.faile
0000E192 847A4085A797A2A9                  17441          DC    X'847A4085A797A2A9407E7E4099846DA2' d..expsz....rd.s
0000E1A2 938983856DA289A9                  17442          DC    X'938983856DA289A9854D50A25D7A4000' lice.size..s....
0000E1B2 85A7978583A38584                  17443          DC    X'85A7978583A3858440A29389838540A3' expected.slice.t
0000E1C2 96408285406CA9A4                  17444          DC    X'96408285406CA9A44082A8A385A26B40' o.be..zu.bytes..
0000E1D2 9596A3406CA9A440                  17445          DC    X'9596A3406CA9A44086969940897E6C84' not..zu.for.i..d
0000E1E2 000085A797A2A940                  17446          DC    X'000085A797A2A9407E7E404D4D50A25D' ..expsz.......s.
0000E1F2 606E859584406040                  17447          DC    X'606E8595844060404D50A25D606EA2A3' ..end.....s...st
0000E202 8199A35D00001BAD                  17448          DC    X'8199A35D00001BADF3F194D9C4E4E37A' art.....31mRDUT.
0000E212 40C6C1C9D37A406C                  17449          DC    X'40C6C1C9D37A406CA27A6C847A406CA2' .FAIL...s..d...s
0000E222 7A4081A2A28599A3                  17450          DC    X'7A4081A2A28599A3408681899385847A' ..assert.failed.
0000E232 4099407E7E4085A7                  17451          DC    X'4099407E7E4085A797A2A97A400085A7' .r....expsz...ex
0000E242 978583A3858440A3                  17452          DC    X'978583A3858440A3964099858184406C' pected.to.read..
0000E252 A9A44082A8A385A2                  17453          DC    X'A9A44082A8A385A26B409596A3406CA9' zu.bytes..not..z
0000E262 A44086969940897E                  17454          DC    X'A44086969940897E6C84000099407E7E' u.for.i..d..r...
0000E272 4085A797A2A90000                  17455          DC    X'4085A797A2A900001BADF3F194D9C4E4' .expsz....31mRDU
0000E282 E37A40C6C1C9D37A                  17456          DC    X'E37A40C6C1C9D37A406CA27A6C847A40' T..FAIL...s..d..
0000E292 6CA27A4081A2A285                  17457          DC    X'6CA27A4081A2A28599A3408681899385' .s..assert.faile
0000E2A2 847A405A94859483                  17458          DC    X'847A405A9485948394974D96A4A36B40' d...memcmp.out..
0000E2B2 8995AD89BD4B85A7                  17459          DC    X'8995AD89BD4B85A7978583A36B4085A7' in.i..expect..ex
0000E2C2 97A2A95D7A400000                  17460          DC    X'97A2A95D7A400000C5A7978583A38584' psz.....Expected
0000E2D2 407F6C4B5CA27F6B                  17461          DC    X'407F6C4B5CA27F6B409596A3407F6C4B' .....s...not....
0000E2E2 5CA27F4086969940                  17462          DC    X'5CA27F4086969940897E6C8400005A6D' .s..for.i..d....
0000E2F2 6D9485948394974D                  17463          DC    X'6D9485948394974D96A4A36B8995AD89' .memcmp.out.in.i
0000E302 BD4B85A7978583A3                  17464          DC    X'BD4B85A7978583A36B85A797A2A95D00' ..expect.expsz..
0000E312 1BADF3F194D9C4E4                  17465          DC    X'1BADF3F194D9C4E4E37A40C6C1C9D37A' ..31mRDUT..FAIL.
0000E322 406CA27A6C847A40                  17466          DC    X'406CA27A6C847A406CA27A4081A2A285' ..s..d...s..asse
0000E332 99A3408681899385                  17467          DC    X'99A3408681899385847A4099846DA293' rt.failed..rd.sl
0000E342 8983856D99859481                  17468          DC    X'8983856D998594818995A24D50A25D40' ice.remains..s..
0000E352 7E7E40F07A400000                  17469          DC    X'7E7E40F07A40000085A7978583A38584' ...0....expected
0000E362 4095964099859481                  17470          DC    X'409596409985948189958995874082A8' .no.remaining.by
0000E372 A385A240899540A2                  17471          DC    X'A385A240899540A2938983856B4082A4' tes.in.slice..bu
0000E382 A3408796A3406CA9                  17472          DC    X'A3408796A3406CA9A44086969940897E' t.got..zu.for.i.
0000E392 6C8400004D4D50A2                  17473          DC    X'6C8400004D4D50A25D606E8595844060' .d.....s...end..
0000E3A2 4099846DA2938983                  17474          DC    X'4099846DA2938983856D8182A26D9686' .rd.slice.abs.of
0000E3B2 86A285A34D50A25D                  17475          DC    X'86A285A34D50A25D5D407E7E40F00000' fset..s......0..
0000E3C2 F1F20000F300F4F5                  17476          DC    X'F1F20000F300F4F50000F100F3F4F500' 12..3.45..1.345.
0000E3D2 F1F2F300F1F40000                  17477          DC    X'F1F2F300F1F400000000F2F3F4F50000' 123.14....2345..
0000E3E2 F1F2F3F40000F1F2                  17478          DC    X'F1F2F3F40000F1F2F3F4F500F1F2F3F4' 1234..12345.1234
0000E3F2 F5F60000F1F2F3F4                  17479          DC    X'F5F60000F1F2F3F4F5F6F7F8F9810000' 56..123456789a..
0000E402 F1F2F3F4F8F98100                  17480          DC    X'F1F2F3F4F8F98100F5F6F7F80000F981' 123489a.5678..9a
0000E412 82830000F1F2F3F7                  17481          DC    X'82830000F1F2F3F7F8F981828300'     bc..123789abc.
                                           17482 @E__stderrp ALIAS C'@@STDERP'
                                           17483          EXTRN @E__stderrp
                                           17484 @Ecrc_table ALIAS X'8399836DA381829385'
                                           17485          EXTRN @Ecrc_table
                                                                                                                           Page  344 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           17486 @Erd_unittest_assert_on_failure ALIAS X'99846DA49589A3A385A2A36D81A2A28*
                                                                599A36D96956D86818993A49985'
                                           17487          EXTRN @Erd_unittest_assert_on_failure
                                           17488 *
                                           17489 *
                                           17490 *   Re-entrant Data Initialization Section
                                           17491 *
                                           17492 @@INIT@  ALIAS C'@rdbuf:'
0000E420                0000E420 00000230  17493 @@INIT@  CSECT
                                           17494 @@INIT@  AMODE ANY
                                           17495 @@INIT@  RMODE ANY
0000E420 05                                17496          DC    XL1'5'
0000E421 000000                            17497          DC    AL3(0)
0000E424 00000120                          17498          DC    AL4(288)
0000E428 00000000                          17499          DC    4X'00'
0000E42C 00000000                          17500          DC    Q(@@STATIC)
0000E430 00000000                          17501          DC    X'00000000'
0000E434 00000001                          17502          DC    X'00000001'
0000E438 00000000                          17503          DC    X'00000000'
0000E43C 000000FF                          17504          DC    X'000000FF'
0000E440 0102039C09867F97                  17505          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
0000E450 1112139D85088718                  17506          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
0000E460 818283840A171B88                  17507          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
0000E470 9116939495960498                  17508          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
0000E480 A0E2E4E0E1E3E5E7                  17509          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
0000E490 E9EAEBE8EDEEEFEC                  17510          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
0000E4A0 2FC2C4C0C1C3C5C7                  17511          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
0000E4B0 C9CACBC8CDCECFCC                  17512          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
0000E4C0 6162636465666768                  17513          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
0000E4D0 6A6B6C6D6E6F7071                  17514          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
0000E4E0 7E73747576777879                  17515          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
0000E4F0 A3A5B7A9A7B6BCBD                  17516          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
0000E500 4142434445464748                  17517          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
0000E510 4A4B4C4D4E4F5051                  17518          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
0000E520 F753545556575859                  17519          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
0000E530 3132333435363738                  17520          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                           17521 *
0000E540 05                                17522          DC    XL1'5'
0000E541 000000                            17523          DC    AL3(0)
0000E544 000001E0                          17524          DC    AL4(480)
0000E548 00000000                          17525          DC    4X'00'
0000E54C 00000000                          17526          DC    Q(@@STATIC)
0000E550 00000000                          17527          DC    X'00000000'
0000E554 00000101                          17528          DC    X'00000101'
0000E558 00000000                          17529          DC    X'00000000'
0000E55C 000000A0                          17530          DC    X'000000A0'
0000E560 010203372D2E2F16                  17531          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
0000E570 1112133C3D322618                  17532          DC    X'1112133C3D322618193F271C1D1E1F40' ................
0000E580 5A7F7B5B6C507D4D                  17533          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
0000E590 F1F2F3F4F5F6F7F8                  17534          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
0000E5A0 C1C2C3C4C5C6C7C8                  17535          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
0000E5B0 D8D9E2E3E4E5E6E7                  17536          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
                                                                                                                           Page  345 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000E5C0 8182838485868788                  17537          DC    X'81828384858687888991929394959697' abcdefghijklmnop
0000E5D0 9899A2A3A4A5A6A7                  17538          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
0000E5E0 2122232425061728                  17539          DC    X'2122232425061728292A2B2C090A1B30' ................
0000E5F0 311A333435360838                  17540          DC    X'311A333435360838393A3B04143EFF80' ................
                                           17541 *
0000E600 05                                17542          DC    XL1'5'
0000E601 000000                            17543          DC    AL3(0)
0000E604 00000208                          17544          DC    AL4(520)
0000E608 00000000                          17545          DC    4X'00'
0000E60C 00000000                          17546          DC    Q(@@STATIC)
0000E610 00000000                          17547          DC    X'00000000'
0000E614 000001C0                          17548          DC    X'000001C0'
0000E618 00000000                          17549          DC    X'00000000'
0000E61C 00000001                          17550          DC    X'00000001'
0000E620 8A40404040404040                  17551          DC    X'8A40404040404040'                 ........
                                           17552 *
0000E628 05                                17553          DC    XL1'5'
0000E629 000000                            17554          DC    AL3(0)
0000E62C 00000000                          17555          DC    AL4(0)
0000E630 00000000                          17556          DC    4X'00'
0000E634 00000000                          17557          DC    Q(@@STATIC)
0000E638 00000000                          17558          DC    X'00000000'
0000E63C 000001E0                          17559          DC    X'000001E0'
0000E640 00000000                          17560          DC    X'00000000'
0000E644 00000001                          17561          DC    X'00000001'
0000E648 8B40404040404040                  17562          DC    X'8B40404040404040'                 ........
                                           17563 *
                                           17564          END
                                                 Relocation Dictionary                                                     Page  346 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00000018   A 4      +
 00000002 00000002 00000040   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000004 00000148   A 4      +
 00000002 00000008 00000150   A 4      +
 00000002 0000000F 00000158   A 4      +
 00000002 0000000F 00000160   A 4      +
 00000002 00000002 00000180   A 4      +
 00000002 00000002 000001A8   A 4      +
 00000002 00000002 000001B0   A 4      +
 00000002 0000000D 00000268   A 4      +
 00000002 00000002 00000288   A 4      +
 00000002 00000002 000002B0   A 4      +
 00000002 00000002 000002B8   A 4      +
 00000002 00000007 000003B8   A 4      +
 00000002 00000008 000003C0   A 4      +
 00000002 0000000F 000003C8   A 4      +
 00000002 0000000F 000003D0   A 4      +
 00000002 00000002 00000420   A 4      +
 00000002 00000002 00000428   A 4      +
 00000002 00000002 000004C8   A 4      +
 00000002 00000002 000004D0   A 4      +
 00000002 00000002 00000568   A 4      +
 00000002 00000002 00000570   A 4      +
 00000002 00000002 00000620   A 4      +
 00000002 00000002 00000628   A 4      +
 00000002 00000002 00000678   A 4      +
 00000002 00000002 000006A0   A 4      +
 00000002 00000002 000006A8   A 4      +
 00000002 00000002 000007D8   A 4      +
 00000002 00000002 000007E0   A 4      +
 00000002 00000002 00000880   A 4      +
 00000002 00000002 00000888   A 4      +
 00000002 00000002 00000938   A 4      +
 00000002 00000002 00000940   A 4      +
 00000002 00000002 00000988   A 4      +
 00000002 00000002 000009B0   A 4      +
 00000002 00000002 000009B8   A 4      +
 00000002 0000000B 00000A24   Q 4      +
 00000002 00000002 00000B08   A 4      +
 00000002 00000002 00000B10   A 4      +
 00000002 00000002 00000B68   A 4      +
 00000002 00000002 00000B90   A 4      +
 00000002 00000002 00000B98   A 4      +
 00000002 00000002 00000C88   A 4      +
 00000002 00000002 00000CD8   A 4      +
 00000002 00000002 00000CE0   A 4      +
 00000002 00000002 00000D50   A 4      +
 00000002 00000002 00000D78   A 4      +
 00000002 00000002 00000D80   A 4      +
 00000002 00000002 00000E60   A 4      +
 00000002 00000002 00000F10   A 4      +
 00000002 00000002 00000F18   A 4      +
                                                 Relocation Dictionary                                                     Page  347 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00000FB0   A 4      +
 00000002 00000002 00000FD8   A 4      +
 00000002 00000002 00000FE0   A 4      +
 00000002 00000002 00001088   A 4      +
 00000002 00000002 00001090   A 4      +
 00000002 00000002 00001098   A 4      +
 00000002 00000002 000010A0   A 4      +
 00000002 0000000F 000010A8   A 4      +
 00000002 00000008 000010B0   A 4      +
 00000002 0000000F 000010B8   A 4      +
 00000002 00000002 00001288   A 4      +
 00000002 00000002 000012B0   A 4      +
 00000002 00000002 000012B8   A 4      +
 00000002 00000002 00001358   A 4      +
 00000002 00000002 00001360   A 4      +
 00000002 00000002 00001460   A 4      +
 00000002 00000002 00001488   A 4      +
 00000002 00000002 00001490   A 4      +
 00000002 00000002 00001590   A 4      +
 00000002 00000002 00001598   A 4      +
 00000002 00000002 000015C0   A 4      +
 00000002 00000002 000015E8   A 4      +
 00000002 00000002 000015F0   A 4      +
 00000002 00000002 00001650   A 4      +
 00000002 00000002 00001658   A 4      +
 00000002 00000002 00001760   A 4      +
 00000002 00000002 00001768   A 4      +
 00000002 00000002 00001828   A 4      +
 00000002 00000002 00001850   A 4      +
 00000002 00000002 00001858   A 4      +
 00000002 00000008 00001A30   A 4      +
 00000002 0000000F 00001A38   A 4      +
 00000002 0000000F 00001A40   A 4      +
 00000002 00000002 00001A48   A 4      +
 00000002 00000002 00001A78   A 4      +
 00000002 00000002 00001AA0   A 4      +
 00000002 00000002 00001AA8   A 4      +
 00000002 00000008 00001B90   A 4      +
 00000002 0000000F 00001B98   A 4      +
 00000002 0000000F 00001BA0   A 4      +
 00000002 00000002 00001BA8   A 4      +
 00000002 00000002 00001C90   A 4      +
 00000002 00000002 00001CB8   A 4      +
 00000002 00000002 00001CC0   A 4      +
 00000002 00000002 00001D28   A 4      +
 00000002 00000002 00001D30   A 4      +
 00000002 00000002 00001DE8   A 4      +
 00000002 00000002 00001E10   A 4      +
 00000002 00000002 00001E18   A 4      +
 00000002 00000008 00001EE8   A 4      +
 00000002 0000000F 00001EF0   A 4      +
 00000002 0000000F 00001EF8   A 4      +
 00000002 00000002 00001F00   A 4      +
                                                 Relocation Dictionary                                                     Page  348 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00001FB0   A 4      +
 00000002 00000002 00001FD8   A 4      +
 00000002 00000002 00001FE0   A 4      +
 00000002 00000002 00002050   A 4      +
 00000002 00000002 00002140   A 4      +
 00000002 00000002 00002168   A 4      +
 00000002 00000002 00002170   A 4      +
 00000002 00000002 00002240   A 4      +
 00000002 00000002 00002268   A 4      +
 00000002 00000002 00002290   A 4      +
 00000002 00000002 00002298   A 4      +
 00000002 00000002 00002330   A 4      +
 00000002 00000002 00002338   A 4      +
 00000002 00000008 00002348   A 4      +
 00000002 0000000F 00002350   A 4      +
 00000002 0000000F 00002358   A 4      +
 00000002 00000002 000024D8   A 4      +
 00000002 00000002 00002500   A 4      +
 00000002 00000002 00002508   A 4      +
 00000002 00000002 00002570   A 4      +
 00000002 00000002 00002578   A 4      +
 00000002 00000002 00002648   A 4      +
 00000002 00000002 00002670   A 4      +
 00000002 00000002 00002678   A 4      +
 00000002 00000008 00002748   A 4      +
 00000002 0000000F 00002750   A 4      +
 00000002 0000000F 00002758   A 4      +
 00000002 00000002 00002820   A 4      +
 00000002 00000002 00002848   A 4      +
 00000002 00000002 00002850   A 4      +
 00000002 00000002 00002940   A 4      +
 00000002 0000000F 00002948   A 4      +
 00000002 00000008 00002950   A 4      +
 00000002 0000000F 00002958   A 4      +
 00000002 00000002 00002960   A 4      +
 00000002 00000002 00002968   A 4      +
 00000002 00000002 00002A88   A 4      +
 00000002 00000002 00002AB0   A 4      +
 00000002 00000002 00002AB8   A 4      +
 00000002 00000002 00002C50   A 4      +
 00000002 00000002 00002C58   A 4      +
 00000002 00000002 00002C60   A 4      +
 00000002 00000002 00002C68   A 4      +
 00000002 00000002 00002C90   A 4      +
 00000002 00000002 00002CB8   A 4      +
 00000002 00000002 00002CC0   A 4      +
 00000002 00000002 00002D60   A 4      +
 00000002 00000005 00002D68   A 4      +
 00000002 0000000F 00002D70   A 4      +
 00000002 0000000F 00002D78   A 4      +
 00000002 0000000C 00002D80   Q 4      +
 00000002 00000008 00002D88   A 4      +
 00000002 00000006 00002D90   A 4      +
                                                 Relocation Dictionary                                                     Page  349 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00002D98   A 4      +
 00000002 00000002 00003088   A 4      +
 00000002 00000002 000030B0   A 4      +
 00000002 00000002 000030B8   A 4      +
 00000002 00000002 00003150   A 4      +
 00000002 00000002 00003158   A 4      +
 00000002 00000008 00003160   A 4      +
 00000002 0000000F 00003168   A 4      +
 00000002 0000000F 00003170   A 4      +
 00000002 00000002 000032B8   A 4      +
 00000002 00000002 000032E0   A 4      +
 00000002 00000002 000032E8   A 4      +
 00000002 00000002 00003360   A 4      +
 00000002 00000002 00003458   A 4      +
 00000002 00000002 00003480   A 4      +
 00000002 00000002 00003488   A 4      +
 00000002 00000008 00003520   A 4      +
 00000002 0000000F 00003528   A 4      +
 00000002 0000000F 00003530   A 4      +
 00000002 00000002 00003538   A 4      +
 00000002 00000002 00003690   A 4      +
 00000002 00000002 000036B8   A 4      +
 00000002 00000002 000036C0   A 4      +
 00000002 00000002 00003758   A 4      +
 00000002 00000002 00003760   A 4      +
 00000002 00000002 00003820   A 4      +
 00000002 00000002 00003848   A 4      +
 00000002 00000002 00003850   A 4      +
 00000002 00000002 00003980   A 4      +
 00000002 00000002 00003988   A 4      +
 00000002 00000008 00003990   A 4      +
 00000002 0000000F 00003998   A 4      +
 00000002 0000000F 000039A0   A 4      +
 00000002 00000002 000039C8   A 4      +
 00000002 00000002 000039F0   A 4      +
 00000002 00000002 000039F8   A 4      +
 00000002 00000002 00003A68   A 4      +
 00000002 00000008 00003A70   A 4      +
 00000002 0000000F 00003A78   A 4      +
 00000002 0000000F 00003A80   A 4      +
 00000002 00000002 00003C50   A 4      +
 00000002 00000002 00003C78   A 4      +
 00000002 00000002 00003C80   A 4      +
 00000002 00000002 00003D48   A 4      +
 00000002 00000002 00003D70   A 4      +
 00000002 00000002 00003D98   A 4      +
 00000002 00000002 00003DA0   A 4      +
 00000002 00000002 00003E68   A 4      +
 00000002 00000002 00003E90   A 4      +
 00000002 00000002 00003EB8   A 4      +
 00000002 00000002 00003EC0   A 4      +
 00000002 00000002 00003F68   A 4      +
 00000002 00000002 00003F78   A 4      +
                                                 Relocation Dictionary                                                     Page  350 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00004080   A 4      +
 00000002 00000002 000040A8   A 4      +
 00000002 00000002 000040B0   A 4      +
 00000002 00000002 00004148   A 4      +
 00000002 00000002 00004150   A 4      +
 00000002 00000002 000041F0   A 4      +
 00000002 00000002 00004218   A 4      +
 00000002 00000002 00004220   A 4      +
 00000002 00000002 000043C0   A 4      +
 00000002 00000002 000043E8   A 4      +
 00000002 00000002 000043F0   A 4      +
 00000002 00000002 00004498   A 4      +
 00000002 00000002 000044A0   A 4      +
 00000002 00000002 00004548   A 4      +
 00000002 00000002 00004570   A 4      +
 00000002 00000002 00004578   A 4      +
 00000002 00000002 000045F8   A 4      +
 00000002 00000008 00004600   A 4      +
 00000002 0000000F 00004608   A 4      +
 00000002 0000000F 00004610   A 4      +
 00000002 00000002 00004770   A 4      +
 00000002 00000002 00004798   A 4      +
 00000002 00000002 000047A0   A 4      +
 00000002 00000002 00004820   A 4      +
 00000002 00000008 00004828   A 4      +
 00000002 0000000F 00004830   A 4      +
 00000002 0000000F 00004838   A 4      +
 00000002 00000002 00004928   A 4      +
 00000002 00000002 00004950   A 4      +
 00000002 00000002 00004958   A 4      +
 00000002 00000002 00004A48   A 4      +
 00000002 00000002 00004A50   A 4      +
 00000002 00000002 00004AA0   A 4      +
 00000002 00000002 00004AA8   A 4      +
 00000002 00000002 00004B08   A 4      +
 00000002 00000002 00004B30   A 4      +
 00000002 00000002 00004B38   A 4      +
 00000002 00000002 00004BB8   A 4      +
 00000002 00000008 00004BC0   A 4      +
 00000002 0000000F 00004BC8   A 4      +
 00000002 0000000F 00004BD0   A 4      +
 00000002 00000002 00004CC0   A 4      +
 00000002 00000002 00004CE8   A 4      +
 00000002 00000002 00004CF0   A 4      +
 00000002 00000002 00004DE0   A 4      +
 00000002 00000002 00004DE8   A 4      +
 00000002 00000002 00004E10   A 4      +
 00000002 00000002 00004E38   A 4      +
 00000002 00000002 00004E40   A 4      +
 00000002 00000002 00004EB8   A 4      +
 00000002 00000002 00004FA0   A 4      +
 00000002 00000002 00004FC8   A 4      +
 00000002 00000002 00004FD0   A 4      +
                                                 Relocation Dictionary                                                     Page  351 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00005038   A 4      +
 00000002 00000002 00005040   A 4      +
 00000002 00000002 00005048   A 4      +
 00000002 00000002 00005050   A 4      +
 00000002 00000002 00005130   A 4      +
 00000002 00000002 00005158   A 4      +
 00000002 00000002 00005160   A 4      +
 00000002 00000003 000051C8   A 4      +
 00000002 00000002 000051D0   A 4      +
 00000002 00000002 00005298   A 4      +
 00000002 00000002 000052C0   A 4      +
 00000002 00000002 000052C8   A 4      +
 00000002 00000005 00005490   A 4      +
 00000002 0000000F 00005498   A 4      +
 00000002 0000000C 000054A0   Q 4      +
 00000002 00000008 000054A8   A 4      +
 00000002 0000000F 000054B0   A 4      +
 00000002 0000000A 000054B8   A 4      +
 00000002 00000002 000054D8   A 4      +
 00000002 00000002 00005500   A 4      +
 00000002 00000002 00005508   A 4      +
 00000002 00000005 00005670   A 4      +
 00000002 0000000F 00005678   A 4      +
 00000002 0000000C 00005680   Q 4      +
 00000002 00000002 00005688   A 4      +
 00000002 00000008 00005690   A 4      +
 00000002 0000000F 00005698   A 4      +
 00000002 00000002 00005788   A 4      +
 00000002 00000002 000057B0   A 4      +
 00000002 00000002 000057B8   A 4      +
 00000002 00000002 00005858   A 4      +
 00000002 00000002 00005860   A 4      +
 00000002 00000005 00005868   A 4      +
 00000002 0000000F 00005870   A 4      +
 00000002 0000000C 00005878   Q 4      +
 00000002 00000002 00005880   A 4      +
 00000002 00000002 000059F0   A 4      +
 00000002 00000002 00005A18   A 4      +
 00000002 00000002 00005A20   A 4      +
 00000002 00000002 00005C90   A 4      +
 00000002 00000002 00005C98   A 4      +
 00000002 00000005 00005CA0   A 4      +
 00000002 0000000F 00005CA8   A 4      +
 00000002 0000000F 00005CB0   A 4      +
 00000002 0000000C 00005CB8   Q 4      +
 00000002 00000009 00005CBC   Q 4      +
 00000002 00000008 00005CC0   A 4      +
 00000002 00000002 00005CD0   A 4      +
 00000002 00000002 00005CD8   A 4      +
 00000002 00000002 00005CE0   A 4      +
 00000002 00000005 00006410   A 4      +
 00000002 0000000F 00006418   A 4      +
 00000002 0000000F 00006420   A 4      +
                                                 Relocation Dictionary                                                     Page  352 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 0000000C 00006428   Q 4      +
 00000002 00000009 0000642C   Q 4      +
 00000002 00000008 00006430   A 4      +
 00000002 00000002 00006438   A 4      +
 00000002 00000002 00006440   A 4      +
 00000002 00000002 00006448   A 4      +
 00000002 00000002 00006BA8   A 4      +
 00000002 00000002 00006BD0   A 4      +
 00000002 00000002 00006BD8   A 4      +
 00000002 00000008 00006DB8   A 4      +
 00000002 0000000F 00006DC0   A 4      +
 00000002 0000000F 00006DC8   A 4      +
 00000002 00000002 00006DD0   A 4      +
 00000002 00000005 00006DD8   A 4      +
 00000002 0000000C 00006DE0   Q 4      +
 00000002 00000009 00006DE4   Q 4      +
 00000002 00000002 00006DF0   A 4      +
 00000002 00000002 00006DF8   A 4      +
 00000002 00000002 00006E00   A 4      +
 00000002 00000002 00006E08   A 4      +
 00000002 00000002 00006E10   A 4      +
 00000002 00000005 00007560   A 4      +
 00000002 0000000F 00007568   A 4      +
 00000002 0000000F 00007570   A 4      +
 00000002 0000000C 00007578   Q 4      +
 00000002 00000009 0000757C   Q 4      +
 00000002 00000008 00007580   A 4      +
 00000002 00000002 00007588   A 4      +
 00000002 00000002 00007590   A 4      +
 00000002 00000002 00007598   A 4      +
 00000002 00000002 00007D40   A 4      +
 00000002 00000002 00007D68   A 4      +
 00000002 00000002 00007D70   A 4      +
 00000002 00000002 00007FD8   A 4      +
 00000002 00000002 00007FE0   A 4      +
 00000002 00000005 00007FE8   A 4      +
 00000002 0000000F 00007FF0   A 4      +
 00000002 0000000F 00007FF8   A 4      +
 00000002 0000000C 00008000   Q 4      +
 00000002 00000009 00008004   Q 4      +
 00000002 00000008 00008008   A 4      +
 00000002 00000002 00008018   A 4      +
 00000002 00000002 00008020   A 4      +
 00000002 00000002 00008028   A 4      +
 00000002 00000009 00008738   Q 4      +
 00000002 00000008 00008740   A 4      +
 00000002 00000002 00008750   A 4      +
 00000002 00000005 00008758   A 4      +
 00000002 0000000F 00008760   A 4      +
 00000002 0000000F 00008768   A 4      +
 00000002 0000000C 00008770   Q 4      +
 00000002 00000002 00008778   A 4      +
 00000002 00000002 00008780   A 4      +
                                                 Relocation Dictionary                                                     Page  353 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00008788   A 4      +
 00000002 00000002 00008790   A 4      +
 00000002 00000009 00009100   Q 4      +
 00000002 00000008 00009108   A 4      +
 00000002 00000002 00009110   A 4      +
 00000002 00000005 00009118   A 4      +
 00000002 0000000F 00009120   A 4      +
 00000002 0000000F 00009128   A 4      +
 00000002 0000000C 00009130   Q 4      +
 00000002 00000002 00009138   A 4      +
 00000002 00000002 00009140   A 4      +
 00000002 00000002 000096F0   A 4      +
 00000002 00000002 00009718   A 4      +
 00000002 00000002 00009720   A 4      +
 00000002 00000002 000097E8   A 4      +
 00000002 00000002 000097F0   A 4      +
 00000002 00000002 000097F8   A 4      +
 00000002 00000002 00009800   A 4      +
 00000002 00000002 00009808   A 4      +
 00000002 00000002 00009810   A 4      +
 00000002 00000005 00009818   A 4      +
 00000002 0000000F 00009820   A 4      +
 00000002 0000000F 00009828   A 4      +
 00000002 0000000C 00009830   Q 4      +
 00000002 00000009 00009834   Q 4      +
 00000002 00000008 00009838   A 4      +
 00000002 00000002 00009848   A 4      +
 00000002 00000002 00009850   A 4      +
 00000002 00000002 00009858   A 4      +
 00000002 00000002 00009860   A 4      +
 00000002 0000000F 00009868   A 4      +
 00000002 00000008 0000A050   A 4      +
 00000002 00000002 0000A060   A 4      +
 00000002 00000005 0000A068   A 4      +
 00000002 0000000F 0000A070   A 4      +
 00000002 0000000F 0000A078   A 4      +
 00000002 0000000C 0000A080   Q 4      +
 00000002 00000009 0000A084   Q 4      +
 00000002 00000002 0000A088   A 4      +
 00000002 00000002 0000A298   A 4      +
 00000002 00000002 0000A2C0   A 4      +
 00000002 00000002 0000A2C8   A 4      +
 00000002 00000008 0000A4B8   A 4      +
 00000002 0000000F 0000A4C0   A 4      +
 00000002 0000000F 0000A4C8   A 4      +
 00000002 0000000F 0000A4D0   A 4      +
 00000002 00000002 0000A4D8   A 4      +
 00000002 00000005 0000A4E0   A 4      +
 00000002 0000000C 0000A4E8   Q 4      +
 00000002 00000009 0000A4EC   Q 4      +
 00000002 00000002 0000AAC8   A 4      +
 00000002 00000002 0000AAF0   A 4      +
 00000002 00000002 0000AAF8   A 4      +
                                                 Relocation Dictionary                                                     Page  354 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 0000ACA8   A 4      +
 00000002 00000002 0000ACB0   A 4      +
 00000002 00000002 0000ACB8   A 4      +
 00000002 00000005 0000ACC0   A 4      +
 00000002 0000000F 0000ACC8   A 4      +
 00000002 0000000F 0000ACD0   A 4      +
 00000002 0000000C 0000ACD8   Q 4      +
 00000002 0000000F 0000ACE0   A 4      +
 00000002 00000009 0000ACE8   Q 4      +
 00000002 00000008 0000ACF0   A 4      +
 00000002 00000002 0000ACF8   A 4      +
 00000002 00000002 0000AF08   A 4      +
 00000002 00000002 0000AF30   A 4      +
 00000002 00000002 0000AF38   A 4      +
 00000002 0000000F 0000AFA8   A 4      +
 00000002 00000002 0000AFB0   A 4      +
 00000002 00000002 0000AFB8   A 4      +
 00000002 00000002 0000AFC0   A 4      +
 00000002 00000002 0000AFC8   A 4      +
 00000002 00000002 0000AFD0   A 4      +
 00000002 00000005 0000AFD8   A 4      +
 00000002 0000000F 0000AFE0   A 4      +
 00000002 0000000F 0000AFE8   A 4      +
 00000002 0000000C 0000AFF0   Q 4      +
 00000002 00000009 0000AFF4   Q 4      +
 00000002 00000008 0000AFF8   A 4      +
 00000002 00000002 0000B000   A 4      +
 00000002 00000002 0000B008   A 4      +
 00000002 00000002 0000B010   A 4      +
 00000002 00000008 0000B8A0   A 4      +
 00000002 00000002 0000B8A8   A 4      +
 00000002 00000002 0000B8B0   A 4      +
 00000002 00000005 0000B8B8   A 4      +
 00000002 0000000F 0000B8C0   A 4      +
 00000002 0000000F 0000B8C8   A 4      +
 00000002 0000000F 0000B8D0   A 4      +
 00000002 0000000C 0000B8D8   Q 4      +
 00000002 00000009 0000B8DC   Q 4      +
 00000002 00000002 0000B8E0   A 4      +
 00000002 00000002 0000B8E8   A 4      +
 00000002 00000002 0000B8F0   A 4      +
 00000002 00000002 0000BE70   A 4      +
 00000002 00000002 0000BE98   A 4      +
 00000002 00000002 0000BEA0   A 4      +
 00000002 00000002 0000BF78   A 4      +
 00000002 00000002 0000BF80   A 4      +
 00000002 00000002 0000BF88   A 4      +
 00000002 00000002 0000BF90   A 4      +
 00000002 00000002 0000BF98   A 4      +
 0000000F 0000000F 0000C1C0   A 4      +
 0000000F 0000000F 0000C1C8   A 4      +
 0000000F 0000000F 0000C1D0   A 4      +
 0000000F 0000000F 0000C260   A 4      +
                                                 Relocation Dictionary                                                     Page  355 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 0000000F 0000000F 0000C268   A 4      +
 0000000F 0000000F 0000C270   A 4      +
 0000000F 0000000F 0000C278   A 4      +
 0000000F 0000000F 0000C308   A 4      +
 0000000F 0000000F 0000C310   A 4      +
 0000000F 0000000F 0000C318   A 4      +
 0000000F 0000000F 0000C320   A 4      +
 0000000F 0000000F 0000C3B0   A 4      +
 0000000F 0000000F 0000C3B8   A 4      +
 0000000F 0000000F 0000C3C0   A 4      +
 0000000F 0000000F 0000C3C8   A 4      +
 0000000F 0000000F 0000C458   A 4      +
 0000000F 0000000F 0000C460   A 4      +
 0000000F 0000000F 0000C468   A 4      +
 0000000F 0000000F 0000C470   A 4      +
 0000000F 0000000F 0000C500   A 4      +
 0000000F 0000000F 0000C508   A 4      +
 0000000F 0000000F 0000C510   A 4      +
 0000000F 0000000F 0000C518   A 4      +
 0000000F 0000000F 0000C5A8   A 4      +
 0000000F 0000000F 0000C5B0   A 4      +
 0000000F 0000000F 0000C5B8   A 4      +
 0000000F 0000000F 0000C5C0   A 4      +
 0000000F 0000000F 0000C650   A 4      +
 0000000F 0000000F 0000C658   A 4      +
 0000000F 0000000F 0000C660   A 4      +
 0000000F 0000000F 0000C668   A 4      +
 0000000F 0000000F 0000C6F8   A 4      +
 0000000F 0000000F 0000C700   A 4      +
 0000000F 0000000F 0000C708   A 4      +
 0000000F 0000000F 0000C710   A 4      +
 0000000F 0000000F 0000C7A0   A 4      +
 0000000F 0000000F 0000C7A8   A 4      +
 0000000F 0000000F 0000C848   A 4      +
 0000000F 0000000F 0000C850   A 4      +
 0000000F 0000000F 0000C8F0   A 4      +
 0000000F 0000000F 0000C8F8   A 4      +
 0000000F 0000000F 0000C998   A 4      +
 0000000F 0000000F 0000C9A0   A 4      +
 0000000F 0000000F 0000C9A8   A 4      +
 0000000F 0000000F 0000C9C0   A 4      +
 0000000F 0000000F 0000CA40   A 4      +
 00000013 0000000E 0000E42C   Q 4      +
 00000013 0000000E 0000E54C   Q 4      +
 00000013 0000000E 0000E60C   Q 4      +
 00000013 0000000E 0000E634   Q 4      +
                                                 DSECT Cross Reference                                                     Page  356 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
@AUTO#do_unittest_erase
         00000120  FFFFFFBF  16741
@AUTO#do_unittest_iov_verify0
         000001B0  FFFFFFC1  15085
@AUTO#do_unittest_read_verify0
         000004F8  FFFFFFC4  11424
@AUTO#do_unittest_write_iov
         000000F8  FFFFFFC0  15435
@AUTO#do_unittest_write_read
         000019FC  FFFFFFC5  10033
@AUTO#do_unittest_write_read_payload_correctness
         00000138  FFFFFFC2  14424
@AUTO#do_unittest_write_split_seek
         000019CC  FFFFFFC3  13432
@AUTO#extra_alloc
         000000B0  FFFFFFEF  01757
@AUTO#rd_buf_alloc_segment
         000000A8  FFFFFFED  02173
@AUTO#rd_buf_alloc_segment0
         000000A8  FFFFFFEE  02006
@AUTO#rd_buf_append_segment
         000000A8  FFFFFFF0  01656
@AUTO#rd_buf_destroy
         000000A8  FFFFFFE7  03095
@AUTO#rd_buf_destroy_segment
         000000A8  FFFFFFE8  02956
@AUTO#rd_buf_dump
         000000B0  FFFFFFC7  08448
@AUTO#rd_buf_erase
         000000B0  FFFFFFDE  04824
@AUTO#rd_buf_get_segment_at_offset
         000000A8  FFFFFFEA  02576
@AUTO#rd_buf_get_writable
         000000A8  FFFFFFE4  03534
@AUTO#rd_buf_get_writable0
         000000B0  FFFFFFE5  03424
@AUTO#rd_buf_get_write_iov
         000000B0  FFFFFFDC  05194
@AUTO#rd_buf_init
         000000B0  FFFFFFE6  03263
@AUTO#rd_buf_len
         000000A8  FFFFFFF9  00731
@AUTO#rd_buf_push0
         000000A8  FFFFFFDF  04477
@AUTO#rd_buf_write
         000000B0  FFFFFFE3  03758
@AUTO#rd_buf_write_ensure
         000000B0  FFFFFFEB  02452
@AUTO#rd_buf_write_ensure_contig
         000000B0  FFFFFFEC  02315
@AUTO#rd_buf_write_pos
         000000A8  FFFFFFFC  00491
@AUTO#rd_buf_write_remains
                                                 DSECT Cross Reference                                                     Page  357 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
         000000A8  FFFFFFFB  00567
@AUTO#rd_buf_write_seek
         000000B0  FFFFFFDD  05034
@AUTO#rd_buf_write_slice
         000000B0  FFFFFFE2  03903
@AUTO#rd_buf_write_update
         000000B0  FFFFFFE0  04285
@AUTO#rd_crc32_finalize
         000000A8  FFFFFFF3  01308
@AUTO#rd_crc32_init
         000000A8  FFFFFFF5  01097
@AUTO#rd_crc32_update
         000000AC  FFFFFFF4  01231
@AUTO#rd_free
         000000A8  FFFFFFFE  00266
@AUTO#rd_malloc
         000000A8  FFFFFFFF  00163
@AUTO#rd_segment_destroy
         000000A8  FFFFFFF2  01431
@AUTO#rd_segment_dump
         000000A8  FFFFFFC8  08217
@AUTO#rd_segment_init
         000000A8  FFFFFFF1  01510
@AUTO#rd_segment_split
         000000B0  FFFFFFE9  02777
@AUTO#rd_segment_write_remains
         000000A8  FFFFFFFA  00660
@AUTO#rd_segment_write_update
         000000B0  FFFFFFE1  04071
@AUTO#rd_slice_abs_offset
         000000A8  FFFFFFF7  00933
@AUTO#rd_slice_crc32
         000000B0  FFFFFFCA  07897
@AUTO#rd_slice_crc32c
         000000B0  FFFFFFC9  08033
@AUTO#rd_slice_dump
         000000B0  FFFFFFC6  08648
@AUTO#rd_slice_ensure_contig
         000000A8  FFFFFFD2  06797
@AUTO#rd_slice_get_iov
         000000D0  FFFFFFCB  07742
@AUTO#rd_slice_init
         000000A8  FFFFFFDA  05531
@AUTO#rd_slice_init_full
         000000AC  FFFFFFD9  05673
@AUTO#rd_slice_init_seg
         000000A8  FFFFFFDB  05391
@AUTO#rd_slice_narrow
         000000A8  FFFFFFD0  07130
@AUTO#rd_slice_narrow_copy
         000000A8  FFFFFFCD  07472
@AUTO#rd_slice_narrow_copy_relative
         000000A8  FFFFFFCC  07592
                                                 DSECT Cross Reference                                                     Page  358 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
@AUTO#rd_slice_narrow_relative
         000000A8  FFFFFFCF  07250
@AUTO#rd_slice_offset
         000000A8  FFFFFFF6  01023
@AUTO#rd_slice_peek
         000000D0  FFFFFFD4  06452
@AUTO#rd_slice_peeker
         000000A8  FFFFFFD6  06122
@AUTO#rd_slice_pos
         000000D0  FFFFFFF8  00846
@AUTO#rd_slice_read
         000000B0  FFFFFFD5  06314
@AUTO#rd_slice_read_uvarint
         000000B0  FFFFFFD3  06647
@AUTO#rd_slice_reader
         000000A8  FFFFFFD7  06015
@AUTO#rd_slice_reader0
         000000B0  FFFFFFD8  05905
@AUTO#rd_slice_seek
         000000B0  FFFFFFD1  06983
@AUTO#rd_slice_widen
         000000A8  FFFFFFCE  07326
@AUTO#rd_strdup
         000000A8  FFFFFFFD  00397
@AUTO#unittest_rdbuf
         000000AC  FFFFFFBE  16890
                                          Macro and Copy Code Source Summary                                               Page  359 
Source                                                    Members                                     DASM V1.95.14 2021/04/30 15:35 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  360 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
    99  00000096  00000002 USING  ORDINARY    00000058 00001000 00000002  12 00108    125 @REGION_752_1,12
   158  00000168  00000002 DROP                                           12              12
   226  000001FE  00000002 USING  ORDINARY    000001C0 00001000 00000002  12 000A8    233 @REGION_754_1,12
   261  00000270  00000002 DROP                                           12              12
   329  00000306  00000002 USING  ORDINARY    000002C8 00001000 00000002  12 00108    359 @REGION_755_1,12
   392  000003D8  00000002 DROP                                           12              12
   449  00000442  00000002 USING  ORDINARY    00000438 00001000 00000002  12 00036    464 @REGION_784_1,12
   486  0000047C  00000002 DROP                                           12              12
   619  0000058A  00000002 USING  ORDINARY    00000580 00001000 00000002  12 0004E    633 @REGION_786_1,12
   655  000005DC  00000002 DROP                                           12              12
   794  000006F6  00000002 USING  ORDINARY    000006B8 00001000 00000002  12 0008A    807 @REGION_803_1,12
   841  0000078A  00000002 DROP                                           12              12
   899  000007FA  00000002 USING  ORDINARY    000007F0 00001000 00000002  12 0003A    908 @REGION_804_1,12
   928  00000838  00000002 DROP                                           12              12
   985  000008A2  00000002 USING  ORDINARY    00000898 00001000 00000002  12 0004A    996 @REGION_805_1,12
  1018  000008F0  00000002 DROP                                           12              12
  1160  00000A06  00000002 USING  ORDINARY    000009C8 00001000 00000002  12 00090   1202 @REGION_832_1,12
  1226  00000AC0  00000002 DROP                                           12              12
  1371  00000BE6  00000002 USING  ORDINARY    00000BA8 00001000 00000002  12 000E0   1397 @REGION_839_1,12
  1426  00000C90  00000002 DROP                                           12              12
  1573  00000DCE  00000002 USING  ORDINARY    00000D90 00001000 00000002  12 000F0   1623 @REGION_841_1,12
  1651  00000ECC  00000002 DROP                                           12              12
  1708  00000F32  00000002 USING  ORDINARY    00000F28 00001000 00000002  12 00058   1727 @REGION_842_1,12
  1752  00000F8E  00000002 DROP                                           12              12
  1821  0000102E  00000002 USING  ORDINARY    00000FF0 00001000 00000002  12 00224   1970 @REGION_843_1,12
  2001  00001260  00000002 DROP                                           12              12
  2069  00001306  00000002 USING  ORDINARY    000012C8 00001000 00000002  12 000F2   2141 @REGION_844_1,12
  2168  00001434  00000002 DROP                                           12              12
  2238  000014DE  00000002 USING  ORDINARY    000014A0 00001000 00000002  12 000F8   2280 @REGION_796_1,12
  2310  000015A0  00000002 DROP                                           12              12
  2381  0000163E  00000002 USING  ORDINARY    00001600 00001000 00000002  12 000A4   2425 @REGION_797_1,12
  2447  0000170E  00000002 DROP                                           12              12
  2507  00001782  00000002 USING  ORDINARY    00001778 00001000 00000002  12 00082   2555 @REGION_845_1,12
  2571  00001808  00000002 DROP                                           12              12
  2639  000018A6  00000002 USING  ORDINARY    00001868 00001000 00000002  12 001E0   2703 @REGION_846_1,12
  2772  00001A50  00000002 DROP                                           12              12
  2841  00001AF6  00000002 USING  ORDINARY    00001AB8 00001000 00000002  12 00162   2926 @REGION_847_1,12
  2951  00001C74  00000002 DROP                                           12              12
  3021  00001D0E  00000002 USING  ORDINARY    00001CD0 00001000 00000002  12 000B2   3064 @REGION_800_1,12
  3090  00001DCA  00000002 DROP                                           12              12
  3160  00001E66  00000002 USING  ORDINARY    00001E28 00001000 00000002  12 00118   3232 @REGION_799_1,12
  3258  00001F88  00000002 DROP                                           12              12
  3327  0000202E  00000002 USING  ORDINARY    00001FF0 00001000 00000002  12 000E4   3394 @REGION_838_1,12
  3419  0000211C  00000002 DROP                                           12              12
  3490  000021BE  00000002 USING  ORDINARY    00002180 00001000 00000002  12 000C0   3502 @REGION_795_1,12
  3529  00002248  00000002 DROP                                           12              12
  3599  000022E6  00000002 USING  ORDINARY    000022A8 00001000 00000002  12 001C0   3725 @REGION_790_1,12
  3753  000024B4  00000002 DROP                                           12              12
  3830  00002556  00000002 USING  ORDINARY    00002518 00001000 00000002  12 00096   3874 @REGION_791_1,12
  3898  00002624  00000002 DROP                                           12              12
  3971  000026C6  00000002 USING  ORDINARY    00002688 00001000 00000002  12 0012A   4042 @REGION_848_1,12
                                                      Using Map                                                            Page  361 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  4066  000027FA  00000002 DROP                                           12              12
  4139  0000289E  00000002 USING  ORDINARY    00002860 00001000 00000002  12 001B2   4253 @REGION_792_1,12
  4280  00002A68  00000002 DROP                                           12              12
  4353  00002B06  00000002 USING  ORDINARY    00002AC8 00001000 00000002  12 001A0   4435 @REGION_793_1,12
  4472  00002C70  00000002 DROP                                           12              12
  4542  00002D0E  00000002 USING  ORDINARY    00002CD0 00001000 00000002  12 00336   4790 @REGION_794_1,12
  4819  0000306A  00000002 DROP                                           12              12
  4898  00003106  00000002 USING  ORDINARY    000030C8 00001000 00000002  12 00180   5000 @REGION_789_1,12
  5029  00003290  00000002 DROP                                           12              12
  5100  00003336  00000002 USING  ORDINARY    000032F8 00001000 00000002  12 000E6   5160 @REGION_798_1,12
  5189  00003436  00000002 DROP                                           12              12
  5264  000034D6  00000002 USING  ORDINARY    00003498 00001000 00000002  12 00196   5357 @REGION_806_1,12
  5386  00003676  00000002 DROP                                           12              12
  5456  0000370E  00000002 USING  ORDINARY    000036D0 00001000 00000002  12 000E4   5500 @REGION_807_1,12
  5526  000037FC  00000002 DROP                                           12              12
  5596  0000389E  00000002 USING  ORDINARY    00003860 00001000 00000002  12 00140   5635 @REGION_808_1,12
  5668  000039A8  00000002 DROP                                           12              12
  5739  00003A46  00000002 USING  ORDINARY    00003A08 00001000 00000002  12 001E4   5866 @REGION_849_1,12
  5900  00003C34  00000002 DROP                                           12              12
  5973  00003CCE  00000002 USING  ORDINARY    00003C90 00001000 00000002  12 000B8   5983 @REGION_809_1,12
  6010  00003D50  00000002 DROP                                           12              12
  6080  00003DEE  00000002 USING  ORDINARY    00003DB0 00001000 00000002  12 000B8   6090 @REGION_810_1,12
  6117  00003E70  00000002 DROP                                           12              12
  6187  00003F0E  00000002 USING  ORDINARY    00003ED0 00001000 00000002  12 0014A   6277 @REGION_811_1,12
  6309  00004062  00000002 DROP                                           12              12
  6384  000040FE  00000002 USING  ORDINARY    000040C0 00001000 00000002  12 000C6   6421 @REGION_812_1,12
  6447  000041CE  00000002 DROP                                           12              12
  6518  0000426E  00000002 USING  ORDINARY    00004230 00001000 00000002  12 00124   6617 @REGION_813_1,12
  6642  0000439C  00000002 DROP                                           12              12
  6719  0000443E  00000002 USING  ORDINARY    00004400 00001000 00000002  12 000E0   6764 @REGION_815_1,12
  6792  00004528  00000002 DROP                                           12              12
  6862  000045C6  00000002 USING  ORDINARY    00004588 00001000 00000002  12 00180   6948 @REGION_816_1,12
  6978  00004750  00000002 DROP                                           12              12
  7049  000047EE  00000002 USING  ORDINARY    000047B0 00001000 00000002  12 0010A   7097 @REGION_820_1,12
  7125  00004902  00000002 DROP                                           12              12
  7195  000049A6  00000002 USING  ORDINARY    00004968 00001000 00000002  12 000E8   7216 @REGION_821_1,12
  7245  00004A58  00000002 DROP                                           12              12
  7391  00004B86  00000002 USING  ORDINARY    00004B48 00001000 00000002  12 00104   7439 @REGION_823_1,12
  7467  00004C94  00000002 DROP                                           12              12
  7537  00004D3E  00000002 USING  ORDINARY    00004D00 00001000 00000002  12 000E8   7558 @REGION_824_1,12
  7587  00004DF0  00000002 DROP                                           12              12
  7657  00004E8E  00000002 USING  ORDINARY    00004E50 00001000 00000002  12 000DC   7708 @REGION_817_1,12
  7737  00004F84  00000002 DROP                                           12              12
  7814  0000501E  00000002 USING  ORDINARY    00004FE0 00001000 00000002  12 000A2   7867 @REGION_818_1,12
  7892  0000510E  00000002 DROP                                           12              12
  7965  000051AE  00000002 USING  ORDINARY    00005170 00001000 00000002  12 00092   8004 @REGION_819_1,12
  8028  00005278  00000002 DROP                                           12              12
  8099  00005316  00000002 USING  ORDINARY    000052D8 00001000 00000002  12 001E0   8178 @REGION_850_1,12
  8212  000054C0  00000002 DROP                                           12              12
  8282  00005556  00000002 USING  ORDINARY    00005518 00001000 00000002  12 0020E   8419 @REGION_801_1,12
  8443  0000576E  00000002 DROP                                           12              12
  8514  00005806  00000002 USING  ORDINARY    000057C8 00001000 00000002  12 001B2   8621 @REGION_825_1,12
  8643  000059CA  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  362 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  8712  00005A6E  00000002 USING  ORDINARY    00005A30 00001000 00000002  12 002B8   8876 @REGION_851_1,12
  8877  00005C80  00000002 DROP                                           12              12
  8878  00005C80  00000002 USING  ORDINARY    0000631C 00001000 00000002  12 00812   8879 @REGION_851_2,12
  8880  00005C84  00000002 DROP                                           12              12
  8881  00005C84  00000002 USING  ORDINARY    00005A30 00001000 00000002  12 003DA   8979 @REGION_851_1,12
  8980  00005E06  00000002 DROP                                           12              12
  8981  00005E06  00000002 USING  ORDINARY    0000631C 00001000 00000002  12 00812   8982 @REGION_851_2,12
  8983  00005E0A  00000002 DROP                                           12              12
  8984  00005E0A  00000002 USING  ORDINARY    00005A30 00001000 00000002  12 0050C   9072 @REGION_851_1,12
  9073  00005F38  00000002 DROP                                           12              12
  9074  00005F38  00000002 USING  ORDINARY    0000631C 00001000 00000002  12 00812   9075 @REGION_851_2,12
  9076  00005F3C  00000002 DROP                                           12              12
  9077  00005F3C  00000002 USING  ORDINARY    00005A30 00001000 00000002  12 0062E   9161 @REGION_851_1,12
  9162  0000605A  00000002 DROP                                           12              12
  9163  0000605A  00000002 USING  ORDINARY    0000631C 00001000 00000002  12 00812   9164 @REGION_851_2,12
  9165  0000605E  00000002 DROP                                           12              12
  9166  0000605E  00000002 USING  ORDINARY    00005A30 00001000 00000002  12 00760   9255 @REGION_851_1,12
  9256  0000618C  00000002 DROP                                           12              12
  9257  0000618C  00000002 USING  ORDINARY    0000631C 00001000 00000002  12 00812   9258 @REGION_851_2,12
  9259  00006190  00000002 DROP                                           12              12
  9260  00006190  00000002 USING  ORDINARY    00005A30 00001000 00000002  12 00882   9346 @REGION_851_1,12
  9347  000062AE  00000002 DROP                                           12              12
  9348  000062AE  00000002 USING  ORDINARY    0000631C 00001000 00000002  12 00812   9349 @REGION_851_2,12
  9350  000062B2  00000002 DROP                                           12              12
  9351  000062B2  00000002 USING  ORDINARY    00005A30 00001000 00000002  12 008E6   9393 @REGION_851_1,12
  9394  00006312  00000002 DROP                                           12              12
  9395  00006312  00000002 USING  ORDINARY    0000631C 00001000 00000002  12 00138   9396 @REGION_851_2,12
  9397  00006316  00000002 DROP                                           12              12
  9398  00006316  00000002 USING  ORDINARY    00005A30 00001000 00000002  12 00298   9399 @REGION_851_1,12
  9401  0000631C  00000002 DROP                                           12              12
  9402  0000631C  00000002 USING  ORDINARY    0000631C 00001000 00000002  12 00812  10005 @REGION_851_2,12
 10007  00006B34  00000002 DROP                                           12              12
 10008  00006B34  00000002 USING  ORDINARY    00006B34 00001000 00000002  12 00000        @REGION_851_3,12
 10028  00006B7C  00000002 DROP                                           12              12
 10113  00006C26  00000002 USING  ORDINARY    00006BE8 00001000 00000002  12 00230  10233 @REGION_852_1,12
 10234  00006DA6  00000002 DROP                                           12              12
 10235  00006DA6  00000002 USING  ORDINARY    00007468 00001000 00000002  12 0085C  10236 @REGION_852_2,12
 10237  00006DAA  00000002 DROP                                           12              12
 10238  00006DAA  00000002 USING  ORDINARY    00006BE8 00001000 00000002  12 00378  10348 @REGION_852_1,12
 10349  00006F5C  00000002 DROP                                           12              12
 10350  00006F5C  00000002 USING  ORDINARY    00007468 00001000 00000002  12 0085C  10351 @REGION_852_2,12
 10352  00006F60  00000002 DROP                                           12              12
 10353  00006F60  00000002 USING  ORDINARY    00006BE8 00001000 00000002  12 004EE  10465 @REGION_852_1,12
 10466  000070D2  00000002 DROP                                           12              12
 10467  000070D2  00000002 USING  ORDINARY    00007468 00001000 00000002  12 0085C  10468 @REGION_852_2,12
 10469  000070D6  00000002 DROP                                           12              12
 10470  000070D6  00000002 USING  ORDINARY    00006BE8 00001000 00000002  12 00600  10551 @REGION_852_1,12
 10552  000071E4  00000002 DROP                                           12              12
 10553  000071E4  00000002 USING  ORDINARY    00007468 00001000 00000002  12 0085C  10554 @REGION_852_2,12
 10555  000071E8  00000002 DROP                                           12              12
 10556  000071E8  00000002 USING  ORDINARY    00006BE8 00001000 00000002  12 00722  10643 @REGION_852_1,12
 10644  00007306  00000002 DROP                                           12              12
 10645  00007306  00000002 USING  ORDINARY    00007468 00001000 00000002  12 0085C  10646 @REGION_852_2,12
                                                      Using Map                                                            Page  363 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 10647  0000730A  00000002 DROP                                           12              12
 10648  0000730A  00000002 USING  ORDINARY    00006BE8 00001000 00000002  12 0083A  10729 @REGION_852_1,12
 10730  0000741E  00000002 DROP                                           12              12
 10731  0000741E  00000002 USING  ORDINARY    00007468 00001000 00000002  12 0085C  10732 @REGION_852_2,12
 10733  00007422  00000002 DROP                                           12              12
 10734  00007422  00000002 USING  ORDINARY    00006BE8 00001000 00000002  12 00228  10766 @REGION_852_1,12
 10768  00007468  00000002 DROP                                           12              12
 10769  00007468  00000002 USING  ORDINARY    00007468 00001000 00000002  12 0085C  11396 @REGION_852_2,12
 11398  00007CCA  00000002 DROP                                           12              12
 11399  00007CCA  00000002 USING  ORDINARY    00007CCA 00001000 00000002  12 00000        @REGION_852_3,12
 11419  00007D12  00000002 DROP                                           12              12
 11498  00007DBE  00000002 USING  ORDINARY    00007D80 00001000 00000002  12 002B4  11661 @REGION_853_1,12
 11662  00007FCA  00000002 DROP                                           12              12
 11663  00007FCA  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  11664 @REGION_853_3,12
 11665  00007FCE  00000002 DROP                                           12              12
 11666  00007FCE  00000002 USING  ORDINARY    00007D80 00001000 00000002  12 003D6  11765 @REGION_853_1,12
 11766  00008152  00000002 DROP                                           12              12
 11767  00008152  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  11768 @REGION_853_3,12
 11769  00008156  00000002 DROP                                           12              12
 11770  00008156  00000002 USING  ORDINARY    00007D80 00001000 00000002  12 0050E  11862 @REGION_853_1,12
 11863  0000828A  00000002 DROP                                           12              12
 11864  0000828A  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  11865 @REGION_853_3,12
 11866  0000828E  00000002 DROP                                           12              12
 11867  0000828E  00000002 USING  ORDINARY    00007D80 00001000 00000002  12 00630  11955 @REGION_853_1,12
 11956  000083AC  00000002 DROP                                           12              12
 11957  000083AC  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  11958 @REGION_853_3,12
 11959  000083B0  00000002 DROP                                           12              12
 11960  000083B0  00000002 USING  ORDINARY    00007D80 00001000 00000002  12 00752  12044 @REGION_853_1,12
 12045  000084CE  00000002 DROP                                           12              12
 12046  000084CE  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  12047 @REGION_853_3,12
 12048  000084D2  00000002 DROP                                           12              12
 12049  000084D2  00000002 USING  ORDINARY    00007D80 00001000 00000002  12 00884  12137 @REGION_853_1,12
 12138  00008600  00000002 DROP                                           12              12
 12139  00008600  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  12140 @REGION_853_3,12
 12141  00008604  00000002 DROP                                           12              12
 12142  00008604  00000002 USING  ORDINARY    00007D80 00001000 00000002  12 008B8  12165 @REGION_853_1,12
 12166  00008634  00000002 DROP                                           12              12
 12167  00008634  00000002 USING  ORDINARY    00008698 00001000 00000002  12 00100  12168 @REGION_853_2,12
 12169  00008638  00000002 DROP                                           12              12
 12170  00008638  00000002 USING  ORDINARY    00007D80 00001000 00000002  12 002B0  12191 @REGION_853_1,12
 12193  00008698  00000002 DROP                                           12              12
 12194  00008698  00000002 USING  ORDINARY    00008698 00001000 00000002  12 000B0  12236 @REGION_853_2,12
 12237  00008732  00000002 DROP                                           12              12
 12238  00008732  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  12239 @REGION_853_3,12
 12240  00008736  00000002 DROP                                           12              12
 12241  00008736  00000002 USING  ORDINARY    00008698 00001000 00000002  12 00238  12346 @REGION_853_2,12
 12347  000088CC  00000002 DROP                                           12              12
 12348  000088CC  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  12349 @REGION_853_3,12
 12350  000088D0  00000002 DROP                                           12              12
 12351  000088D0  00000002 USING  ORDINARY    00008698 00001000 00000002  12 00370  12442 @REGION_853_2,12
 12443  00008A04  00000002 DROP                                           12              12
 12444  00008A04  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  12445 @REGION_853_3,12
 12446  00008A08  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  364 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 12447  00008A08  00000002 USING  ORDINARY    00008698 00001000 00000002  12 00492  12533 @REGION_853_2,12
 12534  00008B26  00000002 DROP                                           12              12
 12535  00008B26  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  12536 @REGION_853_3,12
 12537  00008B2A  00000002 DROP                                           12              12
 12538  00008B2A  00000002 USING  ORDINARY    00008698 00001000 00000002  12 005BE  12627 @REGION_853_2,12
 12628  00008C52  00000002 DROP                                           12              12
 12629  00008C52  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  12630 @REGION_853_3,12
 12631  00008C56  00000002 DROP                                           12              12
 12632  00008C56  00000002 USING  ORDINARY    00008698 00001000 00000002  12 00728  12738 @REGION_853_2,12
 12739  00008DBC  00000002 DROP                                           12              12
 12740  00008DBC  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  12741 @REGION_853_3,12
 12742  00008DC0  00000002 DROP                                           12              12
 12743  00008DC0  00000002 USING  ORDINARY    00008698 00001000 00000002  12 0082E  12817 @REGION_853_2,12
 12818  00008EC2  00000002 DROP                                           12              12
 12819  00008EC2  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  12820 @REGION_853_3,12
 12821  00008EC6  00000002 DROP                                           12              12
 12822  00008EC6  00000002 USING  ORDINARY    00008698 00001000 00000002  12 00938  12897 @REGION_853_2,12
 12898  00008FCC  00000002 DROP                                           12              12
 12899  00008FCC  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  12900 @REGION_853_3,12
 12901  00008FD0  00000002 DROP                                           12              12
 12902  00008FD0  00000002 USING  ORDINARY    00008698 00001000 00000002  12 0096C  12927 @REGION_853_2,12
 12928  00009000  00000002 DROP                                           12              12
 12929  00009000  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 000BE  12930 @REGION_853_3,12
 12931  00009004  00000002 DROP                                           12              12
 12932  00009004  00000002 USING  ORDINARY    00008698 00001000 00000002  12 000D8  12963 @REGION_853_2,12
 12965  0000908A  00000002 DROP                                           12              12
 12966  0000908A  00000002 USING  ORDINARY    0000908A 00001000 00000002  12 005E0  13401 @REGION_853_3,12
 13427  000096B2  00000002 DROP                                           12              12
 13523  0000976E  00000002 USING  ORDINARY    00009730 00001000 00000002  12 002F4  13720 @REGION_854_1,12
 13721  00009A20  00000002 DROP                                           12              12
 13722  00009A20  00000002 USING  ORDINARY    0000A012 00001000 00000002  12 00214  13723 @REGION_854_2,12
 13724  00009A24  00000002 DROP                                           12              12
 13725  00009A24  00000002 USING  ORDINARY    00009730 00001000 00000002  12 0046E  13846 @REGION_854_1,12
 13847  00009B9A  00000002 DROP                                           12              12
 13848  00009B9A  00000002 USING  ORDINARY    0000A012 00001000 00000002  12 00214  13849 @REGION_854_2,12
 13850  00009B9E  00000002 DROP                                           12              12
 13851  00009B9E  00000002 USING  ORDINARY    00009730 00001000 00000002  12 00110  13858 @REGION_854_1,12
 13859  00009BA8  00000002 DROP                                           12              12
 13860  00009BA8  00000002 USING  ORDINARY    0000A012 00001000 00000002  12 00082  13861 @REGION_854_2,12
 13862  00009BAC  00000002 DROP                                           12              12
 13863  00009BAC  00000002 USING  ORDINARY    00009730 00001000 00000002  12 007C6  14037 @REGION_854_1,12
 14038  00009DB8  00000002 DROP                                           12              12
 14039  00009DB8  00000002 USING  ORDINARY    0000A012 00001000 00000002  12 00214  14040 @REGION_854_2,12
 14041  00009DBC  00000002 DROP                                           12              12
 14042  00009DBC  00000002 USING  ORDINARY    00009730 00001000 00000002  12 007B6  14126 @REGION_854_1,12
 14127  00009EE2  00000002 DROP                                           12              12
 14128  00009EE2  00000002 USING  ORDINARY    0000A012 00001000 00000002  12 00214  14129 @REGION_854_2,12
 14130  00009EE6  00000002 DROP                                           12              12
 14131  00009EE6  00000002 USING  ORDINARY    00009730 00001000 00000002  12 007FE  14167 @REGION_854_1,12
 14168  00009F2A  00000002 DROP                                           12              12
 14169  00009F2A  00000002 USING  ORDINARY    0000A012 00001000 00000002  12 0007E  14170 @REGION_854_2,12
 14171  00009F2E  00000002 DROP                                           12              12
 14172  00009F2E  00000002 USING  ORDINARY    00009730 00001000 00000002  12 008CC  14219 @REGION_854_1,12
                                                      Using Map                                                            Page  365 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 14220  00009FF8  00000002 DROP                                           12              12
 14221  00009FF8  00000002 USING  ORDINARY    0000A012 00001000 00000002  12 00030  14222 @REGION_854_2,12
 14223  00009FFC  00000002 DROP                                           12              12
 14224  00009FFC  00000002 USING  ORDINARY    00009730 00001000 00000002  12 008DC  14227 @REGION_854_1,12
 14228  0000A008  00000002 DROP                                           12              12
 14229  0000A008  00000002 USING  ORDINARY    0000A012 00001000 00000002  12 00030  14230 @REGION_854_2,12
 14231  0000A00C  00000002 DROP                                           12              12
 14232  0000A00C  00000002 USING  ORDINARY    00009730 00001000 00000002  12 00110  14233 @REGION_854_1,12
 14235  0000A012  00000002 DROP                                           12              12
 14236  0000A012  00000002 USING  ORDINARY    0000A012 00001000 00000002  12 00214  14274 @REGION_854_2,12
 14275  0000A0A2  00000002 DROP                                           12              12
 14276  0000A0A2  00000002 USING  ORDINARY    00009730 00001000 00000002  12 0047C  14277 @REGION_854_1,12
 14278  0000A0A6  00000002 DROP                                           12              12
 14279  0000A0A6  00000002 USING  ORDINARY    0000A012 00001000 00000002  12 00214  14392 @REGION_854_2,12
 14418  0000A26E  00000002 DROP                                           12              12
 14508  0000A316  00000002 USING  ORDINARY    0000A2D8 00001000 00000002  12 0077C  15057 @REGION_855_1,12
 15059  0000AA5A  00000002 DROP                                           12              12
 15060  0000AA5A  00000002 USING  ORDINARY    0000AA5A 00001000 00000002  12 00000        @REGION_855_2,12
 15080  0000AAA2  00000002 DROP                                           12              12
 15157  0000AB46  00000002 USING  ORDINARY    0000AB08 00001000 00000002  12 00394  15404 @REGION_856_1,12
 15430  0000AEE4  00000002 DROP                                           12              12
 15503  0000AF86  00000002 USING  ORDINARY    0000AF48 00001000 00000002  12 0005C  15607 @REGION_857_1,12
 15608  0000AF96  00000002 DROP                                           12              12
 15609  0000AF96  00000002 USING  ORDINARY    0000B852 00001000 00000002  12 0054A  15610 @REGION_857_2,12
 15611  0000AF9A  00000002 DROP                                           12              12
 15612  0000AF9A  00000002 USING  ORDINARY    0000AF48 00001000 00000002  12 003E2  15852 @REGION_857_1,12
 15853  0000B322  00000002 DROP                                           12              12
 15854  0000B322  00000002 USING  ORDINARY    0000B852 00001000 00000002  12 005B8  15855 @REGION_857_2,12
 15856  0000B326  00000002 DROP                                           12              12
 15857  0000B326  00000002 USING  ORDINARY    0000AF48 00001000 00000002  12 00608  16020 @REGION_857_1,12
 16021  0000B54C  00000002 DROP                                           12              12
 16022  0000B54C  00000002 USING  ORDINARY    0000B852 00001000 00000002  12 005B8  16023 @REGION_857_2,12
 16024  0000B550  00000002 DROP                                           12              12
 16025  0000B550  00000002 USING  ORDINARY    0000AF48 00001000 00000002  12 007FE  16183 @REGION_857_1,12
 16184  0000B742  00000002 DROP                                           12              12
 16185  0000B742  00000002 USING  ORDINARY    0000B852 00001000 00000002  12 005B8  16186 @REGION_857_2,12
 16187  0000B746  00000002 DROP                                           12              12
 16188  0000B746  00000002 USING  ORDINARY    0000AF48 00001000 00000002  12 00810  16197 @REGION_857_1,12
 16198  0000B754  00000002 DROP                                           12              12
 16199  0000B754  00000002 USING  ORDINARY    0000B852 00001000 00000002  12 00546  16200 @REGION_857_2,12
 16201  0000B758  00000002 DROP                                           12              12
 16202  0000B758  00000002 USING  ORDINARY    0000AF48 00001000 00000002  12 0082E  16218 @REGION_857_1,12
 16219  0000B772  00000002 DROP                                           12              12
 16220  0000B772  00000002 USING  ORDINARY    0000B852 00001000 00000002  12 000AA  16221 @REGION_857_2,12
 16222  0000B776  00000002 DROP                                           12              12
 16223  0000B776  00000002 USING  ORDINARY    0000AF48 00001000 00000002  12 00904  16271 @REGION_857_1,12
 16272  0000B848  00000002 DROP                                           12              12
 16273  0000B848  00000002 USING  ORDINARY    0000B852 00001000 00000002  12 00044  16274 @REGION_857_2,12
 16275  0000B84C  00000002 DROP                                           12              12
 16276  0000B84C  00000002 USING  ORDINARY    0000AF48 00001000 00000002  12 0005C  16277 @REGION_857_1,12
 16279  0000B852  00000002 DROP                                           12              12
 16280  0000B852  00000002 USING  ORDINARY    0000B852 00001000 00000002  12 005B8  16686 @REGION_857_2,12
 16687  0000BDBA  00000002 DROP                                           12              12
                                                      Using Map                                                            Page  366 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
 16688  0000BDBA  00000002 USING  ORDINARY    0000AF48 00001000 00000002  12 000D0  16689 @REGION_857_1,12
 16690  0000BDBE  00000002 DROP                                           12              12
 16691  0000BDBE  00000002 USING  ORDINARY    0000B852 00001000 00000002  12 00086  16710 @REGION_857_2,12
 16736  0000BE52  00000002 DROP                                           12              12
 16819  0000BEEE  00000002 USING  ORDINARY    0000BEB0 00001000 00000002  12 000E8  16850 @REGION_802_1,12
 16885  0000BFA0  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  367 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDBUF    ..\asg\asm\rdbuf.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 15.35.15 Stop Time: 15.35.15 Processor Time: 00.00.00.0990
Return Code 000
