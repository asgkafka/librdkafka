                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdkafka_offset.obj ../asg/asm/rdkafka_offset.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdkafka_offset.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
@@ZARCH#  WX 00000001                              00
@RDKAFKA_OFFSET
          SD 00000002 00000000 00006B1A            07  @CODE
write     ER 00000003                                  WRITE
##ERROR   ER 00000004                                  __ERROR
fclose    ER 00000005                                  FCLOSE
@@ASSERT  ER 00000006                                  __ASSERT
rd_kafka_op_destroy
          ER 00000007                                  RD_KAFKA_OP_DESTROY
fflush    ER 00000008                                  FFLUSH
rd_kafka_op_new0
          ER 00000009                                  RD_KAFKA_OP_NEW0
mtx_lock  ER 0000000A                                  MTX_LOCK
fsync     ER 0000000B                                  FSYNC
rd_kafka_op_reply
          ER 0000000C                                  RD_KAFKA_OP_REPLY
rd_kafka_fetch_states
          XD 0000000D 00000003 00000000                RD_KAFKA_FETCH_STATES
rd_kafka_path_is_dir
          ER 0000000E                                  RD_KAFKA_PATH_IS_DIR
rd_kafka_q_op_err
          ER 0000000F                                  RD_KAFKA_Q_OP_ERR
mtx_unlock
          ER 00000010                                  MTX_UNLOCK
rd_kafka_consumer_err
          ER 00000011                                  RD_KAFKA_CONSUMER_ERR
fread     ER 00000012                                  FREAD
cnd_signal
          ER 00000013                                  CND_SIGNAL
rd_kafka_toppar_destroy_final
          ER 00000014                                  RD_KAFKA_TOPPAR_DESTROY_FINAL
fseek     ER 00000015                                  FSEEK
fwrite    ER 00000016                                  FWRITE
rd_kafka_toppar_offset_commit_result
          ER 00000017                                  RD_KAFKA_TOPPAR_OFFSET_COMMIT_RESULT
rd_kafka_toppar_set_fetch_state
          ER 00000018                                  RD_KAFKA_TOPPAR_SET_FETCH_STATE
rd_kafka_err2str
          ER 00000019                                  RD_KAFKA_ERR2STR
rd_kafka_q_new0
          ER 0000001A                                  RD_KAFKA_Q_NEW0
rd_kafka_q_destroy_final
          ER 0000001B                                  RD_KAFKA_Q_DESTROY_FINAL
rd_kafka_toppar_get0
          ER 0000001C                                  RD_KAFKA_TOPPAR_GET0
thrd_is_current
          ER 0000001D                                  THRD_IS_CURRENT
rd_kafka_topic_name
          ER 0000001E                                  RD_KAFKA_TOPIC_NAME
rwlock_rdlock
          ER 0000001F                                  RWLOCK_RDLOCK
rwlock_rdunlock
          ER 00000020                                  RWLOCK_RDUNLOCK
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
rd_kafka_toppar_next_offset_handle
          ER 00000021                                  RD_KAFKA_TOPPAR_NEXT_OFFSET_HANDLE
rd_kafka_topic_partition_list_new
          ER 00000022                                  RD_KAFKA_TOPIC_PARTITION_LIST_NEW
snprintf  ER 00000023                                  SNPRINTF
rd_kafka_topic_partition_list_destroy
          ER 00000024                                  RD_KAFKA_TOPIC_PARTITION_LIST_DESTROY
rd_kafka_q_purge0
          ER 00000025                                  RD_KAFKA_Q_PURGE0
rd_kafka_topic_partition_list_add
          ER 00000026                                  RD_KAFKA_TOPIC_PARTITION_LIST_ADD
free      ER 00000027                                  FREE
rd_kafka_toppar_fetch_stopped
          ER 00000028                                  RD_KAFKA_TOPPAR_FETCH_STOPPED
@@FTRUNC  ER 00000029                                  FTRUNCATE
rd_kafka_topic_partition_list_copy
          ER 0000002A                                  RD_KAFKA_TOPIC_PARTITION_LIST_COPY
fdopen    ER 0000002B                                  FDOPEN
fileno    ER 0000002C                                  FILENO
rd_kafka_toppar_offset_request
          ER 0000002D                                  RD_KAFKA_TOPPAR_OFFSET_REQUEST
rd_kafka_q_pop_serve
          ER 0000002E                                  RD_KAFKA_Q_POP_SERVE
rd_kafka_q_wait_result
          ER 0000002F                                  RD_KAFKA_Q_WAIT_RESULT
@@PT3ML   ER 00000030                                  PTHREAD_MUTEX_LOCK
@@PT3MU   ER 00000031                                  PTHREAD_MUTEX_UNLOCK
rd_kafka_timer_stop
          ER 00000032                                  RD_KAFKA_TIMER_STOP
rd_kafka_timer_start0
          ER 00000033                                  RD_KAFKA_TIMER_START0
llabs     ER 00000034                                  LLABS
strtoull  ER 00000035                                  STRTOULL
rd_kafka_topic_proper
          ER 00000036                                  RD_KAFKA_TOPIC_PROPER
rd_kafka_topic_partition_get_toppar
          ER 00000037                                  RD_KAFKA_TOPIC_PARTITION_GET_TOPPAR
strdup    ER 00000038                                  STRDUP
rd_kafka_crash
          ER 00000039                                  RD_KAFKA_CRASH
strerror  ER 0000003A                                  STRERROR
__isthreaded
          XD 0000003B 00000003 00000000                __ISTHREADED
open      ER 0000003C                                  OPEN
fcntl     ER 0000003D                                  FCNTL
rd_kafka_log0
          ER 0000003E                                  RD_KAFKA_LOG0
@rdkafka_offset&
          XD 0000003F 00000007 000008F8                @@STATIC
@rdkafka_offset
          SD 00000040 00006B20 00000D7E            07  @DATA
__isthreaded
          ER 00000041                                  @E__ISTHREADED
                                              External Symbol Dictionary                                                   Page    5 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:35 
rd_kafka_fetch_states
          ER 00000042                                  @ERD_KAFKA_FETCH_STATES
rdkafka_offset:
          SD 00000043 000078A0 000010B8            07  @@INIT@
rd_kafka_offset2str
          LD          00001BD0          00000002   00  RD_KAFKA_OFFSET2STR
rd_kafka_open_cb_linux
          LD          00001FC8          00000002   00  RD_KAFKA_OPEN_CB_LINUX
rd_kafka_open_cb_generic
          LD          00002108          00000002   00  RD_KAFKA_OPEN_CB_GENERIC
rd_kafka_commit
          LD          00003680          00000002   00  RD_KAFKA_COMMIT
rd_kafka_commit_message
          LD          000038C8          00000002   00  RD_KAFKA_COMMIT_MESSAGE
rd_kafka_commit_queue
          LD          00003AA8          00000002   00  RD_KAFKA_COMMIT_QUEUE
rd_kafka_offset_sync
          LD          00004808          00000002   00  RD_KAFKA_OFFSET_SYNC
rd_kafka_offset_store
          LD          00004950          00000002   00  RD_KAFKA_OFFSET_STORE
rd_kafka_offsets_store
          LD          00004B90          00000002   00  RD_KAFKA_OFFSETS_STORE
rd_kafka_offset_reset
          LD          000050E0          00000002   00  RD_KAFKA_OFFSET_RESET
rd_kafka_offset_store_term
          LD          00005F60          00000002   00  RD_KAFKA_OFFSET_STORE_TERM
rd_kafka_offset_store_stop
          LD          000061F0          00000002   00  RD_KAFKA_OFFSET_STORE_STOP
rd_kafka_offset_query_tmr_cb
          LD          00006610          00000002   00  RD_KAFKA_OFFSET_QUERY_TMR_CB
rd_kafka_offset_store_init
          LD          00006878          00000002   00  RD_KAFKA_OFFSET_STORE_INIT
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Fri Apr 30 15:35:49 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS X'7CD9C4D2C1C6D2C16DD6C6C6E2C5E3'
00000000                00000000 00006B1A     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS X'7C998492818692816D968686A285A3'
                                              18 write    ALIAS C'write'
                                              19          EXTRN write
                                              20 __error  ALIAS C'##ERROR'
                                              21          EXTRN __error
                                              22 fclose   ALIAS C'fclose'
                                              23          EXTRN fclose
                                              24 __assert ALIAS C'@@ASSERT'
                                              25          EXTRN __assert
                                              26 rd_kafka_op_destroy ALIAS X'99846D92818692816D96976D8485A2A39996A8'
                                              27          EXTRN rd_kafka_op_destroy
                                              28 fflush   ALIAS C'fflush'
                                              29          EXTRN fflush
                                              30 rd_kafka_op_new0 ALIAS X'99846D92818692816D96976D9585A6F0'
                                              31          EXTRN rd_kafka_op_new0
                                              32 mtx_lock ALIAS X'94A3A76D93968392'
                                              33          EXTRN mtx_lock
                                              34 fsync    ALIAS C'fsync'
                                              35          EXTRN fsync
                                              36 rd_kafka_op_reply ALIAS X'99846D92818692816D96976D99859793A8'
                                              37          EXTRN rd_kafka_op_reply
                                              38 rd_kafka_fetch_states ALIAS X'99846D92818692816D8685A383886DA2A381A385A*
                                                                2'
                                              39 rd_kafka_fetch_states DXD   0F
                                              40 rd_kafka_path_is_dir ALIAS X'99846D92818692816D9781A3886D89A26D848999'
                                              41          EXTRN rd_kafka_path_is_dir
                                              42 rd_kafka_q_op_err ALIAS X'99846D92818692816D986D96976D859999'
                                              43          EXTRN rd_kafka_q_op_err
                                              44 mtx_unlock ALIAS X'94A3A76DA49593968392'
                                              45          EXTRN mtx_unlock
                                              46 rd_kafka_consumer_err ALIAS X'99846D92818692816D839695A2A49485996D85999*
                                                                9'
                                              47          EXTRN rd_kafka_consumer_err
                                              48 fread    ALIAS C'fread'
                                              49          EXTRN fread
                                              50 cnd_signal ALIAS X'8395846DA28987958193'
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                              51          EXTRN cnd_signal
                                              52 rd_kafka_toppar_destroy_final ALIAS X'99846D92818692816DA396979781996D8*
                                                                485A2A39996A86D8689958193'
                                              53          EXTRN rd_kafka_toppar_destroy_final
                                              54 fseek    ALIAS C'fseek'
                                              55          EXTRN fseek
                                              56 fwrite   ALIAS C'fwrite'
                                              57          EXTRN fwrite
                                              58 rd_kafka_toppar_offset_commit_result ALIAS X'99846D92818692816DA3969797*
                                                                81996D968686A285A36D8396949489A36D9985A2A493A3'
                                              59          EXTRN rd_kafka_toppar_offset_commit_result
                                              60 rd_kafka_toppar_set_fetch_state ALIAS X'99846D92818692816DA396979781996*
                                                                DA285A36D8685A383886DA2A381A385'
                                              61          EXTRN rd_kafka_toppar_set_fetch_state
                                              62 rd_kafka_err2str ALIAS X'99846D92818692816D859999F2A2A399'
                                              63          EXTRN rd_kafka_err2str
                                              64 rd_kafka_q_new0 ALIAS X'99846D92818692816D986D9585A6F0'
                                              65          EXTRN rd_kafka_q_new0
                                              66 rd_kafka_q_destroy_final ALIAS X'99846D92818692816D986D8485A2A39996A86D*
                                                                8689958193'
                                              67          EXTRN rd_kafka_q_destroy_final
                                              68 rd_kafka_toppar_get0 ALIAS X'99846D92818692816DA396979781996D8785A3F0'
                                              69          EXTRN rd_kafka_toppar_get0
                                              70 thrd_is_current ALIAS X'A38899846D89A26D83A499998595A3'
                                              71          EXTRN thrd_is_current
                                              72 rd_kafka_topic_name ALIAS X'99846D92818692816DA3969789836D95819485'
                                              73          EXTRN rd_kafka_topic_name
                                              74 rwlock_rdlock ALIAS X'99A6939683926D998493968392'
                                              75          EXTRN rwlock_rdlock
                                              76 rwlock_rdunlock ALIAS X'99A6939683926D9984A49593968392'
                                              77          EXTRN rwlock_rdunlock
                                              78 rd_kafka_toppar_next_offset_handle ALIAS X'99846D92818692816DA396979781*
                                                                996D9585A7A36D968686A285A36D888195849385'
                                              79          EXTRN rd_kafka_toppar_next_offset_handle
                                              80 rd_kafka_topic_partition_list_new ALIAS X'99846D92818692816DA3969789836*
                                                                D978199A389A38996956D9389A2A36D9585A6'
                                              81          EXTRN rd_kafka_topic_partition_list_new
                                              82 snprintf ALIAS C'snprintf'
                                              83          EXTRN snprintf
                                              84 rd_kafka_topic_partition_list_destroy ALIAS X'99846D92818692816DA396978*
                                                                9836D978199A389A38996956D9389A2A36D8485A2A39996A8'
                                              85          EXTRN rd_kafka_topic_partition_list_destroy
                                              86 rd_kafka_q_purge0 ALIAS X'99846D92818692816D986D97A4998785F0'
                                              87          EXTRN rd_kafka_q_purge0
                                              88 rd_kafka_topic_partition_list_add ALIAS X'99846D92818692816DA3969789836*
                                                                D978199A389A38996956D9389A2A36D818484'
                                              89          EXTRN rd_kafka_topic_partition_list_add
                                              90 free     ALIAS C'free'
                                              91          EXTRN free
                                              92 rd_kafka_toppar_fetch_stopped ALIAS X'99846D92818692816DA396979781996D8*
                                                                685A383886DA2A39697978584'
                                              93          EXTRN rd_kafka_toppar_fetch_stopped
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                              94 ftruncate ALIAS C'@@FTRUNC'
                                              95          EXTRN ftruncate
                                              96 rd_kafka_topic_partition_list_copy ALIAS X'99846D92818692816DA396978983*
                                                                6D978199A389A38996956D9389A2A36D839697A8'
                                              97          EXTRN rd_kafka_topic_partition_list_copy
                                              98 fdopen   ALIAS C'fdopen'
                                              99          EXTRN fdopen
                                             100 fileno   ALIAS C'fileno'
                                             101          EXTRN fileno
                                             102 rd_kafka_toppar_offset_request ALIAS X'99846D92818692816DA396979781996D*
                                                                968686A285A36D998598A485A2A3'
                                             103          EXTRN rd_kafka_toppar_offset_request
                                             104 rd_kafka_q_pop_serve ALIAS X'99846D92818692816D986D9796976DA28599A585'
                                             105          EXTRN rd_kafka_q_pop_serve
                                             106 rd_kafka_q_wait_result ALIAS X'99846D92818692816D986DA68189A36D9985A2A4*
                                                                93A3'
                                             107          EXTRN rd_kafka_q_wait_result
                                             108 pthread_mutex_lock ALIAS C'@@PT3ML'
                                             109          EXTRN pthread_mutex_lock
                                             110 pthread_mutex_unlock ALIAS C'@@PT3MU'
                                             111          EXTRN pthread_mutex_unlock
                                             112 rd_kafka_timer_stop ALIAS X'99846D92818692816DA3899485996DA2A39697'
                                             113          EXTRN rd_kafka_timer_stop
                                             114 rd_kafka_timer_start0 ALIAS X'99846D92818692816DA3899485996DA2A38199A3F*
                                                                0'
                                             115          EXTRN rd_kafka_timer_start0
                                             116 llabs    ALIAS C'llabs'
                                             117          EXTRN llabs
                                             118 strtoull ALIAS C'strtoull'
                                             119          EXTRN strtoull
                                             120 rd_kafka_topic_proper ALIAS X'99846D92818692816DA3969789836D97999697859*
                                                                9'
                                             121          EXTRN rd_kafka_topic_proper
                                             122 rd_kafka_topic_partition_get_toppar ALIAS X'99846D92818692816DA39697898*
                                                                36D978199A389A38996956D8785A36DA39697978199'
                                             123          EXTRN rd_kafka_topic_partition_get_toppar
                                             124 strdup   ALIAS C'strdup'
                                             125          EXTRN strdup
                                             126 rd_kafka_crash ALIAS X'99846D92818692816D839981A288'
                                             127          EXTRN rd_kafka_crash
                                             128 strerror ALIAS C'strerror'
                                             129          EXTRN strerror
                                             130 __isthreaded ALIAS X'6D6D89A2A388998581848584'
                                             131 __isthreaded DXD   0F
                                             132 open     ALIAS C'open'
                                             133          EXTRN open
                                             134 fcntl    ALIAS C'fcntl'
                                             135          EXTRN fcntl
                                             136 rd_kafka_log0 ALIAS X'99846D92818692816D939687F0'
                                             137          EXTRN rd_kafka_log0
                                             138 *
                                             139 *
                                                                                                                           Page    9 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             140 *
                                             141 * ....... start of rd_atomic32_add
00000000                                     142 @LNAME1059 DS  0H
00000000 0000000F                            143          DC    X'0000000F'
00000004 99846D81A3969489                    144          DC    C'rd_atomic32_add'
00000013 00                                  145          DC    X'00'
                                             146 rd_atomic32_add DCCPRLG CINDEX=1059,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1059
                                             147          macro
                                             148          dccextrn &m
                                             149          gblc    &$dccext(1000)
                                             150          gbla    &$dccexti
                                             151          lcla    &i
                                             152 &$dccext(&$dccexti+1) setc    '&m'
                                             153 &i       seta    1
                                             154 .loop    aif    (&i gt &$dccexti).around
                                             155          aif    ('&$dccext(&i)' eq '&m').getout
                                             156 &i       seta    &i+1
                                             157          ago     .loop
                                             158 .around  anop
                                             159 &$dccexti seta &$dccexti+1
                                             160          extrn  &m
                                             161 .getout  anop
                                             162          mend
00000018                                     163+$eye0002    ds    0d                                                    02-DCCCA
00000018 C4C3C3                              164+         dc cl3'DCC'                                                    02-DCCCA
0000001B 01                                  165+         dc xl1'01' format one                                          02-DCCCA
0000001C 00000000                            166+         dc a(0)                                                        02-DCCCA
00000020 000000000000008A                    167+         dc ad(@PER_1059)                                               02-DCCCA
00000028 00000000000000B8                    168+         dc ad(184)                                                     02-DCCCA
00000030 0000000000000000                    169+         dc ad(0)                                                       02-DCCCA
00000038 0000000000001000                    170+         dc ad(4096)                                                    02-DCCCA
00000040 20                                  171+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000041 03                                  172+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000042 03                                  173+         dc al1(3)                                                      02-DCCCA
00000043 08                                  174+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000044 00                                  175+         dc bl.8'00000000'                                              02-DCCCA
00000045 000000                              176+         dc al3(0)                                                      02-DCCCA
00000048 0000000000000000                    177+         dc ad(@LNAME1059)                                              02-DCCCA
00000050                                     178+         ds 0d                                                          02-DCCCA
00000050 0000000000000018                    179+         dc ad($eye0002)                                                02-DCCCA
00000058 0000000000000000                    180+         dc ad(0)                                                       02-DCCCA
00000060                                     181+         ds    0d                                                       01-DCCPR
00000060                                     182+rd_atomic32_add ds 0d                                                   01-DCCPR
00000060                                     183+@REGION_1059_1 ds 0h                                                    01-DCCPR
00000060 EBEC D008 0024          00000008    184+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000066 E3E0 D088 0004          00000088    185+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000006C E3C0 D090 0004          00000090    186+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000072 B904 002E                           187+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000076 E3B0 C018 0004          00000018    188+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000007C A7EB 00B8               000000B8    189+         aghi  14,184              increase by frame size               01-DCCPR
00000080 E3E0 C020 0021          00000020    190+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000086 4720 B020               00000020    191+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000008A                                     192+@PER_1059 ds   0h                                                       01-DCCPR
0000008A EBDE 2080 0024          00000080    193+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000090 E3C0 2090 0024          00000090    194+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000096 B904 00D2                           195+         lgr   13,2                set real frame pointer               01-DCCPR
0000009A B904 00CF                           196+         lgr   12,15               set base reg                         01-DCCPR
                        00000060             197+         using @REGION_1059_1,12                                        01-DCCPR
0000009E B904 0031                           198          LGR   3,1         ; ptr to parm area
                                             199 * ******* End of Prologue
                                             200 * *
000000A2 E320 3000 0004          00000000    201          LG    2,0(0,3)    ; ra
                                             202 * ***
                                             203 * ***      int32_t r;
                                             204 * ***      pthread_mutex_lock(&ra->lock);
000000A8 41F0 2008               00000008    205          LA    15,8(0,2)
000000AC E3F0 D0B0 0024          000000B0    206          STG   15,176(0,13)
000000B2 4110 D0B0               000000B0    207          LA    1,176(0,13)
000000B6 E3F0 C0D8 0004          00000138    208          LG    15,@lit_1059_0 ; pthread_mutex_lock
000000BC                                     209 @@gen_label0 DS    0H
000000BC 05EF                                210          BALR  14,15
000000BE                                     211 @@gen_label1 DS    0H
                                             212 * ***      ra->val += v;
000000BE 58F0 2000               00000000    213          L     15,0(0,2)
000000C2 5AF0 300C               0000000C    214          A     15,12(0,3)
000000C6 50F0 2000               00000000    215          ST    15,0(0,2)
                                             216 * ***      r = ra->val;
000000CA 183F                                217          LR    3,15        ; ra
                                             218 * ***      pthread_mutex_unlock(&ra->lock);
000000CC 41F0 2008               00000008    219          LA    15,8(0,2)
000000D0 E3F0 D0B0 0024          000000B0    220          STG   15,176(0,13)
000000D6 4110 D0B0               000000B0    221          LA    1,176(0,13)
000000DA E3F0 C0E0 0004          00000140    222          LG    15,@lit_1059_1 ; pthread_mutex_unlock
000000E0                                     223 @@gen_label2 DS    0H
000000E0 05EF                                224          BALR  14,15
000000E2                                     225 @@gen_label3 DS    0H
                                             226 * ***      return r;
000000E2 B914 00F3                           227          LGFR  15,3
                                             228 * ***   # 103 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             229 * ***      return __atomic_add_fetch(&ra->val, v, 6);
                                             230 * ***
                                             231 * ***   }
                                             232 * * **** Start of Epilogue
                                             233          DCCEPIL
000000E6                                     234+         ds 0h                                                          01-DCCEP
                                             235+* Epilog
000000E6 D707 D088 D088 00000088 00000088    236+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000000EC E3D0 D080 0004          00000080    237+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000000F2 E3C0 D090 0004          00000090    238+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000000F8 E3B0 C018 0004          00000018    239+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000000FE E3C0 B010 0021          00000010    240+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000104 E3E0 D008 0004          00000008    241+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000010A EB1C D020 0004          00000020    242+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page   11 
  Active Usings: @REGION_1059_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000110 078E                                243+         bcr 8,14                if same dsab, just return              01-DCCEP
00000112 E3F0 D010 0024          00000010    244+         stg 15,16(0,13)         save return code                       01-DCCEP
00000118 E300 D018 0024          00000018    245+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000011E E3F0 D090 0004          00000090    246+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000124 E3F0 F018 0004          00000018    247+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000012A 47F0 F040               00000040    248+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             249+* End of Epilog
                                             250 * * **** End of Epilogue
00000130                                     251          DS    0D
00000130 000000B8                            252 @FRAMESIZE_1059 DC F'184'
00000134 00000000
00000138 0000000000000000                    253 @lit_1059_0 DC AD(pthread_mutex_lock)
00000140 0000000000000000                    254 @lit_1059_1 DC AD(pthread_mutex_unlock)
                                             255          DROP  12
                                             256 *
                                             257 *   DSECT for automatic variables in "rd_atomic32_add"
                                             258 *      (FUNCTION #1059)
                                             259 *
00000000                00000000 000000AC    260 @AUTO#rd_atomic32_add DSECT
00000000                                     261          DS    XL168
000000A8                                     262 rd_atomic32_add#r#0 DS 1F  ; r
                                             263 *
00000148                00000000 00006B1A    264 @CODE    CSECT
                                             265 *
                                             266 *
                                             267 *
                                             268 * ....... start of rd_atomic32_sub
00000148                                     269 @LNAME1060 DS  0H
00000148 0000000F                            270          DC    X'0000000F'
0000014C 99846D81A3969489                    271          DC    C'rd_atomic32_sub'
0000015B 00                                  272          DC    X'00'
                                             273 rd_atomic32_sub DCCPRLG CINDEX=1060,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1060
                                             274          macro
                                             275          dccextrn &m
                                             276          gblc    &$dccext(1000)
                                             277          gbla    &$dccexti
                                             278          lcla    &i
                                             279 &$dccext(&$dccexti+1) setc    '&m'
                                             280 &i       seta    1
                                             281 .loop    aif    (&i gt &$dccexti).around
                                             282          aif    ('&$dccext(&i)' eq '&m').getout
                                             283 &i       seta    &i+1
                                             284          ago     .loop
                                             285 .around  anop
                                             286 &$dccexti seta &$dccexti+1
                                             287          extrn  &m
                                             288 .getout  anop
                                             289          mend
00000160                                     290+$eye0005    ds    0d                                                    02-DCCCA
00000160 C4C3C3                              291+         dc cl3'DCC'                                                    02-DCCCA
00000163 01                                  292+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page   12 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000164 00000000                            293+         dc a(0)                                                        02-DCCCA
00000168 00000000000001D2                    294+         dc ad(@PER_1060)                                               02-DCCCA
00000170 00000000000000B8                    295+         dc ad(184)                                                     02-DCCCA
00000178 0000000000000000                    296+         dc ad(0)                                                       02-DCCCA
00000180 0000000000001000                    297+         dc ad(4096)                                                    02-DCCCA
00000188 20                                  298+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000189 03                                  299+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000018A 03                                  300+         dc al1(3)                                                      02-DCCCA
0000018B 08                                  301+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000018C 00                                  302+         dc bl.8'00000000'                                              02-DCCCA
0000018D 000000                              303+         dc al3(0)                                                      02-DCCCA
00000190 0000000000000148                    304+         dc ad(@LNAME1060)                                              02-DCCCA
00000198                                     305+         ds 0d                                                          02-DCCCA
00000198 0000000000000160                    306+         dc ad($eye0005)                                                02-DCCCA
000001A0 0000000000000000                    307+         dc ad(0)                                                       02-DCCCA
000001A8                                     308+         ds    0d                                                       01-DCCPR
000001A8                                     309+rd_atomic32_sub ds 0d                                                   01-DCCPR
000001A8                                     310+@REGION_1060_1 ds 0h                                                    01-DCCPR
000001A8 EBEC D008 0024          00000008    311+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001AE E3E0 D088 0004          00000088    312+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001B4 E3C0 D090 0004          00000090    313+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001BA B904 002E                           314+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001BE E3B0 C018 0004          00000018    315+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001C4 A7EB 00B8               000000B8    316+         aghi  14,184              increase by frame size               01-DCCPR
000001C8 E3E0 C020 0021          00000020    317+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001CE 4720 B020               00000020    318+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001D2                                     319+@PER_1060 ds   0h                                                       01-DCCPR
000001D2 EBDE 2080 0024          00000080    320+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001D8 E3C0 2090 0024          00000090    321+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001DE B904 00D2                           322+         lgr   13,2                set real frame pointer               01-DCCPR
000001E2 B904 00CF                           323+         lgr   12,15               set base reg                         01-DCCPR
                        000001A8             324+         using @REGION_1060_1,12                                        01-DCCPR
000001E6 B904 0031                           325          LGR   3,1         ; ptr to parm area
                                             326 * ******* End of Prologue
                                             327 * *
000001EA E320 3000 0004          00000000    328          LG    2,0(0,3)    ; ra
                                             329 * ***
                                             330 * ***      int32_t r;
                                             331 * ***      pthread_mutex_lock(&ra->lock);
000001F0 41F0 2008               00000008    332          LA    15,8(0,2)
000001F4 E3F0 D0B0 0024          000000B0    333          STG   15,176(0,13)
000001FA 4110 D0B0               000000B0    334          LA    1,176(0,13)
000001FE E3F0 C0D8 0004          00000280    335          LG    15,@lit_1060_3 ; pthread_mutex_lock
00000204                                     336 @@gen_label4 DS    0H
00000204 05EF                                337          BALR  14,15
00000206                                     338 @@gen_label5 DS    0H
                                             339 * ***      ra->val -= v;
00000206 58F0 2000               00000000    340          L     15,0(0,2)
0000020A 5BF0 300C               0000000C    341          S     15,12(0,3)
0000020E 50F0 2000               00000000    342          ST    15,0(0,2)
                                             343 * ***      r = ra->val;
00000212 183F                                344          LR    3,15        ; ra
                                                                                                                           Page   13 
  Active Usings: @REGION_1060_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             345 * ***      pthread_mutex_unlock(&ra->lock);
00000214 41F0 2008               00000008    346          LA    15,8(0,2)
00000218 E3F0 D0B0 0024          000000B0    347          STG   15,176(0,13)
0000021E 4110 D0B0               000000B0    348          LA    1,176(0,13)
00000222 E3F0 C0E0 0004          00000288    349          LG    15,@lit_1060_4 ; pthread_mutex_unlock
00000228                                     350 @@gen_label6 DS    0H
00000228 05EF                                351          BALR  14,15
0000022A                                     352 @@gen_label7 DS    0H
                                             353 * ***      return r;
0000022A B914 00F3                           354          LGFR  15,3
                                             355 * ***   # 128 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             356 * ***      return __atomic_sub_fetch(&ra->val, v, 6);
                                             357 * ***
                                             358 * ***   }
                                             359 * * **** Start of Epilogue
                                             360          DCCEPIL
0000022E                                     361+         ds 0h                                                          01-DCCEP
                                             362+* Epilog
0000022E D707 D088 D088 00000088 00000088    363+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000234 E3D0 D080 0004          00000080    364+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000023A E3C0 D090 0004          00000090    365+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000240 E3B0 C018 0004          00000018    366+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000246 E3C0 B010 0021          00000010    367+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000024C E3E0 D008 0004          00000008    368+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000252 EB1C D020 0004          00000020    369+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000258 078E                                370+         bcr 8,14                if same dsab, just return              01-DCCEP
0000025A E3F0 D010 0024          00000010    371+         stg 15,16(0,13)         save return code                       01-DCCEP
00000260 E300 D018 0024          00000018    372+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000266 E3F0 D090 0004          00000090    373+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000026C E3F0 F018 0004          00000018    374+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000272 47F0 F040               00000040    375+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             376+* End of Epilog
                                             377 * * **** End of Epilogue
00000278                                     378          DS    0D
00000278 000000B8                            379 @FRAMESIZE_1060 DC F'184'
0000027C 00000000
00000280 0000000000000000                    380 @lit_1060_3 DC AD(pthread_mutex_lock)
00000288 0000000000000000                    381 @lit_1060_4 DC AD(pthread_mutex_unlock)
                                             382          DROP  12
                                             383 *
                                             384 *   DSECT for automatic variables in "rd_atomic32_sub"
                                             385 *      (FUNCTION #1060)
                                             386 *
00000000                00000000 000000AC    387 @AUTO#rd_atomic32_sub DSECT
00000000                                     388          DS    XL168
000000A8                                     389 rd_atomic32_sub#r#0 DS 1F  ; r
                                             390 *
00000290                00000000 00006B1A    391 @CODE    CSECT
                                             392 *
                                             393 *
                                             394 *
                                             395 * ....... start of rd_atomic32_get
                                                                                                                           Page   14 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000290                                     396 @LNAME1061 DS  0H
00000290 0000000F                            397          DC    X'0000000F'
00000294 99846D81A3969489                    398          DC    C'rd_atomic32_get'
000002A3 00                                  399          DC    X'00'
                                             400 rd_atomic32_get DCCPRLG CINDEX=1061,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1061
                                             401          macro
                                             402          dccextrn &m
                                             403          gblc    &$dccext(1000)
                                             404          gbla    &$dccexti
                                             405          lcla    &i
                                             406 &$dccext(&$dccexti+1) setc    '&m'
                                             407 &i       seta    1
                                             408 .loop    aif    (&i gt &$dccexti).around
                                             409          aif    ('&$dccext(&i)' eq '&m').getout
                                             410 &i       seta    &i+1
                                             411          ago     .loop
                                             412 .around  anop
                                             413 &$dccexti seta &$dccexti+1
                                             414          extrn  &m
                                             415 .getout  anop
                                             416          mend
000002A8                                     417+$eye0008    ds    0d                                                    02-DCCCA
000002A8 C4C3C3                              418+         dc cl3'DCC'                                                    02-DCCCA
000002AB 01                                  419+         dc xl1'01' format one                                          02-DCCCA
000002AC 00000000                            420+         dc a(0)                                                        02-DCCCA
000002B0 000000000000031A                    421+         dc ad(@PER_1061)                                               02-DCCCA
000002B8 00000000000000B8                    422+         dc ad(184)                                                     02-DCCCA
000002C0 0000000000000000                    423+         dc ad(0)                                                       02-DCCCA
000002C8 0000000000001000                    424+         dc ad(4096)                                                    02-DCCCA
000002D0 20                                  425+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000002D1 03                                  426+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000002D2 03                                  427+         dc al1(3)                                                      02-DCCCA
000002D3 08                                  428+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000002D4 00                                  429+         dc bl.8'00000000'                                              02-DCCCA
000002D5 000000                              430+         dc al3(0)                                                      02-DCCCA
000002D8 0000000000000290                    431+         dc ad(@LNAME1061)                                              02-DCCCA
000002E0                                     432+         ds 0d                                                          02-DCCCA
000002E0 00000000000002A8                    433+         dc ad($eye0008)                                                02-DCCCA
000002E8 0000000000000000                    434+         dc ad(0)                                                       02-DCCCA
000002F0                                     435+         ds    0d                                                       01-DCCPR
000002F0                                     436+rd_atomic32_get ds 0d                                                   01-DCCPR
000002F0                                     437+@REGION_1061_1 ds 0h                                                    01-DCCPR
000002F0 EBEC D008 0024          00000008    438+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000002F6 E3E0 D088 0004          00000088    439+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000002FC E3C0 D090 0004          00000090    440+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000302 B904 002E                           441+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000306 E3B0 C018 0004          00000018    442+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000030C A7EB 00B8               000000B8    443+         aghi  14,184              increase by frame size               01-DCCPR
00000310 E3E0 C020 0021          00000020    444+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000316 4720 B020               00000020    445+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000031A                                     446+@PER_1061 ds   0h                                                       01-DCCPR
                                                                                                                           Page   15 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000031A EBDE 2080 0024          00000080    447+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000320 E3C0 2090 0024          00000090    448+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000326 B904 00D2                           449+         lgr   13,2                set real frame pointer               01-DCCPR
0000032A B904 00CF                           450+         lgr   12,15               set base reg                         01-DCCPR
                        000002F0             451+         using @REGION_1061_1,12                                        01-DCCPR
                                             452 * ******* End of Prologue
                                             453 * *
0000032E E320 1000 0004          00000000    454          LG    2,0(0,1)    ; ra
                                             455 * ***
                                             456 * ***      int32_t r;
                                             457 * ***      pthread_mutex_lock(&ra->lock);
00000334 41F0 2008               00000008    458          LA    15,8(0,2)
00000338 E3F0 D0B0 0024          000000B0    459          STG   15,176(0,13)
0000033E 4110 D0B0               000000B0    460          LA    1,176(0,13)
00000342 E3F0 C0C8 0004          000003B8    461          LG    15,@lit_1061_6 ; pthread_mutex_lock
00000348                                     462 @@gen_label8 DS    0H
00000348 05EF                                463          BALR  14,15
0000034A                                     464 @@gen_label9 DS    0H
                                             465 * ***      r = ra->val;
0000034A 5830 2000               00000000    466          L     3,0(0,2)    ; ra
                                             467 * ***      pthread_mutex_unlock(&ra->lock);
0000034E 41F0 2008               00000008    468          LA    15,8(0,2)
00000352 E3F0 D0B0 0024          000000B0    469          STG   15,176(0,13)
00000358 4110 D0B0               000000B0    470          LA    1,176(0,13)
0000035C E3F0 C0D0 0004          000003C0    471          LG    15,@lit_1061_7 ; pthread_mutex_unlock
00000362                                     472 @@gen_label10 DS    0H
00000362 05EF                                473          BALR  14,15
00000364                                     474 @@gen_label11 DS    0H
                                             475 * ***      return r;
00000364 B914 00F3                           476          LGFR  15,3
                                             477 * ***   # 157 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             478 * ***      return __atomic_fetch_add(&ra->val, 0, 6);
                                             479 * ***
                                             480 * ***   }
                                             481 * * **** Start of Epilogue
                                             482          DCCEPIL
00000368                                     483+         ds 0h                                                          01-DCCEP
                                             484+* Epilog
00000368 D707 D088 D088 00000088 00000088    485+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000036E E3D0 D080 0004          00000080    486+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000374 E3C0 D090 0004          00000090    487+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000037A E3B0 C018 0004          00000018    488+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000380 E3C0 B010 0021          00000010    489+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000386 E3E0 D008 0004          00000008    490+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000038C EB1C D020 0004          00000020    491+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000392 078E                                492+         bcr 8,14                if same dsab, just return              01-DCCEP
00000394 E3F0 D010 0024          00000010    493+         stg 15,16(0,13)         save return code                       01-DCCEP
0000039A E300 D018 0024          00000018    494+         stg 0,24(0,13)          save more return code                  01-DCCEP
000003A0 E3F0 D090 0004          00000090    495+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000003A6 E3F0 F018 0004          00000018    496+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000003AC 47F0 F040               00000040    497+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             498+* End of Epilog
                                                                                                                           Page   16 
  Active Usings: @REGION_1061_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             499 * * **** End of Epilogue
000003B0                                     500          DS    0D
000003B0 000000B8                            501 @FRAMESIZE_1061 DC F'184'
000003B4 00000000
000003B8 0000000000000000                    502 @lit_1061_6 DC AD(pthread_mutex_lock)
000003C0 0000000000000000                    503 @lit_1061_7 DC AD(pthread_mutex_unlock)
                                             504          DROP  12
                                             505 *
                                             506 *   DSECT for automatic variables in "rd_atomic32_get"
                                             507 *      (FUNCTION #1061)
                                             508 *
00000000                00000000 000000AC    509 @AUTO#rd_atomic32_get DSECT
00000000                                     510          DS    XL168
000000A8                                     511 rd_atomic32_get#r#0 DS 1F  ; r
                                             512 *
000003C8                00000000 00006B1A    513 @CODE    CSECT
                                             514 *
                                             515 *
                                             516 *
                                             517 * ....... start of rd_free
000003C8                                     518 @LNAME1080 DS  0H
000003C8 00000007                            519          DC    X'00000007'
000003CC 99846D86998585                      520          DC    C'rd_free'
000003D3 00                                  521          DC    X'00'
                                             522 rd_free  DCCPRLG CINDEX=1080,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1080
                                             523          macro
                                             524          dccextrn &m
                                             525          gblc    &$dccext(1000)
                                             526          gbla    &$dccexti
                                             527          lcla    &i
                                             528 &$dccext(&$dccexti+1) setc    '&m'
                                             529 &i       seta    1
                                             530 .loop    aif    (&i gt &$dccexti).around
                                             531          aif    ('&$dccext(&i)' eq '&m').getout
                                             532 &i       seta    &i+1
                                             533          ago     .loop
                                             534 .around  anop
                                             535 &$dccexti seta &$dccexti+1
                                             536          extrn  &m
                                             537 .getout  anop
                                             538          mend
000003D8                                     539+$eye0011    ds    0d                                                    02-DCCCA
000003D8 C4C3C3                              540+         dc cl3'DCC'                                                    02-DCCCA
000003DB 01                                  541+         dc xl1'01' format one                                          02-DCCCA
000003DC 00000000                            542+         dc a(0)                                                        02-DCCCA
000003E0 000000000000044A                    543+         dc ad(@PER_1080)                                               02-DCCCA
000003E8 00000000000000B0                    544+         dc ad(176)                                                     02-DCCCA
000003F0 0000000000000000                    545+         dc ad(0)                                                       02-DCCCA
000003F8 0000000000001000                    546+         dc ad(4096)                                                    02-DCCCA
00000400 20                                  547+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000401 03                                  548+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   17 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000402 03                                  549+         dc al1(3)                                                      02-DCCCA
00000403 08                                  550+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000404 00                                  551+         dc bl.8'00000000'                                              02-DCCCA
00000405 000000                              552+         dc al3(0)                                                      02-DCCCA
00000408 00000000000003C8                    553+         dc ad(@LNAME1080)                                              02-DCCCA
00000410                                     554+         ds 0d                                                          02-DCCCA
00000410 00000000000003D8                    555+         dc ad($eye0011)                                                02-DCCCA
00000418 0000000000000000                    556+         dc ad(0)                                                       02-DCCCA
00000420                                     557+         ds    0d                                                       01-DCCPR
00000420                                     558+rd_free  ds    0d                                                       01-DCCPR
00000420                                     559+@REGION_1080_1 ds 0h                                                    01-DCCPR
00000420 EBEC D008 0024          00000008    560+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000426 E3E0 D088 0004          00000088    561+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000042C E3C0 D090 0004          00000090    562+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000432 B904 002E                           563+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000436 E3B0 C018 0004          00000018    564+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000043C A7EB 00B0               000000B0    565+         aghi  14,176              increase by frame size               01-DCCPR
00000440 E3E0 C020 0021          00000020    566+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000446 4720 B020               00000020    567+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000044A                                     568+@PER_1080 ds   0h                                                       01-DCCPR
0000044A EBDE 2080 0024          00000080    569+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000450 E3C0 2090 0024          00000090    570+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000456 B904 00D2                           571+         lgr   13,2                set real frame pointer               01-DCCPR
0000045A B904 00CF                           572+         lgr   12,15               set base reg                         01-DCCPR
                        00000420             573+         using @REGION_1080_1,12                                        01-DCCPR
                                             574 * ******* End of Prologue
                                             575 * *
                                             576 * ***      free(ptr);
0000045E E3F0 1000 0004          00000000    577          LG    15,0(0,1)   ; ptr
00000464 E3F0 D0A8 0024          000000A8    578          STG   15,168(0,13)
0000046A 4110 D0A8               000000A8    579          LA    1,168(0,13)
0000046E E3F0 C0A8 0004          000004C8    580          LG    15,@lit_1080_9 ; free
00000474                                     581 @@gen_label12 DS    0H
00000474 05EF                                582          BALR  14,15
00000476                                     583 @@gen_label13 DS    0H
                                             584 * ***   }
00000476                                     585 @ret_lab_1080 DS 0H
                                             586 * * **** Start of Epilogue
                                             587          DCCEPIL
00000476                                     588+         ds 0h                                                          01-DCCEP
                                             589+* Epilog
00000476 D707 D088 D088 00000088 00000088    590+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000047C E3D0 D080 0004          00000080    591+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000482 E3C0 D090 0004          00000090    592+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000488 E3B0 C018 0004          00000018    593+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000048E E3C0 B010 0021          00000010    594+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000494 E3E0 D008 0004          00000008    595+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000049A EB1C D020 0004          00000020    596+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000004A0 078E                                597+         bcr 8,14                if same dsab, just return              01-DCCEP
000004A2 E3F0 D010 0024          00000010    598+         stg 15,16(0,13)         save return code                       01-DCCEP
000004A8 E300 D018 0024          00000018    599+         stg 0,24(0,13)          save more return code                  01-DCCEP
000004AE E3F0 D090 0004          00000090    600+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
                                                                                                                           Page   18 
  Active Usings: @REGION_1080_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000004B4 E3F0 F018 0004          00000018    601+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000004BA 47F0 F040               00000040    602+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             603+* End of Epilog
                                             604 * * **** End of Epilogue
000004C0                                     605          DS    0D
000004C0 000000B0                            606 @FRAMESIZE_1080 DC F'176'
000004C4 00000000
000004C8 0000000000000000                    607 @lit_1080_9 DC AD(free)
                                             608          DROP  12
                                             609 *
                                             610 *   DSECT for automatic variables in "rd_free"
                                             611 *      (FUNCTION #1080)
                                             612 *
00000000                00000000 000000A8    613 @AUTO#rd_free DSECT
00000000                                     614          DS    XL168
                                             615 *
000004D0                00000000 00006B1A    616 @CODE    CSECT
                                             617 *
                                             618 *
                                             619 *
                                             620 * ....... start of rd_strdup
000004D0                                     621 @LNAME1081 DS  0H
000004D0 00000009                            622          DC    X'00000009'
000004D4 99846DA2A39984A4                    623          DC    C'rd_strdup'
000004DD 00                                  624          DC    X'00'
                                             625 rd_strdup DCCPRLG CINDEX=1081,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME1081
                                             626          macro
                                             627          dccextrn &m
                                             628          gblc    &$dccext(1000)
                                             629          gbla    &$dccexti
                                             630          lcla    &i
                                             631 &$dccext(&$dccexti+1) setc    '&m'
                                             632 &i       seta    1
                                             633 .loop    aif    (&i gt &$dccexti).around
                                             634          aif    ('&$dccext(&i)' eq '&m').getout
                                             635 &i       seta    &i+1
                                             636          ago     .loop
                                             637 .around  anop
                                             638 &$dccexti seta &$dccexti+1
                                             639          extrn  &m
                                             640 .getout  anop
                                             641          mend
000004E0                                     642+$eye0014    ds    0d                                                    02-DCCCA
000004E0 C4C3C3                              643+         dc cl3'DCC'                                                    02-DCCCA
000004E3 01                                  644+         dc xl1'01' format one                                          02-DCCCA
000004E4 00000000                            645+         dc a(0)                                                        02-DCCCA
000004E8 0000000000000552                    646+         dc ad(@PER_1081)                                               02-DCCCA
000004F0 00000000000000D0                    647+         dc ad(208)                                                     02-DCCCA
000004F8 0000000000000000                    648+         dc ad(0)                                                       02-DCCCA
00000500 0000000000001000                    649+         dc ad(4096)                                                    02-DCCCA
00000508 20                                  650+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page   19 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000509 03                                  651+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000050A 03                                  652+         dc al1(3)                                                      02-DCCCA
0000050B 08                                  653+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000050C 00                                  654+         dc bl.8'00000000'                                              02-DCCCA
0000050D 000000                              655+         dc al3(0)                                                      02-DCCCA
00000510 00000000000004D0                    656+         dc ad(@LNAME1081)                                              02-DCCCA
00000518                                     657+         ds 0d                                                          02-DCCCA
00000518 00000000000004E0                    658+         dc ad($eye0014)                                                02-DCCCA
00000520 0000000000000000                    659+         dc ad(0)                                                       02-DCCCA
00000528                                     660+         ds    0d                                                       01-DCCPR
00000528                                     661+rd_strdup ds   0d                                                       01-DCCPR
00000528                                     662+@REGION_1081_1 ds 0h                                                    01-DCCPR
00000528 EBEC D008 0024          00000008    663+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000052E E3E0 D088 0004          00000088    664+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000534 E3C0 D090 0004          00000090    665+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000053A B904 002E                           666+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000053E E3B0 C018 0004          00000018    667+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000544 A7EB 00D0               000000D0    668+         aghi  14,208              increase by frame size               01-DCCPR
00000548 E3E0 C020 0021          00000020    669+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000054E 4720 B020               00000020    670+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000552                                     671+@PER_1081 ds   0h                                                       01-DCCPR
00000552 EBDE 2080 0024          00000080    672+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000558 E3C0 2090 0024          00000090    673+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000055E B904 00D2                           674+         lgr   13,2                set real frame pointer               01-DCCPR
00000562 B904 00CF                           675+         lgr   12,15               set base reg                         01-DCCPR
                        00000528             676+         using @REGION_1081_1,12                                        01-DCCPR
                                             677 * ******* End of Prologue
                                             678 * *
                                             679 * ***
                                             680 * ***      char *n = strdup(s);
00000566 E3F0 1000 0004          00000000    681          LG    15,0(0,1)   ; s
0000056C E3F0 D0B0 0024          000000B0    682          STG   15,176(0,13)
00000572 4110 D0B0               000000B0    683          LA    1,176(0,13)
00000576 E3F0 C0F0 0004          00000618    684          LG    15,@lit_1081_11 ; strdup
0000057C                                     685 @@gen_label14 DS    0H
0000057C 05EF                                686          BALR  14,15
0000057E                                     687 @@gen_label15 DS    0H
0000057E B904 002F                           688          LGR   2,15
                                             689 * ***
                                             690 * ***
                                             691 * ***
                                             692 * ***      ((n) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             693 * ka\\src\\rd.h", 148, "n"));
00000582 B902 00F2                           694          LTGR  15,2
00000586 4770 C09A               000005C2    695          BNZ   @L38
0000058A                                     696 @L37     DS    0H
0000058A E3F0 C108 0004          00000630    697          LG    15,@lit_1081_12
00000590 41F0 F020               00000020    698          LA    15,32(0,15)
00000594 E3F0 D0B0 0024          000000B0    699          STG   15,176(0,13)
0000059A E3F0 C100 0004          00000628    700          LG    15,@lit_1081_13
000005A0 E3F0 D0B8 0024          000000B8    701          STG   15,184(0,13)
000005A6 E548 D0C0 0094          000000C0    702          MVGHI 192(13),148
                                                                                                                           Page   20 
  Active Usings: @REGION_1081_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000005AC 41F0 F020               00000020    703          LA    15,32(0,15)
000005B0 E3F0 D0C8 0024          000000C8    704          STG   15,200(0,13)
000005B6 4110 D0B0               000000B0    705          LA    1,176(0,13)
000005BA E3F0 C0F8 0004          00000620    706          LG    15,@lit_1081_14 ; __assert
000005C0                                     707 @@gen_label17 DS    0H
000005C0 05EF                                708          BALR  14,15
000005C2                                     709 @@gen_label18 DS    0H
000005C2                                     710 @L38     DS    0H
                                             711 * ***      return n;
000005C2 B904 00F2                           712          LGR   15,2
                                             713 * ***   }
                                             714 * * **** Start of Epilogue
                                             715          DCCEPIL
000005C6                                     716+         ds 0h                                                          01-DCCEP
                                             717+* Epilog
000005C6 D707 D088 D088 00000088 00000088    718+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000005CC E3D0 D080 0004          00000080    719+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000005D2 E3C0 D090 0004          00000090    720+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000005D8 E3B0 C018 0004          00000018    721+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000005DE E3C0 B010 0021          00000010    722+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000005E4 E3E0 D008 0004          00000008    723+         lg  14,8(0,13)          load up return address                 01-DCCEP
000005EA EB1C D020 0004          00000020    724+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000005F0 078E                                725+         bcr 8,14                if same dsab, just return              01-DCCEP
000005F2 E3F0 D010 0024          00000010    726+         stg 15,16(0,13)         save return code                       01-DCCEP
000005F8 E300 D018 0024          00000018    727+         stg 0,24(0,13)          save more return code                  01-DCCEP
000005FE E3F0 D090 0004          00000090    728+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000604 E3F0 F018 0004          00000018    729+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000060A 47F0 F040               00000040    730+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             731+* End of Epilog
                                             732 * * **** End of Epilogue
00000610                                     733          DS    0D
00000610 000000D0                            734 @FRAMESIZE_1081 DC F'208'
00000614 00000000
00000618 0000000000000000                    735 @lit_1081_11 DC AD(strdup)
00000620 0000000000000000                    736 @lit_1081_14 DC AD(__assert)
00000628 0000000000006D48                    737 @lit_1081_13 DC AD(@strings@)
00000630 0000000000006B20                    738 @lit_1081_12 DC AD(@DATA)
                                             739          DROP  12
                                             740 *
                                             741 *   DSECT for automatic variables in "rd_strdup"
                                             742 *      (FUNCTION #1081)
                                             743 *
00000000                00000000 000000A8    744 @AUTO#rd_strdup DSECT
00000000                                     745          DS    XL168
                                             746 *
00000638                00000000 00006B1A    747 @CODE    CSECT
                                             748 *
                                             749 *
                                             750 *
                                             751 * ....... start of rd_refcnt_sub0
00000638                                     752 @LNAME1084 DS  0H
00000638 0000000E                            753          DC    X'0000000E'
                                                                                                                           Page   21 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000063C 99846D9985868395                    754          DC    C'rd_refcnt_sub0'
0000064A 00                                  755          DC    X'00'
                                             756 rd_refcnt_sub0 DCCPRLG CINDEX=1084,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1084
                                             757          macro
                                             758          dccextrn &m
                                             759          gblc    &$dccext(1000)
                                             760          gbla    &$dccexti
                                             761          lcla    &i
                                             762 &$dccext(&$dccexti+1) setc    '&m'
                                             763 &i       seta    1
                                             764 .loop    aif    (&i gt &$dccexti).around
                                             765          aif    ('&$dccext(&i)' eq '&m').getout
                                             766 &i       seta    &i+1
                                             767          ago     .loop
                                             768 .around  anop
                                             769 &$dccexti seta &$dccexti+1
                                             770          extrn  &m
                                             771 .getout  anop
                                             772          mend
00000650                                     773+$eye0017    ds    0d                                                    02-DCCCA
00000650 C4C3C3                              774+         dc cl3'DCC'                                                    02-DCCCA
00000653 01                                  775+         dc xl1'01' format one                                          02-DCCCA
00000654 00000000                            776+         dc a(0)                                                        02-DCCCA
00000658 00000000000006C2                    777+         dc ad(@PER_1084)                                               02-DCCCA
00000660 00000000000000D0                    778+         dc ad(208)                                                     02-DCCCA
00000668 0000000000000000                    779+         dc ad(0)                                                       02-DCCCA
00000670 0000000000001000                    780+         dc ad(4096)                                                    02-DCCCA
00000678 20                                  781+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000679 03                                  782+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000067A 03                                  783+         dc al1(3)                                                      02-DCCCA
0000067B 08                                  784+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000067C 00                                  785+         dc bl.8'00000000'                                              02-DCCCA
0000067D 000000                              786+         dc al3(0)                                                      02-DCCCA
00000680 0000000000000638                    787+         dc ad(@LNAME1084)                                              02-DCCCA
00000688                                     788+         ds 0d                                                          02-DCCCA
00000688 0000000000000650                    789+         dc ad($eye0017)                                                02-DCCCA
00000690 0000000000000000                    790+         dc ad(0)                                                       02-DCCCA
00000698                                     791+         ds    0d                                                       01-DCCPR
00000698                                     792+rd_refcnt_sub0 ds 0d                                                    01-DCCPR
00000698                                     793+@REGION_1084_1 ds 0h                                                    01-DCCPR
00000698 EBEC D008 0024          00000008    794+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000069E E3E0 D088 0004          00000088    795+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000006A4 E3C0 D090 0004          00000090    796+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000006AA B904 002E                           797+         lgr   2,14                copy addr of our savearea            01-DCCPR
000006AE E3B0 C018 0004          00000018    798+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000006B4 A7EB 00D0               000000D0    799+         aghi  14,208              increase by frame size               01-DCCPR
000006B8 E3E0 C020 0021          00000020    800+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000006BE 4720 B020               00000020    801+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000006C2                                     802+@PER_1084 ds   0h                                                       01-DCCPR
000006C2 EBDE 2080 0024          00000080    803+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000006C8 E3C0 2090 0024          00000090    804+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page   22 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000006CE B904 00D2                           805+         lgr   13,2                set real frame pointer               01-DCCPR
000006D2 B904 00CF                           806+         lgr   12,15               set base reg                         01-DCCPR
                        00000698             807+         using @REGION_1084_1,12                                        01-DCCPR
                                             808 * ******* End of Prologue
                                             809 * *
                                             810 * ***           int r;
                                             811 * ***   # 332 "C:\asgkafka\librdkafka\src\rd.h"
                                             812 * ***           r = rd_atomic32_sub(R, 1);
000006D6 E3F0 1000 0004          00000000    813          LG    15,0(0,1)   ; R
000006DC E3F0 D0B0 0024          000000B0    814          STG   15,176(0,13)
000006E2 E548 D0B8 0001          000000B8    815          MVGHI 184(13),1
000006E8 4110 D0B0               000000B0    816          LA    1,176(0,13)
000006EC E3F0 C100 0004          00000798    817          LG    15,@lit_1084_16 ; rd_atomic32_sub
000006F2                                     818 @@gen_label19 DS    0H
000006F2 05EF                                819          BALR  14,15
000006F4                                     820 @@gen_label20 DS    0H
000006F4 122F                                821          LTR   2,15
                                             822 * ***
                                             823 * ***           if (r < 0)
000006F6 47B0 C0A6               0000073E    824          BNL   @L41
                                             825 * ***                   ((!*"refcnt sub-zero") ? (void)0 : __assert(__\
                                             826 * func__, "C:\\asgkafka\\librdkafka\\src\\rd.h", 335, "!*\"refcnt sub-\
                                             827 * zero\""));
000006FA E3F0 C108 0004          000007A0    828          LG    15,@lit_1084_17
00000700 4110 F022               00000022    829          LA    1,34(0,15)
00000704 9500 1000      00000000 00000000    830          CLI   0(1),0
00000708 4780 C0A6               0000073E    831          BE    @L41
0000070C                                     832 @L42     DS    0H
0000070C E310 C118 0004          000007B0    833          LG    1,@lit_1084_18
00000712 4110 1036               00000036    834          LA    1,54(0,1)
00000716 E310 D0B0 0024          000000B0    835          STG   1,176(0,13)
0000071C E3F0 D0B8 0024          000000B8    836          STG   15,184(0,13)
00000722 E548 D0C0 014F          000000C0    837          MVGHI 192(13),335
00000728 41F0 F032               00000032    838          LA    15,50(0,15)
0000072C E3F0 D0C8 0024          000000C8    839          STG   15,200(0,13)
00000732 4110 D0B0               000000B0    840          LA    1,176(0,13)
00000736 E3F0 C110 0004          000007A8    841          LG    15,@lit_1084_19 ; __assert
0000073C                                     842 @@gen_label23 DS    0H
0000073C 05EF                                843          BALR  14,15
0000073E                                     844 @@gen_label24 DS    0H
0000073E                                     845 @L43     DS    0H
0000073E                                     846 @L41     DS    0H
                                             847 * ***           return r;
0000073E B914 00F2                           848          LGFR  15,2
                                             849 * ***   }
                                             850 * * **** Start of Epilogue
                                             851          DCCEPIL
00000742                                     852+         ds 0h                                                          01-DCCEP
                                             853+* Epilog
00000742 D707 D088 D088 00000088 00000088    854+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000748 E3D0 D080 0004          00000080    855+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000074E E3C0 D090 0004          00000090    856+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
                                                                                                                           Page   23 
  Active Usings: @REGION_1084_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000754 E3B0 C018 0004          00000018    857+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000075A E3C0 B010 0021          00000010    858+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000760 E3E0 D008 0004          00000008    859+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000766 EB1C D020 0004          00000020    860+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000076C 078E                                861+         bcr 8,14                if same dsab, just return              01-DCCEP
0000076E E3F0 D010 0024          00000010    862+         stg 15,16(0,13)         save return code                       01-DCCEP
00000774 E300 D018 0024          00000018    863+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000077A E3F0 D090 0004          00000090    864+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000780 E3F0 F018 0004          00000018    865+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000786 47F0 F040               00000040    866+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             867+* End of Epilog
                                             868 * * **** End of Epilogue
00000790                                     869          DS    0D
00000790 000000D0                            870 @FRAMESIZE_1084 DC F'208'
00000794 00000000
00000798 00000000000001A8                    871 @lit_1084_16 DC AD(rd_atomic32_sub)
000007A0 0000000000006D48                    872 @lit_1084_17 DC AD(@strings@)
000007A8 0000000000000000                    873 @lit_1084_19 DC AD(__assert)
000007B0 0000000000006B20                    874 @lit_1084_18 DC AD(@DATA)
                                             875          DROP  12
                                             876 *
                                             877 *   DSECT for automatic variables in "rd_refcnt_sub0"
                                             878 *      (FUNCTION #1084)
                                             879 *
00000000                00000000 000000AC    880 @AUTO#rd_refcnt_sub0 DSECT
00000000                                     881          DS    XL168
000000A8                                     882 rd_refcnt_sub0#r#0 DS 1F   ; r
                                             883 *
000007B8                00000000 00006B1A    884 @CODE    CSECT
                                             885 *
                                             886 *
                                             887 *
                                             888 * ....... start of rd_kafka_q_keep
000007B8                                     889 @LNAME1428 DS  0H
000007B8 0000000F                            890          DC    X'0000000F'
000007BC 99846D9281869281                    891          DC    C'rd_kafka_q_keep'
000007CB 00                                  892          DC    X'00'
                                             893 rd_kafka_q_keep DCCPRLG CINDEX=1428,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1428
                                             894          macro
                                             895          dccextrn &m
                                             896          gblc    &$dccext(1000)
                                             897          gbla    &$dccexti
                                             898          lcla    &i
                                             899 &$dccext(&$dccexti+1) setc    '&m'
                                             900 &i       seta    1
                                             901 .loop    aif    (&i gt &$dccexti).around
                                             902          aif    ('&$dccext(&i)' eq '&m').getout
                                             903 &i       seta    &i+1
                                             904          ago     .loop
                                             905 .around  anop
                                             906 &$dccexti seta &$dccexti+1
                                                                                                                           Page   24 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             907          extrn  &m
                                             908 .getout  anop
                                             909          mend
000007D0                                     910+$eye0020    ds    0d                                                    02-DCCCA
000007D0 C4C3C3                              911+         dc cl3'DCC'                                                    02-DCCCA
000007D3 01                                  912+         dc xl1'01' format one                                          02-DCCCA
000007D4 00000000                            913+         dc a(0)                                                        02-DCCCA
000007D8 0000000000000842                    914+         dc ad(@PER_1428)                                               02-DCCCA
000007E0 00000000000000B0                    915+         dc ad(176)                                                     02-DCCCA
000007E8 0000000000000000                    916+         dc ad(0)                                                       02-DCCCA
000007F0 0000000000001000                    917+         dc ad(4096)                                                    02-DCCCA
000007F8 20                                  918+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000007F9 03                                  919+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000007FA 03                                  920+         dc al1(3)                                                      02-DCCCA
000007FB 08                                  921+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000007FC 00                                  922+         dc bl.8'00000000'                                              02-DCCCA
000007FD 000000                              923+         dc al3(0)                                                      02-DCCCA
00000800 00000000000007B8                    924+         dc ad(@LNAME1428)                                              02-DCCCA
00000808                                     925+         ds 0d                                                          02-DCCCA
00000808 00000000000007D0                    926+         dc ad($eye0020)                                                02-DCCCA
00000810 0000000000000000                    927+         dc ad(0)                                                       02-DCCCA
00000818                                     928+         ds    0d                                                       01-DCCPR
00000818                                     929+rd_kafka_q_keep ds 0d                                                   01-DCCPR
00000818                                     930+@REGION_1428_1 ds 0h                                                    01-DCCPR
00000818 EBEC D008 0024          00000008    931+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000081E E3E0 D088 0004          00000088    932+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000824 E3C0 D090 0004          00000090    933+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000082A B904 002E                           934+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000082E E3B0 C018 0004          00000018    935+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000834 A7EB 00B0               000000B0    936+         aghi  14,176              increase by frame size               01-DCCPR
00000838 E3E0 C020 0021          00000020    937+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000083E 4720 B020               00000020    938+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000842                                     939+@PER_1428 ds   0h                                                       01-DCCPR
00000842 EBDE 2080 0024          00000080    940+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000848 E3C0 2090 0024          00000090    941+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000084E B904 00D2                           942+         lgr   13,2                set real frame pointer               01-DCCPR
00000852 B904 00CF                           943+         lgr   12,15               set base reg                         01-DCCPR
                        00000818             944+         using @REGION_1428_1,12                                        01-DCCPR
                                             945 * ******* End of Prologue
                                             946 * *
                                             947 * ***           mtx_lock(&rkq->rkq_lock);
00000856 E320 1000 0004          00000000    948          LG    2,0(0,1)    ; rkq
0000085C E320 D0A8 0024          000000A8    949          STG   2,168(0,13)
00000862 4110 D0A8               000000A8    950          LA    1,168(0,13)
00000866 E3F0 C0C8 0004          000008E0    951          LG    15,@lit_1428_21 ; mtx_lock
0000086C                                     952 @@gen_label25 DS    0H
0000086C 05EF                                953          BALR  14,15
0000086E                                     954 @@gen_label26 DS    0H
                                             955 * ***           rkq->rkq_refcnt++;
0000086E 58F0 2080               00000080    956          L     15,128(0,2)
00000872 A7FA 0001               00000001    957          AHI   15,1
00000876 50F0 2080               00000080    958          ST    15,128(0,2)
                                                                                                                           Page   25 
  Active Usings: @REGION_1428_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                             959 * ***           mtx_unlock(&rkq->rkq_lock);
0000087A E320 D0A8 0024          000000A8    960          STG   2,168(0,13)
00000880 4110 D0A8               000000A8    961          LA    1,168(0,13)
00000884 E3F0 C0D0 0004          000008E8    962          LG    15,@lit_1428_22 ; mtx_unlock
0000088A                                     963 @@gen_label27 DS    0H
0000088A 05EF                                964          BALR  14,15
0000088C                                     965 @@gen_label28 DS    0H
                                             966 * ***      return rkq;
0000088C B904 00F2                           967          LGR   15,2
                                             968 * ***   }
                                             969 * * **** Start of Epilogue
                                             970          DCCEPIL
00000890                                     971+         ds 0h                                                          01-DCCEP
                                             972+* Epilog
00000890 D707 D088 D088 00000088 00000088    973+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000896 E3D0 D080 0004          00000080    974+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000089C E3C0 D090 0004          00000090    975+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000008A2 E3B0 C018 0004          00000018    976+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000008A8 E3C0 B010 0021          00000010    977+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000008AE E3E0 D008 0004          00000008    978+         lg  14,8(0,13)          load up return address                 01-DCCEP
000008B4 EB1C D020 0004          00000020    979+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000008BA 078E                                980+         bcr 8,14                if same dsab, just return              01-DCCEP
000008BC E3F0 D010 0024          00000010    981+         stg 15,16(0,13)         save return code                       01-DCCEP
000008C2 E300 D018 0024          00000018    982+         stg 0,24(0,13)          save more return code                  01-DCCEP
000008C8 E3F0 D090 0004          00000090    983+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000008CE E3F0 F018 0004          00000018    984+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000008D4 47F0 F040               00000040    985+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             986+* End of Epilog
                                             987 * * **** End of Epilogue
000008D8                                     988          DS    0D
000008D8 000000B0                            989 @FRAMESIZE_1428 DC F'176'
000008DC 00000000
000008E0 0000000000000000                    990 @lit_1428_21 DC AD(mtx_lock)
000008E8 0000000000000000                    991 @lit_1428_22 DC AD(mtx_unlock)
                                             992          DROP  12
                                             993 *
                                             994 *   DSECT for automatic variables in "rd_kafka_q_keep"
                                             995 *      (FUNCTION #1428)
                                             996 *
00000000                00000000 000000A8    997 @AUTO#rd_kafka_q_keep DSECT
00000000                                     998          DS    XL168
                                             999 *
000008F0                00000000 00006B1A   1000 @CODE    CSECT
                                            1001 *
                                            1002 *
                                            1003 *
                                            1004 * ....... start of rd_kafka_q_disable0
000008F0                                    1005 @LNAME1432 DS  0H
000008F0 00000013                           1006          DC    X'00000013'
000008F4 99846D9281869281                   1007          DC    C'rd_kafka_q_disable0'
00000907 00                                 1008          DC    X'00'
                                            1009 rd_kafka_q_disable0 DCCPRLG CINDEX=1432,BASER=12,FRAME=176,ENTRY=NO,ARC*
                                                                                                                           Page   26 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                H=ZARCH,LNAMEADDR=@LNAME1432
                                            1010          macro
                                            1011          dccextrn &m
                                            1012          gblc    &$dccext(1000)
                                            1013          gbla    &$dccexti
                                            1014          lcla    &i
                                            1015 &$dccext(&$dccexti+1) setc    '&m'
                                            1016 &i       seta    1
                                            1017 .loop    aif    (&i gt &$dccexti).around
                                            1018          aif    ('&$dccext(&i)' eq '&m').getout
                                            1019 &i       seta    &i+1
                                            1020          ago     .loop
                                            1021 .around  anop
                                            1022 &$dccexti seta &$dccexti+1
                                            1023          extrn  &m
                                            1024 .getout  anop
                                            1025          mend
00000908                                    1026+$eye0023    ds    0d                                                    02-DCCCA
00000908 C4C3C3                             1027+         dc cl3'DCC'                                                    02-DCCCA
0000090B 01                                 1028+         dc xl1'01' format one                                          02-DCCCA
0000090C 00000000                           1029+         dc a(0)                                                        02-DCCCA
00000910 000000000000097A                   1030+         dc ad(@PER_1432)                                               02-DCCCA
00000918 00000000000000B0                   1031+         dc ad(176)                                                     02-DCCCA
00000920 0000000000000000                   1032+         dc ad(0)                                                       02-DCCCA
00000928 0000000000001000                   1033+         dc ad(4096)                                                    02-DCCCA
00000930 20                                 1034+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000931 03                                 1035+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000932 03                                 1036+         dc al1(3)                                                      02-DCCCA
00000933 08                                 1037+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000934 00                                 1038+         dc bl.8'00000000'                                              02-DCCCA
00000935 000000                             1039+         dc al3(0)                                                      02-DCCCA
00000938 00000000000008F0                   1040+         dc ad(@LNAME1432)                                              02-DCCCA
00000940                                    1041+         ds 0d                                                          02-DCCCA
00000940 0000000000000908                   1042+         dc ad($eye0023)                                                02-DCCCA
00000948 0000000000000000                   1043+         dc ad(0)                                                       02-DCCCA
00000950                                    1044+         ds    0d                                                       01-DCCPR
00000950                                    1045+rd_kafka_q_disable0 ds 0d                                               01-DCCPR
00000950                                    1046+@REGION_1432_1 ds 0h                                                    01-DCCPR
00000950 EBEC D008 0024          00000008   1047+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000956 E3E0 D088 0004          00000088   1048+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000095C E3C0 D090 0004          00000090   1049+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000962 B904 002E                          1050+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000966 E3B0 C018 0004          00000018   1051+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000096C A7EB 00B0               000000B0   1052+         aghi  14,176              increase by frame size               01-DCCPR
00000970 E3E0 C020 0021          00000020   1053+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000976 4720 B020               00000020   1054+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000097A                                    1055+@PER_1432 ds   0h                                                       01-DCCPR
0000097A EBDE 2080 0024          00000080   1056+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000980 E3C0 2090 0024          00000090   1057+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000986 B904 00D2                          1058+         lgr   13,2                set real frame pointer               01-DCCPR
0000098A B904 00CF                          1059+         lgr   12,15               set base reg                         01-DCCPR
                        00000950            1060+         using @REGION_1432_1,12                                        01-DCCPR
                                                                                                                           Page   27 
  Active Usings: @REGION_1432_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1061 * ******* End of Prologue
                                            1062 * *
                                            1063 * ***           if (do_lock)
0000098E E320 1000 0004          00000000   1064          LG    2,0(0,1)    ; rkq
00000994 E330 100C 0012          0000000C   1065          LT    3,12(0,1)   ; do_lock
0000099A 4780 C060               000009B0   1066          BZ    @L256
                                            1067 * ***                   mtx_lock(&rkq->rkq_lock);
0000099E E320 D0A8 0024          000000A8   1068          STG   2,168(0,13)
000009A4 4110 D0A8               000000A8   1069          LA    1,168(0,13)
000009A8 E3F0 C0D8 0004          00000A28   1070          LG    15,@lit_1432_24 ; mtx_lock
000009AE                                    1071 @@gen_label30 DS    0H
000009AE 05EF                               1072          BALR  14,15
000009B0                                    1073 @@gen_label31 DS    0H
000009B0                                    1074 @L256    DS    0H
                                            1075 * ***           rkq->rkq_flags &= ~0x2;
000009B0 58F0 2084               00000084   1076          L     15,132(0,2)
000009B4 A5F7 FFFD               0000FFFD   1077          NILL  15,65533
000009B8 50F0 2084               00000084   1078          ST    15,132(0,2)
                                            1079 * ***           if (do_lock)
000009BC 1233                               1080          LTR   3,3
000009BE 4780 C084               000009D4   1081          BZ    @ret_lab_1432
                                            1082 * ***                   mtx_unlock(&rkq->rkq_lock);
000009C2 E320 D0A8 0024          000000A8   1083          STG   2,168(0,13)
000009C8 4110 D0A8               000000A8   1084          LA    1,168(0,13)
000009CC E3F0 C0E0 0004          00000A30   1085          LG    15,@lit_1432_25 ; mtx_unlock
000009D2                                    1086 @@gen_label33 DS    0H
000009D2 05EF                               1087          BALR  14,15
000009D4                                    1088 @@gen_label34 DS    0H
000009D4                                    1089 @L257    DS    0H
                                            1090 * ***   }
000009D4                                    1091 @ret_lab_1432 DS 0H
                                            1092 * * **** Start of Epilogue
                                            1093          DCCEPIL
000009D4                                    1094+         ds 0h                                                          01-DCCEP
                                            1095+* Epilog
000009D4 D707 D088 D088 00000088 00000088   1096+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000009DA E3D0 D080 0004          00000080   1097+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000009E0 E3C0 D090 0004          00000090   1098+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000009E6 E3B0 C018 0004          00000018   1099+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000009EC E3C0 B010 0021          00000010   1100+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000009F2 E3E0 D008 0004          00000008   1101+         lg  14,8(0,13)          load up return address                 01-DCCEP
000009F8 EB1C D020 0004          00000020   1102+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000009FE 078E                               1103+         bcr 8,14                if same dsab, just return              01-DCCEP
00000A00 E3F0 D010 0024          00000010   1104+         stg 15,16(0,13)         save return code                       01-DCCEP
00000A06 E300 D018 0024          00000018   1105+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000A0C E3F0 D090 0004          00000090   1106+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000A12 E3F0 F018 0004          00000018   1107+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000A18 47F0 F040               00000040   1108+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1109+* End of Epilog
                                            1110 * * **** End of Epilogue
00000A20                                    1111          DS    0D
00000A20 000000B0                           1112 @FRAMESIZE_1432 DC F'176'
                                                                                                                           Page   28 
  Active Usings: @REGION_1432_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000A24 00000000
00000A28 0000000000000000                   1113 @lit_1432_24 DC AD(mtx_lock)
00000A30 0000000000000000                   1114 @lit_1432_25 DC AD(mtx_unlock)
                                            1115          DROP  12
                                            1116 *
                                            1117 *   DSECT for automatic variables in "rd_kafka_q_disable0"
                                            1118 *      (FUNCTION #1432)
                                            1119 *
00000000                00000000 000000A8   1120 @AUTO#rd_kafka_q_disable0 DSECT
00000000                                    1121          DS    XL168
                                            1122 *
00000A38                00000000 00006B1A   1123 @CODE    CSECT
                                            1124 *
                                            1125 *
                                            1126 *
                                            1127 * ....... start of rd_kafka_q_destroy0
00000A38                                    1128 @LNAME1435 DS  0H
00000A38 00000013                           1129          DC    X'00000013'
00000A3C 99846D9281869281                   1130          DC    C'rd_kafka_q_destroy0'
00000A4F 00                                 1131          DC    X'00'
                                            1132 rd_kafka_q_destroy0 DCCPRLG CINDEX=1435,BASER=12,FRAME=216,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1435
                                            1133          macro
                                            1134          dccextrn &m
                                            1135          gblc    &$dccext(1000)
                                            1136          gbla    &$dccexti
                                            1137          lcla    &i
                                            1138 &$dccext(&$dccexti+1) setc    '&m'
                                            1139 &i       seta    1
                                            1140 .loop    aif    (&i gt &$dccexti).around
                                            1141          aif    ('&$dccext(&i)' eq '&m').getout
                                            1142 &i       seta    &i+1
                                            1143          ago     .loop
                                            1144 .around  anop
                                            1145 &$dccexti seta &$dccexti+1
                                            1146          extrn  &m
                                            1147 .getout  anop
                                            1148          mend
00000A50                                    1149+$eye0026    ds    0d                                                    02-DCCCA
00000A50 C4C3C3                             1150+         dc cl3'DCC'                                                    02-DCCCA
00000A53 01                                 1151+         dc xl1'01' format one                                          02-DCCCA
00000A54 00000000                           1152+         dc a(0)                                                        02-DCCCA
00000A58 0000000000000AC2                   1153+         dc ad(@PER_1435)                                               02-DCCCA
00000A60 00000000000000D8                   1154+         dc ad(216)                                                     02-DCCCA
00000A68 0000000000000000                   1155+         dc ad(0)                                                       02-DCCCA
00000A70 0000000000001000                   1156+         dc ad(4096)                                                    02-DCCCA
00000A78 20                                 1157+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000A79 03                                 1158+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000A7A 03                                 1159+         dc al1(3)                                                      02-DCCCA
00000A7B 08                                 1160+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000A7C 00                                 1161+         dc bl.8'00000000'                                              02-DCCCA
00000A7D 000000                             1162+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   29 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000A80 0000000000000A38                   1163+         dc ad(@LNAME1435)                                              02-DCCCA
00000A88                                    1164+         ds 0d                                                          02-DCCCA
00000A88 0000000000000A50                   1165+         dc ad($eye0026)                                                02-DCCCA
00000A90 0000000000000000                   1166+         dc ad(0)                                                       02-DCCCA
00000A98                                    1167+         ds    0d                                                       01-DCCPR
00000A98                                    1168+rd_kafka_q_destroy0 ds 0d                                               01-DCCPR
00000A98                                    1169+@REGION_1435_1 ds 0h                                                    01-DCCPR
00000A98 EBEC D008 0024          00000008   1170+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000A9E E3E0 D088 0004          00000088   1171+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000AA4 E3C0 D090 0004          00000090   1172+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000AAA B904 002E                          1173+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000AAE E3B0 C018 0004          00000018   1174+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000AB4 A7EB 00D8               000000D8   1175+         aghi  14,216              increase by frame size               01-DCCPR
00000AB8 E3E0 C020 0021          00000020   1176+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000ABE 4720 B020               00000020   1177+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000AC2                                    1178+@PER_1435 ds   0h                                                       01-DCCPR
00000AC2 EBDE 2080 0024          00000080   1179+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000AC8 E3C0 2090 0024          00000090   1180+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000ACE B904 00D2                          1181+         lgr   13,2                set real frame pointer               01-DCCPR
00000AD2 B904 00CF                          1182+         lgr   12,15               set base reg                         01-DCCPR
                        00000A98            1183+         using @REGION_1435_1,12                                        01-DCCPR
                                            1184 * ******* End of Prologue
                                            1185 * *
                                            1186 * ***           int do_delete = 0;
00000AD6 E320 1000 0004          00000000   1187          LG    2,0(0,1)    ; rkq
                                            1188 * ***
                                            1189 * ***           if (disable) {
00000ADC E3F0 100C 0012          0000000C   1190          LT    15,12(0,1)  ; disable
00000AE2 4780 C07E               00000B16   1191          BZ    @L258
                                            1192 * ***
                                            1193 * ***
                                            1194 * ***
                                            1195 * ***
                                            1196 * ***                   rd_kafka_q_disable0(rkq, 1);
00000AE6 E320 D0B0 0024          000000B0   1197          STG   2,176(0,13)
00000AEC E548 D0B8 0001          000000B8   1198          MVGHI 184(13),1
00000AF2 4110 D0B0               000000B0   1199          LA    1,176(0,13)
00000AF6 E3F0 C170 0004          00000C08   1200          LG    15,@lit_1435_28 ; rd_kafka_q_disable0
00000AFC                                    1201 @@gen_label36 DS    0H
00000AFC 05EF                               1202          BALR  14,15
00000AFE                                    1203 @@gen_label37 DS    0H
                                            1204 * ***                   rd_kafka_q_purge0(rkq, 1);
00000AFE E320 D0B0 0024          000000B0   1205          STG   2,176(0,13)
00000B04 E548 D0B8 0001          000000B8   1206          MVGHI 184(13),1
00000B0A 4110 D0B0               000000B0   1207          LA    1,176(0,13)
00000B0E E3F0 C178 0004          00000C10   1208          LG    15,@lit_1435_29 ; rd_kafka_q_purge0
00000B14                                    1209 @@gen_label38 DS    0H
00000B14 05EF                               1210          BALR  14,15
00000B16                                    1211 @@gen_label39 DS    0H
                                            1212 * ***           }
00000B16                                    1213 @L258    DS    0H
                                            1214 * ***
                                                                                                                           Page   30 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1215 * ***           mtx_lock(&rkq->rkq_lock);
00000B16 E320 D0B0 0024          000000B0   1216          STG   2,176(0,13)
00000B1C 4110 D0B0               000000B0   1217          LA    1,176(0,13)
00000B20 E3F0 C180 0004          00000C18   1218          LG    15,@lit_1435_30 ; mtx_lock
00000B26                                    1219 @@gen_label40 DS    0H
00000B26 05EF                               1220          BALR  14,15
00000B28                                    1221 @@gen_label41 DS    0H
                                            1222 * ***           do { if (((!(rkq->rkq_refcnt > 0)))) rd_kafka_crash("C\
                                            1223 * :\\asgkafka\\librdkafka\\src\\rdkafka_queue.h",211, __FUNCTION__, ((\
                                            1224 * (void *)0)), "assert: " "rkq->rkq_refcnt > 0"); } while (0);
00000B28                                    1225 @L259    DS    0H
00000B28 E55C 2080 0000          00000080   1226          CHSI  128(2),0
00000B2E 4720 C0DC               00000B74   1227          BH    @L262
00000B32 E3F0 C198 0004          00000C30   1228          LG    15,@lit_1435_31
00000B38 4110 F046               00000046   1229          LA    1,70(0,15)
00000B3C E310 D0B0 0024          000000B0   1230          STG   1,176(0,13)
00000B42 E548 D0B8 00D3          000000B8   1231          MVGHI 184(13),211
00000B48 E310 C190 0004          00000C28   1232          LG    1,@lit_1435_32
00000B4E 4110 1072               00000072   1233          LA    1,114(0,1)
00000B52 E310 D0C0 0024          000000C0   1234          STG   1,192(0,13)
00000B58 D707 D0C8 D0C8 000000C8 000000C8   1235          XC    200(8,13),200(13)
00000B5E 41F0 F072               00000072   1236          LA    15,114(0,15)
00000B62 E3F0 D0D0 0024          000000D0   1237          STG   15,208(0,13)
00000B68 4110 D0B0               000000B0   1238          LA    1,176(0,13)
00000B6C E3F0 C188 0004          00000C20   1239          LG    15,@lit_1435_33 ; rd_kafka_crash
00000B72                                    1240 @@gen_label43 DS    0H
00000B72 05EF                               1241          BALR  14,15
00000B74                                    1242 @@gen_label44 DS    0H
00000B74                                    1243 @L262    DS    0H
                                            1244 * ***           do_delete = !--rkq->rkq_refcnt;
00000B74 58F0 2080               00000080   1245          L     15,128(0,2)
00000B78 A7FA FFFF               0000FFFF   1246          AHI   15,-1
00000B7C 50F0 2080               00000080   1247          ST    15,128(0,2)
00000B80 103F                               1248          LPR   3,15
00000B82 A73A FFFF               0000FFFF   1249          AHI   3,-1
00000B86 8830 001F               0000001F   1250          SRL   3,31(0)
                                            1251 * ***           mtx_unlock(&rkq->rkq_lock);
00000B8A E320 D0B0 0024          000000B0   1252          STG   2,176(0,13)
00000B90 4110 D0B0               000000B0   1253          LA    1,176(0,13)
00000B94 E3F0 C1A0 0004          00000C38   1254          LG    15,@lit_1435_34 ; mtx_unlock
00000B9A                                    1255 @@gen_label45 DS    0H
00000B9A 05EF                               1256          BALR  14,15
00000B9C                                    1257 @@gen_label46 DS    0H
                                            1258 * ***
                                            1259 * ***           if (((do_delete)))
00000B9C 1233                               1260          LTR   3,3
00000B9E 4780 C11C               00000BB4   1261          BZ    @L263
                                            1262 * ***                   rd_kafka_q_destroy_final(rkq);
00000BA2 E320 D0B0 0024          000000B0   1263          STG   2,176(0,13)
00000BA8 4110 D0B0               000000B0   1264          LA    1,176(0,13)
00000BAC E3F0 C1A8 0004          00000C40   1265          LG    15,@lit_1435_35 ; rd_kafka_q_destroy_final
00000BB2                                    1266 @@gen_label48 DS    0H
                                                                                                                           Page   31 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000BB2 05EF                               1267          BALR  14,15
00000BB4                                    1268 @@gen_label49 DS    0H
00000BB4                                    1269 @L263    DS    0H
                                            1270 * ***   }
00000BB4                                    1271 @ret_lab_1435 DS 0H
                                            1272 * * **** Start of Epilogue
                                            1273          DCCEPIL
00000BB4                                    1274+         ds 0h                                                          01-DCCEP
                                            1275+* Epilog
00000BB4 D707 D088 D088 00000088 00000088   1276+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000BBA E3D0 D080 0004          00000080   1277+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000BC0 E3C0 D090 0004          00000090   1278+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000BC6 E3B0 C018 0004          00000018   1279+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000BCC E3C0 B010 0021          00000010   1280+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000BD2 E3E0 D008 0004          00000008   1281+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000BD8 EB1C D020 0004          00000020   1282+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000BDE 078E                               1283+         bcr 8,14                if same dsab, just return              01-DCCEP
00000BE0 E3F0 D010 0024          00000010   1284+         stg 15,16(0,13)         save return code                       01-DCCEP
00000BE6 E300 D018 0024          00000018   1285+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000BEC E3F0 D090 0004          00000090   1286+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000BF2 E3F0 F018 0004          00000018   1287+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000BF8 47F0 F040               00000040   1288+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1289+* End of Epilog
                                            1290 * * **** End of Epilogue
00000C00                                    1291          DS    0D
00000C00 000000D8                           1292 @FRAMESIZE_1435 DC F'216'
00000C04 00000000
00000C08 0000000000000950                   1293 @lit_1435_28 DC AD(rd_kafka_q_disable0)
00000C10 0000000000000000                   1294 @lit_1435_29 DC AD(rd_kafka_q_purge0)
00000C18 0000000000000000                   1295 @lit_1435_30 DC AD(mtx_lock)
00000C20 0000000000000000                   1296 @lit_1435_33 DC AD(rd_kafka_crash)
00000C28 0000000000006B20                   1297 @lit_1435_32 DC AD(@DATA)
00000C30 0000000000006D48                   1298 @lit_1435_31 DC AD(@strings@)
00000C38 0000000000000000                   1299 @lit_1435_34 DC AD(mtx_unlock)
00000C40 0000000000000000                   1300 @lit_1435_35 DC AD(rd_kafka_q_destroy_final)
                                            1301          DROP  12
                                            1302 *
                                            1303 *   DSECT for automatic variables in "rd_kafka_q_destroy0"
                                            1304 *      (FUNCTION #1435)
                                            1305 *
00000000                00000000 000000AC   1306 @AUTO#rd_kafka_q_destroy0 DSECT
00000000                                    1307          DS    XL168
000000A8                                    1308 rd_kafka_q_destroy0#do_delete#0 DS 1F ; do_delete
                                            1309 *
00000C48                00000000 00006B1A   1310 @CODE    CSECT
                                            1311 *
                                            1312 *
                                            1313 *
                                            1314 * ....... start of rd_kafka_q_destroy_owner
00000C48                                    1315 @LNAME1436 DS  0H
00000C48 00000018                           1316          DC    X'00000018'
00000C4C 99846D9281869281                   1317          DC    C'rd_kafka_q_destroy_owner'
                                                                                                                           Page   32 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000C64 00                                 1318          DC    X'00'
                                            1319 rd_kafka_q_destroy_owner DCCPRLG CINDEX=1436,BASER=12,FRAME=184,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME1436
                                            1320          macro
                                            1321          dccextrn &m
                                            1322          gblc    &$dccext(1000)
                                            1323          gbla    &$dccexti
                                            1324          lcla    &i
                                            1325 &$dccext(&$dccexti+1) setc    '&m'
                                            1326 &i       seta    1
                                            1327 .loop    aif    (&i gt &$dccexti).around
                                            1328          aif    ('&$dccext(&i)' eq '&m').getout
                                            1329 &i       seta    &i+1
                                            1330          ago     .loop
                                            1331 .around  anop
                                            1332 &$dccexti seta &$dccexti+1
                                            1333          extrn  &m
                                            1334 .getout  anop
                                            1335          mend
00000C68                                    1336+$eye0029    ds    0d                                                    02-DCCCA
00000C68 C4C3C3                             1337+         dc cl3'DCC'                                                    02-DCCCA
00000C6B 01                                 1338+         dc xl1'01' format one                                          02-DCCCA
00000C6C 00000000                           1339+         dc a(0)                                                        02-DCCCA
00000C70 0000000000000CDA                   1340+         dc ad(@PER_1436)                                               02-DCCCA
00000C78 00000000000000B8                   1341+         dc ad(184)                                                     02-DCCCA
00000C80 0000000000000000                   1342+         dc ad(0)                                                       02-DCCCA
00000C88 0000000000001000                   1343+         dc ad(4096)                                                    02-DCCCA
00000C90 20                                 1344+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000C91 03                                 1345+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000C92 03                                 1346+         dc al1(3)                                                      02-DCCCA
00000C93 08                                 1347+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000C94 00                                 1348+         dc bl.8'00000000'                                              02-DCCCA
00000C95 000000                             1349+         dc al3(0)                                                      02-DCCCA
00000C98 0000000000000C48                   1350+         dc ad(@LNAME1436)                                              02-DCCCA
00000CA0                                    1351+         ds 0d                                                          02-DCCCA
00000CA0 0000000000000C68                   1352+         dc ad($eye0029)                                                02-DCCCA
00000CA8 0000000000000000                   1353+         dc ad(0)                                                       02-DCCCA
00000CB0                                    1354+         ds    0d                                                       01-DCCPR
00000CB0                                    1355+rd_kafka_q_destroy_owner ds 0d                                          01-DCCPR
00000CB0                                    1356+@REGION_1436_1 ds 0h                                                    01-DCCPR
00000CB0 EBEC D008 0024          00000008   1357+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000CB6 E3E0 D088 0004          00000088   1358+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000CBC E3C0 D090 0004          00000090   1359+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000CC2 B904 002E                          1360+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000CC6 E3B0 C018 0004          00000018   1361+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000CCC A7EB 00B8               000000B8   1362+         aghi  14,184              increase by frame size               01-DCCPR
00000CD0 E3E0 C020 0021          00000020   1363+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000CD6 4720 B020               00000020   1364+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000CDA                                    1365+@PER_1436 ds   0h                                                       01-DCCPR
00000CDA EBDE 2080 0024          00000080   1366+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000CE0 E3C0 2090 0024          00000090   1367+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000CE6 B904 00D2                          1368+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page   33 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000CEA B904 00CF                          1369+         lgr   12,15               set base reg                         01-DCCPR
                        00000CB0            1370+         using @REGION_1436_1,12                                        01-DCCPR
                                            1371 * ******* End of Prologue
                                            1372 * *
                                            1373 * ***           rd_kafka_q_destroy0(rkq, 1);
00000CEE E3F0 1000 0004          00000000   1374          LG    15,0(0,1)   ; rkq
00000CF4 E3F0 D0A8 0024          000000A8   1375          STG   15,168(0,13)
00000CFA E548 D0B0 0001          000000B0   1376          MVGHI 176(13),1
00000D00 4110 D0A8               000000A8   1377          LA    1,168(0,13)
00000D04 E3F0 C0B0 0004          00000D60   1378          LG    15,@lit_1436_37 ; rd_kafka_q_destroy0
00000D0A                                    1379 @@gen_label50 DS    0H
00000D0A 05EF                               1380          BALR  14,15
00000D0C                                    1381 @@gen_label51 DS    0H
                                            1382 * ***   }
00000D0C                                    1383 @ret_lab_1436 DS 0H
                                            1384 * * **** Start of Epilogue
                                            1385          DCCEPIL
00000D0C                                    1386+         ds 0h                                                          01-DCCEP
                                            1387+* Epilog
00000D0C D707 D088 D088 00000088 00000088   1388+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000D12 E3D0 D080 0004          00000080   1389+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000D18 E3C0 D090 0004          00000090   1390+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000D1E E3B0 C018 0004          00000018   1391+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000D24 E3C0 B010 0021          00000010   1392+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000D2A E3E0 D008 0004          00000008   1393+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000D30 EB1C D020 0004          00000020   1394+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000D36 078E                               1395+         bcr 8,14                if same dsab, just return              01-DCCEP
00000D38 E3F0 D010 0024          00000010   1396+         stg 15,16(0,13)         save return code                       01-DCCEP
00000D3E E300 D018 0024          00000018   1397+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000D44 E3F0 D090 0004          00000090   1398+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000D4A E3F0 F018 0004          00000018   1399+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000D50 47F0 F040               00000040   1400+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1401+* End of Epilog
                                            1402 * * **** End of Epilogue
00000D58                                    1403          DS    0D
00000D58 000000B8                           1404 @FRAMESIZE_1436 DC F'184'
00000D5C 00000000
00000D60 0000000000000A98                   1405 @lit_1436_37 DC AD(rd_kafka_q_destroy0)
                                            1406          DROP  12
                                            1407 *
                                            1408 *   DSECT for automatic variables in "rd_kafka_q_destroy_owner"
                                            1409 *      (FUNCTION #1436)
                                            1410 *
00000000                00000000 000000A8   1411 @AUTO#rd_kafka_q_destroy_owner DSECT
00000000                                    1412          DS    XL168
                                            1413 *
00000D68                00000000 00006B1A   1414 @CODE    CSECT
                                            1415 *
                                            1416 *
                                            1417 *
                                            1418 * ....... start of rd_kafka_q_fwd_get
00000D68                                    1419 @LNAME1439 DS  0H
                                                                                                                           Page   34 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000D68 00000012                           1420          DC    X'00000012'
00000D6C 99846D9281869281                   1421          DC    C'rd_kafka_q_fwd_get'
00000D7E 00                                 1422          DC    X'00'
                                            1423 rd_kafka_q_fwd_get DCCPRLG CINDEX=1439,BASER=12,FRAME=184,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1439
                                            1424          macro
                                            1425          dccextrn &m
                                            1426          gblc    &$dccext(1000)
                                            1427          gbla    &$dccexti
                                            1428          lcla    &i
                                            1429 &$dccext(&$dccexti+1) setc    '&m'
                                            1430 &i       seta    1
                                            1431 .loop    aif    (&i gt &$dccexti).around
                                            1432          aif    ('&$dccext(&i)' eq '&m').getout
                                            1433 &i       seta    &i+1
                                            1434          ago     .loop
                                            1435 .around  anop
                                            1436 &$dccexti seta &$dccexti+1
                                            1437          extrn  &m
                                            1438 .getout  anop
                                            1439          mend
00000D80                                    1440+$eye0032    ds    0d                                                    02-DCCCA
00000D80 C4C3C3                             1441+         dc cl3'DCC'                                                    02-DCCCA
00000D83 01                                 1442+         dc xl1'01' format one                                          02-DCCCA
00000D84 00000000                           1443+         dc a(0)                                                        02-DCCCA
00000D88 0000000000000DF2                   1444+         dc ad(@PER_1439)                                               02-DCCCA
00000D90 00000000000000B8                   1445+         dc ad(184)                                                     02-DCCCA
00000D98 0000000000000000                   1446+         dc ad(0)                                                       02-DCCCA
00000DA0 0000000000001000                   1447+         dc ad(4096)                                                    02-DCCCA
00000DA8 20                                 1448+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000DA9 03                                 1449+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000DAA 03                                 1450+         dc al1(3)                                                      02-DCCCA
00000DAB 08                                 1451+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000DAC 00                                 1452+         dc bl.8'00000000'                                              02-DCCCA
00000DAD 000000                             1453+         dc al3(0)                                                      02-DCCCA
00000DB0 0000000000000D68                   1454+         dc ad(@LNAME1439)                                              02-DCCCA
00000DB8                                    1455+         ds 0d                                                          02-DCCCA
00000DB8 0000000000000D80                   1456+         dc ad($eye0032)                                                02-DCCCA
00000DC0 0000000000000000                   1457+         dc ad(0)                                                       02-DCCCA
00000DC8                                    1458+         ds    0d                                                       01-DCCPR
00000DC8                                    1459+rd_kafka_q_fwd_get ds 0d                                                01-DCCPR
00000DC8                                    1460+@REGION_1439_1 ds 0h                                                    01-DCCPR
00000DC8 EBEC D008 0024          00000008   1461+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000DCE E3E0 D088 0004          00000088   1462+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000DD4 E3C0 D090 0004          00000090   1463+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000DDA B904 002E                          1464+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000DDE E3B0 C018 0004          00000018   1465+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000DE4 A7EB 00B8               000000B8   1466+         aghi  14,184              increase by frame size               01-DCCPR
00000DE8 E3E0 C020 0021          00000020   1467+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000DEE 4720 B020               00000020   1468+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000DF2                                    1469+@PER_1439 ds   0h                                                       01-DCCPR
00000DF2 EBDE 2080 0024          00000080   1470+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000DF8 E3C0 2090 0024          00000090   1471+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000DFE B904 00D2                          1472+         lgr   13,2                set real frame pointer               01-DCCPR
00000E02 B904 00CF                          1473+         lgr   12,15               set base reg                         01-DCCPR
                        00000DC8            1474+         using @REGION_1439_1,12                                        01-DCCPR
                                            1475 * ******* End of Prologue
                                            1476 * *
00000E06 E320 1000 0004          00000000   1477          LG    2,0(0,1)    ; rkq
                                            1478 * ***           rd_kafka_q_t *fwdq;
                                            1479 * ***           if (do_lock)
00000E0C E340 100C 0012          0000000C   1480          LT    4,12(0,1)   ; do_lock
00000E12 4780 C060               00000E28   1481          BZ    @L270
                                            1482 * ***                   mtx_lock(&rkq->rkq_lock);
00000E16 E320 D0B0 0024          000000B0   1483          STG   2,176(0,13)
00000E1C 4110 D0B0               000000B0   1484          LA    1,176(0,13)
00000E20 E3F0 C0F0 0004          00000EB8   1485          LG    15,@lit_1439_39 ; mtx_lock
00000E26                                    1486 @@gen_label53 DS    0H
00000E26 05EF                               1487          BALR  14,15
00000E28                                    1488 @@gen_label54 DS    0H
00000E28                                    1489 @L270    DS    0H
                                            1490 * ***
                                            1491 * ***           if ((fwdq = rkq->rkq_fwdq))
00000E28 E330 2058 0004          00000058   1492          LG    3,88(0,2)   ; offset of rkq_fwdq in rd_kafka_q_s
00000E2E B902 00F3                          1493          LTGR  15,3
00000E32 4780 C080               00000E48   1494          BZ    @L271
                                            1495 * ***                   rd_kafka_q_keep(fwdq);
00000E36 E330 D0B0 0024          000000B0   1496          STG   3,176(0,13)
00000E3C 4110 D0B0               000000B0   1497          LA    1,176(0,13)
00000E40 E3F0 C0F8 0004          00000EC0   1498          LG    15,@lit_1439_40 ; rd_kafka_q_keep
00000E46                                    1499 @@gen_label56 DS    0H
00000E46 05EF                               1500          BALR  14,15
00000E48                                    1501 @@gen_label57 DS    0H
00000E48                                    1502 @L271    DS    0H
                                            1503 * ***
                                            1504 * ***           if (do_lock)
00000E48 1244                               1505          LTR   4,4
00000E4A 4780 C098               00000E60   1506          BZ    @L272
                                            1507 * ***                   mtx_unlock(&rkq->rkq_lock);
00000E4E E320 D0B0 0024          000000B0   1508          STG   2,176(0,13)
00000E54 4110 D0B0               000000B0   1509          LA    1,176(0,13)
00000E58 E3F0 C100 0004          00000EC8   1510          LG    15,@lit_1439_41 ; mtx_unlock
00000E5E                                    1511 @@gen_label59 DS    0H
00000E5E 05EF                               1512          BALR  14,15
00000E60                                    1513 @@gen_label60 DS    0H
00000E60                                    1514 @L272    DS    0H
                                            1515 * ***
                                            1516 * ***           return fwdq;
00000E60 B904 00F3                          1517          LGR   15,3
                                            1518 * ***   }
                                            1519 * * **** Start of Epilogue
                                            1520          DCCEPIL
00000E64                                    1521+         ds 0h                                                          01-DCCEP
                                            1522+* Epilog
                                                                                                                           Page   36 
  Active Usings: @REGION_1439_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000E64 D707 D088 D088 00000088 00000088   1523+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000E6A E3D0 D080 0004          00000080   1524+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000E70 E3C0 D090 0004          00000090   1525+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000E76 E3B0 C018 0004          00000018   1526+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000E7C E3C0 B010 0021          00000010   1527+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000E82 E3E0 D008 0004          00000008   1528+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000E88 EB1C D020 0004          00000020   1529+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000E8E 078E                               1530+         bcr 8,14                if same dsab, just return              01-DCCEP
00000E90 E3F0 D010 0024          00000010   1531+         stg 15,16(0,13)         save return code                       01-DCCEP
00000E96 E300 D018 0024          00000018   1532+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000E9C E3F0 D090 0004          00000090   1533+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000EA2 E3F0 F018 0004          00000018   1534+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000EA8 47F0 F040               00000040   1535+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1536+* End of Epilog
                                            1537 * * **** End of Epilogue
00000EB0                                    1538          DS    0D
00000EB0 000000B8                           1539 @FRAMESIZE_1439 DC F'184'
00000EB4 00000000
00000EB8 0000000000000000                   1540 @lit_1439_39 DC AD(mtx_lock)
00000EC0 0000000000000818                   1541 @lit_1439_40 DC AD(rd_kafka_q_keep)
00000EC8 0000000000000000                   1542 @lit_1439_41 DC AD(mtx_unlock)
                                            1543          DROP  12
                                            1544 *
                                            1545 *   DSECT for automatic variables in "rd_kafka_q_fwd_get"
                                            1546 *      (FUNCTION #1439)
                                            1547 *
00000000                00000000 000000A8   1548 @AUTO#rd_kafka_q_fwd_get DSECT
00000000                                    1549          DS    XL168
                                            1550 *
00000ED0                00000000 00006B1A   1551 @CODE    CSECT
                                            1552 *
                                            1553 *
                                            1554 *
                                            1555 * ....... start of rd_kafka_q_io_event
00000ED0                                    1556 @LNAME1441 DS  0H
00000ED0 00000013                           1557          DC    X'00000013'
00000ED4 99846D9281869281                   1558          DC    C'rd_kafka_q_io_event'
00000EE7 00                                 1559          DC    X'00'
                                            1560 rd_kafka_q_io_event DCCPRLG CINDEX=1441,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1441
                                            1561          macro
                                            1562          dccextrn &m
                                            1563          gblc    &$dccext(1000)
                                            1564          gbla    &$dccexti
                                            1565          lcla    &i
                                            1566 &$dccext(&$dccexti+1) setc    '&m'
                                            1567 &i       seta    1
                                            1568 .loop    aif    (&i gt &$dccexti).around
                                            1569          aif    ('&$dccext(&i)' eq '&m').getout
                                            1570 &i       seta    &i+1
                                            1571          ago     .loop
                                            1572 .around  anop
                                                                                                                           Page   37 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1573 &$dccexti seta &$dccexti+1
                                            1574          extrn  &m
                                            1575 .getout  anop
                                            1576          mend
00000EE8                                    1577+$eye0035    ds    0d                                                    02-DCCCA
00000EE8 C4C3C3                             1578+         dc cl3'DCC'                                                    02-DCCCA
00000EEB 01                                 1579+         dc xl1'01' format one                                          02-DCCCA
00000EEC 00000000                           1580+         dc a(0)                                                        02-DCCCA
00000EF0 0000000000000F5A                   1581+         dc ad(@PER_1441)                                               02-DCCCA
00000EF8 00000000000000C0                   1582+         dc ad(192)                                                     02-DCCCA
00000F00 0000000000000000                   1583+         dc ad(0)                                                       02-DCCCA
00000F08 0000000000001000                   1584+         dc ad(4096)                                                    02-DCCCA
00000F10 20                                 1585+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000F11 03                                 1586+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000F12 03                                 1587+         dc al1(3)                                                      02-DCCCA
00000F13 08                                 1588+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000F14 00                                 1589+         dc bl.8'00000000'                                              02-DCCCA
00000F15 000000                             1590+         dc al3(0)                                                      02-DCCCA
00000F18 0000000000000ED0                   1591+         dc ad(@LNAME1441)                                              02-DCCCA
00000F20                                    1592+         ds 0d                                                          02-DCCCA
00000F20 0000000000000EE8                   1593+         dc ad($eye0035)                                                02-DCCCA
00000F28 0000000000000000                   1594+         dc ad(0)                                                       02-DCCCA
00000F30                                    1595+         ds    0d                                                       01-DCCPR
00000F30                                    1596+rd_kafka_q_io_event ds 0d                                               01-DCCPR
00000F30                                    1597+@REGION_1441_1 ds 0h                                                    01-DCCPR
00000F30 EBEC D008 0024          00000008   1598+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000F36 E3E0 D088 0004          00000088   1599+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000F3C E3C0 D090 0004          00000090   1600+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000F42 B904 002E                          1601+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000F46 E3B0 C018 0004          00000018   1602+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000F4C A7EB 00C0               000000C0   1603+         aghi  14,192              increase by frame size               01-DCCPR
00000F50 E3E0 C020 0021          00000020   1604+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000F56 4720 B020               00000020   1605+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000F5A                                    1606+@PER_1441 ds   0h                                                       01-DCCPR
00000F5A EBDE 2080 0024          00000080   1607+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000F60 E3C0 2090 0024          00000090   1608+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000F66 B904 00D2                          1609+         lgr   13,2                set real frame pointer               01-DCCPR
00000F6A B904 00CF                          1610+         lgr   12,15               set base reg                         01-DCCPR
                        00000F30            1611+         using @REGION_1441_1,12                                        01-DCCPR
                                            1612 * ******* End of Prologue
                                            1613 * *
00000F6E E3F0 1000 0004          00000000   1614          LG    15,0(0,1)   ; rkq
                                            1615 * ***
                                            1616 * ***      if (((!rkq->rkq_qio)))
00000F74 E310 F090 0002          00000090   1617          LTG   1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000F7A 4780 C102               00001032   1618          BZ    @ret_lab_1441
                                            1619 * ***         return;
00000F7E                                    1620 @L275    DS    0H
                                            1621 * ***
                                            1622 * ***           if (rkq->rkq_qio->event_cb) {
00000F7E E310 F090 0004          00000090   1623          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000F84 E310 1020 0002          00000020   1624          LTG   1,32(0,1)   ; offset of event_cb in rd_kafka_q_io
                                                                                                                           Page   38 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000F8A 4780 C0A8               00000FD8   1625          BZ    @L276
                                            1626 * ***                   rkq->rkq_qio->event_cb(rkq->rkq_rk,
                                            1627 * ***                                          rkq->rkq_qio->event_cb_\
                                            1628 * opaque);
00000F8E E310 F088 0004          00000088   1629          LG    1,136(0,15)
00000F94 E310 D0A8 0024          000000A8   1630          STG   1,168(0,13)
00000F9A E310 F090 0004          00000090   1631          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000FA0 E310 1028 0004          00000028   1632          LG    1,40(0,1)
00000FA6 E310 D0B0 0024          000000B0   1633          STG   1,176(0,13)
00000FAC E3F0 F090 0004          00000090   1634          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000FB2 E3F0 F020 0004          00000020   1635          LG    15,32(0,15) ; offset of event_cb in rd_kafka_q_io
00000FB8 4110 D0A8               000000A8   1636          LA    1,168(0,13)
00000FBC                                    1637 @@gen_label63 DS    0H
00000FBC 05EF                               1638          BALR  14,15
00000FBE                                    1639 @@gen_label64 DS    0H
                                            1640 * ***                   return;
00000FBE 47F0 C102               00001032   1641          B     @ret_lab_1441
00000FC8                                    1642          DS    0D
00000FC8 000000C0                           1643 @FRAMESIZE_1441 DC F'192'
00000FCC 00000000
00000FD0 0000000000000000                   1644 @lit_1441_43 DC AD(write)
                                            1645 * ***           }
00000FD8                                    1646 @L276    DS    0H
                                            1647 * ***
                                            1648 * ***
                                            1649 * ***
                                            1650 * ***
                                            1651 * ***
                                            1652 * ***
                                            1653 * ***           if (rkq->rkq_qio->sent)
00000FD8 E310 F090 0004          00000090   1654          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000FDE 9500 1018      00000018 00000000   1655          CLI   24(1),0
00000FE2 4770 C102               00001032   1656          BNE   @ret_lab_1441
                                            1657 * ***                   return;
00000FE6                                    1658 @L277    DS    0H
                                            1659 * ***
                                            1660 * ***           rkq->rkq_qio->sent = 1;
00000FE6 E310 F090 0004          00000090   1661          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000FEC 9201 1018      00000018 00000001   1662          MVI   24(1),1     ; offset of sent in rd_kafka_q_io
                                            1663 * ***
                                            1664 * ***
                                            1665 * ***
                                            1666 * ***           if (write(rkq->rkq_qio->fd,rkq->rkq_qio->payload,(int)\
                                            1667 * rkq->rkq_qio->size) == -1)
00000FF0 E310 F090 0004          00000090   1668          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000FF6 E310 1000 0014          00000000   1669          LGF   1,0(0,1)
00000FFC E310 D0A8 0024          000000A8   1670          STG   1,168(0,13)
00001002 E310 F090 0004          00000090   1671          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00001008 E310 1008 0004          00000008   1672          LG    1,8(0,1)
0000100E E310 D0B0 0024          000000B0   1673          STG   1,176(0,13)
00001014 E3F0 F090 0004          00000090   1674          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000101A E3F0 F014 0014          00000014   1675          LGF   15,20(0,15)
                                                                                                                           Page   39 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001020 E3F0 D0B8 0024          000000B8   1676          STG   15,184(0,13)
00001026 4110 D0A8               000000A8   1677          LA    1,168(0,13)
0000102A E3F0 C0A0 0004          00000FD0   1678          LG    15,@lit_1441_43 ; write
00001030                                    1679 @@gen_label66 DS    0H
00001030 05EF                               1680          BALR  14,15
00001032                                    1681 @@gen_label67 DS    0H
                                            1682 * ***
                                            1683 * ***                   ;
00001032                                    1684 @L278    DS    0H
                                            1685 * ***   }
00001032                                    1686 @ret_lab_1441 DS 0H
                                            1687 * * **** Start of Epilogue
                                            1688          DCCEPIL
00001032                                    1689+         ds 0h                                                          01-DCCEP
                                            1690+* Epilog
00001032 D707 D088 D088 00000088 00000088   1691+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001038 E3D0 D080 0004          00000080   1692+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000103E E3C0 D090 0004          00000090   1693+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001044 E3B0 C018 0004          00000018   1694+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000104A E3C0 B010 0021          00000010   1695+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001050 E3E0 D008 0004          00000008   1696+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001056 EB1C D020 0004          00000020   1697+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000105C 078E                               1698+         bcr 8,14                if same dsab, just return              01-DCCEP
0000105E E3F0 D010 0024          00000010   1699+         stg 15,16(0,13)         save return code                       01-DCCEP
00001064 E300 D018 0024          00000018   1700+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000106A E3F0 D090 0004          00000090   1701+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001070 E3F0 F018 0004          00000018   1702+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001076 47F0 F040               00000040   1703+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1704+* End of Epilog
                                            1705 * * **** End of Epilogue
                                            1706          DROP  12
                                            1707 *
                                            1708 *   DSECT for automatic variables in "rd_kafka_q_io_event"
                                            1709 *      (FUNCTION #1441)
                                            1710 *
00000000                00000000 000000A8   1711 @AUTO#rd_kafka_q_io_event DSECT
00000000                                    1712          DS    XL168
                                            1713 *
0000107A                00000000 00006B1A   1714 @CODE    CSECT
                                            1715 *
                                            1716 *
                                            1717 *
                                            1718 * ....... start of rd_kafka_op_cmp_prio
0000107A                                    1719 @LNAME1442 DS  0H
0000107A 00000014                           1720          DC    X'00000014'
0000107E 99846D9281869281                   1721          DC    C'rd_kafka_op_cmp_prio'
00001092 00                                 1722          DC    X'00'
                                            1723 rd_kafka_op_cmp_prio DCCPRLG CINDEX=1442,BASER=12,FRAME=176,SAVEAREA=NO*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1442
                                            1724          macro
                                            1725          dccextrn &m
                                            1726          gblc    &$dccext(1000)
                                                                                                                           Page   40 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1727          gbla    &$dccexti
                                            1728          lcla    &i
                                            1729 &$dccext(&$dccexti+1) setc    '&m'
                                            1730 &i       seta    1
                                            1731 .loop    aif    (&i gt &$dccexti).around
                                            1732          aif    ('&$dccext(&i)' eq '&m').getout
                                            1733 &i       seta    &i+1
                                            1734          ago     .loop
                                            1735 .around  anop
                                            1736 &$dccexti seta &$dccexti+1
                                            1737          extrn  &m
                                            1738 .getout  anop
                                            1739          mend
00001098                                    1740+$eye0038    ds    0d                                                    02-DCCCA
00001098 C4C3C3                             1741+         dc cl3'DCC'                                                    02-DCCCA
0000109B 01                                 1742+         dc xl1'01' format one                                          02-DCCCA
0000109C 00000000                           1743+         dc a(0)                                                        02-DCCCA
000010A0 0000000000000000                   1744+         dc ad(0)                                                       02-DCCCA
000010A8 00000000000000B0                   1745+         dc ad(176)                                                     02-DCCCA
000010B0 0000000000000000                   1746+         dc ad(0)                                                       02-DCCCA
000010B8 0000000000001000                   1747+         dc ad(4096)                                                    02-DCCCA
000010C0 20                                 1748+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000010C1 03                                 1749+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000010C2 03                                 1750+         dc al1(3)                                                      02-DCCCA
000010C3 08                                 1751+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000010C4 00                                 1752+         dc bl.8'00000000'                                              02-DCCCA
000010C5 000000                             1753+         dc al3(0)                                                      02-DCCCA
000010C8 000000000000107A                   1754+         dc ad(@LNAME1442)                                              02-DCCCA
000010D0                                    1755+         ds 0d                                                          02-DCCCA
000010D0 0000000000001098                   1756+         dc ad($eye0038)                                                02-DCCCA
000010D8 0000000000000000                   1757+         dc ad(0)                                                       02-DCCCA
000010E0                                    1758+         ds    0d                                                       01-DCCPR
000010E0                                    1759+rd_kafka_op_cmp_prio ds 0d                                              01-DCCPR
000010E0                                    1760+@REGION_1442_1 ds 0h                                                    01-DCCPR
000010E0 EBEC D008 0024          00000008   1761+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000010E6 B904 00CF                          1762+         lgr   12,15               set base reg                         01-DCCPR
                        000010E0            1763+         using @REGION_1442_1,12                                        01-DCCPR
                                            1764 * ******* End of Prologue
                                            1765 * *
                                            1766 * ***           const rd_kafka_op_t *a = _a, *b = _b;
000010EA E3F0 1000 0004          00000000   1767          LG    15,0(0,1)   ; _a
000010F0 E310 1008 0004          00000008   1768          LG    1,8(0,1)    ; _b
                                            1769 * ***
                                            1770 * ***           return (int)((b->rko_prio) < (a->rko_prio) ? -1 : ((b-\
                                            1771 * >rko_prio) > (a->rko_prio)));
000010F6 5820 1034               00000034   1772          L     2,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
000010FA 5920 F034               00000034   1773          C     2,52(0,15)
000010FE 47B0 C02A               0000110A   1774          BNL   @L279
00001102 A7F8 FFFF               0000FFFF   1775          LHI   15,-1       ; -1
00001106 47F0 C042               00001122   1776          B     @L280
0000110A                                    1777 @L279    DS    0H
0000110A 5810 1034               00000034   1778          L     1,52(0,1)   ; offset of rko_prio in rd_kafka_op_s
                                                                                                                           Page   41 
  Active Usings: @REGION_1442_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000110E 5910 F034               00000034   1779          C     1,52(0,15)
00001112 47D0 C03E               0000111E   1780          BNH   @@gen_label69
00001116 A7F8 0001               00000001   1781          LHI   15,1
0000111A 47F0 C042               00001122   1782          B     @@gen_label70
0000111E                                    1783 @@gen_label69 DS 0H
0000111E A7F8 0000               00000000   1784          LHI   15,0
00001122                                    1785 @@gen_label70 DS 0H
00001122                                    1786 @L280    DS    0H
00001122 B914 00FF                          1787          LGFR  15,15
                                            1788 * ***   }
                                            1789 * * **** Start of Epilogue
                                            1790          DCCEPIL
00001126                                    1791+         ds 0h                                                          01-DCCEP
                                            1792+* Epilog
                                            1793+* Epilog
00001126 E3E0 D008 0004          00000008   1794+         lg    14,8(,13) restore the reg                                01-DCCEP
0000112C EB1C D020 0004          00000020   1795+         lmg   1,12,32(13)                                              01-DCCEP
00001132 07FE                               1796+         br   14                                                        01-DCCEP
                                            1797+* End of Epilog
                                            1798 * * **** End of Epilogue
                                            1799          DROP  12
                                            1800 *
                                            1801 *   DSECT for automatic variables in "rd_kafka_op_cmp_prio"
                                            1802 *      (FUNCTION #1442)
                                            1803 *
00000000                00000000 000000A8   1804 @AUTO#rd_kafka_op_cmp_prio DSECT
00000000                                    1805          DS    XL168
                                            1806 *
00001134                00000000 00006B1A   1807 @CODE    CSECT
                                            1808 *
                                            1809 *
                                            1810 *
                                            1811 * ....... start of rd_kafka_q_enq0
00001134                                    1812 @LNAME1444 DS  0H
00001134 0000000F                           1813          DC    X'0000000F'
00001138 99846D9281869281                   1814          DC    C'rd_kafka_q_enq0'
00001147 00                                 1815          DC    X'00'
                                            1816 rd_kafka_q_enq0 DCCPRLG CINDEX=1444,BASER=12,FRAME=192,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1444
                                            1817          macro
                                            1818          dccextrn &m
                                            1819          gblc    &$dccext(1000)
                                            1820          gbla    &$dccexti
                                            1821          lcla    &i
                                            1822 &$dccext(&$dccexti+1) setc    '&m'
                                            1823 &i       seta    1
                                            1824 .loop    aif    (&i gt &$dccexti).around
                                            1825          aif    ('&$dccext(&i)' eq '&m').getout
                                            1826 &i       seta    &i+1
                                            1827          ago     .loop
                                            1828 .around  anop
                                            1829 &$dccexti seta &$dccexti+1
                                                                                                                           Page   42 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            1830          extrn  &m
                                            1831 .getout  anop
                                            1832          mend
00001148                                    1833+$eye0041    ds    0d                                                    02-DCCCA
00001148 C4C3C3                             1834+         dc cl3'DCC'                                                    02-DCCCA
0000114B 01                                 1835+         dc xl1'01' format one                                          02-DCCCA
0000114C 00000000                           1836+         dc a(0)                                                        02-DCCCA
00001150 00000000000011BA                   1837+         dc ad(@PER_1444)                                               02-DCCCA
00001158 00000000000000C0                   1838+         dc ad(192)                                                     02-DCCCA
00001160 0000000000000000                   1839+         dc ad(0)                                                       02-DCCCA
00001168 0000000000001000                   1840+         dc ad(4096)                                                    02-DCCCA
00001170 20                                 1841+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001171 03                                 1842+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001172 03                                 1843+         dc al1(3)                                                      02-DCCCA
00001173 08                                 1844+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001174 00                                 1845+         dc bl.8'00000000'                                              02-DCCCA
00001175 000000                             1846+         dc al3(0)                                                      02-DCCCA
00001178 0000000000001134                   1847+         dc ad(@LNAME1444)                                              02-DCCCA
00001180                                    1848+         ds 0d                                                          02-DCCCA
00001180 0000000000001148                   1849+         dc ad($eye0041)                                                02-DCCCA
00001188 0000000000000000                   1850+         dc ad(0)                                                       02-DCCCA
00001190                                    1851+         ds    0d                                                       01-DCCPR
00001190                                    1852+rd_kafka_q_enq0 ds 0d                                                   01-DCCPR
00001190                                    1853+@REGION_1444_1 ds 0h                                                    01-DCCPR
00001190 EBEC D008 0024          00000008   1854+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001196 E3E0 D088 0004          00000088   1855+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000119C E3C0 D090 0004          00000090   1856+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000011A2 B904 002E                          1857+         lgr   2,14                copy addr of our savearea            01-DCCPR
000011A6 E3B0 C018 0004          00000018   1858+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000011AC A7EB 00C0               000000C0   1859+         aghi  14,192              increase by frame size               01-DCCPR
000011B0 E3E0 C020 0021          00000020   1860+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000011B6 4720 B020               00000020   1861+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000011BA                                    1862+@PER_1444 ds   0h                                                       01-DCCPR
000011BA EBDE 2080 0024          00000080   1863+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000011C0 E3C0 2090 0024          00000090   1864+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000011C6 B904 00D2                          1865+         lgr   13,2                set real frame pointer               01-DCCPR
000011CA B904 00CF                          1866+         lgr   12,15               set base reg                         01-DCCPR
                        00001190            1867+         using @REGION_1444_1,12                                        01-DCCPR
                                            1868 * ******* End of Prologue
                                            1869 * *
                                            1870 * ***       if (((!rko->rko_prio)))
000011CE EB34 1000 0004          00000000   1871          LMG   3,4,0(1)    ; rkq
000011D4 E3F0 4034 0012          00000034   1872          LT    15,52(0,4)  ; offset of rko_prio in rd_kafka_op_s
000011DA 4770 C090               00001220   1873          BNZ   @L288
                                            1874 * ***           do {  (rko)->rko_link .tqe_next = (((void *)0)); (rko)\
                                            1875 * ->rko_link .tqe_prev = (&rkq->rkq_q)->tqh_last; *(&rkq->rkq_q)->tqh_\
                                            1876 * last = (rko); (&rkq->rkq_q)->tqh_last = &(rko)->rko_link .tqe_next; \
                                            1877 * } while ( 0);
000011DE                                    1878 @L289    DS    0H
000011DE A7F9 0000               00000000   1879          LGHI  15,0        ; 0
000011E2 E3F0 4000 0024          00000000   1880          STG   15,0(0,4)   ; rko
000011E8 E3F0 3068 0004          00000068   1881          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
                                                                                                                           Page   43 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000011EE E3F0 4008 0024          00000008   1882          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
000011F4 E3F0 3068 0004          00000068   1883          LG    15,104(0,3) ; offset of tqh_last in rd_kafka_op_tailq
000011FA E340 F000 0024          00000000   1884          STG   4,0(0,15)
00001200 E340 3068 0024          00000068   1885          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
                                            1886 * ***       else if (at_head)
00001206 47F0 C1C2               00001352   1887          B     @L292
00001210                                    1888          DS    0D
00001210 000000C0                           1889 @FRAMESIZE_1444 DC F'192'
00001214 00000000
00001218 00000000000010E0                   1890 @lit_1444_47 DC AD(rd_kafka_op_cmp_prio)
00001220                                    1891 @L288    DS    0H
00001220 E3F0 1014 0012          00000014   1892          LT    15,20(0,1)  ; at_head
00001226 4780 C0D8               00001268   1893          BZ    @L300
                                            1894 * ***               do {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_\
                                            1895 * q)->tqh_first) != (((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link \
                                            1896 * .tqe_prev = &(rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last\
                                            1897 *  = &(rko)->rko_link .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rk\
                                            1898 * o)->rko_link .tqe_prev = &(&rkq->rkq_q)->tqh_first; } while ( 0);
0000122A                                    1899 @L294    DS    0H
0000122A E3F0 3060 0004          00000060   1900          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001230 E3F0 4000 0024          00000000   1901          STG   15,0(0,4)
00001236 B902 00FF                          1902          LTGR  15,15
0000123A 4780 C0BE               0000124E   1903          BE    @L297
0000123E E3F0 3060 0004          00000060   1904          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001244 E340 F008 0024          00000008   1905          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
0000124A 47F0 C0C4               00001254   1906          B     @L298
0000124E                                    1907 @L297    DS    0H
0000124E E340 3068 0024          00000068   1908          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
00001254                                    1909 @L298    DS    0H
00001254 E340 3060 0024          00000060   1910          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
0000125A 41F0 3060               00000060   1911          LA    15,96(0,3)
0000125E E3F0 4008 0024          00000008   1912          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
                                            1913 * ***       else
00001264 47F0 C1C2               00001352   1914          B     @L292
                                            1915 * ***           do { if(((&rkq->rkq_q)->tqh_first) == ((void *)0)) { d\
                                            1916 * o {  if (((rko)->rko_link .tqe_next = (&rkq->rkq_q)->tqh_first) != (\
                                            1917 * ((void *)0))) (&rkq->rkq_q)->tqh_first->rko_link .tqe_prev = &(rko)-\
                                            1918 * >rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rko_link\
                                            1919 *  .tqe_next; (&rkq->rkq_q)->tqh_first = (rko); (rko)->rko_link .tqe_p\
                                            1920 * rev = &(&rkq->rkq_q)->tqh_first; } while ( 0); } else { rd_kafka_op_\
                                            1921 * t * _tmp; for ((_tmp) = ((&rkq->rkq_q)->tqh_first); (_tmp) != (((voi\
                                            1922 * d *)0)); (_tmp) = ((_tmp)->rko_link .tqe_next)) { if(rd_kafka_op_cmp\
                                            1923 * _prio(rko,_tmp) < 0) { do {  (rko)->rko_link .tqe_prev = (_tmp)->rko\
                                            1924 * _link .tqe_prev; (rko)->rko_link .tqe_next = (_tmp); *(_tmp)->rko_li\
                                            1925 * nk .tqe_prev = (rko); (_tmp)->rko_link .tqe_prev = &(rko)->rko_link \
                                            1926 * .tqe_next; } while ( 0); break; } if(!((_tmp)->rko_link .tqe_next)) \
                                            1927 * { do {  if (((rko)->rko_link .tqe_next = (_tmp)->rko_link .tqe_next)\
                                            1928 *  != (((void *)0))) (rko)->rko_link .tqe_next->rko_link .tqe_prev = &\
                                            1929 * (rko)->rko_link .tqe_next; else (&rkq->rkq_q)->tqh_last = &(rko)->rk\
                                            1930 * o_link .tqe_next; (_tmp)->rko_link .tqe_next = (rko); (rko)->rko_lin\
                                            1931 * k .tqe_prev = &(_tmp)->rko_link .tqe_next; } while ( 0); break; } } \
                                            1932 * } } while(0);
                                                                                                                           Page   44 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001268                                    1933 @L300    DS    0H
00001268 E3F0 3060 0002          00000060   1934          LTG   15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
0000126E 4770 C120               000012B0   1935          BNE   @L303
00001272                                    1936 @L304    DS    0H
00001272 E3F0 3060 0004          00000060   1937          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
00001278 E3F0 4000 0024          00000000   1938          STG   15,0(0,4)
0000127E B902 00FF                          1939          LTGR  15,15
00001282 4780 C106               00001296   1940          BE    @L307
00001286 E3F0 3060 0004          00000060   1941          LG    15,96(0,3)  ; offset of rkq_q in rd_kafka_q_s
0000128C E340 F008 0024          00000008   1942          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
00001292 47F0 C10C               0000129C   1943          B     @L308
00001296                                    1944 @L307    DS    0H
00001296 E340 3068 0024          00000068   1945          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
0000129C                                    1946 @L308    DS    0H
0000129C E340 3060 0024          00000060   1947          STG   4,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
000012A2 41F0 3060               00000060   1948          LA    15,96(0,3)
000012A6 E3F0 4008 0024          00000008   1949          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
000012AC 47F0 C1C2               00001352   1950          B     @L309
000012B0                                    1951 @L303    DS    0H
000012B0 E320 3060 0004          00000060   1952          LG    2,96(0,3)   ; offset of rkq_q in rd_kafka_q_s
000012B6 47F0 C1BA               0000134A   1953          B     @L311
000012BA                                    1954 @L310    DS    0H
000012BA E340 D0B0 0024          000000B0   1955          STG   4,176(0,13)
000012C0 E320 D0B8 0024          000000B8   1956          STG   2,184(0,13)
000012C6 4110 D0B0               000000B0   1957          LA    1,176(0,13)
000012CA E3F0 C088 0004          00001218   1958          LG    15,@lit_1444_47 ; rd_kafka_op_cmp_prio
000012D0                                    1959 @@gen_label76 DS    0H
000012D0 05EF                               1960          BALR  14,15
000012D2                                    1961 @@gen_label77 DS    0H
000012D2 12FF                               1962          LTR   15,15
000012D4 47B0 C170               00001300   1963          BNL   @L314
000012D8                                    1964 @L315    DS    0H
000012D8 E3F0 2008 0004          00000008   1965          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
000012DE E3F0 4008 0024          00000008   1966          STG   15,8(0,4)   ; offset of tqe_prev in 0000055
000012E4 E320 4000 0024          00000000   1967          STG   2,0(0,4)    ; rko
000012EA E3F0 2008 0004          00000008   1968          LG    15,8(0,2)   ; offset of tqe_prev in 0000055
000012F0 E340 F000 0024          00000000   1969          STG   4,0(0,15)
000012F6 E340 2008 0024          00000008   1970          STG   4,8(0,2)    ; offset of tqe_prev in 0000055
000012FC 47F0 C1C2               00001352   1971          B     @L312
00001300                                    1972 @L314    DS    0H
00001300 E3F0 2000 0002          00000000   1973          LTG   15,0(0,2)   ; _tmp
00001306 4770 C1B4               00001344   1974          BNZ   @L318
0000130A                                    1975 @L319    DS    0H
0000130A E3F0 2000 0004          00000000   1976          LG    15,0(0,2)   ; _tmp
00001310 E3F0 4000 0024          00000000   1977          STG   15,0(0,4)
00001316 B902 00FF                          1978          LTGR  15,15
0000131A 4780 C19E               0000132E   1979          BE    @L322
0000131E E3F0 4000 0004          00000000   1980          LG    15,0(0,4)   ; rko
00001324 E340 F008 0024          00000008   1981          STG   4,8(0,15)   ; offset of tqe_prev in 0000055
0000132A 47F0 C1A4               00001334   1982          B     @L323
0000132E                                    1983 @L322    DS    0H
0000132E E340 3068 0024          00000068   1984          STG   4,104(0,3)  ; offset of tqh_last in rd_kafka_op_tailq
                                                                                                                           Page   45 
  Active Usings: @REGION_1444_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001334                                    1985 @L323    DS    0H
00001334 E340 2000 0024          00000000   1986          STG   4,0(0,2)    ; _tmp
0000133A E320 4008 0024          00000008   1987          STG   2,8(0,4)    ; offset of tqe_prev in 0000055
00001340 47F0 C1C2               00001352   1988          B     @L312
00001344                                    1989 @L318    DS    0H
00001344 E320 2000 0004          00000000   1990          LG    2,0(0,2)    ; _tmp
0000134A                                    1991 @L311    DS    0H
0000134A B902 00F2                          1992          LTGR  15,2
0000134E 4770 C12A               000012BA   1993          BNE   @L310
00001352                                    1994 @L312    DS    0H
00001352                                    1995 @L309    DS    0H
                                            1996 * ***
                                            1997 * ***       rkq->rkq_qlen++;
00001352                                    1998 @L299    DS    0H
00001352                                    1999 @L292    DS    0H
00001352 58F0 3070               00000070   2000          L     15,112(0,3)
00001356 A7FA 0001               00000001   2001          AHI   15,1
0000135A 50F0 3070               00000070   2002          ST    15,112(0,3)
                                            2003 * ***       rkq->rkq_qsize += rko->rko_len;
0000135E E3F0 3078 0004          00000078   2004          LG    15,120(0,3)
00001364 E3F0 4030 0018          00000030   2005          AGF   15,48(0,4)
0000136A E3F0 3078 0024          00000078   2006          STG   15,120(0,3)
                                            2007 * ***   }
00001370                                    2008 @ret_lab_1444 DS 0H
                                            2009 * * **** Start of Epilogue
                                            2010          DCCEPIL
00001370                                    2011+         ds 0h                                                          01-DCCEP
                                            2012+* Epilog
00001370 D707 D088 D088 00000088 00000088   2013+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001376 E3D0 D080 0004          00000080   2014+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000137C E3C0 D090 0004          00000090   2015+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001382 E3B0 C018 0004          00000018   2016+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001388 E3C0 B010 0021          00000010   2017+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000138E E3E0 D008 0004          00000008   2018+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001394 EB1C D020 0004          00000020   2019+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000139A 078E                               2020+         bcr 8,14                if same dsab, just return              01-DCCEP
0000139C E3F0 D010 0024          00000010   2021+         stg 15,16(0,13)         save return code                       01-DCCEP
000013A2 E300 D018 0024          00000018   2022+         stg 0,24(0,13)          save more return code                  01-DCCEP
000013A8 E3F0 D090 0004          00000090   2023+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000013AE E3F0 F018 0004          00000018   2024+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000013B4 47F0 F040               00000040   2025+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2026+* End of Epilog
                                            2027 * * **** End of Epilogue
                                            2028          DROP  12
                                            2029 *
                                            2030 *   DSECT for automatic variables in "rd_kafka_q_enq0"
                                            2031 *      (FUNCTION #1444)
                                            2032 *
00000000                00000000 000000A8   2033 @AUTO#rd_kafka_q_enq0 DSECT
00000000                                    2034          DS    XL168
                                            2035 *
000013B8                00000000 00006B1A   2036 @CODE    CSECT
                                                                                                                           Page   46 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2037 *
                                            2038 *
                                            2039 *
                                            2040 * ....... start of rd_kafka_q_enq1
000013B8                                    2041 @LNAME1445 DS  0H
000013B8 0000000F                           2042          DC    X'0000000F'
000013BC 99846D9281869281                   2043          DC    C'rd_kafka_q_enq1'
000013CB 00                                 2044          DC    X'00'
                                            2045 rd_kafka_q_enq1 DCCPRLG CINDEX=1445,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1445
                                            2046          macro
                                            2047          dccextrn &m
                                            2048          gblc    &$dccext(1000)
                                            2049          gbla    &$dccexti
                                            2050          lcla    &i
                                            2051 &$dccext(&$dccexti+1) setc    '&m'
                                            2052 &i       seta    1
                                            2053 .loop    aif    (&i gt &$dccexti).around
                                            2054          aif    ('&$dccext(&i)' eq '&m').getout
                                            2055 &i       seta    &i+1
                                            2056          ago     .loop
                                            2057 .around  anop
                                            2058 &$dccexti seta &$dccexti+1
                                            2059          extrn  &m
                                            2060 .getout  anop
                                            2061          mend
000013D0                                    2062+$eye0044    ds    0d                                                    02-DCCCA
000013D0 C4C3C3                             2063+         dc cl3'DCC'                                                    02-DCCCA
000013D3 01                                 2064+         dc xl1'01' format one                                          02-DCCCA
000013D4 00000000                           2065+         dc a(0)                                                        02-DCCCA
000013D8 0000000000001442                   2066+         dc ad(@PER_1445)                                               02-DCCCA
000013E0 00000000000000D8                   2067+         dc ad(216)                                                     02-DCCCA
000013E8 0000000000000000                   2068+         dc ad(0)                                                       02-DCCCA
000013F0 0000000000001000                   2069+         dc ad(4096)                                                    02-DCCCA
000013F8 20                                 2070+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000013F9 03                                 2071+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000013FA 03                                 2072+         dc al1(3)                                                      02-DCCCA
000013FB 08                                 2073+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000013FC 00                                 2074+         dc bl.8'00000000'                                              02-DCCCA
000013FD 000000                             2075+         dc al3(0)                                                      02-DCCCA
00001400 00000000000013B8                   2076+         dc ad(@LNAME1445)                                              02-DCCCA
00001408                                    2077+         ds 0d                                                          02-DCCCA
00001408 00000000000013D0                   2078+         dc ad($eye0044)                                                02-DCCCA
00001410 0000000000000000                   2079+         dc ad(0)                                                       02-DCCCA
00001418                                    2080+         ds    0d                                                       01-DCCPR
00001418                                    2081+rd_kafka_q_enq1 ds 0d                                                   01-DCCPR
00001418                                    2082+@REGION_1445_1 ds 0h                                                    01-DCCPR
00001418 EBEC D008 0024          00000008   2083+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000141E E3E0 D088 0004          00000088   2084+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001424 E3C0 D090 0004          00000090   2085+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000142A B904 002E                          2086+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000142E E3B0 C018 0004          00000018   2087+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page   47 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001434 A7EB 00D8               000000D8   2088+         aghi  14,216              increase by frame size               01-DCCPR
00001438 E3E0 C020 0021          00000020   2089+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000143E 4720 B020               00000020   2090+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001442                                    2091+@PER_1445 ds   0h                                                       01-DCCPR
00001442 EBDE 2080 0024          00000080   2092+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001448 E3C0 2090 0024          00000090   2093+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000144E B904 00D2                          2094+         lgr   13,2                set real frame pointer               01-DCCPR
00001452 B904 00CF                          2095+         lgr   12,15               set base reg                         01-DCCPR
                        00001418            2096+         using @REGION_1445_1,12                                        01-DCCPR
00001456 B904 0071                          2097          LGR   7,1         ; ptr to parm area
                                            2098 * ******* End of Prologue
                                            2099 * *
0000145A EB24 7000 0004          00000000   2100          LMG   2,4,0(7)    ; rkq
00001460 E350 7024 0012          00000024   2101          LT    5,36(0,7)   ; do_lock
                                            2102 * ***           rd_kafka_q_t *fwdq;
                                            2103 * ***
                                            2104 * ***           if (do_lock)
00001466 4780 C064               0000147C   2105          BZ    @L325
                                            2106 * ***                   mtx_lock(&rkq->rkq_lock);
0000146A E320 D0B0 0024          000000B0   2107          STG   2,176(0,13)
00001470 4110 D0B0               000000B0   2108          LA    1,176(0,13)
00001474 E3F0 C0B0 0004          000014C8   2109          LG    15,@lit_1445_49 ; mtx_lock
0000147A                                    2110 @@gen_label83 DS    0H
0000147A 05EF                               2111          BALR  14,15
0000147C                                    2112 @@gen_label84 DS    0H
0000147C                                    2113 @L324    DS    0H
                                            2114 * ***
                                            2115 * ***           do {} while (0);
0000147C                                    2116 @L325    DS    0H
                                            2117 * ***
                                            2118 * ***           if (((!(rkq->rkq_flags & 0x2)))) {
0000147C 9102 2087      00000087 00000002   2119          TM    135(2),2
00001480 4770 C0F8               00001510   2120          BNZ   @L328
                                            2121 * ***
                                            2122 * ***                   if (do_lock)
00001484 1255                               2123          LTR   5,5
00001486 4780 C084               0000149C   2124          BZ    @L329
                                            2125 * ***                           mtx_unlock(&rkq->rkq_lock);
0000148A E320 D0B0 0024          000000B0   2126          STG   2,176(0,13)
00001490 4110 D0B0               000000B0   2127          LA    1,176(0,13)
00001494 E3F0 C0B8 0004          000014D0   2128          LG    15,@lit_1445_50 ; mtx_unlock
0000149A                                    2129 @@gen_label87 DS    0H
0000149A 05EF                               2130          BALR  14,15
0000149C                                    2131 @@gen_label88 DS    0H
0000149C                                    2132 @L329    DS    0H
                                            2133 * ***
                                            2134 * ***                   return rd_kafka_op_reply(rko, RD_KAFKA_RESP_ER\
                                            2135 * R__DESTROY);
0000149C E330 D0B0 0024          000000B0   2136          STG   3,176(0,13)
000014A2 E548 D0B8 FF3B          000000B8   2137          MVGHI 184(13),-197
000014A8 4110 D0B0               000000B0   2138          LA    1,176(0,13)
000014AC E3F0 C0C0 0004          000014D8   2139          LG    15,@lit_1445_51 ; rd_kafka_op_reply
                                                                                                                           Page   48 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000014B2                                    2140 @@gen_label89 DS    0H
000014B2 05EF                               2141          BALR  14,15
000014B4                                    2142 @@gen_label90 DS    0H
000014B4 B914 00FF                          2143          LGFR  15,15
000014B8 47F0 C212               0000162A   2144          B     @ret_lab_1445
000014C0                                    2145          DS    0D
000014C0 000000D8                           2146 @FRAMESIZE_1445 DC F'216'
000014C4 00000000
000014C8 0000000000000000                   2147 @lit_1445_49 DC AD(mtx_lock)
000014D0 0000000000000000                   2148 @lit_1445_50 DC AD(mtx_unlock)
000014D8 0000000000000000                   2149 @lit_1445_51 DC AD(rd_kafka_op_reply)
000014E0 0000000000000DC8                   2150 @lit_1445_52 DC AD(rd_kafka_q_fwd_get)
000014E8 0000000000001190                   2151 @lit_1445_53 DC AD(rd_kafka_q_enq0)
000014F0 0000000000000000                   2152 @lit_1445_54 DC AD(cnd_signal)
000014F8 0000000000000F30                   2153 @lit_1445_55 DC AD(rd_kafka_q_io_event)
00001500 0000000000001418                   2154 @lit_1445_58 DC AD(rd_kafka_q_enq1)
00001508 0000000000000A98                   2155 @lit_1445_59 DC AD(rd_kafka_q_destroy0)
                                            2156 * ***           }
00001510                                    2157 @L328    DS    0H
                                            2158 * ***
                                            2159 * ***           if (!(fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
00001510 E320 D0B0 0024          000000B0   2160          STG   2,176(0,13)
00001516 D707 D0B8 D0B8 000000B8 000000B8   2161          XC    184(8,13),184(13)
0000151C 4110 D0B0               000000B0   2162          LA    1,176(0,13)
00001520 E3F0 C0C8 0004          000014E0   2163          LG    15,@lit_1445_52 ; rd_kafka_q_fwd_get
00001526                                    2164 @@gen_label91 DS    0H
00001526 05EF                               2165          BALR  14,15
00001528                                    2166 @@gen_label92 DS    0H
00001528 B904 006F                          2167          LGR   6,15
0000152C B902 00F6                          2168          LTGR  15,6
00001530 4770 C1B4               000015CC   2169          BNZ   @L330
                                            2170 * ***                   if (!rko->rko_serve && orig_destq->rkq_serve) \
                                            2171 * {
00001534 E3F0 3050 0002          00000050   2172          LTG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
0000153A 4770 C148               00001560   2173          BNZ   @L331
0000153E E3F0 4098 0002          00000098   2174          LTG   15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
00001544 4780 C148               00001560   2175          BZ    @L331
                                            2176 * ***
                                            2177 * ***
                                            2178 * ***                           rko->rko_serve = orig_destq->rkq_serve\
                                            2179 * ;
00001548 E3F0 4098 0004          00000098   2180          LG    15,152(0,4) ; offset of rkq_serve in rd_kafka_q_s
0000154E E3F0 3050 0024          00000050   2181          STG   15,80(0,3)  ; offset of rko_serve in rd_kafka_op_s
                                            2182 * ***                           rko->rko_serve_opaque = orig_destq->rk\
                                            2183 * q_opaque;
00001554 E3F0 40A0 0004          000000A0   2184          LG    15,160(0,4) ; offset of rkq_opaque in rd_kafka_q_s
0000155A E3F0 3058 0024          00000058   2185          STG   15,88(0,3)  ; offset of rko_serve_opaque in rd_kafka_op_*
                                                                s
                                            2186 * ***                   }
00001560                                    2187 @L331    DS    0H
                                            2188 * ***
                                            2189 * ***                   rd_kafka_q_enq0(rkq, rko, at_head);
                                                                                                                           Page   49 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001560 EB23 D0B0 0024          000000B0   2190          STMG  2,3,176(13)
00001566 E3F0 701C 0014          0000001C   2191          LGF   15,28(0,7)  ; at_head
0000156C E3F0 D0C0 0024          000000C0   2192          STG   15,192(0,13)
00001572 4110 D0B0               000000B0   2193          LA    1,176(0,13)
00001576 E3F0 C0D0 0004          000014E8   2194          LG    15,@lit_1445_53 ; rd_kafka_q_enq0
0000157C                                    2195 @@gen_label96 DS    0H
0000157C 05EF                               2196          BALR  14,15
0000157E                                    2197 @@gen_label97 DS    0H
                                            2198 * ***                   cnd_signal(&rkq->rkq_cond);
0000157E 41F0 2028               00000028   2199          LA    15,40(0,2)
00001582 E3F0 D0B0 0024          000000B0   2200          STG   15,176(0,13)
00001588 4110 D0B0               000000B0   2201          LA    1,176(0,13)
0000158C E3F0 C0D8 0004          000014F0   2202          LG    15,@lit_1445_54 ; cnd_signal
00001592                                    2203 @@gen_label98 DS    0H
00001592 05EF                               2204          BALR  14,15
00001594                                    2205 @@gen_label99 DS    0H
                                            2206 * ***                   if (rkq->rkq_qlen == 1)
00001594 E55C 2070 0001          00000070   2207          CHSI  112(2),1
0000159A 4770 C198               000015B0   2208          BNE   @L332
                                            2209 * ***                           rd_kafka_q_io_event(rkq);
0000159E E320 D0B0 0024          000000B0   2210          STG   2,176(0,13)
000015A4 4110 D0B0               000000B0   2211          LA    1,176(0,13)
000015A8 E3F0 C0E0 0004          000014F8   2212          LG    15,@lit_1445_55 ; rd_kafka_q_io_event
000015AE                                    2213 @@gen_label101 DS    0H
000015AE 05EF                               2214          BALR  14,15
000015B0                                    2215 @@gen_label102 DS    0H
000015B0                                    2216 @L332    DS    0H
                                            2217 * ***
                                            2218 * ***                   if (do_lock)
000015B0 1255                               2219          LTR   5,5
000015B2 4780 C20E               00001626   2220          BZ    @L334
                                            2221 * ***                           mtx_unlock(&rkq->rkq_lock);
000015B6 E320 D0B0 0024          000000B0   2222          STG   2,176(0,13)
000015BC 4110 D0B0               000000B0   2223          LA    1,176(0,13)
000015C0 E3F0 C0B8 0004          000014D0   2224          LG    15,@lit_1445_50 ; mtx_unlock
000015C6                                    2225 @@gen_label104 DS    0H
000015C6 05EF                               2226          BALR  14,15
000015C8                                    2227 @@gen_label105 DS    0H
000015C8                                    2228 @L333    DS    0H
                                            2229 * ***           } else {
000015C8 47F0 C20E               00001626   2230          B     @L334
000015CC                                    2231 @L330    DS    0H
                                            2232 * ***                   if (do_lock)
000015CC 1255                               2233          LTR   5,5
000015CE 4780 C1CC               000015E4   2234          BZ    @L335
                                            2235 * ***                           mtx_unlock(&rkq->rkq_lock);
000015D2 E320 D0B0 0024          000000B0   2236          STG   2,176(0,13)
000015D8 4110 D0B0               000000B0   2237          LA    1,176(0,13)
000015DC E3F0 C0B8 0004          000014D0   2238          LG    15,@lit_1445_50 ; mtx_unlock
000015E2                                    2239 @@gen_label107 DS    0H
000015E2 05EF                               2240          BALR  14,15
000015E4                                    2241 @@gen_label108 DS    0H
                                                                                                                           Page   50 
  Active Usings: @REGION_1445_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000015E4                                    2242 @L335    DS    0H
                                            2243 * ***                   rd_kafka_q_enq1(fwdq, rko, orig_destq, at_head\
                                            2244 * , 1);
000015E4 E360 D0B0 0024          000000B0   2245          STG   6,176(0,13)
000015EA EB34 D0B8 0024          000000B8   2246          STMG  3,4,184(13)
000015F0 E3F0 701C 0014          0000001C   2247          LGF   15,28(0,7)  ; at_head
000015F6 E3F0 D0C8 0024          000000C8   2248          STG   15,200(0,13)
000015FC E548 D0D0 0001          000000D0   2249          MVGHI 208(13),1
00001602 4110 D0B0               000000B0   2250          LA    1,176(0,13)
00001606 E3F0 C0E8 0004          00001500   2251          LG    15,@lit_1445_58 ; rd_kafka_q_enq1
0000160C                                    2252 @@gen_label109 DS    0H
0000160C 05EF                               2253          BALR  14,15
0000160E                                    2254 @@gen_label110 DS    0H
                                            2255 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
0000160E E360 D0B0 0024          000000B0   2256          STG   6,176(0,13)
00001614 D707 D0B8 D0B8 000000B8 000000B8   2257          XC    184(8,13),184(13)
0000161A 4110 D0B0               000000B0   2258          LA    1,176(0,13)
0000161E E3F0 C0F0 0004          00001508   2259          LG    15,@lit_1445_59 ; rd_kafka_q_destroy0
00001624                                    2260 @@gen_label111 DS    0H
00001624 05EF                               2261          BALR  14,15
00001626                                    2262 @@gen_label112 DS    0H
                                            2263 * ***           }
00001626                                    2264 @L334    DS    0H
                                            2265 * ***
                                            2266 * ***           return 1;
00001626 A7F9 0001               00000001   2267          LGHI  15,1        ; 1
                                            2268 * ***   }
0000162A                                    2269 @ret_lab_1445 DS 0H
                                            2270 * * **** Start of Epilogue
                                            2271          DCCEPIL
0000162A                                    2272+         ds 0h                                                          01-DCCEP
                                            2273+* Epilog
0000162A D707 D088 D088 00000088 00000088   2274+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001630 E3D0 D080 0004          00000080   2275+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001636 E3C0 D090 0004          00000090   2276+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000163C E3B0 C018 0004          00000018   2277+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001642 E3C0 B010 0021          00000010   2278+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001648 E3E0 D008 0004          00000008   2279+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000164E EB1C D020 0004          00000020   2280+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001654 078E                               2281+         bcr 8,14                if same dsab, just return              01-DCCEP
00001656 E3F0 D010 0024          00000010   2282+         stg 15,16(0,13)         save return code                       01-DCCEP
0000165C E300 D018 0024          00000018   2283+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001662 E3F0 D090 0004          00000090   2284+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001668 E3F0 F018 0004          00000018   2285+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000166E 47F0 F040               00000040   2286+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2287+* End of Epilog
                                            2288 * * **** End of Epilogue
                                            2289          DROP  12
                                            2290 *
                                            2291 *   DSECT for automatic variables in "rd_kafka_q_enq1"
                                            2292 *      (FUNCTION #1445)
                                            2293 *
                                                                                                                           Page   51 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                00000000 000000A8   2294 @AUTO#rd_kafka_q_enq1 DSECT
00000000                                    2295          DS    XL168
                                            2296 *
00001672                00000000 00006B1A   2297 @CODE    CSECT
                                            2298 *
                                            2299 *
                                            2300 *
                                            2301 * ....... start of rd_kafka_q_enq
00001672                                    2302 @LNAME1446 DS  0H
00001672 0000000E                           2303          DC    X'0000000E'
00001676 99846D9281869281                   2304          DC    C'rd_kafka_q_enq'
00001684 00                                 2305          DC    X'00'
                                            2306 rd_kafka_q_enq DCCPRLG CINDEX=1446,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME1446
                                            2307          macro
                                            2308          dccextrn &m
                                            2309          gblc    &$dccext(1000)
                                            2310          gbla    &$dccexti
                                            2311          lcla    &i
                                            2312 &$dccext(&$dccexti+1) setc    '&m'
                                            2313 &i       seta    1
                                            2314 .loop    aif    (&i gt &$dccexti).around
                                            2315          aif    ('&$dccext(&i)' eq '&m').getout
                                            2316 &i       seta    &i+1
                                            2317          ago     .loop
                                            2318 .around  anop
                                            2319 &$dccexti seta &$dccexti+1
                                            2320          extrn  &m
                                            2321 .getout  anop
                                            2322          mend
00001688                                    2323+$eye0047    ds    0d                                                    02-DCCCA
00001688 C4C3C3                             2324+         dc cl3'DCC'                                                    02-DCCCA
0000168B 01                                 2325+         dc xl1'01' format one                                          02-DCCCA
0000168C 00000000                           2326+         dc a(0)                                                        02-DCCCA
00001690 00000000000016FA                   2327+         dc ad(@PER_1446)                                               02-DCCCA
00001698 00000000000000D0                   2328+         dc ad(208)                                                     02-DCCCA
000016A0 0000000000000000                   2329+         dc ad(0)                                                       02-DCCCA
000016A8 0000000000001000                   2330+         dc ad(4096)                                                    02-DCCCA
000016B0 20                                 2331+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000016B1 03                                 2332+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000016B2 03                                 2333+         dc al1(3)                                                      02-DCCCA
000016B3 08                                 2334+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000016B4 00                                 2335+         dc bl.8'00000000'                                              02-DCCCA
000016B5 000000                             2336+         dc al3(0)                                                      02-DCCCA
000016B8 0000000000001672                   2337+         dc ad(@LNAME1446)                                              02-DCCCA
000016C0                                    2338+         ds 0d                                                          02-DCCCA
000016C0 0000000000001688                   2339+         dc ad($eye0047)                                                02-DCCCA
000016C8 0000000000000000                   2340+         dc ad(0)                                                       02-DCCCA
000016D0                                    2341+         ds    0d                                                       01-DCCPR
000016D0                                    2342+rd_kafka_q_enq ds 0d                                                    01-DCCPR
000016D0                                    2343+@REGION_1446_1 ds 0h                                                    01-DCCPR
000016D0 EBEC D008 0024          00000008   2344+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page   52 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000016D6 E3E0 D088 0004          00000088   2345+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000016DC E3C0 D090 0004          00000090   2346+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000016E2 B904 002E                          2347+         lgr   2,14                copy addr of our savearea            01-DCCPR
000016E6 E3B0 C018 0004          00000018   2348+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000016EC A7EB 00D0               000000D0   2349+         aghi  14,208              increase by frame size               01-DCCPR
000016F0 E3E0 C020 0021          00000020   2350+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000016F6 4720 B020               00000020   2351+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000016FA                                    2352+@PER_1446 ds   0h                                                       01-DCCPR
000016FA EBDE 2080 0024          00000080   2353+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001700 E3C0 2090 0024          00000090   2354+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001706 B904 00D2                          2355+         lgr   13,2                set real frame pointer               01-DCCPR
0000170A B904 00CF                          2356+         lgr   12,15               set base reg                         01-DCCPR
                        000016D0            2357+         using @REGION_1446_1,12                                        01-DCCPR
                                            2358 * ******* End of Prologue
                                            2359 * *
                                            2360 * ***           return rd_kafka_q_enq1(rkq, rko, rkq, 0, 1);
0000170E E3F0 1000 0004          00000000   2361          LG    15,0(0,1)   ; rkq
00001714 E3F0 D0A8 0024          000000A8   2362          STG   15,168(0,13)
0000171A E3F0 1008 0004          00000008   2363          LG    15,8(0,1)   ; rko
00001720 E3F0 D0B0 0024          000000B0   2364          STG   15,176(0,13)
00001726 E3F0 1000 0004          00000000   2365          LG    15,0(0,1)   ; rkq
0000172C E3F0 D0B8 0024          000000B8   2366          STG   15,184(0,13)
00001732 D707 D0C0 D0C0 000000C0 000000C0   2367          XC    192(8,13),192(13)
00001738 E548 D0C8 0001          000000C8   2368          MVGHI 200(13),1
0000173E 4110 D0A8               000000A8   2369          LA    1,168(0,13)
00001742 E3F0 C0D0 0004          000017A0   2370          LG    15,@lit_1446_62 ; rd_kafka_q_enq1
00001748                                    2371 @@gen_label113 DS    0H
00001748 05EF                               2372          BALR  14,15
0000174A                                    2373 @@gen_label114 DS    0H
0000174A B914 00FF                          2374          LGFR  15,15
                                            2375 * ***   }
                                            2376 * * **** Start of Epilogue
                                            2377          DCCEPIL
0000174E                                    2378+         ds 0h                                                          01-DCCEP
                                            2379+* Epilog
0000174E D707 D088 D088 00000088 00000088   2380+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001754 E3D0 D080 0004          00000080   2381+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000175A E3C0 D090 0004          00000090   2382+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001760 E3B0 C018 0004          00000018   2383+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001766 E3C0 B010 0021          00000010   2384+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000176C E3E0 D008 0004          00000008   2385+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001772 EB1C D020 0004          00000020   2386+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001778 078E                               2387+         bcr 8,14                if same dsab, just return              01-DCCEP
0000177A E3F0 D010 0024          00000010   2388+         stg 15,16(0,13)         save return code                       01-DCCEP
00001780 E300 D018 0024          00000018   2389+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001786 E3F0 D090 0004          00000090   2390+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000178C E3F0 F018 0004          00000018   2391+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001792 47F0 F040               00000040   2392+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2393+* End of Epilog
                                            2394 * * **** End of Epilogue
00001798                                    2395          DS    0D
00001798 000000D0                           2396 @FRAMESIZE_1446 DC F'208'
                                                                                                                           Page   53 
  Active Usings: @REGION_1446_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000179C 00000000
000017A0 0000000000001418                   2397 @lit_1446_62 DC AD(rd_kafka_q_enq1)
                                            2398          DROP  12
                                            2399 *
                                            2400 *   DSECT for automatic variables in "rd_kafka_q_enq"
                                            2401 *      (FUNCTION #1446)
                                            2402 *
00000000                00000000 000000A8   2403 @AUTO#rd_kafka_q_enq DSECT
00000000                                    2404          DS    XL168
                                            2405 *
000017A8                00000000 00006B1A   2406 @CODE    CSECT
                                            2407 *
                                            2408 *
                                            2409 *
                                            2410 * ....... start of rd_kafka_replyq_make
000017A8                                    2411 @LNAME1454 DS  0H
000017A8 00000014                           2412          DC    X'00000014'
000017AC 99846D9281869281                   2413          DC    C'rd_kafka_replyq_make'
000017C0 00                                 2414          DC    X'00'
                                            2415 rd_kafka_replyq_make DCCPRLG CINDEX=1454,BASER=12,FRAME=192,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1454
                                            2416          macro
                                            2417          dccextrn &m
                                            2418          gblc    &$dccext(1000)
                                            2419          gbla    &$dccexti
                                            2420          lcla    &i
                                            2421 &$dccext(&$dccexti+1) setc    '&m'
                                            2422 &i       seta    1
                                            2423 .loop    aif    (&i gt &$dccexti).around
                                            2424          aif    ('&$dccext(&i)' eq '&m').getout
                                            2425 &i       seta    &i+1
                                            2426          ago     .loop
                                            2427 .around  anop
                                            2428 &$dccexti seta &$dccexti+1
                                            2429          extrn  &m
                                            2430 .getout  anop
                                            2431          mend
000017C8                                    2432+$eye0050    ds    0d                                                    02-DCCCA
000017C8 C4C3C3                             2433+         dc cl3'DCC'                                                    02-DCCCA
000017CB 01                                 2434+         dc xl1'01' format one                                          02-DCCCA
000017CC 00000000                           2435+         dc a(0)                                                        02-DCCCA
000017D0 000000000000183A                   2436+         dc ad(@PER_1454)                                               02-DCCCA
000017D8 00000000000000C0                   2437+         dc ad(192)                                                     02-DCCCA
000017E0 0000000000000000                   2438+         dc ad(0)                                                       02-DCCCA
000017E8 0000000000001000                   2439+         dc ad(4096)                                                    02-DCCCA
000017F0 20                                 2440+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000017F1 03                                 2441+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000017F2 03                                 2442+         dc al1(3)                                                      02-DCCCA
000017F3 08                                 2443+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000017F4 00                                 2444+         dc bl.8'00000000'                                              02-DCCCA
000017F5 000000                             2445+         dc al3(0)                                                      02-DCCCA
000017F8 00000000000017A8                   2446+         dc ad(@LNAME1454)                                              02-DCCCA
                                                                                                                           Page   54 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001800                                    2447+         ds 0d                                                          02-DCCCA
00001800 00000000000017C8                   2448+         dc ad($eye0050)                                                02-DCCCA
00001808 0000000000000000                   2449+         dc ad(0)                                                       02-DCCCA
00001810                                    2450+         ds    0d                                                       01-DCCPR
00001810                                    2451+rd_kafka_replyq_make ds 0d                                              01-DCCPR
00001810                                    2452+@REGION_1454_1 ds 0h                                                    01-DCCPR
00001810 EBEC D008 0024          00000008   2453+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001816 E3E0 D088 0004          00000088   2454+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000181C E3C0 D090 0004          00000090   2455+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001822 B904 002E                          2456+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001826 E3B0 C018 0004          00000018   2457+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000182C A7EB 00C0               000000C0   2458+         aghi  14,192              increase by frame size               01-DCCPR
00001830 E3E0 C020 0021          00000020   2459+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001836 4720 B020               00000020   2460+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000183A                                    2461+@PER_1454 ds   0h                                                       01-DCCPR
0000183A EBDE 2080 0024          00000080   2462+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001840 E3C0 2090 0024          00000090   2463+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001846 B904 00D2                          2464+         lgr   13,2                set real frame pointer               01-DCCPR
0000184A B904 00CF                          2465+         lgr   12,15               set base reg                         01-DCCPR
                        00001810            2466+         using @REGION_1454_1,12                                        01-DCCPR
0000184E B904 0021                          2467          LGR   2,1         ; ptr to parm area
                                            2468 * ******* End of Prologue
                                            2469 * *
00001852 E330 2000 0004          00000000   2470          LG    3,0(0,2)
                                            2471 * ***           rd_kafka_replyq_t replyq = {};
                                            2472 * setting 16 bytes to 0x00
00001858 D70F D0A8 D0A8 000000A8 000000A8   2473          XC    168(16,13),168(13)
                                            2474 * ***
                                            2475 * ***           if (rkq) {
0000185E E3F0 2008 0004          00000008   2476          LG    15,8(0,2)   ; rkq
00001864 B902 001F                          2477          LTGR  1,15
00001868 4780 C07C               0000188C   2478          BZ    @L438
                                            2479 * ***                   replyq.q = rd_kafka_q_keep(rkq);
0000186C E3F0 D0B8 0024          000000B8   2480          STG   15,184(0,13)
00001872 4110 D0B8               000000B8   2481          LA    1,184(0,13)
00001876 E3F0 C0D8 0004          000018E8   2482          LG    15,@lit_1454_64 ; rd_kafka_q_keep
0000187C                                    2483 @@gen_label116 DS    0H
0000187C 05EF                               2484          BALR  14,15
0000187E                                    2485 @@gen_label117 DS    0H
0000187E E3F0 D0A8 0024          000000A8   2486          STG   15,168(0,13)
                                            2487 * ***                   replyq.version = version;
00001884 58F0 2014               00000014   2488          L     15,20(0,2)  ; version
00001888 50F0 D0B0               000000B0   2489          ST    15,176(0,13) ; offset of version in rd_kafka_replyq_s
                                            2490 * ***
                                            2491 * ***
                                            2492 * ***
                                            2493 * ***           }
0000188C                                    2494 @L438    DS    0H
                                            2495 * ***
                                            2496 * ***           return replyq;
0000188C D20F 3000 D0A8 00000000 000000A8   2497          MVC   0(16,3),168(13)
                                            2498 * ***   }
                                                                                                                           Page   55 
  Active Usings: @REGION_1454_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2499 * * **** Start of Epilogue
                                            2500          DCCEPIL
00001892                                    2501+         ds 0h                                                          01-DCCEP
                                            2502+* Epilog
00001892 D707 D088 D088 00000088 00000088   2503+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001898 E3D0 D080 0004          00000080   2504+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000189E E3C0 D090 0004          00000090   2505+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000018A4 E3B0 C018 0004          00000018   2506+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000018AA E3C0 B010 0021          00000010   2507+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000018B0 E3E0 D008 0004          00000008   2508+         lg  14,8(0,13)          load up return address                 01-DCCEP
000018B6 EB1C D020 0004          00000020   2509+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000018BC 078E                               2510+         bcr 8,14                if same dsab, just return              01-DCCEP
000018BE E3F0 D010 0024          00000010   2511+         stg 15,16(0,13)         save return code                       01-DCCEP
000018C4 E300 D018 0024          00000018   2512+         stg 0,24(0,13)          save more return code                  01-DCCEP
000018CA E3F0 D090 0004          00000090   2513+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000018D0 E3F0 F018 0004          00000018   2514+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000018D6 47F0 F040               00000040   2515+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2516+* End of Epilog
                                            2517 * * **** End of Epilogue
000018E0                                    2518          DS    0D
000018E0 000000C0                           2519 @FRAMESIZE_1454 DC F'192'
000018E4 00000000
000018E8 0000000000000818                   2520 @lit_1454_64 DC AD(rd_kafka_q_keep)
                                            2521          DROP  12
                                            2522 *
                                            2523 *   DSECT for automatic variables in "rd_kafka_replyq_make"
                                            2524 *      (FUNCTION #1454)
                                            2525 *
00000000                00000000 000000B8   2526 @AUTO#rd_kafka_replyq_make DSECT
00000000                                    2527          DS    XL168
000000A8                                    2528 rd_kafka_replyq_make#replyq#0 DS 16XL1 ; replyq
                                            2529 *
000018F0                00000000 00006B1A   2530 @CODE    CSECT
                                            2531 *
                                            2532 *
                                            2533 *
                                            2534 * ....... start of rd_kafka_toppar_keep0
000018F0                                    2535 @LNAME1780 DS  0H
000018F0 00000015                           2536          DC    X'00000015'
000018F4 99846D9281869281                   2537          DC    C'rd_kafka_toppar_keep0'
00001909 00                                 2538          DC    X'00'
                                            2539 rd_kafka_toppar_keep0 DCCPRLG CINDEX=1780,BASER=12,FRAME=184,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1780
                                            2540          macro
                                            2541          dccextrn &m
                                            2542          gblc    &$dccext(1000)
                                            2543          gbla    &$dccexti
                                            2544          lcla    &i
                                            2545 &$dccext(&$dccexti+1) setc    '&m'
                                            2546 &i       seta    1
                                            2547 .loop    aif    (&i gt &$dccexti).around
                                            2548          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page   56 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2549 &i       seta    &i+1
                                            2550          ago     .loop
                                            2551 .around  anop
                                            2552 &$dccexti seta &$dccexti+1
                                            2553          extrn  &m
                                            2554 .getout  anop
                                            2555          mend
00001910                                    2556+$eye0053    ds    0d                                                    02-DCCCA
00001910 C4C3C3                             2557+         dc cl3'DCC'                                                    02-DCCCA
00001913 01                                 2558+         dc xl1'01' format one                                          02-DCCCA
00001914 00000000                           2559+         dc a(0)                                                        02-DCCCA
00001918 0000000000001982                   2560+         dc ad(@PER_1780)                                               02-DCCCA
00001920 00000000000000B8                   2561+         dc ad(184)                                                     02-DCCCA
00001928 0000000000000000                   2562+         dc ad(0)                                                       02-DCCCA
00001930 0000000000001000                   2563+         dc ad(4096)                                                    02-DCCCA
00001938 20                                 2564+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001939 03                                 2565+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000193A 03                                 2566+         dc al1(3)                                                      02-DCCCA
0000193B 08                                 2567+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000193C 00                                 2568+         dc bl.8'00000000'                                              02-DCCCA
0000193D 000000                             2569+         dc al3(0)                                                      02-DCCCA
00001940 00000000000018F0                   2570+         dc ad(@LNAME1780)                                              02-DCCCA
00001948                                    2571+         ds 0d                                                          02-DCCCA
00001948 0000000000001910                   2572+         dc ad($eye0053)                                                02-DCCCA
00001950 0000000000000000                   2573+         dc ad(0)                                                       02-DCCCA
00001958                                    2574+         ds    0d                                                       01-DCCPR
00001958                                    2575+rd_kafka_toppar_keep0 ds 0d                                             01-DCCPR
00001958                                    2576+@REGION_1780_1 ds 0h                                                    01-DCCPR
00001958 EBEC D008 0024          00000008   2577+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000195E E3E0 D088 0004          00000088   2578+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001964 E3C0 D090 0004          00000090   2579+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000196A B904 002E                          2580+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000196E E3B0 C018 0004          00000018   2581+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001974 A7EB 00B8               000000B8   2582+         aghi  14,184              increase by frame size               01-DCCPR
00001978 E3E0 C020 0021          00000020   2583+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000197E 4720 B020               00000020   2584+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001982                                    2585+@PER_1780 ds   0h                                                       01-DCCPR
00001982 EBDE 2080 0024          00000080   2586+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001988 E3C0 2090 0024          00000090   2587+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000198E B904 00D2                          2588+         lgr   13,2                set real frame pointer               01-DCCPR
00001992 B904 00CF                          2589+         lgr   12,15               set base reg                         01-DCCPR
                        00001958            2590+         using @REGION_1780_1,12                                        01-DCCPR
                                            2591 * ******* End of Prologue
                                            2592 * *
                                            2593 * ***           rd_atomic32_add(&rktp->rktp_refcnt, 1);
00001996 E320 1010 0004          00000010   2594          LG    2,16(0,1)   ; rktp
0000199C 41F0 2090               00000090   2595          LA    15,144(0,2)
000019A0 E3F0 D0A8 0024          000000A8   2596          STG   15,168(0,13)
000019A6 E548 D0B0 0001          000000B0   2597          MVGHI 176(13),1
000019AC 4110 D0A8               000000A8   2598          LA    1,168(0,13)
000019B0 E3F0 C0B8 0004          00001A10   2599          LG    15,@lit_1780_66 ; rd_atomic32_add
000019B6                                    2600 @@gen_label118 DS    0H
                                                                                                                           Page   57 
  Active Usings: @REGION_1780_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000019B6 05EF                               2601          BALR  14,15
000019B8                                    2602 @@gen_label119 DS    0H
                                            2603 * ***           return rktp;
000019B8 B904 00F2                          2604          LGR   15,2
                                            2605 * ***   }
                                            2606 * * **** Start of Epilogue
                                            2607          DCCEPIL
000019BC                                    2608+         ds 0h                                                          01-DCCEP
                                            2609+* Epilog
000019BC D707 D088 D088 00000088 00000088   2610+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000019C2 E3D0 D080 0004          00000080   2611+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000019C8 E3C0 D090 0004          00000090   2612+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000019CE E3B0 C018 0004          00000018   2613+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000019D4 E3C0 B010 0021          00000010   2614+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000019DA E3E0 D008 0004          00000008   2615+         lg  14,8(0,13)          load up return address                 01-DCCEP
000019E0 EB1C D020 0004          00000020   2616+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000019E6 078E                               2617+         bcr 8,14                if same dsab, just return              01-DCCEP
000019E8 E3F0 D010 0024          00000010   2618+         stg 15,16(0,13)         save return code                       01-DCCEP
000019EE E300 D018 0024          00000018   2619+         stg 0,24(0,13)          save more return code                  01-DCCEP
000019F4 E3F0 D090 0004          00000090   2620+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000019FA E3F0 F018 0004          00000018   2621+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001A00 47F0 F040               00000040   2622+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2623+* End of Epilog
                                            2624 * * **** End of Epilogue
00001A08                                    2625          DS    0D
00001A08 000000B8                           2626 @FRAMESIZE_1780 DC F'184'
00001A0C 00000000
00001A10 0000000000000060                   2627 @lit_1780_66 DC AD(rd_atomic32_add)
                                            2628          DROP  12
                                            2629 *
                                            2630 *   DSECT for automatic variables in "rd_kafka_toppar_keep0"
                                            2631 *      (FUNCTION #1780)
                                            2632 *
00000000                00000000 000000A8   2633 @AUTO#rd_kafka_toppar_keep0 DSECT
00000000                                    2634          DS    XL168
                                            2635 *
00001A18                00000000 00006B1A   2636 @CODE    CSECT
                                            2637 *
                                            2638 *
                                            2639 *
                                            2640 * ....... start of rd_kafka_offset_store0
00001A18                                    2641 @LNAME1918 DS  0H
00001A18 00000016                           2642          DC    X'00000016'
00001A1C 99846D9281869281                   2643          DC    C'rd_kafka_offset_store0'
00001A32 00                                 2644          DC    X'00'
                                            2645 rd_kafka_offset_store0 DCCPRLG CINDEX=1918,BASER=12,FRAME=176,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1918
                                            2646          macro
                                            2647          dccextrn &m
                                            2648          gblc    &$dccext(1000)
                                            2649          gbla    &$dccexti
                                            2650          lcla    &i
                                                                                                                           Page   58 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2651 &$dccext(&$dccexti+1) setc    '&m'
                                            2652 &i       seta    1
                                            2653 .loop    aif    (&i gt &$dccexti).around
                                            2654          aif    ('&$dccext(&i)' eq '&m').getout
                                            2655 &i       seta    &i+1
                                            2656          ago     .loop
                                            2657 .around  anop
                                            2658 &$dccexti seta &$dccexti+1
                                            2659          extrn  &m
                                            2660 .getout  anop
                                            2661          mend
00001A38                                    2662+$eye0056    ds    0d                                                    02-DCCCA
00001A38 C4C3C3                             2663+         dc cl3'DCC'                                                    02-DCCCA
00001A3B 01                                 2664+         dc xl1'01' format one                                          02-DCCCA
00001A3C 00000000                           2665+         dc a(0)                                                        02-DCCCA
00001A40 0000000000001AAA                   2666+         dc ad(@PER_1918)                                               02-DCCCA
00001A48 00000000000000B0                   2667+         dc ad(176)                                                     02-DCCCA
00001A50 0000000000000000                   2668+         dc ad(0)                                                       02-DCCCA
00001A58 0000000000001000                   2669+         dc ad(4096)                                                    02-DCCCA
00001A60 20                                 2670+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001A61 03                                 2671+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001A62 03                                 2672+         dc al1(3)                                                      02-DCCCA
00001A63 08                                 2673+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001A64 00                                 2674+         dc bl.8'00000000'                                              02-DCCCA
00001A65 000000                             2675+         dc al3(0)                                                      02-DCCCA
00001A68 0000000000001A18                   2676+         dc ad(@LNAME1918)                                              02-DCCCA
00001A70                                    2677+         ds 0d                                                          02-DCCCA
00001A70 0000000000001A38                   2678+         dc ad($eye0056)                                                02-DCCCA
00001A78 0000000000000000                   2679+         dc ad(0)                                                       02-DCCCA
00001A80                                    2680+         ds    0d                                                       01-DCCPR
00001A80                                    2681+rd_kafka_offset_store0 ds 0d                                            01-DCCPR
00001A80                                    2682+@REGION_1918_1 ds 0h                                                    01-DCCPR
00001A80 EBEC D008 0024          00000008   2683+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001A86 E3E0 D088 0004          00000088   2684+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001A8C E3C0 D090 0004          00000090   2685+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001A92 B904 002E                          2686+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001A96 E3B0 C018 0004          00000018   2687+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001A9C A7EB 00B0               000000B0   2688+         aghi  14,176              increase by frame size               01-DCCPR
00001AA0 E3E0 C020 0021          00000020   2689+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001AA6 4720 B020               00000020   2690+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001AAA                                    2691+@PER_1918 ds   0h                                                       01-DCCPR
00001AAA EBDE 2080 0024          00000080   2692+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001AB0 E3C0 2090 0024          00000090   2693+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001AB6 B904 00D2                          2694+         lgr   13,2                set real frame pointer               01-DCCPR
00001ABA B904 00CF                          2695+         lgr   12,15               set base reg                         01-DCCPR
                        00001A80            2696+         using @REGION_1918_1,12                                        01-DCCPR
00001ABE B904 0031                          2697          LGR   3,1         ; ptr to parm area
                                            2698 * ******* End of Prologue
                                            2699 * *
                                            2700 * ***      if (lock)
00001AC2 E320 3000 0004          00000000   2701          LG    2,0(0,3)    ; rktp
00001AC8 E340 3014 0012          00000014   2702          LT    4,20(0,3)   ; lock
                                                                                                                           Page   59 
  Active Usings: @REGION_1918_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001ACE 4780 C068               00001AE8   2703          BZ    @L630
                                            2704 * ***         mtx_lock(&(rktp)->rktp_lock);
00001AD2 41F0 20C0               000000C0   2705          LA    15,192(0,2)
00001AD6 E3F0 D0A8 0024          000000A8   2706          STG   15,168(0,13)
00001ADC 4110 D0A8               000000A8   2707          LA    1,168(0,13)
00001AE0 E3F0 C0E0 0004          00001B60   2708          LG    15,@lit_1918_68 ; mtx_lock
00001AE6                                    2709 @@gen_label121 DS    0H
00001AE6 05EF                               2710          BALR  14,15
00001AE8                                    2711 @@gen_label122 DS    0H
00001AE8                                    2712 @L630    DS    0H
                                            2713 * ***      rktp->rktp_stored_offset = offset;
00001AE8 E3F0 3008 0004          00000008   2714          LG    15,8(0,3)   ; offset
00001AEE E3F0 2218 0024          00000218   2715          STG   15,536(0,2) ; offset of rktp_stored_offset in rd_kafka_t*
                                                                oppar_s
                                            2716 * ***      if (lock)
00001AF4 1244                               2717          LTR   4,4
00001AF6 4780 C090               00001B10   2718          BZ    @ret_lab_1918
                                            2719 * ***         mtx_unlock(&(rktp)->rktp_lock);
00001AFA 41F0 20C0               000000C0   2720          LA    15,192(0,2)
00001AFE E3F0 D0A8 0024          000000A8   2721          STG   15,168(0,13)
00001B04 4110 D0A8               000000A8   2722          LA    1,168(0,13)
00001B08 E3F0 C0E8 0004          00001B68   2723          LG    15,@lit_1918_69 ; mtx_unlock
00001B0E                                    2724 @@gen_label124 DS    0H
00001B0E 05EF                               2725          BALR  14,15
00001B10                                    2726 @@gen_label125 DS    0H
00001B10                                    2727 @L631    DS    0H
                                            2728 * ***   }
00001B10                                    2729 @ret_lab_1918 DS 0H
                                            2730 * * **** Start of Epilogue
                                            2731          DCCEPIL
00001B10                                    2732+         ds 0h                                                          01-DCCEP
                                            2733+* Epilog
00001B10 D707 D088 D088 00000088 00000088   2734+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001B16 E3D0 D080 0004          00000080   2735+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001B1C E3C0 D090 0004          00000090   2736+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001B22 E3B0 C018 0004          00000018   2737+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001B28 E3C0 B010 0021          00000010   2738+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001B2E E3E0 D008 0004          00000008   2739+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001B34 EB1C D020 0004          00000020   2740+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001B3A 078E                               2741+         bcr 8,14                if same dsab, just return              01-DCCEP
00001B3C E3F0 D010 0024          00000010   2742+         stg 15,16(0,13)         save return code                       01-DCCEP
00001B42 E300 D018 0024          00000018   2743+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001B48 E3F0 D090 0004          00000090   2744+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001B4E E3F0 F018 0004          00000018   2745+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001B54 47F0 F040               00000040   2746+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2747+* End of Epilog
                                            2748 * * **** End of Epilogue
00001B58                                    2749          DS    0D
00001B58 000000B0                           2750 @FRAMESIZE_1918 DC F'176'
00001B5C 00000000
00001B60 0000000000000000                   2751 @lit_1918_68 DC AD(mtx_lock)
00001B68 0000000000000000                   2752 @lit_1918_69 DC AD(mtx_unlock)
                                                                                                                           Page   60 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2753          DROP  12
                                            2754 *
                                            2755 *   DSECT for automatic variables in "rd_kafka_offset_store0"
                                            2756 *      (FUNCTION #1918)
                                            2757 *
00000000                00000000 000000A8   2758 @AUTO#rd_kafka_offset_store0 DSECT
00000000                                    2759          DS    XL168
                                            2760 *
00001B70                00000000 00006B1A   2761 @CODE    CSECT
                                            2762 *
                                            2763 *
                                            2764 *
                                            2765 * ....... start of rd_kafka_offset2str
                                            2766 rd_kafka_offset2str ALIAS X'99846D92818692816D968686A285A3F2A2A399'
00001B70                                    2767 @LNAME1917 DS  0H
00001B70 00000013                           2768          DC    X'00000013'
00001B74 99846D9281869281                   2769          DC    C'rd_kafka_offset2str'
00001B87 00                                 2770          DC    X'00'
                                            2771 rd_kafka_offset2str DCCPRLG CINDEX=1917,BASER=12,FRAME=200,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1917
                                            2772          macro
                                            2773          dccextrn &m
                                            2774          gblc    &$dccext(1000)
                                            2775          gbla    &$dccexti
                                            2776          lcla    &i
                                            2777 &$dccext(&$dccexti+1) setc    '&m'
                                            2778 &i       seta    1
                                            2779 .loop    aif    (&i gt &$dccexti).around
                                            2780          aif    ('&$dccext(&i)' eq '&m').getout
                                            2781 &i       seta    &i+1
                                            2782          ago     .loop
                                            2783 .around  anop
                                            2784 &$dccexti seta &$dccexti+1
                                            2785          extrn  &m
                                            2786 .getout  anop
                                            2787          mend
00001B88                                    2788+$eye0059    ds    0d                                                    02-DCCCA
00001B88 C4C3C3                             2789+         dc cl3'DCC'                                                    02-DCCCA
00001B8B 01                                 2790+         dc xl1'01' format one                                          02-DCCCA
00001B8C 00000000                           2791+         dc a(0)                                                        02-DCCCA
00001B90 0000000000001BFA                   2792+         dc ad(@PER_1917)                                               02-DCCCA
00001B98 00000000000000C8                   2793+         dc ad(200)                                                     02-DCCCA
00001BA0 0000000000000000                   2794+         dc ad(0)                                                       02-DCCCA
00001BA8 0000000000001000                   2795+         dc ad(4096)                                                    02-DCCCA
00001BB0 20                                 2796+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001BB1 03                                 2797+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001BB2 03                                 2798+         dc al1(3)                                                      02-DCCCA
00001BB3 08                                 2799+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001BB4 00                                 2800+         dc bl.8'00000000'                                              02-DCCCA
00001BB5 000000                             2801+         dc al3(0)                                                      02-DCCCA
00001BB8 0000000000001B70                   2802+         dc ad(@LNAME1917)                                              02-DCCCA
00001BC0                                    2803+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   61 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001BC0 0000000000001B88                   2804+         dc ad($eye0059)                                                02-DCCCA
00001BC8 0000000000000000                   2805+         dc ad(0)                                                       02-DCCCA
00001BD0                                    2806+         ds    0d                                                       01-DCCPR
                                            2807+         entry rd_kafka_offset2str                                      01-DCCPR
00001BD0                                    2808+rd_kafka_offset2str ds 0d                                               01-DCCPR
00001BD0                                    2809+@REGION_1917_1 ds 0h                                                    01-DCCPR
00001BD0 EBEC D008 0024          00000008   2810+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001BD6 E3E0 D088 0004          00000088   2811+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001BDC E3C0 D090 0004          00000090   2812+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001BE2 B904 002E                          2813+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001BE6 E3B0 C018 0004          00000018   2814+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001BEC A7EB 00C8               000000C8   2815+         aghi  14,200              increase by frame size               01-DCCPR
00001BF0 E3E0 C020 0021          00000020   2816+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001BF6 4720 B020               00000020   2817+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001BFA                                    2818+@PER_1917 ds   0h                                                       01-DCCPR
00001BFA EBDE 2080 0024          00000080   2819+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001C00 E3C0 2090 0024          00000090   2820+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001C06 B904 00D2                          2821+         lgr   13,2                set real frame pointer               01-DCCPR
00001C0A B904 00CF                          2822+         lgr   12,15               set base reg                         01-DCCPR
                        00001BD0            2823+         using @REGION_1917_1,12                                        01-DCCPR
                                            2824          DCCPRV REG=3      ; Get PRV from DVT
00001C0E E330 B008 0004          00000008   2825+         LG 3,8(0,11)                                                   01-DCCPR
                                            2826 * ******* End of Prologue
                                            2827 * *
                                            2828 * ***           static  char ret[16][32];
                                            2829 * ***           static  int i = 0;
00001C14 E3F0 1000 0004          00000000   2830          LG    15,0(0,1)   ; offset
                                            2831 * ***
                                            2832 * ***           i = (i + 1) % 16;
00001C1A E310 C07C 0014          00001C4C   2833          LGF   1,@lit_1917_71
00001C20 4111 3000               00000000   2834          LA    1,0(1,3)
00001C24 5840 18D8               000008D8   2835          L     4,2264(0,1) ; i
00001C28 A74A 0001               00000001   2836          AHI   4,1
00001C2C 1824                               2837          LR    2,4
00001C2E C02B 0000 000F                     2838          NILF  2,X'0000000F'
00001C34 1244                               2839          LTR   4,4
00001C36 47B0 C09E               00001C6E   2840          BNL   @@gen_label126
00001C3A 1222                               2841          LTR   2,2
00001C3C 4770 C098               00001C68   2842          BNE   @@gen_label127
00001C40 A728 0000               00000000   2843          LHI   2,0
00001C44 47F0 C09E               00001C6E   2844          B     @@gen_label126
00001C48                                    2845          DS    0D
00001C48 000000C8                           2846 @FRAMESIZE_1917 DC F'200'
00001C4C 00000000                           2847 @lit_1917_71 DC Q(@@STATIC)
00001C50 0000000000000000                   2848 @lit_1917_74 DC AD(snprintf)
00001C58 0000000000006D48                   2849 @lit_1917_73 DC AD(@strings@)
00001C60 0000000000000000                   2850 @lit_1917_79 DC AD(llabs)
00001C68                                    2851 @@gen_label127 DS 0H
00001C68 C02D FFFF FFF0                     2852          OILF  2,X'FFFFFFF0'
00001C6E                                    2853 @@gen_label126 DS 0H
00001C6E 5020 18D8               000008D8   2854          ST    2,2264(0,1) ; i
                                            2855 * ***
                                                                                                                           Page   62 
  Active Usings: @REGION_1917_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            2856 * ***           if (offset >= 0)
00001C72 B902 001F                          2857          LTGR  1,15
00001C76 4740 C0F4               00001CC4   2858          BL    @L632
                                            2859 * ***                   snprintf(ret[i], sizeof(ret[i]), "%" "lld", of\
                                            2860 * fset);
00001C7A B914 0012                          2861          LGFR  1,2
00001C7E E320 C07C 0014          00001C4C   2862          LGF   2,@lit_1917_71
00001C84 4122 3000               00000000   2863          LA    2,0(2,3)
00001C88 EB11 0005 000D          00000005   2864          SLLG  1,1,5(0)    ; *0x20
00001C8E 4111 26D8               000006D8   2865          LA    1,1752(1,2)
00001C92 E310 D0A8 0024          000000A8   2866          STG   1,168(0,13)
00001C98 E548 D0B0 0020          000000B0   2867          MVGHI 176(13),32
00001C9E E310 C088 0004          00001C58   2868          LG    1,@lit_1917_73
00001CA4 4110 108E               0000008E   2869          LA    1,142(0,1)
00001CA8 E310 D0B8 0024          000000B8   2870          STG   1,184(0,13)
00001CAE E3F0 D0C0 0024          000000C0   2871          STG   15,192(0,13)
00001CB4 4110 D0A8               000000A8   2872          LA    1,168(0,13)
00001CB8 E3F0 C080 0004          00001C50   2873          LG    15,@lit_1917_74 ; snprintf
00001CBE                                    2874 @@gen_label129 DS    0H
00001CBE 05EF                               2875          BALR  14,15
00001CC0                                    2876 @@gen_label130 DS    0H
00001CC0 47F0 C1FA               00001DCA   2877          B     @L633
                                            2878 * ***           else if (offset == -2)
00001CC4                                    2879 @L632    DS    0H
00001CC4 A7FF FFFE               0000FFFE   2880          CGHI  15,-2
00001CC8 4770 C10A               00001CDA   2881          BNE   @L634
                                            2882 * ***                   return "BEGINNING";
00001CCC E3F0 C088 0004          00001C58   2883          LG    15,@lit_1917_73
00001CD2 41F0 F094               00000094   2884          LA    15,148(0,15)
00001CD6 47F0 C214               00001DE4   2885          B     @ret_lab_1917
                                            2886 * ***           else if (offset == -1)
00001CDA                                    2887 @L634    DS    0H
00001CDA A7FF FFFF               0000FFFF   2888          CGHI  15,-1
00001CDE 4770 C120               00001CF0   2889          BNE   @L636
                                            2890 * ***                   return "END";
00001CE2 E3F0 C088 0004          00001C58   2891          LG    15,@lit_1917_73
00001CE8 41F0 F09E               0000009E   2892          LA    15,158(0,15)
00001CEC 47F0 C214               00001DE4   2893          B     @ret_lab_1917
                                            2894 * ***           else if (offset == -1000)
00001CF0                                    2895 @L636    DS    0H
00001CF0 A7FF FC18               0000FC18   2896          CGHI  15,-1000
00001CF4 4770 C136               00001D06   2897          BNE   @L638
                                            2898 * ***                   return "STORED";
00001CF8 E3F0 C088 0004          00001C58   2899          LG    15,@lit_1917_73
00001CFE 41F0 F0A2               000000A2   2900          LA    15,162(0,15)
00001D02 47F0 C214               00001DE4   2901          B     @ret_lab_1917
                                            2902 * ***           else if (offset == -1001)
00001D06                                    2903 @L638    DS    0H
00001D06 A7FF FC17               0000FC17   2904          CGHI  15,-1001
00001D0A 4770 C14C               00001D1C   2905          BNE   @L640
                                            2906 * ***                   return "INVALID";
00001D0E E3F0 C088 0004          00001C58   2907          LG    15,@lit_1917_73
                                                                                                                           Page   63 
  Active Usings: @REGION_1917_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001D14 41F0 F0AA               000000AA   2908          LA    15,170(0,15)
00001D18 47F0 C214               00001DE4   2909          B     @ret_lab_1917
                                            2910 * ***           else if (offset <= -2000)
00001D1C                                    2911 @L640    DS    0H
00001D1C A7FF F830               0000F830   2912          CGHI  15,-2000
00001D20 4720 C1B4               00001D84   2913          BH    @L642
                                            2914 * ***                   snprintf(ret[i], sizeof(ret[i]), "TAIL(%lld)",\
                                            2915 *  llabs(offset - -2000));
00001D24 A7FB 07D0               000007D0   2916          AGHI  15,2000
00001D28 E3F0 D0A8 0024          000000A8   2917          STG   15,168(0,13)
00001D2E 4110 D0A8               000000A8   2918          LA    1,168(0,13)
00001D32 E3F0 C090 0004          00001C60   2919          LG    15,@lit_1917_79 ; llabs
00001D38                                    2920 @@gen_label136 DS    0H
00001D38 05EF                               2921          BALR  14,15
00001D3A                                    2922 @@gen_label137 DS    0H
00001D3A B914 0012                          2923          LGFR  1,2
00001D3E E320 C07C 0014          00001C4C   2924          LGF   2,@lit_1917_71
00001D44 4122 3000               00000000   2925          LA    2,0(2,3)
00001D48 EB11 0005 000D          00000005   2926          SLLG  1,1,5(0)    ; *0x20
00001D4E 4111 26D8               000006D8   2927          LA    1,1752(1,2)
00001D52 E310 D0A8 0024          000000A8   2928          STG   1,168(0,13)
00001D58 E548 D0B0 0020          000000B0   2929          MVGHI 176(13),32
00001D5E E310 C088 0004          00001C58   2930          LG    1,@lit_1917_73
00001D64 4110 10B2               000000B2   2931          LA    1,178(0,1)
00001D68 E310 D0B8 0024          000000B8   2932          STG   1,184(0,13)
00001D6E E3F0 D0C0 0024          000000C0   2933          STG   15,192(0,13)
00001D74 4110 D0A8               000000A8   2934          LA    1,168(0,13)
00001D78 E3F0 C080 0004          00001C50   2935          LG    15,@lit_1917_74 ; snprintf
00001D7E                                    2936 @@gen_label138 DS    0H
00001D7E 05EF                               2937          BALR  14,15
00001D80                                    2938 @@gen_label139 DS    0H
00001D80 47F0 C1FA               00001DCA   2939          B     @L633
                                            2940 * ***
                                            2941 * ***           else
00001D84                                    2942 @L642    DS    0H
                                            2943 * ***                   snprintf(ret[i], sizeof(ret[i]), "%" "lld" "?"\
                                            2944 * , offset);
00001D84 B914 0012                          2945          LGFR  1,2
00001D88 E320 C07C 0014          00001C4C   2946          LGF   2,@lit_1917_71
00001D8E 4122 3000               00000000   2947          LA    2,0(2,3)
00001D92 EB11 0005 000D          00000005   2948          SLLG  1,1,5(0)    ; *0x20
00001D98 4111 26D8               000006D8   2949          LA    1,1752(1,2)
00001D9C E310 D0A8 0024          000000A8   2950          STG   1,168(0,13)
00001DA2 E548 D0B0 0020          000000B0   2951          MVGHI 176(13),32
00001DA8 E310 C088 0004          00001C58   2952          LG    1,@lit_1917_73
00001DAE 4110 10BE               000000BE   2953          LA    1,190(0,1)
00001DB2 E310 D0B8 0024          000000B8   2954          STG   1,184(0,13)
00001DB8 E3F0 D0C0 0024          000000C0   2955          STG   15,192(0,13)
00001DBE 4110 D0A8               000000A8   2956          LA    1,168(0,13)
00001DC2 E3F0 C080 0004          00001C50   2957          LG    15,@lit_1917_74 ; snprintf
00001DC8                                    2958 @@gen_label140 DS    0H
00001DC8 05EF                               2959          BALR  14,15
                                                                                                                           Page   64 
  Active Usings: @REGION_1917_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00001DCA                                    2960 @@gen_label141 DS    0H
00001DCA                                    2961 @L643    DS    0H
                                            2962 * ***
                                            2963 * ***           return ret[i];
00001DCA                                    2964 @L641    DS    0H
00001DCA                                    2965 @L639    DS    0H
00001DCA                                    2966 @L637    DS    0H
00001DCA                                    2967 @L635    DS    0H
00001DCA                                    2968 @L633    DS    0H
00001DCA E3F0 C07C 0014          00001C4C   2969          LGF   15,@lit_1917_71
00001DD0 41FF 3000               00000000   2970          LA    15,0(15,3)
00001DD4 E310 F8D8 0014          000008D8   2971          LGF   1,2264(0,15) ; i
00001DDA EB11 0005 000D          00000005   2972          SLLG  1,1,5(0)    ; *0x20
00001DE0 41F1 F6D8               000006D8   2973          LA    15,1752(1,15)
                                            2974 * ***   }
00001DE4                                    2975 @ret_lab_1917 DS 0H
                                            2976 * * **** Start of Epilogue
                                            2977          DCCEPIL
00001DE4                                    2978+         ds 0h                                                          01-DCCEP
                                            2979+* Epilog
00001DE4 D707 D088 D088 00000088 00000088   2980+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001DEA E3D0 D080 0004          00000080   2981+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001DF0 E3C0 D090 0004          00000090   2982+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001DF6 E3B0 C018 0004          00000018   2983+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001DFC E3C0 B010 0021          00000010   2984+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001E02 E3E0 D008 0004          00000008   2985+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001E08 EB1C D020 0004          00000020   2986+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001E0E 078E                               2987+         bcr 8,14                if same dsab, just return              01-DCCEP
00001E10 E3F0 D010 0024          00000010   2988+         stg 15,16(0,13)         save return code                       01-DCCEP
00001E16 E300 D018 0024          00000018   2989+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001E1C E3F0 D090 0004          00000090   2990+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001E22 E3F0 F018 0004          00000018   2991+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001E28 47F0 F040               00000040   2992+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2993+* End of Epilog
                                            2994 * * **** End of Epilogue
                                            2995          DROP  12
                                            2996 *
                                            2997 *   DSECT for automatic variables in "rd_kafka_offset2str"
                                            2998 *      (FUNCTION #1917)
                                            2999 *
00000000                00000000 000000A8   3000 @AUTO#rd_kafka_offset2str DSECT
00000000                                    3001          DS    XL168
                                            3002 *
00001E2C                00000000 00006B1A   3003 @CODE    CSECT
                                            3004 *
                                            3005 *
                                            3006 *
                                            3007 * ....... start of rd_kafka_offset_file_close
00001E2C                                    3008 @LNAME1925 DS  0H
00001E2C 0000001A                           3009          DC    X'0000001A'
00001E30 99846D9281869281                   3010          DC    C'rd_kafka_offset_file_close'
00001E4A 00                                 3011          DC    X'00'
                                                                                                                           Page   65 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3012 rd_kafka_offset_file_close DCCPRLG CINDEX=1925,BASER=12,FRAME=176,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1925
                                            3013          macro
                                            3014          dccextrn &m
                                            3015          gblc    &$dccext(1000)
                                            3016          gbla    &$dccexti
                                            3017          lcla    &i
                                            3018 &$dccext(&$dccexti+1) setc    '&m'
                                            3019 &i       seta    1
                                            3020 .loop    aif    (&i gt &$dccexti).around
                                            3021          aif    ('&$dccext(&i)' eq '&m').getout
                                            3022 &i       seta    &i+1
                                            3023          ago     .loop
                                            3024 .around  anop
                                            3025 &$dccexti seta &$dccexti+1
                                            3026          extrn  &m
                                            3027 .getout  anop
                                            3028          mend
00001E50                                    3029+$eye0063    ds    0d                                                    02-DCCCA
00001E50 C4C3C3                             3030+         dc cl3'DCC'                                                    02-DCCCA
00001E53 01                                 3031+         dc xl1'01' format one                                          02-DCCCA
00001E54 00000000                           3032+         dc a(0)                                                        02-DCCCA
00001E58 0000000000001EC2                   3033+         dc ad(@PER_1925)                                               02-DCCCA
00001E60 00000000000000B0                   3034+         dc ad(176)                                                     02-DCCCA
00001E68 0000000000000000                   3035+         dc ad(0)                                                       02-DCCCA
00001E70 0000000000001000                   3036+         dc ad(4096)                                                    02-DCCCA
00001E78 20                                 3037+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001E79 03                                 3038+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001E7A 03                                 3039+         dc al1(3)                                                      02-DCCCA
00001E7B 08                                 3040+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001E7C 00                                 3041+         dc bl.8'00000000'                                              02-DCCCA
00001E7D 000000                             3042+         dc al3(0)                                                      02-DCCCA
00001E80 0000000000001E2C                   3043+         dc ad(@LNAME1925)                                              02-DCCCA
00001E88                                    3044+         ds 0d                                                          02-DCCCA
00001E88 0000000000001E50                   3045+         dc ad($eye0063)                                                02-DCCCA
00001E90 0000000000000000                   3046+         dc ad(0)                                                       02-DCCCA
00001E98                                    3047+         ds    0d                                                       01-DCCPR
00001E98                                    3048+rd_kafka_offset_file_close ds 0d                                        01-DCCPR
00001E98                                    3049+@REGION_1925_1 ds 0h                                                    01-DCCPR
00001E98 EBEC D008 0024          00000008   3050+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001E9E E3E0 D088 0004          00000088   3051+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001EA4 E3C0 D090 0004          00000090   3052+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001EAA B904 002E                          3053+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001EAE E3B0 C018 0004          00000018   3054+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001EB4 A7EB 00B0               000000B0   3055+         aghi  14,176              increase by frame size               01-DCCPR
00001EB8 E3E0 C020 0021          00000020   3056+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001EBE 4720 B020               00000020   3057+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001EC2                                    3058+@PER_1925 ds   0h                                                       01-DCCPR
00001EC2 EBDE 2080 0024          00000080   3059+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001EC8 E3C0 2090 0024          00000090   3060+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001ECE B904 00D2                          3061+         lgr   13,2                set real frame pointer               01-DCCPR
00001ED2 B904 00CF                          3062+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   66 
  Active Usings: @REGION_1925_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                        00001E98            3063+         using @REGION_1925_1,12                                        01-DCCPR
                                            3064 * ******* End of Prologue
                                            3065 * *
                                            3066 * ***      if (!rktp->rktp_offset_fp)
00001ED6 E320 1000 0004          00000000   3067          LG    2,0(0,1)    ; rktp
00001EDC E3F0 2280 0002          00000280   3068          LTG   15,640(0,2) ; offset of rktp_offset_fp in rd_kafka_toppa*
                                                                r_s
00001EE2 4780 C070               00001F08   3069          BZ    @ret_lab_1925
                                            3070 * ***         return;
00001EE6                                    3071 @L644    DS    0H
                                            3072 * ***
                                            3073 * ***      fclose(rktp->rktp_offset_fp);
00001EE6 E3F0 2280 0004          00000280   3074          LG    15,640(0,2)
00001EEC E3F0 D0A8 0024          000000A8   3075          STG   15,168(0,13)
00001EF2 4110 D0A8               000000A8   3076          LA    1,168(0,13)
00001EF6 E3F0 C0C0 0004          00001F58   3077          LG    15,@lit_1925_88 ; fclose
00001EFC                                    3078 @@gen_label143 DS    0H
00001EFC 05EF                               3079          BALR  14,15
00001EFE                                    3080 @@gen_label144 DS    0H
                                            3081 * ***      rktp->rktp_offset_fp = ((void *)0);
00001EFE A7F9 0000               00000000   3082          LGHI  15,0        ; 0
00001F02 E3F0 2280 0024          00000280   3083          STG   15,640(0,2) ; offset of rktp_offset_fp in rd_kafka_toppa*
                                                                r_s
                                            3084 * ***   }
00001F08                                    3085 @ret_lab_1925 DS 0H
                                            3086 * * **** Start of Epilogue
                                            3087          DCCEPIL
00001F08                                    3088+         ds 0h                                                          01-DCCEP
                                            3089+* Epilog
00001F08 D707 D088 D088 00000088 00000088   3090+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001F0E E3D0 D080 0004          00000080   3091+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001F14 E3C0 D090 0004          00000090   3092+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001F1A E3B0 C018 0004          00000018   3093+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001F20 E3C0 B010 0021          00000010   3094+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001F26 E3E0 D008 0004          00000008   3095+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001F2C EB1C D020 0004          00000020   3096+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001F32 078E                               3097+         bcr 8,14                if same dsab, just return              01-DCCEP
00001F34 E3F0 D010 0024          00000010   3098+         stg 15,16(0,13)         save return code                       01-DCCEP
00001F3A E300 D018 0024          00000018   3099+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001F40 E3F0 D090 0004          00000090   3100+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001F46 E3F0 F018 0004          00000018   3101+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001F4C 47F0 F040               00000040   3102+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3103+* End of Epilog
                                            3104 * * **** End of Epilogue
00001F50                                    3105          DS    0D
00001F50 000000B0                           3106 @FRAMESIZE_1925 DC F'176'
00001F54 00000000
00001F58 0000000000000000                   3107 @lit_1925_88 DC AD(fclose)
                                            3108          DROP  12
                                            3109 *
                                            3110 *   DSECT for automatic variables in "rd_kafka_offset_file_close"
                                            3111 *      (FUNCTION #1925)
                                                                                                                           Page   67 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3112 *
00000000                00000000 000000A8   3113 @AUTO#rd_kafka_offset_file_close DSECT
00000000                                    3114          DS    XL168
                                            3115 *
00001F60                00000000 00006B1A   3116 @CODE    CSECT
                                            3117 *
                                            3118 *
                                            3119 *
                                            3120 * ....... start of rd_kafka_open_cb_linux
                                            3121 rd_kafka_open_cb_linux ALIAS X'99846D92818692816D969785956D83826D938995*
                                                                A4A7'
00001F60                                    3122 @LNAME1563 DS  0H
00001F60 00000016                           3123          DC    X'00000016'
00001F64 99846D9281869281                   3124          DC    C'rd_kafka_open_cb_linux'
00001F7A 00                                 3125          DC    X'00'
                                            3126 rd_kafka_open_cb_linux DCCPRLG CINDEX=1563,BASER=12,FRAME=192,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1563
                                            3127          macro
                                            3128          dccextrn &m
                                            3129          gblc    &$dccext(1000)
                                            3130          gbla    &$dccexti
                                            3131          lcla    &i
                                            3132 &$dccext(&$dccexti+1) setc    '&m'
                                            3133 &i       seta    1
                                            3134 .loop    aif    (&i gt &$dccexti).around
                                            3135          aif    ('&$dccext(&i)' eq '&m').getout
                                            3136 &i       seta    &i+1
                                            3137          ago     .loop
                                            3138 .around  anop
                                            3139 &$dccexti seta &$dccexti+1
                                            3140          extrn  &m
                                            3141 .getout  anop
                                            3142          mend
00001F80                                    3143+$eye0066    ds    0d                                                    02-DCCCA
00001F80 C4C3C3                             3144+         dc cl3'DCC'                                                    02-DCCCA
00001F83 01                                 3145+         dc xl1'01' format one                                          02-DCCCA
00001F84 00000000                           3146+         dc a(0)                                                        02-DCCCA
00001F88 0000000000001FF2                   3147+         dc ad(@PER_1563)                                               02-DCCCA
00001F90 00000000000000C0                   3148+         dc ad(192)                                                     02-DCCCA
00001F98 0000000000000000                   3149+         dc ad(0)                                                       02-DCCCA
00001FA0 0000000000001000                   3150+         dc ad(4096)                                                    02-DCCCA
00001FA8 20                                 3151+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001FA9 03                                 3152+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001FAA 03                                 3153+         dc al1(3)                                                      02-DCCCA
00001FAB 08                                 3154+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001FAC 00                                 3155+         dc bl.8'00000000'                                              02-DCCCA
00001FAD 000000                             3156+         dc al3(0)                                                      02-DCCCA
00001FB0 0000000000001F60                   3157+         dc ad(@LNAME1563)                                              02-DCCCA
00001FB8                                    3158+         ds 0d                                                          02-DCCCA
00001FB8 0000000000001F80                   3159+         dc ad($eye0066)                                                02-DCCCA
00001FC0 0000000000000000                   3160+         dc ad(0)                                                       02-DCCCA
00001FC8                                    3161+         ds    0d                                                       01-DCCPR
                                                                                                                           Page   68 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3162+         entry rd_kafka_open_cb_linux                                   01-DCCPR
00001FC8                                    3163+rd_kafka_open_cb_linux ds 0d                                            01-DCCPR
00001FC8                                    3164+@REGION_1563_1 ds 0h                                                    01-DCCPR
00001FC8 EBEC D008 0024          00000008   3165+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001FCE E3E0 D088 0004          00000088   3166+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001FD4 E3C0 D090 0004          00000090   3167+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001FDA B904 002E                          3168+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001FDE E3B0 C018 0004          00000018   3169+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001FE4 A7EB 00C0               000000C0   3170+         aghi  14,192              increase by frame size               01-DCCPR
00001FE8 E3E0 C020 0021          00000020   3171+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001FEE 4720 B020               00000020   3172+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001FF2                                    3173+@PER_1563 ds   0h                                                       01-DCCPR
00001FF2 EBDE 2080 0024          00000080   3174+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001FF8 E3C0 2090 0024          00000090   3175+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001FFE B904 00D2                          3176+         lgr   13,2                set real frame pointer               01-DCCPR
00002002 B904 00CF                          3177+         lgr   12,15               set base reg                         01-DCCPR
                        00001FC8            3178+         using @REGION_1563_1,12                                        01-DCCPR
                                            3179 * ******* End of Prologue
                                            3180 * *
                                            3181 * ***
                                            3182 * ***           return open(pathname, flags|0x00200000, mode);
00002006 E3F0 1000 0004          00000000   3183          LG    15,0(0,1)   ; pathname
0000200C E3F0 D0A8 0024          000000A8   3184          STG   15,168(0,13)
00002012 58F0 100C               0000000C   3185          L     15,12(0,1)  ; flags
00002016 A5FA 0020               00000020   3186          OILH  15,32
0000201A B914 00FF                          3187          LGFR  15,15
0000201E E3F0 D0B0 0024          000000B0   3188          STG   15,176(0,13)
00002024 E3F0 1016 0095          00000016   3189          LLH   15,22(0,1)  ; mode
0000202A B914 00FF                          3190          LGFR  15,15
0000202E E3F0 D0B8 0024          000000B8   3191          STG   15,184(0,13)
00002034 4110 D0A8               000000A8   3192          LA    1,168(0,13)
00002038 E3F0 C0D0 0004          00002098   3193          LG    15,@lit_1563_91 ; open
0000203E                                    3194 @@gen_label145 DS    0H
0000203E 05EF                               3195          BALR  14,15
00002040                                    3196 @@gen_label146 DS    0H
00002040 B914 00FF                          3197          LGFR  15,15
                                            3198 * ***
                                            3199 * ***
                                            3200 * ***
                                            3201 * ***   }
                                            3202 * * **** Start of Epilogue
                                            3203          DCCEPIL
00002044                                    3204+         ds 0h                                                          01-DCCEP
                                            3205+* Epilog
00002044 D707 D088 D088 00000088 00000088   3206+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000204A E3D0 D080 0004          00000080   3207+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002050 E3C0 D090 0004          00000090   3208+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002056 E3B0 C018 0004          00000018   3209+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000205C E3C0 B010 0021          00000010   3210+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002062 E3E0 D008 0004          00000008   3211+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002068 EB1C D020 0004          00000020   3212+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000206E 078E                               3213+         bcr 8,14                if same dsab, just return              01-DCCEP
                                                                                                                           Page   69 
  Active Usings: @REGION_1563_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002070 E3F0 D010 0024          00000010   3214+         stg 15,16(0,13)         save return code                       01-DCCEP
00002076 E300 D018 0024          00000018   3215+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000207C E3F0 D090 0004          00000090   3216+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002082 E3F0 F018 0004          00000018   3217+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002088 47F0 F040               00000040   3218+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3219+* End of Epilog
                                            3220 * * **** End of Epilogue
00002090                                    3221          DS    0D
00002090 000000C0                           3222 @FRAMESIZE_1563 DC F'192'
00002094 00000000
00002098 0000000000000000                   3223 @lit_1563_91 DC AD(open)
                                            3224          DROP  12
                                            3225 *
                                            3226 *   DSECT for automatic variables in "rd_kafka_open_cb_linux"
                                            3227 *      (FUNCTION #1563)
                                            3228 *
00000000                00000000 000000A8   3229 @AUTO#rd_kafka_open_cb_linux DSECT
00000000                                    3230          DS    XL168
                                            3231 *
000020A0                00000000 00006B1A   3232 @CODE    CSECT
                                            3233 *
                                            3234 *
                                            3235 *
                                            3236 * ....... start of rd_kafka_open_cb_generic
                                            3237 rd_kafka_open_cb_generic ALIAS X'99846D92818692816D969785956D83826D8785*
                                                                9585998983'
000020A0                                    3238 @LNAME1564 DS  0H
000020A0 00000018                           3239          DC    X'00000018'
000020A4 99846D9281869281                   3240          DC    C'rd_kafka_open_cb_generic'
000020BC 00                                 3241          DC    X'00'
                                            3242 rd_kafka_open_cb_generic DCCPRLG CINDEX=1564,BASER=12,FRAME=208,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME1564
                                            3243          macro
                                            3244          dccextrn &m
                                            3245          gblc    &$dccext(1000)
                                            3246          gbla    &$dccexti
                                            3247          lcla    &i
                                            3248 &$dccext(&$dccexti+1) setc    '&m'
                                            3249 &i       seta    1
                                            3250 .loop    aif    (&i gt &$dccexti).around
                                            3251          aif    ('&$dccext(&i)' eq '&m').getout
                                            3252 &i       seta    &i+1
                                            3253          ago     .loop
                                            3254 .around  anop
                                            3255 &$dccexti seta &$dccexti+1
                                            3256          extrn  &m
                                            3257 .getout  anop
                                            3258          mend
000020C0                                    3259+$eye0069    ds    0d                                                    02-DCCCA
000020C0 C4C3C3                             3260+         dc cl3'DCC'                                                    02-DCCCA
000020C3 01                                 3261+         dc xl1'01' format one                                          02-DCCCA
000020C4 00000000                           3262+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   70 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000020C8 0000000000002132                   3263+         dc ad(@PER_1564)                                               02-DCCCA
000020D0 00000000000000D0                   3264+         dc ad(208)                                                     02-DCCCA
000020D8 0000000000000000                   3265+         dc ad(0)                                                       02-DCCCA
000020E0 0000000000001000                   3266+         dc ad(4096)                                                    02-DCCCA
000020E8 20                                 3267+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000020E9 03                                 3268+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000020EA 03                                 3269+         dc al1(3)                                                      02-DCCCA
000020EB 08                                 3270+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000020EC 00                                 3271+         dc bl.8'00000000'                                              02-DCCCA
000020ED 000000                             3272+         dc al3(0)                                                      02-DCCCA
000020F0 00000000000020A0                   3273+         dc ad(@LNAME1564)                                              02-DCCCA
000020F8                                    3274+         ds 0d                                                          02-DCCCA
000020F8 00000000000020C0                   3275+         dc ad($eye0069)                                                02-DCCCA
00002100 0000000000000000                   3276+         dc ad(0)                                                       02-DCCCA
00002108                                    3277+         ds    0d                                                       01-DCCPR
                                            3278+         entry rd_kafka_open_cb_generic                                 01-DCCPR
00002108                                    3279+rd_kafka_open_cb_generic ds 0d                                          01-DCCPR
00002108                                    3280+@REGION_1564_1 ds 0h                                                    01-DCCPR
00002108 EBEC D008 0024          00000008   3281+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000210E E3E0 D088 0004          00000088   3282+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002114 E3C0 D090 0004          00000090   3283+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000211A B904 002E                          3284+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000211E E3B0 C018 0004          00000018   3285+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002124 A7EB 00D0               000000D0   3286+         aghi  14,208              increase by frame size               01-DCCPR
00002128 E3E0 C020 0021          00000020   3287+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000212E 4720 B020               00000020   3288+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002132                                    3289+@PER_1564 ds   0h                                                       01-DCCPR
00002132 EBDE 2080 0024          00000080   3290+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002138 E3C0 2090 0024          00000090   3291+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000213E B904 00D2                          3292+         lgr   13,2                set real frame pointer               01-DCCPR
00002142 B904 00CF                          3293+         lgr   12,15               set base reg                         01-DCCPR
                        00002108            3294+         using @REGION_1564_1,12                                        01-DCCPR
                                            3295 * ******* End of Prologue
                                            3296 * *
                                            3297 * ***
                                            3298 * ***      int fd;
                                            3299 * ***           int on = 1;
00002146 E54C D0A8 0001          000000A8   3300          MVHI  168(13),1   ; on
                                            3301 * ***           fd = open(pathname, flags, mode);
0000214C E3F0 1000 0004          00000000   3302          LG    15,0(0,1)   ; pathname
00002152 E3F0 D0B0 0024          000000B0   3303          STG   15,176(0,13)
00002158 E3F0 100C 0014          0000000C   3304          LGF   15,12(0,1)  ; flags
0000215E E3F0 D0B8 0024          000000B8   3305          STG   15,184(0,13)
00002164 E3F0 1016 0095          00000016   3306          LLH   15,22(0,1)  ; mode
0000216A B914 00FF                          3307          LGFR  15,15
0000216E E3F0 D0C0 0024          000000C0   3308          STG   15,192(0,13)
00002174 4110 D0B0               000000B0   3309          LA    1,176(0,13)
00002178 E3F0 C098 0004          000021A0   3310          LG    15,@lit_1564_93 ; open
0000217E                                    3311 @@gen_label147 DS    0H
0000217E 05EF                               3312          BALR  14,15
00002180                                    3313 @@gen_label148 DS    0H
00002180 182F                               3314          LR    2,15
                                                                                                                           Page   71 
  Active Usings: @REGION_1564_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3315 * ***           if (fd == -1)
00002182 A72E FFFF               0000FFFF   3316          CHI   2,-1
00002186 4770 C0A8               000021B0   3317          BNE   @L645
                                            3318 * ***                   return -1;
0000218A A7F9 FFFF               0000FFFF   3319          LGHI  15,-1       ; -1
0000218E 47F0 C0D8               000021E0   3320          B     @ret_lab_1564
00002198                                    3321          DS    0D
00002198 000000D0                           3322 @FRAMESIZE_1564 DC F'208'
0000219C 00000000
000021A0 0000000000000000                   3323 @lit_1564_93 DC AD(open)
000021A8 0000000000000000                   3324 @lit_1564_95 DC AD(fcntl)
000021B0                                    3325 @L645    DS    0H
                                            3326 * ***
                                            3327 * ***           fcntl(fd, 2, 1, &on);
000021B0 B914 00F2                          3328          LGFR  15,2
000021B4 E3F0 D0B0 0024          000000B0   3329          STG   15,176(0,13)
000021BA E548 D0B8 0002          000000B8   3330          MVGHI 184(13),2
000021C0 E548 D0C0 0001          000000C0   3331          MVGHI 192(13),1
000021C6 41F0 D0A8               000000A8   3332          LA    15,168(0,13)
000021CA E3F0 D0C8 0024          000000C8   3333          STG   15,200(0,13)
000021D0 4110 D0B0               000000B0   3334          LA    1,176(0,13)
000021D4 E3F0 C0A0 0004          000021A8   3335          LG    15,@lit_1564_95 ; fcntl
000021DA                                    3336 @@gen_label150 DS    0H
000021DA 05EF                               3337          BALR  14,15
000021DC                                    3338 @@gen_label151 DS    0H
                                            3339 * ***
                                            3340 * ***           return fd;
000021DC B914 00F2                          3341          LGFR  15,2
                                            3342 * ***   # 142 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                            3343 * ***   }
000021E0                                    3344 @ret_lab_1564 DS 0H
                                            3345 * * **** Start of Epilogue
                                            3346          DCCEPIL
000021E0                                    3347+         ds 0h                                                          01-DCCEP
                                            3348+* Epilog
000021E0 D707 D088 D088 00000088 00000088   3349+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000021E6 E3D0 D080 0004          00000080   3350+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000021EC E3C0 D090 0004          00000090   3351+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000021F2 E3B0 C018 0004          00000018   3352+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000021F8 E3C0 B010 0021          00000010   3353+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000021FE E3E0 D008 0004          00000008   3354+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002204 EB1C D020 0004          00000020   3355+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000220A 078E                               3356+         bcr 8,14                if same dsab, just return              01-DCCEP
0000220C E3F0 D010 0024          00000010   3357+         stg 15,16(0,13)         save return code                       01-DCCEP
00002212 E300 D018 0024          00000018   3358+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002218 E3F0 D090 0004          00000090   3359+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000221E E3F0 F018 0004          00000018   3360+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002224 47F0 F040               00000040   3361+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3362+* End of Epilog
                                            3363 * * **** End of Epilogue
                                            3364          DROP  12
                                            3365 *
                                                                                                                           Page   72 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3366 *   DSECT for automatic variables in "rd_kafka_open_cb_generic"
                                            3367 *      (FUNCTION #1564)
                                            3368 *
00000000                00000000 000000AC   3369 @AUTO#rd_kafka_open_cb_generic DSECT
00000000                                    3370          DS    XL168
000000A8                                    3371 rd_kafka_open_cb_generic#on#0 DS 1F ; on
000000AC                000000AC 000000A8   3372          ORG   @AUTO#rd_kafka_open_cb_generic+168
000000A8                                    3373 rd_kafka_open_cb_generic#fd#0 DS 1F ; fd
                                            3374 *
00002228                00000000 00006B1A   3375 @CODE    CSECT
                                            3376 *
                                            3377 *
                                            3378 *
                                            3379 * ....... start of rd_kafka_offset_file_open
00002228                                    3380 @LNAME1926 DS  0H
00002228 00000019                           3381          DC    X'00000019'
0000222C 99846D9281869281                   3382          DC    C'rd_kafka_offset_file_open'
00002245 00                                 3383          DC    X'00'
                                            3384 rd_kafka_offset_file_open DCCPRLG CINDEX=1926,BASER=12,FRAME=264,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1926
                                            3385          macro
                                            3386          dccextrn &m
                                            3387          gblc    &$dccext(1000)
                                            3388          gbla    &$dccexti
                                            3389          lcla    &i
                                            3390 &$dccext(&$dccexti+1) setc    '&m'
                                            3391 &i       seta    1
                                            3392 .loop    aif    (&i gt &$dccexti).around
                                            3393          aif    ('&$dccext(&i)' eq '&m').getout
                                            3394 &i       seta    &i+1
                                            3395          ago     .loop
                                            3396 .around  anop
                                            3397 &$dccexti seta &$dccexti+1
                                            3398          extrn  &m
                                            3399 .getout  anop
                                            3400          mend
00002248                                    3401+$eye0072    ds    0d                                                    02-DCCCA
00002248 C4C3C3                             3402+         dc cl3'DCC'                                                    02-DCCCA
0000224B 01                                 3403+         dc xl1'01' format one                                          02-DCCCA
0000224C 00000000                           3404+         dc a(0)                                                        02-DCCCA
00002250 00000000000022BA                   3405+         dc ad(@PER_1926)                                               02-DCCCA
00002258 0000000000000108                   3406+         dc ad(264)                                                     02-DCCCA
00002260 0000000000000000                   3407+         dc ad(0)                                                       02-DCCCA
00002268 0000000000001000                   3408+         dc ad(4096)                                                    02-DCCCA
00002270 20                                 3409+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002271 03                                 3410+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002272 03                                 3411+         dc al1(3)                                                      02-DCCCA
00002273 08                                 3412+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002274 00                                 3413+         dc bl.8'00000000'                                              02-DCCCA
00002275 000000                             3414+         dc al3(0)                                                      02-DCCCA
00002278 0000000000002228                   3415+         dc ad(@LNAME1926)                                              02-DCCCA
00002280                                    3416+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   73 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002280 0000000000002248                   3417+         dc ad($eye0072)                                                02-DCCCA
00002288 0000000000000000                   3418+         dc ad(0)                                                       02-DCCCA
00002290                                    3419+         ds    0d                                                       01-DCCPR
00002290                                    3420+rd_kafka_offset_file_open ds 0d                                         01-DCCPR
00002290                                    3421+@REGION_1926_1 ds 0h                                                    01-DCCPR
00002290 EBEC D008 0024          00000008   3422+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002296 E3E0 D088 0004          00000088   3423+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000229C E3C0 D090 0004          00000090   3424+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000022A2 B904 002E                          3425+         lgr   2,14                copy addr of our savearea            01-DCCPR
000022A6 E3B0 C018 0004          00000018   3426+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000022AC A7EB 0108               00000108   3427+         aghi  14,264              increase by frame size               01-DCCPR
000022B0 E3E0 C020 0021          00000020   3428+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000022B6 4720 B020               00000020   3429+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000022BA                                    3430+@PER_1926 ds   0h                                                       01-DCCPR
000022BA EBDE 2080 0024          00000080   3431+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000022C0 E3C0 2090 0024          00000090   3432+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000022C6 B904 00D2                          3433+         lgr   13,2                set real frame pointer               01-DCCPR
000022CA B904 00CF                          3434+         lgr   12,15               set base reg                         01-DCCPR
                        00002290            3435+         using @REGION_1926_1,12                                        01-DCCPR
                                            3436 * ******* End of Prologue
                                            3437 * *
                                            3438 * ***           rd_kafka_t *rk = rktp->rktp_rkt->rkt_rk;
000022CE E320 1000 0004          00000000   3439          LG    2,0(0,1)    ; rktp
000022D4 E3F0 2060 0004          00000060   3440          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
000022DA E3F0 F148 0004          00000148   3441          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
                                            3442 * ***           int fd;
                                            3443 * ***
                                            3444 * ***
                                            3445 * ***      mode_t mode = 0644;
000022E0 E544 D0A8 01A4          000000A8   3446          MVHHI 168(13),420 ; mode
                                            3447 * ***
                                            3448 * ***
                                            3449 * ***
                                            3450 * ***      if ((fd = rk->rk_conf.open_cb(rktp->rktp_offset_path,
                                            3451 * ***                                         0x0200|0x0002, mode,
                                            3452 * ***                                         rk->rk_conf.opaque)) == \
                                            3453 * -1) {
000022E6 E310 2278 0004          00000278   3454          LG    1,632(0,2)
000022EC E310 D0B0 0024          000000B0   3455          STG   1,176(0,13)
000022F2 E548 D0B8 0202          000000B8   3456          MVGHI 184(13),514
000022F8 E310 D0A8 0091          000000A8   3457          LLGH  1,168(0,13) ; mode
000022FE E310 D0C0 0024          000000C0   3458          STG   1,192(0,13)
00002304 E310 F8A8 0004          000008A8   3459          LG    1,2216(0,15)
0000230A E310 D0C8 0024          000000C8   3460          STG   1,200(0,13)
00002310 E3F0 F898 0004          00000898   3461          LG    15,2200(0,15) ; offset of open_cb in rd_kafka_conf_s
00002316 4110 D0B0               000000B0   3462          LA    1,176(0,13)
0000231A                                    3463 @@gen_label152 DS    0H
0000231A 05EF                               3464          BALR  14,15
0000231C                                    3465 @@gen_label153 DS    0H
0000231C A7FE FFFF               0000FFFF   3466          CHI   15,-1
00002320 4770 C23A               000024CA   3467          BNE   @L646
                                            3468 * ***         do { if (!((rktp->rktp_rkt->rkt_rk)->rk_conf.enabled_eve\
                                                                                                                           Page   74 
  Active Usings: @REGION_1926_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3469 * nts & 0x8)) { rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf, rktp->\
                                            3470 * rktp_rkt->rkt_rk, ((void *)0), 3, 0x0, "ERROR", "%s [%" "d" "]: " "F\
                                            3471 * ailed to open offset file %s: %s", rktp->rktp_rkt->rkt_topic->str, r\
                                            3472 * ktp->rktp_partition, rktp->rktp_offset_path, strerror((* __error()))\
                                            3473 * ); break; } rd_kafka_q_op_err((rktp->rktp_rkt->rkt_rk)->rk_rep, RD_K\
                                            3474 * AFKA_RESP_ERR__FS, "%s [%" "d" "]: " "Failed to open offset file %s:\
                                            3475 *  %s", rktp->rktp_rkt->rkt_topic->str, rktp->rktp_partition, rktp->rk\
                                            3476 * tp_offset_path, strerror((* __error()))); } while (0);
00002324                                    3477 @L647    DS    0H
00002324 E3F0 2060 0004          00000060   3478          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000232A E3F0 F148 0004          00000148   3479          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00002330 9108 F2F3      000002F3 00000008   3480          TM    755(15),8
00002334 4770 C1A0               00002430   3481          BNZ   @L650
00002338 E3F0 C170 0004          00002400   3482          LG    15,@lit_1926_97 ; __error
0000233E                                    3483 @@gen_label156 DS    0H
0000233E 05EF                               3484          BALR  14,15
00002340                                    3485 @@gen_label157 DS    0H
00002340 58F0 F000               00000000   3486          L     15,0(0,15)
00002344 B914 00FF                          3487          LGFR  15,15
00002348 E3F0 D0B0 0024          000000B0   3488          STG   15,176(0,13)
0000234E 4110 D0B0               000000B0   3489          LA    1,176(0,13)
00002352 E3F0 C178 0004          00002408   3490          LG    15,@lit_1926_98 ; strerror
00002358                                    3491 @@gen_label158 DS    0H
00002358 05EF                               3492          BALR  14,15
0000235A                                    3493 @@gen_label159 DS    0H
0000235A E310 2060 0004          00000060   3494          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
00002360 E310 1148 0004          00000148   3495          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
00002366 4110 1210               00000210   3496          LA    1,528(0,1)
0000236A E310 D0B0 0024          000000B0   3497          STG   1,176(0,13)
00002370 E310 2060 0004          00000060   3498          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
00002376 E310 1148 0004          00000148   3499          LG    1,328(0,1)
0000237C E310 D0B8 0024          000000B8   3500          STG   1,184(0,13)
00002382 D707 D0C0 D0C0 000000C0 000000C0   3501          XC    192(8,13),192(13)
00002388 E548 D0C8 0003          000000C8   3502          MVGHI 200(13),3
0000238E D707 D0D0 D0D0 000000D0 000000D0   3503          XC    208(8,13),208(13)
00002394 E310 C188 0004          00002418   3504          LG    1,@lit_1926_99
0000239A 4130 10C4               000000C4   3505          LA    3,196(0,1)
0000239E E330 D0D8 0024          000000D8   3506          STG   3,216(0,13)
000023A4 4110 10CA               000000CA   3507          LA    1,202(0,1)
000023A8 E310 D0E0 0024          000000E0   3508          STG   1,224(0,13)
000023AE E310 2060 0004          00000060   3509          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
000023B4 E310 1080 0004          00000080   3510          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
000023BA E310 1008 0004          00000008   3511          LG    1,8(0,1)
000023C0 E310 D0E8 0024          000000E8   3512          STG   1,232(0,13)
000023C6 E310 2068 0014          00000068   3513          LGF   1,104(0,2)
000023CC E310 D0F0 0024          000000F0   3514          STG   1,240(0,13)
000023D2 E310 2278 0004          00000278   3515          LG    1,632(0,2)
000023D8 E310 D0F8 0024          000000F8   3516          STG   1,248(0,13)
000023DE E3F0 D100 0024          00000100   3517          STG   15,256(0,13)
000023E4 4110 D0B0               000000B0   3518          LA    1,176(0,13)
000023E8 E3F0 C180 0004          00002410   3519          LG    15,@lit_1926_100 ; rd_kafka_log0
000023EE                                    3520 @@gen_label160 DS    0H
                                                                                                                           Page   75 
  Active Usings: @REGION_1926_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000023EE 05EF                               3521          BALR  14,15
000023F0                                    3522 @@gen_label161 DS    0H
000023F0 47F0 C232               000024C2   3523          B     @L648
000023F8                                    3524          DS    0D
000023F8 00000108                           3525 @FRAMESIZE_1926 DC F'264'
000023FC 00000000
00002400 0000000000000000                   3526 @lit_1926_97 DC AD(__error)
00002408 0000000000000000                   3527 @lit_1926_98 DC AD(strerror)
00002410 0000000000000000                   3528 @lit_1926_100 DC AD(rd_kafka_log0)
00002418 0000000000006D48                   3529 @lit_1926_99 DC AD(@strings@)
00002420 0000000000000000                   3530 @lit_1926_104 DC AD(rd_kafka_q_op_err)
00002428 0000000000000000                   3531 @lit_1926_107 DC AD(fdopen)
00002430                                    3532 @L650    DS    0H
00002430 E3F0 C170 0004          00002400   3533          LG    15,@lit_1926_97 ; __error
00002436                                    3534 @@gen_label162 DS    0H
00002436 05EF                               3535          BALR  14,15
00002438                                    3536 @@gen_label163 DS    0H
00002438 58F0 F000               00000000   3537          L     15,0(0,15)
0000243C B914 00FF                          3538          LGFR  15,15
00002440 E3F0 D0B0 0024          000000B0   3539          STG   15,176(0,13)
00002446 4110 D0B0               000000B0   3540          LA    1,176(0,13)
0000244A E3F0 C178 0004          00002408   3541          LG    15,@lit_1926_98 ; strerror
00002450                                    3542 @@gen_label164 DS    0H
00002450 05EF                               3543          BALR  14,15
00002452                                    3544 @@gen_label165 DS    0H
00002452 E310 2060 0004          00000060   3545          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
00002458 E310 1148 0004          00000148   3546          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
0000245E E310 1000 0004          00000000   3547          LG    1,0(0,1)
00002464 E310 D0B0 0024          000000B0   3548          STG   1,176(0,13)
0000246A E548 D0B8 FF43          000000B8   3549          MVGHI 184(13),-189
00002470 E310 C188 0004          00002418   3550          LG    1,@lit_1926_99
00002476 4110 10CA               000000CA   3551          LA    1,202(0,1)
0000247A E310 D0C0 0024          000000C0   3552          STG   1,192(0,13)
00002480 E310 2060 0004          00000060   3553          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
00002486 E310 1080 0004          00000080   3554          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
0000248C E310 1008 0004          00000008   3555          LG    1,8(0,1)
00002492 E310 D0C8 0024          000000C8   3556          STG   1,200(0,13)
00002498 E310 2068 0014          00000068   3557          LGF   1,104(0,2)
0000249E E310 D0D0 0024          000000D0   3558          STG   1,208(0,13)
000024A4 E310 2278 0004          00000278   3559          LG    1,632(0,2)
000024AA E310 D0D8 0024          000000D8   3560          STG   1,216(0,13)
000024B0 E3F0 D0E0 0024          000000E0   3561          STG   15,224(0,13)
000024B6 4110 D0B0               000000B0   3562          LA    1,176(0,13)
000024BA E3F0 C190 0004          00002420   3563          LG    15,@lit_1926_104 ; rd_kafka_q_op_err
000024C0                                    3564 @@gen_label166 DS    0H
000024C0 05EF                               3565          BALR  14,15
000024C2                                    3566 @@gen_label167 DS    0H
000024C2                                    3567 @L648    DS    0H
                                            3568 * ***   # 164 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                            3569 * ***         return -1;
000024C2 A7F9 FFFF               0000FFFF   3570          LGHI  15,-1       ; -1
000024C6 47F0 C26A               000024FA   3571          B     @ret_lab_1926
                                                                                                                           Page   76 
  Active Usings: @REGION_1926_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3572 * ***      }
000024CA                                    3573 @L646    DS    0H
                                            3574 * ***
                                            3575 * ***      rktp->rktp_offset_fp =
                                            3576 * ***
                                            3577 * ***         fdopen(fd, "r+");
000024CA B914 00FF                          3578          LGFR  15,15
000024CE E3F0 D0B0 0024          000000B0   3579          STG   15,176(0,13)
000024D4 E3F0 C188 0004          00002418   3580          LG    15,@lit_1926_99
000024DA 41F0 F0F6               000000F6   3581          LA    15,246(0,15)
000024DE E3F0 D0B8 0024          000000B8   3582          STG   15,184(0,13)
000024E4 4110 D0B0               000000B0   3583          LA    1,176(0,13)
000024E8 E3F0 C198 0004          00002428   3584          LG    15,@lit_1926_107 ; fdopen
000024EE                                    3585 @@gen_label168 DS    0H
000024EE 05EF                               3586          BALR  14,15
000024F0                                    3587 @@gen_label169 DS    0H
000024F0 E3F0 2280 0024          00000280   3588          STG   15,640(0,2)
                                            3589 * ***
                                            3590 * ***
                                            3591 * ***
                                            3592 * ***
                                            3593 * ***      return 0;
000024F6 A7F9 0000               00000000   3594          LGHI  15,0        ; 0
                                            3595 * ***   }
000024FA                                    3596 @ret_lab_1926 DS 0H
                                            3597 * * **** Start of Epilogue
                                            3598          DCCEPIL
000024FA                                    3599+         ds 0h                                                          01-DCCEP
                                            3600+* Epilog
000024FA D707 D088 D088 00000088 00000088   3601+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002500 E3D0 D080 0004          00000080   3602+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002506 E3C0 D090 0004          00000090   3603+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000250C E3B0 C018 0004          00000018   3604+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002512 E3C0 B010 0021          00000010   3605+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002518 E3E0 D008 0004          00000008   3606+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000251E EB1C D020 0004          00000020   3607+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002524 078E                               3608+         bcr 8,14                if same dsab, just return              01-DCCEP
00002526 E3F0 D010 0024          00000010   3609+         stg 15,16(0,13)         save return code                       01-DCCEP
0000252C E300 D018 0024          00000018   3610+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002532 E3F0 D090 0004          00000090   3611+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002538 E3F0 F018 0004          00000018   3612+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000253E 47F0 F040               00000040   3613+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3614+* End of Epilog
                                            3615 * * **** End of Epilogue
                                            3616          DROP  12
                                            3617 *
                                            3618 *   DSECT for automatic variables in "rd_kafka_offset_file_open"
                                            3619 *      (FUNCTION #1926)
                                            3620 *
00000000                00000000 000000AC   3621 @AUTO#rd_kafka_offset_file_open DSECT
00000000                                    3622          DS    XL168
000000A8                                    3623 rd_kafka_offset_file_open#mode#0 DS 1H ; mode
                                                                                                                           Page   77 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000000AA                000000AA 000000A8   3624          ORG   @AUTO#rd_kafka_offset_file_open+168
000000A8                                    3625 rd_kafka_offset_file_open#fd#0 DS 1F ; fd
                                            3626 *
00002542                00000000 00006B1A   3627 @CODE    CSECT
                                            3628 *
                                            3629 *
                                            3630 *
                                            3631 * ....... start of rd_kafka_offset_file_read
00002542                                    3632 @LNAME1927 DS  0H
00002542 00000019                           3633          DC    X'00000019'
00002546 99846D9281869281                   3634          DC    C'rd_kafka_offset_file_read'
0000255F 00                                 3635          DC    X'00'
                                            3636 rd_kafka_offset_file_read DCCPRLG CINDEX=1927,BASER=12,FRAME=288,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1927
                                            3637          macro
                                            3638          dccextrn &m
                                            3639          gblc    &$dccext(1000)
                                            3640          gbla    &$dccexti
                                            3641          lcla    &i
                                            3642 &$dccext(&$dccexti+1) setc    '&m'
                                            3643 &i       seta    1
                                            3644 .loop    aif    (&i gt &$dccexti).around
                                            3645          aif    ('&$dccext(&i)' eq '&m').getout
                                            3646 &i       seta    &i+1
                                            3647          ago     .loop
                                            3648 .around  anop
                                            3649 &$dccexti seta &$dccexti+1
                                            3650          extrn  &m
                                            3651 .getout  anop
                                            3652          mend
00002560                                    3653+$eye0075    ds    0d                                                    02-DCCCA
00002560 C4C3C3                             3654+         dc cl3'DCC'                                                    02-DCCCA
00002563 01                                 3655+         dc xl1'01' format one                                          02-DCCCA
00002564 00000000                           3656+         dc a(0)                                                        02-DCCCA
00002568 00000000000025D2                   3657+         dc ad(@PER_1927)                                               02-DCCCA
00002570 0000000000000120                   3658+         dc ad(288)                                                     02-DCCCA
00002578 0000000000000000                   3659+         dc ad(0)                                                       02-DCCCA
00002580 0000000000001000                   3660+         dc ad(4096)                                                    02-DCCCA
00002588 20                                 3661+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002589 03                                 3662+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000258A 03                                 3663+         dc al1(3)                                                      02-DCCCA
0000258B 08                                 3664+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000258C 00                                 3665+         dc bl.8'00000000'                                              02-DCCCA
0000258D 000000                             3666+         dc al3(0)                                                      02-DCCCA
00002590 0000000000002542                   3667+         dc ad(@LNAME1927)                                              02-DCCCA
00002598                                    3668+         ds 0d                                                          02-DCCCA
00002598 0000000000002560                   3669+         dc ad($eye0075)                                                02-DCCCA
000025A0 0000000000000000                   3670+         dc ad(0)                                                       02-DCCCA
000025A8                                    3671+         ds    0d                                                       01-DCCPR
000025A8                                    3672+rd_kafka_offset_file_read ds 0d                                         01-DCCPR
000025A8                                    3673+@REGION_1927_1 ds 0h                                                    01-DCCPR
000025A8 EBEC D008 0024          00000008   3674+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page   78 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000025AE E3E0 D088 0004          00000088   3675+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000025B4 E3C0 D090 0004          00000090   3676+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000025BA B904 002E                          3677+         lgr   2,14                copy addr of our savearea            01-DCCPR
000025BE E3B0 C018 0004          00000018   3678+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000025C4 A7EB 0120               00000120   3679+         aghi  14,288              increase by frame size               01-DCCPR
000025C8 E3E0 C020 0021          00000020   3680+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000025CE 4720 B020               00000020   3681+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000025D2                                    3682+@PER_1927 ds   0h                                                       01-DCCPR
000025D2 EBDE 2080 0024          00000080   3683+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000025D8 E3C0 2090 0024          00000090   3684+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000025DE B904 00D2                          3685+         lgr   13,2                set real frame pointer               01-DCCPR
000025E2 B904 00CF                          3686+         lgr   12,15               set base reg                         01-DCCPR
                        000025A8            3687+         using @REGION_1927_1,12                                        01-DCCPR
                                            3688 * ******* End of Prologue
                                            3689 * *
                                            3690 * ***      char buf[22];
000025E6 E320 1000 0004          00000000   3691          LG    2,0(0,1)    ; rktp
                                            3692 * ***      char *end;
                                            3693 * ***      int64_t offset;
                                            3694 * ***      size_t r;
                                            3695 * ***
                                            3696 * ***      if (fseek(rktp->rktp_offset_fp, 0, 0) == -1) {
000025EC E3F0 2280 0004          00000280   3697          LG    15,640(0,2)
000025F2 E3F0 D0C8 0024          000000C8   3698          STG   15,200(0,13)
000025F8 D70F D0D0 D0D0 000000D0 000000D0   3699          XC    208(16,13),208(13)
000025FE 4110 D0C8               000000C8   3700          LA    1,200(0,13)
00002602 E3F0 C148 0004          000026F0   3701          LG    15,@lit_1927_110 ; fseek
00002608                                    3702 @@gen_label170 DS    0H
00002608 05EF                               3703          BALR  14,15
0000260A                                    3704 @@gen_label171 DS    0H
0000260A A7FE FFFF               0000FFFF   3705          CHI   15,-1
0000260E 4770 C23C               000027E4   3706          BNE   @L651
                                            3707 * ***         do { if (!((rktp->rktp_rkt->rkt_rk)->rk_conf.enabled_eve\
                                            3708 * nts & 0x8)) { rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf, rktp->\
                                            3709 * rktp_rkt->rkt_rk, ((void *)0), 3, 0x0, "ERROR", "%s [%" "d" "]: " "S\
                                            3710 * eek (for read) failed on offset file %s: %s", rktp->rktp_rkt->rkt_to\
                                            3711 * pic->str, rktp->rktp_partition, rktp->rktp_offset_path, strerror((* \
                                            3712 * __error()))); break; } rd_kafka_q_op_err((rktp->rktp_rkt->rkt_rk)->r\
                                            3713 * k_rep, RD_KAFKA_RESP_ERR__FS, "%s [%" "d" "]: " "Seek (for read) fai\
                                            3714 * led on offset file %s: %s", rktp->rktp_rkt->rkt_topic->str, rktp->rk\
                                            3715 * tp_partition, rktp->rktp_offset_path, strerror((* __error()))); } wh\
                                            3716 * ile (0);
00002612                                    3717 @L652    DS    0H
00002612 E3F0 2060 0004          00000060   3718          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002618 E3F0 F148 0004          00000148   3719          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
0000261E 9108 F2F3      000002F3 00000008   3720          TM    755(15),8
00002622 4770 C190               00002738   3721          BNZ   @L655
00002626 E3F0 C150 0004          000026F8   3722          LG    15,@lit_1927_111 ; __error
0000262C                                    3723 @@gen_label174 DS    0H
0000262C 05EF                               3724          BALR  14,15
0000262E                                    3725 @@gen_label175 DS    0H
0000262E 58F0 F000               00000000   3726          L     15,0(0,15)
                                                                                                                           Page   79 
  Active Usings: @REGION_1927_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002632 B914 00FF                          3727          LGFR  15,15
00002636 E3F0 D0C8 0024          000000C8   3728          STG   15,200(0,13)
0000263C 4110 D0C8               000000C8   3729          LA    1,200(0,13)
00002640 E3F0 C158 0004          00002700   3730          LG    15,@lit_1927_112 ; strerror
00002646                                    3731 @@gen_label176 DS    0H
00002646 05EF                               3732          BALR  14,15
00002648                                    3733 @@gen_label177 DS    0H
00002648 E310 2060 0004          00000060   3734          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
0000264E E310 1148 0004          00000148   3735          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
00002654 4110 1210               00000210   3736          LA    1,528(0,1)
00002658 E310 D0C8 0024          000000C8   3737          STG   1,200(0,13)
0000265E E310 2060 0004          00000060   3738          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
00002664 E310 1148 0004          00000148   3739          LG    1,328(0,1)
0000266A E310 D0D0 0024          000000D0   3740          STG   1,208(0,13)
00002670 D707 D0D8 D0D8 000000D8 000000D8   3741          XC    216(8,13),216(13)
00002676 E548 D0E0 0003          000000E0   3742          MVGHI 224(13),3
0000267C D707 D0E8 D0E8 000000E8 000000E8   3743          XC    232(8,13),232(13)
00002682 E310 C168 0004          00002710   3744          LG    1,@lit_1927_113
00002688 4130 10C4               000000C4   3745          LA    3,196(0,1)
0000268C E330 D0F0 0024          000000F0   3746          STG   3,240(0,13)
00002692 4110 10FA               000000FA   3747          LA    1,250(0,1)
00002696 E310 D0F8 0024          000000F8   3748          STG   1,248(0,13)
0000269C E310 2060 0004          00000060   3749          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
000026A2 E310 1080 0004          00000080   3750          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
000026A8 E310 1008 0004          00000008   3751          LG    1,8(0,1)
000026AE E310 D100 0024          00000100   3752          STG   1,256(0,13)
000026B4 E310 2068 0014          00000068   3753          LGF   1,104(0,2)
000026BA E310 D108 0024          00000108   3754          STG   1,264(0,13)
000026C0 E310 2278 0004          00000278   3755          LG    1,632(0,2)
000026C6 E310 D110 0024          00000110   3756          STG   1,272(0,13)
000026CC E3F0 D118 0024          00000118   3757          STG   15,280(0,13)
000026D2 4110 D0C8               000000C8   3758          LA    1,200(0,13)
000026D6 E3F0 C160 0004          00002708   3759          LG    15,@lit_1927_114 ; rd_kafka_log0
000026DC                                    3760 @@gen_label178 DS    0H
000026DC 05EF                               3761          BALR  14,15
000026DE                                    3762 @@gen_label179 DS    0H
000026DE 47F0 C222               000027CA   3763          B     @L653
000026E8                                    3764          DS    0D
000026E8 00000120                           3765 @FRAMESIZE_1927 DC F'288'
000026EC 00000000
000026F0 0000000000000000                   3766 @lit_1927_110 DC AD(fseek)
000026F8 0000000000000000                   3767 @lit_1927_111 DC AD(__error)
00002700 0000000000000000                   3768 @lit_1927_112 DC AD(strerror)
00002708 0000000000000000                   3769 @lit_1927_114 DC AD(rd_kafka_log0)
00002710 0000000000006D48                   3770 @lit_1927_113 DC AD(@strings@)
00002718 0000000000000000                   3771 @lit_1927_118 DC AD(rd_kafka_q_op_err)
00002720 0000000000001E98                   3772 @lit_1927_119 DC AD(rd_kafka_offset_file_close)
00002728 0000000000000000                   3773 @lit_1927_121 DC AD(fread)
00002730 0000000000000000                   3774 @lit_1927_125 DC AD(strtoull)
00002738                                    3775 @L655    DS    0H
00002738 E3F0 C150 0004          000026F8   3776          LG    15,@lit_1927_111 ; __error
0000273E                                    3777 @@gen_label180 DS    0H
                                                                                                                           Page   80 
  Active Usings: @REGION_1927_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000273E 05EF                               3778          BALR  14,15
00002740                                    3779 @@gen_label181 DS    0H
00002740 58F0 F000               00000000   3780          L     15,0(0,15)
00002744 B914 00FF                          3781          LGFR  15,15
00002748 E3F0 D0C8 0024          000000C8   3782          STG   15,200(0,13)
0000274E 4110 D0C8               000000C8   3783          LA    1,200(0,13)
00002752 E3F0 C158 0004          00002700   3784          LG    15,@lit_1927_112 ; strerror
00002758                                    3785 @@gen_label182 DS    0H
00002758 05EF                               3786          BALR  14,15
0000275A                                    3787 @@gen_label183 DS    0H
0000275A E310 2060 0004          00000060   3788          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
00002760 E310 1148 0004          00000148   3789          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
00002766 E310 1000 0004          00000000   3790          LG    1,0(0,1)
0000276C E310 D0C8 0024          000000C8   3791          STG   1,200(0,13)
00002772 E548 D0D0 FF43          000000D0   3792          MVGHI 208(13),-189
00002778 E310 C168 0004          00002710   3793          LG    1,@lit_1927_113
0000277E 4110 10FA               000000FA   3794          LA    1,250(0,1)
00002782 E310 D0D8 0024          000000D8   3795          STG   1,216(0,13)
00002788 E310 2060 0004          00000060   3796          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
0000278E E310 1080 0004          00000080   3797          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
00002794 E310 1008 0004          00000008   3798          LG    1,8(0,1)
0000279A E310 D0E0 0024          000000E0   3799          STG   1,224(0,13)
000027A0 E310 2068 0014          00000068   3800          LGF   1,104(0,2)
000027A6 E310 D0E8 0024          000000E8   3801          STG   1,232(0,13)
000027AC E310 2278 0004          00000278   3802          LG    1,632(0,2)
000027B2 E310 D0F0 0024          000000F0   3803          STG   1,240(0,13)
000027B8 E3F0 D0F8 0024          000000F8   3804          STG   15,248(0,13)
000027BE 4110 D0C8               000000C8   3805          LA    1,200(0,13)
000027C2 E3F0 C170 0004          00002718   3806          LG    15,@lit_1927_118 ; rd_kafka_q_op_err
000027C8                                    3807 @@gen_label184 DS    0H
000027C8 05EF                               3808          BALR  14,15
000027CA                                    3809 @@gen_label185 DS    0H
000027CA                                    3810 @L653    DS    0H
                                            3811 * ***   # 193 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                            3812 * ***         rd_kafka_offset_file_close(rktp);
000027CA E320 D0C8 0024          000000C8   3813          STG   2,200(0,13)
000027D0 4110 D0C8               000000C8   3814          LA    1,200(0,13)
000027D4 E3F0 C178 0004          00002720   3815          LG    15,@lit_1927_119 ; rd_kafka_offset_file_close
000027DA                                    3816 @@gen_label186 DS    0H
000027DA 05EF                               3817          BALR  14,15
000027DC                                    3818 @@gen_label187 DS    0H
                                            3819 * ***         return -1001;
000027DC A7F9 FC17               0000FC17   3820          LGHI  15,-1001    ; -1001
000027E0 47F0 C52A               00002AD2   3821          B     @ret_lab_1927
                                            3822 * ***      }
000027E4                                    3823 @L651    DS    0H
                                            3824 * ***
                                            3825 * ***      r = fread(buf, 1, sizeof(buf) - 1, rktp->rktp_offset_fp);
000027E4 41F0 D0A8               000000A8   3826          LA    15,168(0,13)
000027E8 E3F0 D0C8 0024          000000C8   3827          STG   15,200(0,13)
000027EE E548 D0D0 0001          000000D0   3828          MVGHI 208(13),1
000027F4 E548 D0D8 0015          000000D8   3829          MVGHI 216(13),21
                                                                                                                           Page   81 
  Active Usings: @REGION_1927_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000027FA E3F0 2280 0004          00000280   3830          LG    15,640(0,2)
00002800 E3F0 D0E0 0024          000000E0   3831          STG   15,224(0,13)
00002806 4110 D0C8               000000C8   3832          LA    1,200(0,13)
0000280A E3F0 C180 0004          00002728   3833          LG    15,@lit_1927_121 ; fread
00002810                                    3834 @@gen_label188 DS    0H
00002810 05EF                               3835          BALR  14,15
00002812                                    3836 @@gen_label189 DS    0H
                                            3837 * ***      if (r == 0) {
00002812 B902 001F                          3838          LTGR  1,15
00002816 4770 C31E               000028C6   3839          BNE   @L656
                                            3840 * ***         do { if ((((rktp->rktp_rkt->rkt_rk)->rk_conf.debug & (0x\
                                            3841 * 4)))) rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf,rktp->rktp_rkt-\
                                            3842 * >rkt_rk,((void *)0), 7,(0x4), "OFFSET","%s [%" "d" "]: offset file (\
                                            3843 * %s) is empty", rktp->rktp_rkt->rkt_topic->str, rktp->rktp_partition,\
                                            3844 *  rktp->rktp_offset_path); } while (0);
0000281A                                    3845 @L657    DS    0H
0000281A E3F0 2060 0004          00000060   3846          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002820 E3F0 F148 0004          00000148   3847          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00002826 9104 F323      00000323 00000004   3848          TM    803(15),4
0000282A 4780 C316               000028BE   3849          BZ    @L660
0000282E E3F0 2060 0004          00000060   3850          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002834 E3F0 F148 0004          00000148   3851          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
0000283A 41F0 F210               00000210   3852          LA    15,528(0,15)
0000283E E3F0 D0C8 0024          000000C8   3853          STG   15,200(0,13)
00002844 E3F0 2060 0004          00000060   3854          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000284A E3F0 F148 0004          00000148   3855          LG    15,328(0,15)
00002850 E3F0 D0D0 0024          000000D0   3856          STG   15,208(0,13)
00002856 D707 D0D8 D0D8 000000D8 000000D8   3857          XC    216(8,13),216(13)
0000285C E548 D0E0 0007          000000E0   3858          MVGHI 224(13),7
00002862 E548 D0E8 0004          000000E8   3859          MVGHI 232(13),4
00002868 E3F0 C168 0004          00002710   3860          LG    15,@lit_1927_113
0000286E 4110 F130               00000130   3861          LA    1,304(0,15)
00002872 E310 D0F0 0024          000000F0   3862          STG   1,240(0,13)
00002878 41F0 F138               00000138   3863          LA    15,312(0,15)
0000287C E3F0 D0F8 0024          000000F8   3864          STG   15,248(0,13)
00002882 E3F0 2060 0004          00000060   3865          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002888 E3F0 F080 0004          00000080   3866          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000288E E3F0 F008 0004          00000008   3867          LG    15,8(0,15)
00002894 E3F0 D100 0024          00000100   3868          STG   15,256(0,13)
0000289A E3F0 2068 0014          00000068   3869          LGF   15,104(0,2)
000028A0 E3F0 D108 0024          00000108   3870          STG   15,264(0,13)
000028A6 E3F0 2278 0004          00000278   3871          LG    15,632(0,2)
000028AC E3F0 D110 0024          00000110   3872          STG   15,272(0,13)
000028B2 4110 D0C8               000000C8   3873          LA    1,200(0,13)
000028B6 E3F0 C160 0004          00002708   3874          LG    15,@lit_1927_114 ; rd_kafka_log0
000028BC                                    3875 @@gen_label192 DS    0H
000028BC 05EF                               3876          BALR  14,15
000028BE                                    3877 @@gen_label193 DS    0H
000028BE                                    3878 @L660    DS    0H
                                            3879 * ***
                                            3880 * ***
                                            3881 * ***
                                                                                                                           Page   82 
  Active Usings: @REGION_1927_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3882 * ***
                                            3883 * ***         return -1001;
000028BE A7F9 FC17               0000FC17   3884          LGHI  15,-1001    ; -1001
000028C2 47F0 C52A               00002AD2   3885          B     @ret_lab_1927
                                            3886 * ***      }
000028C6                                    3887 @L656    DS    0H
                                            3888 * ***
                                            3889 * ***      buf[r] = '\0';
000028C6 41FF D000               00000000   3890          LA    15,0(15,13)
000028CA 9200 F0A8      000000A8 00000000   3891          MVI   168(15),0
                                            3892 * ***
                                            3893 * ***      offset = strtoull(buf, &end, 10);
000028CE 41F0 D0A8               000000A8   3894          LA    15,168(0,13)
000028D2 E3F0 D0C8 0024          000000C8   3895          STG   15,200(0,13)
000028D8 41F0 D0C0               000000C0   3896          LA    15,192(0,13)
000028DC E3F0 D0D0 0024          000000D0   3897          STG   15,208(0,13)
000028E2 E548 D0D8 000A          000000D8   3898          MVGHI 216(13),10
000028E8 4110 D0C8               000000C8   3899          LA    1,200(0,13)
000028EC E3F0 C188 0004          00002730   3900          LG    15,@lit_1927_125 ; strtoull
000028F2                                    3901 @@gen_label194 DS    0H
000028F2 05EF                               3902          BALR  14,15
000028F4                                    3903 @@gen_label195 DS    0H
000028F4 B904 003F                          3904          LGR   3,15
                                            3905 * ***      if (buf == end) {
000028F8 41F0 D0A8               000000A8   3906          LA    15,168(0,13)
000028FC E310 D0C0 0004          000000C0   3907          LG    1,192(0,13) ; end
00002902 B920 00F1                          3908          CGR   15,1
00002906 4770 C47C               00002A24   3909          BNE   @L666
                                            3910 * ***         do { if (!((rktp->rktp_rkt->rkt_rk)->rk_conf.enabled_eve\
                                            3911 * nts & 0x8)) { rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf, rktp->\
                                            3912 * rktp_rkt->rkt_rk, ((void *)0), 3, 0x0, "ERROR", "%s [%" "d" "]: " "U\
                                            3913 * nable to parse offset in %s", rktp->rktp_rkt->rkt_topic->str, rktp->\
                                            3914 * rktp_partition, rktp->rktp_offset_path); break; } rd_kafka_q_op_err(\
                                            3915 * (rktp->rktp_rkt->rkt_rk)->rk_rep, RD_KAFKA_RESP_ERR__FS, "%s [%" "d"\
                                            3916 *  "]: " "Unable to parse offset in %s", rktp->rktp_rkt->rkt_topic->st\
                                            3917 * r, rktp->rktp_partition, rktp->rktp_offset_path); } while (0);
0000290A                                    3918 @L662    DS    0H
0000290A E3F0 2060 0004          00000060   3919          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002910 E3F0 F148 0004          00000148   3920          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00002916 9108 F2F3      000002F3 00000008   3921          TM    755(15),8
0000291A 4770 C40A               000029B2   3922          BNZ   @L665
0000291E E3F0 2060 0004          00000060   3923          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002924 E3F0 F148 0004          00000148   3924          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
0000292A 41F0 F210               00000210   3925          LA    15,528(0,15)
0000292E E3F0 D0C8 0024          000000C8   3926          STG   15,200(0,13)
00002934 E3F0 2060 0004          00000060   3927          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000293A E3F0 F148 0004          00000148   3928          LG    15,328(0,15)
00002940 E3F0 D0D0 0024          000000D0   3929          STG   15,208(0,13)
00002946 D707 D0D8 D0D8 000000D8 000000D8   3930          XC    216(8,13),216(13)
0000294C E548 D0E0 0003          000000E0   3931          MVGHI 224(13),3
00002952 D707 D0E8 D0E8 000000E8 000000E8   3932          XC    232(8,13),232(13)
00002958 E3F0 C168 0004          00002710   3933          LG    15,@lit_1927_113
                                                                                                                           Page   83 
  Active Usings: @REGION_1927_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000295E 4110 F0C4               000000C4   3934          LA    1,196(0,15)
00002962 E310 D0F0 0024          000000F0   3935          STG   1,240(0,13)
00002968 41F0 F15C               0000015C   3936          LA    15,348(0,15)
0000296C E3F0 D0F8 0024          000000F8   3937          STG   15,248(0,13)
00002972 E3F0 2060 0004          00000060   3938          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002978 E3F0 F080 0004          00000080   3939          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000297E E3F0 F008 0004          00000008   3940          LG    15,8(0,15)
00002984 E3F0 D100 0024          00000100   3941          STG   15,256(0,13)
0000298A E3F0 2068 0014          00000068   3942          LGF   15,104(0,2)
00002990 E3F0 D108 0024          00000108   3943          STG   15,264(0,13)
00002996 E3F0 2278 0004          00000278   3944          LG    15,632(0,2)
0000299C E3F0 D110 0024          00000110   3945          STG   15,272(0,13)
000029A2 4110 D0C8               000000C8   3946          LA    1,200(0,13)
000029A6 E3F0 C160 0004          00002708   3947          LG    15,@lit_1927_114 ; rd_kafka_log0
000029AC                                    3948 @@gen_label198 DS    0H
000029AC 05EF                               3949          BALR  14,15
000029AE                                    3950 @@gen_label199 DS    0H
000029AE 47F0 C474               00002A1C   3951          B     @L663
000029B2                                    3952 @L665    DS    0H
000029B2 E3F0 2060 0004          00000060   3953          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
000029B8 E3F0 F148 0004          00000148   3954          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
000029BE E3F0 F000 0004          00000000   3955          LG    15,0(0,15)
000029C4 E3F0 D0C8 0024          000000C8   3956          STG   15,200(0,13)
000029CA E548 D0D0 FF43          000000D0   3957          MVGHI 208(13),-189
000029D0 E3F0 C168 0004          00002710   3958          LG    15,@lit_1927_113
000029D6 41F0 F15C               0000015C   3959          LA    15,348(0,15)
000029DA E3F0 D0D8 0024          000000D8   3960          STG   15,216(0,13)
000029E0 E3F0 2060 0004          00000060   3961          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
000029E6 E3F0 F080 0004          00000080   3962          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
000029EC E3F0 F008 0004          00000008   3963          LG    15,8(0,15)
000029F2 E3F0 D0E0 0024          000000E0   3964          STG   15,224(0,13)
000029F8 E3F0 2068 0014          00000068   3965          LGF   15,104(0,2)
000029FE E3F0 D0E8 0024          000000E8   3966          STG   15,232(0,13)
00002A04 E3F0 2278 0004          00000278   3967          LG    15,632(0,2)
00002A0A E3F0 D0F0 0024          000000F0   3968          STG   15,240(0,13)
00002A10 4110 D0C8               000000C8   3969          LA    1,200(0,13)
00002A14 E3F0 C170 0004          00002718   3970          LG    15,@lit_1927_118 ; rd_kafka_q_op_err
00002A1A                                    3971 @@gen_label200 DS    0H
00002A1A 05EF                               3972          BALR  14,15
00002A1C                                    3973 @@gen_label201 DS    0H
00002A1C                                    3974 @L663    DS    0H
                                            3975 * ***   # 218 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                            3976 * ***         return -1001;
00002A1C A7F9 FC17               0000FC17   3977          LGHI  15,-1001    ; -1001
00002A20 47F0 C52A               00002AD2   3978          B     @ret_lab_1927
                                            3979 * ***      }
                                            3980 * ***
                                            3981 * ***
                                            3982 * ***      do { if ((((rktp->rktp_rkt->rkt_rk)->rk_conf.debug & (0x4))\
                                            3983 * )) rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf,rktp->rktp_rkt->rk\
                                            3984 * t_rk,((void *)0), 7,(0x4), "OFFSET","%s [%" "d" "]: Read offset %" "\
                                            3985 * lld" " from offset " "file (%s)", rktp->rktp_rkt->rkt_topic->str, rk\
                                                                                                                           Page   84 
  Active Usings: @REGION_1927_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            3986 * tp->rktp_partition, offset, rktp->rktp_offset_path); } while (0);
00002A24                                    3987 @L666    DS    0H
00002A24 E3F0 2060 0004          00000060   3988          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002A2A E3F0 F148 0004          00000148   3989          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00002A30 9104 F323      00000323 00000004   3990          TM    803(15),4
00002A34 4780 C526               00002ACE   3991          BZ    @L669
00002A38 E3F0 2060 0004          00000060   3992          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002A3E E3F0 F148 0004          00000148   3993          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00002A44 41F0 F210               00000210   3994          LA    15,528(0,15)
00002A48 E3F0 D0C8 0024          000000C8   3995          STG   15,200(0,13)
00002A4E E3F0 2060 0004          00000060   3996          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002A54 E3F0 F148 0004          00000148   3997          LG    15,328(0,15)
00002A5A E3F0 D0D0 0024          000000D0   3998          STG   15,208(0,13)
00002A60 D707 D0D8 D0D8 000000D8 000000D8   3999          XC    216(8,13),216(13)
00002A66 E548 D0E0 0007          000000E0   4000          MVGHI 224(13),7
00002A6C E548 D0E8 0004          000000E8   4001          MVGHI 232(13),4
00002A72 E3F0 C168 0004          00002710   4002          LG    15,@lit_1927_113
00002A78 4110 F130               00000130   4003          LA    1,304(0,15)
00002A7C E310 D0F0 0024          000000F0   4004          STG   1,240(0,13)
00002A82 41F0 F182               00000182   4005          LA    15,386(0,15)
00002A86 E3F0 D0F8 0024          000000F8   4006          STG   15,248(0,13)
00002A8C E3F0 2060 0004          00000060   4007          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002A92 E3F0 F080 0004          00000080   4008          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00002A98 E3F0 F008 0004          00000008   4009          LG    15,8(0,15)
00002A9E E3F0 D100 0024          00000100   4010          STG   15,256(0,13)
00002AA4 E3F0 2068 0014          00000068   4011          LGF   15,104(0,2)
00002AAA E3F0 D108 0024          00000108   4012          STG   15,264(0,13)
00002AB0 E330 D110 0024          00000110   4013          STG   3,272(0,13)
00002AB6 E3F0 2278 0004          00000278   4014          LG    15,632(0,2)
00002ABC E3F0 D118 0024          00000118   4015          STG   15,280(0,13)
00002AC2 4110 D0C8               000000C8   4016          LA    1,200(0,13)
00002AC6 E3F0 C160 0004          00002708   4017          LG    15,@lit_1927_114 ; rd_kafka_log0
00002ACC                                    4018 @@gen_label203 DS    0H
00002ACC 05EF                               4019          BALR  14,15
00002ACE                                    4020 @@gen_label204 DS    0H
00002ACE                                    4021 @L669    DS    0H
                                            4022 * ***
                                            4023 * ***
                                            4024 * ***
                                            4025 * ***
                                            4026 * ***
                                            4027 * ***      return offset;
00002ACE B904 00F3                          4028          LGR   15,3
                                            4029 * ***   }
00002AD2                                    4030 @ret_lab_1927 DS 0H
                                            4031 * * **** Start of Epilogue
                                            4032          DCCEPIL
00002AD2                                    4033+         ds 0h                                                          01-DCCEP
                                            4034+* Epilog
00002AD2 D707 D088 D088 00000088 00000088   4035+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002AD8 E3D0 D080 0004          00000080   4036+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002ADE E3C0 D090 0004          00000090   4037+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
                                                                                                                           Page   85 
  Active Usings: @REGION_1927_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002AE4 E3B0 C018 0004          00000018   4038+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002AEA E3C0 B010 0021          00000010   4039+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002AF0 E3E0 D008 0004          00000008   4040+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002AF6 EB1C D020 0004          00000020   4041+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002AFC 078E                               4042+         bcr 8,14                if same dsab, just return              01-DCCEP
00002AFE E3F0 D010 0024          00000010   4043+         stg 15,16(0,13)         save return code                       01-DCCEP
00002B04 E300 D018 0024          00000018   4044+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002B0A E3F0 D090 0004          00000090   4045+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002B10 E3F0 F018 0004          00000018   4046+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002B16 47F0 F040               00000040   4047+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4048+* End of Epilog
                                            4049 * * **** End of Epilogue
                                            4050          DROP  12
                                            4051 *
                                            4052 *   DSECT for automatic variables in "rd_kafka_offset_file_read"
                                            4053 *      (FUNCTION #1927)
                                            4054 *
00000000                00000000 000000BE   4055 @AUTO#rd_kafka_offset_file_read DSECT
00000000                                    4056          DS    XL168
000000A8                                    4057 rd_kafka_offset_file_read#r#0 DS 8XL1 ; r
000000B0                000000B0 000000A8   4058          ORG   @AUTO#rd_kafka_offset_file_read+168
000000A8                                    4059 rd_kafka_offset_file_read#offset#0 DS 8XL1 ; offset
000000B0                000000B0 000000A8   4060          ORG   @AUTO#rd_kafka_offset_file_read+168
000000A8                                    4061 rd_kafka_offset_file_read#buf#0 DS 22XL1 ; buf
                                            4062 *
00002B1A                00000000 00006B1A   4063 @CODE    CSECT
                                            4064 *
                                            4065 *
                                            4066 *
                                            4067 * ....... start of rd_kafka_offset_file_sync
00002B1A                                    4068 @LNAME1928 DS  0H
00002B1A 00000019                           4069          DC    X'00000019'
00002B1E 99846D9281869281                   4070          DC    C'rd_kafka_offset_file_sync'
00002B37 00                                 4071          DC    X'00'
                                            4072 rd_kafka_offset_file_sync DCCPRLG CINDEX=1928,BASER=12,FRAME=240,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1928
                                            4073          macro
                                            4074          dccextrn &m
                                            4075          gblc    &$dccext(1000)
                                            4076          gbla    &$dccexti
                                            4077          lcla    &i
                                            4078 &$dccext(&$dccexti+1) setc    '&m'
                                            4079 &i       seta    1
                                            4080 .loop    aif    (&i gt &$dccexti).around
                                            4081          aif    ('&$dccext(&i)' eq '&m').getout
                                            4082 &i       seta    &i+1
                                            4083          ago     .loop
                                            4084 .around  anop
                                            4085 &$dccexti seta &$dccexti+1
                                            4086          extrn  &m
                                            4087 .getout  anop
                                            4088          mend
                                                                                                                           Page   86 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002B38                                    4089+$eye0078    ds    0d                                                    02-DCCCA
00002B38 C4C3C3                             4090+         dc cl3'DCC'                                                    02-DCCCA
00002B3B 01                                 4091+         dc xl1'01' format one                                          02-DCCCA
00002B3C 00000000                           4092+         dc a(0)                                                        02-DCCCA
00002B40 0000000000002BAA                   4093+         dc ad(@PER_1928)                                               02-DCCCA
00002B48 00000000000000F0                   4094+         dc ad(240)                                                     02-DCCCA
00002B50 0000000000000000                   4095+         dc ad(0)                                                       02-DCCCA
00002B58 0000000000001000                   4096+         dc ad(4096)                                                    02-DCCCA
00002B60 20                                 4097+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002B61 03                                 4098+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002B62 03                                 4099+         dc al1(3)                                                      02-DCCCA
00002B63 08                                 4100+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002B64 00                                 4101+         dc bl.8'00000000'                                              02-DCCCA
00002B65 000000                             4102+         dc al3(0)                                                      02-DCCCA
00002B68 0000000000002B1A                   4103+         dc ad(@LNAME1928)                                              02-DCCCA
00002B70                                    4104+         ds 0d                                                          02-DCCCA
00002B70 0000000000002B38                   4105+         dc ad($eye0078)                                                02-DCCCA
00002B78 0000000000000000                   4106+         dc ad(0)                                                       02-DCCCA
00002B80                                    4107+         ds    0d                                                       01-DCCPR
00002B80                                    4108+rd_kafka_offset_file_sync ds 0d                                         01-DCCPR
00002B80                                    4109+@REGION_1928_1 ds 0h                                                    01-DCCPR
00002B80 EBEC D008 0024          00000008   4110+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002B86 E3E0 D088 0004          00000088   4111+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002B8C E3C0 D090 0004          00000090   4112+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002B92 B904 002E                          4113+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002B96 E3B0 C018 0004          00000018   4114+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002B9C A7EB 00F0               000000F0   4115+         aghi  14,240              increase by frame size               01-DCCPR
00002BA0 E3E0 C020 0021          00000020   4116+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002BA6 4720 B020               00000020   4117+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002BAA                                    4118+@PER_1928 ds   0h                                                       01-DCCPR
00002BAA EBDE 2080 0024          00000080   4119+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002BB0 E3C0 2090 0024          00000090   4120+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002BB6 B904 00D2                          4121+         lgr   13,2                set real frame pointer               01-DCCPR
00002BBA B904 00CF                          4122+         lgr   12,15               set base reg                         01-DCCPR
                        00002B80            4123+         using @REGION_1928_1,12                                        01-DCCPR
                                            4124          DCCPRV REG=3      ; Get PRV from DVT
00002BBE E330 B008 0004          00000008   4125+         LG 3,8(0,11)                                                   01-DCCPR
                                            4126 * ******* End of Prologue
                                            4127 * *
                                            4128 * ***           if (!rktp->rktp_offset_fp)
00002BC4 E320 1000 0004          00000000   4129          LG    2,0(0,1)    ; rktp
00002BCA E3F0 2280 0002          00000280   4130          LTG   15,640(0,2) ; offset of rktp_offset_fp in rd_kafka_toppa*
                                                                r_s
00002BD0 4770 C098               00002C18   4131          BNZ   @L671
                                            4132 * ***                   return 0;
00002BD4 A7F9 0000               00000000   4133          LGHI  15,0        ; 0
00002BD8 47F0 C198               00002D18   4134          B     @ret_lab_1928
00002BE0                                    4135          DS    0D
00002BE0 000000F0                           4136 @FRAMESIZE_1928 DC F'240'
00002BE4 00000000
00002BE8 0000000000000000                   4137 @lit_1928_136 DC AD(rd_kafka_log0)
00002BF0 0000000000006D48                   4138 @lit_1928_135 DC AD(@strings@)
                                                                                                                           Page   87 
  Active Usings: @REGION_1928_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002BF8 0000000000000000                   4139 @lit_1928_137 DC AD(fflush)
00002C00 00000000                           4140 @lit_1928_138 DC Q(__isthreaded)
00002C04 00000000
00002C08 0000000000000000                   4141 @lit_1928_139 DC AD(fileno)
00002C10 0000000000000000                   4142 @lit_1928_140 DC AD(fsync)
                                            4143 * ***
                                            4144 * ***           do { if ((((rktp->rktp_rkt->rkt_rk)->rk_conf.debug & (\
                                            4145 * 0x4)))) rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf,rktp->rktp_rk\
                                            4146 * t->rkt_rk,((void *)0), 7,(0x4), "SYNC","%s [%" "d" "]: offset file s\
                                            4147 * ync", rktp->rktp_rkt->rkt_topic->str, rktp->rktp_partition); } while\
                                            4148 *  (0);
00002C18                                    4149 @L671    DS    0H
00002C18 E3F0 2060 0004          00000060   4150          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002C1E E3F0 F148 0004          00000148   4151          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00002C24 9104 F323      00000323 00000004   4152          TM    803(15),4
00002C28 4780 C130               00002CB0   4153          BZ    @L674
00002C2C E3F0 2060 0004          00000060   4154          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002C32 E3F0 F148 0004          00000148   4155          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00002C38 41F0 F210               00000210   4156          LA    15,528(0,15)
00002C3C E3F0 D0A8 0024          000000A8   4157          STG   15,168(0,13)
00002C42 E3F0 2060 0004          00000060   4158          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002C48 E3F0 F148 0004          00000148   4159          LG    15,328(0,15)
00002C4E E3F0 D0B0 0024          000000B0   4160          STG   15,176(0,13)
00002C54 D707 D0B8 D0B8 000000B8 000000B8   4161          XC    184(8,13),184(13)
00002C5A E548 D0C0 0007          000000C0   4162          MVGHI 192(13),7
00002C60 E548 D0C8 0004          000000C8   4163          MVGHI 200(13),4
00002C66 E3F0 C070 0004          00002BF0   4164          LG    15,@lit_1928_135
00002C6C 4110 F1B2               000001B2   4165          LA    1,434(0,15)
00002C70 E310 D0D0 0024          000000D0   4166          STG   1,208(0,13)
00002C76 41F0 F1B8               000001B8   4167          LA    15,440(0,15)
00002C7A E3F0 D0D8 0024          000000D8   4168          STG   15,216(0,13)
00002C80 E3F0 2060 0004          00000060   4169          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002C86 E3F0 F080 0004          00000080   4170          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00002C8C E3F0 F008 0004          00000008   4171          LG    15,8(0,15)
00002C92 E3F0 D0E0 0024          000000E0   4172          STG   15,224(0,13)
00002C98 E3F0 2068 0014          00000068   4173          LGF   15,104(0,2)
00002C9E E3F0 D0E8 0024          000000E8   4174          STG   15,232(0,13)
00002CA4 4110 D0A8               000000A8   4175          LA    1,168(0,13)
00002CA8 E3F0 C068 0004          00002BE8   4176          LG    15,@lit_1928_136 ; rd_kafka_log0
00002CAE                                    4177 @@gen_label207 DS    0H
00002CAE 05EF                               4178          BALR  14,15
00002CB0                                    4179 @@gen_label208 DS    0H
00002CB0                                    4180 @L674    DS    0H
                                            4181 * ***
                                            4182 * ***
                                            4183 * ***
                                            4184 * ***
                                            4185 * ***
                                            4186 * ***      (void)fflush(rktp->rktp_offset_fp);
00002CB0 E3F0 2280 0004          00000280   4187          LG    15,640(0,2)
00002CB6 E3F0 D0A8 0024          000000A8   4188          STG   15,168(0,13)
00002CBC 4110 D0A8               000000A8   4189          LA    1,168(0,13)
                                                                                                                           Page   88 
  Active Usings: @REGION_1928_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002CC0 E3F0 C078 0004          00002BF8   4190          LG    15,@lit_1928_137 ; fflush
00002CC6                                    4191 @@gen_label209 DS    0H
00002CC6 05EF                               4192          BALR  14,15
00002CC8                                    4193 @@gen_label210 DS    0H
                                            4194 * ***      (void)fsync((!__isthreaded ? ((rktp->rktp_offset_fp)->_file\
                                            4195 * ) : (fileno)(rktp->rktp_offset_fp)));
00002CC8 E3F0 C080 0016          00002C00   4196          LLGF  15,@lit_1928_138 ; __isthreaded
00002CCE E3FF 3000 0012          00000000   4197          LT    15,0(15,3)  ; __isthreaded
00002CD4 4770 C166               00002CE6   4198          BNZ   @L675
00002CD8 E3F0 2280 0004          00000280   4199          LG    15,640(0,2) ; offset of rktp_offset_fp in rd_kafka_toppa*
                                                                r_s
00002CDE 48F0 F014               00000014   4200          LH    15,20(0,15)
00002CE2 47F0 C17E               00002CFE   4201          B     @L676
00002CE6                                    4202 @L675    DS    0H
00002CE6 E3F0 2280 0004          00000280   4203          LG    15,640(0,2)
00002CEC E3F0 D0A8 0024          000000A8   4204          STG   15,168(0,13)
00002CF2 4110 D0A8               000000A8   4205          LA    1,168(0,13)
00002CF6 E3F0 C088 0004          00002C08   4206          LG    15,@lit_1928_139 ; fileno
00002CFC                                    4207 @@gen_label212 DS    0H
00002CFC 05EF                               4208          BALR  14,15
00002CFE                                    4209 @@gen_label213 DS    0H
00002CFE                                    4210 @L676    DS    0H
00002CFE B914 00FF                          4211          LGFR  15,15
00002D02 E3F0 D0A8 0024          000000A8   4212          STG   15,168(0,13)
00002D08 4110 D0A8               000000A8   4213          LA    1,168(0,13)
00002D0C E3F0 C090 0004          00002C10   4214          LG    15,@lit_1928_140 ; fsync
00002D12                                    4215 @@gen_label214 DS    0H
00002D12 05EF                               4216          BALR  14,15
00002D14                                    4217 @@gen_label215 DS    0H
                                            4218 * ***
                                            4219 * ***
                                            4220 * ***
                                            4221 * ***
                                            4222 * ***      return 0;
00002D14 A7F9 0000               00000000   4223          LGHI  15,0        ; 0
                                            4224 * ***   }
00002D18                                    4225 @ret_lab_1928 DS 0H
                                            4226 * * **** Start of Epilogue
                                            4227          DCCEPIL
00002D18                                    4228+         ds 0h                                                          01-DCCEP
                                            4229+* Epilog
00002D18 D707 D088 D088 00000088 00000088   4230+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002D1E E3D0 D080 0004          00000080   4231+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002D24 E3C0 D090 0004          00000090   4232+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002D2A E3B0 C018 0004          00000018   4233+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002D30 E3C0 B010 0021          00000010   4234+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002D36 E3E0 D008 0004          00000008   4235+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002D3C EB1C D020 0004          00000020   4236+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002D42 078E                               4237+         bcr 8,14                if same dsab, just return              01-DCCEP
00002D44 E3F0 D010 0024          00000010   4238+         stg 15,16(0,13)         save return code                       01-DCCEP
00002D4A E300 D018 0024          00000018   4239+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002D50 E3F0 D090 0004          00000090   4240+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
                                                                                                                           Page   89 
  Active Usings: @REGION_1928_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002D56 E3F0 F018 0004          00000018   4241+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002D5C 47F0 F040               00000040   4242+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4243+* End of Epilog
                                            4244 * * **** End of Epilogue
                                            4245          DROP  12
                                            4246 *
                                            4247 *   DSECT for automatic variables in "rd_kafka_offset_file_sync"
                                            4248 *      (FUNCTION #1928)
                                            4249 *
00000000                00000000 000000A8   4250 @AUTO#rd_kafka_offset_file_sync DSECT
00000000                                    4251          DS    XL168
                                            4252 *
00002D60                00000000 00006B1A   4253 @CODE    CSECT
                                            4254 *
                                            4255 *
                                            4256 *
                                            4257 * ....... start of rd_kafka_offset_file_commit
00002D60                                    4258 @LNAME1929 DS  0H
00002D60 0000001B                           4259          DC    X'0000001B'
00002D64 99846D9281869281                   4260          DC    C'rd_kafka_offset_file_commit'
00002D7F 00                                 4261          DC    X'00'
                                            4262 rd_kafka_offset_file_commit DCCPRLG CINDEX=1929,BASER=12,FRAME=288,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1929
                                            4263          macro
                                            4264          dccextrn &m
                                            4265          gblc    &$dccext(1000)
                                            4266          gbla    &$dccexti
                                            4267          lcla    &i
                                            4268 &$dccext(&$dccexti+1) setc    '&m'
                                            4269 &i       seta    1
                                            4270 .loop    aif    (&i gt &$dccexti).around
                                            4271          aif    ('&$dccext(&i)' eq '&m').getout
                                            4272 &i       seta    &i+1
                                            4273          ago     .loop
                                            4274 .around  anop
                                            4275 &$dccexti seta &$dccexti+1
                                            4276          extrn  &m
                                            4277 .getout  anop
                                            4278          mend
00002D80                                    4279+$eye0082    ds    0d                                                    02-DCCCA
00002D80 C4C3C3                             4280+         dc cl3'DCC'                                                    02-DCCCA
00002D83 01                                 4281+         dc xl1'01' format one                                          02-DCCCA
00002D84 00000000                           4282+         dc a(0)                                                        02-DCCCA
00002D88 0000000000002DF2                   4283+         dc ad(@PER_1929)                                               02-DCCCA
00002D90 0000000000000120                   4284+         dc ad(288)                                                     02-DCCCA
00002D98 0000000000000000                   4285+         dc ad(0)                                                       02-DCCCA
00002DA0 0000000000001000                   4286+         dc ad(4096)                                                    02-DCCCA
00002DA8 20                                 4287+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002DA9 03                                 4288+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002DAA 03                                 4289+         dc al1(3)                                                      02-DCCCA
00002DAB 08                                 4290+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002DAC 00                                 4291+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   90 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002DAD 000000                             4292+         dc al3(0)                                                      02-DCCCA
00002DB0 0000000000002D60                   4293+         dc ad(@LNAME1929)                                              02-DCCCA
00002DB8                                    4294+         ds 0d                                                          02-DCCCA
00002DB8 0000000000002D80                   4295+         dc ad($eye0082)                                                02-DCCCA
00002DC0 0000000000000000                   4296+         dc ad(0)                                                       02-DCCCA
00002DC8                                    4297+         ds    0d                                                       01-DCCPR
00002DC8                                    4298+rd_kafka_offset_file_commit ds 0d                                       01-DCCPR
00002DC8                                    4299+@REGION_1929_1 ds 0h                                                    01-DCCPR
00002DC8 EBEC D008 0024          00000008   4300+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002DCE E3E0 D088 0004          00000088   4301+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002DD4 E3C0 D090 0004          00000090   4302+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002DDA B904 002E                          4303+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002DDE E3B0 C018 0004          00000018   4304+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002DE4 A7EB 0120               00000120   4305+         aghi  14,288              increase by frame size               01-DCCPR
00002DE8 E3E0 C020 0021          00000020   4306+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002DEE 4720 B020               00000020   4307+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002DF2                                    4308+@PER_1929 ds   0h                                                       01-DCCPR
00002DF2 EBDE 2080 0024          00000080   4309+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002DF8 E3C0 2090 0024          00000090   4310+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002DFE B904 00D2                          4311+         lgr   13,2                set real frame pointer               01-DCCPR
00002E02 B904 00CF                          4312+         lgr   12,15               set base reg                         01-DCCPR
                        00002DC8            4313+         using @REGION_1929_1,12                                        01-DCCPR
                                            4314          DCCPRV REG=7      ; Get PRV from DVT
00002E06 E370 B008 0004          00000008   4315+         LG 7,8(0,11)                                                   01-DCCPR
                                            4316 * ******* End of Prologue
                                            4317 * *
                                            4318 * ***      rd_kafka_topic_t *rkt = rktp->rktp_rkt;
00002E0C E340 1000 0004          00000000   4319          LG    4,0(0,1)    ; rktp
00002E12 E350 4060 0004          00000060   4320          LG    5,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
                                            4321 * ***      int attempt;
                                            4322 * ***           rd_kafka_resp_err_t err = RD_KAFKA_RESP_ERR_NO_ERROR;
00002E18 A738 0000               00000000   4323          LHI   3,0         ; 0
                                            4324 * ***           int64_t offset = rktp->rktp_stored_offset;
00002E1C E360 4218 0004          00000218   4325          LG    6,536(0,4)  ; offset of rktp_stored_offset in rd_kafka_t*
                                                                oppar_s
                                            4326 * ***
                                            4327 * ***      for (attempt = 0 ; attempt < 2 ; attempt++) {
00002E22 1823                               4328          LR    2,3         ; attempt
00002E24 47F0 C5E8               000033B0   4329          B     @L678
00002E28                                    4330          DS    0D
00002E28 00000120                           4331 @FRAMESIZE_1929 DC F'288'
00002E2C 00000000
00002E30 0000000000002290                   4332 @lit_1929_145 DC AD(rd_kafka_offset_file_open)
00002E38 0000000000000000                   4333 @lit_1929_146 DC AD(fseek)
00002E40 0000000000000000                   4334 @lit_1929_147 DC AD(__error)
00002E48 0000000000000000                   4335 @lit_1929_148 DC AD(strerror)
00002E50 0000000000000000                   4336 @lit_1929_150 DC AD(rd_kafka_log0)
00002E58 0000000000006D48                   4337 @lit_1929_149 DC AD(@strings@)
00002E60 0000000000000000                   4338 @lit_1929_154 DC AD(rd_kafka_q_op_err)
00002E68 0000000000001E98                   4339 @lit_1929_156 DC AD(rd_kafka_offset_file_close)
00002E70 0000000000000000                   4340 @lit_1929_158 DC AD(snprintf)
00002E78 0000000000000000                   4341 @lit_1929_159 DC AD(fwrite)
                                                                                                                           Page   91 
  Active Usings: @REGION_1929_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002E80 0000000000000000                   4342 @lit_1929_170 DC AD(fflush)
00002E88 00000000                           4343 @lit_1929_171 DC Q(__isthreaded)
00002E8C 00000000
00002E90 0000000000000000                   4344 @lit_1929_172 DC AD(fileno)
00002E98 0000000000000000                   4345 @lit_1929_173 DC AD(ftruncate)
00002EA0 0000000000002B80                   4346 @lit_1929_176 DC AD(rd_kafka_offset_file_sync)
00002EA8                                    4347 @L677    DS    0H
                                            4348 * ***         char buf[22];
                                            4349 * ***         int len;
                                            4350 * ***
                                            4351 * ***         if (!rktp->rktp_offset_fp)
00002EA8 E3F0 4280 0002          00000280   4352          LTG   15,640(0,4) ; offset of rktp_offset_fp in rd_kafka_toppa*
                                                                r_s
00002EAE 4770 C108               00002ED0   4353          BNZ   @L681
                                            4354 * ***            if (rd_kafka_offset_file_open(rktp) == -1)
00002EB2 E340 D0C0 0024          000000C0   4355          STG   4,192(0,13)
00002EB8 4110 D0C0               000000C0   4356          LA    1,192(0,13)
00002EBC E3F0 C068 0004          00002E30   4357          LG    15,@lit_1929_145 ; rd_kafka_offset_file_open
00002EC2                                    4358 @@gen_label217 DS    0H
00002EC2 05EF                               4359          BALR  14,15
00002EC4                                    4360 @@gen_label218 DS    0H
00002EC4 A7FE FFFF               0000FFFF   4361          CHI   15,-1
00002EC8 4770 C108               00002ED0   4362          BNE   @L681
                                            4363 * ***               continue;
00002ECC 47F0 C5E4               000033AC   4364          B     @L680
                                            4365 * ***
                                            4366 * ***         if (fseek(rktp->rktp_offset_fp, 0, 0) == -1) {
00002ED0                                    4367 @L681    DS    0H
00002ED0 E3F0 4280 0004          00000280   4368          LG    15,640(0,4)
00002ED6 E3F0 D0C0 0024          000000C0   4369          STG   15,192(0,13)
00002EDC D70F D0C8 D0C8 000000C8 000000C8   4370          XC    200(16,13),200(13)
00002EE2 4110 D0C0               000000C0   4371          LA    1,192(0,13)
00002EE6 E3F0 C070 0004          00002E38   4372          LG    15,@lit_1929_146 ; fseek
00002EEC                                    4373 @@gen_label220 DS    0H
00002EEC 05EF                               4374          BALR  14,15
00002EEE                                    4375 @@gen_label221 DS    0H
00002EEE A7FE FFFF               0000FFFF   4376          CHI   15,-1
00002EF2 4770 C2AA               00003072   4377          BNE   @L683
                                            4378 * ***            do { if (!((rktp->rktp_rkt->rkt_rk)->rk_conf.enabled_\
                                            4379 * events & 0x8)) { rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf, rkt\
                                            4380 * p->rktp_rkt->rkt_rk, ((void *)0), 3, 0x0, "ERROR", "%s [%" "d" "]: "\
                                            4381 *  "Seek failed on offset file %s: %s", rktp->rktp_rkt->rkt_topic->str\
                                            4382 * , rktp->rktp_partition, rktp->rktp_offset_path, strerror((* __error(\
                                            4383 * )))); break; } rd_kafka_q_op_err((rktp->rktp_rkt->rkt_rk)->rk_rep, R\
                                            4384 * D_KAFKA_RESP_ERR__FS, "%s [%" "d" "]: " "Seek failed on offset file \
                                            4385 * %s: %s", rktp->rktp_rkt->rkt_topic->str, rktp->rktp_partition, rktp-\
                                            4386 * >rktp_offset_path, strerror((* __error()))); } while (0);
00002EF6                                    4387 @L684    DS    0H
00002EF6 E3F0 4060 0004          00000060   4388          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
00002EFC E3F0 F148 0004          00000148   4389          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00002F02 9108 F2F3      000002F3 00000008   4390          TM    755(15),8
00002F06 4770 C1FE               00002FC6   4391          BNZ   @L687
                                                                                                                           Page   92 
  Active Usings: @REGION_1929_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002F0A E3F0 C078 0004          00002E40   4392          LG    15,@lit_1929_147 ; __error
00002F10                                    4393 @@gen_label224 DS    0H
00002F10 05EF                               4394          BALR  14,15
00002F12                                    4395 @@gen_label225 DS    0H
00002F12 58F0 F000               00000000   4396          L     15,0(0,15)
00002F16 B914 00FF                          4397          LGFR  15,15
00002F1A E3F0 D0C0 0024          000000C0   4398          STG   15,192(0,13)
00002F20 4110 D0C0               000000C0   4399          LA    1,192(0,13)
00002F24 E3F0 C080 0004          00002E48   4400          LG    15,@lit_1929_148 ; strerror
00002F2A                                    4401 @@gen_label226 DS    0H
00002F2A 05EF                               4402          BALR  14,15
00002F2C                                    4403 @@gen_label227 DS    0H
00002F2C E310 4060 0004          00000060   4404          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
00002F32 E310 1148 0004          00000148   4405          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
00002F38 4110 1210               00000210   4406          LA    1,528(0,1)
00002F3C E310 D0C0 0024          000000C0   4407          STG   1,192(0,13)
00002F42 E310 4060 0004          00000060   4408          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
00002F48 E310 1148 0004          00000148   4409          LG    1,328(0,1)
00002F4E E310 D0C8 0024          000000C8   4410          STG   1,200(0,13)
00002F54 D707 D0D0 D0D0 000000D0 000000D0   4411          XC    208(8,13),208(13)
00002F5A E548 D0D8 0003          000000D8   4412          MVGHI 216(13),3
00002F60 D707 D0E0 D0E0 000000E0 000000E0   4413          XC    224(8,13),224(13)
00002F66 E310 C090 0004          00002E58   4414          LG    1,@lit_1929_149
00002F6C 4130 10C4               000000C4   4415          LA    3,196(0,1)
00002F70 E330 D0E8 0024          000000E8   4416          STG   3,232(0,13)
00002F76 4110 11D2               000001D2   4417          LA    1,466(0,1)
00002F7A E310 D0F0 0024          000000F0   4418          STG   1,240(0,13)
00002F80 E310 4060 0004          00000060   4419          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
00002F86 E310 1080 0004          00000080   4420          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
00002F8C E310 1008 0004          00000008   4421          LG    1,8(0,1)
00002F92 E310 D0F8 0024          000000F8   4422          STG   1,248(0,13)
00002F98 E310 4068 0014          00000068   4423          LGF   1,104(0,4)
00002F9E E310 D100 0024          00000100   4424          STG   1,256(0,13)
00002FA4 E310 4278 0004          00000278   4425          LG    1,632(0,4)
00002FAA E310 D108 0024          00000108   4426          STG   1,264(0,13)
00002FB0 E3F0 D110 0024          00000110   4427          STG   15,272(0,13)
00002FB6 4110 D0C0               000000C0   4428          LA    1,192(0,13)
00002FBA E3F0 C088 0004          00002E50   4429          LG    15,@lit_1929_150 ; rd_kafka_log0
00002FC0                                    4430 @@gen_label228 DS    0H
00002FC0 05EF                               4431          BALR  14,15
00002FC2                                    4432 @@gen_label229 DS    0H
00002FC2 47F0 C290               00003058   4433          B     @L685
00002FC6                                    4434 @L687    DS    0H
00002FC6 E3F0 C078 0004          00002E40   4435          LG    15,@lit_1929_147 ; __error
00002FCC                                    4436 @@gen_label230 DS    0H
00002FCC 05EF                               4437          BALR  14,15
00002FCE                                    4438 @@gen_label231 DS    0H
00002FCE 58F0 F000               00000000   4439          L     15,0(0,15)
00002FD2 B914 00FF                          4440          LGFR  15,15
00002FD6 E3F0 D0C0 0024          000000C0   4441          STG   15,192(0,13)
00002FDC 4110 D0C0               000000C0   4442          LA    1,192(0,13)
00002FE0 E3F0 C080 0004          00002E48   4443          LG    15,@lit_1929_148 ; strerror
                                                                                                                           Page   93 
  Active Usings: @REGION_1929_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00002FE6                                    4444 @@gen_label232 DS    0H
00002FE6 05EF                               4445          BALR  14,15
00002FE8                                    4446 @@gen_label233 DS    0H
00002FE8 E310 4060 0004          00000060   4447          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
00002FEE E310 1148 0004          00000148   4448          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
00002FF4 E310 1000 0004          00000000   4449          LG    1,0(0,1)
00002FFA E310 D0C0 0024          000000C0   4450          STG   1,192(0,13)
00003000 E548 D0C8 FF43          000000C8   4451          MVGHI 200(13),-189
00003006 E310 C090 0004          00002E58   4452          LG    1,@lit_1929_149
0000300C 4110 11D2               000001D2   4453          LA    1,466(0,1)
00003010 E310 D0D0 0024          000000D0   4454          STG   1,208(0,13)
00003016 E310 4060 0004          00000060   4455          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
0000301C E310 1080 0004          00000080   4456          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
00003022 E310 1008 0004          00000008   4457          LG    1,8(0,1)
00003028 E310 D0D8 0024          000000D8   4458          STG   1,216(0,13)
0000302E E310 4068 0014          00000068   4459          LGF   1,104(0,4)
00003034 E310 D0E0 0024          000000E0   4460          STG   1,224(0,13)
0000303A E310 4278 0004          00000278   4461          LG    1,632(0,4)
00003040 E310 D0E8 0024          000000E8   4462          STG   1,232(0,13)
00003046 E3F0 D0F0 0024          000000F0   4463          STG   15,240(0,13)
0000304C 4110 D0C0               000000C0   4464          LA    1,192(0,13)
00003050 E3F0 C098 0004          00002E60   4465          LG    15,@lit_1929_154 ; rd_kafka_q_op_err
00003056                                    4466 @@gen_label234 DS    0H
00003056 05EF                               4467          BALR  14,15
00003058                                    4468 @@gen_label235 DS    0H
00003058                                    4469 @L685    DS    0H
                                            4470 * ***   # 284 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                            4471 * ***                           err = RD_KAFKA_RESP_ERR__FS;
00003058 A738 FF43               0000FF43   4472          LHI   3,-189      ; -189
                                            4473 * ***            rd_kafka_offset_file_close(rktp);
0000305C E340 D0C0 0024          000000C0   4474          STG   4,192(0,13)
00003062 4110 D0C0               000000C0   4475          LA    1,192(0,13)
00003066 E3F0 C0A0 0004          00002E68   4476          LG    15,@lit_1929_156 ; rd_kafka_offset_file_close
0000306C                                    4477 @@gen_label236 DS    0H
0000306C 05EF                               4478          BALR  14,15
0000306E                                    4479 @@gen_label237 DS    0H
                                            4480 * ***            continue;
0000306E 47F0 C5E4               000033AC   4481          B     @L680
                                            4482 * ***         }
00003072                                    4483 @L683    DS    0H
                                            4484 * ***
                                            4485 * ***         len = snprintf(buf, sizeof(buf), "%" "lld" "\n", offset)\
                                            4486 * ;
00003072 41F0 D0A8               000000A8   4487          LA    15,168(0,13)
00003076 E3F0 D0C0 0024          000000C0   4488          STG   15,192(0,13)
0000307C E548 D0C8 0016          000000C8   4489          MVGHI 200(13),22
00003082 E3F0 C090 0004          00002E58   4490          LG    15,@lit_1929_149
00003088 41F0 F1FE               000001FE   4491          LA    15,510(0,15)
0000308C E3F0 D0D0 0024          000000D0   4492          STG   15,208(0,13)
00003092 E360 D0D8 0024          000000D8   4493          STG   6,216(0,13)
00003098 4110 D0C0               000000C0   4494          LA    1,192(0,13)
0000309C E3F0 C0A8 0004          00002E70   4495          LG    15,@lit_1929_158 ; snprintf
                                                                                                                           Page   94 
  Active Usings: @REGION_1929_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000030A2                                    4496 @@gen_label238 DS    0H
000030A2 05EF                               4497          BALR  14,15
000030A4                                    4498 @@gen_label239 DS    0H
000030A4 183F                               4499          LR    3,15
                                            4500 * ***
                                            4501 * ***         if (fwrite(buf, 1, len, rktp->rktp_offset_fp) < 1) {
000030A6 4110 D0A8               000000A8   4502          LA    1,168(0,13)
000030AA E310 D0C0 0024          000000C0   4503          STG   1,192(0,13)
000030B0 E548 D0C8 0001          000000C8   4504          MVGHI 200(13),1
000030B6 B914 00F3                          4505          LGFR  15,3
000030BA E3F0 D0D0 0024          000000D0   4506          STG   15,208(0,13)
000030C0 E3F0 4280 0004          00000280   4507          LG    15,640(0,4)
000030C6 E3F0 D0D8 0024          000000D8   4508          STG   15,216(0,13)
000030CC 4110 D0C0               000000C0   4509          LA    1,192(0,13)
000030D0 E3F0 C0B0 0004          00002E78   4510          LG    15,@lit_1929_159 ; fwrite
000030D6                                    4511 @@gen_label240 DS    0H
000030D6 05EF                               4512          BALR  14,15
000030D8                                    4513 @@gen_label241 DS    0H
000030D8 C2FE 0000 0001                     4514          CLGFI 15,X'00000001'
000030DE 47B0 C4A2               0000326A   4515          BNL   @L688
                                            4516 * ***            do { if (!((rktp->rktp_rkt->rkt_rk)->rk_conf.enabled_\
                                            4517 * events & 0x8)) { rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf, rkt\
                                            4518 * p->rktp_rkt->rkt_rk, ((void *)0), 3, 0x0, "ERROR", "%s [%" "d" "]: "\
                                            4519 *  "Failed to write offset %" "lld" " to " "offset file %s: %s", rktp-\
                                            4520 * >rktp_rkt->rkt_topic->str, rktp->rktp_partition, offset, rktp->rktp_\
                                            4521 * offset_path, strerror((* __error()))); break; } rd_kafka_q_op_err((r\
                                            4522 * ktp->rktp_rkt->rkt_rk)->rk_rep, RD_KAFKA_RESP_ERR__FS, "%s [%" "d" "\
                                            4523 * ]: " "Failed to write offset %" "lld" " to " "offset file %s: %s", r\
                                            4524 * ktp->rktp_rkt->rkt_topic->str, rktp->rktp_partition, offset, rktp->r\
                                            4525 * ktp_offset_path, strerror((* __error()))); } while (0);
000030E2                                    4526 @L689    DS    0H
000030E2 E3F0 4060 0004          00000060   4527          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
000030E8 E3F0 F148 0004          00000148   4528          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
000030EE 9108 F2F3      000002F3 00000008   4529          TM    755(15),8
000030F2 4770 C3F0               000031B8   4530          BNZ   @L692
000030F6 E3F0 C078 0004          00002E40   4531          LG    15,@lit_1929_147 ; __error
000030FC                                    4532 @@gen_label244 DS    0H
000030FC 05EF                               4533          BALR  14,15
000030FE                                    4534 @@gen_label245 DS    0H
000030FE 58F0 F000               00000000   4535          L     15,0(0,15)
00003102 B914 00FF                          4536          LGFR  15,15
00003106 E3F0 D0C0 0024          000000C0   4537          STG   15,192(0,13)
0000310C 4110 D0C0               000000C0   4538          LA    1,192(0,13)
00003110 E3F0 C080 0004          00002E48   4539          LG    15,@lit_1929_148 ; strerror
00003116                                    4540 @@gen_label246 DS    0H
00003116 05EF                               4541          BALR  14,15
00003118                                    4542 @@gen_label247 DS    0H
00003118 E310 4060 0004          00000060   4543          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
0000311E E310 1148 0004          00000148   4544          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
00003124 4110 1210               00000210   4545          LA    1,528(0,1)
00003128 E310 D0C0 0024          000000C0   4546          STG   1,192(0,13)
0000312E E310 4060 0004          00000060   4547          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
                                                                                                                           Page   95 
  Active Usings: @REGION_1929_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003134 E310 1148 0004          00000148   4548          LG    1,328(0,1)
0000313A E310 D0C8 0024          000000C8   4549          STG   1,200(0,13)
00003140 D707 D0D0 D0D0 000000D0 000000D0   4550          XC    208(8,13),208(13)
00003146 E548 D0D8 0003          000000D8   4551          MVGHI 216(13),3
0000314C D707 D0E0 D0E0 000000E0 000000E0   4552          XC    224(8,13),224(13)
00003152 E310 C090 0004          00002E58   4553          LG    1,@lit_1929_149
00003158 4130 10C4               000000C4   4554          LA    3,196(0,1)
0000315C E330 D0E8 0024          000000E8   4555          STG   3,232(0,13)
00003162 4110 1204               00000204   4556          LA    1,516(0,1)
00003166 E310 D0F0 0024          000000F0   4557          STG   1,240(0,13)
0000316C E310 4060 0004          00000060   4558          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
00003172 E310 1080 0004          00000080   4559          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
00003178 E310 1008 0004          00000008   4560          LG    1,8(0,1)
0000317E E310 D0F8 0024          000000F8   4561          STG   1,248(0,13)
00003184 E310 4068 0014          00000068   4562          LGF   1,104(0,4)
0000318A E310 D100 0024          00000100   4563          STG   1,256(0,13)
00003190 E360 D108 0024          00000108   4564          STG   6,264(0,13)
00003196 E310 4278 0004          00000278   4565          LG    1,632(0,4)
0000319C E310 D110 0024          00000110   4566          STG   1,272(0,13)
000031A2 E3F0 D118 0024          00000118   4567          STG   15,280(0,13)
000031A8 4110 D0C0               000000C0   4568          LA    1,192(0,13)
000031AC E3F0 C088 0004          00002E50   4569          LG    15,@lit_1929_150 ; rd_kafka_log0
000031B2                                    4570 @@gen_label248 DS    0H
000031B2 05EF                               4571          BALR  14,15
000031B4                                    4572 @@gen_label249 DS    0H
000031B4 47F0 C488               00003250   4573          B     @L690
000031B8                                    4574 @L692    DS    0H
000031B8 E3F0 C078 0004          00002E40   4575          LG    15,@lit_1929_147 ; __error
000031BE                                    4576 @@gen_label250 DS    0H
000031BE 05EF                               4577          BALR  14,15
000031C0                                    4578 @@gen_label251 DS    0H
000031C0 58F0 F000               00000000   4579          L     15,0(0,15)
000031C4 B914 00FF                          4580          LGFR  15,15
000031C8 E3F0 D0C0 0024          000000C0   4581          STG   15,192(0,13)
000031CE 4110 D0C0               000000C0   4582          LA    1,192(0,13)
000031D2 E3F0 C080 0004          00002E48   4583          LG    15,@lit_1929_148 ; strerror
000031D8                                    4584 @@gen_label252 DS    0H
000031D8 05EF                               4585          BALR  14,15
000031DA                                    4586 @@gen_label253 DS    0H
000031DA E310 4060 0004          00000060   4587          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
000031E0 E310 1148 0004          00000148   4588          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
000031E6 E310 1000 0004          00000000   4589          LG    1,0(0,1)
000031EC E310 D0C0 0024          000000C0   4590          STG   1,192(0,13)
000031F2 E548 D0C8 FF43          000000C8   4591          MVGHI 200(13),-189
000031F8 E310 C090 0004          00002E58   4592          LG    1,@lit_1929_149
000031FE 4110 1204               00000204   4593          LA    1,516(0,1)
00003202 E310 D0D0 0024          000000D0   4594          STG   1,208(0,13)
00003208 E310 4060 0004          00000060   4595          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
0000320E E310 1080 0004          00000080   4596          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
00003214 E310 1008 0004          00000008   4597          LG    1,8(0,1)
0000321A E310 D0D8 0024          000000D8   4598          STG   1,216(0,13)
00003220 E310 4068 0014          00000068   4599          LGF   1,104(0,4)
                                                                                                                           Page   96 
  Active Usings: @REGION_1929_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003226 E310 D0E0 0024          000000E0   4600          STG   1,224(0,13)
0000322C E360 D0E8 0024          000000E8   4601          STG   6,232(0,13)
00003232 E310 4278 0004          00000278   4602          LG    1,632(0,4)
00003238 E310 D0F0 0024          000000F0   4603          STG   1,240(0,13)
0000323E E3F0 D0F8 0024          000000F8   4604          STG   15,248(0,13)
00003244 4110 D0C0               000000C0   4605          LA    1,192(0,13)
00003248 E3F0 C098 0004          00002E60   4606          LG    15,@lit_1929_154 ; rd_kafka_q_op_err
0000324E                                    4607 @@gen_label254 DS    0H
0000324E 05EF                               4608          BALR  14,15
00003250                                    4609 @@gen_label255 DS    0H
00003250                                    4610 @L690    DS    0H
                                            4611 * ***   # 302 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                            4612 * ***                           err = RD_KAFKA_RESP_ERR__FS;
00003250 A738 FF43               0000FF43   4613          LHI   3,-189      ; -189
                                            4614 * ***            rd_kafka_offset_file_close(rktp);
00003254 E340 D0C0 0024          000000C0   4615          STG   4,192(0,13)
0000325A 4110 D0C0               000000C0   4616          LA    1,192(0,13)
0000325E E3F0 C0A0 0004          00002E68   4617          LG    15,@lit_1929_156 ; rd_kafka_offset_file_close
00003264                                    4618 @@gen_label256 DS    0H
00003264 05EF                               4619          BALR  14,15
00003266                                    4620 @@gen_label257 DS    0H
                                            4621 * ***            continue;
00003266 47F0 C5E4               000033AC   4622          B     @L680
                                            4623 * ***         }
0000326A                                    4624 @L688    DS    0H
                                            4625 * ***
                                            4626 * ***
                                            4627 * ***                   (void)fflush(rktp->rktp_offset_fp);
0000326A E3F0 4280 0004          00000280   4628          LG    15,640(0,4)
00003270 E3F0 D0C0 0024          000000C0   4629          STG   15,192(0,13)
00003276 4110 D0C0               000000C0   4630          LA    1,192(0,13)
0000327A E3F0 C0B8 0004          00002E80   4631          LG    15,@lit_1929_170 ; fflush
00003280                                    4632 @@gen_label258 DS    0H
00003280 05EF                               4633          BALR  14,15
00003282                                    4634 @@gen_label259 DS    0H
                                            4635 * ***
                                            4636 * ***
                                            4637 * ***
                                            4638 * ***
                                            4639 * ***
                                            4640 * ***
                                            4641 * ***         if (ftruncate((!__isthreaded ? ((rktp->rktp_offset_fp)->\
                                            4642 * _file) : (fileno)(rktp->rktp_offset_fp)), len) == -1)
00003282 E3F0 C0C0 0016          00002E88   4643          LLGF  15,@lit_1929_171 ; __isthreaded
00003288 E3FF 7000 0012          00000000   4644          LT    15,0(15,7)  ; __isthreaded
0000328E 4770 C4D8               000032A0   4645          BNZ   @L693
00003292 E3F0 4280 0004          00000280   4646          LG    15,640(0,4) ; offset of rktp_offset_fp in rd_kafka_toppa*
                                                                r_s
00003298 48F0 F014               00000014   4647          LH    15,20(0,15)
0000329C 47F0 C4F0               000032B8   4648          B     @L694
000032A0                                    4649 @L693    DS    0H
000032A0 E3F0 4280 0004          00000280   4650          LG    15,640(0,4)
                                                                                                                           Page   97 
  Active Usings: @REGION_1929_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000032A6 E3F0 D0C0 0024          000000C0   4651          STG   15,192(0,13)
000032AC 4110 D0C0               000000C0   4652          LA    1,192(0,13)
000032B0 E3F0 C0C8 0004          00002E90   4653          LG    15,@lit_1929_172 ; fileno
000032B6                                    4654 @@gen_label261 DS    0H
000032B6 05EF                               4655          BALR  14,15
000032B8                                    4656 @@gen_label262 DS    0H
000032B8                                    4657 @L694    DS    0H
000032B8 B914 00FF                          4658          LGFR  15,15
000032BC E3F0 D0C0 0024          000000C0   4659          STG   15,192(0,13)
000032C2 B914 00F3                          4660          LGFR  15,3
000032C6 E3F0 D0C8 0024          000000C8   4661          STG   15,200(0,13)
000032CC 4110 D0C0               000000C0   4662          LA    1,192(0,13)
000032D0 E3F0 C0D0 0004          00002E98   4663          LG    15,@lit_1929_173 ; ftruncate
000032D6                                    4664 @@gen_label263 DS    0H
000032D6 05EF                               4665          BALR  14,15
000032D8                                    4666 @@gen_label264 DS    0H
                                            4667 * ***            ;
000032D8                                    4668 @L695    DS    0H
                                            4669 * ***
                                            4670 * ***         do { if ((((rktp->rktp_rkt->rkt_rk)->rk_conf.debug & (0x\
                                            4671 * 4)))) rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf,rktp->rktp_rkt-\
                                            4672 * >rkt_rk,((void *)0), 7,(0x4), "OFFSET","%s [%" "d" "]: wrote offset \
                                            4673 * %" "lld" " to " "file %s", rktp->rktp_rkt->rkt_topic->str, rktp->rkt\
                                            4674 * p_partition, offset, rktp->rktp_offset_path); } while (0);
000032D8                                    4675 @L696    DS    0H
000032D8 E3F0 4060 0004          00000060   4676          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
000032DE E3F0 F148 0004          00000148   4677          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
000032E4 9104 F323      00000323 00000004   4678          TM    803(15),4
000032E8 4780 C5BA               00003382   4679          BZ    @L699
000032EC E3F0 4060 0004          00000060   4680          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
000032F2 E3F0 F148 0004          00000148   4681          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
000032F8 41F0 F210               00000210   4682          LA    15,528(0,15)
000032FC E3F0 D0C0 0024          000000C0   4683          STG   15,192(0,13)
00003302 E3F0 4060 0004          00000060   4684          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
00003308 E3F0 F148 0004          00000148   4685          LG    15,328(0,15)
0000330E E3F0 D0C8 0024          000000C8   4686          STG   15,200(0,13)
00003314 D707 D0D0 D0D0 000000D0 000000D0   4687          XC    208(8,13),208(13)
0000331A E548 D0D8 0007          000000D8   4688          MVGHI 216(13),7
00003320 E548 D0E0 0004          000000E0   4689          MVGHI 224(13),4
00003326 E3F0 C090 0004          00002E58   4690          LG    15,@lit_1929_149
0000332C 4110 F130               00000130   4691          LA    1,304(0,15)
00003330 E310 D0E8 0024          000000E8   4692          STG   1,232(0,13)
00003336 41F0 F240               00000240   4693          LA    15,576(0,15)
0000333A E3F0 D0F0 0024          000000F0   4694          STG   15,240(0,13)
00003340 E3F0 4060 0004          00000060   4695          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
00003346 E3F0 F080 0004          00000080   4696          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000334C E3F0 F008 0004          00000008   4697          LG    15,8(0,15)
00003352 E3F0 D0F8 0024          000000F8   4698          STG   15,248(0,13)
00003358 E3F0 4068 0014          00000068   4699          LGF   15,104(0,4)
0000335E E3F0 D100 0024          00000100   4700          STG   15,256(0,13)
00003364 E360 D108 0024          00000108   4701          STG   6,264(0,13)
0000336A E3F0 4278 0004          00000278   4702          LG    15,632(0,4)
                                                                                                                           Page   98 
  Active Usings: @REGION_1929_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003370 E3F0 D110 0024          00000110   4703          STG   15,272(0,13)
00003376 4110 D0C0               000000C0   4704          LA    1,192(0,13)
0000337A E3F0 C088 0004          00002E50   4705          LG    15,@lit_1929_150 ; rd_kafka_log0
00003380                                    4706 @@gen_label266 DS    0H
00003380 05EF                               4707          BALR  14,15
00003382                                    4708 @@gen_label267 DS    0H
00003382                                    4709 @L699    DS    0H
                                            4710 * ***
                                            4711 * ***   # 325 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                            4712 * ***         rktp->rktp_committed_offset = offset;
00003382 E360 4228 0024          00000228   4713          STG   6,552(0,4)  ; offset of rktp_committed_offset in rd_kafk*
                                                                a_toppar_s
                                            4714 * ***
                                            4715 * ***
                                            4716 * ***         if (rkt->rkt_conf.offset_store_sync_interval_ms == 0)
00003388 E55C 53F8 0000          000003F8   4717          CHSI  1016(5),0
0000338E 4770 C5DC               000033A4   4718          BNE   @L700
                                            4719 * ***            rd_kafka_offset_file_sync(rktp);
00003392 E340 D0C0 0024          000000C0   4720          STG   4,192(0,13)
00003398 4110 D0C0               000000C0   4721          LA    1,192(0,13)
0000339C E3F0 C0D8 0004          00002EA0   4722          LG    15,@lit_1929_176 ; rd_kafka_offset_file_sync
000033A2                                    4723 @@gen_label269 DS    0H
000033A2 05EF                               4724          BALR  14,15
000033A4                                    4725 @@gen_label270 DS    0H
000033A4                                    4726 @L700    DS    0H
                                            4727 * ***
                                            4728 * ***
                                            4729 * ***         return RD_KAFKA_RESP_ERR_NO_ERROR;
000033A4 A7F9 0000               00000000   4730          LGHI  15,0        ; 0
000033A8 47F0 C5F4               000033BC   4731          B     @ret_lab_1929
                                            4732 * ***      }
000033AC                                    4733 @L680    DS    0H
000033AC A72A 0001               00000001   4734          AHI   2,1
000033B0                                    4735 @L678    DS    0H
000033B0 A72E 0002               00000002   4736          CHI   2,2
000033B4 4740 C0E0               00002EA8   4737          BL    @L677
                                            4738 * ***
                                            4739 * ***
                                            4740 * ***      return err;
000033B8 B914 00F3                          4741          LGFR  15,3
                                            4742 * ***   }
000033BC                                    4743 @ret_lab_1929 DS 0H
                                            4744 * * **** Start of Epilogue
                                            4745          DCCEPIL
000033BC                                    4746+         ds 0h                                                          01-DCCEP
                                            4747+* Epilog
000033BC D707 D088 D088 00000088 00000088   4748+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000033C2 E3D0 D080 0004          00000080   4749+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000033C8 E3C0 D090 0004          00000090   4750+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000033CE E3B0 C018 0004          00000018   4751+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000033D4 E3C0 B010 0021          00000010   4752+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000033DA E3E0 D008 0004          00000008   4753+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page   99 
  Active Usings: @REGION_1929_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000033E0 EB1C D020 0004          00000020   4754+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000033E6 078E                               4755+         bcr 8,14                if same dsab, just return              01-DCCEP
000033E8 E3F0 D010 0024          00000010   4756+         stg 15,16(0,13)         save return code                       01-DCCEP
000033EE E300 D018 0024          00000018   4757+         stg 0,24(0,13)          save more return code                  01-DCCEP
000033F4 E3F0 D090 0004          00000090   4758+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000033FA E3F0 F018 0004          00000018   4759+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003400 47F0 F040               00000040   4760+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4761+* End of Epilog
                                            4762 * * **** End of Epilogue
                                            4763          DROP  12
                                            4764 *
                                            4765 *   DSECT for automatic variables in "rd_kafka_offset_file_commit"
                                            4766 *      (FUNCTION #1929)
                                            4767 *
00000000                00000000 000000BE   4768 @AUTO#rd_kafka_offset_file_commit DSECT
00000000                                    4769          DS    XL168
000000A8                                    4770 rd_kafka_offset_file_commit#len#1 DS 1F ; len
000000AC                000000AC 000000A8   4771          ORG   @AUTO#rd_kafka_offset_file_commit+168
000000A8                                    4772 rd_kafka_offset_file_commit#buf#1 DS 22XL1 ; buf
000000BE                000000BE 000000A8   4773          ORG   @AUTO#rd_kafka_offset_file_commit+168
000000A8                                    4774 rd_kafka_offset_file_commit#offset#0 DS 8XL1 ; offset
000000B0                000000B0 000000A8   4775          ORG   @AUTO#rd_kafka_offset_file_commit+168
000000A8                                    4776 rd_kafka_offset_file_commit#err#0 DS 1F ; err
000000AC                000000AC 000000A8   4777          ORG   @AUTO#rd_kafka_offset_file_commit+168
000000A8                                    4778 rd_kafka_offset_file_commit#attempt#0 DS 1F ; attempt
                                            4779 *
00003404                00000000 00006B1A   4780 @CODE    CSECT
                                            4781 *
                                            4782 *
                                            4783 *
                                            4784 * ....... start of rd_kafka_commit0
00003404                                    4785 @LNAME1930 DS  0H
00003404 00000010                           4786          DC    X'00000010'
00003408 99846D9281869281                   4787          DC    C'rd_kafka_commit0'
00003418 00                                 4788          DC    X'00'
                                            4789 rd_kafka_commit0 DCCPRLG CINDEX=1930,BASER=12,FRAME=200,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME1930
                                            4790          macro
                                            4791          dccextrn &m
                                            4792          gblc    &$dccext(1000)
                                            4793          gbla    &$dccexti
                                            4794          lcla    &i
                                            4795 &$dccext(&$dccexti+1) setc    '&m'
                                            4796 &i       seta    1
                                            4797 .loop    aif    (&i gt &$dccexti).around
                                            4798          aif    ('&$dccext(&i)' eq '&m').getout
                                            4799 &i       seta    &i+1
                                            4800          ago     .loop
                                            4801 .around  anop
                                            4802 &$dccexti seta &$dccexti+1
                                            4803          extrn  &m
                                            4804 .getout  anop
                                                                                                                           Page  100 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4805          mend
00003420                                    4806+$eye0086    ds    0d                                                    02-DCCCA
00003420 C4C3C3                             4807+         dc cl3'DCC'                                                    02-DCCCA
00003423 01                                 4808+         dc xl1'01' format one                                          02-DCCCA
00003424 00000000                           4809+         dc a(0)                                                        02-DCCCA
00003428 0000000000003492                   4810+         dc ad(@PER_1930)                                               02-DCCCA
00003430 00000000000000C8                   4811+         dc ad(200)                                                     02-DCCCA
00003438 0000000000000000                   4812+         dc ad(0)                                                       02-DCCCA
00003440 0000000000001000                   4813+         dc ad(4096)                                                    02-DCCCA
00003448 20                                 4814+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003449 03                                 4815+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000344A 03                                 4816+         dc al1(3)                                                      02-DCCCA
0000344B 08                                 4817+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000344C 00                                 4818+         dc bl.8'00000000'                                              02-DCCCA
0000344D 000000                             4819+         dc al3(0)                                                      02-DCCCA
00003450 0000000000003404                   4820+         dc ad(@LNAME1930)                                              02-DCCCA
00003458                                    4821+         ds 0d                                                          02-DCCCA
00003458 0000000000003420                   4822+         dc ad($eye0086)                                                02-DCCCA
00003460 0000000000000000                   4823+         dc ad(0)                                                       02-DCCCA
00003468                                    4824+         ds    0d                                                       01-DCCPR
00003468                                    4825+rd_kafka_commit0 ds 0d                                                  01-DCCPR
00003468                                    4826+@REGION_1930_1 ds 0h                                                    01-DCCPR
00003468 EBEC D008 0024          00000008   4827+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000346E E3E0 D088 0004          00000088   4828+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003474 E3C0 D090 0004          00000090   4829+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000347A B904 002E                          4830+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000347E E3B0 C018 0004          00000018   4831+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003484 A7EB 00C8               000000C8   4832+         aghi  14,200              increase by frame size               01-DCCPR
00003488 E3E0 C020 0021          00000020   4833+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000348E 4720 B020               00000020   4834+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003492                                    4835+@PER_1930 ds   0h                                                       01-DCCPR
00003492 EBDE 2080 0024          00000080   4836+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003498 E3C0 2090 0024          00000090   4837+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000349E B904 00D2                          4838+         lgr   13,2                set real frame pointer               01-DCCPR
000034A2 B904 00CF                          4839+         lgr   12,15               set base reg                         01-DCCPR
                        00003468            4840+         using @REGION_1930_1,12                                        01-DCCPR
000034A6 B904 0041                          4841          LGR   4,1         ; ptr to parm area
                                            4842 * ******* End of Prologue
                                            4843 * *
                                            4844 * ***           rd_kafka_cgrp_t *rkcg;
                                            4845 * ***           rd_kafka_op_t *rko;
                                            4846 * ***
                                            4847 * ***           if (!(rkcg = ((rk)->rk_cgrp)))
000034AA E3F0 4000 0004          00000000   4848          LG    15,0(0,4)   ; rk
000034B0 E320 F208 0004          00000208   4849          LG    2,520(0,15) ; offset of rk_cgrp in rd_kafka_s
000034B6 B902 00F2                          4850          LTGR  15,2
000034BA 4770 C098               00003500   4851          BNZ   @L701
                                            4852 * ***                   return RD_KAFKA_RESP_ERR__UNKNOWN_GROUP;
000034BE A7F9 FF4D               0000FF4D   4853          LGHI  15,-179     ; -179
000034C2 47F0 C174               000035DC   4854          B     @ret_lab_1930
000034C8                                    4855          DS    0D
000034C8 000000C8                           4856 @FRAMESIZE_1930 DC F'200'
                                                                                                                           Page  101 
  Active Usings: @REGION_1930_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000034CC 00000000
000034D0 0000000000000000                   4857 @lit_1930_180 DC AD(rd_kafka_op_new0)
000034D8 0000000000000528                   4858 @lit_1930_181 DC AD(rd_strdup)
000034E0 0000000000001958                   4859 @lit_1930_183 DC AD(rd_kafka_toppar_keep0)
000034E8 0000000000006B20                   4860 @lit_1930_182 DC AD(@DATA)
000034F0 0000000000000000                   4861 @lit_1930_184 DC AD(rd_kafka_topic_partition_list_copy)
000034F8 00000000000016D0                   4862 @lit_1930_185 DC AD(rd_kafka_q_enq)
00003500                                    4863 @L701    DS    0H
                                            4864 * ***
                                            4865 * ***           rko = rd_kafka_op_new0(((void *)0), RD_KAFKA_OP_OFFSET\
                                            4866 * _COMMIT);
00003500 D707 D0B0 D0B0 000000B0 000000B0   4867          XC    176(8,13),176(13)
00003506 E548 D0B8 0006          000000B8   4868          MVGHI 184(13),6
0000350C 4110 D0B0               000000B0   4869          LA    1,176(0,13)
00003510 E3F0 C068 0004          000034D0   4870          LG    15,@lit_1930_180 ; rd_kafka_op_new0
00003516                                    4871 @@gen_label273 DS    0H
00003516 05EF                               4872          BALR  14,15
00003518                                    4873 @@gen_label274 DS    0H
00003518 B904 003F                          4874          LGR   3,15
                                            4875 * ***           rko->rko_u.offset_commit.reason = rd_strdup(reason);
0000351C E3F0 4038 0004          00000038   4876          LG    15,56(0,4)  ; reason
00003522 E3F0 D0B0 0024          000000B0   4877          STG   15,176(0,13)
00003528 4110 D0B0               000000B0   4878          LA    1,176(0,13)
0000352C E3F0 C070 0004          000034D8   4879          LG    15,@lit_1930_181 ; rd_strdup
00003532                                    4880 @@gen_label275 DS    0H
00003532 05EF                               4881          BALR  14,15
00003534                                    4882 @@gen_label276 DS    0H
00003534 E3F0 3098 0024          00000098   4883          STG   15,152(0,3)
                                            4884 * ***      rko->rko_replyq = replyq;
0000353A D20F 3040 4018 00000040 00000018   4885          MVC   64(16,3),24(4)
                                            4886 * ***      rko->rko_u.offset_commit.cb = cb;
00003540 E3F0 4028 0004          00000028   4887          LG    15,40(0,4)  ; cb
00003546 E3F0 3078 0024          00000078   4888          STG   15,120(0,3) ; offset of cb in 0000059
                                            4889 * ***      rko->rko_u.offset_commit.opaque = opaque;
0000354C E3F0 4030 0004          00000030   4890          LG    15,48(0,4)  ; opaque
00003552 E3F0 3080 0024          00000080   4891          STG   15,128(0,3) ; offset of opaque in 0000059
                                            4892 * ***      if (rktp)
00003558 E3F0 4010 0004          00000010   4893          LG    15,16(0,4)  ; rktp
0000355E B902 001F                          4894          LTGR  1,15
00003562 4780 C12C               00003594   4895          BZ    @L702
                                            4896 * ***         rko->rko_rktp = rd_kafka_toppar_keep0(__FUNCTION__,370,r\
                                            4897 * ktp);
00003566 E310 C080 0004          000034E8   4898          LG    1,@lit_1930_182
0000356C 4110 11A6               000001A6   4899          LA    1,422(0,1)
00003570 E310 D0B0 0024          000000B0   4900          STG   1,176(0,13)
00003576 E548 D0B8 0172          000000B8   4901          MVGHI 184(13),370
0000357C E3F0 D0C0 0024          000000C0   4902          STG   15,192(0,13)
00003582 4110 D0B0               000000B0   4903          LA    1,176(0,13)
00003586 E3F0 C078 0004          000034E0   4904          LG    15,@lit_1930_183 ; rd_kafka_toppar_keep0
0000358C                                    4905 @@gen_label278 DS    0H
0000358C 05EF                               4906          BALR  14,15
0000358E                                    4907 @@gen_label279 DS    0H
                                                                                                                           Page  102 
  Active Usings: @REGION_1930_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000358E E3F0 3038 0024          00000038   4908          STG   15,56(0,3)
00003594                                    4909 @L702    DS    0H
                                            4910 * ***
                                            4911 * ***           if (offsets)
00003594 E3F0 4008 0004          00000008   4912          LG    15,8(0,4)   ; offsets
0000359A B902 001F                          4913          LTGR  1,15
0000359E 4780 C152               000035BA   4914          BZ    @L703
                                            4915 * ***         rko->rko_u.offset_commit.partitions =
                                            4916 * ***                           rd_kafka_topic_partition_list_copy(off\
                                            4917 * sets);
000035A2 E3F0 D0B0 0024          000000B0   4918          STG   15,176(0,13)
000035A8 4110 D0B0               000000B0   4919          LA    1,176(0,13)
000035AC E3F0 C088 0004          000034F0   4920          LG    15,@lit_1930_184 ; rd_kafka_topic_partition_list_copy
000035B2                                    4921 @@gen_label281 DS    0H
000035B2 05EF                               4922          BALR  14,15
000035B4                                    4923 @@gen_label282 DS    0H
000035B4 E3F0 3070 0024          00000070   4924          STG   15,112(0,3)
000035BA                                    4925 @L703    DS    0H
                                            4926 * ***
                                            4927 * ***           rd_kafka_q_enq(rkcg->rkcg_ops, rko);
000035BA E3F0 2050 0004          00000050   4928          LG    15,80(0,2)
000035C0 E3F0 D0B0 0024          000000B0   4929          STG   15,176(0,13)
000035C6 E330 D0B8 0024          000000B8   4930          STG   3,184(0,13)
000035CC 4110 D0B0               000000B0   4931          LA    1,176(0,13)
000035D0 E3F0 C090 0004          000034F8   4932          LG    15,@lit_1930_185 ; rd_kafka_q_enq
000035D6                                    4933 @@gen_label283 DS    0H
000035D6 05EF                               4934          BALR  14,15
000035D8                                    4935 @@gen_label284 DS    0H
                                            4936 * ***
                                            4937 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
000035D8 A7F9 0000               00000000   4938          LGHI  15,0        ; 0
                                            4939 * ***   }
000035DC                                    4940 @ret_lab_1930 DS 0H
                                            4941 * * **** Start of Epilogue
                                            4942          DCCEPIL
000035DC                                    4943+         ds 0h                                                          01-DCCEP
                                            4944+* Epilog
000035DC D707 D088 D088 00000088 00000088   4945+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000035E2 E3D0 D080 0004          00000080   4946+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000035E8 E3C0 D090 0004          00000090   4947+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000035EE E3B0 C018 0004          00000018   4948+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000035F4 E3C0 B010 0021          00000010   4949+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000035FA E3E0 D008 0004          00000008   4950+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003600 EB1C D020 0004          00000020   4951+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003606 078E                               4952+         bcr 8,14                if same dsab, just return              01-DCCEP
00003608 E3F0 D010 0024          00000010   4953+         stg 15,16(0,13)         save return code                       01-DCCEP
0000360E E300 D018 0024          00000018   4954+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003614 E3F0 D090 0004          00000090   4955+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000361A E3F0 F018 0004          00000018   4956+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003620 47F0 F040               00000040   4957+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4958+* End of Epilog
                                            4959 * * **** End of Epilogue
                                                                                                                           Page  103 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            4960          DROP  12
                                            4961 *
                                            4962 *   DSECT for automatic variables in "rd_kafka_commit0"
                                            4963 *      (FUNCTION #1930)
                                            4964 *
00000000                00000000 000000A8   4965 @AUTO#rd_kafka_commit0 DSECT
00000000                                    4966          DS    XL168
                                            4967 *
00003624                00000000 00006B1A   4968 @CODE    CSECT
                                            4969 *
                                            4970 *
                                            4971 *
                                            4972 * ....... start of rd_kafka_commit
                                            4973 rd_kafka_commit ALIAS X'99846D92818692816D8396949489A3'
00003624                                    4974 @LNAME612 DS   0H
00003624 0000000F                           4975          DC    X'0000000F'
00003628 99846D9281869281                   4976          DC    C'rd_kafka_commit'
00003637 00                                 4977          DC    X'00'
                                            4978 rd_kafka_commit DCCPRLG CINDEX=612,BASER=12,FRAME=280,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME612
                                            4979          macro
                                            4980          dccextrn &m
                                            4981          gblc    &$dccext(1000)
                                            4982          gbla    &$dccexti
                                            4983          lcla    &i
                                            4984 &$dccext(&$dccexti+1) setc    '&m'
                                            4985 &i       seta    1
                                            4986 .loop    aif    (&i gt &$dccexti).around
                                            4987          aif    ('&$dccext(&i)' eq '&m').getout
                                            4988 &i       seta    &i+1
                                            4989          ago     .loop
                                            4990 .around  anop
                                            4991 &$dccexti seta &$dccexti+1
                                            4992          extrn  &m
                                            4993 .getout  anop
                                            4994          mend
00003638                                    4995+$eye0089    ds    0d                                                    02-DCCCA
00003638 C4C3C3                             4996+         dc cl3'DCC'                                                    02-DCCCA
0000363B 01                                 4997+         dc xl1'01' format one                                          02-DCCCA
0000363C 00000000                           4998+         dc a(0)                                                        02-DCCCA
00003640 00000000000036AA                   4999+         dc ad(@PER_612)                                                02-DCCCA
00003648 0000000000000118                   5000+         dc ad(280)                                                     02-DCCCA
00003650 0000000000000000                   5001+         dc ad(0)                                                       02-DCCCA
00003658 0000000000001000                   5002+         dc ad(4096)                                                    02-DCCCA
00003660 20                                 5003+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003661 03                                 5004+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003662 03                                 5005+         dc al1(3)                                                      02-DCCCA
00003663 08                                 5006+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003664 00                                 5007+         dc bl.8'00000000'                                              02-DCCCA
00003665 000000                             5008+         dc al3(0)                                                      02-DCCCA
00003668 0000000000003624                   5009+         dc ad(@LNAME612)                                               02-DCCCA
00003670                                    5010+         ds 0d                                                          02-DCCCA
                                                                                                                           Page  104 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003670 0000000000003638                   5011+         dc ad($eye0089)                                                02-DCCCA
00003678 0000000000000000                   5012+         dc ad(0)                                                       02-DCCCA
00003680                                    5013+         ds    0d                                                       01-DCCPR
                                            5014+         entry rd_kafka_commit                                          01-DCCPR
00003680                                    5015+rd_kafka_commit ds 0d                                                   01-DCCPR
00003680                                    5016+@REGION_612_1 ds 0h                                                     01-DCCPR
00003680 EBEC D008 0024          00000008   5017+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003686 E3E0 D088 0004          00000088   5018+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000368C E3C0 D090 0004          00000090   5019+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003692 B904 002E                          5020+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003696 E3B0 C018 0004          00000018   5021+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000369C A7EB 0118               00000118   5022+         aghi  14,280              increase by frame size               01-DCCPR
000036A0 E3E0 C020 0021          00000020   5023+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000036A6 4720 B020               00000020   5024+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000036AA                                    5025+@PER_612 ds    0h                                                       01-DCCPR
000036AA EBDE 2080 0024          00000080   5026+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000036B0 E3C0 2090 0024          00000090   5027+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000036B6 B904 00D2                          5028+         lgr   13,2                set real frame pointer               01-DCCPR
000036BA B904 00CF                          5029+         lgr   12,15               set base reg                         01-DCCPR
                        00003680            5030+         using @REGION_612_1,12                                         01-DCCPR
000036BE B904 0051                          5031          LGR   5,1         ; ptr to parm area
                                            5032 * ******* End of Prologue
                                            5033 * *
000036C2 5840 5014               00000014   5034          L     4,20(0,5)   ; async
000036C6 E330 5000 0004          00000000   5035          LG    3,0(0,5)    ; rk
                                            5036 * ***           rd_kafka_cgrp_t *rkcg;
                                            5037 * ***      rd_kafka_resp_err_t err;
                                            5038 * ***      rd_kafka_q_t *repq = ((void *)0);
000036CC A729 0000               00000000   5039          LGHI  2,0         ; 0
                                            5040 * ***      rd_kafka_replyq_t rq = (rd_kafka_replyq_t){((void *)0), 0};
                                            5041 * setting 16 bytes to 0x00
000036D0 D70F D0A8 D0A8 000000A8 000000A8   5042          XC    168(16,13),168(13)
000036D6 D20F D0B8 D0A8 000000B8 000000A8   5043          MVC   184(16,13),168(13)
                                            5044 * ***
                                            5045 * ***           if (!(rkcg = ((rk)->rk_cgrp)))
000036DC E3F0 3208 0002          00000208   5046          LTG   15,520(0,3) ; offset of rk_cgrp in rd_kafka_s
000036E2 4770 C0B0               00003730   5047          BNZ   @L704
                                            5048 * ***                   return RD_KAFKA_RESP_ERR__UNKNOWN_GROUP;
000036E6 A7F9 FF4D               0000FF4D   5049          LGHI  15,-179     ; -179
000036EA 47F0 C196               00003816   5050          B     @ret_lab_612
000036F0                                    5051          DS    0D
000036F0 00000118                           5052 @FRAMESIZE_612 DC F'280'
000036F4 00000000
000036F8 0000000000000000                   5053 @lit_612_191 DC AD(rd_kafka_q_new0)
00003700 0000000000006B20                   5054 @lit_612_190 DC AD(@DATA)
00003708 0000000000001810                   5055 @lit_612_192 DC AD(rd_kafka_replyq_make)
00003710 0000000000003468                   5056 @lit_612_194 DC AD(rd_kafka_commit0)
00003718 0000000000006D48                   5057 @lit_612_193 DC AD(@strings@)
00003720 0000000000000000                   5058 @lit_612_195 DC AD(rd_kafka_q_wait_result)
00003728 0000000000000CB0                   5059 @lit_612_196 DC AD(rd_kafka_q_destroy_owner)
00003730                                    5060 @L704    DS    0H
                                            5061 * ***
                                                                                                                           Page  105 
  Active Usings: @REGION_612_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5062 * ***           if (!async) {
00003730 1244                               5063          LTR   4,4
00003732 4770 C114               00003794   5064          BNZ   @L705
                                            5065 * ***                   repq = rd_kafka_q_new0(rk,__FUNCTION__,399);
00003736 E330 D0D8 0024          000000D8   5066          STG   3,216(0,13)
0000373C E360 C080 0004          00003700   5067          LG    6,@lit_612_190
00003742 41F0 61B8               000001B8   5068          LA    15,440(0,6)
00003746 E3F0 D0E0 0024          000000E0   5069          STG   15,224(0,13)
0000374C E548 D0E8 018F          000000E8   5070          MVGHI 232(13),399
00003752 4110 D0D8               000000D8   5071          LA    1,216(0,13)
00003756 E3F0 C078 0004          000036F8   5072          LG    15,@lit_612_191 ; rd_kafka_q_new0
0000375C                                    5073 @@gen_label287 DS    0H
0000375C 05EF                               5074          BALR  14,15
0000375E                                    5075 @@gen_label288 DS    0H
0000375E B904 002F                          5076          LGR   2,15        ; repq
                                            5077 * ***                   rq = rd_kafka_replyq_make(repq,0,__FUNCTION__)\
                                            5078 * ;
00003762 4110 D0C8               000000C8   5079          LA    1,200(0,13)
00003766 E310 D0D8 0024          000000D8   5080          STG   1,216(0,13)
0000376C E3F0 D0E0 0024          000000E0   5081          STG   15,224(0,13)
00003772 D707 D0E8 D0E8 000000E8 000000E8   5082          XC    232(8,13),232(13)
00003778 41F0 61B8               000001B8   5083          LA    15,440(0,6)
0000377C E3F0 D0F0 0024          000000F0   5084          STG   15,240(0,13)
00003782 4110 D0D8               000000D8   5085          LA    1,216(0,13)
00003786 E3F0 C088 0004          00003708   5086          LG    15,@lit_612_192 ; rd_kafka_replyq_make
0000378C                                    5087 @@gen_label289 DS    0H
0000378C 05EF                               5088          BALR  14,15
0000378E                                    5089 @@gen_label290 DS    0H
0000378E D20F D0B8 D0C8 000000B8 000000C8   5090          MVC   184(16,13),200(13)
                                            5091 * ***           }
00003794                                    5092 @L705    DS    0H
                                            5093 * ***
                                            5094 * ***           err = rd_kafka_commit0(rk, offsets, ((void *)0), rq, (\
                                            5095 * (void *)0), ((void *)0), "manual");
00003794 E330 D0D8 0024          000000D8   5096          STG   3,216(0,13)
0000379A E3F0 5008 0004          00000008   5097          LG    15,8(0,5)   ; offsets
000037A0 E3F0 D0E0 0024          000000E0   5098          STG   15,224(0,13)
000037A6 D707 D0E8 D0E8 000000E8 000000E8   5099          XC    232(8,13),232(13)
000037AC D20F D0F0 D0B8 000000F0 000000B8   5100          MVC   240(16,13),184(13)
000037B2 D70F D100 D100 00000100 00000100   5101          XC    256(16,13),256(13)
000037B8 E3F0 C098 0004          00003718   5102          LG    15,@lit_612_193
000037BE 41F0 F266               00000266   5103          LA    15,614(0,15)
000037C2 E3F0 D110 0024          00000110   5104          STG   15,272(0,13)
000037C8 4110 D0D8               000000D8   5105          LA    1,216(0,13)
000037CC E3F0 C090 0004          00003710   5106          LG    15,@lit_612_194 ; rd_kafka_commit0
000037D2                                    5107 @@gen_label291 DS    0H
000037D2 05EF                               5108          BALR  14,15
000037D4                                    5109 @@gen_label292 DS    0H
000037D4 123F                               5110          LTR   3,15        ; err
                                            5111 * ***
                                            5112 * ***           if (!err && !async)
000037D6 4770 C17A               000037FA   5113          BNZ   @L706
                                                                                                                           Page  106 
  Active Usings: @REGION_612_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000037DA 1244                               5114          LTR   4,4
000037DC 4770 C17A               000037FA   5115          BNZ   @L706
                                            5116 * ***                   err = rd_kafka_q_wait_result(repq, -1);
000037E0 E320 D0D8 0024          000000D8   5117          STG   2,216(0,13)
000037E6 E548 D0E0 FFFF          000000E0   5118          MVGHI 224(13),-1
000037EC 4110 D0D8               000000D8   5119          LA    1,216(0,13)
000037F0 E3F0 C0A0 0004          00003720   5120          LG    15,@lit_612_195 ; rd_kafka_q_wait_result
000037F6                                    5121 @@gen_label295 DS    0H
000037F6 05EF                               5122          BALR  14,15
000037F8                                    5123 @@gen_label296 DS    0H
000037F8 183F                               5124          LR    3,15        ; err
000037FA                                    5125 @L706    DS    0H
                                            5126 * ***
                                            5127 * ***           if (!async)
000037FA 1244                               5128          LTR   4,4
000037FC 4770 C192               00003812   5129          BNZ   @L707
                                            5130 * ***                   rd_kafka_q_destroy_owner(repq);
00003800 E320 D0D8 0024          000000D8   5131          STG   2,216(0,13)
00003806 4110 D0D8               000000D8   5132          LA    1,216(0,13)
0000380A E3F0 C0A8 0004          00003728   5133          LG    15,@lit_612_196 ; rd_kafka_q_destroy_owner
00003810                                    5134 @@gen_label298 DS    0H
00003810 05EF                               5135          BALR  14,15
00003812                                    5136 @@gen_label299 DS    0H
00003812                                    5137 @L707    DS    0H
                                            5138 * ***
                                            5139 * ***      return err;
00003812 B914 00F3                          5140          LGFR  15,3
                                            5141 * ***   }
00003816                                    5142 @ret_lab_612 DS 0H
                                            5143 * * **** Start of Epilogue
                                            5144          DCCEPIL
00003816                                    5145+         ds 0h                                                          01-DCCEP
                                            5146+* Epilog
00003816 D707 D088 D088 00000088 00000088   5147+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000381C E3D0 D080 0004          00000080   5148+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003822 E3C0 D090 0004          00000090   5149+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003828 E3B0 C018 0004          00000018   5150+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000382E E3C0 B010 0021          00000010   5151+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003834 E3E0 D008 0004          00000008   5152+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000383A EB1C D020 0004          00000020   5153+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003840 078E                               5154+         bcr 8,14                if same dsab, just return              01-DCCEP
00003842 E3F0 D010 0024          00000010   5155+         stg 15,16(0,13)         save return code                       01-DCCEP
00003848 E300 D018 0024          00000018   5156+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000384E E3F0 D090 0004          00000090   5157+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003854 E3F0 F018 0004          00000018   5158+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000385A 47F0 F040               00000040   5159+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5160+* End of Epilog
                                            5161 * * **** End of Epilogue
                                            5162          DROP  12
                                            5163 *
                                            5164 *   DSECT for automatic variables in "rd_kafka_commit"
                                            5165 *      (FUNCTION #612)
                                                                                                                           Page  107 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5166 *
00000000                00000000 000000C8   5167 @AUTO#rd_kafka_commit DSECT
00000000                                    5168          DS    XL168
000000A8                                    5169 rd_kafka_commit#__cl0#0 DS 16XL1 ; __cl0
000000B8                000000B8 000000A8   5170          ORG   @AUTO#rd_kafka_commit+168
000000A8                                    5171 rd_kafka_commit#err#0 DS 1F ; err
000000AC                000000AC 000000B8   5172          ORG   @AUTO#rd_kafka_commit+184
000000B8                                    5173 rd_kafka_commit#rq#0 DS 16XL1 ; rq
                                            5174 *
0000385E                00000000 00006B1A   5175 @CODE    CSECT
                                            5176 *
                                            5177 *
                                            5178 *
                                            5179 * ....... start of rd_kafka_commit_message
                                            5180 rd_kafka_commit_message ALIAS X'99846D92818692816D8396949489A36D9485A2A*
                                                                2818785'
0000385E                                    5181 @LNAME613 DS   0H
0000385E 00000017                           5182          DC    X'00000017'
00003862 99846D9281869281                   5183          DC    C'rd_kafka_commit_message'
00003879 00                                 5184          DC    X'00'
                                            5185 rd_kafka_commit_message DCCPRLG CINDEX=613,BASER=12,FRAME=200,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME613
                                            5186          macro
                                            5187          dccextrn &m
                                            5188          gblc    &$dccext(1000)
                                            5189          gbla    &$dccexti
                                            5190          lcla    &i
                                            5191 &$dccext(&$dccexti+1) setc    '&m'
                                            5192 &i       seta    1
                                            5193 .loop    aif    (&i gt &$dccexti).around
                                            5194          aif    ('&$dccext(&i)' eq '&m').getout
                                            5195 &i       seta    &i+1
                                            5196          ago     .loop
                                            5197 .around  anop
                                            5198 &$dccexti seta &$dccexti+1
                                            5199          extrn  &m
                                            5200 .getout  anop
                                            5201          mend
00003880                                    5202+$eye0092    ds    0d                                                    02-DCCCA
00003880 C4C3C3                             5203+         dc cl3'DCC'                                                    02-DCCCA
00003883 01                                 5204+         dc xl1'01' format one                                          02-DCCCA
00003884 00000000                           5205+         dc a(0)                                                        02-DCCCA
00003888 00000000000038F2                   5206+         dc ad(@PER_613)                                                02-DCCCA
00003890 00000000000000C8                   5207+         dc ad(200)                                                     02-DCCCA
00003898 0000000000000000                   5208+         dc ad(0)                                                       02-DCCCA
000038A0 0000000000001000                   5209+         dc ad(4096)                                                    02-DCCCA
000038A8 20                                 5210+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000038A9 03                                 5211+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000038AA 03                                 5212+         dc al1(3)                                                      02-DCCCA
000038AB 08                                 5213+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000038AC 00                                 5214+         dc bl.8'00000000'                                              02-DCCCA
000038AD 000000                             5215+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page  108 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000038B0 000000000000385E                   5216+         dc ad(@LNAME613)                                               02-DCCCA
000038B8                                    5217+         ds 0d                                                          02-DCCCA
000038B8 0000000000003880                   5218+         dc ad($eye0092)                                                02-DCCCA
000038C0 0000000000000000                   5219+         dc ad(0)                                                       02-DCCCA
000038C8                                    5220+         ds    0d                                                       01-DCCPR
                                            5221+         entry rd_kafka_commit_message                                  01-DCCPR
000038C8                                    5222+rd_kafka_commit_message ds 0d                                           01-DCCPR
000038C8                                    5223+@REGION_613_1 ds 0h                                                     01-DCCPR
000038C8 EBEC D008 0024          00000008   5224+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000038CE E3E0 D088 0004          00000088   5225+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000038D4 E3C0 D090 0004          00000090   5226+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000038DA B904 002E                          5227+         lgr   2,14                copy addr of our savearea            01-DCCPR
000038DE E3B0 C018 0004          00000018   5228+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000038E4 A7EB 00C8               000000C8   5229+         aghi  14,200              increase by frame size               01-DCCPR
000038E8 E3E0 C020 0021          00000020   5230+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000038EE 4720 B020               00000020   5231+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000038F2                                    5232+@PER_613 ds    0h                                                       01-DCCPR
000038F2 EBDE 2080 0024          00000080   5233+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000038F8 E3C0 2090 0024          00000090   5234+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000038FE B904 00D2                          5235+         lgr   13,2                set real frame pointer               01-DCCPR
00003902 B904 00CF                          5236+         lgr   12,15               set base reg                         01-DCCPR
                        000038C8            5237+         using @REGION_613_1,12                                         01-DCCPR
00003906 B904 0041                          5238          LGR   4,1         ; ptr to parm area
                                            5239 * ******* End of Prologue
                                            5240 * *
0000390A E320 4008 0004          00000008   5241          LG    2,8(0,4)    ; rkmessage
                                            5242 * ***           rd_kafka_topic_partition_list_t *offsets;
                                            5243 * ***           rd_kafka_topic_partition_t *rktpar;
                                            5244 * ***           rd_kafka_resp_err_t err;
                                            5245 * ***
                                            5246 * ***           if (rkmessage->err)
00003910 E3F0 2000 0012          00000000   5247          LT    15,0(0,2)   ; rkmessage
00003916 4780 C090               00003958   5248          BZ    @L708
                                            5249 * ***                   return RD_KAFKA_RESP_ERR__INVALID_ARG;
0000391A A7F9 FF46               0000FF46   5250          LGHI  15,-186     ; -186
0000391E 47F0 C134               000039FC   5251          B     @ret_lab_613
00003928                                    5252          DS    0D
00003928 000000C8                           5253 @FRAMESIZE_613 DC F'200'
0000392C 00000000
00003930 0000000000000000                   5254 @lit_613_199 DC AD(rd_kafka_topic_partition_list_new)
00003938 0000000000000000                   5255 @lit_613_200 DC AD(rd_kafka_topic_name)
00003940 0000000000000000                   5256 @lit_613_201 DC AD(rd_kafka_topic_partition_list_add)
00003948 0000000000003680                   5257 @lit_613_203 DC AD(rd_kafka_commit)
00003950 0000000000000000                   5258 @lit_613_204 DC AD(rd_kafka_topic_partition_list_destroy)
00003958                                    5259 @L708    DS    0H
                                            5260 * ***
                                            5261 * ***           offsets = rd_kafka_topic_partition_list_new(1);
00003958 E548 D0B0 0001          000000B0   5262          MVGHI 176(13),1
0000395E 4110 D0B0               000000B0   5263          LA    1,176(0,13)
00003962 E3F0 C068 0004          00003930   5264          LG    15,@lit_613_199 ; rd_kafka_topic_partition_list_new
00003968                                    5265 @@gen_label301 DS    0H
00003968 05EF                               5266          BALR  14,15
                                                                                                                           Page  109 
  Active Usings: @REGION_613_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000396A                                    5267 @@gen_label302 DS    0H
0000396A B904 003F                          5268          LGR   3,15
                                            5269 * ***           rktpar = rd_kafka_topic_partition_list_add(
                                            5270 * ***                   offsets, rd_kafka_topic_name(rkmessage->rkt),
                                            5271 * ***                   rkmessage->partition);
0000396E E3F0 2008 0004          00000008   5272          LG    15,8(0,2)
00003974 E3F0 D0B0 0024          000000B0   5273          STG   15,176(0,13)
0000397A 4110 D0B0               000000B0   5274          LA    1,176(0,13)
0000397E E3F0 C070 0004          00003938   5275          LG    15,@lit_613_200 ; rd_kafka_topic_name
00003984                                    5276 @@gen_label303 DS    0H
00003984 05EF                               5277          BALR  14,15
00003986                                    5278 @@gen_label304 DS    0H
00003986 E330 D0B0 0024          000000B0   5279          STG   3,176(0,13)
0000398C E3F0 D0B8 0024          000000B8   5280          STG   15,184(0,13)
00003992 E3F0 2010 0014          00000010   5281          LGF   15,16(0,2)
00003998 E3F0 D0C0 0024          000000C0   5282          STG   15,192(0,13)
0000399E 4110 D0B0               000000B0   5283          LA    1,176(0,13)
000039A2 E3F0 C078 0004          00003940   5284          LG    15,@lit_613_201 ; rd_kafka_topic_partition_list_add
000039A8                                    5285 @@gen_label305 DS    0H
000039A8 05EF                               5286          BALR  14,15
000039AA                                    5287 @@gen_label306 DS    0H
                                            5288 * ***           rktpar->offset = rkmessage->offset+1;
000039AA A719 0001               00000001   5289          LGHI  1,1         ; 1
000039AE E310 2038 0008          00000038   5290          AG    1,56(0,2)
000039B4 E310 F010 0024          00000010   5291          STG   1,16(0,15)  ; offset of offset in rd_kafka_topic_partiti*
                                                                on_s
                                            5292 * ***
                                            5293 * ***           err = rd_kafka_commit(rk, offsets, async);
000039BA E3F0 4000 0004          00000000   5294          LG    15,0(0,4)   ; rk
000039C0 E3F0 D0B0 0024          000000B0   5295          STG   15,176(0,13)
000039C6 E330 D0B8 0024          000000B8   5296          STG   3,184(0,13)
000039CC E3F0 4014 0014          00000014   5297          LGF   15,20(0,4)  ; async
000039D2 E3F0 D0C0 0024          000000C0   5298          STG   15,192(0,13)
000039D8 4110 D0B0               000000B0   5299          LA    1,176(0,13)
000039DC E3F0 C080 0004          00003948   5300          LG    15,@lit_613_203 ; rd_kafka_commit
000039E2                                    5301 @@gen_label307 DS    0H
000039E2 05EF                               5302          BALR  14,15
000039E4                                    5303 @@gen_label308 DS    0H
000039E4 182F                               5304          LR    2,15
                                            5305 * ***
                                            5306 * ***           rd_kafka_topic_partition_list_destroy(offsets);
000039E6 E330 D0B0 0024          000000B0   5307          STG   3,176(0,13)
000039EC 4110 D0B0               000000B0   5308          LA    1,176(0,13)
000039F0 E3F0 C088 0004          00003950   5309          LG    15,@lit_613_204 ; rd_kafka_topic_partition_list_destroy
000039F6                                    5310 @@gen_label309 DS    0H
000039F6 05EF                               5311          BALR  14,15
000039F8                                    5312 @@gen_label310 DS    0H
                                            5313 * ***
                                            5314 * ***           return err;
000039F8 B914 00F2                          5315          LGFR  15,2
                                            5316 * ***   }
000039FC                                    5317 @ret_lab_613 DS 0H
                                                                                                                           Page  110 
  Active Usings: @REGION_613_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5318 * * **** Start of Epilogue
                                            5319          DCCEPIL
000039FC                                    5320+         ds 0h                                                          01-DCCEP
                                            5321+* Epilog
000039FC D707 D088 D088 00000088 00000088   5322+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003A02 E3D0 D080 0004          00000080   5323+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003A08 E3C0 D090 0004          00000090   5324+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003A0E E3B0 C018 0004          00000018   5325+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003A14 E3C0 B010 0021          00000010   5326+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003A1A E3E0 D008 0004          00000008   5327+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003A20 EB1C D020 0004          00000020   5328+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003A26 078E                               5329+         bcr 8,14                if same dsab, just return              01-DCCEP
00003A28 E3F0 D010 0024          00000010   5330+         stg 15,16(0,13)         save return code                       01-DCCEP
00003A2E E300 D018 0024          00000018   5331+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003A34 E3F0 D090 0004          00000090   5332+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003A3A E3F0 F018 0004          00000018   5333+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003A40 47F0 F040               00000040   5334+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5335+* End of Epilog
                                            5336 * * **** End of Epilogue
                                            5337          DROP  12
                                            5338 *
                                            5339 *   DSECT for automatic variables in "rd_kafka_commit_message"
                                            5340 *      (FUNCTION #613)
                                            5341 *
00000000                00000000 000000AC   5342 @AUTO#rd_kafka_commit_message DSECT
00000000                                    5343          DS    XL168
000000A8                                    5344 rd_kafka_commit_message#err#0 DS 1F ; err
                                            5345 *
00003A44                00000000 00006B1A   5346 @CODE    CSECT
                                            5347 *
                                            5348 *
                                            5349 *
                                            5350 * ....... start of rd_kafka_commit_queue
                                            5351 rd_kafka_commit_queue ALIAS X'99846D92818692816D8396949489A36D98A485A48*
                                                                5'
00003A44                                    5352 @LNAME614 DS   0H
00003A44 00000015                           5353          DC    X'00000015'
00003A48 99846D9281869281                   5354          DC    C'rd_kafka_commit_queue'
00003A5D 00                                 5355          DC    X'00'
                                            5356 rd_kafka_commit_queue DCCPRLG CINDEX=614,BASER=12,FRAME=248,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME614
                                            5357          macro
                                            5358          dccextrn &m
                                            5359          gblc    &$dccext(1000)
                                            5360          gbla    &$dccexti
                                            5361          lcla    &i
                                            5362 &$dccext(&$dccexti+1) setc    '&m'
                                            5363 &i       seta    1
                                            5364 .loop    aif    (&i gt &$dccexti).around
                                            5365          aif    ('&$dccext(&i)' eq '&m').getout
                                            5366 &i       seta    &i+1
                                            5367          ago     .loop
                                                                                                                           Page  111 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5368 .around  anop
                                            5369 &$dccexti seta &$dccexti+1
                                            5370          extrn  &m
                                            5371 .getout  anop
                                            5372          mend
00003A60                                    5373+$eye0095    ds    0d                                                    02-DCCCA
00003A60 C4C3C3                             5374+         dc cl3'DCC'                                                    02-DCCCA
00003A63 01                                 5375+         dc xl1'01' format one                                          02-DCCCA
00003A64 00000000                           5376+         dc a(0)                                                        02-DCCCA
00003A68 0000000000003AD2                   5377+         dc ad(@PER_614)                                                02-DCCCA
00003A70 00000000000000F8                   5378+         dc ad(248)                                                     02-DCCCA
00003A78 0000000000000000                   5379+         dc ad(0)                                                       02-DCCCA
00003A80 0000000000001000                   5380+         dc ad(4096)                                                    02-DCCCA
00003A88 20                                 5381+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003A89 03                                 5382+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003A8A 03                                 5383+         dc al1(3)                                                      02-DCCCA
00003A8B 08                                 5384+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003A8C 00                                 5385+         dc bl.8'00000000'                                              02-DCCCA
00003A8D 000000                             5386+         dc al3(0)                                                      02-DCCCA
00003A90 0000000000003A44                   5387+         dc ad(@LNAME614)                                               02-DCCCA
00003A98                                    5388+         ds 0d                                                          02-DCCCA
00003A98 0000000000003A60                   5389+         dc ad($eye0095)                                                02-DCCCA
00003AA0 0000000000000000                   5390+         dc ad(0)                                                       02-DCCCA
00003AA8                                    5391+         ds    0d                                                       01-DCCPR
                                            5392+         entry rd_kafka_commit_queue                                    01-DCCPR
00003AA8                                    5393+rd_kafka_commit_queue ds 0d                                             01-DCCPR
00003AA8                                    5394+@REGION_614_1 ds 0h                                                     01-DCCPR
00003AA8 EBEC D008 0024          00000008   5395+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003AAE E3E0 D088 0004          00000088   5396+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003AB4 E3C0 D090 0004          00000090   5397+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003ABA B904 002E                          5398+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003ABE E3B0 C018 0004          00000018   5399+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003AC4 A7EB 00F8               000000F8   5400+         aghi  14,248              increase by frame size               01-DCCPR
00003AC8 E3E0 C020 0021          00000020   5401+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003ACE 4720 B020               00000020   5402+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003AD2                                    5403+@PER_614 ds    0h                                                       01-DCCPR
00003AD2 EBDE 2080 0024          00000080   5404+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003AD8 E3C0 2090 0024          00000090   5405+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003ADE B904 00D2                          5406+         lgr   13,2                set real frame pointer               01-DCCPR
00003AE2 B904 00CF                          5407+         lgr   12,15               set base reg                         01-DCCPR
                        00003AA8            5408+         using @REGION_614_1,12                                         01-DCCPR
00003AE6 B904 0081                          5409          LGR   8,1         ; ptr to parm area
                                            5410 * ******* End of Prologue
                                            5411 * *
00003AEA E340 8000 0004          00000000   5412          LG    4,0(0,8)    ; rk
00003AF0 EB56 8010 0004          00000010   5413          LMG   5,6,16(8)   ; rkqu
                                            5414 * ***      rd_kafka_q_t *rkq;
                                            5415 * ***      rd_kafka_resp_err_t err;
                                            5416 * ***
                                            5417 * ***           if (!((rk)->rk_cgrp))
00003AF6 E3F0 4208 0002          00000208   5418          LTG   15,520(0,4) ; offset of rk_cgrp in rd_kafka_s
00003AFC 4770 C0B0               00003B58   5419          BNZ   @L709
                                                                                                                           Page  112 
  Active Usings: @REGION_614_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5420 * ***                   return RD_KAFKA_RESP_ERR__UNKNOWN_GROUP;
00003B00 A7F9 FF4D               0000FF4D   5421          LGHI  15,-179     ; -179
00003B04 47F0 C240               00003CE8   5422          B     @ret_lab_614
00003B08                                    5423          DS    0D
00003B08 000000F8                           5424 @FRAMESIZE_614 DC F'248'
00003B0C 00000000
00003B10 0000000000000000                   5425 @lit_614_208 DC AD(rd_kafka_q_new0)
00003B18 0000000000006B20                   5426 @lit_614_207 DC AD(@DATA)
00003B20 0000000000001810                   5427 @lit_614_210 DC AD(rd_kafka_replyq_make)
00003B28 0000000000003468                   5428 @lit_614_212 DC AD(rd_kafka_commit0)
00003B30 0000000000006D48                   5429 @lit_614_211 DC AD(@strings@)
00003B38 0000000000000000                   5430 @lit_614_213 DC AD(rd_kafka_q_pop_serve)
00003B40 0000000000000000                   5431 @lit_614_215 DC AD(rd_kafka_op_destroy)
00003B48 0000000000000A98                   5432 @lit_614_216 DC AD(rd_kafka_q_destroy0)
00003B50 0000000000000CB0                   5433 @lit_614_217 DC AD(rd_kafka_q_destroy_owner)
00003B58                                    5434 @L709    DS    0H
                                            5435 * ***
                                            5436 * ***      if (rkqu)
00003B58 B902 00F5                          5437          LTGR  15,5
00003B5C 4780 C0C2               00003B6A   5438          BZ    @L710
                                            5439 * ***         rkq = rkqu->rkqu_q;
00003B60 E320 5000 0004          00000000   5440          LG    2,0(0,5)    ; rkqu
00003B66 47F0 C0EE               00003B96   5441          B     @L711
                                            5442 * ***      else
00003B6A                                    5443 @L710    DS    0H
                                            5444 * ***         rkq = rd_kafka_q_new0(rk,__FUNCTION__,458);
00003B6A E340 D0B8 0024          000000B8   5445          STG   4,184(0,13)
00003B70 E3F0 C070 0004          00003B18   5446          LG    15,@lit_614_207
00003B76 41F0 F1C8               000001C8   5447          LA    15,456(0,15)
00003B7A E3F0 D0C0 0024          000000C0   5448          STG   15,192(0,13)
00003B80 E548 D0C8 01CA          000000C8   5449          MVGHI 200(13),458
00003B86 4110 D0B8               000000B8   5450          LA    1,184(0,13)
00003B8A E3F0 C068 0004          00003B10   5451          LG    15,@lit_614_208 ; rd_kafka_q_new0
00003B90                                    5452 @@gen_label313 DS    0H
00003B90 05EF                               5453          BALR  14,15
00003B92                                    5454 @@gen_label314 DS    0H
00003B92 B904 002F                          5455          LGR   2,15        ; rkq
00003B96                                    5456 @L711    DS    0H
                                            5457 * ***
                                            5458 * ***      err = rd_kafka_commit0(rk, offsets, ((void *)0),
                                            5459 * ***                   rd_kafka_replyq_make(rkq,0,__FUNCTION__),
                                            5460 * ***                   cb, opaque, "manual");
00003B96 41F0 D0A8               000000A8   5461          LA    15,168(0,13)
00003B9A E3F0 D0B8 0024          000000B8   5462          STG   15,184(0,13)
00003BA0 E320 D0C0 0024          000000C0   5463          STG   2,192(0,13)
00003BA6 D707 D0C8 D0C8 000000C8 000000C8   5464          XC    200(8,13),200(13)
00003BAC E3F0 C070 0004          00003B18   5465          LG    15,@lit_614_207
00003BB2 41F0 F1C8               000001C8   5466          LA    15,456(0,15)
00003BB6 E3F0 D0D0 0024          000000D0   5467          STG   15,208(0,13)
00003BBC 4110 D0B8               000000B8   5468          LA    1,184(0,13)
00003BC0 E3F0 C078 0004          00003B20   5469          LG    15,@lit_614_210 ; rd_kafka_replyq_make
00003BC6                                    5470 @@gen_label315 DS    0H
                                                                                                                           Page  113 
  Active Usings: @REGION_614_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003BC6 05EF                               5471          BALR  14,15
00003BC8                                    5472 @@gen_label316 DS    0H
00003BC8 E340 D0B8 0024          000000B8   5473          STG   4,184(0,13)
00003BCE E3F0 8008 0004          00000008   5474          LG    15,8(0,8)   ; offsets
00003BD4 E3F0 D0C0 0024          000000C0   5475          STG   15,192(0,13)
00003BDA D707 D0C8 D0C8 000000C8 000000C8   5476          XC    200(8,13),200(13)
00003BE0 D20F D0D0 D0A8 000000D0 000000A8   5477          MVC   208(16,13),168(13)
00003BE6 E360 D0E0 0024          000000E0   5478          STG   6,224(0,13)
00003BEC E3F0 8020 0004          00000020   5479          LG    15,32(0,8)  ; opaque
00003BF2 E3F0 D0E8 0024          000000E8   5480          STG   15,232(0,13)
00003BF8 E3F0 C088 0004          00003B30   5481          LG    15,@lit_614_211
00003BFE 41F0 F266               00000266   5482          LA    15,614(0,15)
00003C02 E3F0 D0F0 0024          000000F0   5483          STG   15,240(0,13)
00003C08 4110 D0B8               000000B8   5484          LA    1,184(0,13)
00003C0C E3F0 C080 0004          00003B28   5485          LG    15,@lit_614_212 ; rd_kafka_commit0
00003C12                                    5486 @@gen_label317 DS    0H
00003C12 05EF                               5487          BALR  14,15
00003C14                                    5488 @@gen_label318 DS    0H
00003C14 183F                               5489          LR    3,15        ; err
                                            5490 * ***
                                            5491 * ***      if (!rkqu) {
00003C16 B902 00F5                          5492          LTGR  15,5
00003C1A 4770 C23C               00003CE4   5493          BNZ   @L712
                                            5494 * ***                   rd_kafka_op_t *rko =
                                            5495 * ***                           rd_kafka_q_pop_serve(rkq, -1,
                                            5496 * ***                                                0, RD_KAFKA_Q_CB_\
                                            5497 * FORCE_RETURN,
                                            5498 * ***                                                ((void *)0), ((vo\
                                            5499 * id *)0));
00003C1E E320 D0B8 0024          000000B8   5500          STG   2,184(0,13)
00003C24 E548 D0C0 FFFF          000000C0   5501          MVGHI 192(13),-1
00003C2A D707 D0C8 D0C8 000000C8 000000C8   5502          XC    200(8,13),200(13)
00003C30 E548 D0D0 0003          000000D0   5503          MVGHI 208(13),3
00003C36 D70F D0D8 D0D8 000000D8 000000D8   5504          XC    216(16,13),216(13)
00003C3C 4110 D0B8               000000B8   5505          LA    1,184(0,13)
00003C40 E3F0 C090 0004          00003B38   5506          LG    15,@lit_614_213 ; rd_kafka_q_pop_serve
00003C46                                    5507 @@gen_label320 DS    0H
00003C46 05EF                               5508          BALR  14,15
00003C48                                    5509 @@gen_label321 DS    0H
00003C48 B904 007F                          5510          LGR   7,15
                                            5511 * ***         if (!rko)
00003C4C B902 00F7                          5512          LTGR  15,7
00003C50 4770 C1B4               00003C5C   5513          BNZ   @L713
                                            5514 * ***            err = RD_KAFKA_RESP_ERR__TIMED_OUT;
00003C54 A738 FF47               0000FF47   5515          LHI   3,-185      ; -185
00003C58 47F0 C206               00003CAE   5516          B     @L714
                                            5517 * ***         else {
00003C5C                                    5518 @L713    DS    0H
                                            5519 * ***                           if (cb)
00003C5C B902 00F6                          5520          LTGR  15,6
00003C60 4780 C1F0               00003C98   5521          BZ    @L715
                                            5522 * ***                                   cb(rk, rko->rko_err,
                                                                                                                           Page  114 
  Active Usings: @REGION_614_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5523 * ***                                      rko->rko_u.offset_commit.pa\
                                            5524 * rtitions,
                                            5525 * ***                                      opaque);
00003C64 E340 D0B8 0024          000000B8   5526          STG   4,184(0,13)
00003C6A E3F0 7020 0014          00000020   5527          LGF   15,32(0,7)
00003C70 E3F0 D0C0 0024          000000C0   5528          STG   15,192(0,13)
00003C76 E3F0 7070 0004          00000070   5529          LG    15,112(0,7)
00003C7C E3F0 D0C8 0024          000000C8   5530          STG   15,200(0,13)
00003C82 E3F0 8020 0004          00000020   5531          LG    15,32(0,8)  ; opaque
00003C88 E3F0 D0D0 0024          000000D0   5532          STG   15,208(0,13)
00003C8E 4110 D0B8               000000B8   5533          LA    1,184(0,13)
00003C92 B904 00F6                          5534          LGR   15,6
00003C96                                    5535 @@gen_label324 DS    0H
00003C96 05EF                               5536          BALR  14,15
00003C98                                    5537 @@gen_label325 DS    0H
00003C98                                    5538 @L715    DS    0H
                                            5539 * ***                           err = rko->rko_err;
00003C98 5830 7020               00000020   5540          L     3,32(0,7)   ; offset of rko_err in rd_kafka_op_s
                                            5541 * ***                           rd_kafka_op_destroy(rko);
00003C9C E370 D0B8 0024          000000B8   5542          STG   7,184(0,13)
00003CA2 4110 D0B8               000000B8   5543          LA    1,184(0,13)
00003CA6 E3F0 C098 0004          00003B40   5544          LG    15,@lit_614_215 ; rd_kafka_op_destroy
00003CAC                                    5545 @@gen_label326 DS    0H
00003CAC 05EF                               5546          BALR  14,15
00003CAE                                    5547 @@gen_label327 DS    0H
                                            5548 * ***                   }
00003CAE                                    5549 @L714    DS    0H
                                            5550 * ***
                                            5551 * ***                   if (rkqu)
00003CAE B902 00F5                          5552          LTGR  15,5
00003CB2 4780 C22A               00003CD2   5553          BZ    @L716
                                            5554 * ***                           rd_kafka_q_destroy0(rkq, 0 );
00003CB6 E320 D0B8 0024          000000B8   5555          STG   2,184(0,13)
00003CBC D707 D0C0 D0C0 000000C0 000000C0   5556          XC    192(8,13),192(13)
00003CC2 4110 D0B8               000000B8   5557          LA    1,184(0,13)
00003CC6 E3F0 C0A0 0004          00003B48   5558          LG    15,@lit_614_216 ; rd_kafka_q_destroy0
00003CCC                                    5559 @@gen_label329 DS    0H
00003CCC 05EF                               5560          BALR  14,15
00003CCE                                    5561 @@gen_label330 DS    0H
00003CCE 47F0 C23C               00003CE4   5562          B     @L717
                                            5563 * ***                   else
00003CD2                                    5564 @L716    DS    0H
                                            5565 * ***                           rd_kafka_q_destroy_owner(rkq);
00003CD2 E320 D0B8 0024          000000B8   5566          STG   2,184(0,13)
00003CD8 4110 D0B8               000000B8   5567          LA    1,184(0,13)
00003CDC E3F0 C0A8 0004          00003B50   5568          LG    15,@lit_614_217 ; rd_kafka_q_destroy_owner
00003CE2                                    5569 @@gen_label331 DS    0H
00003CE2 05EF                               5570          BALR  14,15
00003CE4                                    5571 @@gen_label332 DS    0H
00003CE4                                    5572 @L717    DS    0H
                                            5573 * ***      }
00003CE4                                    5574 @L712    DS    0H
                                                                                                                           Page  115 
  Active Usings: @REGION_614_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5575 * ***
                                            5576 * ***      return err;
00003CE4 B914 00F3                          5577          LGFR  15,3
                                            5578 * ***   }
00003CE8                                    5579 @ret_lab_614 DS 0H
                                            5580 * * **** Start of Epilogue
                                            5581          DCCEPIL
00003CE8                                    5582+         ds 0h                                                          01-DCCEP
                                            5583+* Epilog
00003CE8 D707 D088 D088 00000088 00000088   5584+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003CEE E3D0 D080 0004          00000080   5585+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003CF4 E3C0 D090 0004          00000090   5586+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003CFA E3B0 C018 0004          00000018   5587+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003D00 E3C0 B010 0021          00000010   5588+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003D06 E3E0 D008 0004          00000008   5589+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003D0C EB1C D020 0004          00000020   5590+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003D12 078E                               5591+         bcr 8,14                if same dsab, just return              01-DCCEP
00003D14 E3F0 D010 0024          00000010   5592+         stg 15,16(0,13)         save return code                       01-DCCEP
00003D1A E300 D018 0024          00000018   5593+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003D20 E3F0 D090 0004          00000090   5594+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003D26 E3F0 F018 0004          00000018   5595+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003D2C 47F0 F040               00000040   5596+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5597+* End of Epilog
                                            5598 * * **** End of Epilogue
                                            5599          DROP  12
                                            5600 *
                                            5601 *   DSECT for automatic variables in "rd_kafka_commit_queue"
                                            5602 *      (FUNCTION #614)
                                            5603 *
00000000                00000000 000000AC   5604 @AUTO#rd_kafka_commit_queue DSECT
00000000                                    5605          DS    XL168
000000A8                                    5606 rd_kafka_commit_queue#err#0 DS 1F ; err
                                            5607 *
00003D30                00000000 00006B1A   5608 @CODE    CSECT
                                            5609 *
                                            5610 *
                                            5611 *
                                            5612 * ....... start of rd_kafka_offset_broker_commit_cb
00003D30                                    5613 @LNAME1931 DS  0H
00003D30 00000020                           5614          DC    X'00000020'
00003D34 99846D9281869281                   5615          DC    C'rd_kafka_offset_broker_commit_cb'
00003D54 00                                 5616          DC    X'00'
                                            5617 rd_kafka_offset_broker_commit_cb DCCPRLG CINDEX=1931,BASER=12,FRAME=272*
                                                                ,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1931
                                            5618          macro
                                            5619          dccextrn &m
                                            5620          gblc    &$dccext(1000)
                                            5621          gbla    &$dccexti
                                            5622          lcla    &i
                                            5623 &$dccext(&$dccexti+1) setc    '&m'
                                            5624 &i       seta    1
                                            5625 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page  116 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5626          aif    ('&$dccext(&i)' eq '&m').getout
                                            5627 &i       seta    &i+1
                                            5628          ago     .loop
                                            5629 .around  anop
                                            5630 &$dccexti seta &$dccexti+1
                                            5631          extrn  &m
                                            5632 .getout  anop
                                            5633          mend
00003D58                                    5634+$eye0098    ds    0d                                                    02-DCCCA
00003D58 C4C3C3                             5635+         dc cl3'DCC'                                                    02-DCCCA
00003D5B 01                                 5636+         dc xl1'01' format one                                          02-DCCCA
00003D5C 00000000                           5637+         dc a(0)                                                        02-DCCCA
00003D60 0000000000003DCA                   5638+         dc ad(@PER_1931)                                               02-DCCCA
00003D68 0000000000000110                   5639+         dc ad(272)                                                     02-DCCCA
00003D70 0000000000000000                   5640+         dc ad(0)                                                       02-DCCCA
00003D78 0000000000001000                   5641+         dc ad(4096)                                                    02-DCCCA
00003D80 20                                 5642+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003D81 03                                 5643+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003D82 03                                 5644+         dc al1(3)                                                      02-DCCCA
00003D83 08                                 5645+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003D84 00                                 5646+         dc bl.8'00000000'                                              02-DCCCA
00003D85 000000                             5647+         dc al3(0)                                                      02-DCCCA
00003D88 0000000000003D30                   5648+         dc ad(@LNAME1931)                                              02-DCCCA
00003D90                                    5649+         ds 0d                                                          02-DCCCA
00003D90 0000000000003D58                   5650+         dc ad($eye0098)                                                02-DCCCA
00003D98 0000000000000000                   5651+         dc ad(0)                                                       02-DCCCA
00003DA0                                    5652+         ds    0d                                                       01-DCCPR
00003DA0                                    5653+rd_kafka_offset_broker_commit_cb ds 0d                                  01-DCCPR
00003DA0                                    5654+@REGION_1931_1 ds 0h                                                    01-DCCPR
00003DA0 EBEC D008 0024          00000008   5655+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003DA6 E3E0 D088 0004          00000088   5656+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003DAC E3C0 D090 0004          00000090   5657+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003DB2 B904 002E                          5658+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003DB6 E3B0 C018 0004          00000018   5659+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003DBC A7EB 0110               00000110   5660+         aghi  14,272              increase by frame size               01-DCCPR
00003DC0 E3E0 C020 0021          00000020   5661+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003DC6 4720 B020               00000020   5662+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003DCA                                    5663+@PER_1931 ds   0h                                                       01-DCCPR
00003DCA EBDE 2080 0024          00000080   5664+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003DD0 E3C0 2090 0024          00000090   5665+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003DD6 B904 00D2                          5666+         lgr   13,2                set real frame pointer               01-DCCPR
00003DDA B904 00CF                          5667+         lgr   12,15               set base reg                         01-DCCPR
                        00003DA0            5668+         using @REGION_1931_1,12                                        01-DCCPR
                                            5669 * ******* End of Prologue
                                            5670 * *
00003DDE E330 1000 0004          00000000   5671          LG    3,0(0,1)    ; rk
00003DE4 5820 100C               0000000C   5672          L     2,12(0,1)   ; err
00003DE8 E340 1010 0004          00000010   5673          LG    4,16(0,1)   ; offsets
                                            5674 * ***           rd_kafka_toppar_t *rktp;
                                            5675 * ***           rd_kafka_topic_partition_t *rktpar;
                                            5676 * ***
                                            5677 * ***           if (offsets->cnt == 0) {
                                                                                                                           Page  117 
  Active Usings: @REGION_1931_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003DEE E55C 4000 0000          00000000   5678          CHSI  0(4),0
00003DF4 4770 C108               00003EA8   5679          BNE   @L718
                                            5680 * ***                   do { if ((((rk)->rk_conf.debug & (0x4)))) rd_k\
                                            5681 * afka_log0(&rk->rk_conf,rk,((void *)0), 7,(0x4), "OFFSETCOMMIT","No o\
                                            5682 * ffsets to commit (commit_cb)"); } while (0);
00003DF8                                    5683 @L719    DS    0H
00003DF8 9104 3323      00000323 00000004   5684          TM    803(3),4
00003DFC 4780 C362               00004102   5685          BZ    @ret_lab_1931
00003E00 41F0 3210               00000210   5686          LA    15,528(0,3)
00003E04 E3F0 D0B0 0024          000000B0   5687          STG   15,176(0,13)
00003E0A E330 D0B8 0024          000000B8   5688          STG   3,184(0,13)
00003E10 D707 D0C0 D0C0 000000C0 000000C0   5689          XC    192(8,13),192(13)
00003E16 E548 D0C8 0007          000000C8   5690          MVGHI 200(13),7
00003E1C E548 D0D0 0004          000000D0   5691          MVGHI 208(13),4
00003E22 E3F0 C0C0 0004          00003E60   5692          LG    15,@lit_1931_219
00003E28 4110 F26E               0000026E   5693          LA    1,622(0,15)
00003E2C E310 D0D8 0024          000000D8   5694          STG   1,216(0,13)
00003E32 41F0 F27C               0000027C   5695          LA    15,636(0,15)
00003E36 E3F0 D0E0 0024          000000E0   5696          STG   15,224(0,13)
00003E3C 4110 D0B0               000000B0   5697          LA    1,176(0,13)
00003E40 E3F0 C0B8 0004          00003E58   5698          LG    15,@lit_1931_220 ; rd_kafka_log0
00003E46                                    5699 @@gen_label335 DS    0H
00003E46 05EF                               5700          BALR  14,15
00003E48                                    5701 @@gen_label336 DS    0H
00003E48                                    5702 @L722    DS    0H
                                            5703 * ***
                                            5704 * ***                   return;
00003E48 47F0 C362               00004102   5705          B     @ret_lab_1931
00003E50                                    5706          DS    0D
00003E50 00000110                           5707 @FRAMESIZE_1931 DC F'272'
00003E54 00000000
00003E58 0000000000000000                   5708 @lit_1931_220 DC AD(rd_kafka_log0)
00003E60 0000000000006D48                   5709 @lit_1931_219 DC AD(@strings@)
00003E68 0000000000000000                   5710 @lit_1931_221 DC AD(rd_kafka_topic_partition_get_toppar)
00003E70 0000000000000000                   5711 @lit_1931_222 DC AD(rd_kafka_err2str)
00003E78 0000000000000000                   5712 @lit_1931_225 DC AD(rd_kafka_toppar_offset_commit_result)
00003E80 0000000000000000                   5713 @lit_1931_231 DC AD(mtx_lock)
00003E88 0000000000005F60                   5714 @lit_1931_232 DC AD(rd_kafka_offset_store_term)
00003E90 0000000000000000                   5715 @lit_1931_233 DC AD(mtx_unlock)
00003E98 0000000000000698                   5716 @lit_1931_234 DC AD(rd_refcnt_sub0)
00003EA0 0000000000000000                   5717 @lit_1931_235 DC AD(rd_kafka_toppar_destroy_final)
                                            5718 * ***           }
00003EA8                                    5719 @L718    DS    0H
                                            5720 * ***
                                            5721 * ***           rktpar = &offsets->elems[0];
00003EA8 E360 4008 0004          00000008   5722          LG    6,8(0,4)    ; offset of elems in rd_kafka_topic_partitio*
                                                                n_list_s
                                            5723 * ***
                                            5724 * ***           if (!(rktp = rd_kafka_topic_partition_get_toppar(rk, r\
                                            5725 * ktpar,
                                            5726 * ***                                                            0))) \
                                            5727 * {
                                                                                                                           Page  118 
  Active Usings: @REGION_1931_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003EAE E330 D0B0 0024          000000B0   5728          STG   3,176(0,13)
00003EB4 E360 D0B8 0024          000000B8   5729          STG   6,184(0,13)
00003EBA D707 D0C0 D0C0 000000C0 000000C0   5730          XC    192(8,13),192(13)
00003EC0 4110 D0B0               000000B0   5731          LA    1,176(0,13)
00003EC4 E3F0 C0C8 0004          00003E68   5732          LG    15,@lit_1931_221 ; rd_kafka_topic_partition_get_toppar
00003ECA                                    5733 @@gen_label337 DS    0H
00003ECA 05EF                               5734          BALR  14,15
00003ECC                                    5735 @@gen_label338 DS    0H
00003ECC B904 005F                          5736          LGR   5,15
00003ED0 B902 00F5                          5737          LTGR  15,5
00003ED4 4770 C1CE               00003F6E   5738          BNZ   @L723
                                            5739 * ***         do { if ((((rk)->rk_conf.debug & (0x4)))) rd_kafka_log0(\
                                            5740 * &rk->rk_conf,rk,((void *)0), 7,(0x4), "OFFSETCOMMIT","No local parti\
                                            5741 * tion found for %s [%" "d" "] " "while parsing OffsetCommit response \
                                            5742 * " "(offset %" "lld" ", error \"%s\")", rktpar->topic, rktpar->partit\
                                            5743 * ion, rktpar->offset, rd_kafka_err2str(rktpar->err)); } while (0);
00003ED8                                    5744 @L724    DS    0H
00003ED8 9104 3323      00000323 00000004   5745          TM    803(3),4
00003EDC 4780 C362               00004102   5746          BZ    @ret_lab_1931
00003EE0 E3F0 6030 0014          00000030   5747          LGF   15,48(0,6)
00003EE6 E3F0 D0B0 0024          000000B0   5748          STG   15,176(0,13)
00003EEC 4110 D0B0               000000B0   5749          LA    1,176(0,13)
00003EF0 E3F0 C0D0 0004          00003E70   5750          LG    15,@lit_1931_222 ; rd_kafka_err2str
00003EF6                                    5751 @@gen_label341 DS    0H
00003EF6 05EF                               5752          BALR  14,15
00003EF8                                    5753 @@gen_label342 DS    0H
00003EF8 4110 3210               00000210   5754          LA    1,528(0,3)
00003EFC E310 D0B0 0024          000000B0   5755          STG   1,176(0,13)
00003F02 E330 D0B8 0024          000000B8   5756          STG   3,184(0,13)
00003F08 D707 D0C0 D0C0 000000C0 000000C0   5757          XC    192(8,13),192(13)
00003F0E E548 D0C8 0007          000000C8   5758          MVGHI 200(13),7
00003F14 E548 D0D0 0004          000000D0   5759          MVGHI 208(13),4
00003F1A E310 C0C0 0004          00003E60   5760          LG    1,@lit_1931_219
00003F20 4120 126E               0000026E   5761          LA    2,622(0,1)
00003F24 E320 D0D8 0024          000000D8   5762          STG   2,216(0,13)
00003F2A 4110 129E               0000029E   5763          LA    1,670(0,1)
00003F2E E310 D0E0 0024          000000E0   5764          STG   1,224(0,13)
00003F34 E310 6000 0004          00000000   5765          LG    1,0(0,6)
00003F3A E310 D0E8 0024          000000E8   5766          STG   1,232(0,13)
00003F40 E310 6008 0014          00000008   5767          LGF   1,8(0,6)
00003F46 E310 D0F0 0024          000000F0   5768          STG   1,240(0,13)
00003F4C E310 6010 0004          00000010   5769          LG    1,16(0,6)
00003F52 E310 D0F8 0024          000000F8   5770          STG   1,248(0,13)
00003F58 E3F0 D100 0024          00000100   5771          STG   15,256(0,13)
00003F5E 4110 D0B0               000000B0   5772          LA    1,176(0,13)
00003F62 E3F0 C0B8 0004          00003E58   5773          LG    15,@lit_1931_220 ; rd_kafka_log0
00003F68                                    5774 @@gen_label343 DS    0H
00003F68 05EF                               5775          BALR  14,15
00003F6A                                    5776 @@gen_label344 DS    0H
00003F6A                                    5777 @L727    DS    0H
                                            5778 * ***   # 524 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                            5779 * ***                   return;
                                                                                                                           Page  119 
  Active Usings: @REGION_1931_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003F6A 47F0 C362               00004102   5780          B     @ret_lab_1931
                                            5781 * ***           }
00003F6E                                    5782 @L723    DS    0H
                                            5783 * ***
                                            5784 * ***           if (!err)
00003F6E 1222                               5785          LTR   2,2
00003F70 4770 C1D8               00003F78   5786          BNZ   @L728
                                            5787 * ***                   err = rktpar->err;
00003F74 5820 6030               00000030   5788          L     2,48(0,6)   ; offset of err in rd_kafka_topic_partition_*
                                                                s
00003F78                                    5789 @L728    DS    0H
                                            5790 * ***
                                            5791 * ***      rd_kafka_toppar_offset_commit_result(rktp, err, offsets);
00003F78 E350 D0B0 0024          000000B0   5792          STG   5,176(0,13)
00003F7E B914 00F2                          5793          LGFR  15,2
00003F82 E3F0 D0B8 0024          000000B8   5794          STG   15,184(0,13)
00003F88 E340 D0C0 0024          000000C0   5795          STG   4,192(0,13)
00003F8E 4110 D0B0               000000B0   5796          LA    1,176(0,13)
00003F92 E3F0 C0D8 0004          00003E78   5797          LG    15,@lit_1931_225 ; rd_kafka_toppar_offset_commit_result
00003F98                                    5798 @@gen_label346 DS    0H
00003F98 05EF                               5799          BALR  14,15
00003F9A                                    5800 @@gen_label347 DS    0H
                                            5801 * ***
                                            5802 * ***           do { if ((((rktp->rktp_rkt->rkt_rk)->rk_conf.debug & (\
                                            5803 * 0x4)))) rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf,rktp->rktp_rk\
                                            5804 * t->rkt_rk,((void *)0), 7,(0x4), "OFFSET","%s [%" "d" "]: offset %" "\
                                            5805 * lld" " %scommitted: %s", rktp->rktp_rkt->rkt_topic->str, rktp->rktp_\
                                            5806 * partition, rktpar->offset, err ? "not " : "", rd_kafka_err2str(err))\
                                            5807 * ; } while (0);
00003F9A                                    5808 @L729    DS    0H
00003F9A E3F0 5060 0004          00000060   5809          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00003FA0 E3F0 F148 0004          00000148   5810          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00003FA6 9104 F323      00000323 00000004   5811          TM    803(15),4
00003FAA 4780 C2DE               0000407E   5812          BZ    @L732
00003FAE 1222                               5813          LTR   2,2
00003FB0 4780 C222               00003FC2   5814          BZ    @L733
00003FB4 E3F0 C0C0 0004          00003E60   5815          LG    15,@lit_1931_219
00003FBA 4130 F302               00000302   5816          LA    3,770(0,15)
00003FBE 47F0 C22C               00003FCC   5817          B     @L734
00003FC2                                    5818 @L733    DS    0H
00003FC2 E3F0 C0C0 0004          00003E60   5819          LG    15,@lit_1931_219
00003FC8 4130 F308               00000308   5820          LA    3,776(0,15)
00003FCC                                    5821 @L734    DS    0H
00003FCC B914 00F2                          5822          LGFR  15,2
00003FD0 E3F0 D0B0 0024          000000B0   5823          STG   15,176(0,13)
00003FD6 4110 D0B0               000000B0   5824          LA    1,176(0,13)
00003FDA E3F0 C0D0 0004          00003E70   5825          LG    15,@lit_1931_222 ; rd_kafka_err2str
00003FE0                                    5826 @@gen_label350 DS    0H
00003FE0 05EF                               5827          BALR  14,15
00003FE2                                    5828 @@gen_label351 DS    0H
00003FE2 E310 5060 0004          00000060   5829          LG    1,96(0,5)   ; offset of rktp_rkt in rd_kafka_toppar_s
00003FE8 E310 1148 0004          00000148   5830          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
                                                                                                                           Page  120 
  Active Usings: @REGION_1931_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00003FEE 4110 1210               00000210   5831          LA    1,528(0,1)
00003FF2 E310 D0B0 0024          000000B0   5832          STG   1,176(0,13)
00003FF8 E310 5060 0004          00000060   5833          LG    1,96(0,5)   ; offset of rktp_rkt in rd_kafka_toppar_s
00003FFE E310 1148 0004          00000148   5834          LG    1,328(0,1)
00004004 E310 D0B8 0024          000000B8   5835          STG   1,184(0,13)
0000400A D707 D0C0 D0C0 000000C0 000000C0   5836          XC    192(8,13),192(13)
00004010 E548 D0C8 0007          000000C8   5837          MVGHI 200(13),7
00004016 E548 D0D0 0004          000000D0   5838          MVGHI 208(13),4
0000401C E310 C0C0 0004          00003E60   5839          LG    1,@lit_1931_219
00004022 4140 1130               00000130   5840          LA    4,304(0,1)
00004026 E340 D0D8 0024          000000D8   5841          STG   4,216(0,13)
0000402C 4110 130A               0000030A   5842          LA    1,778(0,1)
00004030 E310 D0E0 0024          000000E0   5843          STG   1,224(0,13)
00004036 E310 5060 0004          00000060   5844          LG    1,96(0,5)   ; offset of rktp_rkt in rd_kafka_toppar_s
0000403C E310 1080 0004          00000080   5845          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
00004042 E310 1008 0004          00000008   5846          LG    1,8(0,1)
00004048 E310 D0E8 0024          000000E8   5847          STG   1,232(0,13)
0000404E E310 5068 0014          00000068   5848          LGF   1,104(0,5)
00004054 E310 D0F0 0024          000000F0   5849          STG   1,240(0,13)
0000405A E310 6010 0004          00000010   5850          LG    1,16(0,6)
00004060 E310 D0F8 0024          000000F8   5851          STG   1,248(0,13)
00004066 E330 D100 0024          00000100   5852          STG   3,256(0,13)
0000406C E3F0 D108 0024          00000108   5853          STG   15,264(0,13)
00004072 4110 D0B0               000000B0   5854          LA    1,176(0,13)
00004076 E3F0 C0B8 0004          00003E58   5855          LG    15,@lit_1931_220 ; rd_kafka_log0
0000407C                                    5856 @@gen_label352 DS    0H
0000407C 05EF                               5857          BALR  14,15
0000407E                                    5858 @@gen_label353 DS    0H
0000407E                                    5859 @L732    DS    0H
                                            5860 * ***
                                            5861 * ***   # 539 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                            5862 * ***           rktp->rktp_committing_offset = 0;
0000407E E548 5220 0000          00000220   5863          MVGHI 544(5),0    ; offset of rktp_committing_offset in rd_kaf*
                                                                ka_toppar_s
                                            5864 * ***
                                            5865 * ***           mtx_lock(&(rktp)->rktp_lock);
00004084 41F0 50C0               000000C0   5866          LA    15,192(0,5)
00004088 E3F0 D0B0 0024          000000B0   5867          STG   15,176(0,13)
0000408E 4110 D0B0               000000B0   5868          LA    1,176(0,13)
00004092 E3F0 C0E0 0004          00003E80   5869          LG    15,@lit_1931_231 ; mtx_lock
00004098                                    5870 @@gen_label354 DS    0H
00004098 05EF                               5871          BALR  14,15
0000409A                                    5872 @@gen_label355 DS    0H
                                            5873 * ***           if (rktp->rktp_flags & 0x8)
0000409A 9108 52B3      000002B3 00000008   5874          TM    691(5),8
0000409E 4780 C31E               000040BE   5875          BZ    @L735
                                            5876 * ***                   rd_kafka_offset_store_term(rktp, err);
000040A2 E350 D0B0 0024          000000B0   5877          STG   5,176(0,13)
000040A8 B914 00F2                          5878          LGFR  15,2
000040AC E3F0 D0B8 0024          000000B8   5879          STG   15,184(0,13)
000040B2 4110 D0B0               000000B0   5880          LA    1,176(0,13)
000040B6 E3F0 C0E8 0004          00003E88   5881          LG    15,@lit_1931_232 ; rd_kafka_offset_store_term
                                                                                                                           Page  121 
  Active Usings: @REGION_1931_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000040BC                                    5882 @@gen_label357 DS    0H
000040BC 05EF                               5883          BALR  14,15
000040BE                                    5884 @@gen_label358 DS    0H
000040BE                                    5885 @L735    DS    0H
                                            5886 * ***           mtx_unlock(&(rktp)->rktp_lock);
000040BE 41F0 50C0               000000C0   5887          LA    15,192(0,5)
000040C2 E3F0 D0B0 0024          000000B0   5888          STG   15,176(0,13)
000040C8 4110 D0B0               000000B0   5889          LA    1,176(0,13)
000040CC E3F0 C0F0 0004          00003E90   5890          LG    15,@lit_1931_233 ; mtx_unlock
000040D2                                    5891 @@gen_label359 DS    0H
000040D2 05EF                               5892          BALR  14,15
000040D4                                    5893 @@gen_label360 DS    0H
                                            5894 * ***
                                            5895 * ***           do { rd_kafka_toppar_t *_RKTP = (rktp); if (((rd_refcn\
                                            5896 * t_sub0(&_RKTP->rktp_refcnt) == 0))) rd_kafka_toppar_destroy_final(_R\
                                            5897 * KTP); } while (0);
000040D4                                    5898 @L736    DS    0H
000040D4 41F0 5090               00000090   5899          LA    15,144(0,5)
000040D8 E3F0 D0B0 0024          000000B0   5900          STG   15,176(0,13)
000040DE 4110 D0B0               000000B0   5901          LA    1,176(0,13)
000040E2 E3F0 C0F8 0004          00003E98   5902          LG    15,@lit_1931_234 ; rd_refcnt_sub0
000040E8                                    5903 @@gen_label361 DS    0H
000040E8 05EF                               5904          BALR  14,15
000040EA                                    5905 @@gen_label362 DS    0H
000040EA 12FF                               5906          LTR   15,15
000040EC 4770 C362               00004102   5907          BNE   @L739
000040F0 E350 D0B0 0024          000000B0   5908          STG   5,176(0,13)
000040F6 4110 D0B0               000000B0   5909          LA    1,176(0,13)
000040FA E3F0 C100 0004          00003EA0   5910          LG    15,@lit_1931_235 ; rd_kafka_toppar_destroy_final
00004100                                    5911 @@gen_label364 DS    0H
00004100 05EF                               5912          BALR  14,15
00004102                                    5913 @@gen_label365 DS    0H
00004102                                    5914 @L739    DS    0H
                                            5915 * ***   }
00004102                                    5916 @ret_lab_1931 DS 0H
                                            5917 * * **** Start of Epilogue
                                            5918          DCCEPIL
00004102                                    5919+         ds 0h                                                          01-DCCEP
                                            5920+* Epilog
00004102 D707 D088 D088 00000088 00000088   5921+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004108 E3D0 D080 0004          00000080   5922+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000410E E3C0 D090 0004          00000090   5923+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004114 E3B0 C018 0004          00000018   5924+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000411A E3C0 B010 0021          00000010   5925+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004120 E3E0 D008 0004          00000008   5926+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004126 EB1C D020 0004          00000020   5927+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000412C 078E                               5928+         bcr 8,14                if same dsab, just return              01-DCCEP
0000412E E3F0 D010 0024          00000010   5929+         stg 15,16(0,13)         save return code                       01-DCCEP
00004134 E300 D018 0024          00000018   5930+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000413A E3F0 D090 0004          00000090   5931+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004140 E3F0 F018 0004          00000018   5932+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004146 47F0 F040               00000040   5933+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page  122 
  Active Usings: @REGION_1931_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            5934+* End of Epilog
                                            5935 * * **** End of Epilogue
                                            5936          DROP  12
                                            5937 *
                                            5938 *   DSECT for automatic variables in "rd_kafka_offset_broker_commit_cb"
                                            5939 *      (FUNCTION #1931)
                                            5940 *
00000000                00000000 000000A8   5941 @AUTO#rd_kafka_offset_broker_commit_cb DSECT
00000000                                    5942          DS    XL168
                                            5943 *
0000414A                00000000 00006B1A   5944 @CODE    CSECT
                                            5945 *
                                            5946 *
                                            5947 *
                                            5948 * ....... start of rd_kafka_offset_broker_commit
0000414A                                    5949 @LNAME1932 DS  0H
0000414A 0000001D                           5950          DC    X'0000001D'
0000414E 99846D9281869281                   5951          DC    C'rd_kafka_offset_broker_commit'
0000416B 00                                 5952          DC    X'00'
                                            5953 rd_kafka_offset_broker_commit DCCPRLG CINDEX=1932,BASER=12,FRAME=280,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1932
                                            5954          macro
                                            5955          dccextrn &m
                                            5956          gblc    &$dccext(1000)
                                            5957          gbla    &$dccexti
                                            5958          lcla    &i
                                            5959 &$dccext(&$dccexti+1) setc    '&m'
                                            5960 &i       seta    1
                                            5961 .loop    aif    (&i gt &$dccexti).around
                                            5962          aif    ('&$dccext(&i)' eq '&m').getout
                                            5963 &i       seta    &i+1
                                            5964          ago     .loop
                                            5965 .around  anop
                                            5966 &$dccexti seta &$dccexti+1
                                            5967          extrn  &m
                                            5968 .getout  anop
                                            5969          mend
00004170                                    5970+$eye0101    ds    0d                                                    02-DCCCA
00004170 C4C3C3                             5971+         dc cl3'DCC'                                                    02-DCCCA
00004173 01                                 5972+         dc xl1'01' format one                                          02-DCCCA
00004174 00000000                           5973+         dc a(0)                                                        02-DCCCA
00004178 00000000000041E2                   5974+         dc ad(@PER_1932)                                               02-DCCCA
00004180 0000000000000118                   5975+         dc ad(280)                                                     02-DCCCA
00004188 0000000000000000                   5976+         dc ad(0)                                                       02-DCCCA
00004190 0000000000001000                   5977+         dc ad(4096)                                                    02-DCCCA
00004198 20                                 5978+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004199 03                                 5979+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000419A 03                                 5980+         dc al1(3)                                                      02-DCCCA
0000419B 08                                 5981+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000419C 00                                 5982+         dc bl.8'00000000'                                              02-DCCCA
0000419D 000000                             5983+         dc al3(0)                                                      02-DCCCA
000041A0 000000000000414A                   5984+         dc ad(@LNAME1932)                                              02-DCCCA
                                                                                                                           Page  123 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000041A8                                    5985+         ds 0d                                                          02-DCCCA
000041A8 0000000000004170                   5986+         dc ad($eye0101)                                                02-DCCCA
000041B0 0000000000000000                   5987+         dc ad(0)                                                       02-DCCCA
000041B8                                    5988+         ds    0d                                                       01-DCCPR
000041B8                                    5989+rd_kafka_offset_broker_commit ds 0d                                     01-DCCPR
000041B8                                    5990+@REGION_1932_1 ds 0h                                                    01-DCCPR
000041B8 EBEC D008 0024          00000008   5991+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000041BE E3E0 D088 0004          00000088   5992+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000041C4 E3C0 D090 0004          00000090   5993+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000041CA B904 002E                          5994+         lgr   2,14                copy addr of our savearea            01-DCCPR
000041CE E3B0 C018 0004          00000018   5995+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000041D4 A7EB 0118               00000118   5996+         aghi  14,280              increase by frame size               01-DCCPR
000041D8 E3E0 C020 0021          00000020   5997+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000041DE 4720 B020               00000020   5998+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000041E2                                    5999+@PER_1932 ds   0h                                                       01-DCCPR
000041E2 EBDE 2080 0024          00000080   6000+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000041E8 E3C0 2090 0024          00000090   6001+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000041EE B904 00D2                          6002+         lgr   13,2                set real frame pointer               01-DCCPR
000041F2 B904 00CF                          6003+         lgr   12,15               set base reg                         01-DCCPR
                        000041B8            6004+         using @REGION_1932_1,12                                        01-DCCPR
000041F6 B904 0041                          6005          LGR   4,1         ; ptr to parm area
                                            6006 * ******* End of Prologue
                                            6007 * *
000041FA E320 4000 0004          00000000   6008          LG    2,0(0,4)    ; rktp
                                            6009 * ***           rd_kafka_topic_partition_list_t *offsets;
                                            6010 * ***           rd_kafka_topic_partition_t *rktpar;
                                            6011 * ***
                                            6012 * ***           do { if (((!(rktp->rktp_cgrp != ((void *)0))))) rd_kaf\
                                            6013 * ka_crash("C:\\asgkafka\\librdkafka\\src\\rdkafka_offset.c",555, __FU\
                                            6014 * NCTION__, (rktp->rktp_rkt->rkt_rk), "assert: " "rktp->rktp_cgrp != N\
                                            6015 * ULL"); } while (0);
00004200                                    6016 @L740    DS    0H
00004200 E3F0 2290 0002          00000290   6017          LTG   15,656(0,2) ; offset of rktp_cgrp in rd_kafka_toppar_s
00004206 4770 C0A0               00004258   6018          BNE   @L743
0000420A E3F0 C1A8 0004          00004360   6019          LG    15,@lit_1932_237
00004210 4110 F330               00000330   6020          LA    1,816(0,15)
00004214 E310 D0B8 0024          000000B8   6021          STG   1,184(0,13)
0000421A E548 D0C0 022B          000000C0   6022          MVGHI 192(13),555
00004220 E310 C1A0 0004          00004358   6023          LG    1,@lit_1932_238
00004226 4110 11DE               000001DE   6024          LA    1,478(0,1)
0000422A E310 D0C8 0024          000000C8   6025          STG   1,200(0,13)
00004230 E310 2060 0004          00000060   6026          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
00004236 E310 1148 0004          00000148   6027          LG    1,328(0,1)
0000423C E310 D0D0 0024          000000D0   6028          STG   1,208(0,13)
00004242 41F0 F35C               0000035C   6029          LA    15,860(0,15)
00004246 E3F0 D0D8 0024          000000D8   6030          STG   15,216(0,13)
0000424C 4110 D0B8               000000B8   6031          LA    1,184(0,13)
00004250 E3F0 C198 0004          00004350   6032          LG    15,@lit_1932_239 ; rd_kafka_crash
00004256                                    6033 @@gen_label367 DS    0H
00004256 05EF                               6034          BALR  14,15
00004258                                    6035 @@gen_label368 DS    0H
00004258                                    6036 @L743    DS    0H
                                                                                                                           Page  124 
  Active Usings: @REGION_1932_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6037 * ***           do { if (((!(rktp->rktp_flags & 0x4)))) rd_kafka_crash\
                                            6038 * ("C:\\asgkafka\\librdkafka\\src\\rdkafka_offset.c",556, __FUNCTION__\
                                            6039 * , (rktp->rktp_rkt->rkt_rk), "assert: " "rktp->rktp_flags & RD_KAFKA_\
                                            6040 * TOPPAR_F_OFFSET_STORE"); } while (0);
00004258                                    6041 @L744    DS    0H
00004258 9104 22B3      000002B3 00000004   6042          TM    691(2),4
0000425C 4770 C0F6               000042AE   6043          BNZ   @L747
00004260 E3F0 C1A8 0004          00004360   6044          LG    15,@lit_1932_237
00004266 4110 F330               00000330   6045          LA    1,816(0,15)
0000426A E310 D0B8 0024          000000B8   6046          STG   1,184(0,13)
00004270 E548 D0C0 022C          000000C0   6047          MVGHI 192(13),556
00004276 E310 C1A0 0004          00004358   6048          LG    1,@lit_1932_238
0000427C 4110 11DE               000001DE   6049          LA    1,478(0,1)
00004280 E310 D0C8 0024          000000C8   6050          STG   1,200(0,13)
00004286 E310 2060 0004          00000060   6051          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
0000428C E310 1148 0004          00000148   6052          LG    1,328(0,1)
00004292 E310 D0D0 0024          000000D0   6053          STG   1,208(0,13)
00004298 41F0 F37C               0000037C   6054          LA    15,892(0,15)
0000429C E3F0 D0D8 0024          000000D8   6055          STG   15,216(0,13)
000042A2 4110 D0B8               000000B8   6056          LA    1,184(0,13)
000042A6 E3F0 C198 0004          00004350   6057          LG    15,@lit_1932_239 ; rd_kafka_crash
000042AC                                    6058 @@gen_label370 DS    0H
000042AC 05EF                               6059          BALR  14,15
000042AE                                    6060 @@gen_label371 DS    0H
000042AE                                    6061 @L747    DS    0H
                                            6062 * ***
                                            6063 * ***
                                            6064 * ***           rktp->rktp_committing_offset = rktp->rktp_stored_offse\
                                            6065 * t;
000042AE E3F0 2218 0004          00000218   6066          LG    15,536(0,2) ; offset of rktp_stored_offset in rd_kafka_t*
                                                                oppar_s
000042B4 E3F0 2220 0024          00000220   6067          STG   15,544(0,2) ; offset of rktp_committing_offset in rd_kaf*
                                                                ka_toppar_s
                                            6068 * ***
                                            6069 * ***           offsets = rd_kafka_topic_partition_list_new(1);
000042BA E548 D0B8 0001          000000B8   6070          MVGHI 184(13),1
000042C0 4110 D0B8               000000B8   6071          LA    1,184(0,13)
000042C4 E3F0 C1B0 0004          00004368   6072          LG    15,@lit_1932_243 ; rd_kafka_topic_partition_list_new
000042CA                                    6073 @@gen_label372 DS    0H
000042CA 05EF                               6074          BALR  14,15
000042CC                                    6075 @@gen_label373 DS    0H
000042CC B904 003F                          6076          LGR   3,15
                                            6077 * ***           rktpar = rd_kafka_topic_partition_list_add(
                                            6078 * ***                   offsets, rktp->rktp_rkt->rkt_topic->str, rktp-\
                                            6079 * >rktp_partition);
000042D0 E330 D0B8 0024          000000B8   6080          STG   3,184(0,13)
000042D6 E3F0 2060 0004          00000060   6081          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
000042DC E3F0 F080 0004          00000080   6082          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
000042E2 E3F0 F008 0004          00000008   6083          LG    15,8(0,15)
000042E8 E3F0 D0C0 0024          000000C0   6084          STG   15,192(0,13)
000042EE E3F0 2068 0014          00000068   6085          LGF   15,104(0,2)
000042F4 E3F0 D0C8 0024          000000C8   6086          STG   15,200(0,13)
                                                                                                                           Page  125 
  Active Usings: @REGION_1932_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000042FA 4110 D0B8               000000B8   6087          LA    1,184(0,13)
000042FE E3F0 C1B8 0004          00004370   6088          LG    15,@lit_1932_244 ; rd_kafka_topic_partition_list_add
00004304                                    6089 @@gen_label374 DS    0H
00004304 05EF                               6090          BALR  14,15
00004306                                    6091 @@gen_label375 DS    0H
                                            6092 * ***           rktpar->offset = rktp->rktp_committing_offset;
00004306 E310 2220 0004          00000220   6093          LG    1,544(0,2)  ; offset of rktp_committing_offset in rd_kaf*
                                                                ka_toppar_s
0000430C E310 F010 0024          00000010   6094          STG   1,16(0,15)  ; offset of offset in rd_kafka_topic_partiti*
                                                                on_s
                                            6095 * ***
                                            6096 * ***           do { if ((((rktp->rktp_rkt->rkt_rk)->rk_conf.debug & (\
                                            6097 * 0x4)))) rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf,rktp->rktp_rk\
                                            6098 * t->rkt_rk,((void *)0), 7,(0x4), "OFFSETCMT","%.*s [%" "d" "]: commit\
                                            6099 * ting offset %" "lld" ": %s", (int)((rktp->rktp_rkt->rkt_topic)->len \
                                            6100 * == -1 ? 0 : (rktp->rktp_rkt->rkt_topic)->len), (rktp->rktp_rkt->rkt_\
                                            6101 * topic)->str, rktp->rktp_partition, rktp->rktp_committing_offset, rea\
                                            6102 * son); } while (0);
00004312                                    6103 @L748    DS    0H
00004312 E3F0 2060 0004          00000060   6104          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00004318 E3F0 F148 0004          00000148   6105          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
0000431E 9104 F323      00000323 00000004   6106          TM    803(15),4
00004322 4780 C29E               00004456   6107          BZ    @L751
00004326 E3F0 2060 0004          00000060   6108          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000432C E3F0 F080 0004          00000080   6109          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00004332 E55C F000 FFFF          00000000   6110          CHSI  0(15),-1
00004338 4770 C1E8               000043A0   6111          BNE   @L752
0000433C A7F8 0000               00000000   6112          LHI   15,0        ; 0
00004340 47F0 C1F8               000043B0   6113          B     @L753
00004348                                    6114          DS    0D
00004348 00000118                           6115 @FRAMESIZE_1932 DC F'280'
0000434C 00000000
00004350 0000000000000000                   6116 @lit_1932_239 DC AD(rd_kafka_crash)
00004358 0000000000006B20                   6117 @lit_1932_238 DC AD(@DATA)
00004360 0000000000006D48                   6118 @lit_1932_237 DC AD(@strings@)
00004368 0000000000000000                   6119 @lit_1932_243 DC AD(rd_kafka_topic_partition_list_new)
00004370 0000000000000000                   6120 @lit_1932_244 DC AD(rd_kafka_topic_partition_list_add)
00004378 0000000000000000                   6121 @lit_1932_247 DC AD(rd_kafka_log0)
00004380 0000000000001810                   6122 @lit_1932_249 DC AD(rd_kafka_replyq_make)
00004388 0000000000003468                   6123 @lit_1932_251 DC AD(rd_kafka_commit0)
00004390 0000000000003DA0                   6124 @lit_1932_250 DC AD(rd_kafka_offset_broker_commit_cb)
00004398 0000000000000000                   6125 @lit_1932_252 DC AD(rd_kafka_topic_partition_list_destroy)
000043A0                                    6126 @L752    DS    0H
000043A0 E3F0 2060 0004          00000060   6127          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
000043A6 E3F0 F080 0004          00000080   6128          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
000043AC 58F0 F000               00000000   6129          L     15,0(0,15)
000043B0                                    6130 @L753    DS    0H
000043B0 E310 2060 0004          00000060   6131          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
000043B6 E310 1148 0004          00000148   6132          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
000043BC 4110 1210               00000210   6133          LA    1,528(0,1)
000043C0 E310 D0B8 0024          000000B8   6134          STG   1,184(0,13)
000043C6 E310 2060 0004          00000060   6135          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
                                                                                                                           Page  126 
  Active Usings: @REGION_1932_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000043CC E310 1148 0004          00000148   6136          LG    1,328(0,1)
000043D2 E310 D0C0 0024          000000C0   6137          STG   1,192(0,13)
000043D8 D707 D0C8 D0C8 000000C8 000000C8   6138          XC    200(8,13),200(13)
000043DE E548 D0D0 0007          000000D0   6139          MVGHI 208(13),7
000043E4 E548 D0D8 0004          000000D8   6140          MVGHI 216(13),4
000043EA E310 C1A8 0004          00004360   6141          LG    1,@lit_1932_237
000043F0 4150 13B6               000003B6   6142          LA    5,950(0,1)
000043F4 E350 D0E0 0024          000000E0   6143          STG   5,224(0,13)
000043FA 4110 13C0               000003C0   6144          LA    1,960(0,1)
000043FE E310 D0E8 0024          000000E8   6145          STG   1,232(0,13)
00004404 B914 00FF                          6146          LGFR  15,15
00004408 E3F0 D0F0 0024          000000F0   6147          STG   15,240(0,13)
0000440E E3F0 2060 0004          00000060   6148          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00004414 E3F0 F080 0004          00000080   6149          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000441A E3F0 F008 0004          00000008   6150          LG    15,8(0,15)
00004420 E3F0 D0F8 0024          000000F8   6151          STG   15,248(0,13)
00004426 E3F0 2068 0014          00000068   6152          LGF   15,104(0,2)
0000442C E3F0 D100 0024          00000100   6153          STG   15,256(0,13)
00004432 E3F0 2220 0004          00000220   6154          LG    15,544(0,2)
00004438 E3F0 D108 0024          00000108   6155          STG   15,264(0,13)
0000443E E3F0 4008 0004          00000008   6156          LG    15,8(0,4)   ; reason
00004444 E3F0 D110 0024          00000110   6157          STG   15,272(0,13)
0000444A 4110 D0B8               000000B8   6158          LA    1,184(0,13)
0000444E E3F0 C1C0 0004          00004378   6159          LG    15,@lit_1932_247 ; rd_kafka_log0
00004454                                    6160 @@gen_label378 DS    0H
00004454 05EF                               6161          BALR  14,15
00004456                                    6162 @@gen_label379 DS    0H
00004456                                    6163 @L751    DS    0H
                                            6164 * ***
                                            6165 * ***
                                            6166 * ***
                                            6167 * ***
                                            6168 * ***
                                            6169 * ***           rd_kafka_commit0(rktp->rktp_rkt->rkt_rk, offsets, rktp\
                                            6170 * ,
                                            6171 * ***             rd_kafka_replyq_make(rktp->rktp_ops,0,__FUNCTION__),
                                            6172 * ***             rd_kafka_offset_broker_commit_cb, ((void *)0),
                                            6173 * ***                            reason);
00004456 41F0 D0A8               000000A8   6174          LA    15,168(0,13)
0000445A E3F0 D0B8 0024          000000B8   6175          STG   15,184(0,13)
00004460 E3F0 2140 0004          00000140   6176          LG    15,320(0,2)
00004466 E3F0 D0C0 0024          000000C0   6177          STG   15,192(0,13)
0000446C D707 D0C8 D0C8 000000C8 000000C8   6178          XC    200(8,13),200(13)
00004472 E3F0 C1A0 0004          00004358   6179          LG    15,@lit_1932_238
00004478 41F0 F1DE               000001DE   6180          LA    15,478(0,15)
0000447C E3F0 D0D0 0024          000000D0   6181          STG   15,208(0,13)
00004482 4110 D0B8               000000B8   6182          LA    1,184(0,13)
00004486 E3F0 C1C8 0004          00004380   6183          LG    15,@lit_1932_249 ; rd_kafka_replyq_make
0000448C                                    6184 @@gen_label380 DS    0H
0000448C 05EF                               6185          BALR  14,15
0000448E                                    6186 @@gen_label381 DS    0H
0000448E E3F0 2060 0004          00000060   6187          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
                                                                                                                           Page  127 
  Active Usings: @REGION_1932_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004494 E3F0 F148 0004          00000148   6188          LG    15,328(0,15)
0000449A E3F0 D0B8 0024          000000B8   6189          STG   15,184(0,13)
000044A0 E330 D0C0 0024          000000C0   6190          STG   3,192(0,13)
000044A6 E320 D0C8 0024          000000C8   6191          STG   2,200(0,13)
000044AC D20F D0D0 D0A8 000000D0 000000A8   6192          MVC   208(16,13),168(13)
000044B2 E3F0 C1D8 0004          00004390   6193          LG    15,@lit_1932_250 ; rd_kafka_offset_broker_commit_cb
000044B8 E3F0 D0E0 0024          000000E0   6194          STG   15,224(0,13)
000044BE D707 D0E8 D0E8 000000E8 000000E8   6195          XC    232(8,13),232(13)
000044C4 E3F0 4008 0004          00000008   6196          LG    15,8(0,4)   ; reason
000044CA E3F0 D0F0 0024          000000F0   6197          STG   15,240(0,13)
000044D0 4110 D0B8               000000B8   6198          LA    1,184(0,13)
000044D4 E3F0 C1D0 0004          00004388   6199          LG    15,@lit_1932_251 ; rd_kafka_commit0
000044DA                                    6200 @@gen_label382 DS    0H
000044DA 05EF                               6201          BALR  14,15
000044DC                                    6202 @@gen_label383 DS    0H
                                            6203 * ***
                                            6204 * ***           rd_kafka_topic_partition_list_destroy(offsets);
000044DC E330 D0B8 0024          000000B8   6205          STG   3,184(0,13)
000044E2 4110 D0B8               000000B8   6206          LA    1,184(0,13)
000044E6 E3F0 C1E0 0004          00004398   6207          LG    15,@lit_1932_252 ; rd_kafka_topic_partition_list_destroy
000044EC                                    6208 @@gen_label384 DS    0H
000044EC 05EF                               6209          BALR  14,15
000044EE                                    6210 @@gen_label385 DS    0H
                                            6211 * ***
                                            6212 * ***           return RD_KAFKA_RESP_ERR__IN_PROGRESS;
000044EE A7F9 FF4E               0000FF4E   6213          LGHI  15,-178     ; -178
                                            6214 * ***   }
                                            6215 * * **** Start of Epilogue
                                            6216          DCCEPIL
000044F2                                    6217+         ds 0h                                                          01-DCCEP
                                            6218+* Epilog
000044F2 D707 D088 D088 00000088 00000088   6219+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000044F8 E3D0 D080 0004          00000080   6220+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000044FE E3C0 D090 0004          00000090   6221+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004504 E3B0 C018 0004          00000018   6222+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000450A E3C0 B010 0021          00000010   6223+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004510 E3E0 D008 0004          00000008   6224+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004516 EB1C D020 0004          00000020   6225+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000451C 078E                               6226+         bcr 8,14                if same dsab, just return              01-DCCEP
0000451E E3F0 D010 0024          00000010   6227+         stg 15,16(0,13)         save return code                       01-DCCEP
00004524 E300 D018 0024          00000018   6228+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000452A E3F0 D090 0004          00000090   6229+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004530 E3F0 F018 0004          00000018   6230+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004536 47F0 F040               00000040   6231+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6232+* End of Epilog
                                            6233 * * **** End of Epilogue
                                            6234          DROP  12
                                            6235 *
                                            6236 *   DSECT for automatic variables in "rd_kafka_offset_broker_commit"
                                            6237 *      (FUNCTION #1932)
                                            6238 *
00000000                00000000 000000A8   6239 @AUTO#rd_kafka_offset_broker_commit DSECT
                                                                                                                           Page  128 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000000                                    6240          DS    XL168
                                            6241 *
0000453A                00000000 00006B1A   6242 @CODE    CSECT
                                            6243 *
                                            6244 *
                                            6245 *
                                            6246 * ....... start of rd_kafka_offset_commit
0000453A                                    6247 @LNAME1933 DS  0H
0000453A 00000016                           6248          DC    X'00000016'
0000453E 99846D9281869281                   6249          DC    C'rd_kafka_offset_commit'
00004554 00                                 6250          DC    X'00'
                                            6251 rd_kafka_offset_commit DCCPRLG CINDEX=1933,BASER=12,FRAME=256,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1933
                                            6252          macro
                                            6253          dccextrn &m
                                            6254          gblc    &$dccext(1000)
                                            6255          gbla    &$dccexti
                                            6256          lcla    &i
                                            6257 &$dccext(&$dccexti+1) setc    '&m'
                                            6258 &i       seta    1
                                            6259 .loop    aif    (&i gt &$dccexti).around
                                            6260          aif    ('&$dccext(&i)' eq '&m').getout
                                            6261 &i       seta    &i+1
                                            6262          ago     .loop
                                            6263 .around  anop
                                            6264 &$dccexti seta &$dccexti+1
                                            6265          extrn  &m
                                            6266 .getout  anop
                                            6267          mend
00004558                                    6268+$eye0104    ds    0d                                                    02-DCCCA
00004558 C4C3C3                             6269+         dc cl3'DCC'                                                    02-DCCCA
0000455B 01                                 6270+         dc xl1'01' format one                                          02-DCCCA
0000455C 00000000                           6271+         dc a(0)                                                        02-DCCCA
00004560 00000000000045CA                   6272+         dc ad(@PER_1933)                                               02-DCCCA
00004568 0000000000000100                   6273+         dc ad(256)                                                     02-DCCCA
00004570 0000000000000000                   6274+         dc ad(0)                                                       02-DCCCA
00004578 0000000000001000                   6275+         dc ad(4096)                                                    02-DCCCA
00004580 20                                 6276+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004581 03                                 6277+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004582 03                                 6278+         dc al1(3)                                                      02-DCCCA
00004583 08                                 6279+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004584 00                                 6280+         dc bl.8'00000000'                                              02-DCCCA
00004585 000000                             6281+         dc al3(0)                                                      02-DCCCA
00004588 000000000000453A                   6282+         dc ad(@LNAME1933)                                              02-DCCCA
00004590                                    6283+         ds 0d                                                          02-DCCCA
00004590 0000000000004558                   6284+         dc ad($eye0104)                                                02-DCCCA
00004598 0000000000000000                   6285+         dc ad(0)                                                       02-DCCCA
000045A0                                    6286+         ds    0d                                                       01-DCCPR
000045A0                                    6287+rd_kafka_offset_commit ds 0d                                            01-DCCPR
000045A0                                    6288+@REGION_1933_1 ds 0h                                                    01-DCCPR
000045A0 EBEC D008 0024          00000008   6289+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000045A6 E3E0 D088 0004          00000088   6290+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page  129 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000045AC E3C0 D090 0004          00000090   6291+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000045B2 B904 002E                          6292+         lgr   2,14                copy addr of our savearea            01-DCCPR
000045B6 E3B0 C018 0004          00000018   6293+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000045BC A7EB 0100               00000100   6294+         aghi  14,256              increase by frame size               01-DCCPR
000045C0 E3E0 C020 0021          00000020   6295+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000045C6 4720 B020               00000020   6296+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000045CA                                    6297+@PER_1933 ds   0h                                                       01-DCCPR
000045CA EBDE 2080 0024          00000080   6298+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000045D0 E3C0 2090 0024          00000090   6299+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000045D6 B904 00D2                          6300+         lgr   13,2                set real frame pointer               01-DCCPR
000045DA B904 00CF                          6301+         lgr   12,15               set base reg                         01-DCCPR
                        000045A0            6302+         using @REGION_1933_1,12                                        01-DCCPR
000045DE B904 0031                          6303          LGR   3,1         ; ptr to parm area
                                            6304 * ******* End of Prologue
                                            6305 * *
                                            6306 * ***           if (1)
000045E2 E320 3000 0004          00000000   6307          LG    2,0(0,3)    ; rktp
                                            6308 * ***           do { if ((((rktp->rktp_rkt->rkt_rk)->rk_conf.debug & (\
                                            6309 * 0x4)))) rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf,rktp->rktp_rk\
                                            6310 * t->rkt_rk,((void *)0), 7,(0x4), "OFFSET","%s [%" "d" "]: commit: " "\
                                            6311 * stored offset %" "lld" " > committed offset %" "lld" "?", rktp->rktp\
                                            6312 * _rkt->rkt_topic->str, rktp->rktp_partition, rktp->rktp_stored_offset\
                                            6313 * , rktp->rktp_committed_offset); } while (0);
000045E8                                    6314 @L755    DS    0H
000045E8 E3F0 2060 0004          00000060   6315          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
000045EE E3F0 F148 0004          00000148   6316          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
000045F4 9104 F323      00000323 00000004   6317          TM    803(15),4
000045F8 4780 C0F8               00004698   6318          BZ    @L758
000045FC E3F0 2060 0004          00000060   6319          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00004602 E3F0 F148 0004          00000148   6320          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00004608 41F0 F210               00000210   6321          LA    15,528(0,15)
0000460C E3F0 D0A8 0024          000000A8   6322          STG   15,168(0,13)
00004612 E3F0 2060 0004          00000060   6323          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00004618 E3F0 F148 0004          00000148   6324          LG    15,328(0,15)
0000461E E3F0 D0B0 0024          000000B0   6325          STG   15,176(0,13)
00004624 D707 D0B8 D0B8 000000B8 000000B8   6326          XC    184(8,13),184(13)
0000462A E548 D0C0 0007          000000C0   6327          MVGHI 192(13),7
00004630 E548 D0C8 0004          000000C8   6328          MVGHI 200(13),4
00004636 E3F0 C120 0004          000046C0   6329          LG    15,@lit_1933_255
0000463C 4110 F130               00000130   6330          LA    1,304(0,15)
00004640 E310 D0D0 0024          000000D0   6331          STG   1,208(0,13)
00004646 41F0 F3E6               000003E6   6332          LA    15,998(0,15)
0000464A E3F0 D0D8 0024          000000D8   6333          STG   15,216(0,13)
00004650 E3F0 2060 0004          00000060   6334          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00004656 E3F0 F080 0004          00000080   6335          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000465C E3F0 F008 0004          00000008   6336          LG    15,8(0,15)
00004662 E3F0 D0E0 0024          000000E0   6337          STG   15,224(0,13)
00004668 E3F0 2068 0014          00000068   6338          LGF   15,104(0,2)
0000466E E3F0 D0E8 0024          000000E8   6339          STG   15,232(0,13)
00004674 E3F0 2218 0004          00000218   6340          LG    15,536(0,2)
0000467A E3F0 D0F0 0024          000000F0   6341          STG   15,240(0,13)
00004680 E3F0 2228 0004          00000228   6342          LG    15,552(0,2)
                                                                                                                           Page  130 
  Active Usings: @REGION_1933_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004686 E3F0 D0F8 0024          000000F8   6343          STG   15,248(0,13)
0000468C 4110 D0A8               000000A8   6344          LA    1,168(0,13)
00004690 E3F0 C118 0004          000046B8   6345          LG    15,@lit_1933_256 ; rd_kafka_log0
00004696                                    6346 @@gen_label387 DS    0H
00004696 05EF                               6347          BALR  14,15
00004698                                    6348 @@gen_label388 DS    0H
00004698                                    6349 @L758    DS    0H
                                            6350 * ***
                                            6351 * ***   # 602 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                            6352 * ***
                                            6353 * ***           if (rktp->rktp_stored_offset <= rktp->rktp_committed_o\
                                            6354 * ffset)
00004698                                    6355 @L754    DS    0H
00004698 E3F0 2218 0004          00000218   6356          LG    15,536(0,2) ; offset of rktp_stored_offset in rd_kafka_t*
                                                                oppar_s
0000469E E3F0 2228 0020          00000228   6357          CG    15,552(0,2)
000046A4 4720 C138               000046D8   6358          BH    @L759
                                            6359 * ***                   return RD_KAFKA_RESP_ERR_NO_ERROR;
000046A8 A7F9 0000               00000000   6360          LGHI  15,0        ; 0
000046AC 47F0 C1BE               0000475E   6361          B     @ret_lab_1933
000046B0                                    6362          DS    0D
000046B0 00000100                           6363 @FRAMESIZE_1933 DC F'256'
000046B4 00000000
000046B8 0000000000000000                   6364 @lit_1933_256 DC AD(rd_kafka_log0)
000046C0 0000000000006D48                   6365 @lit_1933_255 DC AD(@strings@)
000046C8 0000000000002DC8                   6366 @lit_1933_259 DC AD(rd_kafka_offset_file_commit)
000046D0 00000000000041B8                   6367 @lit_1933_260 DC AD(rd_kafka_offset_broker_commit)
000046D8                                    6368 @L759    DS    0H
                                            6369 * ***
                                            6370 * ***
                                            6371 * ***           if (rktp->rktp_stored_offset <= rktp->rktp_committing_\
                                            6372 * offset)
000046D8 E3F0 2218 0004          00000218   6373          LG    15,536(0,2) ; offset of rktp_stored_offset in rd_kafka_t*
                                                                oppar_s
000046DE E3F0 2220 0020          00000220   6374          CG    15,544(0,2)
000046E4 4720 C198               00004738   6375          BH    @L761
                                            6376 * ***                   return RD_KAFKA_RESP_ERR__PREV_IN_PROGRESS;
000046E8 A7F9 FF4F               0000FF4F   6377          LGHI  15,-177     ; -177
000046EC 47F0 C1BE               0000475E   6378          B     @ret_lab_1933
                                            6379 * ***
                                            6380 * ***           switch (rktp->rktp_rkt->rkt_conf.offset_store_method)
                                            6381 * ***           {
                                            6382 * ***           case RD_KAFKA_OFFSET_METHOD_FILE:
000046F0                                    6383 @L763    DS    0H
                                            6384 * ***                   return rd_kafka_offset_file_commit(rktp);
000046F0 E320 D0A8 0024          000000A8   6385          STG   2,168(0,13)
000046F6 4110 D0A8               000000A8   6386          LA    1,168(0,13)
000046FA E3F0 C128 0004          000046C8   6387          LG    15,@lit_1933_259 ; rd_kafka_offset_file_commit
00004700                                    6388 @@gen_label391 DS    0H
00004700 05EF                               6389          BALR  14,15
00004702                                    6390 @@gen_label392 DS    0H
00004702 B914 00FF                          6391          LGFR  15,15
                                                                                                                           Page  131 
  Active Usings: @REGION_1933_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004706 47F0 C1BE               0000475E   6392          B     @ret_lab_1933
                                            6393 * ***           case RD_KAFKA_OFFSET_METHOD_BROKER:
0000470A                                    6394 @L764    DS    0H
                                            6395 * ***                   return rd_kafka_offset_broker_commit(rktp, rea\
                                            6396 * son);
0000470A E320 D0A8 0024          000000A8   6397          STG   2,168(0,13)
00004710 E3F0 3008 0004          00000008   6398          LG    15,8(0,3)   ; reason
00004716 E3F0 D0B0 0024          000000B0   6399          STG   15,176(0,13)
0000471C 4110 D0A8               000000A8   6400          LA    1,168(0,13)
00004720 E3F0 C130 0004          000046D0   6401          LG    15,@lit_1933_260 ; rd_kafka_offset_broker_commit
00004726                                    6402 @@gen_label393 DS    0H
00004726 05EF                               6403          BALR  14,15
00004728                                    6404 @@gen_label394 DS    0H
00004728 B914 00FF                          6405          LGFR  15,15
0000472C 47F0 C1BE               0000475E   6406          B     @ret_lab_1933
                                            6407 * ***           default:
                                            6408 * ***
                                            6409 * ***                   return RD_KAFKA_RESP_ERR__INVALID_ARG;
00004730                                    6410 @L765    DS    0H
00004730 A7F9 FF46               0000FF46   6411          LGHI  15,-186     ; -186
00004734 47F0 C1BE               0000475E   6412          B     @ret_lab_1933
                                            6413 * ***           }
00004738                                    6414 @L761    DS    0H
00004738 E3F0 2060 0004          00000060   6415          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000473E 58F0 F3FC               000003FC   6416          L     15,1020(0,15) ; offset of offset_store_method in rd_kafk*
                                                                a_topic_conf_s
00004742 A7FE 0001               00000001   6417          CHI   15,1
00004746 4740 C190               00004730   6418          BL    @L765
0000474A A7FE 0001               00000001   6419          CHI   15,1
0000474E 4780 C150               000046F0   6420          BE    @L763
00004752 A7FE 0002               00000002   6421          CHI   15,2
00004756 4780 C16A               0000470A   6422          BE    @L764
0000475A 47F0 C190               00004730   6423          B     @L765
                                            6424 * ***   }
0000475E                                    6425 @ret_lab_1933 DS 0H
                                            6426 * * **** Start of Epilogue
                                            6427          DCCEPIL
0000475E                                    6428+         ds 0h                                                          01-DCCEP
                                            6429+* Epilog
0000475E D707 D088 D088 00000088 00000088   6430+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004764 E3D0 D080 0004          00000080   6431+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000476A E3C0 D090 0004          00000090   6432+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004770 E3B0 C018 0004          00000018   6433+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004776 E3C0 B010 0021          00000010   6434+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000477C E3E0 D008 0004          00000008   6435+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004782 EB1C D020 0004          00000020   6436+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004788 078E                               6437+         bcr 8,14                if same dsab, just return              01-DCCEP
0000478A E3F0 D010 0024          00000010   6438+         stg 15,16(0,13)         save return code                       01-DCCEP
00004790 E300 D018 0024          00000018   6439+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004796 E3F0 D090 0004          00000090   6440+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000479C E3F0 F018 0004          00000018   6441+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000047A2 47F0 F040               00000040   6442+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page  132 
  Active Usings: @REGION_1933_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6443+* End of Epilog
                                            6444 * * **** End of Epilogue
                                            6445          DROP  12
                                            6446 *
                                            6447 *   DSECT for automatic variables in "rd_kafka_offset_commit"
                                            6448 *      (FUNCTION #1933)
                                            6449 *
00000000                00000000 000000A8   6450 @AUTO#rd_kafka_offset_commit DSECT
00000000                                    6451          DS    XL168
                                            6452 *
000047A6                00000000 00006B1A   6453 @CODE    CSECT
                                            6454 *
                                            6455 *
                                            6456 *
                                            6457 * ....... start of rd_kafka_offset_sync
                                            6458 rd_kafka_offset_sync ALIAS X'99846D92818692816D968686A285A36DA2A89583'
000047A6                                    6459 @LNAME1919 DS  0H
000047A6 00000014                           6460          DC    X'00000014'
000047AA 99846D9281869281                   6461          DC    C'rd_kafka_offset_sync'
000047BE 00                                 6462          DC    X'00'
                                            6463 rd_kafka_offset_sync DCCPRLG CINDEX=1919,BASER=12,FRAME=176,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1919
                                            6464          macro
                                            6465          dccextrn &m
                                            6466          gblc    &$dccext(1000)
                                            6467          gbla    &$dccexti
                                            6468          lcla    &i
                                            6469 &$dccext(&$dccexti+1) setc    '&m'
                                            6470 &i       seta    1
                                            6471 .loop    aif    (&i gt &$dccexti).around
                                            6472          aif    ('&$dccext(&i)' eq '&m').getout
                                            6473 &i       seta    &i+1
                                            6474          ago     .loop
                                            6475 .around  anop
                                            6476 &$dccexti seta &$dccexti+1
                                            6477          extrn  &m
                                            6478 .getout  anop
                                            6479          mend
000047C0                                    6480+$eye0107    ds    0d                                                    02-DCCCA
000047C0 C4C3C3                             6481+         dc cl3'DCC'                                                    02-DCCCA
000047C3 01                                 6482+         dc xl1'01' format one                                          02-DCCCA
000047C4 00000000                           6483+         dc a(0)                                                        02-DCCCA
000047C8 0000000000004832                   6484+         dc ad(@PER_1919)                                               02-DCCCA
000047D0 00000000000000B0                   6485+         dc ad(176)                                                     02-DCCCA
000047D8 0000000000000000                   6486+         dc ad(0)                                                       02-DCCCA
000047E0 0000000000001000                   6487+         dc ad(4096)                                                    02-DCCCA
000047E8 20                                 6488+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000047E9 03                                 6489+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000047EA 03                                 6490+         dc al1(3)                                                      02-DCCCA
000047EB 08                                 6491+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000047EC 00                                 6492+         dc bl.8'00000000'                                              02-DCCCA
000047ED 000000                             6493+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page  133 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000047F0 00000000000047A6                   6494+         dc ad(@LNAME1919)                                              02-DCCCA
000047F8                                    6495+         ds 0d                                                          02-DCCCA
000047F8 00000000000047C0                   6496+         dc ad($eye0107)                                                02-DCCCA
00004800 0000000000000000                   6497+         dc ad(0)                                                       02-DCCCA
00004808                                    6498+         ds    0d                                                       01-DCCPR
                                            6499+         entry rd_kafka_offset_sync                                     01-DCCPR
00004808                                    6500+rd_kafka_offset_sync ds 0d                                              01-DCCPR
00004808                                    6501+@REGION_1919_1 ds 0h                                                    01-DCCPR
00004808 EBEC D008 0024          00000008   6502+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000480E E3E0 D088 0004          00000088   6503+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004814 E3C0 D090 0004          00000090   6504+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000481A B904 002E                          6505+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000481E E3B0 C018 0004          00000018   6506+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004824 A7EB 00B0               000000B0   6507+         aghi  14,176              increase by frame size               01-DCCPR
00004828 E3E0 C020 0021          00000020   6508+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000482E 4720 B020               00000020   6509+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004832                                    6510+@PER_1919 ds   0h                                                       01-DCCPR
00004832 EBDE 2080 0024          00000080   6511+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004838 E3C0 2090 0024          00000090   6512+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000483E B904 00D2                          6513+         lgr   13,2                set real frame pointer               01-DCCPR
00004842 B904 00CF                          6514+         lgr   12,15               set base reg                         01-DCCPR
                        00004808            6515+         using @REGION_1919_1,12                                        01-DCCPR
                                            6516 * ******* End of Prologue
                                            6517 * *
                                            6518 * ***           switch (rktp->rktp_rkt->rkt_conf.offset_store_method)
00004846 47F0 C080               00004888   6519          B     @L766
00004850                                    6520          DS    0D
00004850 000000B0                           6521 @FRAMESIZE_1919 DC F'176'
00004854 00000000
00004858 0000000000002B80                   6522 @lit_1919_263 DC AD(rd_kafka_offset_file_sync)
                                            6523 * ***           {
                                            6524 * ***           case RD_KAFKA_OFFSET_METHOD_FILE:
00004860                                    6525 @L768    DS    0H
                                            6526 * ***                   return rd_kafka_offset_file_sync(rktp);
00004860 E3F0 1000 0004          00000000   6527          LG    15,0(0,1)   ; rktp
00004866 E3F0 D0A8 0024          000000A8   6528          STG   15,168(0,13)
0000486C 4110 D0A8               000000A8   6529          LA    1,168(0,13)
00004870 E3F0 C050 0004          00004858   6530          LG    15,@lit_1919_263 ; rd_kafka_offset_file_sync
00004876                                    6531 @@gen_label395 DS    0H
00004876 05EF                               6532          BALR  14,15
00004878                                    6533 @@gen_label396 DS    0H
00004878 B914 00FF                          6534          LGFR  15,15
0000487C 47F0 C09C               000048A4   6535          B     @ret_lab_1919
                                            6536 * ***           default:
                                            6537 * ***                   return RD_KAFKA_RESP_ERR__INVALID_ARG;
00004880                                    6538 @L769    DS    0H
00004880 A7F9 FF46               0000FF46   6539          LGHI  15,-186     ; -186
00004884 47F0 C09C               000048A4   6540          B     @ret_lab_1919
                                            6541 * ***           }
00004888                                    6542 @L766    DS    0H
00004888 E3F0 1000 0004          00000000   6543          LG    15,0(0,1)   ; rktp
0000488E E3F0 F060 0004          00000060   6544          LG    15,96(0,15) ; offset of rktp_rkt in rd_kafka_toppar_s
                                                                                                                           Page  134 
  Active Usings: @REGION_1919_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004894 58F0 F3FC               000003FC   6545          L     15,1020(0,15) ; offset of offset_store_method in rd_kafk*
                                                                a_topic_conf_s
00004898 A7FE 0001               00000001   6546          CHI   15,1
0000489C 4780 C058               00004860   6547          BE    @L768
000048A0 47F0 C078               00004880   6548          B     @L769
                                            6549 * ***   }
000048A4                                    6550 @ret_lab_1919 DS 0H
                                            6551 * * **** Start of Epilogue
                                            6552          DCCEPIL
000048A4                                    6553+         ds 0h                                                          01-DCCEP
                                            6554+* Epilog
000048A4 D707 D088 D088 00000088 00000088   6555+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000048AA E3D0 D080 0004          00000080   6556+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000048B0 E3C0 D090 0004          00000090   6557+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000048B6 E3B0 C018 0004          00000018   6558+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000048BC E3C0 B010 0021          00000010   6559+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000048C2 E3E0 D008 0004          00000008   6560+         lg  14,8(0,13)          load up return address                 01-DCCEP
000048C8 EB1C D020 0004          00000020   6561+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000048CE 078E                               6562+         bcr 8,14                if same dsab, just return              01-DCCEP
000048D0 E3F0 D010 0024          00000010   6563+         stg 15,16(0,13)         save return code                       01-DCCEP
000048D6 E300 D018 0024          00000018   6564+         stg 0,24(0,13)          save more return code                  01-DCCEP
000048DC E3F0 D090 0004          00000090   6565+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000048E2 E3F0 F018 0004          00000018   6566+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000048E8 47F0 F040               00000040   6567+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6568+* End of Epilog
                                            6569 * * **** End of Epilogue
                                            6570          DROP  12
                                            6571 *
                                            6572 *   DSECT for automatic variables in "rd_kafka_offset_sync"
                                            6573 *      (FUNCTION #1919)
                                            6574 *
00000000                00000000 000000A8   6575 @AUTO#rd_kafka_offset_sync DSECT
00000000                                    6576          DS    XL168
                                            6577 *
000048EC                00000000 00006B1A   6578 @CODE    CSECT
                                            6579 *
                                            6580 *
                                            6581 *
                                            6582 * ....... start of rd_kafka_offset_store
                                            6583 rd_kafka_offset_store ALIAS X'99846D92818692816D968686A285A36DA2A396998*
                                                                5'
000048EC                                    6584 @LNAME599 DS   0H
000048EC 00000015                           6585          DC    X'00000015'
000048F0 99846D9281869281                   6586          DC    C'rd_kafka_offset_store'
00004905 00                                 6587          DC    X'00'
                                            6588 rd_kafka_offset_store DCCPRLG CINDEX=599,BASER=12,FRAME=216,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME599
                                            6589          macro
                                            6590          dccextrn &m
                                            6591          gblc    &$dccext(1000)
                                            6592          gbla    &$dccexti
                                            6593          lcla    &i
                                                                                                                           Page  135 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6594 &$dccext(&$dccexti+1) setc    '&m'
                                            6595 &i       seta    1
                                            6596 .loop    aif    (&i gt &$dccexti).around
                                            6597          aif    ('&$dccext(&i)' eq '&m').getout
                                            6598 &i       seta    &i+1
                                            6599          ago     .loop
                                            6600 .around  anop
                                            6601 &$dccexti seta &$dccexti+1
                                            6602          extrn  &m
                                            6603 .getout  anop
                                            6604          mend
00004908                                    6605+$eye0110    ds    0d                                                    02-DCCCA
00004908 C4C3C3                             6606+         dc cl3'DCC'                                                    02-DCCCA
0000490B 01                                 6607+         dc xl1'01' format one                                          02-DCCCA
0000490C 00000000                           6608+         dc a(0)                                                        02-DCCCA
00004910 000000000000497A                   6609+         dc ad(@PER_599)                                                02-DCCCA
00004918 00000000000000D8                   6610+         dc ad(216)                                                     02-DCCCA
00004920 0000000000000000                   6611+         dc ad(0)                                                       02-DCCCA
00004928 0000000000001000                   6612+         dc ad(4096)                                                    02-DCCCA
00004930 20                                 6613+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004931 03                                 6614+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004932 03                                 6615+         dc al1(3)                                                      02-DCCCA
00004933 08                                 6616+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004934 00                                 6617+         dc bl.8'00000000'                                              02-DCCCA
00004935 000000                             6618+         dc al3(0)                                                      02-DCCCA
00004938 00000000000048EC                   6619+         dc ad(@LNAME599)                                               02-DCCCA
00004940                                    6620+         ds 0d                                                          02-DCCCA
00004940 0000000000004908                   6621+         dc ad($eye0110)                                                02-DCCCA
00004948 0000000000000000                   6622+         dc ad(0)                                                       02-DCCCA
00004950                                    6623+         ds    0d                                                       01-DCCPR
                                            6624+         entry rd_kafka_offset_store                                    01-DCCPR
00004950                                    6625+rd_kafka_offset_store ds 0d                                             01-DCCPR
00004950                                    6626+@REGION_599_1 ds 0h                                                     01-DCCPR
00004950 EBEC D008 0024          00000008   6627+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004956 E3E0 D088 0004          00000088   6628+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000495C E3C0 D090 0004          00000090   6629+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004962 B904 002E                          6630+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004966 E3B0 C018 0004          00000018   6631+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000496C A7EB 00D8               000000D8   6632+         aghi  14,216              increase by frame size               01-DCCPR
00004970 E3E0 C020 0021          00000020   6633+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004976 4720 B020               00000020   6634+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000497A                                    6635+@PER_599 ds    0h                                                       01-DCCPR
0000497A EBDE 2080 0024          00000080   6636+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004980 E3C0 2090 0024          00000090   6637+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004986 B904 00D2                          6638+         lgr   13,2                set real frame pointer               01-DCCPR
0000498A B904 00CF                          6639+         lgr   12,15               set base reg                         01-DCCPR
                        00004950            6640+         using @REGION_599_1,12                                         01-DCCPR
0000498E B904 0041                          6641          LGR   4,1         ; ptr to parm area
                                            6642 * ******* End of Prologue
                                            6643 * *
                                            6644 * ***           rd_kafka_topic_t *rkt = rd_kafka_topic_proper(app_rkt)\
                                            6645 * ;
                                                                                                                           Page  136 
  Active Usings: @REGION_599_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004992 E3F0 4000 0004          00000000   6646          LG    15,0(0,4)   ; app_rkt
00004998 E3F0 D0B0 0024          000000B0   6647          STG   15,176(0,13)
0000499E 4110 D0B0               000000B0   6648          LA    1,176(0,13)
000049A2 E3F0 C0E0 0004          00004A30   6649          LG    15,@lit_599_266 ; rd_kafka_topic_proper
000049A8                                    6650 @@gen_label397 DS    0H
000049A8 05EF                               6651          BALR  14,15
000049AA                                    6652 @@gen_label398 DS    0H
000049AA B904 002F                          6653          LGR   2,15
                                            6654 * ***      rd_kafka_toppar_t *rktp;
                                            6655 * ***
                                            6656 * ***
                                            6657 * ***      rwlock_rdlock(&(rkt)->rkt_lock);
000049AE 41F0 2048               00000048   6658          LA    15,72(0,2)
000049B2 E3F0 D0B0 0024          000000B0   6659          STG   15,176(0,13)
000049B8 4110 D0B0               000000B0   6660          LA    1,176(0,13)
000049BC E3F0 C0E8 0004          00004A38   6661          LG    15,@lit_599_267 ; rwlock_rdlock
000049C2                                    6662 @@gen_label399 DS    0H
000049C2 05EF                               6663          BALR  14,15
000049C4                                    6664 @@gen_label400 DS    0H
                                            6665 * ***      if (!(rktp = rd_kafka_toppar_get0(__FUNCTION__,655,rkt,part\
                                            6666 * ition,0))) {
000049C4 E3F0 C0F8 0004          00004A48   6667          LG    15,@lit_599_268
000049CA 41F0 F1FC               000001FC   6668          LA    15,508(0,15)
000049CE E3F0 D0B0 0024          000000B0   6669          STG   15,176(0,13)
000049D4 E548 D0B8 028F          000000B8   6670          MVGHI 184(13),655
000049DA E320 D0C0 0024          000000C0   6671          STG   2,192(0,13)
000049E0 E3F0 400C 0014          0000000C   6672          LGF   15,12(0,4)  ; partition
000049E6 E3F0 D0C8 0024          000000C8   6673          STG   15,200(0,13)
000049EC D707 D0D0 D0D0 000000D0 000000D0   6674          XC    208(8,13),208(13)
000049F2 4110 D0B0               000000B0   6675          LA    1,176(0,13)
000049F6 E3F0 C0F0 0004          00004A40   6676          LG    15,@lit_599_269 ; rd_kafka_toppar_get0
000049FC                                    6677 @@gen_label401 DS    0H
000049FC 05EF                               6678          BALR  14,15
000049FE                                    6679 @@gen_label402 DS    0H
000049FE B904 003F                          6680          LGR   3,15
00004A02 B902 00F3                          6681          LTGR  15,3
00004A06 4770 C120               00004A70   6682          BNZ   @L770
                                            6683 * ***         rwlock_rdunlock(&(rkt)->rkt_lock);
00004A0A 41F0 2048               00000048   6684          LA    15,72(0,2)
00004A0E E3F0 D0B0 0024          000000B0   6685          STG   15,176(0,13)
00004A14 4110 D0B0               000000B0   6686          LA    1,176(0,13)
00004A18 E3F0 C100 0004          00004A50   6687          LG    15,@lit_599_270 ; rwlock_rdunlock
00004A1E                                    6688 @@gen_label404 DS    0H
00004A1E 05EF                               6689          BALR  14,15
00004A20                                    6690 @@gen_label405 DS    0H
                                            6691 * ***         return RD_KAFKA_RESP_ERR__UNKNOWN_PARTITION;
00004A20 A7F9 FF42               0000FF42   6692          LGHI  15,-190     ; -190
00004A24 47F0 C190               00004AE0   6693          B     @ret_lab_599
00004A28                                    6694          DS    0D
00004A28 000000D8                           6695 @FRAMESIZE_599 DC F'216'
00004A2C 00000000
00004A30 0000000000000000                   6696 @lit_599_266 DC AD(rd_kafka_topic_proper)
                                                                                                                           Page  137 
  Active Usings: @REGION_599_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004A38 0000000000000000                   6697 @lit_599_267 DC AD(rwlock_rdlock)
00004A40 0000000000000000                   6698 @lit_599_269 DC AD(rd_kafka_toppar_get0)
00004A48 0000000000006B20                   6699 @lit_599_268 DC AD(@DATA)
00004A50 0000000000000000                   6700 @lit_599_270 DC AD(rwlock_rdunlock)
00004A58 0000000000001A80                   6701 @lit_599_274 DC AD(rd_kafka_offset_store0)
00004A60 0000000000000698                   6702 @lit_599_275 DC AD(rd_refcnt_sub0)
00004A68 0000000000000000                   6703 @lit_599_276 DC AD(rd_kafka_toppar_destroy_final)
                                            6704 * ***      }
00004A70                                    6705 @L770    DS    0H
                                            6706 * ***      rwlock_rdunlock(&(rkt)->rkt_lock);
00004A70 41F0 2048               00000048   6707          LA    15,72(0,2)
00004A74 E3F0 D0B0 0024          000000B0   6708          STG   15,176(0,13)
00004A7A 4110 D0B0               000000B0   6709          LA    1,176(0,13)
00004A7E E3F0 C100 0004          00004A50   6710          LG    15,@lit_599_270 ; rwlock_rdunlock
00004A84                                    6711 @@gen_label406 DS    0H
00004A84 05EF                               6712          BALR  14,15
00004A86                                    6713 @@gen_label407 DS    0H
                                            6714 * ***
                                            6715 * ***      rd_kafka_offset_store0(rktp, offset+1, 1);
00004A86 E330 D0B0 0024          000000B0   6716          STG   3,176(0,13)
00004A8C A7F9 0001               00000001   6717          LGHI  15,1        ; 1
00004A90 E3F0 4010 0008          00000010   6718          AG    15,16(0,4)
00004A96 E3F0 D0B8 0024          000000B8   6719          STG   15,184(0,13)
00004A9C E548 D0C0 0001          000000C0   6720          MVGHI 192(13),1
00004AA2 4110 D0B0               000000B0   6721          LA    1,176(0,13)
00004AA6 E3F0 C108 0004          00004A58   6722          LG    15,@lit_599_274 ; rd_kafka_offset_store0
00004AAC                                    6723 @@gen_label408 DS    0H
00004AAC 05EF                               6724          BALR  14,15
00004AAE                                    6725 @@gen_label409 DS    0H
                                            6726 * ***
                                            6727 * ***      do { rd_kafka_toppar_t *_RKTP = (rktp); if (((rd_refcnt_sub\
                                            6728 * 0(&_RKTP->rktp_refcnt) == 0))) rd_kafka_toppar_destroy_final(_RKTP);\
                                            6729 *  } while (0);
00004AAE                                    6730 @L771    DS    0H
00004AAE 41F0 3090               00000090   6731          LA    15,144(0,3)
00004AB2 E3F0 D0B0 0024          000000B0   6732          STG   15,176(0,13)
00004AB8 4110 D0B0               000000B0   6733          LA    1,176(0,13)
00004ABC E3F0 C110 0004          00004A60   6734          LG    15,@lit_599_275 ; rd_refcnt_sub0
00004AC2                                    6735 @@gen_label410 DS    0H
00004AC2 05EF                               6736          BALR  14,15
00004AC4                                    6737 @@gen_label411 DS    0H
00004AC4 12FF                               6738          LTR   15,15
00004AC6 4770 C18C               00004ADC   6739          BNE   @L774
00004ACA E330 D0B0 0024          000000B0   6740          STG   3,176(0,13)
00004AD0 4110 D0B0               000000B0   6741          LA    1,176(0,13)
00004AD4 E3F0 C118 0004          00004A68   6742          LG    15,@lit_599_276 ; rd_kafka_toppar_destroy_final
00004ADA                                    6743 @@gen_label413 DS    0H
00004ADA 05EF                               6744          BALR  14,15
00004ADC                                    6745 @@gen_label414 DS    0H
00004ADC                                    6746 @L774    DS    0H
                                            6747 * ***
                                            6748 * ***      return RD_KAFKA_RESP_ERR_NO_ERROR;
                                                                                                                           Page  138 
  Active Usings: @REGION_599_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004ADC A7F9 0000               00000000   6749          LGHI  15,0        ; 0
                                            6750 * ***   }
00004AE0                                    6751 @ret_lab_599 DS 0H
                                            6752 * * **** Start of Epilogue
                                            6753          DCCEPIL
00004AE0                                    6754+         ds 0h                                                          01-DCCEP
                                            6755+* Epilog
00004AE0 D707 D088 D088 00000088 00000088   6756+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004AE6 E3D0 D080 0004          00000080   6757+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004AEC E3C0 D090 0004          00000090   6758+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004AF2 E3B0 C018 0004          00000018   6759+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004AF8 E3C0 B010 0021          00000010   6760+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004AFE E3E0 D008 0004          00000008   6761+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004B04 EB1C D020 0004          00000020   6762+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004B0A 078E                               6763+         bcr 8,14                if same dsab, just return              01-DCCEP
00004B0C E3F0 D010 0024          00000010   6764+         stg 15,16(0,13)         save return code                       01-DCCEP
00004B12 E300 D018 0024          00000018   6765+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004B18 E3F0 D090 0004          00000090   6766+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004B1E E3F0 F018 0004          00000018   6767+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004B24 47F0 F040               00000040   6768+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6769+* End of Epilog
                                            6770 * * **** End of Epilogue
                                            6771          DROP  12
                                            6772 *
                                            6773 *   DSECT for automatic variables in "rd_kafka_offset_store"
                                            6774 *      (FUNCTION #599)
                                            6775 *
00000000                00000000 000000A8   6776 @AUTO#rd_kafka_offset_store DSECT
00000000                                    6777          DS    XL168
                                            6778 *
00004B28                00000000 00006B1A   6779 @CODE    CSECT
                                            6780 *
                                            6781 *
                                            6782 *
                                            6783 * ....... start of rd_kafka_offsets_store
                                            6784 rd_kafka_offsets_store ALIAS X'99846D92818692816D968686A285A3A26DA2A396*
                                                                9985'
00004B28                                    6785 @LNAME600 DS   0H
00004B28 00000016                           6786          DC    X'00000016'
00004B2C 99846D9281869281                   6787          DC    C'rd_kafka_offsets_store'
00004B42 00                                 6788          DC    X'00'
                                            6789 rd_kafka_offsets_store DCCPRLG CINDEX=600,BASER=12,FRAME=200,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME600
                                            6790          macro
                                            6791          dccextrn &m
                                            6792          gblc    &$dccext(1000)
                                            6793          gbla    &$dccexti
                                            6794          lcla    &i
                                            6795 &$dccext(&$dccexti+1) setc    '&m'
                                            6796 &i       seta    1
                                            6797 .loop    aif    (&i gt &$dccexti).around
                                            6798          aif    ('&$dccext(&i)' eq '&m').getout
                                                                                                                           Page  139 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            6799 &i       seta    &i+1
                                            6800          ago     .loop
                                            6801 .around  anop
                                            6802 &$dccexti seta &$dccexti+1
                                            6803          extrn  &m
                                            6804 .getout  anop
                                            6805          mend
00004B48                                    6806+$eye0113    ds    0d                                                    02-DCCCA
00004B48 C4C3C3                             6807+         dc cl3'DCC'                                                    02-DCCCA
00004B4B 01                                 6808+         dc xl1'01' format one                                          02-DCCCA
00004B4C 00000000                           6809+         dc a(0)                                                        02-DCCCA
00004B50 0000000000004BBA                   6810+         dc ad(@PER_600)                                                02-DCCCA
00004B58 00000000000000C8                   6811+         dc ad(200)                                                     02-DCCCA
00004B60 0000000000000000                   6812+         dc ad(0)                                                       02-DCCCA
00004B68 0000000000001000                   6813+         dc ad(4096)                                                    02-DCCCA
00004B70 20                                 6814+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004B71 03                                 6815+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004B72 03                                 6816+         dc al1(3)                                                      02-DCCCA
00004B73 08                                 6817+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004B74 00                                 6818+         dc bl.8'00000000'                                              02-DCCCA
00004B75 000000                             6819+         dc al3(0)                                                      02-DCCCA
00004B78 0000000000004B28                   6820+         dc ad(@LNAME600)                                               02-DCCCA
00004B80                                    6821+         ds 0d                                                          02-DCCCA
00004B80 0000000000004B48                   6822+         dc ad($eye0113)                                                02-DCCCA
00004B88 0000000000000000                   6823+         dc ad(0)                                                       02-DCCCA
00004B90                                    6824+         ds    0d                                                       01-DCCPR
                                            6825+         entry rd_kafka_offsets_store                                   01-DCCPR
00004B90                                    6826+rd_kafka_offsets_store ds 0d                                            01-DCCPR
00004B90                                    6827+@REGION_600_1 ds 0h                                                     01-DCCPR
00004B90 EBEC D008 0024          00000008   6828+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004B96 E3E0 D088 0004          00000088   6829+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004B9C E3C0 D090 0004          00000090   6830+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004BA2 B904 002E                          6831+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004BA6 E3B0 C018 0004          00000018   6832+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004BAC A7EB 00C8               000000C8   6833+         aghi  14,200              increase by frame size               01-DCCPR
00004BB0 E3E0 C020 0021          00000020   6834+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004BB6 4720 B020               00000020   6835+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004BBA                                    6836+@PER_600 ds    0h                                                       01-DCCPR
00004BBA EBDE 2080 0024          00000080   6837+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004BC0 E3C0 2090 0024          00000090   6838+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004BC6 B904 00D2                          6839+         lgr   13,2                set real frame pointer               01-DCCPR
00004BCA B904 00CF                          6840+         lgr   12,15               set base reg                         01-DCCPR
                        00004B90            6841+         using @REGION_600_1,12                                         01-DCCPR
00004BCE B904 0071                          6842          LGR   7,1         ; ptr to parm area
                                            6843 * ******* End of Prologue
                                            6844 * *
00004BD2 E340 7008 0004          00000008   6845          LG    4,8(0,7)    ; offsets
                                            6846 * ***           int i;
                                            6847 * ***           int ok_cnt = 0;
00004BD8 A738 0000               00000000   6848          LHI   3,0         ; 0
                                            6849 * ***
                                            6850 * ***           if (rk->rk_conf.enable_auto_offset_store)
                                                                                                                           Page  140 
  Active Usings: @REGION_600_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004BDC E3F0 7000 0004          00000000   6851          LG    15,0(0,7)   ; rk
00004BE2 E3F0 F764 0012          00000764   6852          LT    15,1892(0,15) ; offset of enable_auto_offset_store in rd*
                                                                _kafka_conf_s
00004BE8 4780 C090               00004C20   6853          BZ    @L775
                                            6854 * ***                   return RD_KAFKA_RESP_ERR__INVALID_ARG;
00004BEC A7F9 FF46               0000FF46   6855          LGHI  15,-186     ; -186
00004BF0 47F0 C16C               00004CFC   6856          B     @ret_lab_600
00004BF8                                    6857          DS    0D
00004BF8 000000C8                           6858 @FRAMESIZE_600 DC F'200'
00004BFC 00000000
00004C00 0000000000000000                   6859 @lit_600_282 DC AD(rd_kafka_topic_partition_get_toppar)
00004C08 0000000000001A80                   6860 @lit_600_283 DC AD(rd_kafka_offset_store0)
00004C10 0000000000000698                   6861 @lit_600_284 DC AD(rd_refcnt_sub0)
00004C18 0000000000000000                   6862 @lit_600_285 DC AD(rd_kafka_toppar_destroy_final)
00004C20                                    6863 @L775    DS    0H
                                            6864 * ***
                                            6865 * ***           for (i = 0 ; i < offsets->cnt ; i++) {
00004C20 1823                               6866          LR    2,3         ; i
00004C22 47F0 C144               00004CD4   6867          B     @L777
00004C26                                    6868 @L776    DS    0H
                                            6869 * ***                   rd_kafka_topic_partition_t *rktpar = &offsets-\
                                            6870 * >elems[i];
00004C26 B914 00F2                          6871          LGFR  15,2
00004C2A E310 4008 0004          00000008   6872          LG    1,8(0,4)    ; offset of elems in rd_kafka_topic_partitio*
                                                                n_list_s
00004C30 EBFF 0006 000D          00000006   6873          SLLG  15,15,6(0)  ; *0x40
00004C36 415F 1000               00000000   6874          LA    5,0(15,1)
                                            6875 * ***                   rd_kafka_toppar_t *rktp;
                                            6876 * ***
                                            6877 * ***                   rktp = rd_kafka_topic_partition_get_toppar(rk,\
                                            6878 *  rktpar,
                                            6879 * ***                                                              0);
00004C3A E3F0 7000 0004          00000000   6880          LG    15,0(0,7)   ; rk
00004C40 E3F0 D0B0 0024          000000B0   6881          STG   15,176(0,13)
00004C46 E350 D0B8 0024          000000B8   6882          STG   5,184(0,13)
00004C4C D707 D0C0 D0C0 000000C0 000000C0   6883          XC    192(8,13),192(13)
00004C52 4110 D0B0               000000B0   6884          LA    1,176(0,13)
00004C56 E3F0 C070 0004          00004C00   6885          LG    15,@lit_600_282 ; rd_kafka_topic_partition_get_toppar
00004C5C                                    6886 @@gen_label416 DS    0H
00004C5C 05EF                               6887          BALR  14,15
00004C5E                                    6888 @@gen_label417 DS    0H
00004C5E B904 006F                          6889          LGR   6,15
                                            6890 * ***                   if (!rktp) {
00004C62 B902 00F6                          6891          LTGR  15,6
00004C66 4770 C0E4               00004C74   6892          BNZ   @L780
                                            6893 * ***                           rktpar->err = RD_KAFKA_RESP_ERR__UNKNO\
                                            6894 * WN_PARTITION;
00004C6A E54C 5030 FF42          00000030   6895          MVHI  48(5),-190  ; offset of err in rd_kafka_topic_partition_*
                                                                s
                                            6896 * ***                           continue;
00004C70 47F0 C140               00004CD0   6897          B     @L779
                                            6898 * ***                   }
                                                                                                                           Page  141 
  Active Usings: @REGION_600_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004C74                                    6899 @L780    DS    0H
                                            6900 * ***
                                            6901 * ***                   rd_kafka_offset_store0(rktp, rktpar->offset, 1\
                                            6902 * );
00004C74 E360 D0B0 0024          000000B0   6903          STG   6,176(0,13)
00004C7A E3F0 5010 0004          00000010   6904          LG    15,16(0,5)
00004C80 E3F0 D0B8 0024          000000B8   6905          STG   15,184(0,13)
00004C86 E548 D0C0 0001          000000C0   6906          MVGHI 192(13),1
00004C8C 4110 D0B0               000000B0   6907          LA    1,176(0,13)
00004C90 E3F0 C078 0004          00004C08   6908          LG    15,@lit_600_283 ; rd_kafka_offset_store0
00004C96                                    6909 @@gen_label419 DS    0H
00004C96 05EF                               6910          BALR  14,15
00004C98                                    6911 @@gen_label420 DS    0H
                                            6912 * ***                   do { rd_kafka_toppar_t *_RKTP = (rktp); if (((\
                                            6913 * rd_refcnt_sub0(&_RKTP->rktp_refcnt) == 0))) rd_kafka_toppar_destroy_\
                                            6914 * final(_RKTP); } while (0);
00004C98                                    6915 @L781    DS    0H
00004C98 41F0 6090               00000090   6916          LA    15,144(0,6)
00004C9C E3F0 D0B0 0024          000000B0   6917          STG   15,176(0,13)
00004CA2 4110 D0B0               000000B0   6918          LA    1,176(0,13)
00004CA6 E3F0 C080 0004          00004C10   6919          LG    15,@lit_600_284 ; rd_refcnt_sub0
00004CAC                                    6920 @@gen_label421 DS    0H
00004CAC 05EF                               6921          BALR  14,15
00004CAE                                    6922 @@gen_label422 DS    0H
00004CAE 12FF                               6923          LTR   15,15
00004CB0 4770 C136               00004CC6   6924          BNE   @L784
00004CB4 E360 D0B0 0024          000000B0   6925          STG   6,176(0,13)
00004CBA 4110 D0B0               000000B0   6926          LA    1,176(0,13)
00004CBE E3F0 C088 0004          00004C18   6927          LG    15,@lit_600_285 ; rd_kafka_toppar_destroy_final
00004CC4                                    6928 @@gen_label424 DS    0H
00004CC4 05EF                               6929          BALR  14,15
00004CC6                                    6930 @@gen_label425 DS    0H
00004CC6                                    6931 @L784    DS    0H
                                            6932 * ***
                                            6933 * ***                   rktpar->err = RD_KAFKA_RESP_ERR_NO_ERROR;
00004CC6 E54C 5030 0000          00000030   6934          MVHI  48(5),0     ; offset of err in rd_kafka_topic_partition_*
                                                                s
                                            6935 * ***                   ok_cnt++;
00004CCC A73A 0001               00000001   6936          AHI   3,1
                                            6937 * ***           }
00004CD0                                    6938 @L779    DS    0H
00004CD0 A72A 0001               00000001   6939          AHI   2,1
00004CD4                                    6940 @L777    DS    0H
00004CD4 5920 4000               00000000   6941          C     2,0(0,4)
00004CD8 4740 C096               00004C26   6942          BL    @L776
                                            6943 * ***
                                            6944 * ***           return offsets->cnt > 0 && ok_cnt == 0 ?
00004CDC E55C 4000 0000          00000000   6945          CHSI  0(4),0
00004CE2 47D0 C164               00004CF4   6946          BNH   @L785
00004CE6 1233                               6947          LTR   3,3
00004CE8 4770 C164               00004CF4   6948          BNE   @L785
                                            6949 * ***                   RD_KAFKA_RESP_ERR__UNKNOWN_PARTITION :
                                                                                                                           Page  142 
  Active Usings: @REGION_600_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004CEC A7F8 FF42               0000FF42   6950          LHI   15,-190     ; -190
00004CF0 47F0 C168               00004CF8   6951          B     @L786
00004CF4                                    6952 @L785    DS    0H
                                            6953 * ***                   RD_KAFKA_RESP_ERR_NO_ERROR;
00004CF4 A7F8 0000               00000000   6954          LHI   15,0        ; 0
00004CF8                                    6955 @L786    DS    0H
00004CF8 B914 00FF                          6956          LGFR  15,15
                                            6957 * ***   }
00004CFC                                    6958 @ret_lab_600 DS 0H
                                            6959 * * **** Start of Epilogue
                                            6960          DCCEPIL
00004CFC                                    6961+         ds 0h                                                          01-DCCEP
                                            6962+* Epilog
00004CFC D707 D088 D088 00000088 00000088   6963+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004D02 E3D0 D080 0004          00000080   6964+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004D08 E3C0 D090 0004          00000090   6965+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004D0E E3B0 C018 0004          00000018   6966+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004D14 E3C0 B010 0021          00000010   6967+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004D1A E3E0 D008 0004          00000008   6968+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004D20 EB1C D020 0004          00000020   6969+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004D26 078E                               6970+         bcr 8,14                if same dsab, just return              01-DCCEP
00004D28 E3F0 D010 0024          00000010   6971+         stg 15,16(0,13)         save return code                       01-DCCEP
00004D2E E300 D018 0024          00000018   6972+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004D34 E3F0 D090 0004          00000090   6973+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004D3A E3F0 F018 0004          00000018   6974+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004D40 47F0 F040               00000040   6975+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6976+* End of Epilog
                                            6977 * * **** End of Epilogue
                                            6978          DROP  12
                                            6979 *
                                            6980 *   DSECT for automatic variables in "rd_kafka_offsets_store"
                                            6981 *      (FUNCTION #600)
                                            6982 *
00000000                00000000 000000AC   6983 @AUTO#rd_kafka_offsets_store DSECT
00000000                                    6984          DS    XL168
000000A8                                    6985 rd_kafka_offsets_store#ok_cnt#0 DS 1F ; ok_cnt
000000AC                000000AC 000000A8   6986          ORG   @AUTO#rd_kafka_offsets_store+168
000000A8                                    6987 rd_kafka_offsets_store#i#0 DS 1F ; i
                                            6988 *
00004D44                00000000 00006B1A   6989 @CODE    CSECT
                                            6990 *
                                            6991 *
                                            6992 *
                                            6993 * ....... start of rd_kafka_offset_file_term
00004D44                                    6994 @LNAME1934 DS  0H
00004D44 00000019                           6995          DC    X'00000019'
00004D48 99846D9281869281                   6996          DC    C'rd_kafka_offset_file_term'
00004D61 00                                 6997          DC    X'00'
                                            6998 rd_kafka_offset_file_term DCCPRLG CINDEX=1934,BASER=12,FRAME=200,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME1934
                                            6999          macro
                                            7000          dccextrn &m
                                                                                                                           Page  143 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7001          gblc    &$dccext(1000)
                                            7002          gbla    &$dccexti
                                            7003          lcla    &i
                                            7004 &$dccext(&$dccexti+1) setc    '&m'
                                            7005 &i       seta    1
                                            7006 .loop    aif    (&i gt &$dccexti).around
                                            7007          aif    ('&$dccext(&i)' eq '&m').getout
                                            7008 &i       seta    &i+1
                                            7009          ago     .loop
                                            7010 .around  anop
                                            7011 &$dccexti seta &$dccexti+1
                                            7012          extrn  &m
                                            7013 .getout  anop
                                            7014          mend
00004D68                                    7015+$eye0116    ds    0d                                                    02-DCCCA
00004D68 C4C3C3                             7016+         dc cl3'DCC'                                                    02-DCCCA
00004D6B 01                                 7017+         dc xl1'01' format one                                          02-DCCCA
00004D6C 00000000                           7018+         dc a(0)                                                        02-DCCCA
00004D70 0000000000004DDA                   7019+         dc ad(@PER_1934)                                               02-DCCCA
00004D78 00000000000000C8                   7020+         dc ad(200)                                                     02-DCCCA
00004D80 0000000000000000                   7021+         dc ad(0)                                                       02-DCCCA
00004D88 0000000000001000                   7022+         dc ad(4096)                                                    02-DCCCA
00004D90 20                                 7023+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004D91 03                                 7024+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004D92 03                                 7025+         dc al1(3)                                                      02-DCCCA
00004D93 08                                 7026+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004D94 00                                 7027+         dc bl.8'00000000'                                              02-DCCCA
00004D95 000000                             7028+         dc al3(0)                                                      02-DCCCA
00004D98 0000000000004D44                   7029+         dc ad(@LNAME1934)                                              02-DCCCA
00004DA0                                    7030+         ds 0d                                                          02-DCCCA
00004DA0 0000000000004D68                   7031+         dc ad($eye0116)                                                02-DCCCA
00004DA8 0000000000000000                   7032+         dc ad(0)                                                       02-DCCCA
00004DB0                                    7033+         ds    0d                                                       01-DCCPR
00004DB0                                    7034+rd_kafka_offset_file_term ds 0d                                         01-DCCPR
00004DB0                                    7035+@REGION_1934_1 ds 0h                                                    01-DCCPR
00004DB0 EBEC D008 0024          00000008   7036+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004DB6 E3E0 D088 0004          00000088   7037+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004DBC E3C0 D090 0004          00000090   7038+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004DC2 B904 002E                          7039+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004DC6 E3B0 C018 0004          00000018   7040+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004DCC A7EB 00C8               000000C8   7041+         aghi  14,200              increase by frame size               01-DCCPR
00004DD0 E3E0 C020 0021          00000020   7042+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004DD6 4720 B020               00000020   7043+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004DDA                                    7044+@PER_1934 ds   0h                                                       01-DCCPR
00004DDA EBDE 2080 0024          00000080   7045+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004DE0 E3C0 2090 0024          00000090   7046+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004DE6 B904 00D2                          7047+         lgr   13,2                set real frame pointer               01-DCCPR
00004DEA B904 00CF                          7048+         lgr   12,15               set base reg                         01-DCCPR
                        00004DB0            7049+         using @REGION_1934_1,12                                        01-DCCPR
                                            7050 * ******* End of Prologue
                                            7051 * *
                                            7052 * ***           rd_kafka_resp_err_t err = RD_KAFKA_RESP_ERR_NO_ERROR;
                                                                                                                           Page  144 
  Active Usings: @REGION_1934_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004DEE E320 1000 0004          00000000   7053          LG    2,0(0,1)    ; rktp
00004DF4 A738 0000               00000000   7054          LHI   3,0         ; 0
                                            7055 * ***
                                            7056 * ***
                                            7057 * ***           if (rktp->rktp_rkt->rkt_conf.offset_store_sync_interva\
                                            7058 * l_ms > 0) {
00004DF8 E3F0 2060 0004          00000060   7059          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00004DFE E55C F3F8 0000          000003F8   7060          CHSI  1016(15),0
00004E04 47D0 C0A0               00004E50   7061          BNH   @L787
                                            7062 * ***                   rd_kafka_offset_file_sync(rktp);
00004E08 E320 D0B0 0024          000000B0   7063          STG   2,176(0,13)
00004E0E 4110 D0B0               000000B0   7064          LA    1,176(0,13)
00004E12 E3F0 C128 0004          00004ED8   7065          LG    15,@lit_1934_290 ; rd_kafka_offset_file_sync
00004E18                                    7066 @@gen_label430 DS    0H
00004E18 05EF                               7067          BALR  14,15
00004E1A                                    7068 @@gen_label431 DS    0H
                                            7069 * ***         rd_kafka_timer_stop(&rktp->rktp_rkt->rkt_rk->rk_timers,
                                            7070 * ***                   &rktp->rktp_offset_sync_tmr, 1);
00004E1A E3F0 2060 0004          00000060   7071          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00004E20 E3F0 F148 0004          00000148   7072          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00004E26 A719 1010               00001010   7073          LGHI  1,4112      ; 4112
00004E2A 41F1 F000               00000000   7074          LA    15,0(1,15)
00004E2E E3F0 D0B0 0024          000000B0   7075          STG   15,176(0,13)
00004E34 41F0 2328               00000328   7076          LA    15,808(0,2)
00004E38 E3F0 D0B8 0024          000000B8   7077          STG   15,184(0,13)
00004E3E E548 D0C0 0001          000000C0   7078          MVGHI 192(13),1
00004E44 4110 D0B0               000000B0   7079          LA    1,176(0,13)
00004E48 E3F0 C130 0004          00004EE0   7080          LG    15,@lit_1934_292 ; rd_kafka_timer_stop
00004E4E                                    7081 @@gen_label432 DS    0H
00004E4E 05EF                               7082          BALR  14,15
00004E50                                    7083 @@gen_label433 DS    0H
                                            7084 * ***      }
00004E50                                    7085 @L787    DS    0H
                                            7086 * ***
                                            7087 * ***
                                            7088 * ***      rd_kafka_offset_file_close(rktp);
00004E50 E320 D0B0 0024          000000B0   7089          STG   2,176(0,13)
00004E56 4110 D0B0               000000B0   7090          LA    1,176(0,13)
00004E5A E3F0 C138 0004          00004EE8   7091          LG    15,@lit_1934_293 ; rd_kafka_offset_file_close
00004E60                                    7092 @@gen_label434 DS    0H
00004E60 05EF                               7093          BALR  14,15
00004E62                                    7094 @@gen_label435 DS    0H
                                            7095 * ***
                                            7096 * ***      rd_free(rktp->rktp_offset_path);
00004E62 E3F0 2278 0004          00000278   7097          LG    15,632(0,2)
00004E68 E3F0 D0B0 0024          000000B0   7098          STG   15,176(0,13)
00004E6E 4110 D0B0               000000B0   7099          LA    1,176(0,13)
00004E72 E3F0 C140 0004          00004EF0   7100          LG    15,@lit_1934_294 ; rd_free
00004E78                                    7101 @@gen_label436 DS    0H
00004E78 05EF                               7102          BALR  14,15
00004E7A                                    7103 @@gen_label437 DS    0H
                                            7104 * ***      rktp->rktp_offset_path = ((void *)0);
                                                                                                                           Page  145 
  Active Usings: @REGION_1934_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00004E7A A7F9 0000               00000000   7105          LGHI  15,0        ; 0
00004E7E E3F0 2278 0024          00000278   7106          STG   15,632(0,2) ; offset of rktp_offset_path in rd_kafka_top*
                                                                par_s
                                            7107 * ***
                                            7108 * ***           return err;
00004E84 B914 00F3                          7109          LGFR  15,3
                                            7110 * ***   }
                                            7111 * * **** Start of Epilogue
                                            7112          DCCEPIL
00004E88                                    7113+         ds 0h                                                          01-DCCEP
                                            7114+* Epilog
00004E88 D707 D088 D088 00000088 00000088   7115+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004E8E E3D0 D080 0004          00000080   7116+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004E94 E3C0 D090 0004          00000090   7117+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004E9A E3B0 C018 0004          00000018   7118+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004EA0 E3C0 B010 0021          00000010   7119+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004EA6 E3E0 D008 0004          00000008   7120+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004EAC EB1C D020 0004          00000020   7121+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004EB2 078E                               7122+         bcr 8,14                if same dsab, just return              01-DCCEP
00004EB4 E3F0 D010 0024          00000010   7123+         stg 15,16(0,13)         save return code                       01-DCCEP
00004EBA E300 D018 0024          00000018   7124+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004EC0 E3F0 D090 0004          00000090   7125+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004EC6 E3F0 F018 0004          00000018   7126+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004ECC 47F0 F040               00000040   7127+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7128+* End of Epilog
                                            7129 * * **** End of Epilogue
00004ED0                                    7130          DS    0D
00004ED0 000000C8                           7131 @FRAMESIZE_1934 DC F'200'
00004ED4 00000000
00004ED8 0000000000002B80                   7132 @lit_1934_290 DC AD(rd_kafka_offset_file_sync)
00004EE0 0000000000000000                   7133 @lit_1934_292 DC AD(rd_kafka_timer_stop)
00004EE8 0000000000001E98                   7134 @lit_1934_293 DC AD(rd_kafka_offset_file_close)
00004EF0 0000000000000420                   7135 @lit_1934_294 DC AD(rd_free)
                                            7136          DROP  12
                                            7137 *
                                            7138 *   DSECT for automatic variables in "rd_kafka_offset_file_term"
                                            7139 *      (FUNCTION #1934)
                                            7140 *
00000000                00000000 000000AC   7141 @AUTO#rd_kafka_offset_file_term DSECT
00000000                                    7142          DS    XL168
000000A8                                    7143 rd_kafka_offset_file_term#err#0 DS 1F ; err
                                            7144 *
00004EF8                00000000 00006B1A   7145 @CODE    CSECT
                                            7146 *
                                            7147 *
                                            7148 *
                                            7149 * ....... start of rd_kafka_offset_reset_op_cb
00004EF8                                    7150 @LNAME1935 DS  0H
00004EF8 0000001B                           7151          DC    X'0000001B'
00004EFC 99846D9281869281                   7152          DC    C'rd_kafka_offset_reset_op_cb'
00004F17 00                                 7153          DC    X'00'
                                            7154 rd_kafka_offset_reset_op_cb DCCPRLG CINDEX=1935,BASER=12,FRAME=208,ENTR*
                                                                                                                           Page  146 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1935
                                            7155          macro
                                            7156          dccextrn &m
                                            7157          gblc    &$dccext(1000)
                                            7158          gbla    &$dccexti
                                            7159          lcla    &i
                                            7160 &$dccext(&$dccexti+1) setc    '&m'
                                            7161 &i       seta    1
                                            7162 .loop    aif    (&i gt &$dccexti).around
                                            7163          aif    ('&$dccext(&i)' eq '&m').getout
                                            7164 &i       seta    &i+1
                                            7165          ago     .loop
                                            7166 .around  anop
                                            7167 &$dccexti seta &$dccexti+1
                                            7168          extrn  &m
                                            7169 .getout  anop
                                            7170          mend
00004F18                                    7171+$eye0119    ds    0d                                                    02-DCCCA
00004F18 C4C3C3                             7172+         dc cl3'DCC'                                                    02-DCCCA
00004F1B 01                                 7173+         dc xl1'01' format one                                          02-DCCCA
00004F1C 00000000                           7174+         dc a(0)                                                        02-DCCCA
00004F20 0000000000004F8A                   7175+         dc ad(@PER_1935)                                               02-DCCCA
00004F28 00000000000000D0                   7176+         dc ad(208)                                                     02-DCCCA
00004F30 0000000000000000                   7177+         dc ad(0)                                                       02-DCCCA
00004F38 0000000000001000                   7178+         dc ad(4096)                                                    02-DCCCA
00004F40 20                                 7179+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004F41 03                                 7180+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004F42 03                                 7181+         dc al1(3)                                                      02-DCCCA
00004F43 08                                 7182+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004F44 00                                 7183+         dc bl.8'00000000'                                              02-DCCCA
00004F45 000000                             7184+         dc al3(0)                                                      02-DCCCA
00004F48 0000000000004EF8                   7185+         dc ad(@LNAME1935)                                              02-DCCCA
00004F50                                    7186+         ds 0d                                                          02-DCCCA
00004F50 0000000000004F18                   7187+         dc ad($eye0119)                                                02-DCCCA
00004F58 0000000000000000                   7188+         dc ad(0)                                                       02-DCCCA
00004F60                                    7189+         ds    0d                                                       01-DCCPR
00004F60                                    7190+rd_kafka_offset_reset_op_cb ds 0d                                       01-DCCPR
00004F60                                    7191+@REGION_1935_1 ds 0h                                                    01-DCCPR
00004F60 EBEC D008 0024          00000008   7192+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004F66 E3E0 D088 0004          00000088   7193+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004F6C E3C0 D090 0004          00000090   7194+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004F72 B904 002E                          7195+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004F76 E3B0 C018 0004          00000018   7196+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004F7C A7EB 00D0               000000D0   7197+         aghi  14,208              increase by frame size               01-DCCPR
00004F80 E3E0 C020 0021          00000020   7198+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004F86 4720 B020               00000020   7199+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004F8A                                    7200+@PER_1935 ds   0h                                                       01-DCCPR
00004F8A EBDE 2080 0024          00000080   7201+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004F90 E3C0 2090 0024          00000090   7202+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004F96 B904 00D2                          7203+         lgr   13,2                set real frame pointer               01-DCCPR
00004F9A B904 00CF                          7204+         lgr   12,15               set base reg                         01-DCCPR
                        00004F60            7205+         using @REGION_1935_1,12                                        01-DCCPR
                                                                                                                           Page  147 
  Active Usings: @REGION_1935_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7206 * ******* End of Prologue
                                            7207 * *
                                            7208 * ***      rd_kafka_toppar_t *rktp = rko->rko_rktp;
00004F9E E320 1010 0004          00000010   7209          LG    2,16(0,1)   ; rko
00004FA4 E330 2038 0004          00000038   7210          LG    3,56(0,2)   ; offset of rko_rktp in rd_kafka_op_s
                                            7211 * ***      mtx_lock(&(rktp)->rktp_lock);
00004FAA 41F0 30C0               000000C0   7212          LA    15,192(0,3)
00004FAE E3F0 D0B0 0024          000000B0   7213          STG   15,176(0,13)
00004FB4 4110 D0B0               000000B0   7214          LA    1,176(0,13)
00004FB8 E3F0 C100 0004          00005060   7215          LG    15,@lit_1935_297 ; mtx_lock
00004FBE                                    7216 @@gen_label438 DS    0H
00004FBE 05EF                               7217          BALR  14,15
00004FC0                                    7218 @@gen_label439 DS    0H
                                            7219 * ***           rd_kafka_offset_reset(rktp,
                                            7220 * ***                                 rko->rko_u.offset_reset.offset,
                                            7221 * ***                                 rko->rko_err, rko->rko_u.offset_\
                                            7222 * reset.reason);
00004FC0 E330 D0B0 0024          000000B0   7223          STG   3,176(0,13)
00004FC6 E3F0 2070 0004          00000070   7224          LG    15,112(0,2)
00004FCC E3F0 D0B8 0024          000000B8   7225          STG   15,184(0,13)
00004FD2 E3F0 2020 0014          00000020   7226          LGF   15,32(0,2)
00004FD8 E3F0 D0C0 0024          000000C0   7227          STG   15,192(0,13)
00004FDE E3F0 2078 0004          00000078   7228          LG    15,120(0,2)
00004FE4 E3F0 D0C8 0024          000000C8   7229          STG   15,200(0,13)
00004FEA 4110 D0B0               000000B0   7230          LA    1,176(0,13)
00004FEE E3F0 C108 0004          00005068   7231          LG    15,@lit_1935_298 ; rd_kafka_offset_reset
00004FF4                                    7232 @@gen_label440 DS    0H
00004FF4 05EF                               7233          BALR  14,15
00004FF6                                    7234 @@gen_label441 DS    0H
                                            7235 * ***      mtx_unlock(&(rktp)->rktp_lock);
00004FF6 41F0 30C0               000000C0   7236          LA    15,192(0,3)
00004FFA E3F0 D0B0 0024          000000B0   7237          STG   15,176(0,13)
00005000 4110 D0B0               000000B0   7238          LA    1,176(0,13)
00005004 E3F0 C110 0004          00005070   7239          LG    15,@lit_1935_299 ; mtx_unlock
0000500A                                    7240 @@gen_label442 DS    0H
0000500A 05EF                               7241          BALR  14,15
0000500C                                    7242 @@gen_label443 DS    0H
                                            7243 * ***           return RD_KAFKA_OP_RES_HANDLED;
0000500C A7F9 0001               00000001   7244          LGHI  15,1        ; 1
                                            7245 * ***   }
                                            7246 * * **** Start of Epilogue
                                            7247          DCCEPIL
00005010                                    7248+         ds 0h                                                          01-DCCEP
                                            7249+* Epilog
00005010 D707 D088 D088 00000088 00000088   7250+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005016 E3D0 D080 0004          00000080   7251+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000501C E3C0 D090 0004          00000090   7252+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005022 E3B0 C018 0004          00000018   7253+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005028 E3C0 B010 0021          00000010   7254+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000502E E3E0 D008 0004          00000008   7255+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005034 EB1C D020 0004          00000020   7256+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000503A 078E                               7257+         bcr 8,14                if same dsab, just return              01-DCCEP
                                                                                                                           Page  148 
  Active Usings: @REGION_1935_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000503C E3F0 D010 0024          00000010   7258+         stg 15,16(0,13)         save return code                       01-DCCEP
00005042 E300 D018 0024          00000018   7259+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005048 E3F0 D090 0004          00000090   7260+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000504E E3F0 F018 0004          00000018   7261+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005054 47F0 F040               00000040   7262+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7263+* End of Epilog
                                            7264 * * **** End of Epilogue
00005058                                    7265          DS    0D
00005058 000000D0                           7266 @FRAMESIZE_1935 DC F'208'
0000505C 00000000
00005060 0000000000000000                   7267 @lit_1935_297 DC AD(mtx_lock)
00005068 00000000000050E0                   7268 @lit_1935_298 DC AD(rd_kafka_offset_reset)
00005070 0000000000000000                   7269 @lit_1935_299 DC AD(mtx_unlock)
                                            7270          DROP  12
                                            7271 *
                                            7272 *   DSECT for automatic variables in "rd_kafka_offset_reset_op_cb"
                                            7273 *      (FUNCTION #1935)
                                            7274 *
00000000                00000000 000000A8   7275 @AUTO#rd_kafka_offset_reset_op_cb DSECT
00000000                                    7276          DS    XL168
                                            7277 *
00005078                00000000 00006B1A   7278 @CODE    CSECT
                                            7279 *
                                            7280 *
                                            7281 *
                                            7282 * ....... start of rd_kafka_offset_reset
                                            7283 rd_kafka_offset_reset ALIAS X'99846D92818692816D968686A285A36D9985A285A*
                                                                3'
00005078                                    7284 @LNAME1923 DS  0H
00005078 00000015                           7285          DC    X'00000015'
0000507C 99846D9281869281                   7286          DC    C'rd_kafka_offset_reset'
00005091 00                                 7287          DC    X'00'
                                            7288 rd_kafka_offset_reset DCCPRLG CINDEX=1923,BASER=12,FRAME=288,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1923
                                            7289          macro
                                            7290          dccextrn &m
                                            7291          gblc    &$dccext(1000)
                                            7292          gbla    &$dccexti
                                            7293          lcla    &i
                                            7294 &$dccext(&$dccexti+1) setc    '&m'
                                            7295 &i       seta    1
                                            7296 .loop    aif    (&i gt &$dccexti).around
                                            7297          aif    ('&$dccext(&i)' eq '&m').getout
                                            7298 &i       seta    &i+1
                                            7299          ago     .loop
                                            7300 .around  anop
                                            7301 &$dccexti seta &$dccexti+1
                                            7302          extrn  &m
                                            7303 .getout  anop
                                            7304          mend
00005098                                    7305+$eye0122    ds    0d                                                    02-DCCCA
00005098 C4C3C3                             7306+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page  149 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000509B 01                                 7307+         dc xl1'01' format one                                          02-DCCCA
0000509C 00000000                           7308+         dc a(0)                                                        02-DCCCA
000050A0 000000000000510A                   7309+         dc ad(@PER_1923)                                               02-DCCCA
000050A8 0000000000000120                   7310+         dc ad(288)                                                     02-DCCCA
000050B0 0000000000000000                   7311+         dc ad(0)                                                       02-DCCCA
000050B8 0000000000001000                   7312+         dc ad(4096)                                                    02-DCCCA
000050C0 20                                 7313+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000050C1 03                                 7314+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000050C2 03                                 7315+         dc al1(3)                                                      02-DCCCA
000050C3 08                                 7316+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000050C4 00                                 7317+         dc bl.8'00000000'                                              02-DCCCA
000050C5 000000                             7318+         dc al3(0)                                                      02-DCCCA
000050C8 0000000000005078                   7319+         dc ad(@LNAME1923)                                              02-DCCCA
000050D0                                    7320+         ds 0d                                                          02-DCCCA
000050D0 0000000000005098                   7321+         dc ad($eye0122)                                                02-DCCCA
000050D8 0000000000000000                   7322+         dc ad(0)                                                       02-DCCCA
000050E0                                    7323+         ds    0d                                                       01-DCCPR
                                            7324+         entry rd_kafka_offset_reset                                    01-DCCPR
000050E0                                    7325+rd_kafka_offset_reset ds 0d                                             01-DCCPR
000050E0                                    7326+@REGION_1923_1 ds 0h                                                    01-DCCPR
000050E0 EBEC D008 0024          00000008   7327+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000050E6 E3E0 D088 0004          00000088   7328+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000050EC E3C0 D090 0004          00000090   7329+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000050F2 B904 002E                          7330+         lgr   2,14                copy addr of our savearea            01-DCCPR
000050F6 E3B0 C018 0004          00000018   7331+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000050FC A7EB 0120               00000120   7332+         aghi  14,288              increase by frame size               01-DCCPR
00005100 E3E0 C020 0021          00000020   7333+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005106 4720 B020               00000020   7334+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000510A                                    7335+@PER_1923 ds   0h                                                       01-DCCPR
0000510A EBDE 2080 0024          00000080   7336+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005110 E3C0 2090 0024          00000090   7337+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005116 B904 00D2                          7338+         lgr   13,2                set real frame pointer               01-DCCPR
0000511A B904 00CF                          7339+         lgr   12,15               set base reg                         01-DCCPR
                        000050E0            7340+         using @REGION_1923_1,12                                        01-DCCPR
                                            7341 * ******* End of Prologue
                                            7342 * *
                                            7343 * ***      int64_t offset = -1001;
0000511E EB45 1000 0004          00000000   7344          LMG   4,5,0(1)    ; rktp
00005124 5860 1014               00000014   7345          L     6,20(0,1)   ; err
00005128 E370 1018 0004          00000018   7346          LG    7,24(0,1)   ; reason
                                            7347 * ***           const char *extra = "";
0000512E E380 C138 0004          00005218   7348          LG    8,@lit_1923_303
00005134 4130 8308               00000308   7349          LA    3,776(0,8)
                                            7350 * ***
                                            7351 * ***
                                            7352 * ***           if (!thrd_is_current(rktp->rktp_rkt->rkt_rk->rk_thread\
                                            7353 * )) {
00005138 E3F0 4060 0004          00000060   7354          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000513E E3F0 F148 0004          00000148   7355          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00005144 A719 1090               00001090   7356          LGHI  1,4240      ; 4240
00005148 E3F1 F000 0004          00000000   7357          LG    15,0(1,15)
0000514E E3F0 D0B0 0024          000000B0   7358          STG   15,176(0,13)
                                                                                                                           Page  150 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005154 4110 D0B0               000000B0   7359          LA    1,176(0,13)
00005158 E3F0 C130 0004          00005210   7360          LG    15,@lit_1923_305 ; thrd_is_current
0000515E                                    7361 @@gen_label444 DS    0H
0000515E 05EF                               7362          BALR  14,15
00005160                                    7363 @@gen_label445 DS    0H
00005160 12FF                               7364          LTR   15,15
00005162 4770 C1A8               00005288   7365          BNZ   @L788
                                            7366 * ***                   rd_kafka_op_t *rko = rd_kafka_op_new0(((void *\
                                            7367 * )0), RD_KAFKA_OP_OFFSET_RESET | (int)(1 << 29));
00005166 D707 D0B0 D0B0 000000B0 000000B0   7368          XC    176(8,13),176(13)
0000516C C0FF 2000 001C                     7369          LLILF 15,X'2000001C' ; 536870940
00005172 E3F0 D0B8 0024          000000B8   7370          STG   15,184(0,13)
00005178 4110 D0B0               000000B0   7371          LA    1,176(0,13)
0000517C E3F0 C140 0004          00005220   7372          LG    15,@lit_1923_307 ; rd_kafka_op_new0
00005182                                    7373 @@gen_label447 DS    0H
00005182 05EF                               7374          BALR  14,15
00005184                                    7375 @@gen_label448 DS    0H
00005184 B904 002F                          7376          LGR   2,15
                                            7377 * ***
                                            7378 * ***                   rko->rko_op_cb = rd_kafka_offset_reset_op_cb;
00005188 E310 C158 0004          00005238   7379          LG    1,@lit_1923_308 ; rd_kafka_offset_reset_op_cb
0000518E E310 2068 0024          00000068   7380          STG   1,104(0,2)  ; offset of rko_op_cb in rd_kafka_op_s
                                            7381 * ***                   rko->rko_err = err;
00005194 5060 2020               00000020   7382          ST    6,32(0,2)   ; offset of rko_err in rd_kafka_op_s
                                            7383 * ***                   rko->rko_rktp = rd_kafka_toppar_keep0(__FUNCTI\
                                            7384 * ON__,764,rktp);
00005198 E3F0 C150 0004          00005230   7385          LG    15,@lit_1923_309
0000519E 41F0 F212               00000212   7386          LA    15,530(0,15)
000051A2 E3F0 D0B0 0024          000000B0   7387          STG   15,176(0,13)
000051A8 E548 D0B8 02FC          000000B8   7388          MVGHI 184(13),764
000051AE E340 D0C0 0024          000000C0   7389          STG   4,192(0,13)
000051B4 4110 D0B0               000000B0   7390          LA    1,176(0,13)
000051B8 E3F0 C148 0004          00005228   7391          LG    15,@lit_1923_310 ; rd_kafka_toppar_keep0
000051BE                                    7392 @@gen_label449 DS    0H
000051BE 05EF                               7393          BALR  14,15
000051C0                                    7394 @@gen_label450 DS    0H
000051C0 E3F0 2038 0024          00000038   7395          STG   15,56(0,2)
                                            7396 * ***                   rko->rko_u.offset_reset.offset = err_offset;
000051C6 E350 2070 0024          00000070   7397          STG   5,112(0,2)  ; offset of rko_u in rd_kafka_op_s
                                            7398 * ***         rko->rko_u.offset_reset.reason = rd_strdup(reason);
000051CC E370 D0B0 0024          000000B0   7399          STG   7,176(0,13)
000051D2 4110 D0B0               000000B0   7400          LA    1,176(0,13)
000051D6 E3F0 C160 0004          00005240   7401          LG    15,@lit_1923_311 ; rd_strdup
000051DC                                    7402 @@gen_label451 DS    0H
000051DC 05EF                               7403          BALR  14,15
000051DE                                    7404 @@gen_label452 DS    0H
000051DE E3F0 2078 0024          00000078   7405          STG   15,120(0,2)
                                            7406 * ***                   rd_kafka_q_enq(rktp->rktp_ops, rko);
000051E4 E3F0 4140 0004          00000140   7407          LG    15,320(0,4)
000051EA E3F0 D0B0 0024          000000B0   7408          STG   15,176(0,13)
000051F0 E320 D0B8 0024          000000B8   7409          STG   2,184(0,13)
000051F6 4110 D0B0               000000B0   7410          LA    1,176(0,13)
                                                                                                                           Page  151 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000051FA E3F0 C168 0004          00005248   7411          LG    15,@lit_1923_312 ; rd_kafka_q_enq
00005200                                    7412 @@gen_label453 DS    0H
00005200 05EF                               7413          BALR  14,15
00005202                                    7414 @@gen_label454 DS    0H
                                            7415 * ***                   return;
00005202 47F0 C3DE               000054BE   7416          B     @ret_lab_1923
00005208                                    7417          DS    0D
00005208 00000120                           7418 @FRAMESIZE_1923 DC F'288'
0000520C 00000000
00005210 0000000000000000                   7419 @lit_1923_305 DC AD(thrd_is_current)
00005218 0000000000006D48                   7420 @lit_1923_303 DC AD(@strings@)
00005220 0000000000000000                   7421 @lit_1923_307 DC AD(rd_kafka_op_new0)
00005228 0000000000001958                   7422 @lit_1923_310 DC AD(rd_kafka_toppar_keep0)
00005230 0000000000006B20                   7423 @lit_1923_309 DC AD(@DATA)
00005238 0000000000004F60                   7424 @lit_1923_308 DC AD(rd_kafka_offset_reset_op_cb)
00005240 0000000000000528                   7425 @lit_1923_311 DC AD(rd_strdup)
00005248 00000000000016D0                   7426 @lit_1923_312 DC AD(rd_kafka_q_enq)
00005250 0000000000000000                   7427 @lit_1923_313 DC AD(rd_kafka_err2str)
00005258 0000000000000000                   7428 @lit_1923_314 DC AD(rd_kafka_consumer_err)
00005260 0000000000000000                   7429 @lit_1923_315 DC AD(rd_kafka_toppar_set_fetch_state)
00005268 0000000000000000                   7430 @lit_1923_316 DC AD(rd_kafka_toppar_next_offset_handle)
00005270 0000000000001BD0                   7431 @lit_1923_318 DC AD(rd_kafka_offset2str)
00005278 0000000000000000                   7432 @lit_1923_322 DC AD(rd_kafka_log0)
00005280 0000000000000000                   7433 @lit_1923_325 DC AD(rd_kafka_toppar_offset_request)
                                            7434 * ***           }
00005288                                    7435 @L788    DS    0H
                                            7436 * ***
                                            7437 * ***      if (err_offset == -1001 || err)
00005288 A75F FC17               0000FC17   7438          CGHI  5,-1001
0000528C 4780 C1B6               00005296   7439          BE    @L790
00005290 1266                               7440          LTR   6,6
00005292 4780 C1C6               000052A6   7441          BZ    @L789
00005296                                    7442 @L790    DS    0H
                                            7443 * ***         offset = rktp->rktp_rkt->rkt_conf.auto_offset_reset;
00005296 E3F0 4060 0004          00000060   7444          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000529C E320 F3E8 0014          000003E8   7445          LGF   2,1000(0,15)
000052A2 47F0 C1CA               000052AA   7446          B     @L791
                                            7447 * ***      else
000052A6                                    7448 @L789    DS    0H
                                            7449 * ***         offset = err_offset;
000052A6 B904 0025                          7450          LGR   2,5         ; offset
000052AA                                    7451 @L791    DS    0H
                                            7452 * ***
                                            7453 * ***      if (offset == -1001) {
000052AA A72F FC17               0000FC17   7454          CGHI  2,-1001
000052AE 4770 C24A               0000532A   7455          BNE   @L792
                                            7456 * ***
                                            7457 * ***                   rd_kafka_consumer_err(rktp->rktp_fetchq, -1,
                                            7458 * ***                                         RD_KAFKA_RESP_ERR__AUTO_\
                                            7459 * OFFSET_RESET,
                                            7460 * ***                                         0, ((void *)0), rktp, er\
                                            7461 * r_offset,
                                                                                                                           Page  152 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7462 * ***                                         "%s: %s", reason, rd_kaf\
                                            7463 * ka_err2str(err));
000052B2 B914 00F6                          7464          LGFR  15,6
000052B6 E3F0 D0B0 0024          000000B0   7465          STG   15,176(0,13)
000052BC 4110 D0B0               000000B0   7466          LA    1,176(0,13)
000052C0 E3F0 C170 0004          00005250   7467          LG    15,@lit_1923_313 ; rd_kafka_err2str
000052C6                                    7468 @@gen_label458 DS    0H
000052C6 05EF                               7469          BALR  14,15
000052C8                                    7470 @@gen_label459 DS    0H
000052C8 E310 4138 0004          00000138   7471          LG    1,312(0,4)
000052CE E310 D0B0 0024          000000B0   7472          STG   1,176(0,13)
000052D4 E548 D0B8 FFFF          000000B8   7473          MVGHI 184(13),-1
000052DA E548 D0C0 FF74          000000C0   7474          MVGHI 192(13),-140
000052E0 D70F D0C8 D0C8 000000C8 000000C8   7475          XC    200(16,13),200(13)
000052E6 EB45 D0D8 0024          000000D8   7476          STMG  4,5,216(13)
000052EC 4110 8424               00000424   7477          LA    1,1060(0,8)
000052F0 E310 D0E8 0024          000000E8   7478          STG   1,232(0,13)
000052F6 E370 D0F0 0024          000000F0   7479          STG   7,240(0,13)
000052FC E3F0 D0F8 0024          000000F8   7480          STG   15,248(0,13)
00005302 4110 D0B0               000000B0   7481          LA    1,176(0,13)
00005306 E3F0 C178 0004          00005258   7482          LG    15,@lit_1923_314 ; rd_kafka_consumer_err
0000530C                                    7483 @@gen_label460 DS    0H
0000530C 05EF                               7484          BALR  14,15
0000530E                                    7485 @@gen_label461 DS    0H
                                            7486 * ***                   rd_kafka_toppar_set_fetch_state(
                                            7487 * ***            rktp, RD_KAFKA_TOPPAR_FETCH_NONE);
0000530E E340 D0B0 0024          000000B0   7488          STG   4,176(0,13)
00005314 D707 D0B8 D0B8 000000B8 000000B8   7489          XC    184(8,13),184(13)
0000531A 4110 D0B0               000000B0   7490          LA    1,176(0,13)
0000531E E3F0 C180 0004          00005260   7491          LG    15,@lit_1923_315 ; rd_kafka_toppar_set_fetch_state
00005324                                    7492 @@gen_label462 DS    0H
00005324 05EF                               7493          BALR  14,15
00005326                                    7494 @@gen_label463 DS    0H
                                            7495 * ***
                                            7496 * ***           } else if (offset == -2 &&
00005326 47F0 C2A0               00005380   7497          B     @L796
0000532A                                    7498 @L792    DS    0H
0000532A A72F FFFE               0000FFFE   7499          CGHI  2,-2
0000532E 4770 C282               00005362   7500          BNE   @L794
                                            7501 * ***                      rktp->rktp_lo_offset >= 0) {
00005332 E558 4268 0000          00000268   7502          CGHSI 616(4),0
00005338 4740 C282               00005362   7503          BL    @L794
                                            7504 * ***
                                            7505 * ***
                                            7506 * ***
                                            7507 * ***
                                            7508 * ***                   extra = "cached BEGINNING offset ";
0000533C 4130 842C               0000042C   7509          LA    3,1068(0,8)
                                            7510 * ***                   offset = rktp->rktp_lo_offset;
00005340 E320 4268 0004          00000268   7511          LG    2,616(0,4)  ; offset of rktp_lo_offset in rd_kafka_toppa*
                                                                r_s
                                            7512 * ***                   rd_kafka_toppar_next_offset_handle(rktp, offse\
                                                                                                                           Page  153 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7513 * t);
00005346 E340 D0B0 0024          000000B0   7514          STG   4,176(0,13)
0000534C E320 D0B8 0024          000000B8   7515          STG   2,184(0,13)
00005352 4110 D0B0               000000B0   7516          LA    1,176(0,13)
00005356 E3F0 C188 0004          00005268   7517          LG    15,@lit_1923_316 ; rd_kafka_toppar_next_offset_handle
0000535C                                    7518 @@gen_label466 DS    0H
0000535C 05EF                               7519          BALR  14,15
0000535E                                    7520 @@gen_label467 DS    0H
                                            7521 * ***
                                            7522 * ***           } else {
0000535E 47F0 C2A0               00005380   7523          B     @L796
00005362                                    7524 @L794    DS    0H
                                            7525 * ***
                                            7526 * ***                   rktp->rktp_query_offset = offset;
00005362 E320 41F8 0024          000001F8   7527          STG   2,504(0,4)  ; offset of rktp_query_offset in rd_kafka_to*
                                                                ppar_s
                                            7528 * ***                   rd_kafka_toppar_set_fetch_state(
                                            7529 * ***                           rktp, RD_KAFKA_TOPPAR_FETCH_OFFSET_QUE\
                                            7530 * RY);
00005368 E340 D0B0 0024          000000B0   7531          STG   4,176(0,13)
0000536E E548 D0B8 0003          000000B8   7532          MVGHI 184(13),3
00005374 4110 D0B0               000000B0   7533          LA    1,176(0,13)
00005378 E3F0 C180 0004          00005260   7534          LG    15,@lit_1923_315 ; rd_kafka_toppar_set_fetch_state
0000537E                                    7535 @@gen_label468 DS    0H
0000537E 05EF                               7536          BALR  14,15
00005380                                    7537 @@gen_label469 DS    0H
                                            7538 * ***      }
00005380                                    7539 @L795    DS    0H
                                            7540 * ***
                                            7541 * ***      do { if ((((rktp->rktp_rkt->rkt_rk)->rk_conf.debug & (0x4))\
                                            7542 * )) rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf,rktp->rktp_rkt->rk\
                                            7543 * t_rk,((void *)0), 7,(0x4), "OFFSET","%s [%" "d" "]: offset reset (at\
                                            7544 *  offset %s) " "to %s%s: %s: %s", rktp->rktp_rkt->rkt_topic->str, rkt\
                                            7545 * p->rktp_partition, rd_kafka_offset2str(err_offset), extra, rd_kafka_\
                                            7546 * offset2str(offset), reason, rd_kafka_err2str(err)); } while (0);
00005380                                    7547 @L793    DS    0H
00005380                                    7548 @L796    DS    0H
00005380 E3F0 4060 0004          00000060   7549          LG    15,96(0,4)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005386 E3F0 F148 0004          00000148   7550          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
0000538C 9104 F323      00000323 00000004   7551          TM    803(15),4
00005390 4780 C39A               0000547A   7552          BZ    @L799
00005394 E350 D0B0 0024          000000B0   7553          STG   5,176(0,13)
0000539A 4110 D0B0               000000B0   7554          LA    1,176(0,13)
0000539E E350 C190 0004          00005270   7555          LG    5,@lit_1923_318 ; rd_kafka_offset2str
000053A4 B904 00F5                          7556          LGR   15,5
000053A8                                    7557 @@gen_label471 DS    0H
000053A8 05EF                               7558          BALR  14,15
000053AA                                    7559 @@gen_label472 DS    0H
000053AA B904 008F                          7560          LGR   8,15
000053AE E320 D0B0 0024          000000B0   7561          STG   2,176(0,13)
000053B4 4110 D0B0               000000B0   7562          LA    1,176(0,13)
000053B8 B904 00F5                          7563          LGR   15,5
                                                                                                                           Page  154 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000053BC                                    7564 @@gen_label473 DS    0H
000053BC 05EF                               7565          BALR  14,15
000053BE                                    7566 @@gen_label474 DS    0H
000053BE B904 002F                          7567          LGR   2,15
000053C2 B914 00F6                          7568          LGFR  15,6
000053C6 E3F0 D0B0 0024          000000B0   7569          STG   15,176(0,13)
000053CC 4110 D0B0               000000B0   7570          LA    1,176(0,13)
000053D0 E3F0 C170 0004          00005250   7571          LG    15,@lit_1923_313 ; rd_kafka_err2str
000053D6                                    7572 @@gen_label475 DS    0H
000053D6 05EF                               7573          BALR  14,15
000053D8                                    7574 @@gen_label476 DS    0H
000053D8 E310 4060 0004          00000060   7575          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
000053DE E310 1148 0004          00000148   7576          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
000053E4 4110 1210               00000210   7577          LA    1,528(0,1)
000053E8 E310 D0B0 0024          000000B0   7578          STG   1,176(0,13)
000053EE E310 4060 0004          00000060   7579          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
000053F4 E310 1148 0004          00000148   7580          LG    1,328(0,1)
000053FA E310 D0B8 0024          000000B8   7581          STG   1,184(0,13)
00005400 D707 D0C0 D0C0 000000C0 000000C0   7582          XC    192(8,13),192(13)
00005406 E548 D0C8 0007          000000C8   7583          MVGHI 200(13),7
0000540C E548 D0D0 0004          000000D0   7584          MVGHI 208(13),4
00005412 E310 C138 0004          00005218   7585          LG    1,@lit_1923_303
00005418 4150 1130               00000130   7586          LA    5,304(0,1)
0000541C E350 D0D8 0024          000000D8   7587          STG   5,216(0,13)
00005422 4110 1446               00000446   7588          LA    1,1094(0,1)
00005426 E310 D0E0 0024          000000E0   7589          STG   1,224(0,13)
0000542C E310 4060 0004          00000060   7590          LG    1,96(0,4)   ; offset of rktp_rkt in rd_kafka_toppar_s
00005432 E310 1080 0004          00000080   7591          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
00005438 E310 1008 0004          00000008   7592          LG    1,8(0,1)
0000543E E310 D0E8 0024          000000E8   7593          STG   1,232(0,13)
00005444 E310 4068 0014          00000068   7594          LGF   1,104(0,4)
0000544A E310 D0F0 0024          000000F0   7595          STG   1,240(0,13)
00005450 E380 D0F8 0024          000000F8   7596          STG   8,248(0,13)
00005456 E330 D100 0024          00000100   7597          STG   3,256(0,13)
0000545C E320 D108 0024          00000108   7598          STG   2,264(0,13)
00005462 E370 D110 0024          00000110   7599          STG   7,272(0,13)
00005468 E3F0 D118 0024          00000118   7600          STG   15,280(0,13)
0000546E 4110 D0B0               000000B0   7601          LA    1,176(0,13)
00005472 E3F0 C198 0004          00005278   7602          LG    15,@lit_1923_322 ; rd_kafka_log0
00005478                                    7603 @@gen_label477 DS    0H
00005478 05EF                               7604          BALR  14,15
0000547A                                    7605 @@gen_label478 DS    0H
0000547A                                    7606 @L799    DS    0H
                                            7607 * ***
                                            7608 * ***   # 810 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                            7609 * ***
                                            7610 * ***
                                            7611 * ***
                                            7612 * ***
                                            7613 * ***      if (rktp->rktp_fetch_state == RD_KAFKA_TOPPAR_FETCH_OFFSET_\
                                            7614 * QUERY)
0000547A E55C 41E8 0003          000001E8   7615          CHSI  488(4),3
                                                                                                                           Page  155 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005480 4770 C3DE               000054BE   7616          BNE   @L800
                                            7617 * ***         rd_kafka_toppar_offset_request(rktp,
                                            7618 * ***                                                  rktp->rktp_quer\
                                            7619 * y_offset,
                                            7620 * ***                                                  err ? 100 : 0);
00005484 1266                               7621          LTR   6,6
00005486 4780 C3B2               00005492   7622          BZ    @L801
0000548A A7F8 0064               00000064   7623          LHI   15,100      ; 100
0000548E 47F0 C3B6               00005496   7624          B     @L802
00005492                                    7625 @L801    DS    0H
00005492 A7F8 0000               00000000   7626          LHI   15,0        ; 0
00005496                                    7627 @L802    DS    0H
00005496 E340 D0B0 0024          000000B0   7628          STG   4,176(0,13)
0000549C E310 41F8 0004          000001F8   7629          LG    1,504(0,4)
000054A2 E310 D0B8 0024          000000B8   7630          STG   1,184(0,13)
000054A8 B914 00FF                          7631          LGFR  15,15
000054AC E3F0 D0C0 0024          000000C0   7632          STG   15,192(0,13)
000054B2 4110 D0B0               000000B0   7633          LA    1,176(0,13)
000054B6 E3F0 C1A0 0004          00005280   7634          LG    15,@lit_1923_325 ; rd_kafka_toppar_offset_request
000054BC                                    7635 @@gen_label481 DS    0H
000054BC 05EF                               7636          BALR  14,15
000054BE                                    7637 @@gen_label482 DS    0H
000054BE                                    7638 @L800    DS    0H
                                            7639 * ***   }
000054BE                                    7640 @ret_lab_1923 DS 0H
                                            7641 * * **** Start of Epilogue
                                            7642          DCCEPIL
000054BE                                    7643+         ds 0h                                                          01-DCCEP
                                            7644+* Epilog
000054BE D707 D088 D088 00000088 00000088   7645+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000054C4 E3D0 D080 0004          00000080   7646+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000054CA E3C0 D090 0004          00000090   7647+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000054D0 E3B0 C018 0004          00000018   7648+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000054D6 E3C0 B010 0021          00000010   7649+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000054DC E3E0 D008 0004          00000008   7650+         lg  14,8(0,13)          load up return address                 01-DCCEP
000054E2 EB1C D020 0004          00000020   7651+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000054E8 078E                               7652+         bcr 8,14                if same dsab, just return              01-DCCEP
000054EA E3F0 D010 0024          00000010   7653+         stg 15,16(0,13)         save return code                       01-DCCEP
000054F0 E300 D018 0024          00000018   7654+         stg 0,24(0,13)          save more return code                  01-DCCEP
000054F6 E3F0 D090 0004          00000090   7655+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000054FC E3F0 F018 0004          00000018   7656+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005502 47F0 F040               00000040   7657+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7658+* End of Epilog
                                            7659 * * **** End of Epilogue
                                            7660          DROP  12
                                            7661 *
                                            7662 *   DSECT for automatic variables in "rd_kafka_offset_reset"
                                            7663 *      (FUNCTION #1923)
                                            7664 *
00000000                00000000 000000B0   7665 @AUTO#rd_kafka_offset_reset DSECT
00000000                                    7666          DS    XL168
000000A8                                    7667 rd_kafka_offset_reset#offset#0 DS 8XL1 ; offset
                                                                                                                           Page  156 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7668 *
00005506                00000000 00006B1A   7669 @CODE    CSECT
                                            7670 *
                                            7671 *
                                            7672 *
                                            7673 * ....... start of mk_esc_filename
00005506                                    7674 @LNAME1936 DS  0H
00005506 0000000F                           7675          DC    X'0000000F'
0000550A 94926D85A2836D86                   7676          DC    C'mk_esc_filename'
00005519 00                                 7677          DC    X'00'
                                            7678 mk_esc_filename DCCPRLG CINDEX=1936,BASER=12,FRAME=176,SAVEAREA=NO,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1936
                                            7679          macro
                                            7680          dccextrn &m
                                            7681          gblc    &$dccext(1000)
                                            7682          gbla    &$dccexti
                                            7683          lcla    &i
                                            7684 &$dccext(&$dccexti+1) setc    '&m'
                                            7685 &i       seta    1
                                            7686 .loop    aif    (&i gt &$dccexti).around
                                            7687          aif    ('&$dccext(&i)' eq '&m').getout
                                            7688 &i       seta    &i+1
                                            7689          ago     .loop
                                            7690 .around  anop
                                            7691 &$dccexti seta &$dccexti+1
                                            7692          extrn  &m
                                            7693 .getout  anop
                                            7694          mend
00005520                                    7695+$eye0125    ds    0d                                                    02-DCCCA
00005520 C4C3C3                             7696+         dc cl3'DCC'                                                    02-DCCCA
00005523 01                                 7697+         dc xl1'01' format one                                          02-DCCCA
00005524 00000000                           7698+         dc a(0)                                                        02-DCCCA
00005528 0000000000000000                   7699+         dc ad(0)                                                       02-DCCCA
00005530 00000000000000B0                   7700+         dc ad(176)                                                     02-DCCCA
00005538 0000000000000000                   7701+         dc ad(0)                                                       02-DCCCA
00005540 0000000000001000                   7702+         dc ad(4096)                                                    02-DCCCA
00005548 20                                 7703+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005549 03                                 7704+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000554A 03                                 7705+         dc al1(3)                                                      02-DCCCA
0000554B 08                                 7706+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000554C 00                                 7707+         dc bl.8'00000000'                                              02-DCCCA
0000554D 000000                             7708+         dc al3(0)                                                      02-DCCCA
00005550 0000000000005506                   7709+         dc ad(@LNAME1936)                                              02-DCCCA
00005558                                    7710+         ds 0d                                                          02-DCCCA
00005558 0000000000005520                   7711+         dc ad($eye0125)                                                02-DCCCA
00005560 0000000000000000                   7712+         dc ad(0)                                                       02-DCCCA
00005568                                    7713+         ds    0d                                                       01-DCCPR
00005568                                    7714+mk_esc_filename ds 0d                                                   01-DCCPR
00005568                                    7715+@REGION_1936_1 ds 0h                                                    01-DCCPR
00005568 EBEC D008 0024          00000008   7716+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000556E B904 00CF                          7717+         lgr   12,15               set base reg                         01-DCCPR
                        00005568            7718+         using @REGION_1936_1,12                                        01-DCCPR
                                                                                                                           Page  157 
  Active Usings: @REGION_1936_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005572 B904 0051                          7719          LGR   5,1         ; ptr to parm area
                                            7720 * ******* End of Prologue
                                            7721 * *
                                            7722 * ***           const char *s = in;
00005576 E3F0 5008 0004          00000008   7723          LG    15,8(0,5)   ; out
0000557C E310 5000 0004          00000000   7724          LG    1,0(0,5)    ; in
                                            7725 * ***           char *o = out;
00005582 B904 002F                          7726          LGR   2,15        ; o
                                            7727 * ***
                                            7728 * ***           while (*s) {
00005586 47F0 C124               0000568C   7729          B     @L806
00005590                                    7730          DS    0D
00005590 0000000000006D48                   7731 @lit_1936_327 DC AD(@strings@)
                                            7732 * ***                   const char *esc;
                                            7733 * ***                   size_t esclen;
                                            7734 * ***
                                            7735 * ***                   switch (*s)
                                            7736 * ***                   {
                                            7737 * ***                   case '/':
00005598                                    7738 @L809    DS    0H
                                            7739 * ***                           esc = "%2F";
00005598 E330 C028 0004          00005590   7740          LG    3,@lit_1936_327
0000559E 4130 347C               0000047C   7741          LA    3,1148(0,3)
                                            7742 * ***                           esclen = __strlen(esc);
000055A2 B904 0043                          7743          LGR   4,3
000055A6 A709 0000               00000000   7744          LGHI  0,0
000055AA                                    7745 @@gen_label483 DS 0H
000055AA B25E 0004                          7746          SRST  0,4
000055AE 4710 C042               000055AA   7747          BC  1,@@gen_label483
000055B2 B90B 0003                          7748          SLGR  0,3
000055B6 B904 0040                          7749          LGR   4,0         ; esclen
                                            7750 * ***                           break;
000055BA 47F0 C0E0               00005648   7751          B     @L808
                                            7752 * ***                   case ':':
000055BE                                    7753 @L810    DS    0H
                                            7754 * ***                           esc = "%3A";
000055BE E330 C028 0004          00005590   7755          LG    3,@lit_1936_327
000055C4 4130 3480               00000480   7756          LA    3,1152(0,3)
                                            7757 * ***                           esclen = __strlen(esc);
000055C8 B904 0043                          7758          LGR   4,3
000055CC A709 0000               00000000   7759          LGHI  0,0
000055D0                                    7760 @@gen_label484 DS 0H
000055D0 B25E 0004                          7761          SRST  0,4
000055D4 4710 C068               000055D0   7762          BC  1,@@gen_label484
000055D8 B90B 0003                          7763          SLGR  0,3
000055DC B904 0040                          7764          LGR   4,0         ; esclen
                                            7765 * ***                           break;
000055E0 47F0 C0E0               00005648   7766          B     @L808
                                            7767 * ***                   case '\\':
000055E4                                    7768 @L811    DS    0H
                                            7769 * ***                           esc = "%5C";
000055E4 E330 C028 0004          00005590   7770          LG    3,@lit_1936_327
                                                                                                                           Page  158 
  Active Usings: @REGION_1936_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000055EA 4130 3484               00000484   7771          LA    3,1156(0,3)
                                            7772 * ***                           esclen = __strlen(esc);
000055EE B904 0043                          7773          LGR   4,3
000055F2 A709 0000               00000000   7774          LGHI  0,0
000055F6                                    7775 @@gen_label485 DS 0H
000055F6 B25E 0004                          7776          SRST  0,4
000055FA 4710 C08E               000055F6   7777          BC  1,@@gen_label485
000055FE B90B 0003                          7778          SLGR  0,3
00005602 B904 0040                          7779          LGR   4,0         ; esclen
                                            7780 * ***                           break;
00005606 47F0 C0E0               00005648   7781          B     @L808
                                            7782 * ***                   default:
                                            7783 * ***                           esc = s;
0000560A                                    7784 @L812    DS    0H
0000560A B904 0031                          7785          LGR   3,1         ; esc
                                            7786 * ***                           esclen = 1;
0000560E A749 0001               00000001   7787          LGHI  4,1         ; 1
                                            7788 * ***                           break;
00005612 47F0 C0E0               00005648   7789          B     @L808
                                            7790 * ***                   }
00005616                                    7791 @L807    DS    0H
00005616 E330 1000 0094          00000000   7792          LLC   3,0(0,1)
0000561C C23F 0000 0061                     7793          CLFI  3,X'00000061'
00005622 4740 C0A2               0000560A   7794          BL    @L812
00005626 C23F 0000 0061                     7795          CLFI  3,X'00000061'
0000562C 4780 C030               00005598   7796          BE    @L809
00005630 C23F 0000 007A                     7797          CLFI  3,X'0000007A'
00005636 4780 C056               000055BE   7798          BE    @L810
0000563A C23F 0000 00E0                     7799          CLFI  3,X'000000E0'
00005640 4780 C07C               000055E4   7800          BE    @L811
00005644 47F0 C0A2               0000560A   7801          B     @L812
00005648                                    7802 @L808    DS    0H
                                            7803 * ***
                                            7804 * ***                   if ((size_t)((o + esclen + 1) - out) >= out_si\
                                            7805 * ze) {
00005648 4164 2001               00000001   7806          LA    6,1(4,2)
0000564C B909 006F                          7807          SGR   6,15
00005650 E360 5010 0021          00000010   7808          CLG   6,16(0,5)
00005656 4740 C10E               00005676   7809          BL    @L817
                                            7810 * ***
                                            7811 * ***                           break;
0000565A 47F0 C12C               00005694   7812          B     @L803
                                            7813 * ***                   }
                                            7814 * ***
                                            7815 * ***                   while (esclen-- > 0)
0000565E                                    7816 @L816    DS    0H
                                            7817 * ***                           *(o++) = *(esc++);
0000565E B904 0062                          7818          LGR   6,2
00005662 4120 2001               00000001   7819          LA    2,1(0,2)
00005666 B904 0073                          7820          LGR   7,3
0000566A 4130 3001               00000001   7821          LA    3,1(0,3)
0000566E 4370 7000               00000000   7822          IC    7,0(0,7)
                                                                                                                           Page  159 
  Active Usings: @REGION_1936_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005672 4270 6000               00000000   7823          STC   7,0(0,6)
00005676                                    7824 @L817    DS    0H
00005676 B904 0064                          7825          LGR   6,4
0000567A A74B FFFF               0000FFFF   7826          AGHI  4,-1
0000567E C26E 0000 0000                     7827          CLGFI 6,X'00000000'
00005684 4720 C0F6               0000565E   7828          BH    @L816
                                            7829 * ***
                                            7830 * ***                   s++;
00005688 4110 1001               00000001   7831          LA    1,1(0,1)
                                            7832 * ***           }
0000568C                                    7833 @L806    DS    0H
0000568C 9500 1000      00000000 00000000   7834          CLI   0(1),0
00005690 4770 C0AE               00005616   7835          BNE   @L807
00005694                                    7836 @L803    DS    0H
                                            7837 * ***
                                            7838 * ***           *o = '\0';
00005694 9200 2000      00000000 00000000   7839          MVI   0(2),0      ; o
                                            7840 * ***           return out;
                                            7841 * ***   }
                                            7842 * * **** Start of Epilogue
                                            7843          DCCEPIL
00005698                                    7844+         ds 0h                                                          01-DCCEP
                                            7845+* Epilog
                                            7846+* Epilog
00005698 E3E0 D008 0004          00000008   7847+         lg    14,8(,13) restore the reg                                01-DCCEP
0000569E EB1C D020 0004          00000020   7848+         lmg   1,12,32(13)                                              01-DCCEP
000056A4 07FE                               7849+         br   14                                                        01-DCCEP
                                            7850+* End of Epilog
                                            7851 * * **** End of Epilogue
                                            7852          DROP  12
                                            7853 *
                                            7854 *   DSECT for automatic variables in "mk_esc_filename"
                                            7855 *      (FUNCTION #1936)
                                            7856 *
00000000                00000000 000000B0   7857 @AUTO#mk_esc_filename DSECT
00000000                                    7858          DS    XL168
000000A8                                    7859 mk_esc_filename#esclen#1 DS 8XL1 ; esclen
                                            7860 *
000056A6                00000000 00006B1A   7861 @CODE    CSECT
                                            7862 *
                                            7863 *
                                            7864 *
                                            7865 * ....... start of rd_kafka_offset_sync_tmr_cb
000056A6                                    7866 @LNAME1937 DS  0H
000056A6 0000001B                           7867          DC    X'0000001B'
000056AA 99846D9281869281                   7868          DC    C'rd_kafka_offset_sync_tmr_cb'
000056C5 00                                 7869          DC    X'00'
                                            7870 rd_kafka_offset_sync_tmr_cb DCCPRLG CINDEX=1937,BASER=12,FRAME=184,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1937
                                            7871          macro
                                            7872          dccextrn &m
                                            7873          gblc    &$dccext(1000)
                                                                                                                           Page  160 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7874          gbla    &$dccexti
                                            7875          lcla    &i
                                            7876 &$dccext(&$dccexti+1) setc    '&m'
                                            7877 &i       seta    1
                                            7878 .loop    aif    (&i gt &$dccexti).around
                                            7879          aif    ('&$dccext(&i)' eq '&m').getout
                                            7880 &i       seta    &i+1
                                            7881          ago     .loop
                                            7882 .around  anop
                                            7883 &$dccexti seta &$dccexti+1
                                            7884          extrn  &m
                                            7885 .getout  anop
                                            7886          mend
000056C8                                    7887+$eye0128    ds    0d                                                    02-DCCCA
000056C8 C4C3C3                             7888+         dc cl3'DCC'                                                    02-DCCCA
000056CB 01                                 7889+         dc xl1'01' format one                                          02-DCCCA
000056CC 00000000                           7890+         dc a(0)                                                        02-DCCCA
000056D0 000000000000573A                   7891+         dc ad(@PER_1937)                                               02-DCCCA
000056D8 00000000000000B8                   7892+         dc ad(184)                                                     02-DCCCA
000056E0 0000000000000000                   7893+         dc ad(0)                                                       02-DCCCA
000056E8 0000000000001000                   7894+         dc ad(4096)                                                    02-DCCCA
000056F0 20                                 7895+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000056F1 03                                 7896+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000056F2 03                                 7897+         dc al1(3)                                                      02-DCCCA
000056F3 08                                 7898+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000056F4 00                                 7899+         dc bl.8'00000000'                                              02-DCCCA
000056F5 000000                             7900+         dc al3(0)                                                      02-DCCCA
000056F8 00000000000056A6                   7901+         dc ad(@LNAME1937)                                              02-DCCCA
00005700                                    7902+         ds 0d                                                          02-DCCCA
00005700 00000000000056C8                   7903+         dc ad($eye0128)                                                02-DCCCA
00005708 0000000000000000                   7904+         dc ad(0)                                                       02-DCCCA
00005710                                    7905+         ds    0d                                                       01-DCCPR
00005710                                    7906+rd_kafka_offset_sync_tmr_cb ds 0d                                       01-DCCPR
00005710                                    7907+@REGION_1937_1 ds 0h                                                    01-DCCPR
00005710 EBEC D008 0024          00000008   7908+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005716 E3E0 D088 0004          00000088   7909+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000571C E3C0 D090 0004          00000090   7910+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005722 B904 002E                          7911+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005726 E3B0 C018 0004          00000018   7912+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000572C A7EB 00B8               000000B8   7913+         aghi  14,184              increase by frame size               01-DCCPR
00005730 E3E0 C020 0021          00000020   7914+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005736 4720 B020               00000020   7915+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000573A                                    7916+@PER_1937 ds   0h                                                       01-DCCPR
0000573A EBDE 2080 0024          00000080   7917+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005740 E3C0 2090 0024          00000090   7918+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005746 B904 00D2                          7919+         lgr   13,2                set real frame pointer               01-DCCPR
0000574A B904 00CF                          7920+         lgr   12,15               set base reg                         01-DCCPR
                        00005710            7921+         using @REGION_1937_1,12                                        01-DCCPR
                                            7922 * ******* End of Prologue
                                            7923 * *
                                            7924 * ***      rd_kafka_toppar_t *rktp = arg;
0000574E E3F0 1008 0004          00000008   7925          LG    15,8(0,1)   ; arg
                                                                                                                           Page  161 
  Active Usings: @REGION_1937_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7926 * ***      rd_kafka_offset_sync(rktp);
00005754 E3F0 D0B0 0024          000000B0   7927          STG   15,176(0,13)
0000575A 4110 D0B0               000000B0   7928          LA    1,176(0,13)
0000575E E3F0 C0A8 0004          000057B8   7929          LG    15,@lit_1937_331 ; rd_kafka_offset_sync
00005764                                    7930 @@gen_label489 DS    0H
00005764 05EF                               7931          BALR  14,15
00005766                                    7932 @@gen_label490 DS    0H
                                            7933 * ***   }
00005766                                    7934 @ret_lab_1937 DS 0H
                                            7935 * * **** Start of Epilogue
                                            7936          DCCEPIL
00005766                                    7937+         ds 0h                                                          01-DCCEP
                                            7938+* Epilog
00005766 D707 D088 D088 00000088 00000088   7939+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000576C E3D0 D080 0004          00000080   7940+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005772 E3C0 D090 0004          00000090   7941+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005778 E3B0 C018 0004          00000018   7942+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000577E E3C0 B010 0021          00000010   7943+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005784 E3E0 D008 0004          00000008   7944+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000578A EB1C D020 0004          00000020   7945+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005790 078E                               7946+         bcr 8,14                if same dsab, just return              01-DCCEP
00005792 E3F0 D010 0024          00000010   7947+         stg 15,16(0,13)         save return code                       01-DCCEP
00005798 E300 D018 0024          00000018   7948+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000579E E3F0 D090 0004          00000090   7949+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000057A4 E3F0 F018 0004          00000018   7950+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000057AA 47F0 F040               00000040   7951+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7952+* End of Epilog
                                            7953 * * **** End of Epilogue
000057B0                                    7954          DS    0D
000057B0 000000B8                           7955 @FRAMESIZE_1937 DC F'184'
000057B4 00000000
000057B8 0000000000004808                   7956 @lit_1937_331 DC AD(rd_kafka_offset_sync)
                                            7957          DROP  12
                                            7958 *
                                            7959 *   DSECT for automatic variables in "rd_kafka_offset_sync_tmr_cb"
                                            7960 *      (FUNCTION #1937)
                                            7961 *
00000000                00000000 000000A8   7962 @AUTO#rd_kafka_offset_sync_tmr_cb DSECT
00000000                                    7963          DS    XL168
                                            7964 *
000057C0                00000000 00006B1A   7965 @CODE    CSECT
                                            7966 *
                                            7967 *
                                            7968 *
                                            7969 * ....... start of rd_kafka_offset_file_init
000057C0                                    7970 @LNAME1938 DS  0H
000057C0 00000019                           7971          DC    X'00000019'
000057C4 99846D9281869281                   7972          DC    C'rd_kafka_offset_file_init'
000057DD 00                                 7973          DC    X'00'
                                            7974 rd_kafka_offset_file_init DCCPRLG CINDEX=1938,BASER=12,FRAME=9672,ENTRY*
                                                                =NO,ARCH=ZARCH,LNAMEADDR=@LNAME1938
                                            7975          macro
                                                                                                                           Page  162 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            7976          dccextrn &m
                                            7977          gblc    &$dccext(1000)
                                            7978          gbla    &$dccexti
                                            7979          lcla    &i
                                            7980 &$dccext(&$dccexti+1) setc    '&m'
                                            7981 &i       seta    1
                                            7982 .loop    aif    (&i gt &$dccexti).around
                                            7983          aif    ('&$dccext(&i)' eq '&m').getout
                                            7984 &i       seta    &i+1
                                            7985          ago     .loop
                                            7986 .around  anop
                                            7987 &$dccexti seta &$dccexti+1
                                            7988          extrn  &m
                                            7989 .getout  anop
                                            7990          mend
000057E0                                    7991+$eye0131    ds    0d                                                    02-DCCCA
000057E0 C4C3C3                             7992+         dc cl3'DCC'                                                    02-DCCCA
000057E3 01                                 7993+         dc xl1'01' format one                                          02-DCCCA
000057E4 00000000                           7994+         dc a(0)                                                        02-DCCCA
000057E8 0000000000005852                   7995+         dc ad(@PER_1938)                                               02-DCCCA
000057F0 00000000000025C8                   7996+         dc ad(9672)                                                    02-DCCCA
000057F8 0000000000000000                   7997+         dc ad(0)                                                       02-DCCCA
00005800 0000000000001000                   7998+         dc ad(4096)                                                    02-DCCCA
00005808 20                                 7999+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005809 03                                 8000+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000580A 03                                 8001+         dc al1(3)                                                      02-DCCCA
0000580B 08                                 8002+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000580C 00                                 8003+         dc bl.8'00000000'                                              02-DCCCA
0000580D 000000                             8004+         dc al3(0)                                                      02-DCCCA
00005810 00000000000057C0                   8005+         dc ad(@LNAME1938)                                              02-DCCCA
00005818                                    8006+         ds 0d                                                          02-DCCCA
00005818 00000000000057E0                   8007+         dc ad($eye0131)                                                02-DCCCA
00005820 0000000000000000                   8008+         dc ad(0)                                                       02-DCCCA
00005828                                    8009+         ds    0d                                                       01-DCCPR
00005828                                    8010+rd_kafka_offset_file_init ds 0d                                         01-DCCPR
00005828                                    8011+@REGION_1938_1 ds 0h                                                    01-DCCPR
00005828 EBEC D008 0024          00000008   8012+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000582E E3E0 D088 0004          00000088   8013+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005834 E3C0 D090 0004          00000090   8014+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000583A B904 002E                          8015+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000583E E3B0 C018 0004          00000018   8016+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005844 A7EB 25C8               000025C8   8017+         aghi  14,9672             increase by frame size               01-DCCPR
00005848 E3E0 C020 0021          00000020   8018+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000584E 4720 B020               00000020   8019+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005852                                    8020+@PER_1938 ds   0h                                                       01-DCCPR
00005852 EBDE 2080 0024          00000080   8021+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005858 E3C0 2090 0024          00000090   8022+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000585E B904 00D2                          8023+         lgr   13,2                set real frame pointer               01-DCCPR
00005862 B904 00CF                          8024+         lgr   12,15               set base reg                         01-DCCPR
                        00005828            8025+         using @REGION_1938_1,12                                        01-DCCPR
                                            8026 * ******* End of Prologue
                                            8027 * *
                                                                                                                           Page  163 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8028 * ***      char spath[4096+1];
00005866 E350 1000 0004          00000000   8029          LG    5,0(0,1)    ; rktp
                                            8030 * ***      const char *path = rktp->rktp_rkt->rkt_conf.offset_store_pa\
                                            8031 * th;
0000586C E3F0 5060 0004          00000060   8032          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005872 E330 F3F0 0004          000003F0   8033          LG    3,1008(0,15) ; offset of offset_store_path in rd_kafka_t*
                                                                opic_conf_s
                                            8034 * ***      int64_t offset = -1001;
00005878 A749 FC17               0000FC17   8035          LGHI  4,-1001     ; -1001
                                            8036 * ***
                                            8037 * ***      if (rd_kafka_path_is_dir(path)) {
0000587C B904 002D                          8038          LGR   2,13
00005880 A72B 2000               00002000   8039          AGHI  2,8192
00005884 E330 2578 0024          00000578   8040          STG   3,1400(0,2)
0000588A 4110 2578               00000578   8041          LA    1,1400(0,2)
0000588E E3F0 C0C0 0004          000058E8   8042          LG    15,@lit_1938_334 ; rd_kafka_path_is_dir
00005894                                    8043 @@gen_label491 DS    0H
00005894 05EF                               8044          BALR  14,15
00005896                                    8045 @@gen_label492 DS    0H
00005896 12FF                               8046          LTR   15,15
00005898 4780 C2C6               00005AEE   8047          BZ    @L825
                                            8048 * ***                   char tmpfile[1024];
                                            8049 * ***                   char escfile[4096];
                                            8050 * ***
                                            8051 * ***
                                            8052 * ***                   if (!((rktp->rktp_rkt->rkt_rk->rk_group_id)->l\
                                            8053 * en == -1))
0000589C E3F0 5060 0004          00000060   8054          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
000058A2 E3F0 F148 0004          00000148   8055          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
000058A8 E3F0 F968 0004          00000968   8056          LG    15,2408(0,15) ; offset of rk_group_id in rd_kafka_s
000058AE E55C F000 FFFF          00000000   8057          CHSI  0(15),-1
000058B4 4780 C1B2               000059DA   8058          BE    @L819
                                            8059 * ***                           snprintf(tmpfile, sizeof(tmpfile), "%s\
                                            8060 * -%" "d" "-%.*s.offset", rktp->rktp_rkt->rkt_topic->str, rktp->rktp_p\
                                            8061 * artition, (int)((rktp->rktp_rkt->rkt_rk-> rk_group_id)->len == -1 ? \
                                            8062 * 0 : (rktp->rktp_rkt->rkt_rk-> rk_group_id)->len), (rktp->rktp_rkt->r\
                                            8063 * kt_rk-> rk_group_id)->str);
000058B8 E3F0 5060 0004          00000060   8064          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
000058BE E3F0 F148 0004          00000148   8065          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
000058C4 E3F0 F968 0004          00000968   8066          LG    15,2408(0,15) ; offset of rk_group_id in rd_kafka_s
000058CA E55C F000 FFFF          00000000   8067          CHSI  0(15),-1
000058D0 4770 C120               00005948   8068          BNE   @L820
000058D4 A7F8 0000               00000000   8069          LHI   15,0        ; 0
000058D8 47F0 C136               0000595E   8070          B     @L821
000058E0                                    8071          DS    0D
000058E0 000025C8                           8072 @FRAMESIZE_1938 DC F'9672'
000058E4 00000000
000058E8 0000000000000000                   8073 @lit_1938_334 DC AD(rd_kafka_path_is_dir)
000058F0 0000000000000000                   8074 @lit_1938_337 DC AD(snprintf)
000058F8 0000000000006D48                   8075 @lit_1938_336 DC AD(@strings@)
00005900 0000000000005568                   8076 @lit_1938_340 DC AD(mk_esc_filename)
00005908 0000000000000000                   8077 @lit_1938_346 DC AD(rd_kafka_log0)
                                                                                                                           Page  164 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005910 0000000000000528                   8078 @lit_1938_347 DC AD(rd_strdup)
00005918 0000000000000000                   8079 @lit_1938_350 DC AD(rd_kafka_timer_start0)
00005920 0000000000005710                   8080 @lit_1938_349 DC AD(rd_kafka_offset_sync_tmr_cb)
00005928 0000000000002290                   8081 @lit_1938_351 DC AD(rd_kafka_offset_file_open)
00005930 00000000000025A8                   8082 @lit_1938_352 DC AD(rd_kafka_offset_file_read)
00005938 0000000000000000                   8083 @lit_1938_353 DC AD(rd_kafka_toppar_next_offset_handle)
00005940 00000000000050E0                   8084 @lit_1938_355 DC AD(rd_kafka_offset_reset)
00005948                                    8085 @L820    DS    0H
00005948 E3F0 5060 0004          00000060   8086          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000594E E3F0 F148 0004          00000148   8087          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00005954 E3F0 F968 0004          00000968   8088          LG    15,2408(0,15) ; offset of rk_group_id in rd_kafka_s
0000595A 58F0 F000               00000000   8089          L     15,0(0,15)
0000595E                                    8090 @L821    DS    0H
0000595E 4110 2171               00000171   8091          LA    1,369(0,2)
00005962 E310 2578 0024          00000578   8092          STG   1,1400(0,2)
00005968 E548 2580 0400          00000580   8093          MVGHI 1408(2),1024
0000596E E310 C0D0 0004          000058F8   8094          LG    1,@lit_1938_336
00005974 4110 1488               00000488   8095          LA    1,1160(0,1)
00005978 E310 2588 0024          00000588   8096          STG   1,1416(0,2)
0000597E E310 5060 0004          00000060   8097          LG    1,96(0,5)   ; offset of rktp_rkt in rd_kafka_toppar_s
00005984 E310 1080 0004          00000080   8098          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
0000598A E310 1008 0004          00000008   8099          LG    1,8(0,1)
00005990 E310 2590 0024          00000590   8100          STG   1,1424(0,2)
00005996 E310 5068 0014          00000068   8101          LGF   1,104(0,5)
0000599C E310 2598 0024          00000598   8102          STG   1,1432(0,2)
000059A2 B914 00FF                          8103          LGFR  15,15
000059A6 E3F0 25A0 0024          000005A0   8104          STG   15,1440(0,2)
000059AC E3F0 5060 0004          00000060   8105          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
000059B2 E3F0 F148 0004          00000148   8106          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
000059B8 E3F0 F968 0004          00000968   8107          LG    15,2408(0,15) ; offset of rk_group_id in rd_kafka_s
000059BE E3F0 F008 0004          00000008   8108          LG    15,8(0,15)
000059C4 E3F0 25A8 0024          000005A8   8109          STG   15,1448(0,2)
000059CA 4110 2578               00000578   8110          LA    1,1400(0,2)
000059CE E3F0 C0C8 0004          000058F0   8111          LG    15,@lit_1938_337 ; snprintf
000059D4                                    8112 @@gen_label496 DS    0H
000059D4 05EF                               8113          BALR  14,15
000059D6                                    8114 @@gen_label497 DS    0H
000059D6 47F0 C202               00005A2A   8115          B     @L822
                                            8116 * ***   # 898 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                            8117 * ***                   else
000059DA                                    8118 @L819    DS    0H
                                            8119 * ***                           snprintf(tmpfile, sizeof(tmpfile), "%s\
                                            8120 * -%" "d" ".offset", rktp->rktp_rkt->rkt_topic->str, rktp->rktp_partit\
                                            8121 * ion);
000059DA 41F0 2171               00000171   8122          LA    15,369(0,2)
000059DE E3F0 2578 0024          00000578   8123          STG   15,1400(0,2)
000059E4 E548 2580 0400          00000580   8124          MVGHI 1408(2),1024
000059EA E3F0 C0D0 0004          000058F8   8125          LG    15,@lit_1938_336
000059F0 41F0 F49A               0000049A   8126          LA    15,1178(0,15)
000059F4 E3F0 2588 0024          00000588   8127          STG   15,1416(0,2)
000059FA E3F0 5060 0004          00000060   8128          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005A00 E3F0 F080 0004          00000080   8129          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
                                                                                                                           Page  165 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005A06 E3F0 F008 0004          00000008   8130          LG    15,8(0,15)
00005A0C E3F0 2590 0024          00000590   8131          STG   15,1424(0,2)
00005A12 E3F0 5068 0014          00000068   8132          LGF   15,104(0,5)
00005A18 E3F0 2598 0024          00000598   8133          STG   15,1432(0,2)
00005A1E 4110 2578               00000578   8134          LA    1,1400(0,2)
00005A22 E3F0 C0C8 0004          000058F0   8135          LG    15,@lit_1938_337 ; snprintf
00005A28                                    8136 @@gen_label498 DS    0H
00005A28 05EF                               8137          BALR  14,15
00005A2A                                    8138 @@gen_label499 DS    0H
00005A2A                                    8139 @L822    DS    0H
                                            8140 * ***
                                            8141 * ***
                                            8142 * ***
                                            8143 * ***
                                            8144 * ***
                                            8145 * ***                   mk_esc_filename(tmpfile, escfile, sizeof(escfi\
                                            8146 * le));
00005A2A 41F0 2171               00000171   8147          LA    15,369(0,2)
00005A2E E3F0 2578 0024          00000578   8148          STG   15,1400(0,2)
00005A34 B904 00FD                          8149          LGR   15,13
00005A38 A7FB 1000               00001000   8150          AGHI  15,4096
00005A3C 41F0 F171               00000171   8151          LA    15,369(0,15)
00005A40 E3F0 2580 0024          00000580   8152          STG   15,1408(0,2)
00005A46 E548 2588 1000          00000588   8153          MVGHI 1416(2),4096
00005A4C 4110 2578               00000578   8154          LA    1,1400(0,2)
00005A50 E3F0 C0D8 0004          00005900   8155          LG    15,@lit_1938_340 ; mk_esc_filename
00005A56                                    8156 @@gen_label500 DS    0H
00005A56 05EF                               8157          BALR  14,15
00005A58                                    8158 @@gen_label501 DS    0H
                                            8159 * ***
                                            8160 * ***                   snprintf(spath, sizeof(spath), "%s%s%s", path,\
                                            8161 *  path[__strlen(path)-1] == '/' ? "" : "/", escfile);
00005A58 B904 00F3                          8162          LGR   15,3
00005A5C A709 0000               00000000   8163          LGHI  0,0
00005A60                                    8164 @@gen_label502 DS 0H
00005A60 B25E 000F                          8165          SRST  0,15
00005A64 4710 C238               00005A60   8166          BC  1,@@gen_label502
00005A68 B90B 0003                          8167          SLGR  0,3
00005A6C B904 00F0                          8168          LGR   15,0
00005A70 A7FB FFFF               0000FFFF   8169          AGHI  15,-1
00005A74 41FF 3000               00000000   8170          LA    15,0(15,3)
00005A78 9561 F000      00000000 00000061   8171          CLI   0(15),97
00005A7C 4770 C266               00005A8E   8172          BNE   @L823
00005A80 E3F0 C0D0 0004          000058F8   8173          LG    15,@lit_1938_336
00005A86 41F0 F308               00000308   8174          LA    15,776(0,15)
00005A8A 47F0 C270               00005A98   8175          B     @L824
00005A8E                                    8176 @L823    DS    0H
00005A8E E3F0 C0D0 0004          000058F8   8177          LG    15,@lit_1938_336
00005A94 41F0 F4A8               000004A8   8178          LA    15,1192(0,15)
00005A98                                    8179 @L824    DS    0H
00005A98 4110 D170               00000170   8180          LA    1,368(0,13)
00005A9C B904 002D                          8181          LGR   2,13
                                                                                                                           Page  166 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005AA0 A72B 2000               00002000   8182          AGHI  2,8192
00005AA4 E310 2578 0024          00000578   8183          STG   1,1400(0,2)
00005AAA E548 2580 1001          00000580   8184          MVGHI 1408(2),4097
00005AB0 E310 C0D0 0004          000058F8   8185          LG    1,@lit_1938_336
00005AB6 4110 14AA               000004AA   8186          LA    1,1194(0,1)
00005ABA E310 2588 0024          00000588   8187          STG   1,1416(0,2)
00005AC0 E330 2590 0024          00000590   8188          STG   3,1424(0,2)
00005AC6 E3F0 2598 0024          00000598   8189          STG   15,1432(0,2)
00005ACC B904 00FD                          8190          LGR   15,13
00005AD0 A7FB 1000               00001000   8191          AGHI  15,4096
00005AD4 41F0 F171               00000171   8192          LA    15,369(0,15)
00005AD8 E3F0 25A0 0024          000005A0   8193          STG   15,1440(0,2)
00005ADE 4110 2578               00000578   8194          LA    1,1400(0,2)
00005AE2 E3F0 C0C8 0004          000058F0   8195          LG    15,@lit_1938_337 ; snprintf
00005AE8                                    8196 @@gen_label504 DS    0H
00005AE8 05EF                               8197          BALR  14,15
00005AEA                                    8198 @@gen_label505 DS    0H
                                            8199 * ***
                                            8200 * ***
                                            8201 * ***         path = spath;
00005AEA 4130 D170               00000170   8202          LA    3,368(0,13)
                                            8203 * ***      }
00005AEE                                    8204 @L818    DS    0H
                                            8205 * ***
                                            8206 * ***      do { if ((((rktp->rktp_rkt->rkt_rk)->rk_conf.debug & (0x4))\
                                            8207 * )) rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf,rktp->rktp_rkt->rk\
                                            8208 * t_rk,((void *)0), 7,(0x4), "OFFSET","%s [%" "d" "]: using offset fil\
                                            8209 * e %s", rktp->rktp_rkt->rkt_topic->str, rktp->rktp_partition, path); \
                                            8210 * } while (0);
00005AEE                                    8211 @L825    DS    0H
00005AEE E3F0 5060 0004          00000060   8212          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005AF4 E3F0 F148 0004          00000148   8213          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00005AFA 9104 F323      00000323 00000004   8214          TM    803(15),4
00005AFE 4780 C36C               00005B94   8215          BZ    @L828
00005B02 E3F0 5060 0004          00000060   8216          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005B08 E3F0 F148 0004          00000148   8217          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00005B0E 41F0 F210               00000210   8218          LA    15,528(0,15)
00005B12 B904 001D                          8219          LGR   1,13
00005B16 A71B 2000               00002000   8220          AGHI  1,8192
00005B1A E3F0 1578 0024          00000578   8221          STG   15,1400(0,1)
00005B20 E3F0 5060 0004          00000060   8222          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005B26 E3F0 F148 0004          00000148   8223          LG    15,328(0,15)
00005B2C E3F0 1580 0024          00000580   8224          STG   15,1408(0,1)
00005B32 D707 1588 1588 00000588 00000588   8225          XC    1416(8,1),1416(1)
00005B38 E548 1590 0007          00000590   8226          MVGHI 1424(1),7
00005B3E E548 1598 0004          00000598   8227          MVGHI 1432(1),4
00005B44 E3F0 C0D0 0004          000058F8   8228          LG    15,@lit_1938_336
00005B4A 4120 F130               00000130   8229          LA    2,304(0,15)
00005B4E E320 15A0 0024          000005A0   8230          STG   2,1440(0,1)
00005B54 41F0 F4B2               000004B2   8231          LA    15,1202(0,15)
00005B58 E3F0 15A8 0024          000005A8   8232          STG   15,1448(0,1)
00005B5E E3F0 5060 0004          00000060   8233          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
                                                                                                                           Page  167 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005B64 E3F0 F080 0004          00000080   8234          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
00005B6A E3F0 F008 0004          00000008   8235          LG    15,8(0,15)
00005B70 E3F0 15B0 0024          000005B0   8236          STG   15,1456(0,1)
00005B76 E3F0 5068 0014          00000068   8237          LGF   15,104(0,5)
00005B7C E3F0 15B8 0024          000005B8   8238          STG   15,1464(0,1)
00005B82 E330 15C0 0024          000005C0   8239          STG   3,1472(0,1)
00005B88 4110 1578               00000578   8240          LA    1,1400(0,1)
00005B8C E3F0 C0E0 0004          00005908   8241          LG    15,@lit_1938_346 ; rd_kafka_log0
00005B92                                    8242 @@gen_label507 DS    0H
00005B92 05EF                               8243          BALR  14,15
00005B94                                    8244 @@gen_label508 DS    0H
00005B94                                    8245 @L828    DS    0H
                                            8246 * ***
                                            8247 * ***
                                            8248 * ***
                                            8249 * ***
                                            8250 * ***      rktp->rktp_offset_path = rd_strdup(path);
00005B94 B904 002D                          8251          LGR   2,13
00005B98 A72B 2000               00002000   8252          AGHI  2,8192
00005B9C E330 2578 0024          00000578   8253          STG   3,1400(0,2)
00005BA2 4110 2578               00000578   8254          LA    1,1400(0,2)
00005BA6 E3F0 C0E8 0004          00005910   8255          LG    15,@lit_1938_347 ; rd_strdup
00005BAC                                    8256 @@gen_label509 DS    0H
00005BAC 05EF                               8257          BALR  14,15
00005BAE                                    8258 @@gen_label510 DS    0H
00005BAE E3F0 5278 0024          00000278   8259          STG   15,632(0,5)
                                            8260 * ***
                                            8261 * ***
                                            8262 * ***
                                            8263 * ***      if (rktp->rktp_rkt->rkt_conf.offset_store_sync_interval_ms \
                                            8264 * > 0)
00005BB4 E3F0 5060 0004          00000060   8265          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005BBA E55C F3F8 0000          000003F8   8266          CHSI  1016(15),0
00005BC0 47D0 C400               00005C28   8267          BNH   @L829
                                            8268 * ***         rd_kafka_timer_start0(&rktp->rktp_rkt->rkt_rk->rk_timers\
                                            8269 * ,&rktp->rktp_offset_sync_tmr,rktp->rktp_rkt->rkt_conf. offset_store_\
                                            8270 * sync_interval_ms * 1000ll,0,1,rd_kafka_offset_sync_tmr_cb,rktp);
00005BC4 E3F0 5060 0004          00000060   8271          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005BCA E3F0 F148 0004          00000148   8272          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00005BD0 A719 1010               00001010   8273          LGHI  1,4112      ; 4112
00005BD4 41F1 F000               00000000   8274          LA    15,0(1,15)
00005BD8 E3F0 2578 0024          00000578   8275          STG   15,1400(0,2)
00005BDE 41F0 5328               00000328   8276          LA    15,808(0,5)
00005BE2 E3F0 2580 0024          00000580   8277          STG   15,1408(0,2)
00005BE8 E3F0 5060 0004          00000060   8278          LG    15,96(0,5)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005BEE E3F0 F3F8 0014          000003F8   8279          LGF   15,1016(0,15)
00005BF4 A7FD 03E8               000003E8   8280          MGHI  15,1000
00005BF8 E3F0 2588 0024          00000588   8281          STG   15,1416(0,2)
00005BFE D707 2590 2590 00000590 00000590   8282          XC    1424(8,2),1424(2)
00005C04 E548 2598 0001          00000598   8283          MVGHI 1432(2),1
00005C0A E3F0 C0F8 0004          00005920   8284          LG    15,@lit_1938_349 ; rd_kafka_offset_sync_tmr_cb
00005C10 E3F0 25A0 0024          000005A0   8285          STG   15,1440(0,2)
                                                                                                                           Page  168 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005C16 E350 25A8 0024          000005A8   8286          STG   5,1448(0,2)
00005C1C 4110 2578               00000578   8287          LA    1,1400(0,2)
00005C20 E3F0 C0F0 0004          00005918   8288          LG    15,@lit_1938_350 ; rd_kafka_timer_start0
00005C26                                    8289 @@gen_label512 DS    0H
00005C26 05EF                               8290          BALR  14,15
00005C28                                    8291 @@gen_label513 DS    0H
00005C28                                    8292 @L829    DS    0H
                                            8293 * ***
                                            8294 * ***
                                            8295 * ***
                                            8296 * ***
                                            8297 * ***
                                            8298 * ***      if (rd_kafka_offset_file_open(rktp) != -1) {
00005C28 E350 2578 0024          00000578   8299          STG   5,1400(0,2)
00005C2E 4110 2578               00000578   8300          LA    1,1400(0,2)
00005C32 E3F0 C100 0004          00005928   8301          LG    15,@lit_1938_351 ; rd_kafka_offset_file_open
00005C38                                    8302 @@gen_label514 DS    0H
00005C38 05EF                               8303          BALR  14,15
00005C3A                                    8304 @@gen_label515 DS    0H
00005C3A A7FE FFFF               0000FFFF   8305          CHI   15,-1
00005C3E 4780 C430               00005C58   8306          BE    @L830
                                            8307 * ***
                                            8308 * ***         offset = rd_kafka_offset_file_read(rktp);
00005C42 E350 2578 0024          00000578   8309          STG   5,1400(0,2)
00005C48 4110 2578               00000578   8310          LA    1,1400(0,2)
00005C4C E3F0 C108 0004          00005930   8311          LG    15,@lit_1938_352 ; rd_kafka_offset_file_read
00005C52                                    8312 @@gen_label517 DS    0H
00005C52 05EF                               8313          BALR  14,15
00005C54                                    8314 @@gen_label518 DS    0H
00005C54 B904 004F                          8315          LGR   4,15        ; offset
                                            8316 * ***      }
00005C58                                    8317 @L830    DS    0H
                                            8318 * ***
                                            8319 * ***      if (offset != -1001) {
00005C58 A74F FC17               0000FC17   8320          CGHI  4,-1001
00005C5C 4780 C460               00005C88   8321          BE    @L831
                                            8322 * ***
                                            8323 * ***         rktp->rktp_stored_offset = offset;
00005C60 E340 5218 0024          00000218   8324          STG   4,536(0,5)  ; offset of rktp_stored_offset in rd_kafka_t*
                                                                oppar_s
                                            8325 * ***         rktp->rktp_committed_offset = offset;
00005C66 E340 5228 0024          00000228   8326          STG   4,552(0,5)  ; offset of rktp_committed_offset in rd_kafk*
                                                                a_toppar_s
                                            8327 * ***                   rd_kafka_toppar_next_offset_handle(rktp, offse\
                                            8328 * t);
00005C6C E350 2578 0024          00000578   8329          STG   5,1400(0,2)
00005C72 E340 2580 0024          00000580   8330          STG   4,1408(0,2)
00005C78 4110 2578               00000578   8331          LA    1,1400(0,2)
00005C7C E3F0 C110 0004          00005938   8332          LG    15,@lit_1938_353 ; rd_kafka_toppar_next_offset_handle
00005C82                                    8333 @@gen_label520 DS    0H
00005C82 05EF                               8334          BALR  14,15
00005C84                                    8335 @@gen_label521 DS    0H
                                                                                                                           Page  169 
  Active Usings: @REGION_1938_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8336 * ***
                                            8337 * ***      } else {
00005C84 47F0 C494               00005CBC   8338          B     @L832
00005C88                                    8339 @L831    DS    0H
                                            8340 * ***
                                            8341 * ***         rktp->rktp_committed_offset = -1001;
00005C88 E548 5228 FC17          00000228   8342          MVGHI 552(5),-1001 ; offset of rktp_committed_offset in rd_kaf*
                                                                ka_toppar_s
                                            8343 * ***         rd_kafka_offset_reset(rktp, -1001,
                                            8344 * ***                     RD_KAFKA_RESP_ERR__FS,
                                            8345 * ***                     "non-readable offset file");
00005C8E E350 2578 0024          00000578   8346          STG   5,1400(0,2)
00005C94 E548 2580 FC17          00000580   8347          MVGHI 1408(2),-1001
00005C9A E548 2588 FF43          00000588   8348          MVGHI 1416(2),-189
00005CA0 E3F0 C0D0 0004          000058F8   8349          LG    15,@lit_1938_336
00005CA6 41F0 F4D0               000004D0   8350          LA    15,1232(0,15)
00005CAA E3F0 2590 0024          00000590   8351          STG   15,1424(0,2)
00005CB0 4110 2578               00000578   8352          LA    1,1400(0,2)
00005CB4 E3F0 C118 0004          00005940   8353          LG    15,@lit_1938_355 ; rd_kafka_offset_reset
00005CBA                                    8354 @@gen_label522 DS    0H
00005CBA 05EF                               8355          BALR  14,15
00005CBC                                    8356 @@gen_label523 DS    0H
                                            8357 * ***      }
00005CBC                                    8358 @L832    DS    0H
                                            8359 * ***   }
00005CBC                                    8360 @ret_lab_1938 DS 0H
                                            8361 * * **** Start of Epilogue
                                            8362          DCCEPIL
00005CBC                                    8363+         ds 0h                                                          01-DCCEP
                                            8364+* Epilog
00005CBC D707 D088 D088 00000088 00000088   8365+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005CC2 E3D0 D080 0004          00000080   8366+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005CC8 E3C0 D090 0004          00000090   8367+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005CCE E3B0 C018 0004          00000018   8368+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005CD4 E3C0 B010 0021          00000010   8369+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005CDA E3E0 D008 0004          00000008   8370+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005CE0 EB1C D020 0004          00000020   8371+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005CE6 078E                               8372+         bcr 8,14                if same dsab, just return              01-DCCEP
00005CE8 E3F0 D010 0024          00000010   8373+         stg 15,16(0,13)         save return code                       01-DCCEP
00005CEE E300 D018 0024          00000018   8374+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005CF4 E3F0 D090 0004          00000090   8375+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005CFA E3F0 F018 0004          00000018   8376+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005D00 47F0 F040               00000040   8377+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8378+* End of Epilog
                                            8379 * * **** End of Epilogue
                                            8380          DROP  12
                                            8381 *
                                            8382 *   DSECT for automatic variables in "rd_kafka_offset_file_init"
                                            8383 *      (FUNCTION #1938)
                                            8384 *
00000000                00000000 00002571   8385 @AUTO#rd_kafka_offset_file_init DSECT
00000000                                    8386          DS    XL368
                                                                                                                           Page  170 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00000170                                    8387 rd_kafka_offset_file_init#offset#0 DS 8XL1 ; offset
00000178                00000178 00000170   8388          ORG   @AUTO#rd_kafka_offset_file_init+368
00000170                                    8389 rd_kafka_offset_file_init#spath#0 DS 4097XL1 ; spath
00001171                00001171 00001171   8390          ORG   @AUTO#rd_kafka_offset_file_init+4465
00001171                                    8391 rd_kafka_offset_file_init#escfile#1 DS 4096XL1 ; escfile
00002171                00002171 00002171   8392          ORG   @AUTO#rd_kafka_offset_file_init+8561
00002171                                    8393 rd_kafka_offset_file_init#tmpfile#1 DS 1024XL1 ; tmpfile
                                            8394 *
00005D04                00000000 00006B1A   8395 @CODE    CSECT
                                            8396 *
                                            8397 *
                                            8398 *
                                            8399 * ....... start of rd_kafka_offset_broker_term
00005D04                                    8400 @LNAME1939 DS  0H
00005D04 0000001B                           8401          DC    X'0000001B'
00005D08 99846D9281869281                   8402          DC    C'rd_kafka_offset_broker_term'
00005D23 00                                 8403          DC    X'00'
                                            8404 rd_kafka_offset_broker_term DCCPRLG CINDEX=1939,BASER=0,FRAME=168,SAVEA*
                                                                REA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1939
                                            8405          macro
                                            8406          dccextrn &m
                                            8407          gblc    &$dccext(1000)
                                            8408          gbla    &$dccexti
                                            8409          lcla    &i
                                            8410 &$dccext(&$dccexti+1) setc    '&m'
                                            8411 &i       seta    1
                                            8412 .loop    aif    (&i gt &$dccexti).around
                                            8413          aif    ('&$dccext(&i)' eq '&m').getout
                                            8414 &i       seta    &i+1
                                            8415          ago     .loop
                                            8416 .around  anop
                                            8417 &$dccexti seta &$dccexti+1
                                            8418          extrn  &m
                                            8419 .getout  anop
                                            8420          mend
00005D28                                    8421+$eye0134    ds    0d                                                    02-DCCCA
00005D28 C4C3C3                             8422+         dc cl3'DCC'                                                    02-DCCCA
00005D2B 01                                 8423+         dc xl1'01' format one                                          02-DCCCA
00005D2C 00000000                           8424+         dc a(0)                                                        02-DCCCA
00005D30 0000000000000000                   8425+         dc ad(0)                                                       02-DCCCA
00005D38 00000000000000A8                   8426+         dc ad(168)                                                     02-DCCCA
00005D40 0000000000000000                   8427+         dc ad(0)                                                       02-DCCCA
00005D48 0000000000001000                   8428+         dc ad(4096)                                                    02-DCCCA
00005D50 20                                 8429+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005D51 03                                 8430+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005D52 03                                 8431+         dc al1(3)                                                      02-DCCCA
00005D53 08                                 8432+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005D54 00                                 8433+         dc bl.8'00000000'                                              02-DCCCA
00005D55 000000                             8434+         dc al3(0)                                                      02-DCCCA
00005D58 0000000000005D04                   8435+         dc ad(@LNAME1939)                                              02-DCCCA
00005D60                                    8436+         ds 0d                                                          02-DCCCA
00005D60 0000000000005D28                   8437+         dc ad($eye0134)                                                02-DCCCA
                                                                                                                           Page  171 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005D68 0000000000000000                   8438+         dc ad(0)                                                       02-DCCCA
00005D70                                    8439+         ds    0d                                                       01-DCCPR
00005D70                                    8440+rd_kafka_offset_broker_term ds 0d                                       01-DCCPR
00005D70                                    8441+@REGION_1939_1 ds 0h                                                    01-DCCPR
00005D70 EBEC D008 0024          00000008   8442+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            8443 * ******* End of Prologue
                                            8444 * *
                                            8445 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
00005D76 A7F9 0000               00000000   8446          LGHI  15,0        ; 0
                                            8447 * ***   }
                                            8448 * * **** Start of Epilogue
                                            8449          DCCEPIL
00005D7A                                    8450+         ds 0h                                                          01-DCCEP
                                            8451+* Epilog
                                            8452+* Epilog
00005D7A E3E0 D008 0004          00000008   8453+         lg    14,8(,13) restore the reg                                01-DCCEP
00005D80 EB1C D020 0004          00000020   8454+         lmg   1,12,32(13)                                              01-DCCEP
00005D86 07FE                               8455+         br   14                                                        01-DCCEP
                                            8456+* End of Epilog
                                            8457 * * **** End of Epilogue
                                            8458 *
                                            8459 *   DSECT for automatic variables in "rd_kafka_offset_broker_term"
                                            8460 *      (FUNCTION #1939)
                                            8461 *
00000000                00000000 000000A8   8462 @AUTO#rd_kafka_offset_broker_term DSECT
00000000                                    8463          DS    XL168
                                            8464 *
00005D88                00000000 00006B1A   8465 @CODE    CSECT
                                            8466 *
                                            8467 *
                                            8468 *
                                            8469 * ....... start of rd_kafka_offset_broker_init
00005D88                                    8470 @LNAME1940 DS  0H
00005D88 0000001B                           8471          DC    X'0000001B'
00005D8C 99846D9281869281                   8472          DC    C'rd_kafka_offset_broker_init'
00005DA7 00                                 8473          DC    X'00'
                                            8474 rd_kafka_offset_broker_init DCCPRLG CINDEX=1940,BASER=12,FRAME=200,ENTR*
                                                                Y=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1940
                                            8475          macro
                                            8476          dccextrn &m
                                            8477          gblc    &$dccext(1000)
                                            8478          gbla    &$dccexti
                                            8479          lcla    &i
                                            8480 &$dccext(&$dccexti+1) setc    '&m'
                                            8481 &i       seta    1
                                            8482 .loop    aif    (&i gt &$dccexti).around
                                            8483          aif    ('&$dccext(&i)' eq '&m').getout
                                            8484 &i       seta    &i+1
                                            8485          ago     .loop
                                            8486 .around  anop
                                            8487 &$dccexti seta &$dccexti+1
                                            8488          extrn  &m
                                                                                                                           Page  172 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8489 .getout  anop
                                            8490          mend
00005DA8                                    8491+$eye0137    ds    0d                                                    02-DCCCA
00005DA8 C4C3C3                             8492+         dc cl3'DCC'                                                    02-DCCCA
00005DAB 01                                 8493+         dc xl1'01' format one                                          02-DCCCA
00005DAC 00000000                           8494+         dc a(0)                                                        02-DCCCA
00005DB0 0000000000005E1A                   8495+         dc ad(@PER_1940)                                               02-DCCCA
00005DB8 00000000000000C8                   8496+         dc ad(200)                                                     02-DCCCA
00005DC0 0000000000000000                   8497+         dc ad(0)                                                       02-DCCCA
00005DC8 0000000000001000                   8498+         dc ad(4096)                                                    02-DCCCA
00005DD0 20                                 8499+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005DD1 03                                 8500+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005DD2 03                                 8501+         dc al1(3)                                                      02-DCCCA
00005DD3 08                                 8502+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005DD4 00                                 8503+         dc bl.8'00000000'                                              02-DCCCA
00005DD5 000000                             8504+         dc al3(0)                                                      02-DCCCA
00005DD8 0000000000005D88                   8505+         dc ad(@LNAME1940)                                              02-DCCCA
00005DE0                                    8506+         ds 0d                                                          02-DCCCA
00005DE0 0000000000005DA8                   8507+         dc ad($eye0137)                                                02-DCCCA
00005DE8 0000000000000000                   8508+         dc ad(0)                                                       02-DCCCA
00005DF0                                    8509+         ds    0d                                                       01-DCCPR
00005DF0                                    8510+rd_kafka_offset_broker_init ds 0d                                       01-DCCPR
00005DF0                                    8511+@REGION_1940_1 ds 0h                                                    01-DCCPR
00005DF0 EBEC D008 0024          00000008   8512+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005DF6 E3E0 D088 0004          00000088   8513+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005DFC E3C0 D090 0004          00000090   8514+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005E02 B904 002E                          8515+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005E06 E3B0 C018 0004          00000018   8516+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005E0C A7EB 00C8               000000C8   8517+         aghi  14,200              increase by frame size               01-DCCPR
00005E10 E3E0 C020 0021          00000020   8518+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005E16 4720 B020               00000020   8519+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005E1A                                    8520+@PER_1940 ds   0h                                                       01-DCCPR
00005E1A EBDE 2080 0024          00000080   8521+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005E20 E3C0 2090 0024          00000090   8522+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005E26 B904 00D2                          8523+         lgr   13,2                set real frame pointer               01-DCCPR
00005E2A B904 00CF                          8524+         lgr   12,15               set base reg                         01-DCCPR
                        00005DF0            8525+         using @REGION_1940_1,12                                        01-DCCPR
                                            8526 * ******* End of Prologue
                                            8527 * *
                                            8528 * ***           if (!(rd_atomic32_get(&(rktp->rktp_rkt->rkt_rk)->rk_si\
                                            8529 * mple_cnt) > 0))
00005E2E E320 1000 0004          00000000   8530          LG    2,0(0,1)    ; rktp
00005E34 E3F0 2060 0004          00000060   8531          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005E3A E3F0 F148 0004          00000148   8532          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00005E40 41F0 FC40               00000C40   8533          LA    15,3136(0,15)
00005E44 E3F0 D0A8 0024          000000A8   8534          STG   15,168(0,13)
00005E4A 4110 D0A8               000000A8   8535          LA    1,168(0,13)
00005E4E E3F0 C0F0 0004          00005EE0   8536          LG    15,@lit_1940_358 ; rd_atomic32_get
00005E54                                    8537 @@gen_label524 DS    0H
00005E54 05EF                               8538          BALR  14,15
00005E56                                    8539 @@gen_label525 DS    0H
00005E56 12FF                               8540          LTR   15,15
                                                                                                                           Page  173 
  Active Usings: @REGION_1940_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005E58 47D0 C09A               00005E8A   8541          BNH   @ret_lab_1940
                                            8542 * ***                   return;
00005E5C                                    8543 @L833    DS    0H
                                            8544 * ***           rd_kafka_offset_reset(rktp, -1000, 0,
                                            8545 * ***                                 "query broker for offsets");
00005E5C E320 D0A8 0024          000000A8   8546          STG   2,168(0,13)
00005E62 E548 D0B0 FC18          000000B0   8547          MVGHI 176(13),-1000
00005E68 D707 D0B8 D0B8 000000B8 000000B8   8548          XC    184(8,13),184(13)
00005E6E E3F0 C100 0004          00005EF0   8549          LG    15,@lit_1940_359
00005E74 41F0 F4EA               000004EA   8550          LA    15,1258(0,15)
00005E78 E3F0 D0C0 0024          000000C0   8551          STG   15,192(0,13)
00005E7E 4110 D0A8               000000A8   8552          LA    1,168(0,13)
00005E82 E3F0 C0F8 0004          00005EE8   8553          LG    15,@lit_1940_360 ; rd_kafka_offset_reset
00005E88                                    8554 @@gen_label527 DS    0H
00005E88 05EF                               8555          BALR  14,15
00005E8A                                    8556 @@gen_label528 DS    0H
                                            8557 * ***   }
00005E8A                                    8558 @ret_lab_1940 DS 0H
                                            8559 * * **** Start of Epilogue
                                            8560          DCCEPIL
00005E8A                                    8561+         ds 0h                                                          01-DCCEP
                                            8562+* Epilog
00005E8A D707 D088 D088 00000088 00000088   8563+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00005E90 E3D0 D080 0004          00000080   8564+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005E96 E3C0 D090 0004          00000090   8565+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00005E9C E3B0 C018 0004          00000018   8566+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005EA2 E3C0 B010 0021          00000010   8567+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005EA8 E3E0 D008 0004          00000008   8568+         lg  14,8(0,13)          load up return address                 01-DCCEP
00005EAE EB1C D020 0004          00000020   8569+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005EB4 078E                               8570+         bcr 8,14                if same dsab, just return              01-DCCEP
00005EB6 E3F0 D010 0024          00000010   8571+         stg 15,16(0,13)         save return code                       01-DCCEP
00005EBC E300 D018 0024          00000018   8572+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005EC2 E3F0 D090 0004          00000090   8573+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005EC8 E3F0 F018 0004          00000018   8574+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005ECE 47F0 F040               00000040   8575+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8576+* End of Epilog
                                            8577 * * **** End of Epilogue
00005ED8                                    8578          DS    0D
00005ED8 000000C8                           8579 @FRAMESIZE_1940 DC F'200'
00005EDC 00000000
00005EE0 00000000000002F0                   8580 @lit_1940_358 DC AD(rd_atomic32_get)
00005EE8 00000000000050E0                   8581 @lit_1940_360 DC AD(rd_kafka_offset_reset)
00005EF0 0000000000006D48                   8582 @lit_1940_359 DC AD(@strings@)
                                            8583          DROP  12
                                            8584 *
                                            8585 *   DSECT for automatic variables in "rd_kafka_offset_broker_init"
                                            8586 *      (FUNCTION #1940)
                                            8587 *
00000000                00000000 000000A8   8588 @AUTO#rd_kafka_offset_broker_init DSECT
00000000                                    8589          DS    XL168
                                            8590 *
00005EF8                00000000 00006B1A   8591 @CODE    CSECT
                                                                                                                           Page  174 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8592 *
                                            8593 *
                                            8594 *
                                            8595 * ....... start of rd_kafka_offset_store_term
                                            8596 rd_kafka_offset_store_term ALIAS X'99846D92818692816D968686A285A36DA2A3*
                                                                9699856DA3859994'
00005EF8                                    8597 @LNAME1920 DS  0H
00005EF8 0000001A                           8598          DC    X'0000001A'
00005EFC 99846D9281869281                   8599          DC    C'rd_kafka_offset_store_term'
00005F16 00                                 8600          DC    X'00'
                                            8601 rd_kafka_offset_store_term DCCPRLG CINDEX=1920,BASER=12,FRAME=248,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME1920
                                            8602          macro
                                            8603          dccextrn &m
                                            8604          gblc    &$dccext(1000)
                                            8605          gbla    &$dccexti
                                            8606          lcla    &i
                                            8607 &$dccext(&$dccexti+1) setc    '&m'
                                            8608 &i       seta    1
                                            8609 .loop    aif    (&i gt &$dccexti).around
                                            8610          aif    ('&$dccext(&i)' eq '&m').getout
                                            8611 &i       seta    &i+1
                                            8612          ago     .loop
                                            8613 .around  anop
                                            8614 &$dccexti seta &$dccexti+1
                                            8615          extrn  &m
                                            8616 .getout  anop
                                            8617          mend
00005F18                                    8618+$eye0140    ds    0d                                                    02-DCCCA
00005F18 C4C3C3                             8619+         dc cl3'DCC'                                                    02-DCCCA
00005F1B 01                                 8620+         dc xl1'01' format one                                          02-DCCCA
00005F1C 00000000                           8621+         dc a(0)                                                        02-DCCCA
00005F20 0000000000005F8A                   8622+         dc ad(@PER_1920)                                               02-DCCCA
00005F28 00000000000000F8                   8623+         dc ad(248)                                                     02-DCCCA
00005F30 0000000000000000                   8624+         dc ad(0)                                                       02-DCCCA
00005F38 0000000000001000                   8625+         dc ad(4096)                                                    02-DCCCA
00005F40 20                                 8626+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005F41 03                                 8627+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005F42 03                                 8628+         dc al1(3)                                                      02-DCCCA
00005F43 08                                 8629+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005F44 00                                 8630+         dc bl.8'00000000'                                              02-DCCCA
00005F45 000000                             8631+         dc al3(0)                                                      02-DCCCA
00005F48 0000000000005EF8                   8632+         dc ad(@LNAME1920)                                              02-DCCCA
00005F50                                    8633+         ds 0d                                                          02-DCCCA
00005F50 0000000000005F18                   8634+         dc ad($eye0140)                                                02-DCCCA
00005F58 0000000000000000                   8635+         dc ad(0)                                                       02-DCCCA
00005F60                                    8636+         ds    0d                                                       01-DCCPR
                                            8637+         entry rd_kafka_offset_store_term                               01-DCCPR
00005F60                                    8638+rd_kafka_offset_store_term ds 0d                                        01-DCCPR
00005F60                                    8639+@REGION_1920_1 ds 0h                                                    01-DCCPR
00005F60 EBEC D008 0024          00000008   8640+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005F66 E3E0 D088 0004          00000088   8641+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page  175 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00005F6C E3C0 D090 0004          00000090   8642+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005F72 B904 002E                          8643+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005F76 E3B0 C018 0004          00000018   8644+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00005F7C A7EB 00F8               000000F8   8645+         aghi  14,248              increase by frame size               01-DCCPR
00005F80 E3E0 C020 0021          00000020   8646+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005F86 4720 B020               00000020   8647+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00005F8A                                    8648+@PER_1920 ds   0h                                                       01-DCCPR
00005F8A EBDE 2080 0024          00000080   8649+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00005F90 E3C0 2090 0024          00000090   8650+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00005F96 B904 00D2                          8651+         lgr   13,2                set real frame pointer               01-DCCPR
00005F9A B904 00CF                          8652+         lgr   12,15               set base reg                         01-DCCPR
                        00005F60            8653+         using @REGION_1920_1,12                                        01-DCCPR
                                            8654 * ******* End of Prologue
                                            8655 * *
00005F9E E330 1000 0004          00000000   8656          LG    3,0(0,1)    ; rktp
00005FA4 5820 100C               0000000C   8657          L     2,12(0,1)   ; err
                                            8658 * ***           rd_kafka_resp_err_t err2;
                                            8659 * ***
                                            8660 * ***      do { if ((((rktp->rktp_rkt->rkt_rk)->rk_conf.debug & (0x4))\
                                            8661 * )) rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf,rktp->rktp_rkt->rk\
                                            8662 * t_rk,((void *)0), 7,(0x4), "STORETERM","%s [%" "d" "]: offset store \
                                            8663 * terminating", rktp->rktp_rkt->rkt_topic->str, rktp->rktp_partition);\
                                            8664 *  } while (0);
00005FA8                                    8665 @L834    DS    0H
00005FA8 E3F0 3060 0004          00000060   8666          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005FAE E3F0 F148 0004          00000148   8667          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00005FB4 9104 F323      00000323 00000004   8668          TM    803(15),4
00005FB8 4780 C0E0               00006040   8669          BZ    @L837
00005FBC E3F0 3060 0004          00000060   8670          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005FC2 E3F0 F148 0004          00000148   8671          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00005FC8 41F0 F210               00000210   8672          LA    15,528(0,15)
00005FCC E3F0 D0B0 0024          000000B0   8673          STG   15,176(0,13)
00005FD2 E3F0 3060 0004          00000060   8674          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
00005FD8 E3F0 F148 0004          00000148   8675          LG    15,328(0,15)
00005FDE E3F0 D0B8 0024          000000B8   8676          STG   15,184(0,13)
00005FE4 D707 D0C0 D0C0 000000C0 000000C0   8677          XC    192(8,13),192(13)
00005FEA E548 D0C8 0007          000000C8   8678          MVGHI 200(13),7
00005FF0 E548 D0D0 0004          000000D0   8679          MVGHI 208(13),4
00005FF6 E3F0 C138 0004          00006098   8680          LG    15,@lit_1920_362
00005FFC 4110 F504               00000504   8681          LA    1,1284(0,15)
00006000 E310 D0D8 0024          000000D8   8682          STG   1,216(0,13)
00006006 41F0 F50E               0000050E   8683          LA    15,1294(0,15)
0000600A E3F0 D0E0 0024          000000E0   8684          STG   15,224(0,13)
00006010 E3F0 3060 0004          00000060   8685          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
00006016 E3F0 F080 0004          00000080   8686          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
0000601C E3F0 F008 0004          00000008   8687          LG    15,8(0,15)
00006022 E3F0 D0E8 0024          000000E8   8688          STG   15,232(0,13)
00006028 E3F0 3068 0014          00000068   8689          LGF   15,104(0,3)
0000602E E3F0 D0F0 0024          000000F0   8690          STG   15,240(0,13)
00006034 4110 D0B0               000000B0   8691          LA    1,176(0,13)
00006038 E3F0 C130 0004          00006090   8692          LG    15,@lit_1920_363 ; rd_kafka_log0
0000603E                                    8693 @@gen_label530 DS    0H
                                                                                                                           Page  176 
  Active Usings: @REGION_1920_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000603E 05EF                               8694          BALR  14,15
00006040                                    8695 @@gen_label531 DS    0H
00006040                                    8696 @L837    DS    0H
                                            8697 * ***
                                            8698 * ***
                                            8699 * ***
                                            8700 * ***
                                            8701 * ***           rktp->rktp_flags &= ~0x8;
00006040 58F0 32B0               000002B0   8702          L     15,688(0,3)
00006044 A5F7 FFF7               0000FFF7   8703          NILL  15,65527
00006048 50F0 32B0               000002B0   8704          ST    15,688(0,3)
                                            8705 * ***
                                            8706 * ***      rd_kafka_timer_stop(&rktp->rktp_rkt->rkt_rk->rk_timers,
                                            8707 * ***                &rktp->rktp_offset_commit_tmr, 1);
0000604C E3F0 3060 0004          00000060   8708          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
00006052 E3F0 F148 0004          00000148   8709          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00006058 A719 1010               00001010   8710          LGHI  1,4112      ; 4112
0000605C 41F1 F000               00000000   8711          LA    15,0(1,15)
00006060 E3F0 D0B0 0024          000000B0   8712          STG   15,176(0,13)
00006066 41F0 32F0               000002F0   8713          LA    15,752(0,3)
0000606A E3F0 D0B8 0024          000000B8   8714          STG   15,184(0,13)
00006070 E548 D0C0 0001          000000C0   8715          MVGHI 192(13),1
00006076 4110 D0B0               000000B0   8716          LA    1,176(0,13)
0000607A E3F0 C140 0004          000060A0   8717          LG    15,@lit_1920_365 ; rd_kafka_timer_stop
00006080                                    8718 @@gen_label532 DS    0H
00006080 05EF                               8719          BALR  14,15
00006082                                    8720 @@gen_label533 DS    0H
                                            8721 * ***
                                            8722 * ***           switch (rktp->rktp_rkt->rkt_conf.offset_store_method)
00006082 47F0 C194               000060F4   8723          B     @L838
00006088                                    8724          DS    0D
00006088 000000F8                           8725 @FRAMESIZE_1920 DC F'248'
0000608C 00000000
00006090 0000000000000000                   8726 @lit_1920_363 DC AD(rd_kafka_log0)
00006098 0000000000006D48                   8727 @lit_1920_362 DC AD(@strings@)
000060A0 0000000000000000                   8728 @lit_1920_365 DC AD(rd_kafka_timer_stop)
000060A8 0000000000004DB0                   8729 @lit_1920_366 DC AD(rd_kafka_offset_file_term)
000060B0 0000000000005D70                   8730 @lit_1920_367 DC AD(rd_kafka_offset_broker_term)
000060B8 0000000000000000                   8731 @lit_1920_369 DC AD(rd_kafka_toppar_fetch_stopped)
                                            8732 * ***           {
                                            8733 * ***           case RD_KAFKA_OFFSET_METHOD_FILE:
000060C0                                    8734 @L840    DS    0H
                                            8735 * ***                   err2 = rd_kafka_offset_file_term(rktp);
000060C0 E330 D0B0 0024          000000B0   8736          STG   3,176(0,13)
000060C6 4110 D0B0               000000B0   8737          LA    1,176(0,13)
000060CA E3F0 C148 0004          000060A8   8738          LG    15,@lit_1920_366 ; rd_kafka_offset_file_term
000060D0                                    8739 @@gen_label534 DS    0H
000060D0 05EF                               8740          BALR  14,15
000060D2                                    8741 @@gen_label535 DS    0H
                                            8742 * ***                   break;
000060D2 47F0 C1BA               0000611A   8743          B     @L839
                                            8744 * ***           case RD_KAFKA_OFFSET_METHOD_BROKER:
                                                                                                                           Page  177 
  Active Usings: @REGION_1920_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000060D6                                    8745 @L841    DS    0H
                                            8746 * ***                   err2 = rd_kafka_offset_broker_term(rktp);
000060D6 E330 D0B0 0024          000000B0   8747          STG   3,176(0,13)
000060DC 4110 D0B0               000000B0   8748          LA    1,176(0,13)
000060E0 E3F0 C150 0004          000060B0   8749          LG    15,@lit_1920_367 ; rd_kafka_offset_broker_term
000060E6                                    8750 @@gen_label536 DS    0H
000060E6 05EF                               8751          BALR  14,15
000060E8                                    8752 @@gen_label537 DS    0H
                                            8753 * ***                   break;
000060E8 47F0 C1BA               0000611A   8754          B     @L839
                                            8755 * ***           case RD_KAFKA_OFFSET_METHOD_NONE:
000060EC                                    8756 @L842    DS    0H
                                            8757 * ***                   err2 = RD_KAFKA_RESP_ERR_NO_ERROR;
000060EC A7F8 0000               00000000   8758          LHI   15,0        ; 0
                                            8759 * ***                   break;
000060F0 47F0 C1BA               0000611A   8760          B     @L839
                                            8761 * ***           }
000060F4                                    8762 @L838    DS    0H
000060F4 E3F0 3060 0004          00000060   8763          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
000060FA E3F0 F3FC 0012          000003FC   8764          LT    15,1020(0,15) ; offset of offset_store_method in rd_kafk*
                                                                a_topic_conf_s
00006100 4740 C1BA               0000611A   8765          BL    @L839
00006104 12FF                               8766          LTR   15,15
00006106 4780 C18C               000060EC   8767          BE    @L842
0000610A A7FE 0001               00000001   8768          CHI   15,1
0000610E 4780 C160               000060C0   8769          BE    @L840
00006112 A7FE 0002               00000002   8770          CHI   15,2
00006116 4780 C176               000060D6   8771          BE    @L841
0000611A                                    8772 @L839    DS    0H
                                            8773 * ***
                                            8774 * ***
                                            8775 * ***
                                            8776 * ***           if (!err)
0000611A 1222                               8777          LTR   2,2
0000611C 4770 C1C2               00006122   8778          BNZ   @L843
                                            8779 * ***                   err = err2;
00006120 182F                               8780          LR    2,15        ; err
00006122                                    8781 @L843    DS    0H
                                            8782 * ***
                                            8783 * ***           rd_kafka_toppar_fetch_stopped(rktp, err);
00006122 E330 D0B0 0024          000000B0   8784          STG   3,176(0,13)
00006128 B914 00F2                          8785          LGFR  15,2
0000612C E3F0 D0B8 0024          000000B8   8786          STG   15,184(0,13)
00006132 4110 D0B0               000000B0   8787          LA    1,176(0,13)
00006136 E3F0 C158 0004          000060B8   8788          LG    15,@lit_1920_369 ; rd_kafka_toppar_fetch_stopped
0000613C                                    8789 @@gen_label539 DS    0H
0000613C 05EF                               8790          BALR  14,15
0000613E                                    8791 @@gen_label540 DS    0H
                                            8792 * ***
                                            8793 * ***   }
0000613E                                    8794 @ret_lab_1920 DS 0H
                                            8795 * * **** Start of Epilogue
                                                                                                                           Page  178 
  Active Usings: @REGION_1920_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8796          DCCEPIL
0000613E                                    8797+         ds 0h                                                          01-DCCEP
                                            8798+* Epilog
0000613E D707 D088 D088 00000088 00000088   8799+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006144 E3D0 D080 0004          00000080   8800+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000614A E3C0 D090 0004          00000090   8801+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006150 E3B0 C018 0004          00000018   8802+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006156 E3C0 B010 0021          00000010   8803+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000615C E3E0 D008 0004          00000008   8804+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006162 EB1C D020 0004          00000020   8805+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006168 078E                               8806+         bcr 8,14                if same dsab, just return              01-DCCEP
0000616A E3F0 D010 0024          00000010   8807+         stg 15,16(0,13)         save return code                       01-DCCEP
00006170 E300 D018 0024          00000018   8808+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006176 E3F0 D090 0004          00000090   8809+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000617C E3F0 F018 0004          00000018   8810+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006182 47F0 F040               00000040   8811+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            8812+* End of Epilog
                                            8813 * * **** End of Epilogue
                                            8814          DROP  12
                                            8815 *
                                            8816 *   DSECT for automatic variables in "rd_kafka_offset_store_term"
                                            8817 *      (FUNCTION #1920)
                                            8818 *
00000000                00000000 000000AC   8819 @AUTO#rd_kafka_offset_store_term DSECT
00000000                                    8820          DS    XL168
000000A8                                    8821 rd_kafka_offset_store_term#err2#0 DS 1F ; err2
                                            8822 *
00006186                00000000 00006B1A   8823 @CODE    CSECT
                                            8824 *
                                            8825 *
                                            8826 *
                                            8827 * ....... start of rd_kafka_offset_store_stop
                                            8828 rd_kafka_offset_store_stop ALIAS X'99846D92818692816D968686A285A36DA2A3*
                                                                9699856DA2A39697'
00006186                                    8829 @LNAME1921 DS  0H
00006186 0000001A                           8830          DC    X'0000001A'
0000618A 99846D9281869281                   8831          DC    C'rd_kafka_offset_store_stop'
000061A4 00                                 8832          DC    X'00'
                                            8833 rd_kafka_offset_store_stop DCCPRLG CINDEX=1921,BASER=12,FRAME=272,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME1921
                                            8834          macro
                                            8835          dccextrn &m
                                            8836          gblc    &$dccext(1000)
                                            8837          gbla    &$dccexti
                                            8838          lcla    &i
                                            8839 &$dccext(&$dccexti+1) setc    '&m'
                                            8840 &i       seta    1
                                            8841 .loop    aif    (&i gt &$dccexti).around
                                            8842          aif    ('&$dccext(&i)' eq '&m').getout
                                            8843 &i       seta    &i+1
                                            8844          ago     .loop
                                            8845 .around  anop
                                                                                                                           Page  179 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8846 &$dccexti seta &$dccexti+1
                                            8847          extrn  &m
                                            8848 .getout  anop
                                            8849          mend
000061A8                                    8850+$eye0143    ds    0d                                                    02-DCCCA
000061A8 C4C3C3                             8851+         dc cl3'DCC'                                                    02-DCCCA
000061AB 01                                 8852+         dc xl1'01' format one                                          02-DCCCA
000061AC 00000000                           8853+         dc a(0)                                                        02-DCCCA
000061B0 000000000000621A                   8854+         dc ad(@PER_1921)                                               02-DCCCA
000061B8 0000000000000110                   8855+         dc ad(272)                                                     02-DCCCA
000061C0 0000000000000000                   8856+         dc ad(0)                                                       02-DCCCA
000061C8 0000000000001000                   8857+         dc ad(4096)                                                    02-DCCCA
000061D0 20                                 8858+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000061D1 03                                 8859+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000061D2 03                                 8860+         dc al1(3)                                                      02-DCCCA
000061D3 08                                 8861+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000061D4 00                                 8862+         dc bl.8'00000000'                                              02-DCCCA
000061D5 000000                             8863+         dc al3(0)                                                      02-DCCCA
000061D8 0000000000006186                   8864+         dc ad(@LNAME1921)                                              02-DCCCA
000061E0                                    8865+         ds 0d                                                          02-DCCCA
000061E0 00000000000061A8                   8866+         dc ad($eye0143)                                                02-DCCCA
000061E8 0000000000000000                   8867+         dc ad(0)                                                       02-DCCCA
000061F0                                    8868+         ds    0d                                                       01-DCCPR
                                            8869+         entry rd_kafka_offset_store_stop                               01-DCCPR
000061F0                                    8870+rd_kafka_offset_store_stop ds 0d                                        01-DCCPR
000061F0                                    8871+@REGION_1921_1 ds 0h                                                    01-DCCPR
000061F0 EBEC D008 0024          00000008   8872+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000061F6 E3E0 D088 0004          00000088   8873+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000061FC E3C0 D090 0004          00000090   8874+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006202 B904 002E                          8875+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006206 E3B0 C018 0004          00000018   8876+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000620C A7EB 0110               00000110   8877+         aghi  14,272              increase by frame size               01-DCCPR
00006210 E3E0 C020 0021          00000020   8878+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006216 4720 B020               00000020   8879+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000621A                                    8880+@PER_1921 ds   0h                                                       01-DCCPR
0000621A EBDE 2080 0024          00000080   8881+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006220 E3C0 2090 0024          00000090   8882+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006226 B904 00D2                          8883+         lgr   13,2                set real frame pointer               01-DCCPR
0000622A B904 00CF                          8884+         lgr   12,15               set base reg                         01-DCCPR
                        000061F0            8885+         using @REGION_1921_1,12                                        01-DCCPR
                                            8886 * ******* End of Prologue
                                            8887 * *
                                            8888 * ***           rd_kafka_resp_err_t err = RD_KAFKA_RESP_ERR_NO_ERROR;
0000622E E330 1000 0004          00000000   8889          LG    3,0(0,1)    ; rktp
00006234 A728 0000               00000000   8890          LHI   2,0         ; 0
                                            8891 * ***
                                            8892 * ***           if (!(rktp->rktp_flags & 0x4))
00006238 9104 32B3      000002B3 00000004   8893          TM    691(3),4
0000623C 4780 C210               00006400   8894          BZ    @_done@1921@0
                                            8895 * ***                   goto done;
00006240                                    8896 @L844    DS    0H
                                            8897 * ***
                                                                                                                           Page  180 
  Active Usings: @REGION_1921_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8898 * ***           rktp->rktp_flags |= 0x8;
00006240 58F0 32B0               000002B0   8899          L     15,688(0,3)
00006244 A5FB 0008               00000008   8900          OILL  15,8
00006248 50F0 32B0               000002B0   8901          ST    15,688(0,3)
                                            8902 * ***
                                            8903 * ***           do { if ((((rktp->rktp_rkt->rkt_rk)->rk_conf.debug & (\
                                            8904 * 0x4)))) rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf,rktp->rktp_rk\
                                            8905 * t->rkt_rk,((void *)0), 7,(0x4), "OFFSET","%s [%" "d" "]: stopping of\
                                            8906 * fset store " "(stored offset %" "lld" ", committed offset %" "lld" "\
                                            8907 * , EOF offset %" "lld" ")", rktp->rktp_rkt->rkt_topic->str, rktp->rkt\
                                            8908 * p_partition, rktp->rktp_stored_offset, rktp->rktp_committed_offset, \
                                            8909 * rktp->rktp_offsets_fin.eof_offset); } while (0);
0000624C                                    8910 @L845    DS    0H
0000624C E3F0 3060 0004          00000060   8911          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
00006252 E3F0 F148 0004          00000148   8912          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00006258 9104 F323      00000323 00000004   8913          TM    803(15),4
0000625C 4780 C118               00006308   8914          BZ    @L848
00006260 E3F0 3060 0004          00000060   8915          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
00006266 E3F0 F148 0004          00000148   8916          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
0000626C 41F0 F210               00000210   8917          LA    15,528(0,15)
00006270 E3F0 D0B0 0024          000000B0   8918          STG   15,176(0,13)
00006276 E3F0 3060 0004          00000060   8919          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000627C E3F0 F148 0004          00000148   8920          LG    15,328(0,15)
00006282 E3F0 D0B8 0024          000000B8   8921          STG   15,184(0,13)
00006288 D707 D0C0 D0C0 000000C0 000000C0   8922          XC    192(8,13),192(13)
0000628E E548 D0C8 0007          000000C8   8923          MVGHI 200(13),7
00006294 E548 D0D0 0004          000000D0   8924          MVGHI 208(13),4
0000629A E3F0 C1E8 0004          000063D8   8925          LG    15,@lit_1921_372
000062A0 4110 F130               00000130   8926          LA    1,304(0,15)
000062A4 E310 D0D8 0024          000000D8   8927          STG   1,216(0,13)
000062AA 41F0 F530               00000530   8928          LA    15,1328(0,15)
000062AE E3F0 D0E0 0024          000000E0   8929          STG   15,224(0,13)
000062B4 E3F0 3060 0004          00000060   8930          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
000062BA E3F0 F080 0004          00000080   8931          LG    15,128(0,15) ; offset of rkt_topic in rd_kafka_topic_s
000062C0 E3F0 F008 0004          00000008   8932          LG    15,8(0,15)
000062C6 E3F0 D0E8 0024          000000E8   8933          STG   15,232(0,13)
000062CC E3F0 3068 0014          00000068   8934          LGF   15,104(0,3)
000062D2 E3F0 D0F0 0024          000000F0   8935          STG   15,240(0,13)
000062D8 E3F0 3218 0004          00000218   8936          LG    15,536(0,3)
000062DE E3F0 D0F8 0024          000000F8   8937          STG   15,248(0,13)
000062E4 E3F0 3228 0004          00000228   8938          LG    15,552(0,3)
000062EA E3F0 D100 0024          00000100   8939          STG   15,256(0,13)
000062F0 E3F0 3250 0004          00000250   8940          LG    15,592(0,3)
000062F6 E3F0 D108 0024          00000108   8941          STG   15,264(0,13)
000062FC 4110 D0B0               000000B0   8942          LA    1,176(0,13)
00006300 E3F0 C1E0 0004          000063D0   8943          LG    15,@lit_1921_373 ; rd_kafka_log0
00006306                                    8944 @@gen_label543 DS    0H
00006306 05EF                               8945          BALR  14,15
00006308                                    8946 @@gen_label544 DS    0H
00006308                                    8947 @L848    DS    0H
                                            8948 * ***
                                            8949 * ***   # 1045 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                                                                                                           Page  181 
  Active Usings: @REGION_1921_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            8950 * ***
                                            8951 * ***           if (rktp->rktp_rkt->rkt_rk->rk_conf.enable_auto_offset\
                                            8952 * _store &&
00006308 E3F0 3060 0004          00000060   8953          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000630E E3F0 F148 0004          00000148   8954          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00006314 E3F0 F764 0012          00000764   8955          LT    15,1892(0,15) ; offset of enable_auto_offset_store in rd*
                                                                _kafka_conf_s
0000631A 4780 C166               00006356   8956          BZ    @L849
                                            8957 * ***               rktp->rktp_stored_offset == -1001 &&
0000631E E558 3218 FC17          00000218   8958          CGHSI 536(3),-1001
00006324 4770 C166               00006356   8959          BNE   @L849
                                            8960 * ***               rktp->rktp_offsets_fin.eof_offset > 0)
00006328 E558 3250 0000          00000250   8961          CGHSI 592(3),0
0000632E 47D0 C166               00006356   8962          BNH   @L849
                                            8963 * ***                   rd_kafka_offset_store0(rktp, rktp->rktp_offset\
                                            8964 * s_fin.eof_offset,
                                            8965 * ***                                          0);
00006332 E330 D0B0 0024          000000B0   8966          STG   3,176(0,13)
00006338 E3F0 3250 0004          00000250   8967          LG    15,592(0,3)
0000633E E3F0 D0B8 0024          000000B8   8968          STG   15,184(0,13)
00006344 D707 D0C0 D0C0 000000C0 000000C0   8969          XC    192(8,13),192(13)
0000634A 4110 D0B0               000000B0   8970          LA    1,176(0,13)
0000634E E3F0 C1F0 0004          000063E0   8971          LG    15,@lit_1921_374 ; rd_kafka_offset_store0
00006354                                    8972 @@gen_label548 DS    0H
00006354 05EF                               8973          BALR  14,15
00006356                                    8974 @@gen_label549 DS    0H
00006356                                    8975 @L849    DS    0H
                                            8976 * ***
                                            8977 * ***
                                            8978 * ***
                                            8979 * ***           if ((rd_atomic32_get(&(rktp->rktp_rkt->rkt_rk)->rk_sim\
                                            8980 * ple_cnt) > 0) &&
00006356 E3F0 3060 0004          00000060   8981          LG    15,96(0,3)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000635C E3F0 F148 0004          00000148   8982          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00006362 41F0 FC40               00000C40   8983          LA    15,3136(0,15)
00006366 E3F0 D0B0 0024          000000B0   8984          STG   15,176(0,13)
0000636C 4110 D0B0               000000B0   8985          LA    1,176(0,13)
00006370 E3F0 C1F8 0004          000063E8   8986          LG    15,@lit_1921_375 ; rd_atomic32_get
00006376                                    8987 @@gen_label550 DS    0H
00006376 05EF                               8988          BALR  14,15
00006378                                    8989 @@gen_label551 DS    0H
00006378 12FF                               8990          LTR   15,15
0000637A 47D0 C1C2               000063B2   8991          BNH   @L850
                                            8992 * ***               rktp->rktp_stored_offset > rktp->rktp_committed_of\
                                            8993 * fset)
0000637E E3F0 3218 0004          00000218   8994          LG    15,536(0,3) ; offset of rktp_stored_offset in rd_kafka_t*
                                                                oppar_s
00006384 E3F0 3228 0020          00000228   8995          CG    15,552(0,3)
0000638A 47D0 C1C2               000063B2   8996          BNH   @L850
                                            8997 * ***                   err = rd_kafka_offset_commit(rktp, "offset sto\
                                            8998 * re stop");
0000638E E330 D0B0 0024          000000B0   8999          STG   3,176(0,13)
                                                                                                                           Page  182 
  Active Usings: @REGION_1921_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006394 E3F0 C1E8 0004          000063D8   9000          LG    15,@lit_1921_372
0000639A 41F0 F58C               0000058C   9001          LA    15,1420(0,15)
0000639E E3F0 D0B8 0024          000000B8   9002          STG   15,184(0,13)
000063A4 4110 D0B0               000000B0   9003          LA    1,176(0,13)
000063A8 E3F0 C200 0004          000063F0   9004          LG    15,@lit_1921_377 ; rd_kafka_offset_commit
000063AE                                    9005 @@gen_label554 DS    0H
000063AE 05EF                               9006          BALR  14,15
000063B0                                    9007 @@gen_label555 DS    0H
000063B0 182F                               9008          LR    2,15        ; err
000063B2                                    9009 @L850    DS    0H
                                            9010 * ***
                                            9011 * ***
                                            9012 * ***           if (err == RD_KAFKA_RESP_ERR__IN_PROGRESS)
000063B2 A72E FF4E               0000FF4E   9013          CHI   2,-178
000063B6 4770 C210               00006400   9014          BNE   @_done@1921@0
                                            9015 * ***                   return err;
000063BA B914 00F2                          9016          LGFR  15,2
000063BE 47F0 C230               00006420   9017          B     @ret_lab_1921
000063C8                                    9018          DS    0D
000063C8 00000110                           9019 @FRAMESIZE_1921 DC F'272'
000063CC 00000000
000063D0 0000000000000000                   9020 @lit_1921_373 DC AD(rd_kafka_log0)
000063D8 0000000000006D48                   9021 @lit_1921_372 DC AD(@strings@)
000063E0 0000000000001A80                   9022 @lit_1921_374 DC AD(rd_kafka_offset_store0)
000063E8 00000000000002F0                   9023 @lit_1921_375 DC AD(rd_atomic32_get)
000063F0 00000000000045A0                   9024 @lit_1921_377 DC AD(rd_kafka_offset_commit)
000063F8 0000000000005F60                   9025 @lit_1921_378 DC AD(rd_kafka_offset_store_term)
                                            9026 * ***
                                            9027 * ***   done:
                                            9028 * ***
                                            9029 * ***           rd_kafka_offset_store_term(rktp, err);
00006400                                    9030 @_done@1921@0 DS 0H
00006400 E330 D0B0 0024          000000B0   9031          STG   3,176(0,13)
00006406 B914 00F2                          9032          LGFR  15,2
0000640A E3F0 D0B8 0024          000000B8   9033          STG   15,184(0,13)
00006410 4110 D0B0               000000B0   9034          LA    1,176(0,13)
00006414 E3F0 C208 0004          000063F8   9035          LG    15,@lit_1921_378 ; rd_kafka_offset_store_term
0000641A                                    9036 @@gen_label557 DS    0H
0000641A 05EF                               9037          BALR  14,15
0000641C                                    9038 @@gen_label558 DS    0H
                                            9039 * ***
                                            9040 * ***           return RD_KAFKA_RESP_ERR_NO_ERROR;
0000641C A7F9 0000               00000000   9041          LGHI  15,0        ; 0
                                            9042 * ***   }
00006420                                    9043 @ret_lab_1921 DS 0H
                                            9044 * * **** Start of Epilogue
                                            9045          DCCEPIL
00006420                                    9046+         ds 0h                                                          01-DCCEP
                                            9047+* Epilog
00006420 D707 D088 D088 00000088 00000088   9048+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006426 E3D0 D080 0004          00000080   9049+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000642C E3C0 D090 0004          00000090   9050+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
                                                                                                                           Page  183 
  Active Usings: @REGION_1921_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006432 E3B0 C018 0004          00000018   9051+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006438 E3C0 B010 0021          00000010   9052+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000643E E3E0 D008 0004          00000008   9053+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006444 EB1C D020 0004          00000020   9054+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000644A 078E                               9055+         bcr 8,14                if same dsab, just return              01-DCCEP
0000644C E3F0 D010 0024          00000010   9056+         stg 15,16(0,13)         save return code                       01-DCCEP
00006452 E300 D018 0024          00000018   9057+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006458 E3F0 D090 0004          00000090   9058+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000645E E3F0 F018 0004          00000018   9059+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006464 47F0 F040               00000040   9060+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9061+* End of Epilog
                                            9062 * * **** End of Epilogue
                                            9063          DROP  12
                                            9064 *
                                            9065 *   DSECT for automatic variables in "rd_kafka_offset_store_stop"
                                            9066 *      (FUNCTION #1921)
                                            9067 *
00000000                00000000 000000AC   9068 @AUTO#rd_kafka_offset_store_stop DSECT
00000000                                    9069          DS    XL168
000000A8                                    9070 rd_kafka_offset_store_stop#err#0 DS 1F ; err
                                            9071 *
00006468                00000000 00006B1A   9072 @CODE    CSECT
                                            9073 *
                                            9074 *
                                            9075 *
                                            9076 * ....... start of rd_kafka_offset_auto_commit_tmr_cb
00006468                                    9077 @LNAME1941 DS  0H
00006468 00000022                           9078          DC    X'00000022'
0000646C 99846D9281869281                   9079          DC    C'rd_kafka_offset_auto_commit_tmr_'
0000648C 8382                               9080          DC    C'cb'
0000648E 00                                 9081          DC    X'00'
                                            9082 rd_kafka_offset_auto_commit_tmr_cb DCCPRLG CINDEX=1941,BASER=12,FRAME=1*
                                                                92,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1941
                                            9083          macro
                                            9084          dccextrn &m
                                            9085          gblc    &$dccext(1000)
                                            9086          gbla    &$dccexti
                                            9087          lcla    &i
                                            9088 &$dccext(&$dccexti+1) setc    '&m'
                                            9089 &i       seta    1
                                            9090 .loop    aif    (&i gt &$dccexti).around
                                            9091          aif    ('&$dccext(&i)' eq '&m').getout
                                            9092 &i       seta    &i+1
                                            9093          ago     .loop
                                            9094 .around  anop
                                            9095 &$dccexti seta &$dccexti+1
                                            9096          extrn  &m
                                            9097 .getout  anop
                                            9098          mend
00006490                                    9099+$eye0146    ds    0d                                                    02-DCCCA
00006490 C4C3C3                             9100+         dc cl3'DCC'                                                    02-DCCCA
00006493 01                                 9101+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page  184 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006494 00000000                           9102+         dc a(0)                                                        02-DCCCA
00006498 0000000000006502                   9103+         dc ad(@PER_1941)                                               02-DCCCA
000064A0 00000000000000C0                   9104+         dc ad(192)                                                     02-DCCCA
000064A8 0000000000000000                   9105+         dc ad(0)                                                       02-DCCCA
000064B0 0000000000001000                   9106+         dc ad(4096)                                                    02-DCCCA
000064B8 20                                 9107+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000064B9 03                                 9108+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000064BA 03                                 9109+         dc al1(3)                                                      02-DCCCA
000064BB 08                                 9110+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000064BC 00                                 9111+         dc bl.8'00000000'                                              02-DCCCA
000064BD 000000                             9112+         dc al3(0)                                                      02-DCCCA
000064C0 0000000000006468                   9113+         dc ad(@LNAME1941)                                              02-DCCCA
000064C8                                    9114+         ds 0d                                                          02-DCCCA
000064C8 0000000000006490                   9115+         dc ad($eye0146)                                                02-DCCCA
000064D0 0000000000000000                   9116+         dc ad(0)                                                       02-DCCCA
000064D8                                    9117+         ds    0d                                                       01-DCCPR
000064D8                                    9118+rd_kafka_offset_auto_commit_tmr_cb ds 0d                                01-DCCPR
000064D8                                    9119+@REGION_1941_1 ds 0h                                                    01-DCCPR
000064D8 EBEC D008 0024          00000008   9120+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000064DE E3E0 D088 0004          00000088   9121+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000064E4 E3C0 D090 0004          00000090   9122+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000064EA B904 002E                          9123+         lgr   2,14                copy addr of our savearea            01-DCCPR
000064EE E3B0 C018 0004          00000018   9124+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000064F4 A7EB 00C0               000000C0   9125+         aghi  14,192              increase by frame size               01-DCCPR
000064F8 E3E0 C020 0021          00000020   9126+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000064FE 4720 B020               00000020   9127+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00006502                                    9128+@PER_1941 ds   0h                                                       01-DCCPR
00006502 EBDE 2080 0024          00000080   9129+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006508 E3C0 2090 0024          00000090   9130+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000650E B904 00D2                          9131+         lgr   13,2                set real frame pointer               01-DCCPR
00006512 B904 00CF                          9132+         lgr   12,15               set base reg                         01-DCCPR
                        000064D8            9133+         using @REGION_1941_1,12                                        01-DCCPR
                                            9134 * ******* End of Prologue
                                            9135 * *
                                            9136 * ***      rd_kafka_toppar_t *rktp = arg;
00006516 E3F0 1008 0004          00000008   9137          LG    15,8(0,1)   ; arg
                                            9138 * ***      rd_kafka_offset_commit(rktp, "auto commit timer");
0000651C E3F0 D0B0 0024          000000B0   9139          STG   15,176(0,13)
00006522 E3F0 C0C0 0004          00006598   9140          LG    15,@lit_1941_381
00006528 41F0 F59E               0000059E   9141          LA    15,1438(0,15)
0000652C E3F0 D0B8 0024          000000B8   9142          STG   15,184(0,13)
00006532 4110 D0B0               000000B0   9143          LA    1,176(0,13)
00006536 E3F0 C0B8 0004          00006590   9144          LG    15,@lit_1941_382 ; rd_kafka_offset_commit
0000653C                                    9145 @@gen_label559 DS    0H
0000653C 05EF                               9146          BALR  14,15
0000653E                                    9147 @@gen_label560 DS    0H
                                            9148 * ***   }
0000653E                                    9149 @ret_lab_1941 DS 0H
                                            9150 * * **** Start of Epilogue
                                            9151          DCCEPIL
0000653E                                    9152+         ds 0h                                                          01-DCCEP
                                            9153+* Epilog
                                                                                                                           Page  185 
  Active Usings: @REGION_1941_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000653E D707 D088 D088 00000088 00000088   9154+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006544 E3D0 D080 0004          00000080   9155+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000654A E3C0 D090 0004          00000090   9156+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006550 E3B0 C018 0004          00000018   9157+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006556 E3C0 B010 0021          00000010   9158+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000655C E3E0 D008 0004          00000008   9159+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006562 EB1C D020 0004          00000020   9160+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00006568 078E                               9161+         bcr 8,14                if same dsab, just return              01-DCCEP
0000656A E3F0 D010 0024          00000010   9162+         stg 15,16(0,13)         save return code                       01-DCCEP
00006570 E300 D018 0024          00000018   9163+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006576 E3F0 D090 0004          00000090   9164+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000657C E3F0 F018 0004          00000018   9165+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006582 47F0 F040               00000040   9166+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9167+* End of Epilog
                                            9168 * * **** End of Epilogue
00006588                                    9169          DS    0D
00006588 000000C0                           9170 @FRAMESIZE_1941 DC F'192'
0000658C 00000000
00006590 00000000000045A0                   9171 @lit_1941_382 DC AD(rd_kafka_offset_commit)
00006598 0000000000006D48                   9172 @lit_1941_381 DC AD(@strings@)
                                            9173          DROP  12
                                            9174 *
                                            9175 *   DSECT for automatic variables in "rd_kafka_offset_auto_commit_tmr_
                                            9176 *           cb"
                                            9177 *      (FUNCTION #1941)
                                            9178 *
00000000                00000000 000000A8   9179 @AUTO#rd_kafka_offset_auto_commit_tmr_cb DSECT
00000000                                    9180          DS    XL168
                                            9181 *
000065A0                00000000 00006B1A   9182 @CODE    CSECT
                                            9183 *
                                            9184 *
                                            9185 *
                                            9186 * ....... start of rd_kafka_offset_query_tmr_cb
                                            9187 rd_kafka_offset_query_tmr_cb ALIAS X'99846D92818692816D968686A285A36D98*
                                                                A48599A86DA394996D8382'
000065A0                                    9188 @LNAME1924 DS  0H
000065A0 0000001C                           9189          DC    X'0000001C'
000065A4 99846D9281869281                   9190          DC    C'rd_kafka_offset_query_tmr_cb'
000065C0 00                                 9191          DC    X'00'
                                            9192 rd_kafka_offset_query_tmr_cb DCCPRLG CINDEX=1924,BASER=12,FRAME=264,ENT*
                                                                RY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1924
                                            9193          macro
                                            9194          dccextrn &m
                                            9195          gblc    &$dccext(1000)
                                            9196          gbla    &$dccexti
                                            9197          lcla    &i
                                            9198 &$dccext(&$dccexti+1) setc    '&m'
                                            9199 &i       seta    1
                                            9200 .loop    aif    (&i gt &$dccexti).around
                                            9201          aif    ('&$dccext(&i)' eq '&m').getout
                                            9202 &i       seta    &i+1
                                                                                                                           Page  186 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                            9203          ago     .loop
                                            9204 .around  anop
                                            9205 &$dccexti seta &$dccexti+1
                                            9206          extrn  &m
                                            9207 .getout  anop
                                            9208          mend
000065C8                                    9209+$eye0149    ds    0d                                                    02-DCCCA
000065C8 C4C3C3                             9210+         dc cl3'DCC'                                                    02-DCCCA
000065CB 01                                 9211+         dc xl1'01' format one                                          02-DCCCA
000065CC 00000000                           9212+         dc a(0)                                                        02-DCCCA
000065D0 000000000000663A                   9213+         dc ad(@PER_1924)                                               02-DCCCA
000065D8 0000000000000108                   9214+         dc ad(264)                                                     02-DCCCA
000065E0 0000000000000000                   9215+         dc ad(0)                                                       02-DCCCA
000065E8 0000000000001000                   9216+         dc ad(4096)                                                    02-DCCCA
000065F0 20                                 9217+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000065F1 03                                 9218+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000065F2 03                                 9219+         dc al1(3)                                                      02-DCCCA
000065F3 08                                 9220+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000065F4 00                                 9221+         dc bl.8'00000000'                                              02-DCCCA
000065F5 000000                             9222+         dc al3(0)                                                      02-DCCCA
000065F8 00000000000065A0                   9223+         dc ad(@LNAME1924)                                              02-DCCCA
00006600                                    9224+         ds 0d                                                          02-DCCCA
00006600 00000000000065C8                   9225+         dc ad($eye0149)                                                02-DCCCA
00006608 0000000000000000                   9226+         dc ad(0)                                                       02-DCCCA
00006610                                    9227+         ds    0d                                                       01-DCCPR
                                            9228+         entry rd_kafka_offset_query_tmr_cb                             01-DCCPR
00006610                                    9229+rd_kafka_offset_query_tmr_cb ds 0d                                      01-DCCPR
00006610                                    9230+@REGION_1924_1 ds 0h                                                    01-DCCPR
00006610 EBEC D008 0024          00000008   9231+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00006616 E3E0 D088 0004          00000088   9232+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000661C E3C0 D090 0004          00000090   9233+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00006622 B904 002E                          9234+         lgr   2,14                copy addr of our savearea            01-DCCPR
00006626 E3B0 C018 0004          00000018   9235+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000662C A7EB 0108               00000108   9236+         aghi  14,264              increase by frame size               01-DCCPR
00006630 E3E0 C020 0021          00000020   9237+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00006636 4720 B020               00000020   9238+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000663A                                    9239+@PER_1924 ds   0h                                                       01-DCCPR
0000663A EBDE 2080 0024          00000080   9240+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00006640 E3C0 2090 0024          00000090   9241+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00006646 B904 00D2                          9242+         lgr   13,2                set real frame pointer               01-DCCPR
0000664A B904 00CF                          9243+         lgr   12,15               set base reg                         01-DCCPR
                        00006610            9244+         using @REGION_1924_1,12                                        01-DCCPR
                                            9245          DCCPRV REG=3      ; Get PRV from DVT
0000664E E330 B008 0004          00000008   9246+         LG 3,8(0,11)                                                   01-DCCPR
                                            9247 * ******* End of Prologue
                                            9248 * *
                                            9249 * ***      rd_kafka_toppar_t *rktp = arg;
00006654 E320 1008 0004          00000008   9250          LG    2,8(0,1)    ; arg
                                            9251 * ***      mtx_lock(&(rktp)->rktp_lock);
0000665A 41F0 20C0               000000C0   9252          LA    15,192(0,2)
0000665E E3F0 D0B0 0024          000000B0   9253          STG   15,176(0,13)
00006664 4110 D0B0               000000B0   9254          LA    1,176(0,13)
                                                                                                                           Page  187 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006668 E3F0 C1C8 0004          000067D8   9255          LG    15,@lit_1924_384 ; mtx_lock
0000666E                                    9256 @@gen_label561 DS    0H
0000666E 05EF                               9257          BALR  14,15
00006670                                    9258 @@gen_label562 DS    0H
                                            9259 * ***      do { if ((((rktp->rktp_rkt->rkt_rk)->rk_conf.debug & (0x4))\
                                            9260 * )) rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf,rktp->rktp_rkt->rk\
                                            9261 * t_rk,((void *)0), 7,(0x4), "OFFSET","Topic %s [%" "d" "]: timed offs\
                                            9262 * et query for %s in " "state %s", rktp->rktp_rkt->rkt_topic->str, rkt\
                                            9263 * p->rktp_partition, rd_kafka_offset2str(rktp->rktp_query_offset), rd_\
                                            9264 * kafka_fetch_states[rktp->rktp_fetch_state]); } while (0);
00006670                                    9265 @L852    DS    0H
00006670 E3F0 2060 0004          00000060   9266          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00006676 E3F0 F148 0004          00000148   9267          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
0000667C 9104 F323      00000323 00000004   9268          TM    803(15),4
00006680 4780 C138               00006748   9269          BZ    @L855
00006684 E3F0 21F8 0004          000001F8   9270          LG    15,504(0,2)
0000668A E3F0 D0B0 0024          000000B0   9271          STG   15,176(0,13)
00006690 4110 D0B0               000000B0   9272          LA    1,176(0,13)
00006694 E3F0 C1D0 0004          000067E0   9273          LG    15,@lit_1924_385 ; rd_kafka_offset2str
0000669A                                    9274 @@gen_label564 DS    0H
0000669A 05EF                               9275          BALR  14,15
0000669C                                    9276 @@gen_label565 DS    0H
0000669C E310 2060 0004          00000060   9277          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
000066A2 E310 1148 0004          00000148   9278          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
000066A8 4110 1210               00000210   9279          LA    1,528(0,1)
000066AC E310 D0B0 0024          000000B0   9280          STG   1,176(0,13)
000066B2 E310 2060 0004          00000060   9281          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
000066B8 E310 1148 0004          00000148   9282          LG    1,328(0,1)
000066BE E310 D0B8 0024          000000B8   9283          STG   1,184(0,13)
000066C4 D707 D0C0 D0C0 000000C0 000000C0   9284          XC    192(8,13),192(13)
000066CA E548 D0C8 0007          000000C8   9285          MVGHI 200(13),7
000066D0 E548 D0D0 0004          000000D0   9286          MVGHI 208(13),4
000066D6 E310 C1E8 0004          000067F8   9287          LG    1,@lit_1924_386
000066DC 4140 1130               00000130   9288          LA    4,304(0,1)
000066E0 E340 D0D8 0024          000000D8   9289          STG   4,216(0,13)
000066E6 4110 15B0               000005B0   9290          LA    1,1456(0,1)
000066EA E310 D0E0 0024          000000E0   9291          STG   1,224(0,13)
000066F0 E310 2060 0004          00000060   9292          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
000066F6 E310 1080 0004          00000080   9293          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
000066FC E310 1008 0004          00000008   9294          LG    1,8(0,1)
00006702 E310 D0E8 0024          000000E8   9295          STG   1,232(0,13)
00006708 E310 2068 0014          00000068   9296          LGF   1,104(0,2)
0000670E E310 D0F0 0024          000000F0   9297          STG   1,240(0,13)
00006714 E3F0 D0F8 0024          000000F8   9298          STG   15,248(0,13)
0000671A E3F0 21E8 0014          000001E8   9299          LGF   15,488(0,2)
00006720 E310 C1E0 0016          000067F0   9300          LLGF  1,@lit_1924_387 ; rd_kafka_fetch_states
00006726 EBFF 0003 000D          00000003   9301          SLLG  15,15,3(0)  ; *0x8
0000672C 41F1 F000               00000000   9302          LA    15,0(1,15)
00006730 E3FF 3000 0004          00000000   9303          LG    15,0(15,3)
00006736 E3F0 D100 0024          00000100   9304          STG   15,256(0,13)
0000673C 4110 D0B0               000000B0   9305          LA    1,176(0,13)
00006740 E3F0 C1D8 0004          000067E8   9306          LG    15,@lit_1924_388 ; rd_kafka_log0
                                                                                                                           Page  188 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006746                                    9307 @@gen_label566 DS    0H
00006746 05EF                               9308          BALR  14,15
00006748                                    9309 @@gen_label567 DS    0H
00006748                                    9310 @L855    DS    0H
                                            9311 * ***   # 1085 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                            9312 * ***      rd_kafka_toppar_offset_request(rktp, rktp->rktp_query_offse\
                                            9313 * t, 0);
00006748 E320 D0B0 0024          000000B0   9314          STG   2,176(0,13)
0000674E E3F0 21F8 0004          000001F8   9315          LG    15,504(0,2)
00006754 E3F0 D0B8 0024          000000B8   9316          STG   15,184(0,13)
0000675A D707 D0C0 D0C0 000000C0 000000C0   9317          XC    192(8,13),192(13)
00006760 4110 D0B0               000000B0   9318          LA    1,176(0,13)
00006764 E3F0 C1F0 0004          00006800   9319          LG    15,@lit_1924_389 ; rd_kafka_toppar_offset_request
0000676A                                    9320 @@gen_label568 DS    0H
0000676A 05EF                               9321          BALR  14,15
0000676C                                    9322 @@gen_label569 DS    0H
                                            9323 * ***      mtx_unlock(&(rktp)->rktp_lock);
0000676C 41F0 20C0               000000C0   9324          LA    15,192(0,2)
00006770 E3F0 D0B0 0024          000000B0   9325          STG   15,176(0,13)
00006776 4110 D0B0               000000B0   9326          LA    1,176(0,13)
0000677A E3F0 C1F8 0004          00006808   9327          LG    15,@lit_1924_390 ; mtx_unlock
00006780                                    9328 @@gen_label570 DS    0H
00006780 05EF                               9329          BALR  14,15
00006782                                    9330 @@gen_label571 DS    0H
                                            9331 * ***   }
00006782                                    9332 @ret_lab_1924 DS 0H
                                            9333 * * **** Start of Epilogue
                                            9334          DCCEPIL
00006782                                    9335+         ds 0h                                                          01-DCCEP
                                            9336+* Epilog
00006782 D707 D088 D088 00000088 00000088   9337+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006788 E3D0 D080 0004          00000080   9338+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000678E E3C0 D090 0004          00000090   9339+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006794 E3B0 C018 0004          00000018   9340+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000679A E3C0 B010 0021          00000010   9341+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000067A0 E3E0 D008 0004          00000008   9342+         lg  14,8(0,13)          load up return address                 01-DCCEP
000067A6 EB1C D020 0004          00000020   9343+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000067AC 078E                               9344+         bcr 8,14                if same dsab, just return              01-DCCEP
000067AE E3F0 D010 0024          00000010   9345+         stg 15,16(0,13)         save return code                       01-DCCEP
000067B4 E300 D018 0024          00000018   9346+         stg 0,24(0,13)          save more return code                  01-DCCEP
000067BA E3F0 D090 0004          00000090   9347+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000067C0 E3F0 F018 0004          00000018   9348+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000067C6 47F0 F040               00000040   9349+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9350+* End of Epilog
                                            9351 * * **** End of Epilogue
000067D0                                    9352          DS    0D
000067D0 00000108                           9353 @FRAMESIZE_1924 DC F'264'
000067D4 00000000
000067D8 0000000000000000                   9354 @lit_1924_384 DC AD(mtx_lock)
000067E0 0000000000001BD0                   9355 @lit_1924_385 DC AD(rd_kafka_offset2str)
000067E8 0000000000000000                   9356 @lit_1924_388 DC AD(rd_kafka_log0)
000067F0 00000000                           9357 @lit_1924_387 DC Q(rd_kafka_fetch_states)
                                                                                                                           Page  189 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000067F4 00000000
000067F8 0000000000006D48                   9358 @lit_1924_386 DC AD(@strings@)
00006800 0000000000000000                   9359 @lit_1924_389 DC AD(rd_kafka_toppar_offset_request)
00006808 0000000000000000                   9360 @lit_1924_390 DC AD(mtx_unlock)
                                            9361          DROP  12
                                            9362 *
                                            9363 *   DSECT for automatic variables in "rd_kafka_offset_query_tmr_cb"
                                            9364 *      (FUNCTION #1924)
                                            9365 *
00000000                00000000 000000A8   9366 @AUTO#rd_kafka_offset_query_tmr_cb DSECT
00000000                                    9367          DS    XL168
                                            9368 *
00006810                00000000 00006B1A   9369 @CODE    CSECT
                                            9370 *
                                            9371 *
                                            9372 *
                                            9373 * ....... start of rd_kafka_offset_store_init
                                            9374 rd_kafka_offset_store_init ALIAS X'99846D92818692816D968686A285A36DA2A3*
                                                                9699856D899589A3'
00006810                                    9375 @LNAME1922 DS  0H
00006810 0000001A                           9376          DC    X'0000001A'
00006814 99846D9281869281                   9377          DC    C'rd_kafka_offset_store_init'
0000682E 00                                 9378          DC    X'00'
                                            9379 rd_kafka_offset_store_init DCCPRLG CINDEX=1922,BASER=12,FRAME=248,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME1922
                                            9380          macro
                                            9381          dccextrn &m
                                            9382          gblc    &$dccext(1000)
                                            9383          gbla    &$dccexti
                                            9384          lcla    &i
                                            9385 &$dccext(&$dccexti+1) setc    '&m'
                                            9386 &i       seta    1
                                            9387 .loop    aif    (&i gt &$dccexti).around
                                            9388          aif    ('&$dccext(&i)' eq '&m').getout
                                            9389 &i       seta    &i+1
                                            9390          ago     .loop
                                            9391 .around  anop
                                            9392 &$dccexti seta &$dccexti+1
                                            9393          extrn  &m
                                            9394 .getout  anop
                                            9395          mend
00006830                                    9396+$eye0153    ds    0d                                                    02-DCCCA
00006830 C4C3C3                             9397+         dc cl3'DCC'                                                    02-DCCCA
00006833 01                                 9398+         dc xl1'01' format one                                          02-DCCCA
00006834 00000000                           9399+         dc a(0)                                                        02-DCCCA
00006838 00000000000068A2                   9400+         dc ad(@PER_1922)                                               02-DCCCA
00006840 00000000000000F8                   9401+         dc ad(248)                                                     02-DCCCA
00006848 0000000000000000                   9402+         dc ad(0)                                                       02-DCCCA
00006850 0000000000001000                   9403+         dc ad(4096)                                                    02-DCCCA
00006858 20                                 9404+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00006859 03                                 9405+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000685A 03                                 9406+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page  190 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000685B 08                                 9407+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000685C 00                                 9408+         dc bl.8'00000000'                                              02-DCCCA
0000685D 000000                             9409+         dc al3(0)                                                      02-DCCCA
00006860 0000000000006810                   9410+         dc ad(@LNAME1922)                                              02-DCCCA
00006868                                    9411+         ds 0d                                                          02-DCCCA
00006868 0000000000006830                   9412+         dc ad($eye0153)                                                02-DCCCA
00006870 0000000000000000                   9413+         dc ad(0)                                                       02-DCCCA
00006878                                    9414+         ds    0d                                                       01-DCCPR
                                            9415+         entry rd_kafka_offset_store_init                               01-DCCPR
00006878                                    9416+rd_kafka_offset_store_init ds 0d                                        01-DCCPR
00006878                                    9417+@REGION_1922_1 ds 0h                                                    01-DCCPR
00006878 EBEC D008 0024          00000008   9418+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000687E E3E0 D088 0004          00000088   9419+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00006884 E3C0 D090 0004          00000090   9420+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000688A B904 002E                          9421+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000688E E3B0 C018 0004          00000018   9422+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00006894 A7EB 00F8               000000F8   9423+         aghi  14,248              increase by frame size               01-DCCPR
00006898 E3E0 C020 0021          00000020   9424+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000689E 4720 B020               00000020   9425+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000068A2                                    9426+@PER_1922 ds   0h                                                       01-DCCPR
000068A2 EBDE 2080 0024          00000080   9427+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000068A8 E3C0 2090 0024          00000090   9428+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000068AE B904 00D2                          9429+         lgr   13,2                set real frame pointer               01-DCCPR
000068B2 B904 00CF                          9430+         lgr   12,15               set base reg                         01-DCCPR
                        00006878            9431+         using @REGION_1922_1,12                                        01-DCCPR
                                            9432          DCCPRV REG=15     ; Get PRV from DVT
000068B6 E3F0 B008 0004          00000008   9433+         LG 15,8(0,11)                                                  01-DCCPR
                                            9434 * ******* End of Prologue
                                            9435 * *
                                            9436 * ***           static const char *store_names[] = { "none", "file", "\
                                            9437 * broker" };
000068BC E320 1000 0004          00000000   9438          LG    2,0(0,1)    ; rktp
                                            9439 * ***
                                            9440 * ***           do { if ((((rktp->rktp_rkt->rkt_rk)->rk_conf.debug & (\
                                            9441 * 0x4)))) rd_kafka_log0(&rktp->rktp_rkt->rkt_rk->rk_conf,rktp->rktp_rk\
                                            9442 * t->rkt_rk,((void *)0), 7,(0x4), "OFFSET","%s [%" "d" "]: using offse\
                                            9443 * t store method: %s", rktp->rktp_rkt->rkt_topic->str, rktp->rktp_part\
                                            9444 * ition, store_names[rktp->rktp_rkt->rkt_conf.offset_store_method]); }\
                                            9445 *  while (0);
000068C2                                    9446 @L856    DS    0H
000068C2 E310 2060 0004          00000060   9447          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
000068C8 E310 1148 0004          00000148   9448          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
000068CE 9104 1323      00000323 00000004   9449          TM    803(1),4
000068D2 4780 C10A               00006982   9450          BZ    @L859
000068D6 E310 2060 0004          00000060   9451          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
000068DC E310 1148 0004          00000148   9452          LG    1,328(0,1)  ; offset of rkt_rk in rd_kafka_topic_s
000068E2 4110 1210               00000210   9453          LA    1,528(0,1)
000068E6 E310 D0A8 0024          000000A8   9454          STG   1,168(0,13)
000068EC E310 2060 0004          00000060   9455          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
000068F2 E310 1148 0004          00000148   9456          LG    1,328(0,1)
000068F8 E310 D0B0 0024          000000B0   9457          STG   1,176(0,13)
000068FE D707 D0B8 D0B8 000000B8 000000B8   9458          XC    184(8,13),184(13)
                                                                                                                           Page  191 
  Active Usings: @REGION_1922_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006904 E548 D0C0 0007          000000C0   9459          MVGHI 192(13),7
0000690A E548 D0C8 0004          000000C8   9460          MVGHI 200(13),4
00006910 E310 C1C8 0004          00006A40   9461          LG    1,@lit_1922_392
00006916 4130 1130               00000130   9462          LA    3,304(0,1)
0000691A E330 D0D0 0024          000000D0   9463          STG   3,208(0,13)
00006920 4110 15E6               000005E6   9464          LA    1,1510(0,1)
00006924 E310 D0D8 0024          000000D8   9465          STG   1,216(0,13)
0000692A E310 2060 0004          00000060   9466          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
00006930 E310 1080 0004          00000080   9467          LG    1,128(0,1)  ; offset of rkt_topic in rd_kafka_topic_s
00006936 E310 1008 0004          00000008   9468          LG    1,8(0,1)
0000693C E310 D0E0 0024          000000E0   9469          STG   1,224(0,13)
00006942 E310 2068 0014          00000068   9470          LGF   1,104(0,2)
00006948 E310 D0E8 0024          000000E8   9471          STG   1,232(0,13)
0000694E E310 2060 0004          00000060   9472          LG    1,96(0,2)   ; offset of rktp_rkt in rd_kafka_toppar_s
00006954 E310 13FC 0014          000003FC   9473          LGF   1,1020(0,1)
0000695A E330 C1C0 0014          00006A38   9474          LGF   3,@lit_1922_393
00006960 41F3 F000               00000000   9475          LA    15,0(3,15)
00006964 EB11 0003 000D          00000003   9476          SLLG  1,1,3(0)    ; *0x8
0000696A E3F1 F8E0 0004          000008E0   9477          LG    15,2272(1,15)
00006970 E3F0 D0F0 0024          000000F0   9478          STG   15,240(0,13)
00006976 4110 D0A8               000000A8   9479          LA    1,168(0,13)
0000697A E3F0 C1B8 0004          00006A30   9480          LG    15,@lit_1922_394 ; rd_kafka_log0
00006980                                    9481 @@gen_label573 DS    0H
00006980 05EF                               9482          BALR  14,15
00006982                                    9483 @@gen_label574 DS    0H
00006982                                    9484 @L859    DS    0H
                                            9485 * ***
                                            9486 * ***
                                            9487 * ***
                                            9488 * ***
                                            9489 * ***
                                            9490 * ***
                                            9491 * ***           rktp->rktp_committed_offset = -1001;
00006982 E548 2228 FC17          00000228   9492          MVGHI 552(2),-1001 ; offset of rktp_committed_offset in rd_kaf*
                                                                ka_toppar_s
                                            9493 * ***
                                            9494 * ***
                                            9495 * ***           if ((rd_atomic32_get(&(rktp->rktp_rkt->rkt_rk)->rk_sim\
                                            9496 * ple_cnt) > 0) &&
00006988 E3F0 2060 0004          00000060   9497          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
0000698E E3F0 F148 0004          00000148   9498          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
00006994 41F0 FC40               00000C40   9499          LA    15,3136(0,15)
00006998 E3F0 D0A8 0024          000000A8   9500          STG   15,168(0,13)
0000699E 4110 D0A8               000000A8   9501          LA    1,168(0,13)
000069A2 E3F0 C1D0 0004          00006A48   9502          LG    15,@lit_1922_395 ; rd_atomic32_get
000069A8                                    9503 @@gen_label575 DS    0H
000069A8 05EF                               9504          BALR  14,15
000069AA                                    9505 @@gen_label576 DS    0H
000069AA 12FF                               9506          LTR   15,15
000069AC 47D0 C224               00006A9C   9507          BNH   @L861
                                            9508 * ***               rktp->rktp_rkt->rkt_conf.auto_commit_interval_ms >\
                                            9509 *  0)
                                                                                                                           Page  192 
  Active Usings: @REGION_1922_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000069B0 E3F0 2060 0004          00000060   9510          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
000069B6 E55C F3E4 0000          000003E4   9511          CHSI  996(15),0
000069BC 47D0 C224               00006A9C   9512          BNH   @L861
                                            9513 * ***         rd_kafka_timer_start0(&rktp->rktp_rkt->rkt_rk->rk_timers\
                                            9514 * ,&rktp->rktp_offset_commit_tmr,rktp->rktp_rkt->rkt_conf. auto_commit\
                                            9515 * _interval_ms * 1000ll,0,1,rd_kafka_offset_auto_commit_tmr_cb,rktp);
000069C0 E3F0 2060 0004          00000060   9516          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
000069C6 E3F0 F148 0004          00000148   9517          LG    15,328(0,15) ; offset of rkt_rk in rd_kafka_topic_s
000069CC A719 1010               00001010   9518          LGHI  1,4112      ; 4112
000069D0 41F1 F000               00000000   9519          LA    15,0(1,15)
000069D4 E3F0 D0A8 0024          000000A8   9520          STG   15,168(0,13)
000069DA 41F0 22F0               000002F0   9521          LA    15,752(0,2)
000069DE E3F0 D0B0 0024          000000B0   9522          STG   15,176(0,13)
000069E4 E3F0 2060 0004          00000060   9523          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
000069EA E3F0 F3E4 0014          000003E4   9524          LGF   15,996(0,15)
000069F0 A7FD 03E8               000003E8   9525          MGHI  15,1000
000069F4 E3F0 D0B8 0024          000000B8   9526          STG   15,184(0,13)
000069FA D707 D0C0 D0C0 000000C0 000000C0   9527          XC    192(8,13),192(13)
00006A00 E548 D0C8 0001          000000C8   9528          MVGHI 200(13),1
00006A06 E3F0 C1E0 0004          00006A58   9529          LG    15,@lit_1922_397 ; rd_kafka_offset_auto_commit_tmr_cb
00006A0C E3F0 D0D0 0024          000000D0   9530          STG   15,208(0,13)
00006A12 E320 D0D8 0024          000000D8   9531          STG   2,216(0,13)
00006A18 4110 D0A8               000000A8   9532          LA    1,168(0,13)
00006A1C E3F0 C1D8 0004          00006A50   9533          LG    15,@lit_1922_398 ; rd_kafka_timer_start0
00006A22                                    9534 @@gen_label579 DS    0H
00006A22 05EF                               9535          BALR  14,15
00006A24                                    9536 @@gen_label580 DS    0H
00006A24                                    9537 @L860    DS    0H
                                            9538 * ***
                                            9539 * ***   # 1117 "C:\asgkafka\librdkafka\src\rdkafka_offset.c"
                                            9540 * ***           switch (rktp->rktp_rkt->rkt_conf.offset_store_method)
00006A24 47F0 C224               00006A9C   9541          B     @L861
00006A28                                    9542          DS    0D
00006A28 000000F8                           9543 @FRAMESIZE_1922 DC F'248'
00006A2C 00000000
00006A30 0000000000000000                   9544 @lit_1922_394 DC AD(rd_kafka_log0)
00006A38 00000000                           9545 @lit_1922_393 DC Q(@@STATIC)
00006A3C 00000000
00006A40 0000000000006D48                   9546 @lit_1922_392 DC AD(@strings@)
00006A48 00000000000002F0                   9547 @lit_1922_395 DC AD(rd_atomic32_get)
00006A50 0000000000000000                   9548 @lit_1922_398 DC AD(rd_kafka_timer_start0)
00006A58 00000000000064D8                   9549 @lit_1922_397 DC AD(rd_kafka_offset_auto_commit_tmr_cb)
00006A60 0000000000005828                   9550 @lit_1922_399 DC AD(rd_kafka_offset_file_init)
00006A68 0000000000005DF0                   9551 @lit_1922_400 DC AD(rd_kafka_offset_broker_init)
                                            9552 * ***           {
                                            9553 * ***           case RD_KAFKA_OFFSET_METHOD_FILE:
00006A70                                    9554 @L863    DS    0H
                                            9555 * ***                   rd_kafka_offset_file_init(rktp);
00006A70 E320 D0A8 0024          000000A8   9556          STG   2,168(0,13)
00006A76 4110 D0A8               000000A8   9557          LA    1,168(0,13)
00006A7A E3F0 C1E8 0004          00006A60   9558          LG    15,@lit_1922_399 ; rd_kafka_offset_file_init
00006A80                                    9559 @@gen_label581 DS    0H
                                                                                                                           Page  193 
  Active Usings: @REGION_1922_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006A80 05EF                               9560          BALR  14,15
00006A82                                    9561 @@gen_label582 DS    0H
                                            9562 * ***                   break;
00006A82 47F0 C24E               00006AC6   9563          B     @L862
                                            9564 * ***           case RD_KAFKA_OFFSET_METHOD_BROKER:
00006A86                                    9565 @L864    DS    0H
                                            9566 * ***                   rd_kafka_offset_broker_init(rktp);
00006A86 E320 D0A8 0024          000000A8   9567          STG   2,168(0,13)
00006A8C 4110 D0A8               000000A8   9568          LA    1,168(0,13)
00006A90 E3F0 C1F0 0004          00006A68   9569          LG    15,@lit_1922_400 ; rd_kafka_offset_broker_init
00006A96                                    9570 @@gen_label583 DS    0H
00006A96 05EF                               9571          BALR  14,15
00006A98                                    9572 @@gen_label584 DS    0H
                                            9573 * ***                   break;
00006A98 47F0 C24E               00006AC6   9574          B     @L862
                                            9575 * ***           case RD_KAFKA_OFFSET_METHOD_NONE:
                                            9576 * ***                   break;
                                            9577 * ***           default:
                                            9578 * ***
                                            9579 * ***                   return;
                                            9580 * ***           }
00006A9C                                    9581 @L861    DS    0H
00006A9C E3F0 2060 0004          00000060   9582          LG    15,96(0,2)  ; offset of rktp_rkt in rd_kafka_toppar_s
00006AA2 E3F0 F3FC 0012          000003FC   9583          LT    15,1020(0,15) ; offset of offset_store_method in rd_kafk*
                                                                a_topic_conf_s
00006AA8 4740 C25A               00006AD2   9584          BL    @ret_lab_1922
00006AAC 12FF                               9585          LTR   15,15
00006AAE 4780 C24E               00006AC6   9586          BE    @L862
00006AB2 A7FE 0001               00000001   9587          CHI   15,1
00006AB6 4780 C1F8               00006A70   9588          BE    @L863
00006ABA A7FE 0002               00000002   9589          CHI   15,2
00006ABE 4780 C20E               00006A86   9590          BE    @L864
00006AC2 47F0 C25A               00006AD2   9591          B     @ret_lab_1922
00006AC6                                    9592 @L862    DS    0H
                                            9593 * ***
                                            9594 * ***           rktp->rktp_flags |= 0x4;
00006AC6 58F0 22B0               000002B0   9595          L     15,688(0,2)
00006ACA A5FB 0004               00000004   9596          OILL  15,4
00006ACE 50F0 22B0               000002B0   9597          ST    15,688(0,2)
                                            9598 * ***   }
00006AD2                                    9599 @ret_lab_1922 DS 0H
                                            9600 * * **** Start of Epilogue
                                            9601          DCCEPIL
00006AD2                                    9602+         ds 0h                                                          01-DCCEP
                                            9603+* Epilog
00006AD2 D707 D088 D088 00000088 00000088   9604+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00006AD8 E3D0 D080 0004          00000080   9605+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00006ADE E3C0 D090 0004          00000090   9606+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00006AE4 E3B0 C018 0004          00000018   9607+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00006AEA E3C0 B010 0021          00000010   9608+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00006AF0 E3E0 D008 0004          00000008   9609+         lg  14,8(0,13)          load up return address                 01-DCCEP
00006AF6 EB1C D020 0004          00000020   9610+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
                                                                                                                           Page  194 
  Active Usings: @REGION_1922_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006AFC 078E                               9611+         bcr 8,14                if same dsab, just return              01-DCCEP
00006AFE E3F0 D010 0024          00000010   9612+         stg 15,16(0,13)         save return code                       01-DCCEP
00006B04 E300 D018 0024          00000018   9613+         stg 0,24(0,13)          save more return code                  01-DCCEP
00006B0A E3F0 D090 0004          00000090   9614+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00006B10 E3F0 F018 0004          00000018   9615+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00006B16 47F0 F040               00000040   9616+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            9617+* End of Epilog
                                            9618 * * **** End of Epilogue
                                            9619          DROP  12
                                            9620 *
                                            9621 *   DSECT for automatic variables in "rd_kafka_offset_store_init"
                                            9622 *      (FUNCTION #1922)
                                            9623 *
00000000                00000000 000000A8   9624 @AUTO#rd_kafka_offset_store_init DSECT
00000000                                    9625          DS    XL168
                                            9626 *
00006B1A                00000000 00006B1A   9627 @CODE    CSECT
                                            9628 @@STATIC ALIAS X'7C998492818692816D968686A285A350'
                                            9629 @@STATIC DXD   287D
                                            9630 *
                                            9631 *  Non-Re-Entrant Data Section
                                            9632 *
00006B20                00006B20 00000D7E   9633 @DATA    CSECT
                                            9634 @DATA    RMODE ANY
                                            9635 @DATA    AMODE ANY
00006B20 99846D8381939396                   9636 @@T48F   DC    X'99846D838193939683'               rd.calloc
00006B29 00                                 9637          DC    1X'00'
00006B2A 99846D9481939396                   9638 @@T493   DC    X'99846D948193939683'               rd.malloc
00006B33 00                                 9639          DC    1X'00'
00006B34 99846D9985819393                   9640 @@T498   DC    X'99846D99858193939683'             rd.realloc
00006B3E 0000                               9641          DC    2X'00'
00006B40 99846DA2A39984A4                   9642 @@T49E   DC    X'99846DA2A39984A497'               rd.strdup
00006B49 00                                 9643          DC    1X'00'
00006B4A 99846DA2A3999584                   9644 @@T4A3   DC    X'99846DA2A3999584A497'             rd.strndup
00006B54 0000                               9645          DC    2X'00'
00006B56 99846D9985868395                   9646 @@T4AB   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
00006B64 00000000                           9647          DC    4X'00'
00006B68 00000000                           9648 @@T65A   DC    4X'00'
00006B6C 0000001A00000000                   9649          DC    X'0000001A000000000000002200000000' ................
00006B7C 00000024                           9650          DC    X'00000024'                         ....
00006B80 99846D9281869281                   9651 @@T67D   DC    X'99846D92818692816D94A287986D8485' rd.kafka.msgq.de
00006B90 98                                 9652          DC    X'98'                               q
00006B91 00                                 9653          DC    1X'00'
00006B92 99846D9281869281                   9654 @@T704   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
00006BA2 96A8F0                             9655          DC    X'96A8F0'                           oy0
00006BA5 00                                 9656          DC    1X'00'
00006BA6 99846D9281869281                   9657 @@T785   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00006BB6 856D8485A2A39996                   9658          DC    X'856D8485A2A39996A8F0'             e.destroy0
00006BC0 0000                               9659          DC    2X'00'
00006BC2 99846D9281869281                   9660 @@T78D   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00006BD2 856D8485936DA296                   9661          DC    X'856D8485936DA296A4998385'         e.del.source
00006BDE 0000                               9662          DC    2X'00'
                                                                                                                           Page  195 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006BE0 99846D9281869281                   9663 @@T794   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00006BF0 856D8485936DA296                   9664          DC    X'856D8485936DA296A49983856D9985A3' e.del.source.ret
00006C00 A49995                             9665          DC    X'A49995'                           urn
00006C03 00                                 9666          DC    1X'00'
00006C04 99846D9281869281                   9667 @@T79C   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00006C14 856DA39989878785                   9668          DC    X'856DA3998987878599'               e.trigger
00006C1D 00                                 9669          DC    1X'00'
00006C1E 99846D9281869281                   9670 @@T7A0   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00006C2E 856D8485A2A39996                   9671          DC    X'856D8485A2A39996A8'               e.destroy
00006C37 00                                 9672          DC    1X'00'
00006C38 99846D9281869281                   9673 @@T7A5   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00006C48 856D8489A2818293                   9674          DC    X'856D8489A281829385'               e.disable
00006C51 00                                 9675          DC    1X'00'
00006C52 99846DA394978182                   9676 @@T7C5   DC    X'99846DA394978182A4866D8193939683' rd.tmpabuf.alloc
00006C62 F0                                 9677          DC    X'F0'                               0
00006C63 00                                 9678          DC    1X'00'
00006C64 99846D9281869281                   9679 @@T7F9   DC    X'99846D92818692816D82A4866DA49784' rd.kafka.buf.upd
00006C74 81A385                             9680          DC    X'81A385'                           ate
00006C77 00                                 9681          DC    1X'00'
00006C78 99846D9281869281                   9682 @@T81A   DC    X'99846D92818692816D82A4866D868995' rd.kafka.buf.fin
00006C88 819389A9856D8199                   9683          DC    X'819389A9856D81999981A88395A3'     alize.arraycnt
00006C96 0000                               9684          DC    2X'00'
00006C98 99846D9281869281                   9685 @@T857   DC    X'99846D92818692816D82A4866D839983' rd.kafka.buf.crc
00006CA8 6D899589A3                         9686          DC    X'6D899589A3'                       .init
00006CAD 00                                 9687          DC    1X'00'
00006CAE 99846D9281869281                   9688 @@TA27   DC    X'99846D92818692816D83A499996D94A2' rd.kafka.curr.ms
00006CBE 87A26DA2A482                       9689          DC    X'87A26DA2A482'                     gs.sub
00006CC4 0000                               9690          DC    2X'00'
00006CC6 99846D9281869281                   9691 @@TA8D   DC    X'99846D92818692816D8396949489A3F0' rd.kafka.commit0
00006CD6 0000                               9692          DC    2X'00'
00006CD8 99846D9281869281                   9693 @@TA96   DC    X'99846D92818692816D8396949489A3'   rd.kafka.commit
00006CE7 00                                 9694          DC    1X'00'
00006CE8 99846D9281869281                   9695 @@TAA5   DC    X'99846D92818692816D8396949489A36D' rd.kafka.commit.
00006CF8 98A485A485                         9696          DC    X'98A485A485'                       queue
00006CFD 00                                 9697          DC    1X'00'
00006CFE 99846D9281869281                   9698 @@TAB6   DC    X'99846D92818692816D968686A285A36D' rd.kafka.offset.
00006D0E 8299969285996D83                   9699          DC    X'8299969285996D8396949489A3'       broker.commit
00006D1B 00                                 9700          DC    1X'00'
00006D1C 99846D9281869281                   9701 @@TAC2   DC    X'99846D92818692816D968686A285A36D' rd.kafka.offset.
00006D2C A2A3969985                         9702          DC    X'A2A3969985'                       store
00006D31 00                                 9703          DC    1X'00'
00006D32 99846D9281869281                   9704 @@TADB   DC    X'99846D92818692816D968686A285A36D' rd.kafka.offset.
00006D42 9985A285A3                         9705          DC    X'9985A285A3'                       reset
00006D47 00                                 9706          DC    1X'00'
00006D48                                    9707 @strings@ DS   0H
00006D48 C37AE081A2879281                   9708          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
00006D58 849281869281E0A2                   9709          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
00006D68 95009985868395A3                   9710          DC    X'95009985868395A340A2A48260A98599' n.refcnt.sub.zer
00006D78 96005A5C7F998586                   9711          DC    X'96005A5C7F9985868395A340A2A48260' o....refcnt.sub.
00006D88 A98599967F00C37A                   9712          DC    X'A98599967F00C37AE081A28792818692' zero..C..asgkafk
00006D98 81E0938982998492                   9713          DC    X'81E093898299849281869281E0A29983' a.librdkafka.src
00006DA8 E099849281869281                   9714          DC    X'E0998492818692816D98A485A4854B88' .rdkafka.queue.h
                                                                                                                           Page  196 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00006DB8 000081A2A28599A3                   9715          DC    X'000081A2A28599A37A40999298606E99' ..assert..rkq..r
00006DC8 92986D9985868395                   9716          DC    X'92986D9985868395A3406E40F0006C93' kq.refcnt...0..l
00006DD8 93840000C2C5C7C9                   9717          DC    X'93840000C2C5C7C9D5D5C9D5C700C5D5' ld..BEGINNING.EN
00006DE8 C400E2E3D6D9C5C4                   9718          DC    X'C400E2E3D6D9C5C40000C9D5E5C1D3C9' D.STORED..INVALI
00006DF8 C400E3C1C9D34D6C                   9719          DC    X'C400E3C1C9D34D6C9393845D00006C93' D.TAIL..lld....l
00006E08 93846F00C5D9D9D6                   9720          DC    X'93846F00C5D9D9D6D9006CA240AD6C84' ld..ERROR..s...d
00006E18 BD7A40C681899385                   9721          DC    X'BD7A40C6818993858440A39640969785' ...Failed.to.ope
00006E28 9540968686A285A3                   9722          DC    X'9540968686A285A34086899385406CA2' n.offset.file..s
00006E38 7A406CA20000994E                   9723          DC    X'7A406CA20000994E00006CA240AD6C84' ...s..r....s...d
00006E48 BD7A40E285859240                   9724          DC    X'BD7A40E2858592404D86969940998581' ...Seek..for.rea
00006E58 845D408681899385                   9725          DC    X'845D4086818993858440969540968686' d..failed.on.off
00006E68 A285A34086899385                   9726          DC    X'A285A34086899385406CA27A406CA200' set.file..s...s.
00006E78 D6C6C6E2C5E30000                   9727          DC    X'D6C6C6E2C5E300006CA240AD6C84BD7A' OFFSET...s...d..
00006E88 40968686A285A340                   9728          DC    X'40968686A285A34086899385404D6CA2' .offset.file...s
00006E98 5D4089A240859497                   9729          DC    X'5D4089A240859497A3A800006CA240AD' ..is.empty...s..
00006EA8 6C84BD7A40E49581                   9730          DC    X'6C84BD7A40E4958182938540A3964097' .d...Unable.to.p
00006EB8 8199A28540968686                   9731          DC    X'8199A28540968686A285A3408995406C' arse.offset.in..
00006EC8 A2006CA240AD6C84                   9732          DC    X'A2006CA240AD6C84BD7A40D985818440' s..s...d...Read.
00006ED8 968686A285A3406C                   9733          DC    X'968686A285A3406C9393844086999694' offset..lld.from
00006EE8 40968686A285A340                   9734          DC    X'40968686A285A34086899385404D6CA2' .offset.file...s
00006EF8 5D00E2E8D5C30000                   9735          DC    X'5D00E2E8D5C300006CA240AD6C84BD7A' ..SYNC...s...d..
00006F08 40968686A285A340                   9736          DC    X'40968686A285A3408689938540A2A895' .offset.file.syn
00006F18 83006CA240AD6C84                   9737          DC    X'83006CA240AD6C84BD7A40E285859240' c..s...d...Seek.
00006F28 8681899385844096                   9738          DC    X'86818993858440969540968686A285A3' failed.on.offset
00006F38 4086899385406CA2                   9739          DC    X'4086899385406CA27A406CA200006C93' .file..s...s...l
00006F48 938415006CA240AD                   9740          DC    X'938415006CA240AD6C84BD7A40C68189' ld...s...d...Fai
00006F58 93858440A39640A6                   9741          DC    X'93858440A39640A69989A38540968686' led.to.write.off
00006F68 A285A3406C939384                   9742          DC    X'A285A3406C93938440A39640968686A2' set..lld.to.offs
00006F78 85A3408689938540                   9743          DC    X'85A34086899385406CA27A406CA20000' et.file..s...s..
00006F88 6CA240AD6C84BD7A                   9744          DC    X'6CA240AD6C84BD7A40A69996A3854096' .s...d...wrote.o
00006F98 8686A285A3406C93                   9745          DC    X'8686A285A3406C93938440A396408689' ffset..lld.to.fi
00006FA8 9385406CA2009481                   9746          DC    X'9385406CA200948195A481930000D6C6' le..s.manual..OF
00006FB8 C6E2C5E3C3D6D4D4                   9747          DC    X'C6E2C5E3C3D6D4D4C9E30000D5964096' FSETCOMMIT..No.o
00006FC8 8686A285A3A240A3                   9748          DC    X'8686A285A3A240A396408396949489A3' ffsets.to.commit
00006FD8 404D8396949489A3                   9749          DC    X'404D8396949489A36D83825D0000D596' ..commit.cb...No
00006FE8 4093968381934097                   9750          DC    X'40939683819340978199A389A3899695' .local.partition
00006FF8 408696A495844086                   9751          DC    X'408696A4958440869699406CA240AD6C' .found.for..s...
00007008 84BD40A688899385                   9752          DC    X'84BD40A68889938540978199A2899587' d..while.parsing
00007018 40D68686A285A3C3                   9753          DC    X'40D68686A285A3C396949489A3409985' .OffsetCommit.re
00007028 A2979695A285404D                   9754          DC    X'A2979695A285404D968686A285A3406C' sponse..offset..
00007038 9393846B40859999                   9755          DC    X'9393846B408599999699407F6CA27F5D' lld..error...s..
00007048 00009596A3400000                   9756          DC    X'00009596A340000000006CA240AD6C84' ..not......s...d
00007058 BD7A40968686A285                   9757          DC    X'BD7A40968686A285A3406C939384406C' ...offset..lld..
00007068 A28396949489A3A3                   9758          DC    X'A28396949489A3A385847A406CA20000' scommitted...s..
00007078 C37AE081A2879281                   9759          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
00007088 849281869281E0A2                   9760          DC    X'849281869281E0A29983E09984928186' dkafka.src.rdkaf
00007098 92816D968686A285                   9761          DC    X'92816D968686A285A34B830081A2A285' ka.offset.c.asse
000070A8 99A37A409992A397                   9762          DC    X'99A37A409992A397606E9992A3976D83' rt..rktp..rktp.c
000070B8 879997405A7E40D5                   9763          DC    X'879997405A7E40D5E4D3D30081A2A285' grp....NULL.asse
000070C8 99A37A409992A397                   9764          DC    X'99A37A409992A397606E9992A3976D86' rt..rktp..rktp.f
000070D8 938187A2405040D9                   9765          DC    X'938187A2405040D9C46DD2C1C6D2C16D' lags...RD.KAFKA.
000070E8 E3D6D7D7C1D96DC6                   9766          DC    X'E3D6D7D7C1D96DC66DD6C6C6E2C5E36D' TOPPAR.F.OFFSET.
                                                                                                                           Page  197 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000070F8 E2E3D6D9C500D6C6                   9767          DC    X'E2E3D6D9C500D6C6C6E2C5E3C3D4E300' STORE.OFFSETCMT.
00007108 6C4B5CA240AD6C84                   9768          DC    X'6C4B5CA240AD6C84BD7A408396949489' ...s...d...commi
00007118 A3A3899587409686                   9769          DC    X'A3A389958740968686A285A3406C9393' tting.offset..ll
00007128 847A406CA2006CA2                   9770          DC    X'847A406CA2006CA240AD6C84BD7A4083' d...s..s...d...c
00007138 96949489A37A40A2                   9771          DC    X'96949489A37A40A2A396998584409686' ommit..stored.of
00007148 86A285A3406C9393                   9772          DC    X'86A285A3406C939384406E4083969494' fset..lld...comm
00007158 89A3A38584409686                   9773          DC    X'89A3A3858440968686A285A3406C9393' itted.offset..ll
00007168 846F00006CA27A40                   9774          DC    X'846F00006CA27A406CA2000083818388' d....s...s..cach
00007178 858440C2C5C7C9D5                   9775          DC    X'858440C2C5C7C9D5D5C9D5C740968686' ed.BEGINNING.off
00007188 A285A34000006CA2                   9776          DC    X'A285A34000006CA240AD6C84BD7A4096' set....s...d...o
00007198 8686A285A3409985                   9777          DC    X'8686A285A3409985A285A3404D81A340' ffset.reset..at.
000071A8 968686A285A3406C                   9778          DC    X'968686A285A3406CA25D40A396406CA2' offset..s..to..s
000071B8 6CA27A406CA27A40                   9779          DC    X'6CA27A406CA27A406CA200006CF2C600' .s...s...s...2F.
000071C8 6CF3C1006CF5C300                   9780          DC    X'6CF3C1006CF5C3006CA2606C84606C4B' .3A..5C..s..d...
000071D8 5CA24B968686A285                   9781          DC    X'5CA24B968686A285A3006CA2606C844B' .s.offset..s..d.
000071E8 968686A285A30000                   9782          DC    X'968686A285A3000061006CA26CA26CA2' offset.....s.s.s
000071F8 00006CA240AD6C84                   9783          DC    X'00006CA240AD6C84BD7A40A4A2899587' ...s...d...using
00007208 40968686A285A340                   9784          DC    X'40968686A285A34086899385406CA200' .offset.file..s.
00007218 9596956099858184                   9785          DC    X'95969560998581848182938540968686' non.readable.off
00007228 A285A34086899385                   9786          DC    X'A285A34086899385000098A48599A840' set.file..query.
00007238 8299969285994086                   9787          DC    X'8299969285994086969940968686A285' broker.for.offse
00007248 A3A20000E2E3D6D9                   9788          DC    X'A3A20000E2E3D6D9C5E3C5D9D4006CA2' ts..STORETERM..s
00007258 40AD6C84BD7A4096                   9789          DC    X'40AD6C84BD7A40968686A285A340A2A3' ...d...offset.st
00007268 96998540A3859994                   9790          DC    X'96998540A3859994899581A389958700' ore.terminating.
00007278 6CA240AD6C84BD7A                   9791          DC    X'6CA240AD6C84BD7A40A2A39697978995' .s...d...stoppin
00007288 8740968686A285A3                   9792          DC    X'8740968686A285A340A2A3969985404D' g.offset.store..
00007298 A2A3969985844096                   9793          DC    X'A2A39699858440968686A285A3406C93' stored.offset..l
000072A8 93846B4083969494                   9794          DC    X'93846B408396949489A3A38584409686' ld..committed.of
000072B8 86A285A3406C9393                   9795          DC    X'86A285A3406C9393846B40C5D6C64096' fset..lld..EOF.o
000072C8 8686A285A3406C93                   9796          DC    X'8686A285A3406C9393845D00968686A2' ffset..lld..offs
000072D8 85A340A2A3969985                   9797          DC    X'85A340A2A396998540A2A396970081A4' et.store.stop.au
000072E8 A396408396949489                   9798          DC    X'A396408396949489A340A38994859900' to.commit.timer.
000072F8 E396978983406CA2                   9799          DC    X'E396978983406CA240AD6C84BD7A40A3' Topic..s...d...t
00007308 8994858440968686                   9800          DC    X'8994858440968686A285A34098A48599' imed.offset.quer
00007318 A840869699406CA2                   9801          DC    X'A840869699406CA240899540A2A381A3' y.for..s.in.stat
00007328 85406CA200006CA2                   9802          DC    X'85406CA200006CA240AD6C84BD7A40A4' e..s...s...d...u
00007338 A289958740968686                   9803          DC    X'A289958740968686A285A340A2A39699' sing.offset.stor
00007348 85409485A3889684                   9804          DC    X'85409485A38896847A406CA20000D799' e.method...s..Pr
00007358 9684A4838500C685                   9805          DC    X'9684A4838500C685A3838800D68686A2' oduce.Fetch.Offs
00007368 85A30000D485A381                   9806          DC    X'85A30000D485A3818481A3810000D385' et..Metadata..Le
00007378 81848599C19584C9                   9807          DC    X'81848599C19584C9A2990000E2A39697' aderAndIsr..Stop
00007388 D985979389838100                   9808          DC    X'D985979389838100E4978481A385D485' Replica.UpdateMe
00007398 A3818481A3810000                   9809          DC    X'A3818481A3810000C39695A399969393' tadata..Controll
000073A8 8584E288A4A38496                   9810          DC    X'8584E288A4A38496A6950000D68686A2' edShutdown..Offs
000073B8 85A3C396949489A3                   9811          DC    X'85A3C396949489A30000D68686A285A3' etCommit..Offset
000073C8 C685A3838800C689                   9812          DC    X'C685A3838800C6899584C39696998489' Fetch.FindCoordi
000073D8 9581A3969900D196                   9813          DC    X'9581A3969900D1968995C79996A49700' nator.JoinGroup.
000073E8 C8858199A3828581                   9814          DC    X'C8858199A3828581A300D38581A585C7' Heartbeat.LeaveG
000073F8 9996A4970000E2A8                   9815          DC    X'9996A4970000E2A89583C79996A49700' roup..SyncGroup.
00007408 C485A28399898285                   9816          DC    X'C485A28399898285C79996A497A20000' DescribeGroups..
00007418 D389A2A3C79996A4                   9817          DC    X'D389A2A3C79996A497A20000E281A293' ListGroups..Sasl
00007428 C8819584A2888192                   9818          DC    X'C8819584A28881928500C19789E58599' Handshake.ApiVer
                                                                                                                           Page  198 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007438 A28996950000C399                   9819          DC    X'A28996950000C3998581A385E3969789' sion..CreateTopi
00007448 83A20000C4859385                   9820          DC    X'83A20000C4859385A385E396978983A2' cs..DeleteTopics
00007458 0000C4859385A385                   9821          DC    X'0000C4859385A385D98583969984A200' ..DeleteRecords.
00007468 C99589A3D7999684                   9822          DC    X'C99589A3D7999684A4838599C9840000' InitProducerId..
00007478 D68686A285A3C696                   9823          DC    X'D68686A285A3C69699D38581848599C5' OffsetForLeaderE
00007488 979683880000C184                   9824          DC    X'979683880000C18484D78199A389A389' poch..AddPartiti
00007498 9695A2E396E3A795                   9825          DC    X'9695A2E396E3A7950000C18484D68686' onsToTxn..AddOff
000074A8 A285A3A2E396E3A7                   9826          DC    X'A285A3A2E396E3A79500C59584E3A795' setsToTxn.EndTxn
000074B8 0000E69989A385E3                   9827          DC    X'0000E69989A385E3A795D48199928599' ..WriteTxnMarker
000074C8 A200E3A795D68686                   9828          DC    X'A200E3A795D68686A285A3C396949489' s.TxnOffsetCommi
000074D8 A300C485A2839989                   9829          DC    X'A300C485A28399898285C18393A20000' t.DescribeAcls..
000074E8 C3998581A385C183                   9830          DC    X'C3998581A385C18393A20000C4859385' CreateAcls..Dele
000074F8 A385C18393A20000                   9831          DC    X'A385C18393A20000C485A28399898285' teAcls..Describe
00007508 C39695868987A200                   9832          DC    X'C39695868987A200C193A38599C39695' Configs.AlterCon
00007518 868987A20000C193                   9833          DC    X'868987A20000C193A38599D985979389' figs..AlterRepli
00007528 8381D39687C48999                   9834          DC    X'8381D39687C48999A200C485A2839989' caLogDirs.Descri
00007538 8285D39687C48999                   9835          DC    X'8285D39687C48999A200E281A293C1A4' beLogDirs.SaslAu
00007548 A3888595A3898381                   9836          DC    X'A3888595A3898381A3850000C3998581' thenticate..Crea
00007558 A385D78199A389A3                   9837          DC    X'A385D78199A389A3899695A20000C399' tePartitions..Cr
00007568 8581A385C4859385                   9838          DC    X'8581A385C48593858781A3899695E396' eateDelegationTo
00007578 92859500D9859585                   9839          DC    X'92859500D9859585A6C48593858781A3' ken.RenewDelegat
00007588 899695E396928595                   9840          DC    X'899695E3969285950000C5A797899985' ionToken..Expire
00007598 C48593858781A389                   9841          DC    X'C48593858781A3899695E39692859500' DelegationToken.
000075A8 C485A28399898285                   9842          DC    X'C485A28399898285C48593858781A389' DescribeDelegati
000075B8 9695E39692859500                   9843          DC    X'9695E39692859500C4859385A385C799' onToken.DeleteGr
000075C8 96A497A20000C593                   9844          DC    X'96A497A20000C5938583A3D385818485' oups..ElectLeade
000075D8 99A2D98598A485A2                   9845          DC    X'99A2D98598A485A2A300C99583998594' rsRequest.Increm
000075E8 8595A38193C193A3                   9846          DC    X'8595A38193C193A38599C39695868987' entalAlterConfig
000075F8 A2D98598A485A2A3                   9847          DC    X'A2D98598A485A2A30000C193A38599D7' sRequest..AlterP
00007608 8199A389A3899695                   9848          DC    X'8199A389A3899695D98581A2A2898795' artitionReassign
00007618 948595A3A2D98598                   9849          DC    X'948595A3A2D98598A485A2A30000D389' mentsRequest..Li
00007628 A2A3D78199A389A3                   9850          DC    X'A2A3D78199A389A3899695D98581A2A2' stPartitionReass
00007638 898795948595A3A2                   9851          DC    X'898795948595A3A2D98598A485A2A300' ignmentsRequest.
00007648 D68686A285A3C485                   9852          DC    X'D68686A285A3C4859385A385D98598A4' OffsetDeleteRequ
00007658 85A2A300C485A283                   9853          DC    X'85A2A300C485A28399898285C3938985' est.DescribeClie
00007668 95A3D8A496A381A2                   9854          DC    X'95A3D8A496A381A2D98598A485A2A300' ntQuotasRequest.
00007678 C193A38599C39389                   9855          DC    X'C193A38599C393898595A3D8A496A381' AlterClientQuota
00007688 A2D98598A485A2A3                   9856          DC    X'A2D98598A485A2A30000C485A2839989' sRequest..Descri
00007698 8285E4A28599E283                   9857          DC    X'8285E4A28599E283998194C399858485' beUserScramCrede
000076A8 95A3898193A2D985                   9858          DC    X'95A3898193A2D98598A485A2A300C193' ntialsRequest.Al
000076B8 A38599E4A28599E2                   9859          DC    X'A38599E4A28599E283998194C3998584' terUserScramCred
000076C8 8595A3898193A2D9                   9860          DC    X'8595A3898193A2D98598A485A2A30000' entialsRequest..
000076D8 E596A385D98598A4                   9861          DC    X'E596A385D98598A485A2A300C2858789' VoteRequest.Begi
000076E8 95D8A49699A494C5                   9862          DC    X'95D8A49699A494C597968388D98598A4' nQuorumEpochRequ
000076F8 85A2A300C59584D8                   9863          DC    X'85A2A300C59584D8A49699A494C59796' est.EndQuorumEpo
00007708 8388D98598A485A2                   9864          DC    X'8388D98598A485A2A300C485A2839989' chRequest.Descri
00007718 8285D8A49699A494                   9865          DC    X'8285D8A49699A494D98598A485A2A300' beQuorumRequest.
00007728 C193A38599C9A299                   9866          DC    X'C193A38599C9A299D98598A485A2A300' AlterIsrRequest.
00007738 E4978481A385C685                   9867          DC    X'E4978481A385C68581A3A49985A2D985' UpdateFeaturesRe
00007748 98A485A2A300C595                   9868          DC    X'98A485A2A300C595A58593969785D985' quest.EnvelopeRe
00007758 98A485A2A3009596                   9869          DC    X'98A485A2A30095969585000087A98997' quest.none..gzip
00007768 0000A295819797A8                   9870          DC    X'0000A295819797A8000093A9F400A9A2' ..snappy..lz4.zs
                                                                                                                           Page  199 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007778 A384000089958885                   9871          DC    X'A3840000899588859989A30083969586' td..inherit.conf
00007788 8987A49985840000                   9872          DC    X'8987A499858400009385819995858400' igured..learned.
00007798 8995A38599958193                   9873          DC    X'8995A385999581930000939687898381' internal..logica
000077A8 9300C99589A30000                   9874          DC    X'9300C99589A30000E3859994899581A3' l.Init..Terminat
000077B8 8500C681A38193C5                   9875          DC    X'8500C681A38193C5999996990000D985' e.FatalError..Re
000077C8 98A485A2A3D7C9C4                   9876          DC    X'98A485A2A3D7C9C40000E68189A3E399' questPID..WaitTr
000077D8 8195A2979699A300                   9877          DC    X'8195A2979699A300E68189A3D7C9C400' ansport.WaitPID.
000077E8 C1A2A28987958584                   9878          DC    X'C1A2A289879585840000C499818995D9' Assigned..DrainR
000077F8 85A285A30000C499                   9879          DC    X'85A285A30000C499818995C2A4949700' eset..DrainBump.
00007808 D9858184A8D596A3                   9880          DC    X'D9858184A8D596A3C18392858400D985' ReadyNotAcked.Re
00007818 8184A800C995E399                   9881          DC    X'8184A800C995E3998195A28183A38996' ady.InTransactio
00007828 9500C285878995C3                   9882          DC    X'9500C285878995C396949489A300C396' n.BeginCommit.Co
00007838 949489A3A3899587                   9883          DC    X'949489A3A3899587E3998195A28183A3' mmittingTransact
00007848 89969500C3969494                   9884          DC    X'89969500C396949489A3D596A3C18392' ion.CommitNotAck
00007858 85840000C1829699                   9885          DC    X'85840000C1829699A3899587E3998195' ed..AbortingTran
00007868 A28183A389969500                   9886          DC    X'A28183A389969500C1829699A38584D5' saction.AbortedN
00007878 96A3C18392858400                   9887          DC    X'96A3C18392858400C1829699A3818293' otAcked.Abortabl
00007888 85C5999996990000                   9888          DC    X'85C59999969900008689938500008299' eError..file..br
00007898 969285990000                       9889          DC    X'969285990000'                     oker..
                                            9890 @E__isthreaded ALIAS X'6D6D89A2A388998581848584'
                                            9891          EXTRN @E__isthreaded
                                            9892 @Erd_kafka_fetch_states ALIAS X'99846D92818692816D8685A383886DA2A381A38*
                                                                5A2'
                                            9893          EXTRN @Erd_kafka_fetch_states
                                            9894 *
                                            9895 *
                                            9896 *   Re-entrant Data Initialization Section
                                            9897 *
                                            9898 @@INIT@  ALIAS C'rdkafka_offset:'
000078A0                000078A0 000010B8   9899 @@INIT@  CSECT
                                            9900 @@INIT@  AMODE ANY
                                            9901 @@INIT@  RMODE ANY
000078A0 05                                 9902          DC    XL1'5'
000078A1 000000                             9903          DC    AL3(0)
000078A4 00000120                           9904          DC    AL4(288)
000078A8 00000000                           9905          DC    4X'00'
000078AC 00000000                           9906          DC    Q(@@STATIC)
000078B0 00000000                           9907          DC    X'00000000'
000078B4 00000001                           9908          DC    X'00000001'
000078B8 00000000                           9909          DC    X'00000000'
000078BC 000000FF                           9910          DC    X'000000FF'
000078C0 0102039C09867F97                   9911          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
000078D0 1112139D85088718                   9912          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
000078E0 818283840A171B88                   9913          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
000078F0 9116939495960498                   9914          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00007900 A0E2E4E0E1E3E5E7                   9915          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00007910 E9EAEBE8EDEEEFEC                   9916          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00007920 2FC2C4C0C1C3C5C7                   9917          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00007930 C9CACBC8CDCECFCC                   9918          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00007940 6162636465666768                   9919          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00007950 6A6B6C6D6E6F7071                   9920          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
00007960 7E73747576777879                   9921          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
                                                                                                                           Page  200 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007970 A3A5B7A9A7B6BCBD                   9922          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00007980 4142434445464748                   9923          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
00007990 4A4B4C4D4E4F5051                   9924          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
000079A0 F753545556575859                   9925          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
000079B0 3132333435363738                   9926          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            9927 *
000079C0 05                                 9928          DC    XL1'5'
000079C1 000000                             9929          DC    AL3(0)
000079C4 000001E0                           9930          DC    AL4(480)
000079C8 00000000                           9931          DC    4X'00'
000079CC 00000000                           9932          DC    Q(@@STATIC)
000079D0 00000000                           9933          DC    X'00000000'
000079D4 00000101                           9934          DC    X'00000101'
000079D8 00000000                           9935          DC    X'00000000'
000079DC 000000A0                           9936          DC    X'000000A0'
000079E0 010203372D2E2F16                   9937          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
000079F0 1112133C3D322618                   9938          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00007A00 5A7F7B5B6C507D4D                   9939          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00007A10 F1F2F3F4F5F6F7F8                   9940          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00007A20 C1C2C3C4C5C6C7C8                   9941          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00007A30 D8D9E2E3E4E5E6E7                   9942          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00007A40 8182838485868788                   9943          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00007A50 9899A2A3A4A5A6A7                   9944          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00007A60 2122232425061728                   9945          DC    X'2122232425061728292A2B2C090A1B30' ................
00007A70 311A333435360838                   9946          DC    X'311A333435360838393A3B04143EFF80' ................
                                            9947 *
00007A80 05                                 9948          DC    XL1'5'
00007A81 000000                             9949          DC    AL3(0)
00007A84 00000208                           9950          DC    AL4(520)
00007A88 00000000                           9951          DC    4X'00'
00007A8C 00000000                           9952          DC    Q(@@STATIC)
00007A90 00000000                           9953          DC    X'00000000'
00007A94 000001C0                           9954          DC    X'000001C0'
00007A98 00000000                           9955          DC    X'00000000'
00007A9C 00000001                           9956          DC    X'00000001'
00007AA0 8A40404040404040                   9957          DC    X'8A40404040404040'                 ........
                                            9958 *
00007AA8 05                                 9959          DC    XL1'5'
00007AA9 000000                             9960          DC    AL3(0)
00007AAC 00000230                           9961          DC    AL4(560)
00007AB0 00000000                           9962          DC    4X'00'
00007AB4 00000000                           9963          DC    Q(@@STATIC)
00007AB8 00000000                           9964          DC    X'00000000'
00007ABC 000001E0                           9965          DC    X'000001E0'
00007AC0 00000000                           9966          DC    X'00000000'
00007AC4 00000001                           9967          DC    X'00000001'
00007AC8 8B40404040404040                   9968          DC    X'8B40404040404040'                 ........
                                            9969 *
00007AD0 0D                                 9970          DC    XL1'D'
00007AD1 000000                             9971          DC    AL3(0)
00007AD4 00000258                           9972          DC    AL4(600)
00007AD8 00000000                           9973          DC    4X'00'
                                                                                                                           Page  201 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007ADC 00000000                           9974          DC    Q(@@STATIC)
00007AE0 00000000                           9975          DC    X'00000000'
00007AE4 00000220                           9976          DC    X'00000220'
00007AE8 0000000000006B20                   9977          DC    ADL8(@DATA)
00007AF0 00000000                           9978          DC    X'00000000'
00007AF4 00000836                           9979          DC    X'00000836'
                                            9980 *
00007AF8 0D                                 9981          DC    XL1'D'
00007AF9 000000                             9982          DC    AL3(0)
00007AFC 00000280                           9983          DC    AL4(640)
00007B00 00000000                           9984          DC    4X'00'
00007B04 00000000                           9985          DC    Q(@@STATIC)
00007B08 00000000                           9986          DC    X'00000000'
00007B0C 00000228                           9987          DC    X'00000228'
00007B10 0000000000006B20                   9988          DC    ADL8(@DATA)
00007B18 00000000                           9989          DC    X'00000000'
00007B1C 0000083E                           9990          DC    X'0000083E'
                                            9991 *
00007B20 0D                                 9992          DC    XL1'D'
00007B21 000000                             9993          DC    AL3(0)
00007B24 000002A8                           9994          DC    AL4(680)
00007B28 00000000                           9995          DC    4X'00'
00007B2C 00000000                           9996          DC    Q(@@STATIC)
00007B30 00000000                           9997          DC    X'00000000'
00007B34 00000230                           9998          DC    X'00000230'
00007B38 0000000000006B20                   9999          DC    ADL8(@DATA)
00007B40 00000000                          10000          DC    X'00000000'
00007B44 00000844                          10001          DC    X'00000844'
                                           10002 *
00007B48 0D                                10003          DC    XL1'D'
00007B49 000000                            10004          DC    AL3(0)
00007B4C 000002D0                          10005          DC    AL4(720)
00007B50 00000000                          10006          DC    4X'00'
00007B54 00000000                          10007          DC    Q(@@STATIC)
00007B58 00000000                          10008          DC    X'00000000'
00007B5C 00000238                          10009          DC    X'00000238'
00007B60 0000000000006B20                  10010          DC    ADL8(@DATA)
00007B68 00000000                          10011          DC    X'00000000'
00007B6C 0000084C                          10012          DC    X'0000084C'
                                           10013 *
00007B70 0D                                10014          DC    XL1'D'
00007B71 000000                            10015          DC    AL3(0)
00007B74 000002F8                          10016          DC    AL4(760)
00007B78 00000000                          10017          DC    4X'00'
00007B7C 00000000                          10018          DC    Q(@@STATIC)
00007B80 00000000                          10019          DC    X'00000000'
00007B84 00000240                          10020          DC    X'00000240'
00007B88 0000000000006B20                  10021          DC    ADL8(@DATA)
00007B90 00000000                          10022          DC    X'00000000'
00007B94 00000856                          10023          DC    X'00000856'
                                           10024 *
00007B98 0D                                10025          DC    XL1'D'
                                                                                                                           Page  202 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007B99 000000                            10026          DC    AL3(0)
00007B9C 00000320                          10027          DC    AL4(800)
00007BA0 00000000                          10028          DC    4X'00'
00007BA4 00000000                          10029          DC    Q(@@STATIC)
00007BA8 00000000                          10030          DC    X'00000000'
00007BAC 00000248                          10031          DC    X'00000248'
00007BB0 0000000000006B20                  10032          DC    ADL8(@DATA)
00007BB8 00000000                          10033          DC    X'00000000'
00007BBC 00000864                          10034          DC    X'00000864'
                                           10035 *
00007BC0 0D                                10036          DC    XL1'D'
00007BC1 000000                            10037          DC    AL3(0)
00007BC4 00000348                          10038          DC    AL4(840)
00007BC8 00000000                          10039          DC    4X'00'
00007BCC 00000000                          10040          DC    Q(@@STATIC)
00007BD0 00000000                          10041          DC    X'00000000'
00007BD4 00000250                          10042          DC    X'00000250'
00007BD8 0000000000006B20                  10043          DC    ADL8(@DATA)
00007BE0 00000000                          10044          DC    X'00000000'
00007BE4 00000870                          10045          DC    X'00000870'
                                           10046 *
00007BE8 0D                                10047          DC    XL1'D'
00007BE9 000000                            10048          DC    AL3(0)
00007BEC 00000370                          10049          DC    AL4(880)
00007BF0 00000000                          10050          DC    4X'00'
00007BF4 00000000                          10051          DC    Q(@@STATIC)
00007BF8 00000000                          10052          DC    X'00000000'
00007BFC 00000258                          10053          DC    X'00000258'
00007C00 0000000000006B20                  10054          DC    ADL8(@DATA)
00007C08 00000000                          10055          DC    X'00000000'
00007C0C 00000880                          10056          DC    X'00000880'
                                           10057 *
00007C10 0D                                10058          DC    XL1'D'
00007C11 000000                            10059          DC    AL3(0)
00007C14 00000398                          10060          DC    AL4(920)
00007C18 00000000                          10061          DC    4X'00'
00007C1C 00000000                          10062          DC    Q(@@STATIC)
00007C20 00000000                          10063          DC    X'00000000'
00007C24 00000260                          10064          DC    X'00000260'
00007C28 0000000000006B20                  10065          DC    ADL8(@DATA)
00007C30 00000000                          10066          DC    X'00000000'
00007C34 00000894                          10067          DC    X'00000894'
                                           10068 *
00007C38 0D                                10069          DC    XL1'D'
00007C39 000000                            10070          DC    AL3(0)
00007C3C 000003C0                          10071          DC    AL4(960)
00007C40 00000000                          10072          DC    4X'00'
00007C44 00000000                          10073          DC    Q(@@STATIC)
00007C48 00000000                          10074          DC    X'00000000'
00007C4C 00000268                          10075          DC    X'00000268'
00007C50 0000000000006B20                  10076          DC    ADL8(@DATA)
00007C58 00000000                          10077          DC    X'00000000'
                                                                                                                           Page  203 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007C5C 000008A2                          10078          DC    X'000008A2'
                                           10079 *
00007C60 0D                                10080          DC    XL1'D'
00007C61 000000                            10081          DC    AL3(0)
00007C64 000003E8                          10082          DC    AL4(1000)
00007C68 00000000                          10083          DC    4X'00'
00007C6C 00000000                          10084          DC    Q(@@STATIC)
00007C70 00000000                          10085          DC    X'00000000'
00007C74 00000270                          10086          DC    X'00000270'
00007C78 0000000000006B20                  10087          DC    ADL8(@DATA)
00007C80 00000000                          10088          DC    X'00000000'
00007C84 000008AE                          10089          DC    X'000008AE'
                                           10090 *
00007C88 0D                                10091          DC    XL1'D'
00007C89 000000                            10092          DC    AL3(0)
00007C8C 00000410                          10093          DC    AL4(1040)
00007C90 00000000                          10094          DC    4X'00'
00007C94 00000000                          10095          DC    Q(@@STATIC)
00007C98 00000000                          10096          DC    X'00000000'
00007C9C 00000278                          10097          DC    X'00000278'
00007CA0 0000000000006B20                  10098          DC    ADL8(@DATA)
00007CA8 00000000                          10099          DC    X'00000000'
00007CAC 000008BE                          10100          DC    X'000008BE'
                                           10101 *
00007CB0 0D                                10102          DC    XL1'D'
00007CB1 000000                            10103          DC    AL3(0)
00007CB4 00000438                          10104          DC    AL4(1080)
00007CB8 00000000                          10105          DC    4X'00'
00007CBC 00000000                          10106          DC    Q(@@STATIC)
00007CC0 00000000                          10107          DC    X'00000000'
00007CC4 00000280                          10108          DC    X'00000280'
00007CC8 0000000000006B20                  10109          DC    ADL8(@DATA)
00007CD0 00000000                          10110          DC    X'00000000'
00007CD4 000008C8                          10111          DC    X'000008C8'
                                           10112 *
00007CD8 0D                                10113          DC    XL1'D'
00007CD9 000000                            10114          DC    AL3(0)
00007CDC 00000460                          10115          DC    AL4(1120)
00007CE0 00000000                          10116          DC    4X'00'
00007CE4 00000000                          10117          DC    Q(@@STATIC)
00007CE8 00000000                          10118          DC    X'00000000'
00007CEC 00000288                          10119          DC    X'00000288'
00007CF0 0000000000006B20                  10120          DC    ADL8(@DATA)
00007CF8 00000000                          10121          DC    X'00000000'
00007CFC 000008D2                          10122          DC    X'000008D2'
                                           10123 *
00007D00 0D                                10124          DC    XL1'D'
00007D01 000000                            10125          DC    AL3(0)
00007D04 00000488                          10126          DC    AL4(1160)
00007D08 00000000                          10127          DC    4X'00'
00007D0C 00000000                          10128          DC    Q(@@STATIC)
00007D10 00000000                          10129          DC    X'00000000'
                                                                                                                           Page  204 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007D14 00000290                          10130          DC    X'00000290'
00007D18 0000000000006B20                  10131          DC    ADL8(@DATA)
00007D20 00000000                          10132          DC    X'00000000'
00007D24 000008DE                          10133          DC    X'000008DE'
                                           10134 *
00007D28 0D                                10135          DC    XL1'D'
00007D29 000000                            10136          DC    AL3(0)
00007D2C 000004B0                          10137          DC    AL4(1200)
00007D30 00000000                          10138          DC    4X'00'
00007D34 00000000                          10139          DC    Q(@@STATIC)
00007D38 00000000                          10140          DC    X'00000000'
00007D3C 00000298                          10141          DC    X'00000298'
00007D40 0000000000006B20                  10142          DC    ADL8(@DATA)
00007D48 00000000                          10143          DC    X'00000000'
00007D4C 000008E8                          10144          DC    X'000008E8'
                                           10145 *
00007D50 0D                                10146          DC    XL1'D'
00007D51 000000                            10147          DC    AL3(0)
00007D54 000004D8                          10148          DC    AL4(1240)
00007D58 00000000                          10149          DC    4X'00'
00007D5C 00000000                          10150          DC    Q(@@STATIC)
00007D60 00000000                          10151          DC    X'00000000'
00007D64 000002A0                          10152          DC    X'000002A0'
00007D68 0000000000006B20                  10153          DC    ADL8(@DATA)
00007D70 00000000                          10154          DC    X'00000000'
00007D74 000008F8                          10155          DC    X'000008F8'
                                           10156 *
00007D78 0D                                10157          DC    XL1'D'
00007D79 000000                            10158          DC    AL3(0)
00007D7C 00000500                          10159          DC    AL4(1280)
00007D80 00000000                          10160          DC    4X'00'
00007D84 00000000                          10161          DC    Q(@@STATIC)
00007D88 00000000                          10162          DC    X'00000000'
00007D8C 000002A8                          10163          DC    X'000002A8'
00007D90 0000000000006B20                  10164          DC    ADL8(@DATA)
00007D98 00000000                          10165          DC    X'00000000'
00007D9C 00000904                          10166          DC    X'00000904'
                                           10167 *
00007DA0 0D                                10168          DC    XL1'D'
00007DA1 000000                            10169          DC    AL3(0)
00007DA4 00000528                          10170          DC    AL4(1320)
00007DA8 00000000                          10171          DC    4X'00'
00007DAC 00000000                          10172          DC    Q(@@STATIC)
00007DB0 00000000                          10173          DC    X'00000000'
00007DB4 000002B0                          10174          DC    X'000002B0'
00007DB8 0000000000006B20                  10175          DC    ADL8(@DATA)
00007DC0 00000000                          10176          DC    X'00000000'
00007DC4 00000912                          10177          DC    X'00000912'
                                           10178 *
00007DC8 0D                                10179          DC    XL1'D'
00007DC9 000000                            10180          DC    AL3(0)
00007DCC 00000550                          10181          DC    AL4(1360)
                                                                                                                           Page  205 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007DD0 00000000                          10182          DC    4X'00'
00007DD4 00000000                          10183          DC    Q(@@STATIC)
00007DD8 00000000                          10184          DC    X'00000000'
00007DDC 000002B8                          10185          DC    X'000002B8'
00007DE0 0000000000006B20                  10186          DC    ADL8(@DATA)
00007DE8 00000000                          10187          DC    X'00000000'
00007DEC 0000091E                          10188          DC    X'0000091E'
                                           10189 *
00007DF0 0D                                10190          DC    XL1'D'
00007DF1 000000                            10191          DC    AL3(0)
00007DF4 00000578                          10192          DC    AL4(1400)
00007DF8 00000000                          10193          DC    4X'00'
00007DFC 00000000                          10194          DC    Q(@@STATIC)
00007E00 00000000                          10195          DC    X'00000000'
00007E04 000002C0                          10196          DC    X'000002C0'
00007E08 0000000000006B20                  10197          DC    ADL8(@DATA)
00007E10 00000000                          10198          DC    X'00000000'
00007E14 0000092C                          10199          DC    X'0000092C'
                                           10200 *
00007E18 0D                                10201          DC    XL1'D'
00007E19 000000                            10202          DC    AL3(0)
00007E1C 000005A0                          10203          DC    AL4(1440)
00007E20 00000000                          10204          DC    4X'00'
00007E24 00000000                          10205          DC    Q(@@STATIC)
00007E28 00000000                          10206          DC    X'00000000'
00007E2C 000002C8                          10207          DC    X'000002C8'
00007E30 0000000000006B20                  10208          DC    ADL8(@DATA)
00007E38 00000000                          10209          DC    X'00000000'
00007E3C 0000093A                          10210          DC    X'0000093A'
                                           10211 *
00007E40 0D                                10212          DC    XL1'D'
00007E41 000000                            10213          DC    AL3(0)
00007E44 000005C8                          10214          DC    AL4(1480)
00007E48 00000000                          10215          DC    4X'00'
00007E4C 00000000                          10216          DC    Q(@@STATIC)
00007E50 00000000                          10217          DC    X'00000000'
00007E54 000002D0                          10218          DC    X'000002D0'
00007E58 0000000000006B20                  10219          DC    ADL8(@DATA)
00007E60 00000000                          10220          DC    X'00000000'
00007E64 00000948                          10221          DC    X'00000948'
                                           10222 *
00007E68 0D                                10223          DC    XL1'D'
00007E69 000000                            10224          DC    AL3(0)
00007E6C 000005F0                          10225          DC    AL4(1520)
00007E70 00000000                          10226          DC    4X'00'
00007E74 00000000                          10227          DC    Q(@@STATIC)
00007E78 00000000                          10228          DC    X'00000000'
00007E7C 000002D8                          10229          DC    X'000002D8'
00007E80 0000000000006B20                  10230          DC    ADL8(@DATA)
00007E88 00000000                          10231          DC    X'00000000'
00007E8C 00000958                          10232          DC    X'00000958'
                                           10233 *
                                                                                                                           Page  206 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007E90 0D                                10234          DC    XL1'D'
00007E91 000000                            10235          DC    AL3(0)
00007E94 00000618                          10236          DC    AL4(1560)
00007E98 00000000                          10237          DC    4X'00'
00007E9C 00000000                          10238          DC    Q(@@STATIC)
00007EA0 00000000                          10239          DC    X'00000000'
00007EA4 000002E0                          10240          DC    X'000002E0'
00007EA8 0000000000006B20                  10241          DC    ADL8(@DATA)
00007EB0 00000000                          10242          DC    X'00000000'
00007EB4 0000096E                          10243          DC    X'0000096E'
                                           10244 *
00007EB8 0D                                10245          DC    XL1'D'
00007EB9 000000                            10246          DC    AL3(0)
00007EBC 00000640                          10247          DC    AL4(1600)
00007EC0 00000000                          10248          DC    4X'00'
00007EC4 00000000                          10249          DC    Q(@@STATIC)
00007EC8 00000000                          10250          DC    X'00000000'
00007ECC 000002E8                          10251          DC    X'000002E8'
00007ED0 0000000000006B20                  10252          DC    ADL8(@DATA)
00007ED8 00000000                          10253          DC    X'00000000'
00007EDC 00000982                          10254          DC    X'00000982'
                                           10255 *
00007EE0 0D                                10256          DC    XL1'D'
00007EE1 000000                            10257          DC    AL3(0)
00007EE4 00000668                          10258          DC    AL4(1640)
00007EE8 00000000                          10259          DC    4X'00'
00007EEC 00000000                          10260          DC    Q(@@STATIC)
00007EF0 00000000                          10261          DC    X'00000000'
00007EF4 000002F0                          10262          DC    X'000002F0'
00007EF8 0000000000006B20                  10263          DC    ADL8(@DATA)
00007F00 00000000                          10264          DC    X'00000000'
00007F04 00000992                          10265          DC    X'00000992'
                                           10266 *
00007F08 0D                                10267          DC    XL1'D'
00007F09 000000                            10268          DC    AL3(0)
00007F0C 00000690                          10269          DC    AL4(1680)
00007F10 00000000                          10270          DC    4X'00'
00007F14 00000000                          10271          DC    Q(@@STATIC)
00007F18 00000000                          10272          DC    X'00000000'
00007F1C 000002F8                          10273          DC    X'000002F8'
00007F20 0000000000006B20                  10274          DC    ADL8(@DATA)
00007F28 00000000                          10275          DC    X'00000000'
00007F2C 0000099A                          10276          DC    X'0000099A'
                                           10277 *
00007F30 0D                                10278          DC    XL1'D'
00007F31 000000                            10279          DC    AL3(0)
00007F34 000006B8                          10280          DC    AL4(1720)
00007F38 00000000                          10281          DC    4X'00'
00007F3C 00000000                          10282          DC    Q(@@STATIC)
00007F40 00000000                          10283          DC    X'00000000'
00007F44 00000300                          10284          DC    X'00000300'
00007F48 0000000000006B20                  10285          DC    ADL8(@DATA)
                                                                                                                           Page  207 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00007F50 00000000                          10286          DC    X'00000000'
00007F54 000009AA                          10287          DC    X'000009AA'
                                           10288 *
00007F58 0D                                10289          DC    XL1'D'
00007F59 000000                            10290          DC    AL3(0)
00007F5C 000006E0                          10291          DC    AL4(1760)
00007F60 00000000                          10292          DC    4X'00'
00007F64 00000000                          10293          DC    Q(@@STATIC)
00007F68 00000000                          10294          DC    X'00000000'
00007F6C 00000308                          10295          DC    X'00000308'
00007F70 0000000000006B20                  10296          DC    ADL8(@DATA)
00007F78 00000000                          10297          DC    X'00000000'
00007F7C 000009BA                          10298          DC    X'000009BA'
                                           10299 *
00007F80 0D                                10300          DC    XL1'D'
00007F81 000000                            10301          DC    AL3(0)
00007F84 00000708                          10302          DC    AL4(1800)
00007F88 00000000                          10303          DC    4X'00'
00007F8C 00000000                          10304          DC    Q(@@STATIC)
00007F90 00000000                          10305          DC    X'00000000'
00007F94 00000310                          10306          DC    X'00000310'
00007F98 0000000000006B20                  10307          DC    ADL8(@DATA)
00007FA0 00000000                          10308          DC    X'00000000'
00007FA4 000009C8                          10309          DC    X'000009C8'
                                           10310 *
00007FA8 0D                                10311          DC    XL1'D'
00007FA9 000000                            10312          DC    AL3(0)
00007FAC 00000730                          10313          DC    AL4(1840)
00007FB0 00000000                          10314          DC    4X'00'
00007FB4 00000000                          10315          DC    Q(@@STATIC)
00007FB8 00000000                          10316          DC    X'00000000'
00007FBC 00000318                          10317          DC    X'00000318'
00007FC0 0000000000006B20                  10318          DC    ADL8(@DATA)
00007FC8 00000000                          10319          DC    X'00000000'
00007FCC 000009D4                          10320          DC    X'000009D4'
                                           10321 *
00007FD0 0D                                10322          DC    XL1'D'
00007FD1 000000                            10323          DC    AL3(0)
00007FD4 00000758                          10324          DC    AL4(1880)
00007FD8 00000000                          10325          DC    4X'00'
00007FDC 00000000                          10326          DC    Q(@@STATIC)
00007FE0 00000000                          10327          DC    X'00000000'
00007FE4 00000320                          10328          DC    X'00000320'
00007FE8 0000000000006B20                  10329          DC    ADL8(@DATA)
00007FF0 00000000                          10330          DC    X'00000000'
00007FF4 000009E0                          10331          DC    X'000009E0'
                                           10332 *
00007FF8 0D                                10333          DC    XL1'D'
00007FF9 000000                            10334          DC    AL3(0)
00007FFC 00000780                          10335          DC    AL4(1920)
00008000 00000000                          10336          DC    4X'00'
00008004 00000000                          10337          DC    Q(@@STATIC)
                                                                                                                           Page  208 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008008 00000000                          10338          DC    X'00000000'
0000800C 00000328                          10339          DC    X'00000328'
00008010 0000000000006B20                  10340          DC    ADL8(@DATA)
00008018 00000000                          10341          DC    X'00000000'
0000801C 000009F0                          10342          DC    X'000009F0'
                                           10343 *
00008020 0D                                10344          DC    XL1'D'
00008021 000000                            10345          DC    AL3(0)
00008024 000007A8                          10346          DC    AL4(1960)
00008028 00000000                          10347          DC    4X'00'
0000802C 00000000                          10348          DC    Q(@@STATIC)
00008030 00000000                          10349          DC    X'00000000'
00008034 00000330                          10350          DC    X'00000330'
00008038 0000000000006B20                  10351          DC    ADL8(@DATA)
00008040 00000000                          10352          DC    X'00000000'
00008044 000009FE                          10353          DC    X'000009FE'
                                           10354 *
00008048 0D                                10355          DC    XL1'D'
00008049 000000                            10356          DC    AL3(0)
0000804C 000007D0                          10357          DC    AL4(2000)
00008050 00000000                          10358          DC    4X'00'
00008054 00000000                          10359          DC    Q(@@STATIC)
00008058 00000000                          10360          DC    X'00000000'
0000805C 00000338                          10361          DC    X'00000338'
00008060 0000000000006B20                  10362          DC    ADL8(@DATA)
00008068 00000000                          10363          DC    X'00000000'
0000806C 00000A12                          10364          DC    X'00000A12'
                                           10365 *
00008070 0D                                10366          DC    XL1'D'
00008071 000000                            10367          DC    AL3(0)
00008074 000007F8                          10368          DC    AL4(2040)
00008078 00000000                          10369          DC    4X'00'
0000807C 00000000                          10370          DC    Q(@@STATIC)
00008080 00000000                          10371          DC    X'00000000'
00008084 00000340                          10372          DC    X'00000340'
00008088 0000000000006B20                  10373          DC    ADL8(@DATA)
00008090 00000000                          10374          DC    X'00000000'
00008094 00000A22                          10375          DC    X'00000A22'
                                           10376 *
00008098 0D                                10377          DC    XL1'D'
00008099 000000                            10378          DC    AL3(0)
0000809C 00000820                          10379          DC    AL4(2080)
000080A0 00000000                          10380          DC    4X'00'
000080A4 00000000                          10381          DC    Q(@@STATIC)
000080A8 00000000                          10382          DC    X'00000000'
000080AC 00000348                          10383          DC    X'00000348'
000080B0 0000000000006B20                  10384          DC    ADL8(@DATA)
000080B8 00000000                          10385          DC    X'00000000'
000080BC 00000A34                          10386          DC    X'00000A34'
                                           10387 *
000080C0 0D                                10388          DC    XL1'D'
000080C1 000000                            10389          DC    AL3(0)
                                                                                                                           Page  209 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000080C4 00000848                          10390          DC    AL4(2120)
000080C8 00000000                          10391          DC    4X'00'
000080CC 00000000                          10392          DC    Q(@@STATIC)
000080D0 00000000                          10393          DC    X'00000000'
000080D4 00000350                          10394          DC    X'00000350'
000080D8 0000000000006B20                  10395          DC    ADL8(@DATA)
000080E0 00000000                          10396          DC    X'00000000'
000080E4 00000A46                          10397          DC    X'00000A46'
                                           10398 *
000080E8 0D                                10399          DC    XL1'D'
000080E9 000000                            10400          DC    AL3(0)
000080EC 00000870                          10401          DC    AL4(2160)
000080F0 00000000                          10402          DC    4X'00'
000080F4 00000000                          10403          DC    Q(@@STATIC)
000080F8 00000000                          10404          DC    X'00000000'
000080FC 00000358                          10405          DC    X'00000358'
00008100 0000000000006B20                  10406          DC    ADL8(@DATA)
00008108 00000000                          10407          DC    X'00000000'
0000810C 00000A5C                          10408          DC    X'00000A5C'
                                           10409 *
00008110 0D                                10410          DC    XL1'D'
00008111 000000                            10411          DC    AL3(0)
00008114 00000898                          10412          DC    AL4(2200)
00008118 00000000                          10413          DC    4X'00'
0000811C 00000000                          10414          DC    Q(@@STATIC)
00008120 00000000                          10415          DC    X'00000000'
00008124 00000360                          10416          DC    X'00000360'
00008128 0000000000006B20                  10417          DC    ADL8(@DATA)
00008130 00000000                          10418          DC    X'00000000'
00008134 00000A72                          10419          DC    X'00000A72'
                                           10420 *
00008138 0D                                10421          DC    XL1'D'
00008139 000000                            10422          DC    AL3(0)
0000813C 000008C0                          10423          DC    AL4(2240)
00008140 00000000                          10424          DC    4X'00'
00008144 00000000                          10425          DC    Q(@@STATIC)
00008148 00000000                          10426          DC    X'00000000'
0000814C 00000368                          10427          DC    X'00000368'
00008150 0000000000006B20                  10428          DC    ADL8(@DATA)
00008158 00000000                          10429          DC    X'00000000'
0000815C 00000A88                          10430          DC    X'00000A88'
                                           10431 *
00008160 0D                                10432          DC    XL1'D'
00008161 000000                            10433          DC    AL3(0)
00008164 000008E8                          10434          DC    AL4(2280)
00008168 00000000                          10435          DC    4X'00'
0000816C 00000000                          10436          DC    Q(@@STATIC)
00008170 00000000                          10437          DC    X'00000000'
00008174 00000370                          10438          DC    X'00000370'
00008178 0000000000006B20                  10439          DC    ADL8(@DATA)
00008180 00000000                          10440          DC    X'00000000'
00008184 00000AA0                          10441          DC    X'00000AA0'
                                                                                                                           Page  210 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
                                           10442 *
00008188 0D                                10443          DC    XL1'D'
00008189 000000                            10444          DC    AL3(0)
0000818C 00000910                          10445          DC    AL4(2320)
00008190 00000000                          10446          DC    4X'00'
00008194 00000000                          10447          DC    Q(@@STATIC)
00008198 00000000                          10448          DC    X'00000000'
0000819C 00000378                          10449          DC    X'00000378'
000081A0 0000000000006B20                  10450          DC    ADL8(@DATA)
000081A8 00000000                          10451          DC    X'00000000'
000081AC 00000AAE                          10452          DC    X'00000AAE'
                                           10453 *
000081B0 0D                                10454          DC    XL1'D'
000081B1 000000                            10455          DC    AL3(0)
000081B4 00000938                          10456          DC    AL4(2360)
000081B8 00000000                          10457          DC    4X'00'
000081BC 00000000                          10458          DC    Q(@@STATIC)
000081C0 00000000                          10459          DC    X'00000000'
000081C4 00000380                          10460          DC    X'00000380'
000081C8 0000000000006B20                  10461          DC    ADL8(@DATA)
000081D0 00000000                          10462          DC    X'00000000'
000081D4 00000AC2                          10463          DC    X'00000AC2'
                                           10464 *
000081D8 0D                                10465          DC    XL1'D'
000081D9 000000                            10466          DC    AL3(0)
000081DC 00000960                          10467          DC    AL4(2400)
000081E0 00000000                          10468          DC    4X'00'
000081E4 00000000                          10469          DC    Q(@@STATIC)
000081E8 00000000                          10470          DC    X'00000000'
000081EC 00000388                          10471          DC    X'00000388'
000081F0 0000000000006B20                  10472          DC    ADL8(@DATA)
000081F8 00000000                          10473          DC    X'00000000'
000081FC 00000AE2                          10474          DC    X'00000AE2'
                                           10475 *
00008200 0D                                10476          DC    XL1'D'
00008201 000000                            10477          DC    AL3(0)
00008204 00000988                          10478          DC    AL4(2440)
00008208 00000000                          10479          DC    4X'00'
0000820C 00000000                          10480          DC    Q(@@STATIC)
00008210 00000000                          10481          DC    X'00000000'
00008214 00000390                          10482          DC    X'00000390'
00008218 0000000000006B20                  10483          DC    ADL8(@DATA)
00008220 00000000                          10484          DC    X'00000000'
00008224 00000B06                          10485          DC    X'00000B06'
                                           10486 *
00008228 0D                                10487          DC    XL1'D'
00008229 000000                            10488          DC    AL3(0)
0000822C 000009B0                          10489          DC    AL4(2480)
00008230 00000000                          10490          DC    4X'00'
00008234 00000000                          10491          DC    Q(@@STATIC)
00008238 00000000                          10492          DC    X'00000000'
0000823C 00000398                          10493          DC    X'00000398'
                                                                                                                           Page  211 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008240 0000000000006B20                  10494          DC    ADL8(@DATA)
00008248 00000000                          10495          DC    X'00000000'
0000824C 00000B28                          10496          DC    X'00000B28'
                                           10497 *
00008250 0D                                10498          DC    XL1'D'
00008251 000000                            10499          DC    AL3(0)
00008254 000009D8                          10500          DC    AL4(2520)
00008258 00000000                          10501          DC    4X'00'
0000825C 00000000                          10502          DC    Q(@@STATIC)
00008260 00000000                          10503          DC    X'00000000'
00008264 000003A0                          10504          DC    X'000003A0'
00008268 0000000000006B20                  10505          DC    ADL8(@DATA)
00008270 00000000                          10506          DC    X'00000000'
00008274 00000B3C                          10507          DC    X'00000B3C'
                                           10508 *
00008278 0D                                10509          DC    XL1'D'
00008279 000000                            10510          DC    AL3(0)
0000827C 00000A00                          10511          DC    AL4(2560)
00008280 00000000                          10512          DC    4X'00'
00008284 00000000                          10513          DC    Q(@@STATIC)
00008288 00000000                          10514          DC    X'00000000'
0000828C 000003A8                          10515          DC    X'000003A8'
00008290 0000000000006B20                  10516          DC    ADL8(@DATA)
00008298 00000000                          10517          DC    X'00000000'
0000829C 00000B58                          10518          DC    X'00000B58'
                                           10519 *
000082A0 0D                                10520          DC    XL1'D'
000082A1 000000                            10521          DC    AL3(0)
000082A4 00000A28                          10522          DC    AL4(2600)
000082A8 00000000                          10523          DC    4X'00'
000082AC 00000000                          10524          DC    Q(@@STATIC)
000082B0 00000000                          10525          DC    X'00000000'
000082B4 000003B0                          10526          DC    X'000003B0'
000082B8 0000000000006B20                  10527          DC    ADL8(@DATA)
000082C0 00000000                          10528          DC    X'00000000'
000082C4 00000B72                          10529          DC    X'00000B72'
                                           10530 *
000082C8 0D                                10531          DC    XL1'D'
000082C9 000000                            10532          DC    AL3(0)
000082CC 00000A50                          10533          DC    AL4(2640)
000082D0 00000000                          10534          DC    4X'00'
000082D4 00000000                          10535          DC    Q(@@STATIC)
000082D8 00000000                          10536          DC    X'00000000'
000082DC 000003B8                          10537          DC    X'000003B8'
000082E0 0000000000006B20                  10538          DC    ADL8(@DATA)
000082E8 00000000                          10539          DC    X'00000000'
000082EC 00000B96                          10540          DC    X'00000B96'
                                           10541 *
000082F0 0D                                10542          DC    XL1'D'
000082F1 000000                            10543          DC    AL3(0)
000082F4 00000A78                          10544          DC    AL4(2680)
000082F8 00000000                          10545          DC    4X'00'
                                                                                                                           Page  212 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000082FC 00000000                          10546          DC    Q(@@STATIC)
00008300 00000000                          10547          DC    X'00000000'
00008304 000003C0                          10548          DC    X'000003C0'
00008308 0000000000006B20                  10549          DC    ADL8(@DATA)
00008310 00000000                          10550          DC    X'00000000'
00008314 00000BB8                          10551          DC    X'00000BB8'
                                           10552 *
00008318 0D                                10553          DC    XL1'D'
00008319 000000                            10554          DC    AL3(0)
0000831C 00000AA0                          10555          DC    AL4(2720)
00008320 00000000                          10556          DC    4X'00'
00008324 00000000                          10557          DC    Q(@@STATIC)
00008328 00000000                          10558          DC    X'00000000'
0000832C 000003C8                          10559          DC    X'000003C8'
00008330 0000000000006B20                  10560          DC    ADL8(@DATA)
00008338 00000000                          10561          DC    X'00000000'
0000833C 00000BC4                          10562          DC    X'00000BC4'
                                           10563 *
00008340 0D                                10564          DC    XL1'D'
00008341 000000                            10565          DC    AL3(0)
00008344 00000AC8                          10566          DC    AL4(2760)
00008348 00000000                          10567          DC    4X'00'
0000834C 00000000                          10568          DC    Q(@@STATIC)
00008350 00000000                          10569          DC    X'00000000'
00008354 000003D0                          10570          DC    X'000003D0'
00008358 0000000000006B20                  10571          DC    ADL8(@DATA)
00008360 00000000                          10572          DC    X'00000000'
00008364 00000BDC                          10573          DC    X'00000BDC'
                                           10574 *
00008368 0D                                10575          DC    XL1'D'
00008369 000000                            10576          DC    AL3(0)
0000836C 00000AF0                          10577          DC    AL4(2800)
00008370 00000000                          10578          DC    4X'00'
00008374 00000000                          10579          DC    Q(@@STATIC)
00008378 00000000                          10580          DC    X'00000000'
0000837C 000003D8                          10581          DC    X'000003D8'
00008380 0000000000006B20                  10582          DC    ADL8(@DATA)
00008388 00000000                          10583          DC    X'00000000'
0000838C 00000BF2                          10584          DC    X'00000BF2'
                                           10585 *
00008390 0D                                10586          DC    XL1'D'
00008391 000000                            10587          DC    AL3(0)
00008394 00000B18                          10588          DC    AL4(2840)
00008398 00000000                          10589          DC    4X'00'
0000839C 00000000                          10590          DC    Q(@@STATIC)
000083A0 00000000                          10591          DC    X'00000000'
000083A4 000003E0                          10592          DC    X'000003E0'
000083A8 0000000000006B20                  10593          DC    ADL8(@DATA)
000083B0 00000000                          10594          DC    X'00000000'
000083B4 00000C08                          10595          DC    X'00000C08'
                                           10596 *
000083B8 0D                                10597          DC    XL1'D'
                                                                                                                           Page  213 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000083B9 000000                            10598          DC    AL3(0)
000083BC 00000B40                          10599          DC    AL4(2880)
000083C0 00000000                          10600          DC    4X'00'
000083C4 00000000                          10601          DC    Q(@@STATIC)
000083C8 00000000                          10602          DC    X'00000000'
000083CC 000003E8                          10603          DC    X'000003E8'
000083D0 0000000000006B20                  10604          DC    ADL8(@DATA)
000083D8 00000000                          10605          DC    X'00000000'
000083DC 00000C18                          10606          DC    X'00000C18'
                                           10607 *
000083E0 0D                                10608          DC    XL1'D'
000083E1 000000                            10609          DC    AL3(0)
000083E4 00000B68                          10610          DC    AL4(2920)
000083E8 00000000                          10611          DC    4X'00'
000083EC 00000000                          10612          DC    Q(@@STATIC)
000083F0 00000000                          10613          DC    X'00000000'
000083F4 000003F0                          10614          DC    X'000003F0'
000083F8 0000000000006B20                  10615          DC    ADL8(@DATA)
00008400 00000000                          10616          DC    X'00000000'
00008404 00000C2E                          10617          DC    X'00000C2E'
                                           10618 *
00008408 0D                                10619          DC    XL1'D'
00008409 000000                            10620          DC    AL3(0)
0000840C 00000B90                          10621          DC    AL4(2960)
00008410 00000000                          10622          DC    4X'00'
00008414 00000000                          10623          DC    Q(@@STATIC)
00008418 00000000                          10624          DC    X'00000000'
0000841C 000004C0                          10625          DC    X'000004C0'
00008420 0000000000006B20                  10626          DC    ADL8(@DATA)
00008428 00000000                          10627          DC    X'00000000'
0000842C 00000C3E                          10628          DC    X'00000C3E'
                                           10629 *
00008430 0D                                10630          DC    XL1'D'
00008431 000000                            10631          DC    AL3(0)
00008434 00000BB8                          10632          DC    AL4(3000)
00008438 00000000                          10633          DC    4X'00'
0000843C 00000000                          10634          DC    Q(@@STATIC)
00008440 00000000                          10635          DC    X'00000000'
00008444 000004C8                          10636          DC    X'000004C8'
00008448 0000000000006B20                  10637          DC    ADL8(@DATA)
00008450 00000000                          10638          DC    X'00000000'
00008454 00000C44                          10639          DC    X'00000C44'
                                           10640 *
00008458 0D                                10641          DC    XL1'D'
00008459 000000                            10642          DC    AL3(0)
0000845C 00000BE0                          10643          DC    AL4(3040)
00008460 00000000                          10644          DC    4X'00'
00008464 00000000                          10645          DC    Q(@@STATIC)
00008468 00000000                          10646          DC    X'00000000'
0000846C 000004D0                          10647          DC    X'000004D0'
00008470 0000000000006B20                  10648          DC    ADL8(@DATA)
00008478 00000000                          10649          DC    X'00000000'
                                                                                                                           Page  214 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
0000847C 00000C4A                          10650          DC    X'00000C4A'
                                           10651 *
00008480 0D                                10652          DC    XL1'D'
00008481 000000                            10653          DC    AL3(0)
00008484 00000C08                          10654          DC    AL4(3080)
00008488 00000000                          10655          DC    4X'00'
0000848C 00000000                          10656          DC    Q(@@STATIC)
00008490 00000000                          10657          DC    X'00000000'
00008494 000004D8                          10658          DC    X'000004D8'
00008498 0000000000006B20                  10659          DC    ADL8(@DATA)
000084A0 00000000                          10660          DC    X'00000000'
000084A4 00000C52                          10661          DC    X'00000C52'
                                           10662 *
000084A8 0D                                10663          DC    XL1'D'
000084A9 000000                            10664          DC    AL3(0)
000084AC 00000C30                          10665          DC    AL4(3120)
000084B0 00000000                          10666          DC    4X'00'
000084B4 00000000                          10667          DC    Q(@@STATIC)
000084B8 00000000                          10668          DC    X'00000000'
000084BC 000004E0                          10669          DC    X'000004E0'
000084C0 0000000000006B20                  10670          DC    ADL8(@DATA)
000084C8 00000000                          10671          DC    X'00000000'
000084CC 00000C56                          10672          DC    X'00000C56'
                                           10673 *
000084D0 0D                                10674          DC    XL1'D'
000084D1 000000                            10675          DC    AL3(0)
000084D4 00000C58                          10676          DC    AL4(3160)
000084D8 00000000                          10677          DC    4X'00'
000084DC 00000000                          10678          DC    Q(@@STATIC)
000084E0 00000000                          10679          DC    X'00000000'
000084E4 000004E8                          10680          DC    X'000004E8'
000084E8 0000000000006B20                  10681          DC    ADL8(@DATA)
000084F0 00000000                          10682          DC    X'00000000'
000084F4 00000C5C                          10683          DC    X'00000C5C'
                                           10684 *
000084F8 0D                                10685          DC    XL1'D'
000084F9 000000                            10686          DC    AL3(0)
000084FC 00000C80                          10687          DC    AL4(3200)
00008500 00000000                          10688          DC    4X'00'
00008504 00000000                          10689          DC    Q(@@STATIC)
00008508 00000000                          10690          DC    X'00000000'
0000850C 00000510                          10691          DC    X'00000510'
00008510 0000000000006B20                  10692          DC    ADL8(@DATA)
00008518 00000000                          10693          DC    X'00000000'
0000851C 00000C64                          10694          DC    X'00000C64'
                                           10695 *
00008520 0D                                10696          DC    XL1'D'
00008521 000000                            10697          DC    AL3(0)
00008524 00000CA8                          10698          DC    AL4(3240)
00008528 00000000                          10699          DC    4X'00'
0000852C 00000000                          10700          DC    Q(@@STATIC)
00008530 00000000                          10701          DC    X'00000000'
                                                                                                                           Page  215 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008534 00000518                          10702          DC    X'00000518'
00008538 0000000000006B20                  10703          DC    ADL8(@DATA)
00008540 00000000                          10704          DC    X'00000000'
00008544 00000C70                          10705          DC    X'00000C70'
                                           10706 *
00008548 0D                                10707          DC    XL1'D'
00008549 000000                            10708          DC    AL3(0)
0000854C 00000CD0                          10709          DC    AL4(3280)
00008550 00000000                          10710          DC    4X'00'
00008554 00000000                          10711          DC    Q(@@STATIC)
00008558 00000000                          10712          DC    X'00000000'
0000855C 00000520                          10713          DC    X'00000520'
00008560 0000000000006B20                  10714          DC    ADL8(@DATA)
00008568 00000000                          10715          DC    X'00000000'
0000856C 00000C78                          10716          DC    X'00000C78'
                                           10717 *
00008570 0D                                10718          DC    XL1'D'
00008571 000000                            10719          DC    AL3(0)
00008574 00000CF8                          10720          DC    AL4(3320)
00008578 00000000                          10721          DC    4X'00'
0000857C 00000000                          10722          DC    Q(@@STATIC)
00008580 00000000                          10723          DC    X'00000000'
00008584 00000528                          10724          DC    X'00000528'
00008588 0000000000006B20                  10725          DC    ADL8(@DATA)
00008590 00000000                          10726          DC    X'00000000'
00008594 00000C82                          10727          DC    X'00000C82'
                                           10728 *
00008598 0D                                10729          DC    XL1'D'
00008599 000000                            10730          DC    AL3(0)
0000859C 00000D20                          10731          DC    AL4(3360)
000085A0 00000000                          10732          DC    4X'00'
000085A4 00000000                          10733          DC    Q(@@STATIC)
000085A8 00000000                          10734          DC    X'00000000'
000085AC 00000630                          10735          DC    X'00000630'
000085B0 0000000000006B20                  10736          DC    ADL8(@DATA)
000085B8 00000000                          10737          DC    X'00000000'
000085BC 00000C8A                          10738          DC    X'00000C8A'
                                           10739 *
000085C0 0D                                10740          DC    XL1'D'
000085C1 000000                            10741          DC    AL3(0)
000085C4 00000D48                          10742          DC    AL4(3400)
000085C8 00000000                          10743          DC    4X'00'
000085CC 00000000                          10744          DC    Q(@@STATIC)
000085D0 00000000                          10745          DC    X'00000000'
000085D4 00000638                          10746          DC    X'00000638'
000085D8 0000000000006B20                  10747          DC    ADL8(@DATA)
000085E0 00000000                          10748          DC    X'00000000'
000085E4 00000C90                          10749          DC    X'00000C90'
                                           10750 *
000085E8 0D                                10751          DC    XL1'D'
000085E9 000000                            10752          DC    AL3(0)
000085EC 00000D70                          10753          DC    AL4(3440)
                                                                                                                           Page  216 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000085F0 00000000                          10754          DC    4X'00'
000085F4 00000000                          10755          DC    Q(@@STATIC)
000085F8 00000000                          10756          DC    X'00000000'
000085FC 00000640                          10757          DC    X'00000640'
00008600 0000000000006B20                  10758          DC    ADL8(@DATA)
00008608 00000000                          10759          DC    X'00000000'
0000860C 00000C9A                          10760          DC    X'00000C9A'
                                           10761 *
00008610 0D                                10762          DC    XL1'D'
00008611 000000                            10763          DC    AL3(0)
00008614 00000D98                          10764          DC    AL4(3480)
00008618 00000000                          10765          DC    4X'00'
0000861C 00000000                          10766          DC    Q(@@STATIC)
00008620 00000000                          10767          DC    X'00000000'
00008624 00000648                          10768          DC    X'00000648'
00008628 0000000000006B20                  10769          DC    ADL8(@DATA)
00008630 00000000                          10770          DC    X'00000000'
00008634 00000CA6                          10771          DC    X'00000CA6'
                                           10772 *
00008638 0D                                10773          DC    XL1'D'
00008639 000000                            10774          DC    AL3(0)
0000863C 00000DC0                          10775          DC    AL4(3520)
00008640 00000000                          10776          DC    4X'00'
00008644 00000000                          10777          DC    Q(@@STATIC)
00008648 00000000                          10778          DC    X'00000000'
0000864C 00000650                          10779          DC    X'00000650'
00008650 0000000000006B20                  10780          DC    ADL8(@DATA)
00008658 00000000                          10781          DC    X'00000000'
0000865C 00000CB2                          10782          DC    X'00000CB2'
                                           10783 *
00008660 0D                                10784          DC    XL1'D'
00008661 000000                            10785          DC    AL3(0)
00008664 00000DE8                          10786          DC    AL4(3560)
00008668 00000000                          10787          DC    4X'00'
0000866C 00000000                          10788          DC    Q(@@STATIC)
00008670 00000000                          10789          DC    X'00000000'
00008674 00000658                          10790          DC    X'00000658'
00008678 0000000000006B20                  10791          DC    ADL8(@DATA)
00008680 00000000                          10792          DC    X'00000000'
00008684 00000CC0                          10793          DC    X'00000CC0'
                                           10794 *
00008688 0D                                10795          DC    XL1'D'
00008689 000000                            10796          DC    AL3(0)
0000868C 00000E10                          10797          DC    AL4(3600)
00008690 00000000                          10798          DC    4X'00'
00008694 00000000                          10799          DC    Q(@@STATIC)
00008698 00000000                          10800          DC    X'00000000'
0000869C 00000660                          10801          DC    X'00000660'
000086A0 0000000000006B20                  10802          DC    ADL8(@DATA)
000086A8 00000000                          10803          DC    X'00000000'
000086AC 00000CC8                          10804          DC    X'00000CC8'
                                           10805 *
                                                                                                                           Page  217 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000086B0 0D                                10806          DC    XL1'D'
000086B1 000000                            10807          DC    AL3(0)
000086B4 00000E38                          10808          DC    AL4(3640)
000086B8 00000000                          10809          DC    4X'00'
000086BC 00000000                          10810          DC    Q(@@STATIC)
000086C0 00000000                          10811          DC    X'00000000'
000086C4 00000668                          10812          DC    X'00000668'
000086C8 0000000000006B20                  10813          DC    ADL8(@DATA)
000086D0 00000000                          10814          DC    X'00000000'
000086D4 00000CD2                          10815          DC    X'00000CD2'
                                           10816 *
000086D8 0D                                10817          DC    XL1'D'
000086D9 000000                            10818          DC    AL3(0)
000086DC 00000E60                          10819          DC    AL4(3680)
000086E0 00000000                          10820          DC    4X'00'
000086E4 00000000                          10821          DC    Q(@@STATIC)
000086E8 00000000                          10822          DC    X'00000000'
000086EC 00000670                          10823          DC    X'00000670'
000086F0 0000000000006B20                  10824          DC    ADL8(@DATA)
000086F8 00000000                          10825          DC    X'00000000'
000086FC 00000CDE                          10826          DC    X'00000CDE'
                                           10827 *
00008700 0D                                10828          DC    XL1'D'
00008701 000000                            10829          DC    AL3(0)
00008704 00000E88                          10830          DC    AL4(3720)
00008708 00000000                          10831          DC    4X'00'
0000870C 00000000                          10832          DC    Q(@@STATIC)
00008710 00000000                          10833          DC    X'00000000'
00008714 00000678                          10834          DC    X'00000678'
00008718 0000000000006B20                  10835          DC    ADL8(@DATA)
00008720 00000000                          10836          DC    X'00000000'
00008724 00000C8A                          10837          DC    X'00000C8A'
                                           10838 *
00008728 0D                                10839          DC    XL1'D'
00008729 000000                            10840          DC    AL3(0)
0000872C 00000EB0                          10841          DC    AL4(3760)
00008730 00000000                          10842          DC    4X'00'
00008734 00000000                          10843          DC    Q(@@STATIC)
00008738 00000000                          10844          DC    X'00000000'
0000873C 00000680                          10845          DC    X'00000680'
00008740 0000000000006B20                  10846          DC    ADL8(@DATA)
00008748 00000000                          10847          DC    X'00000000'
0000874C 00000CC0                          10848          DC    X'00000CC0'
                                           10849 *
00008750 0D                                10850          DC    XL1'D'
00008751 000000                            10851          DC    AL3(0)
00008754 00000ED8                          10852          DC    AL4(3800)
00008758 00000000                          10853          DC    4X'00'
0000875C 00000000                          10854          DC    Q(@@STATIC)
00008760 00000000                          10855          DC    X'00000000'
00008764 00000688                          10856          DC    X'00000688'
00008768 0000000000006B20                  10857          DC    ADL8(@DATA)
                                                                                                                           Page  218 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008770 00000000                          10858          DC    X'00000000'
00008774 00000CE8                          10859          DC    X'00000CE8'
                                           10860 *
00008778 0D                                10861          DC    XL1'D'
00008779 000000                            10862          DC    AL3(0)
0000877C 00000F00                          10863          DC    AL4(3840)
00008780 00000000                          10864          DC    4X'00'
00008784 00000000                          10865          DC    Q(@@STATIC)
00008788 00000000                          10866          DC    X'00000000'
0000878C 00000690                          10867          DC    X'00000690'
00008790 0000000000006B20                  10868          DC    ADL8(@DATA)
00008798 00000000                          10869          DC    X'00000000'
0000879C 00000CF6                          10870          DC    X'00000CF6'
                                           10871 *
000087A0 0D                                10872          DC    XL1'D'
000087A1 000000                            10873          DC    AL3(0)
000087A4 00000F28                          10874          DC    AL4(3880)
000087A8 00000000                          10875          DC    4X'00'
000087AC 00000000                          10876          DC    Q(@@STATIC)
000087B0 00000000                          10877          DC    X'00000000'
000087B4 00000698                          10878          DC    X'00000698'
000087B8 0000000000006B20                  10879          DC    ADL8(@DATA)
000087C0 00000000                          10880          DC    X'00000000'
000087C4 00000CFC                          10881          DC    X'00000CFC'
                                           10882 *
000087C8 0D                                10883          DC    XL1'D'
000087C9 000000                            10884          DC    AL3(0)
000087CC 00000F50                          10885          DC    AL4(3920)
000087D0 00000000                          10886          DC    4X'00'
000087D4 00000000                          10887          DC    Q(@@STATIC)
000087D8 00000000                          10888          DC    X'00000000'
000087DC 000006A0                          10889          DC    X'000006A0'
000087E0 0000000000006B20                  10890          DC    ADL8(@DATA)
000087E8 00000000                          10891          DC    X'00000000'
000087EC 00000D0A                          10892          DC    X'00000D0A'
                                           10893 *
000087F0 0D                                10894          DC    XL1'D'
000087F1 000000                            10895          DC    AL3(0)
000087F4 00000F78                          10896          DC    AL4(3960)
000087F8 00000000                          10897          DC    4X'00'
000087FC 00000000                          10898          DC    Q(@@STATIC)
00008800 00000000                          10899          DC    X'00000000'
00008804 000006A8                          10900          DC    X'000006A8'
00008808 0000000000006B20                  10901          DC    ADL8(@DATA)
00008810 00000000                          10902          DC    X'00000000'
00008814 00000D16                          10903          DC    X'00000D16'
                                           10904 *
00008818 0D                                10905          DC    XL1'D'
00008819 000000                            10906          DC    AL3(0)
0000881C 00000FA0                          10907          DC    AL4(4000)
00008820 00000000                          10908          DC    4X'00'
00008824 00000000                          10909          DC    Q(@@STATIC)
                                                                                                                           Page  219 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
00008828 00000000                          10910          DC    X'00000000'
0000882C 000006B0                          10911          DC    X'000006B0'
00008830 0000000000006B20                  10912          DC    ADL8(@DATA)
00008838 00000000                          10913          DC    X'00000000'
0000883C 00000D2C                          10914          DC    X'00000D2C'
                                           10915 *
00008840 0D                                10916          DC    XL1'D'
00008841 000000                            10917          DC    AL3(0)
00008844 00000FC8                          10918          DC    AL4(4040)
00008848 00000000                          10919          DC    4X'00'
0000884C 00000000                          10920          DC    Q(@@STATIC)
00008850 00000000                          10921          DC    X'00000000'
00008854 000006B8                          10922          DC    X'000006B8'
00008858 0000000000006B20                  10923          DC    ADL8(@DATA)
00008860 00000000                          10924          DC    X'00000000'
00008864 00000D3C                          10925          DC    X'00000D3C'
                                           10926 *
00008868 0D                                10927          DC    XL1'D'
00008869 000000                            10928          DC    AL3(0)
0000886C 00000FF0                          10929          DC    AL4(4080)
00008870 00000000                          10930          DC    4X'00'
00008874 00000000                          10931          DC    Q(@@STATIC)
00008878 00000000                          10932          DC    X'00000000'
0000887C 000006C0                          10933          DC    X'000006C0'
00008880 0000000000006B20                  10934          DC    ADL8(@DATA)
00008888 00000000                          10935          DC    X'00000000'
0000888C 00000D50                          10936          DC    X'00000D50'
                                           10937 *
00008890 0D                                10938          DC    XL1'D'
00008891 000000                            10939          DC    AL3(0)
00008894 00001018                          10940          DC    AL4(4120)
00008898 00000000                          10941          DC    4X'00'
0000889C 00000000                          10942          DC    Q(@@STATIC)
000088A0 00000000                          10943          DC    X'00000000'
000088A4 000006C8                          10944          DC    X'000006C8'
000088A8 0000000000006B20                  10945          DC    ADL8(@DATA)
000088B0 00000000                          10946          DC    X'00000000'
000088B4 00000D60                          10947          DC    X'00000D60'
                                           10948 *
000088B8 0D                                10949          DC    XL1'D'
000088B9 000000                            10950          DC    AL3(0)
000088BC 00001040                          10951          DC    AL4(4160)
000088C0 00000000                          10952          DC    4X'00'
000088C4 00000000                          10953          DC    Q(@@STATIC)
000088C8 00000000                          10954          DC    X'00000000'
000088CC 000006D0                          10955          DC    X'000006D0'
000088D0 0000000000006B20                  10956          DC    ADL8(@DATA)
000088D8 00000000                          10957          DC    X'00000000'
000088DC 00000C9A                          10958          DC    X'00000C9A'
                                           10959 *
000088E0 0D                                10960          DC    XL1'D'
000088E1 000000                            10961          DC    AL3(0)
                                                                                                                           Page  220 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:35 
000088E4 00001068                          10962          DC    AL4(4200)
000088E8 00000000                          10963          DC    4X'00'
000088EC 00000000                          10964          DC    Q(@@STATIC)
000088F0 00000000                          10965          DC    X'00000000'
000088F4 000008E0                          10966          DC    X'000008E0'
000088F8 0000000000006B20                  10967          DC    ADL8(@DATA)
00008900 00000000                          10968          DC    X'00000000'
00008904 00000C3E                          10969          DC    X'00000C3E'
                                           10970 *
00008908 0D                                10971          DC    XL1'D'
00008909 000000                            10972          DC    AL3(0)
0000890C 00001090                          10973          DC    AL4(4240)
00008910 00000000                          10974          DC    4X'00'
00008914 00000000                          10975          DC    Q(@@STATIC)
00008918 00000000                          10976          DC    X'00000000'
0000891C 000008E8                          10977          DC    X'000008E8'
00008920 0000000000006B20                  10978          DC    ADL8(@DATA)
00008928 00000000                          10979          DC    X'00000000'
0000892C 00000D70                          10980          DC    X'00000D70'
                                           10981 *
00008930 0D                                10982          DC    XL1'D'
00008931 000000                            10983          DC    AL3(0)
00008934 00000000                          10984          DC    AL4(0)
00008938 00000000                          10985          DC    4X'00'
0000893C 00000000                          10986          DC    Q(@@STATIC)
00008940 00000000                          10987          DC    X'00000000'
00008944 000008F0                          10988          DC    X'000008F0'
00008948 0000000000006B20                  10989          DC    ADL8(@DATA)
00008950 00000000                          10990          DC    X'00000000'
00008954 00000D76                          10991          DC    X'00000D76'
                                           10992 *
                                           10993          END
                                                 Relocation Dictionary                                                     Page  221 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00000020   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000002 00000050   A 4      +
 00000002 00000030 00000138   A 4      +
 00000002 00000031 00000140   A 4      +
 00000002 00000002 00000168   A 4      +
 00000002 00000002 00000190   A 4      +
 00000002 00000002 00000198   A 4      +
 00000002 00000030 00000280   A 4      +
 00000002 00000031 00000288   A 4      +
 00000002 00000002 000002B0   A 4      +
 00000002 00000002 000002D8   A 4      +
 00000002 00000002 000002E0   A 4      +
 00000002 00000030 000003B8   A 4      +
 00000002 00000031 000003C0   A 4      +
 00000002 00000002 000003E0   A 4      +
 00000002 00000002 00000408   A 4      +
 00000002 00000002 00000410   A 4      +
 00000002 00000027 000004C8   A 4      +
 00000002 00000002 000004E8   A 4      +
 00000002 00000002 00000510   A 4      +
 00000002 00000002 00000518   A 4      +
 00000002 00000038 00000618   A 4      +
 00000002 00000006 00000620   A 4      +
 00000002 00000040 00000628   A 4      +
 00000002 00000040 00000630   A 4      +
 00000002 00000002 00000658   A 4      +
 00000002 00000002 00000680   A 4      +
 00000002 00000002 00000688   A 4      +
 00000002 00000002 00000798   A 4      +
 00000002 00000040 000007A0   A 4      +
 00000002 00000006 000007A8   A 4      +
 00000002 00000040 000007B0   A 4      +
 00000002 00000002 000007D8   A 4      +
 00000002 00000002 00000800   A 4      +
 00000002 00000002 00000808   A 4      +
 00000002 0000000A 000008E0   A 4      +
 00000002 00000010 000008E8   A 4      +
 00000002 00000002 00000910   A 4      +
 00000002 00000002 00000938   A 4      +
 00000002 00000002 00000940   A 4      +
 00000002 0000000A 00000A28   A 4      +
 00000002 00000010 00000A30   A 4      +
 00000002 00000002 00000A58   A 4      +
 00000002 00000002 00000A80   A 4      +
 00000002 00000002 00000A88   A 4      +
 00000002 00000002 00000C08   A 4      +
 00000002 00000025 00000C10   A 4      +
 00000002 0000000A 00000C18   A 4      +
 00000002 00000039 00000C20   A 4      +
 00000002 00000040 00000C28   A 4      +
 00000002 00000040 00000C30   A 4      +
 00000002 00000010 00000C38   A 4      +
                                                 Relocation Dictionary                                                     Page  222 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 0000001B 00000C40   A 4      +
 00000002 00000002 00000C70   A 4      +
 00000002 00000002 00000C98   A 4      +
 00000002 00000002 00000CA0   A 4      +
 00000002 00000002 00000D60   A 4      +
 00000002 00000002 00000D88   A 4      +
 00000002 00000002 00000DB0   A 4      +
 00000002 00000002 00000DB8   A 4      +
 00000002 0000000A 00000EB8   A 4      +
 00000002 00000002 00000EC0   A 4      +
 00000002 00000010 00000EC8   A 4      +
 00000002 00000002 00000EF0   A 4      +
 00000002 00000002 00000F18   A 4      +
 00000002 00000002 00000F20   A 4      +
 00000002 00000003 00000FD0   A 4      +
 00000002 00000002 000010C8   A 4      +
 00000002 00000002 000010D0   A 4      +
 00000002 00000002 00001150   A 4      +
 00000002 00000002 00001178   A 4      +
 00000002 00000002 00001180   A 4      +
 00000002 00000002 00001218   A 4      +
 00000002 00000002 000013D8   A 4      +
 00000002 00000002 00001400   A 4      +
 00000002 00000002 00001408   A 4      +
 00000002 0000000A 000014C8   A 4      +
 00000002 00000010 000014D0   A 4      +
 00000002 0000000C 000014D8   A 4      +
 00000002 00000002 000014E0   A 4      +
 00000002 00000002 000014E8   A 4      +
 00000002 00000013 000014F0   A 4      +
 00000002 00000002 000014F8   A 4      +
 00000002 00000002 00001500   A 4      +
 00000002 00000002 00001508   A 4      +
 00000002 00000002 00001690   A 4      +
 00000002 00000002 000016B8   A 4      +
 00000002 00000002 000016C0   A 4      +
 00000002 00000002 000017A0   A 4      +
 00000002 00000002 000017D0   A 4      +
 00000002 00000002 000017F8   A 4      +
 00000002 00000002 00001800   A 4      +
 00000002 00000002 000018E8   A 4      +
 00000002 00000002 00001918   A 4      +
 00000002 00000002 00001940   A 4      +
 00000002 00000002 00001948   A 4      +
 00000002 00000002 00001A10   A 4      +
 00000002 00000002 00001A40   A 4      +
 00000002 00000002 00001A68   A 4      +
 00000002 00000002 00001A70   A 4      +
 00000002 0000000A 00001B60   A 4      +
 00000002 00000010 00001B68   A 4      +
 00000002 00000002 00001B90   A 4      +
 00000002 00000002 00001BB8   A 4      +
 00000002 00000002 00001BC0   A 4      +
                                                 Relocation Dictionary                                                     Page  223 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 0000003F 00001C4C   Q 4      +
 00000002 00000023 00001C50   A 4      +
 00000002 00000040 00001C58   A 4      +
 00000002 00000034 00001C60   A 4      +
 00000002 00000002 00001E58   A 4      +
 00000002 00000002 00001E80   A 4      +
 00000002 00000002 00001E88   A 4      +
 00000002 00000005 00001F58   A 4      +
 00000002 00000002 00001F88   A 4      +
 00000002 00000002 00001FB0   A 4      +
 00000002 00000002 00001FB8   A 4      +
 00000002 0000003C 00002098   A 4      +
 00000002 00000002 000020C8   A 4      +
 00000002 00000002 000020F0   A 4      +
 00000002 00000002 000020F8   A 4      +
 00000002 0000003C 000021A0   A 4      +
 00000002 0000003D 000021A8   A 4      +
 00000002 00000002 00002250   A 4      +
 00000002 00000002 00002278   A 4      +
 00000002 00000002 00002280   A 4      +
 00000002 00000004 00002400   A 4      +
 00000002 0000003A 00002408   A 4      +
 00000002 0000003E 00002410   A 4      +
 00000002 00000040 00002418   A 4      +
 00000002 0000000F 00002420   A 4      +
 00000002 0000002B 00002428   A 4      +
 00000002 00000002 00002568   A 4      +
 00000002 00000002 00002590   A 4      +
 00000002 00000002 00002598   A 4      +
 00000002 00000015 000026F0   A 4      +
 00000002 00000004 000026F8   A 4      +
 00000002 0000003A 00002700   A 4      +
 00000002 0000003E 00002708   A 4      +
 00000002 00000040 00002710   A 4      +
 00000002 0000000F 00002718   A 4      +
 00000002 00000002 00002720   A 4      +
 00000002 00000012 00002728   A 4      +
 00000002 00000035 00002730   A 4      +
 00000002 00000002 00002B40   A 4      +
 00000002 00000002 00002B68   A 4      +
 00000002 00000002 00002B70   A 4      +
 00000002 0000003E 00002BE8   A 4      +
 00000002 00000040 00002BF0   A 4      +
 00000002 00000008 00002BF8   A 4      +
 00000002 0000003B 00002C00   Q 4      +
 00000002 0000002C 00002C08   A 4      +
 00000002 0000000B 00002C10   A 4      +
 00000002 00000002 00002D88   A 4      +
 00000002 00000002 00002DB0   A 4      +
 00000002 00000002 00002DB8   A 4      +
 00000002 00000002 00002E30   A 4      +
 00000002 00000015 00002E38   A 4      +
 00000002 00000004 00002E40   A 4      +
                                                 Relocation Dictionary                                                     Page  224 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 0000003A 00002E48   A 4      +
 00000002 0000003E 00002E50   A 4      +
 00000002 00000040 00002E58   A 4      +
 00000002 0000000F 00002E60   A 4      +
 00000002 00000002 00002E68   A 4      +
 00000002 00000023 00002E70   A 4      +
 00000002 00000016 00002E78   A 4      +
 00000002 00000008 00002E80   A 4      +
 00000002 0000003B 00002E88   Q 4      +
 00000002 0000002C 00002E90   A 4      +
 00000002 00000029 00002E98   A 4      +
 00000002 00000002 00002EA0   A 4      +
 00000002 00000002 00003428   A 4      +
 00000002 00000002 00003450   A 4      +
 00000002 00000002 00003458   A 4      +
 00000002 00000009 000034D0   A 4      +
 00000002 00000002 000034D8   A 4      +
 00000002 00000002 000034E0   A 4      +
 00000002 00000040 000034E8   A 4      +
 00000002 0000002A 000034F0   A 4      +
 00000002 00000002 000034F8   A 4      +
 00000002 00000002 00003640   A 4      +
 00000002 00000002 00003668   A 4      +
 00000002 00000002 00003670   A 4      +
 00000002 0000001A 000036F8   A 4      +
 00000002 00000040 00003700   A 4      +
 00000002 00000002 00003708   A 4      +
 00000002 00000002 00003710   A 4      +
 00000002 00000040 00003718   A 4      +
 00000002 0000002F 00003720   A 4      +
 00000002 00000002 00003728   A 4      +
 00000002 00000002 00003888   A 4      +
 00000002 00000002 000038B0   A 4      +
 00000002 00000002 000038B8   A 4      +
 00000002 00000022 00003930   A 4      +
 00000002 0000001E 00003938   A 4      +
 00000002 00000026 00003940   A 4      +
 00000002 00000002 00003948   A 4      +
 00000002 00000024 00003950   A 4      +
 00000002 00000002 00003A68   A 4      +
 00000002 00000002 00003A90   A 4      +
 00000002 00000002 00003A98   A 4      +
 00000002 0000001A 00003B10   A 4      +
 00000002 00000040 00003B18   A 4      +
 00000002 00000002 00003B20   A 4      +
 00000002 00000002 00003B28   A 4      +
 00000002 00000040 00003B30   A 4      +
 00000002 0000002E 00003B38   A 4      +
 00000002 00000007 00003B40   A 4      +
 00000002 00000002 00003B48   A 4      +
 00000002 00000002 00003B50   A 4      +
 00000002 00000002 00003D60   A 4      +
 00000002 00000002 00003D88   A 4      +
                                                 Relocation Dictionary                                                     Page  225 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00003D90   A 4      +
 00000002 0000003E 00003E58   A 4      +
 00000002 00000040 00003E60   A 4      +
 00000002 00000037 00003E68   A 4      +
 00000002 00000019 00003E70   A 4      +
 00000002 00000017 00003E78   A 4      +
 00000002 0000000A 00003E80   A 4      +
 00000002 00000002 00003E88   A 4      +
 00000002 00000010 00003E90   A 4      +
 00000002 00000002 00003E98   A 4      +
 00000002 00000014 00003EA0   A 4      +
 00000002 00000002 00004178   A 4      +
 00000002 00000002 000041A0   A 4      +
 00000002 00000002 000041A8   A 4      +
 00000002 00000039 00004350   A 4      +
 00000002 00000040 00004358   A 4      +
 00000002 00000040 00004360   A 4      +
 00000002 00000022 00004368   A 4      +
 00000002 00000026 00004370   A 4      +
 00000002 0000003E 00004378   A 4      +
 00000002 00000002 00004380   A 4      +
 00000002 00000002 00004388   A 4      +
 00000002 00000002 00004390   A 4      +
 00000002 00000024 00004398   A 4      +
 00000002 00000002 00004560   A 4      +
 00000002 00000002 00004588   A 4      +
 00000002 00000002 00004590   A 4      +
 00000002 0000003E 000046B8   A 4      +
 00000002 00000040 000046C0   A 4      +
 00000002 00000002 000046C8   A 4      +
 00000002 00000002 000046D0   A 4      +
 00000002 00000002 000047C8   A 4      +
 00000002 00000002 000047F0   A 4      +
 00000002 00000002 000047F8   A 4      +
 00000002 00000002 00004858   A 4      +
 00000002 00000002 00004910   A 4      +
 00000002 00000002 00004938   A 4      +
 00000002 00000002 00004940   A 4      +
 00000002 00000036 00004A30   A 4      +
 00000002 0000001F 00004A38   A 4      +
 00000002 0000001C 00004A40   A 4      +
 00000002 00000040 00004A48   A 4      +
 00000002 00000020 00004A50   A 4      +
 00000002 00000002 00004A58   A 4      +
 00000002 00000002 00004A60   A 4      +
 00000002 00000014 00004A68   A 4      +
 00000002 00000002 00004B50   A 4      +
 00000002 00000002 00004B78   A 4      +
 00000002 00000002 00004B80   A 4      +
 00000002 00000037 00004C00   A 4      +
 00000002 00000002 00004C08   A 4      +
 00000002 00000002 00004C10   A 4      +
 00000002 00000014 00004C18   A 4      +
                                                 Relocation Dictionary                                                     Page  226 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00004D70   A 4      +
 00000002 00000002 00004D98   A 4      +
 00000002 00000002 00004DA0   A 4      +
 00000002 00000002 00004ED8   A 4      +
 00000002 00000032 00004EE0   A 4      +
 00000002 00000002 00004EE8   A 4      +
 00000002 00000002 00004EF0   A 4      +
 00000002 00000002 00004F20   A 4      +
 00000002 00000002 00004F48   A 4      +
 00000002 00000002 00004F50   A 4      +
 00000002 0000000A 00005060   A 4      +
 00000002 00000002 00005068   A 4      +
 00000002 00000010 00005070   A 4      +
 00000002 00000002 000050A0   A 4      +
 00000002 00000002 000050C8   A 4      +
 00000002 00000002 000050D0   A 4      +
 00000002 0000001D 00005210   A 4      +
 00000002 00000040 00005218   A 4      +
 00000002 00000009 00005220   A 4      +
 00000002 00000002 00005228   A 4      +
 00000002 00000040 00005230   A 4      +
 00000002 00000002 00005238   A 4      +
 00000002 00000002 00005240   A 4      +
 00000002 00000002 00005248   A 4      +
 00000002 00000019 00005250   A 4      +
 00000002 00000011 00005258   A 4      +
 00000002 00000018 00005260   A 4      +
 00000002 00000021 00005268   A 4      +
 00000002 00000002 00005270   A 4      +
 00000002 0000003E 00005278   A 4      +
 00000002 0000002D 00005280   A 4      +
 00000002 00000002 00005550   A 4      +
 00000002 00000002 00005558   A 4      +
 00000002 00000040 00005590   A 4      +
 00000002 00000002 000056D0   A 4      +
 00000002 00000002 000056F8   A 4      +
 00000002 00000002 00005700   A 4      +
 00000002 00000002 000057B8   A 4      +
 00000002 00000002 000057E8   A 4      +
 00000002 00000002 00005810   A 4      +
 00000002 00000002 00005818   A 4      +
 00000002 0000000E 000058E8   A 4      +
 00000002 00000023 000058F0   A 4      +
 00000002 00000040 000058F8   A 4      +
 00000002 00000002 00005900   A 4      +
 00000002 0000003E 00005908   A 4      +
 00000002 00000002 00005910   A 4      +
 00000002 00000033 00005918   A 4      +
 00000002 00000002 00005920   A 4      +
 00000002 00000002 00005928   A 4      +
 00000002 00000002 00005930   A 4      +
 00000002 00000021 00005938   A 4      +
 00000002 00000002 00005940   A 4      +
                                                 Relocation Dictionary                                                     Page  227 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000002 00000002 00005D58   A 4      +
 00000002 00000002 00005D60   A 4      +
 00000002 00000002 00005DB0   A 4      +
 00000002 00000002 00005DD8   A 4      +
 00000002 00000002 00005DE0   A 4      +
 00000002 00000002 00005EE0   A 4      +
 00000002 00000002 00005EE8   A 4      +
 00000002 00000040 00005EF0   A 4      +
 00000002 00000002 00005F20   A 4      +
 00000002 00000002 00005F48   A 4      +
 00000002 00000002 00005F50   A 4      +
 00000002 0000003E 00006090   A 4      +
 00000002 00000040 00006098   A 4      +
 00000002 00000032 000060A0   A 4      +
 00000002 00000002 000060A8   A 4      +
 00000002 00000002 000060B0   A 4      +
 00000002 00000028 000060B8   A 4      +
 00000002 00000002 000061B0   A 4      +
 00000002 00000002 000061D8   A 4      +
 00000002 00000002 000061E0   A 4      +
 00000002 0000003E 000063D0   A 4      +
 00000002 00000040 000063D8   A 4      +
 00000002 00000002 000063E0   A 4      +
 00000002 00000002 000063E8   A 4      +
 00000002 00000002 000063F0   A 4      +
 00000002 00000002 000063F8   A 4      +
 00000002 00000002 00006498   A 4      +
 00000002 00000002 000064C0   A 4      +
 00000002 00000002 000064C8   A 4      +
 00000002 00000002 00006590   A 4      +
 00000002 00000040 00006598   A 4      +
 00000002 00000002 000065D0   A 4      +
 00000002 00000002 000065F8   A 4      +
 00000002 00000002 00006600   A 4      +
 00000002 0000000A 000067D8   A 4      +
 00000002 00000002 000067E0   A 4      +
 00000002 0000003E 000067E8   A 4      +
 00000002 0000000D 000067F0   Q 4      +
 00000002 00000040 000067F8   A 4      +
 00000002 0000002D 00006800   A 4      +
 00000002 00000010 00006808   A 4      +
 00000002 00000002 00006838   A 4      +
 00000002 00000002 00006860   A 4      +
 00000002 00000002 00006868   A 4      +
 00000002 0000003E 00006A30   A 4      +
 00000002 0000003F 00006A38   Q 4      +
 00000002 00000040 00006A40   A 4      +
 00000002 00000002 00006A48   A 4      +
 00000002 00000033 00006A50   A 4      +
 00000002 00000002 00006A58   A 4      +
 00000002 00000002 00006A60   A 4      +
 00000002 00000002 00006A68   A 4      +
 00000043 0000003F 000078AC   Q 4      +
                                                 Relocation Dictionary                                                     Page  228 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000043 0000003F 000079CC   Q 4      +
 00000043 0000003F 00007A8C   Q 4      +
 00000043 0000003F 00007AB4   Q 4      +
 00000043 0000003F 00007ADC   Q 4      +
 00000043 00000040 00007AE8   A 4      +
 00000043 0000003F 00007B04   Q 4      +
 00000043 00000040 00007B10   A 4      +
 00000043 0000003F 00007B2C   Q 4      +
 00000043 00000040 00007B38   A 4      +
 00000043 0000003F 00007B54   Q 4      +
 00000043 00000040 00007B60   A 4      +
 00000043 0000003F 00007B7C   Q 4      +
 00000043 00000040 00007B88   A 4      +
 00000043 0000003F 00007BA4   Q 4      +
 00000043 00000040 00007BB0   A 4      +
 00000043 0000003F 00007BCC   Q 4      +
 00000043 00000040 00007BD8   A 4      +
 00000043 0000003F 00007BF4   Q 4      +
 00000043 00000040 00007C00   A 4      +
 00000043 0000003F 00007C1C   Q 4      +
 00000043 00000040 00007C28   A 4      +
 00000043 0000003F 00007C44   Q 4      +
 00000043 00000040 00007C50   A 4      +
 00000043 0000003F 00007C6C   Q 4      +
 00000043 00000040 00007C78   A 4      +
 00000043 0000003F 00007C94   Q 4      +
 00000043 00000040 00007CA0   A 4      +
 00000043 0000003F 00007CBC   Q 4      +
 00000043 00000040 00007CC8   A 4      +
 00000043 0000003F 00007CE4   Q 4      +
 00000043 00000040 00007CF0   A 4      +
 00000043 0000003F 00007D0C   Q 4      +
 00000043 00000040 00007D18   A 4      +
 00000043 0000003F 00007D34   Q 4      +
 00000043 00000040 00007D40   A 4      +
 00000043 0000003F 00007D5C   Q 4      +
 00000043 00000040 00007D68   A 4      +
 00000043 0000003F 00007D84   Q 4      +
 00000043 00000040 00007D90   A 4      +
 00000043 0000003F 00007DAC   Q 4      +
 00000043 00000040 00007DB8   A 4      +
 00000043 0000003F 00007DD4   Q 4      +
 00000043 00000040 00007DE0   A 4      +
 00000043 0000003F 00007DFC   Q 4      +
 00000043 00000040 00007E08   A 4      +
 00000043 0000003F 00007E24   Q 4      +
 00000043 00000040 00007E30   A 4      +
 00000043 0000003F 00007E4C   Q 4      +
 00000043 00000040 00007E58   A 4      +
 00000043 0000003F 00007E74   Q 4      +
 00000043 00000040 00007E80   A 4      +
 00000043 0000003F 00007E9C   Q 4      +
 00000043 00000040 00007EA8   A 4      +
                                                 Relocation Dictionary                                                     Page  229 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000043 0000003F 00007EC4   Q 4      +
 00000043 00000040 00007ED0   A 4      +
 00000043 0000003F 00007EEC   Q 4      +
 00000043 00000040 00007EF8   A 4      +
 00000043 0000003F 00007F14   Q 4      +
 00000043 00000040 00007F20   A 4      +
 00000043 0000003F 00007F3C   Q 4      +
 00000043 00000040 00007F48   A 4      +
 00000043 0000003F 00007F64   Q 4      +
 00000043 00000040 00007F70   A 4      +
 00000043 0000003F 00007F8C   Q 4      +
 00000043 00000040 00007F98   A 4      +
 00000043 0000003F 00007FB4   Q 4      +
 00000043 00000040 00007FC0   A 4      +
 00000043 0000003F 00007FDC   Q 4      +
 00000043 00000040 00007FE8   A 4      +
 00000043 0000003F 00008004   Q 4      +
 00000043 00000040 00008010   A 4      +
 00000043 0000003F 0000802C   Q 4      +
 00000043 00000040 00008038   A 4      +
 00000043 0000003F 00008054   Q 4      +
 00000043 00000040 00008060   A 4      +
 00000043 0000003F 0000807C   Q 4      +
 00000043 00000040 00008088   A 4      +
 00000043 0000003F 000080A4   Q 4      +
 00000043 00000040 000080B0   A 4      +
 00000043 0000003F 000080CC   Q 4      +
 00000043 00000040 000080D8   A 4      +
 00000043 0000003F 000080F4   Q 4      +
 00000043 00000040 00008100   A 4      +
 00000043 0000003F 0000811C   Q 4      +
 00000043 00000040 00008128   A 4      +
 00000043 0000003F 00008144   Q 4      +
 00000043 00000040 00008150   A 4      +
 00000043 0000003F 0000816C   Q 4      +
 00000043 00000040 00008178   A 4      +
 00000043 0000003F 00008194   Q 4      +
 00000043 00000040 000081A0   A 4      +
 00000043 0000003F 000081BC   Q 4      +
 00000043 00000040 000081C8   A 4      +
 00000043 0000003F 000081E4   Q 4      +
 00000043 00000040 000081F0   A 4      +
 00000043 0000003F 0000820C   Q 4      +
 00000043 00000040 00008218   A 4      +
 00000043 0000003F 00008234   Q 4      +
 00000043 00000040 00008240   A 4      +
 00000043 0000003F 0000825C   Q 4      +
 00000043 00000040 00008268   A 4      +
 00000043 0000003F 00008284   Q 4      +
 00000043 00000040 00008290   A 4      +
 00000043 0000003F 000082AC   Q 4      +
 00000043 00000040 000082B8   A 4      +
 00000043 0000003F 000082D4   Q 4      +
                                                 Relocation Dictionary                                                     Page  230 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000043 00000040 000082E0   A 4      +
 00000043 0000003F 000082FC   Q 4      +
 00000043 00000040 00008308   A 4      +
 00000043 0000003F 00008324   Q 4      +
 00000043 00000040 00008330   A 4      +
 00000043 0000003F 0000834C   Q 4      +
 00000043 00000040 00008358   A 4      +
 00000043 0000003F 00008374   Q 4      +
 00000043 00000040 00008380   A 4      +
 00000043 0000003F 0000839C   Q 4      +
 00000043 00000040 000083A8   A 4      +
 00000043 0000003F 000083C4   Q 4      +
 00000043 00000040 000083D0   A 4      +
 00000043 0000003F 000083EC   Q 4      +
 00000043 00000040 000083F8   A 4      +
 00000043 0000003F 00008414   Q 4      +
 00000043 00000040 00008420   A 4      +
 00000043 0000003F 0000843C   Q 4      +
 00000043 00000040 00008448   A 4      +
 00000043 0000003F 00008464   Q 4      +
 00000043 00000040 00008470   A 4      +
 00000043 0000003F 0000848C   Q 4      +
 00000043 00000040 00008498   A 4      +
 00000043 0000003F 000084B4   Q 4      +
 00000043 00000040 000084C0   A 4      +
 00000043 0000003F 000084DC   Q 4      +
 00000043 00000040 000084E8   A 4      +
 00000043 0000003F 00008504   Q 4      +
 00000043 00000040 00008510   A 4      +
 00000043 0000003F 0000852C   Q 4      +
 00000043 00000040 00008538   A 4      +
 00000043 0000003F 00008554   Q 4      +
 00000043 00000040 00008560   A 4      +
 00000043 0000003F 0000857C   Q 4      +
 00000043 00000040 00008588   A 4      +
 00000043 0000003F 000085A4   Q 4      +
 00000043 00000040 000085B0   A 4      +
 00000043 0000003F 000085CC   Q 4      +
 00000043 00000040 000085D8   A 4      +
 00000043 0000003F 000085F4   Q 4      +
 00000043 00000040 00008600   A 4      +
 00000043 0000003F 0000861C   Q 4      +
 00000043 00000040 00008628   A 4      +
 00000043 0000003F 00008644   Q 4      +
 00000043 00000040 00008650   A 4      +
 00000043 0000003F 0000866C   Q 4      +
 00000043 00000040 00008678   A 4      +
 00000043 0000003F 00008694   Q 4      +
 00000043 00000040 000086A0   A 4      +
 00000043 0000003F 000086BC   Q 4      +
 00000043 00000040 000086C8   A 4      +
 00000043 0000003F 000086E4   Q 4      +
 00000043 00000040 000086F0   A 4      +
                                                 Relocation Dictionary                                                     Page  231 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:35 
 00000043 0000003F 0000870C   Q 4      +
 00000043 00000040 00008718   A 4      +
 00000043 0000003F 00008734   Q 4      +
 00000043 00000040 00008740   A 4      +
 00000043 0000003F 0000875C   Q 4      +
 00000043 00000040 00008768   A 4      +
 00000043 0000003F 00008784   Q 4      +
 00000043 00000040 00008790   A 4      +
 00000043 0000003F 000087AC   Q 4      +
 00000043 00000040 000087B8   A 4      +
 00000043 0000003F 000087D4   Q 4      +
 00000043 00000040 000087E0   A 4      +
 00000043 0000003F 000087FC   Q 4      +
 00000043 00000040 00008808   A 4      +
 00000043 0000003F 00008824   Q 4      +
 00000043 00000040 00008830   A 4      +
 00000043 0000003F 0000884C   Q 4      +
 00000043 00000040 00008858   A 4      +
 00000043 0000003F 00008874   Q 4      +
 00000043 00000040 00008880   A 4      +
 00000043 0000003F 0000889C   Q 4      +
 00000043 00000040 000088A8   A 4      +
 00000043 0000003F 000088C4   Q 4      +
 00000043 00000040 000088D0   A 4      +
 00000043 0000003F 000088EC   Q 4      +
 00000043 00000040 000088F8   A 4      +
 00000043 0000003F 00008914   Q 4      +
 00000043 00000040 00008920   A 4      +
 00000043 0000003F 0000893C   Q 4      +
 00000043 00000040 00008948   A 4      +
                                                 DSECT Cross Reference                                                     Page  232 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
@AUTO#mk_esc_filename
         000000B0  FFFFFFD7  07857
@AUTO#rd_atomic32_add
         000000AC  FFFFFFFF  00260
@AUTO#rd_atomic32_get
         000000AC  FFFFFFFD  00509
@AUTO#rd_atomic32_sub
         000000AC  FFFFFFFE  00387
@AUTO#rd_free
         000000A8  FFFFFFFC  00613
@AUTO#rd_kafka_commit
         000000C8  FFFFFFE3  05167
@AUTO#rd_kafka_commit_message
         000000AC  FFFFFFE2  05342
@AUTO#rd_kafka_commit_queue
         000000AC  FFFFFFE1  05604
@AUTO#rd_kafka_commit0
         000000A8  FFFFFFE4  04965
@AUTO#rd_kafka_offset_auto_commit_tmr_cb
         000000A8  FFFFFFD0  09179
@AUTO#rd_kafka_offset_broker_commit
         000000A8  FFFFFFDF  06239
@AUTO#rd_kafka_offset_broker_commit_cb
         000000A8  FFFFFFE0  05941
@AUTO#rd_kafka_offset_broker_init
         000000A8  FFFFFFD3  08588
@AUTO#rd_kafka_offset_broker_term
         000000A8  FFFFFFD4  08462
@AUTO#rd_kafka_offset_commit
         000000A8  FFFFFFDE  06450
@AUTO#rd_kafka_offset_file_close
         000000A8  FFFFFFEB  03113
@AUTO#rd_kafka_offset_file_commit
         000000BE  FFFFFFE5  04768
@AUTO#rd_kafka_offset_file_init
         00002571  FFFFFFD5  08385
@AUTO#rd_kafka_offset_file_open
         000000AC  FFFFFFE8  03621
@AUTO#rd_kafka_offset_file_read
         000000BE  FFFFFFE7  04055
@AUTO#rd_kafka_offset_file_sync
         000000A8  FFFFFFE6  04250
@AUTO#rd_kafka_offset_file_term
         000000AC  FFFFFFDA  07141
@AUTO#rd_kafka_offset_query_tmr_cb
         000000A8  FFFFFFCF  09366
@AUTO#rd_kafka_offset_reset
         000000B0  FFFFFFD8  07665
@AUTO#rd_kafka_offset_reset_op_cb
         000000A8  FFFFFFD9  07275
@AUTO#rd_kafka_offset_store
         000000A8  FFFFFFDC  06776
@AUTO#rd_kafka_offset_store_init
                                                 DSECT Cross Reference                                                     Page  233 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:35 
         000000A8  FFFFFFCE  09624
@AUTO#rd_kafka_offset_store_stop
         000000AC  FFFFFFD1  09068
@AUTO#rd_kafka_offset_store_term
         000000AC  FFFFFFD2  08819
@AUTO#rd_kafka_offset_store0
         000000A8  FFFFFFED  02758
@AUTO#rd_kafka_offset_sync
         000000A8  FFFFFFDD  06575
@AUTO#rd_kafka_offset_sync_tmr_cb
         000000A8  FFFFFFD6  07962
@AUTO#rd_kafka_offsets_store
         000000AC  FFFFFFDB  06983
@AUTO#rd_kafka_offset2str
         000000A8  FFFFFFEC  03000
@AUTO#rd_kafka_op_cmp_prio
         000000A8  FFFFFFF3  01804
@AUTO#rd_kafka_open_cb_generic
         000000AC  FFFFFFE9  03369
@AUTO#rd_kafka_open_cb_linux
         000000A8  FFFFFFEA  03229
@AUTO#rd_kafka_q_destroy_owner
         000000A8  FFFFFFF6  01411
@AUTO#rd_kafka_q_destroy0
         000000AC  FFFFFFF7  01306
@AUTO#rd_kafka_q_disable0
         000000A8  FFFFFFF8  01120
@AUTO#rd_kafka_q_enq
         000000A8  FFFFFFF0  02403
@AUTO#rd_kafka_q_enq0
         000000A8  FFFFFFF2  02033
@AUTO#rd_kafka_q_enq1
         000000A8  FFFFFFF1  02294
@AUTO#rd_kafka_q_fwd_get
         000000A8  FFFFFFF5  01548
@AUTO#rd_kafka_q_io_event
         000000A8  FFFFFFF4  01711
@AUTO#rd_kafka_q_keep
         000000A8  FFFFFFF9  00997
@AUTO#rd_kafka_replyq_make
         000000B8  FFFFFFEF  02526
@AUTO#rd_kafka_toppar_keep0
         000000A8  FFFFFFEE  02633
@AUTO#rd_refcnt_sub0
         000000AC  FFFFFFFA  00880
@AUTO#rd_strdup
         000000A8  FFFFFFFB  00744
                                          Macro and Copy Code Source Summary                                               Page  234 
Source                                                    Members                                     DASM V1.95.14 2021/04/30 15:35 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  235 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   197  0000009E  00000002 USING  ORDINARY    00000060 00001000 00000002  12 000E0    222 @REGION_1059_1,12
   255  00000148  00000002 DROP                                           12              12
   324  000001E6  00000002 USING  ORDINARY    000001A8 00001000 00000002  12 000E0    349 @REGION_1060_1,12
   382  00000290  00000002 DROP                                           12              12
   451  0000032E  00000002 USING  ORDINARY    000002F0 00001000 00000002  12 000D0    471 @REGION_1061_1,12
   504  000003C8  00000002 DROP                                           12              12
   573  0000045E  00000002 USING  ORDINARY    00000420 00001000 00000002  12 000A8    580 @REGION_1080_1,12
   608  000004D0  00000002 DROP                                           12              12
   676  00000566  00000002 USING  ORDINARY    00000528 00001000 00000002  12 00108    706 @REGION_1081_1,12
   739  00000638  00000002 DROP                                           12              12
   807  000006D6  00000002 USING  ORDINARY    00000698 00001000 00000002  12 00118    841 @REGION_1084_1,12
   875  000007B8  00000002 DROP                                           12              12
   944  00000856  00000002 USING  ORDINARY    00000818 00001000 00000002  12 000D0    962 @REGION_1428_1,12
   992  000008F0  00000002 DROP                                           12              12
  1060  0000098E  00000002 USING  ORDINARY    00000950 00001000 00000002  12 000E0   1085 @REGION_1432_1,12
  1115  00000A38  00000002 DROP                                           12              12
  1183  00000AD6  00000002 USING  ORDINARY    00000A98 00001000 00000002  12 001A8   1265 @REGION_1435_1,12
  1301  00000C48  00000002 DROP                                           12              12
  1370  00000CEE  00000002 USING  ORDINARY    00000CB0 00001000 00000002  12 000B0   1378 @REGION_1436_1,12
  1406  00000D68  00000002 DROP                                           12              12
  1474  00000E06  00000002 USING  ORDINARY    00000DC8 00001000 00000002  12 00100   1510 @REGION_1439_1,12
  1543  00000ED0  00000002 DROP                                           12              12
  1611  00000F6E  00000002 USING  ORDINARY    00000F30 00001000 00000002  12 00102   1678 @REGION_1441_1,12
  1706  0000107A  00000002 DROP                                           12              12
  1763  000010EA  00000002 USING  ORDINARY    000010E0 00001000 00000002  12 00042   1782 @REGION_1442_1,12
  1799  00001134  00000002 DROP                                           12              12
  1867  000011CE  00000002 USING  ORDINARY    00001190 00001000 00000002  12 001C2   1993 @REGION_1444_1,12
  2028  000013B8  00000002 DROP                                           12              12
  2096  00001456  00000002 USING  ORDINARY    00001418 00001000 00000002  12 00212   2259 @REGION_1445_1,12
  2289  00001672  00000002 DROP                                           12              12
  2357  0000170E  00000002 USING  ORDINARY    000016D0 00001000 00000002  12 000D0   2370 @REGION_1446_1,12
  2398  000017A8  00000002 DROP                                           12              12
  2466  0000184E  00000002 USING  ORDINARY    00001810 00001000 00000002  12 000D8   2482 @REGION_1454_1,12
  2521  000018F0  00000002 DROP                                           12              12
  2590  00001996  00000002 USING  ORDINARY    00001958 00001000 00000002  12 000B8   2599 @REGION_1780_1,12
  2628  00001A18  00000002 DROP                                           12              12
  2696  00001ABE  00000002 USING  ORDINARY    00001A80 00001000 00000002  12 000E8   2723 @REGION_1918_1,12
  2753  00001B70  00000002 DROP                                           12              12
  2823  00001C0E  00000002 USING  ORDINARY    00001BD0 00001000 00000002  12 00214   2969 @REGION_1917_1,12
  2995  00001E2C  00000002 DROP                                           12              12
  3063  00001ED6  00000002 USING  ORDINARY    00001E98 00001000 00000002  12 000C0   3077 @REGION_1925_1,12
  3108  00001F60  00000002 DROP                                           12              12
  3178  00002006  00000002 USING  ORDINARY    00001FC8 00001000 00000002  12 000D0   3193 @REGION_1563_1,12
  3224  000020A0  00000002 DROP                                           12              12
  3294  00002146  00000002 USING  ORDINARY    00002108 00001000 00000002  12 000D8   3335 @REGION_1564_1,12
  3364  00002228  00000002 DROP                                           12              12
  3435  000022CE  00000002 USING  ORDINARY    00002290 00001000 00000002  12 0026A   3584 @REGION_1926_1,12
  3616  00002542  00000002 DROP                                           12              12
  3687  000025E6  00000002 USING  ORDINARY    000025A8 00001000 00000002  12 0052A   4017 @REGION_1927_1,12
  4050  00002B1A  00000002 DROP                                           12              12
  4123  00002BBE  00000002 USING  ORDINARY    00002B80 00001000 00000002  12 00198   4214 @REGION_1928_1,12
                                                      Using Map                                                            Page  236 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
  4245  00002D60  00000002 DROP                                           12              12
  4313  00002E06  00000002 USING  ORDINARY    00002DC8 00001000 00000002  12 005F4   4737 @REGION_1929_1,12
  4763  00003404  00000002 DROP                                           12              12
  4840  000034A6  00000002 USING  ORDINARY    00003468 00001000 00000002  12 00174   4932 @REGION_1930_1,12
  4960  00003624  00000002 DROP                                           12              12
  5030  000036BE  00000002 USING  ORDINARY    00003680 00001000 00000002  12 00196   5133 @REGION_612_1,12
  5162  0000385E  00000002 DROP                                           12              12
  5237  00003906  00000002 USING  ORDINARY    000038C8 00001000 00000002  12 00134   5309 @REGION_613_1,12
  5337  00003A44  00000002 DROP                                           12              12
  5408  00003AE6  00000002 USING  ORDINARY    00003AA8 00001000 00000002  12 00240   5568 @REGION_614_1,12
  5599  00003D30  00000002 DROP                                           12              12
  5668  00003DDE  00000002 USING  ORDINARY    00003DA0 00001000 00000002  12 00362   5910 @REGION_1931_1,12
  5936  0000414A  00000002 DROP                                           12              12
  6004  000041F6  00000002 USING  ORDINARY    000041B8 00001000 00000002  12 0029E   6207 @REGION_1932_1,12
  6234  0000453A  00000002 DROP                                           12              12
  6302  000045DE  00000002 USING  ORDINARY    000045A0 00001000 00000002  12 001BE   6423 @REGION_1933_1,12
  6445  000047A6  00000002 DROP                                           12              12
  6515  00004846  00000002 USING  ORDINARY    00004808 00001000 00000002  12 0009C   6548 @REGION_1919_1,12
  6570  000048EC  00000002 DROP                                           12              12
  6640  0000498E  00000002 USING  ORDINARY    00004950 00001000 00000002  12 00190   6742 @REGION_599_1,12
  6771  00004B28  00000002 DROP                                           12              12
  6841  00004BCE  00000002 USING  ORDINARY    00004B90 00001000 00000002  12 0016C   6951 @REGION_600_1,12
  6978  00004D44  00000002 DROP                                           12              12
  7049  00004DEE  00000002 USING  ORDINARY    00004DB0 00001000 00000002  12 00140   7100 @REGION_1934_1,12
  7136  00004EF8  00000002 DROP                                           12              12
  7205  00004F9E  00000002 USING  ORDINARY    00004F60 00001000 00000002  12 00110   7239 @REGION_1935_1,12
  7270  00005078  00000002 DROP                                           12              12
  7340  0000511E  00000002 USING  ORDINARY    000050E0 00001000 00000002  12 003DE   7634 @REGION_1923_1,12
  7660  00005506  00000002 DROP                                           12              12
  7718  00005572  00000002 USING  ORDINARY    00005568 00001000 00000002  12 0012C   7835 @REGION_1936_1,12
  7852  000056A6  00000002 DROP                                           12              12
  7921  0000574E  00000002 USING  ORDINARY    00005710 00001000 00000002  12 000A8   7929 @REGION_1937_1,12
  7957  000057C0  00000002 DROP                                           12              12
  8025  00005866  00000002 USING  ORDINARY    00005828 00001000 00000002  12 00494   8353 @REGION_1938_1,12
  8380  00005D04  00000002 DROP                                           12              12
  8525  00005E2E  00000002 USING  ORDINARY    00005DF0 00001000 00000002  12 00100   8553 @REGION_1940_1,12
  8583  00005EF8  00000002 DROP                                           12              12
  8653  00005F9E  00000002 USING  ORDINARY    00005F60 00001000 00000002  12 001C2   8788 @REGION_1920_1,12
  8814  00006186  00000002 DROP                                           12              12
  8885  0000622E  00000002 USING  ORDINARY    000061F0 00001000 00000002  12 00230   9035 @REGION_1921_1,12
  9063  00006468  00000002 DROP                                           12              12
  9133  00006516  00000002 USING  ORDINARY    000064D8 00001000 00000002  12 000C0   9144 @REGION_1941_1,12
  9173  000065A0  00000002 DROP                                           12              12
  9244  0000664E  00000002 USING  ORDINARY    00006610 00001000 00000002  12 001F8   9327 @REGION_1924_1,12
  9361  00006810  00000002 DROP                                           12              12
  9431  000068B6  00000002 USING  ORDINARY    00006878 00001000 00000002  12 0025A   9591 @REGION_1922_1,12
  9619  00006B1A  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  237 
                                                                                                      DASM V1.95.14 2021/04/30 15:35 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDKAFKA_OFFSET ..\asg\asm\rdkafka_offset.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 15.35.50 Stop Time: 15.35.50 Processor Time: 00.00.00.0870
Return Code 000
