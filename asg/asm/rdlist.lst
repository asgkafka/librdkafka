                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdlist.obj ../asg/asm/rdlist.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdlist.obj)  CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

Libraries in Search Order:
                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:36 
@@ZARCH#  WX 00000001                              00
@RDLIST   SD 00000002 00000000 00003F28            07  @CODE
malloc    ER 00000003                                  MALLOC
qsort     ER 00000004                                  QSORT
realloc   ER 00000005                                  REALLOC
printf    ER 00000006                                  PRINTF
memmove   ER 00000007                                  MEMMOVE
@@ASSERT  ER 00000008                                  __ASSERT
bsearch   ER 00000009                                  BSEARCH
calloc    ER 0000000A                                  CALLOC
free      ER 0000000B                                  FREE
@rdlist&  XD 0000000C 00000007 00000208                @@STATIC
@rdlist   SD 0000000D 00003F28 00000332            07  @DATA
@rdlist:  SD 0000000E 00004260 00000230            07  @@INIT@
rd_list_dump
          LD          00000630          00000002   00  RD_LIST_DUMP
rd_list_grow
          LD          000007F8          00000002   00  RD_LIST_GROW
rd_list_init
          LD          000009A0          00000002   00  RD_LIST_INIT
rd_list_init_copy
          LD          00000AE0          00000002   00  RD_LIST_INIT_COPY
rd_list_new
          LD          00000D88          00000002   00  RD_LIST_NEW
rd_list_prealloc_elems
          LD          00000ED8          00000002   00  RD_LIST_PREALLOC_ELEMS
rd_list_set_cnt
          LD          00001110          00000002   00  RD_LIST_SET_CNT
rd_list_free_cb
          LD          000012B8          00000002   00  RD_LIST_FREE_CB
rd_list_add
          LD          000013D0          00000002   00  RD_LIST_ADD
rd_list_set
          LD          00001560          00000002   00  RD_LIST_SET
rd_list_remove_elem
          LD          000017A8          00000002   00  RD_LIST_REMOVE_ELEM
rd_list_remove
          LD          00001980          00000002   00  RD_LIST_REMOVE
rd_list_remove_cmp
          LD          00001B00          00000002   00  RD_LIST_REMOVE_CMP
rd_list_remove_multi_cmp
          LD          00001CA8          00000002   00  RD_LIST_REMOVE_MULTI_CMP
rd_list_pop
          LD          00001E40          00000002   00  RD_LIST_POP
rd_list_sort
          LD          000020D0          00000002   00  RD_LIST_SORT
rd_list_clear
          LD          000023E8          00000002   00  RD_LIST_CLEAR
rd_list_destroy
          LD          000024F8          00000002   00  RD_LIST_DESTROY
rd_list_destroy_free
          LD          00002630          00000002   00  RD_LIST_DESTROY_FREE
rd_list_elem
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:36 
          LD          00002740          00000002   00  RD_LIST_ELEM
rd_list_index
          LD          000027E8          00000002   00  RD_LIST_INDEX
rd_list_find
          LD          00002948          00000002   00  RD_LIST_FIND
rd_list_first
          LD          00002B40          00000002   00  RD_LIST_FIRST
rd_list_last
          LD          00002BD8          00000002   00  RD_LIST_LAST
rd_list_find_duplicate
          LD          00002C90          00000002   00  RD_LIST_FIND_DUPLICATE
rd_list_cmp
          LD          00002E68          00000002   00  RD_LIST_CMP
rd_list_cmp_ptr
          LD          00003000          00000002   00  RD_LIST_CMP_PTR
rd_list_cmp_str
          LD          000030A8          00000002   00  RD_LIST_CMP_STR
rd_list_apply
          LD          00003150          00000002   00  RD_LIST_APPLY
rd_list_copy
          LD          00003350          00000002   00  RD_LIST_COPY
rd_list_copy_to
          LD          000034B8          00000002   00  RD_LIST_COPY_TO
rd_list_copy_preallocated
          LD          00003980          00000002   00  RD_LIST_COPY_PREALLOCATED
rd_list_init_int32
          LD          00003AB8          00000002   00  RD_LIST_INIT_INT32
rd_list_set_int32
          LD          00003C18          00000002   00  RD_LIST_SET_INT32
rd_list_get_int32
          LD          00003DF8          00000002   00  RD_LIST_GET_INT32
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Fri Apr 30 15:36:18 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS C'@RDLIST'
00000000                00000000 00003F28     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS C'@rdlist'
                                              18 malloc   ALIAS C'malloc'
                                              19          EXTRN malloc
                                              20 qsort    ALIAS C'qsort'
                                              21          EXTRN qsort
                                              22 realloc  ALIAS C'realloc'
                                              23          EXTRN realloc
                                              24 printf   ALIAS C'printf'
                                              25          EXTRN printf
                                              26 memmove  ALIAS C'memmove'
                                              27          EXTRN memmove
                                              28 __assert ALIAS C'@@ASSERT'
                                              29          EXTRN __assert
                                              30 bsearch  ALIAS C'bsearch'
                                              31          EXTRN bsearch
                                              32 calloc   ALIAS C'calloc'
                                              33          EXTRN calloc
                                              34 free     ALIAS C'free'
                                              35          EXTRN free
                                              36 *
                                              37 *
                                              38 *
                                              39 * ....... start of rd_calloc
00000000                                      40 @LNAME751 DS   0H
00000000 00000009                             41          DC    X'00000009'
00000004 99846D8381939396                     42          DC    C'rd_calloc'
0000000D 00                                   43          DC    X'00'
                                              44 rd_calloc DCCPRLG CINDEX=751,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME751
                                              45          macro
                                              46          dccextrn &m
                                              47          gblc    &$dccext(1000)
                                              48          gbla    &$dccexti
                                              49          lcla    &i
                                              50 &$dccext(&$dccexti+1) setc    '&m'
                                              51 &i       seta    1
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                              52 .loop    aif    (&i gt &$dccexti).around
                                              53          aif    ('&$dccext(&i)' eq '&m').getout
                                              54 &i       seta    &i+1
                                              55          ago     .loop
                                              56 .around  anop
                                              57 &$dccexti seta &$dccexti+1
                                              58          extrn  &m
                                              59 .getout  anop
                                              60          mend
00000010                                      61+$eye0002    ds    0d                                                    02-DCCCA
00000010 C4C3C3                               62+         dc cl3'DCC'                                                    02-DCCCA
00000013 01                                   63+         dc xl1'01' format one                                          02-DCCCA
00000014 00000000                             64+         dc a(0)                                                        02-DCCCA
00000018 0000000000000082                     65+         dc ad(@PER_751)                                                02-DCCCA
00000020 00000000000000D0                     66+         dc ad(208)                                                     02-DCCCA
00000028 0000000000000000                     67+         dc ad(0)                                                       02-DCCCA
00000030 0000000000001000                     68+         dc ad(4096)                                                    02-DCCCA
00000038 20                                   69+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000039 03                                   70+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000003A 03                                   71+         dc al1(3)                                                      02-DCCCA
0000003B 08                                   72+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000003C 00                                   73+         dc bl.8'00000000'                                              02-DCCCA
0000003D 000000                               74+         dc al3(0)                                                      02-DCCCA
00000040 0000000000000000                     75+         dc ad(@LNAME751)                                               02-DCCCA
00000048                                      76+         ds 0d                                                          02-DCCCA
00000048 0000000000000010                     77+         dc ad($eye0002)                                                02-DCCCA
00000050 0000000000000000                     78+         dc ad(0)                                                       02-DCCCA
00000058                                      79+         ds    0d                                                       01-DCCPR
00000058                                      80+rd_calloc ds   0d                                                       01-DCCPR
00000058                                      81+@REGION_751_1 ds 0h                                                     01-DCCPR
00000058 EBEC D008 0024          00000008     82+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000005E E3E0 D088 0004          00000088     83+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000064 E3C0 D090 0004          00000090     84+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000006A B904 002E                            85+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000006E E3B0 C018 0004          00000018     86+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000074 A7EB 00D0               000000D0     87+         aghi  14,208              increase by frame size               01-DCCPR
00000078 E3E0 C020 0021          00000020     88+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000007E 4720 B020               00000020     89+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000082                                      90+@PER_751 ds    0h                                                       01-DCCPR
00000082 EBDE 2080 0024          00000080     91+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000088 E3C0 2090 0024          00000090     92+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000008E B904 00D2                            93+         lgr   13,2                set real frame pointer               01-DCCPR
00000092 B904 00CF                            94+         lgr   12,15               set base reg                         01-DCCPR
                        00000058              95+         using @REGION_751_1,12                                         01-DCCPR
                                              96 * ******* End of Prologue
                                              97 * *
                                              98 * ***      void *p = calloc(num, sz);
00000096 E3F0 1000 0004          00000000     99          LG    15,0(0,1)   ; num
0000009C E3F0 D0B0 0024          000000B0    100          STG   15,176(0,13)
000000A2 E3F0 1008 0004          00000008    101          LG    15,8(0,1)   ; sz
000000A8 E3F0 D0B8 0024          000000B8    102          STG   15,184(0,13)
000000AE 4110 D0B0               000000B0    103          LA    1,176(0,13)
                                                                                                                           Page    7 
  Active Usings: @REGION_751_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000000B2 E3F0 C0F8 0004          00000150    104          LG    15,@lit_751_0 ; calloc
000000B8                                     105 @@gen_label0 DS    0H
000000B8 05EF                                106          BALR  14,15
000000BA                                     107 @@gen_label1 DS    0H
000000BA B904 002F                           108          LGR   2,15
                                             109 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             110 * ka\\src\\rd.h", 122, "p"));
000000BE B902 00F2                           111          LTGR  15,2
000000C2 4770 C0A2               000000FA    112          BNZ   @L32
000000C6                                     113 @L31     DS    0H
000000C6 E3F0 C110 0004          00000168    114          LG    15,@lit_751_1
000000CC E3F0 D0B0 0024          000000B0    115          STG   15,176(0,13)
000000D2 E3F0 C108 0004          00000160    116          LG    15,@lit_751_2
000000D8 E3F0 D0B8 0024          000000B8    117          STG   15,184(0,13)
000000DE E548 D0C0 007A          000000C0    118          MVGHI 192(13),122
000000E4 41F0 F020               00000020    119          LA    15,32(0,15)
000000E8 E3F0 D0C8 0024          000000C8    120          STG   15,200(0,13)
000000EE 4110 D0B0               000000B0    121          LA    1,176(0,13)
000000F2 E3F0 C100 0004          00000158    122          LG    15,@lit_751_3 ; __assert
000000F8                                     123 @@gen_label3 DS    0H
000000F8 05EF                                124          BALR  14,15
000000FA                                     125 @@gen_label4 DS    0H
000000FA                                     126 @L32     DS    0H
                                             127 * ***      return p;
000000FA B904 00F2                           128          LGR   15,2
                                             129 * ***   }
                                             130 * * **** Start of Epilogue
                                             131          DCCEPIL
000000FE                                     132+         ds 0h                                                          01-DCCEP
                                             133+* Epilog
000000FE D707 D088 D088 00000088 00000088    134+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000104 E3D0 D080 0004          00000080    135+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000010A E3C0 D090 0004          00000090    136+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000110 E3B0 C018 0004          00000018    137+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000116 E3C0 B010 0021          00000010    138+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000011C E3E0 D008 0004          00000008    139+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000122 EB1C D020 0004          00000020    140+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000128 078E                                141+         bcr 8,14                if same dsab, just return              01-DCCEP
0000012A E3F0 D010 0024          00000010    142+         stg 15,16(0,13)         save return code                       01-DCCEP
00000130 E300 D018 0024          00000018    143+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000136 E3F0 D090 0004          00000090    144+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000013C E3F0 F018 0004          00000018    145+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000142 47F0 F040               00000040    146+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             147+* End of Epilog
                                             148 * * **** End of Epilogue
00000148                                     149          DS    0D
00000148 000000D0                            150 @FRAMESIZE_751 DC F'208'
0000014C 00000000
00000150 0000000000000000                    151 @lit_751_0 DC  AD(calloc)
00000158 0000000000000000                    152 @lit_751_3 DC  AD(__assert)
00000160 000000000000402C                    153 @lit_751_2 DC  AD(@strings@)
00000168 0000000000003F28                    154 @lit_751_1 DC  AD(@DATA)
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             155          DROP  12
                                             156 *
                                             157 *   DSECT for automatic variables in "rd_calloc"
                                             158 *      (FUNCTION #751)
                                             159 *
00000000                00000000 000000A8    160 @AUTO#rd_calloc DSECT
00000000                                     161          DS    XL168
                                             162 *
00000170                00000000 00003F28    163 @CODE    CSECT
                                             164 *
                                             165 *
                                             166 *
                                             167 * ....... start of rd_malloc
00000170                                     168 @LNAME752 DS   0H
00000170 00000009                            169          DC    X'00000009'
00000174 99846D9481939396                    170          DC    C'rd_malloc'
0000017D 00                                  171          DC    X'00'
                                             172 rd_malloc DCCPRLG CINDEX=752,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME752
                                             173          macro
                                             174          dccextrn &m
                                             175          gblc    &$dccext(1000)
                                             176          gbla    &$dccexti
                                             177          lcla    &i
                                             178 &$dccext(&$dccexti+1) setc    '&m'
                                             179 &i       seta    1
                                             180 .loop    aif    (&i gt &$dccexti).around
                                             181          aif    ('&$dccext(&i)' eq '&m').getout
                                             182 &i       seta    &i+1
                                             183          ago     .loop
                                             184 .around  anop
                                             185 &$dccexti seta &$dccexti+1
                                             186          extrn  &m
                                             187 .getout  anop
                                             188          mend
00000180                                     189+$eye0005    ds    0d                                                    02-DCCCA
00000180 C4C3C3                              190+         dc cl3'DCC'                                                    02-DCCCA
00000183 01                                  191+         dc xl1'01' format one                                          02-DCCCA
00000184 00000000                            192+         dc a(0)                                                        02-DCCCA
00000188 00000000000001F2                    193+         dc ad(@PER_752)                                                02-DCCCA
00000190 00000000000000D0                    194+         dc ad(208)                                                     02-DCCCA
00000198 0000000000000000                    195+         dc ad(0)                                                       02-DCCCA
000001A0 0000000000001000                    196+         dc ad(4096)                                                    02-DCCCA
000001A8 20                                  197+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000001A9 03                                  198+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000001AA 03                                  199+         dc al1(3)                                                      02-DCCCA
000001AB 08                                  200+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000001AC 00                                  201+         dc bl.8'00000000'                                              02-DCCCA
000001AD 000000                              202+         dc al3(0)                                                      02-DCCCA
000001B0 0000000000000170                    203+         dc ad(@LNAME752)                                               02-DCCCA
000001B8                                     204+         ds 0d                                                          02-DCCCA
000001B8 0000000000000180                    205+         dc ad($eye0005)                                                02-DCCCA
                                                                                                                           Page    9 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000001C0 0000000000000000                    206+         dc ad(0)                                                       02-DCCCA
000001C8                                     207+         ds    0d                                                       01-DCCPR
000001C8                                     208+rd_malloc ds   0d                                                       01-DCCPR
000001C8                                     209+@REGION_752_1 ds 0h                                                     01-DCCPR
000001C8 EBEC D008 0024          00000008    210+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001CE E3E0 D088 0004          00000088    211+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001D4 E3C0 D090 0004          00000090    212+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001DA B904 002E                           213+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001DE E3B0 C018 0004          00000018    214+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001E4 A7EB 00D0               000000D0    215+         aghi  14,208              increase by frame size               01-DCCPR
000001E8 E3E0 C020 0021          00000020    216+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001EE 4720 B020               00000020    217+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001F2                                     218+@PER_752 ds    0h                                                       01-DCCPR
000001F2 EBDE 2080 0024          00000080    219+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001F8 E3C0 2090 0024          00000090    220+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001FE B904 00D2                           221+         lgr   13,2                set real frame pointer               01-DCCPR
00000202 B904 00CF                           222+         lgr   12,15               set base reg                         01-DCCPR
                        000001C8             223+         using @REGION_752_1,12                                         01-DCCPR
                                             224 * ******* End of Prologue
                                             225 * *
                                             226 * ***      void *p = malloc(sz);
00000206 E3F0 1000 0004          00000000    227          LG    15,0(0,1)   ; sz
0000020C E3F0 D0B0 0024          000000B0    228          STG   15,176(0,13)
00000212 4110 D0B0               000000B0    229          LA    1,176(0,13)
00000216 E3F0 C0F0 0004          000002B8    230          LG    15,@lit_752_5 ; malloc
0000021C                                     231 @@gen_label5 DS    0H
0000021C 05EF                                232          BALR  14,15
0000021E                                     233 @@gen_label6 DS    0H
0000021E B904 002F                           234          LGR   2,15
                                             235 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             236 * ka\\src\\rd.h", 128, "p"));
00000222 B902 00F2                           237          LTGR  15,2
00000226 4770 C09A               00000262    238          BNZ   @L34
0000022A                                     239 @L33     DS    0H
0000022A E3F0 C108 0004          000002D0    240          LG    15,@lit_752_6
00000230 41F0 F00A               0000000A    241          LA    15,10(0,15)
00000234 E3F0 D0B0 0024          000000B0    242          STG   15,176(0,13)
0000023A E3F0 C100 0004          000002C8    243          LG    15,@lit_752_7
00000240 E3F0 D0B8 0024          000000B8    244          STG   15,184(0,13)
00000246 E548 D0C0 0080          000000C0    245          MVGHI 192(13),128
0000024C 41F0 F020               00000020    246          LA    15,32(0,15)
00000250 E3F0 D0C8 0024          000000C8    247          STG   15,200(0,13)
00000256 4110 D0B0               000000B0    248          LA    1,176(0,13)
0000025A E3F0 C0F8 0004          000002C0    249          LG    15,@lit_752_8 ; __assert
00000260                                     250 @@gen_label8 DS    0H
00000260 05EF                                251          BALR  14,15
00000262                                     252 @@gen_label9 DS    0H
00000262                                     253 @L34     DS    0H
                                             254 * ***      return p;
00000262 B904 00F2                           255          LGR   15,2
                                             256 * ***   }
                                             257 * * **** Start of Epilogue
                                                                                                                           Page   10 
  Active Usings: @REGION_752_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             258          DCCEPIL
00000266                                     259+         ds 0h                                                          01-DCCEP
                                             260+* Epilog
00000266 D707 D088 D088 00000088 00000088    261+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000026C E3D0 D080 0004          00000080    262+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000272 E3C0 D090 0004          00000090    263+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000278 E3B0 C018 0004          00000018    264+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000027E E3C0 B010 0021          00000010    265+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000284 E3E0 D008 0004          00000008    266+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000028A EB1C D020 0004          00000020    267+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000290 078E                                268+         bcr 8,14                if same dsab, just return              01-DCCEP
00000292 E3F0 D010 0024          00000010    269+         stg 15,16(0,13)         save return code                       01-DCCEP
00000298 E300 D018 0024          00000018    270+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000029E E3F0 D090 0004          00000090    271+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000002A4 E3F0 F018 0004          00000018    272+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000002AA 47F0 F040               00000040    273+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             274+* End of Epilog
                                             275 * * **** End of Epilogue
000002B0                                     276          DS    0D
000002B0 000000D0                            277 @FRAMESIZE_752 DC F'208'
000002B4 00000000
000002B8 0000000000000000                    278 @lit_752_5 DC  AD(malloc)
000002C0 0000000000000000                    279 @lit_752_8 DC  AD(__assert)
000002C8 000000000000402C                    280 @lit_752_7 DC  AD(@strings@)
000002D0 0000000000003F28                    281 @lit_752_6 DC  AD(@DATA)
                                             282          DROP  12
                                             283 *
                                             284 *   DSECT for automatic variables in "rd_malloc"
                                             285 *      (FUNCTION #752)
                                             286 *
00000000                00000000 000000A8    287 @AUTO#rd_malloc DSECT
00000000                                     288          DS    XL168
                                             289 *
000002D8                00000000 00003F28    290 @CODE    CSECT
                                             291 *
                                             292 *
                                             293 *
                                             294 * ....... start of rd_realloc
000002D8                                     295 @LNAME753 DS   0H
000002D8 0000000A                            296          DC    X'0000000A'
000002DC 99846D9985819393                    297          DC    C'rd_realloc'
000002E6 00                                  298          DC    X'00'
                                             299 rd_realloc DCCPRLG CINDEX=753,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME753
                                             300          macro
                                             301          dccextrn &m
                                             302          gblc    &$dccext(1000)
                                             303          gbla    &$dccexti
                                             304          lcla    &i
                                             305 &$dccext(&$dccexti+1) setc    '&m'
                                             306 &i       seta    1
                                             307 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   11 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             308          aif    ('&$dccext(&i)' eq '&m').getout
                                             309 &i       seta    &i+1
                                             310          ago     .loop
                                             311 .around  anop
                                             312 &$dccexti seta &$dccexti+1
                                             313          extrn  &m
                                             314 .getout  anop
                                             315          mend
000002E8                                     316+$eye0008    ds    0d                                                    02-DCCCA
000002E8 C4C3C3                              317+         dc cl3'DCC'                                                    02-DCCCA
000002EB 01                                  318+         dc xl1'01' format one                                          02-DCCCA
000002EC 00000000                            319+         dc a(0)                                                        02-DCCCA
000002F0 000000000000035A                    320+         dc ad(@PER_753)                                                02-DCCCA
000002F8 00000000000000D0                    321+         dc ad(208)                                                     02-DCCCA
00000300 0000000000000000                    322+         dc ad(0)                                                       02-DCCCA
00000308 0000000000001000                    323+         dc ad(4096)                                                    02-DCCCA
00000310 20                                  324+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000311 03                                  325+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000312 03                                  326+         dc al1(3)                                                      02-DCCCA
00000313 08                                  327+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000314 00                                  328+         dc bl.8'00000000'                                              02-DCCCA
00000315 000000                              329+         dc al3(0)                                                      02-DCCCA
00000318 00000000000002D8                    330+         dc ad(@LNAME753)                                               02-DCCCA
00000320                                     331+         ds 0d                                                          02-DCCCA
00000320 00000000000002E8                    332+         dc ad($eye0008)                                                02-DCCCA
00000328 0000000000000000                    333+         dc ad(0)                                                       02-DCCCA
00000330                                     334+         ds    0d                                                       01-DCCPR
00000330                                     335+rd_realloc ds  0d                                                       01-DCCPR
00000330                                     336+@REGION_753_1 ds 0h                                                     01-DCCPR
00000330 EBEC D008 0024          00000008    337+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000336 E3E0 D088 0004          00000088    338+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000033C E3C0 D090 0004          00000090    339+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000342 B904 002E                           340+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000346 E3B0 C018 0004          00000018    341+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000034C A7EB 00D0               000000D0    342+         aghi  14,208              increase by frame size               01-DCCPR
00000350 E3E0 C020 0021          00000020    343+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000356 4720 B020               00000020    344+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000035A                                     345+@PER_753 ds    0h                                                       01-DCCPR
0000035A EBDE 2080 0024          00000080    346+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000360 E3C0 2090 0024          00000090    347+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000366 B904 00D2                           348+         lgr   13,2                set real frame pointer               01-DCCPR
0000036A B904 00CF                           349+         lgr   12,15               set base reg                         01-DCCPR
                        00000330             350+         using @REGION_753_1,12                                         01-DCCPR
                                             351 * ******* End of Prologue
                                             352 * *
                                             353 * ***      void *p = realloc(ptr, sz);
0000036E E3F0 1000 0004          00000000    354          LG    15,0(0,1)   ; ptr
00000374 E3F0 D0B0 0024          000000B0    355          STG   15,176(0,13)
0000037A E3F0 1008 0004          00000008    356          LG    15,8(0,1)   ; sz
00000380 E3F0 D0B8 0024          000000B8    357          STG   15,184(0,13)
00000386 4110 D0B0               000000B0    358          LA    1,176(0,13)
0000038A E3F0 C100 0004          00000430    359          LG    15,@lit_753_10 ; realloc
                                                                                                                           Page   12 
  Active Usings: @REGION_753_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000390                                     360 @@gen_label10 DS    0H
00000390 05EF                                361          BALR  14,15
00000392                                     362 @@gen_label11 DS    0H
00000392 B904 002F                           363          LGR   2,15
                                             364 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             365 * ka\\src\\rd.h", 134, "p"));
00000396 B902 00F2                           366          LTGR  15,2
0000039A 4770 C0A6               000003D6    367          BNZ   @L36
0000039E                                     368 @L35     DS    0H
0000039E E3F0 C118 0004          00000448    369          LG    15,@lit_753_11
000003A4 41F0 F014               00000014    370          LA    15,20(0,15)
000003A8 E3F0 D0B0 0024          000000B0    371          STG   15,176(0,13)
000003AE E3F0 C110 0004          00000440    372          LG    15,@lit_753_12
000003B4 E3F0 D0B8 0024          000000B8    373          STG   15,184(0,13)
000003BA E548 D0C0 0086          000000C0    374          MVGHI 192(13),134
000003C0 41F0 F020               00000020    375          LA    15,32(0,15)
000003C4 E3F0 D0C8 0024          000000C8    376          STG   15,200(0,13)
000003CA 4110 D0B0               000000B0    377          LA    1,176(0,13)
000003CE E3F0 C108 0004          00000438    378          LG    15,@lit_753_13 ; __assert
000003D4                                     379 @@gen_label13 DS    0H
000003D4 05EF                                380          BALR  14,15
000003D6                                     381 @@gen_label14 DS    0H
000003D6                                     382 @L36     DS    0H
                                             383 * ***      return p;
000003D6 B904 00F2                           384          LGR   15,2
                                             385 * ***   }
                                             386 * * **** Start of Epilogue
                                             387          DCCEPIL
000003DA                                     388+         ds 0h                                                          01-DCCEP
                                             389+* Epilog
000003DA D707 D088 D088 00000088 00000088    390+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000003E0 E3D0 D080 0004          00000080    391+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000003E6 E3C0 D090 0004          00000090    392+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000003EC E3B0 C018 0004          00000018    393+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000003F2 E3C0 B010 0021          00000010    394+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000003F8 E3E0 D008 0004          00000008    395+         lg  14,8(0,13)          load up return address                 01-DCCEP
000003FE EB1C D020 0004          00000020    396+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000404 078E                                397+         bcr 8,14                if same dsab, just return              01-DCCEP
00000406 E3F0 D010 0024          00000010    398+         stg 15,16(0,13)         save return code                       01-DCCEP
0000040C E300 D018 0024          00000018    399+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000412 E3F0 D090 0004          00000090    400+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000418 E3F0 F018 0004          00000018    401+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000041E 47F0 F040               00000040    402+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             403+* End of Epilog
                                             404 * * **** End of Epilogue
00000428                                     405          DS    0D
00000428 000000D0                            406 @FRAMESIZE_753 DC F'208'
0000042C 00000000
00000430 0000000000000000                    407 @lit_753_10 DC AD(realloc)
00000438 0000000000000000                    408 @lit_753_13 DC AD(__assert)
00000440 000000000000402C                    409 @lit_753_12 DC AD(@strings@)
00000448 0000000000003F28                    410 @lit_753_11 DC AD(@DATA)
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             411          DROP  12
                                             412 *
                                             413 *   DSECT for automatic variables in "rd_realloc"
                                             414 *      (FUNCTION #753)
                                             415 *
00000000                00000000 000000A8    416 @AUTO#rd_realloc DSECT
00000000                                     417          DS    XL168
                                             418 *
00000450                00000000 00003F28    419 @CODE    CSECT
                                             420 *
                                             421 *
                                             422 *
                                             423 * ....... start of rd_free
00000450                                     424 @LNAME754 DS   0H
00000450 00000007                            425          DC    X'00000007'
00000454 99846D86998585                      426          DC    C'rd_free'
0000045B 00                                  427          DC    X'00'
                                             428 rd_free  DCCPRLG CINDEX=754,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME754
                                             429          macro
                                             430          dccextrn &m
                                             431          gblc    &$dccext(1000)
                                             432          gbla    &$dccexti
                                             433          lcla    &i
                                             434 &$dccext(&$dccexti+1) setc    '&m'
                                             435 &i       seta    1
                                             436 .loop    aif    (&i gt &$dccexti).around
                                             437          aif    ('&$dccext(&i)' eq '&m').getout
                                             438 &i       seta    &i+1
                                             439          ago     .loop
                                             440 .around  anop
                                             441 &$dccexti seta &$dccexti+1
                                             442          extrn  &m
                                             443 .getout  anop
                                             444          mend
00000460                                     445+$eye0011    ds    0d                                                    02-DCCCA
00000460 C4C3C3                              446+         dc cl3'DCC'                                                    02-DCCCA
00000463 01                                  447+         dc xl1'01' format one                                          02-DCCCA
00000464 00000000                            448+         dc a(0)                                                        02-DCCCA
00000468 00000000000004D2                    449+         dc ad(@PER_754)                                                02-DCCCA
00000470 00000000000000B0                    450+         dc ad(176)                                                     02-DCCCA
00000478 0000000000000000                    451+         dc ad(0)                                                       02-DCCCA
00000480 0000000000001000                    452+         dc ad(4096)                                                    02-DCCCA
00000488 20                                  453+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000489 03                                  454+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000048A 03                                  455+         dc al1(3)                                                      02-DCCCA
0000048B 08                                  456+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000048C 00                                  457+         dc bl.8'00000000'                                              02-DCCCA
0000048D 000000                              458+         dc al3(0)                                                      02-DCCCA
00000490 0000000000000450                    459+         dc ad(@LNAME754)                                               02-DCCCA
00000498                                     460+         ds 0d                                                          02-DCCCA
00000498 0000000000000460                    461+         dc ad($eye0011)                                                02-DCCCA
                                                                                                                           Page   14 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000004A0 0000000000000000                    462+         dc ad(0)                                                       02-DCCCA
000004A8                                     463+         ds    0d                                                       01-DCCPR
000004A8                                     464+rd_free  ds    0d                                                       01-DCCPR
000004A8                                     465+@REGION_754_1 ds 0h                                                     01-DCCPR
000004A8 EBEC D008 0024          00000008    466+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000004AE E3E0 D088 0004          00000088    467+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000004B4 E3C0 D090 0004          00000090    468+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000004BA B904 002E                           469+         lgr   2,14                copy addr of our savearea            01-DCCPR
000004BE E3B0 C018 0004          00000018    470+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000004C4 A7EB 00B0               000000B0    471+         aghi  14,176              increase by frame size               01-DCCPR
000004C8 E3E0 C020 0021          00000020    472+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000004CE 4720 B020               00000020    473+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000004D2                                     474+@PER_754 ds    0h                                                       01-DCCPR
000004D2 EBDE 2080 0024          00000080    475+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000004D8 E3C0 2090 0024          00000090    476+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000004DE B904 00D2                           477+         lgr   13,2                set real frame pointer               01-DCCPR
000004E2 B904 00CF                           478+         lgr   12,15               set base reg                         01-DCCPR
                        000004A8             479+         using @REGION_754_1,12                                         01-DCCPR
                                             480 * ******* End of Prologue
                                             481 * *
                                             482 * ***      free(ptr);
000004E6 E3F0 1000 0004          00000000    483          LG    15,0(0,1)   ; ptr
000004EC E3F0 D0A8 0024          000000A8    484          STG   15,168(0,13)
000004F2 4110 D0A8               000000A8    485          LA    1,168(0,13)
000004F6 E3F0 C0A8 0004          00000550    486          LG    15,@lit_754_15 ; free
000004FC                                     487 @@gen_label15 DS    0H
000004FC 05EF                                488          BALR  14,15
000004FE                                     489 @@gen_label16 DS    0H
                                             490 * ***   }
000004FE                                     491 @ret_lab_754 DS 0H
                                             492 * * **** Start of Epilogue
                                             493          DCCEPIL
000004FE                                     494+         ds 0h                                                          01-DCCEP
                                             495+* Epilog
000004FE D707 D088 D088 00000088 00000088    496+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000504 E3D0 D080 0004          00000080    497+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000050A E3C0 D090 0004          00000090    498+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000510 E3B0 C018 0004          00000018    499+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000516 E3C0 B010 0021          00000010    500+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000051C E3E0 D008 0004          00000008    501+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000522 EB1C D020 0004          00000020    502+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000528 078E                                503+         bcr 8,14                if same dsab, just return              01-DCCEP
0000052A E3F0 D010 0024          00000010    504+         stg 15,16(0,13)         save return code                       01-DCCEP
00000530 E300 D018 0024          00000018    505+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000536 E3F0 D090 0004          00000090    506+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000053C E3F0 F018 0004          00000018    507+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000542 47F0 F040               00000040    508+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             509+* End of Epilog
                                             510 * * **** End of Epilogue
00000548                                     511          DS    0D
00000548 000000B0                            512 @FRAMESIZE_754 DC F'176'
0000054C 00000000
                                                                                                                           Page   15 
  Active Usings: @REGION_754_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000550 0000000000000000                    513 @lit_754_15 DC AD(free)
                                             514          DROP  12
                                             515 *
                                             516 *   DSECT for automatic variables in "rd_free"
                                             517 *      (FUNCTION #754)
                                             518 *
00000000                00000000 000000A8    519 @AUTO#rd_free DSECT
00000000                                     520          DS    XL168
                                             521 *
00000558                00000000 00003F28    522 @CODE    CSECT
                                             523 *
                                             524 *
                                             525 *
                                             526 * ....... start of rd_list_cnt
00000558                                     527 @LNAME778 DS   0H
00000558 0000000B                            528          DC    X'0000000B'
0000055C 99846D9389A2A36D                    529          DC    C'rd_list_cnt'
00000567 00                                  530          DC    X'00'
                                             531 rd_list_cnt DCCPRLG CINDEX=778,BASER=0,FRAME=168,SAVEAREA=NO,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME778
                                             532          macro
                                             533          dccextrn &m
                                             534          gblc    &$dccext(1000)
                                             535          gbla    &$dccexti
                                             536          lcla    &i
                                             537 &$dccext(&$dccexti+1) setc    '&m'
                                             538 &i       seta    1
                                             539 .loop    aif    (&i gt &$dccexti).around
                                             540          aif    ('&$dccext(&i)' eq '&m').getout
                                             541 &i       seta    &i+1
                                             542          ago     .loop
                                             543 .around  anop
                                             544 &$dccexti seta &$dccexti+1
                                             545          extrn  &m
                                             546 .getout  anop
                                             547          mend
00000568                                     548+$eye0014    ds    0d                                                    02-DCCCA
00000568 C4C3C3                              549+         dc cl3'DCC'                                                    02-DCCCA
0000056B 01                                  550+         dc xl1'01' format one                                          02-DCCCA
0000056C 00000000                            551+         dc a(0)                                                        02-DCCCA
00000570 0000000000000000                    552+         dc ad(0)                                                       02-DCCCA
00000578 00000000000000A8                    553+         dc ad(168)                                                     02-DCCCA
00000580 0000000000000000                    554+         dc ad(0)                                                       02-DCCCA
00000588 0000000000001000                    555+         dc ad(4096)                                                    02-DCCCA
00000590 20                                  556+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000591 03                                  557+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000592 03                                  558+         dc al1(3)                                                      02-DCCCA
00000593 08                                  559+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000594 00                                  560+         dc bl.8'00000000'                                              02-DCCCA
00000595 000000                              561+         dc al3(0)                                                      02-DCCCA
00000598 0000000000000558                    562+         dc ad(@LNAME778)                                               02-DCCCA
000005A0                                     563+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   16 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000005A0 0000000000000568                    564+         dc ad($eye0014)                                                02-DCCCA
000005A8 0000000000000000                    565+         dc ad(0)                                                       02-DCCCA
000005B0                                     566+         ds    0d                                                       01-DCCPR
000005B0                                     567+rd_list_cnt ds 0d                                                       01-DCCPR
000005B0                                     568+@REGION_778_1 ds 0h                                                     01-DCCPR
000005B0 EBEC D008 0024          00000008    569+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                             570 * ******* End of Prologue
                                             571 * *
                                             572 * ***           return rl->rl_cnt;
000005B6 E3F0 1000 0004          00000000    573          LG    15,0(0,1)   ; rl
000005BC E3F0 F004 0014          00000004    574          LGF   15,4(0,15)
                                             575 * ***   }
                                             576 * * **** Start of Epilogue
                                             577          DCCEPIL
000005C2                                     578+         ds 0h                                                          01-DCCEP
                                             579+* Epilog
                                             580+* Epilog
000005C2 E3E0 D008 0004          00000008    581+         lg    14,8(,13) restore the reg                                01-DCCEP
000005C8 EB1C D020 0004          00000020    582+         lmg   1,12,32(13)                                              01-DCCEP
000005CE 07FE                                583+         br   14                                                        01-DCCEP
                                             584+* End of Epilog
                                             585 * * **** End of Epilogue
                                             586 *
                                             587 *   DSECT for automatic variables in "rd_list_cnt"
                                             588 *      (FUNCTION #778)
                                             589 *
00000000                00000000 000000A8    590 @AUTO#rd_list_cnt DSECT
00000000                                     591          DS    XL168
                                             592 *
000005D0                00000000 00003F28    593 @CODE    CSECT
                                             594 *
                                             595 *
                                             596 *
                                             597 * ....... start of rd_list_dump
                                             598 rd_list_dump ALIAS X'99846D9389A2A36D84A49497'
000005D0                                     599 @LNAME793 DS   0H
000005D0 0000000C                            600          DC    X'0000000C'
000005D4 99846D9389A2A36D                    601          DC    C'rd_list_dump'
000005E0 00                                  602          DC    X'00'
                                             603 rd_list_dump DCCPRLG CINDEX=793,BASER=12,FRAME=224,ENTRY=YES,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME793
                                             604          macro
                                             605          dccextrn &m
                                             606          gblc    &$dccext(1000)
                                             607          gbla    &$dccexti
                                             608          lcla    &i
                                             609 &$dccext(&$dccexti+1) setc    '&m'
                                             610 &i       seta    1
                                             611 .loop    aif    (&i gt &$dccexti).around
                                             612          aif    ('&$dccext(&i)' eq '&m').getout
                                             613 &i       seta    &i+1
                                             614          ago     .loop
                                                                                                                           Page   17 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             615 .around  anop
                                             616 &$dccexti seta &$dccexti+1
                                             617          extrn  &m
                                             618 .getout  anop
                                             619          mend
000005E8                                     620+$eye0017    ds    0d                                                    02-DCCCA
000005E8 C4C3C3                              621+         dc cl3'DCC'                                                    02-DCCCA
000005EB 01                                  622+         dc xl1'01' format one                                          02-DCCCA
000005EC 00000000                            623+         dc a(0)                                                        02-DCCCA
000005F0 000000000000065A                    624+         dc ad(@PER_793)                                                02-DCCCA
000005F8 00000000000000E0                    625+         dc ad(224)                                                     02-DCCCA
00000600 0000000000000000                    626+         dc ad(0)                                                       02-DCCCA
00000608 0000000000001000                    627+         dc ad(4096)                                                    02-DCCCA
00000610 20                                  628+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000611 03                                  629+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000612 03                                  630+         dc al1(3)                                                      02-DCCCA
00000613 08                                  631+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000614 00                                  632+         dc bl.8'00000000'                                              02-DCCCA
00000615 000000                              633+         dc al3(0)                                                      02-DCCCA
00000618 00000000000005D0                    634+         dc ad(@LNAME793)                                               02-DCCCA
00000620                                     635+         ds 0d                                                          02-DCCCA
00000620 00000000000005E8                    636+         dc ad($eye0017)                                                02-DCCCA
00000628 0000000000000000                    637+         dc ad(0)                                                       02-DCCCA
00000630                                     638+         ds    0d                                                       01-DCCPR
                                             639+         entry rd_list_dump                                             01-DCCPR
00000630                                     640+rd_list_dump ds 0d                                                      01-DCCPR
00000630                                     641+@REGION_793_1 ds 0h                                                     01-DCCPR
00000630 EBEC D008 0024          00000008    642+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000636 E3E0 D088 0004          00000088    643+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000063C E3C0 D090 0004          00000090    644+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000642 B904 002E                           645+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000646 E3B0 C018 0004          00000018    646+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000064C A7EB 00E0               000000E0    647+         aghi  14,224              increase by frame size               01-DCCPR
00000650 E3E0 C020 0021          00000020    648+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000656 4720 B020               00000020    649+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000065A                                     650+@PER_793 ds    0h                                                       01-DCCPR
0000065A EBDE 2080 0024          00000080    651+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000660 E3C0 2090 0024          00000090    652+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000666 B904 00D2                           653+         lgr   13,2                set real frame pointer               01-DCCPR
0000066A B904 00CF                           654+         lgr   12,15               set base reg                         01-DCCPR
                        00000630             655+         using @REGION_793_1,12                                         01-DCCPR
                                             656 * ******* End of Prologue
                                             657 * *
0000066E E330 1008 0004          00000008    658          LG    3,8(0,1)    ; rl
                                             659 * ***           int i;
                                             660 * ***           printf("%s: (rd_list_t*)%p cnt %d, size %d, elems %p:\\
                                             661 * n",
                                             662 * ***                  what, rl, rl->rl_cnt, rl->rl_size, rl->rl_elems\
                                             663 * );
00000674 E3F0 C0B0 0004          000006E0    664          LG    15,@lit_793_17
0000067A 41F0 F022               00000022    665          LA    15,34(0,15)
0000067E E3F0 D0B0 0024          000000B0    666          STG   15,176(0,13)
                                                                                                                           Page   18 
  Active Usings: @REGION_793_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000684 E3F0 1000 0004          00000000    667          LG    15,0(0,1)   ; what
0000068A E3F0 D0B8 0024          000000B8    668          STG   15,184(0,13)
00000690 E330 D0C0 0024          000000C0    669          STG   3,192(0,13)
00000696 E3F0 3004 0014          00000004    670          LGF   15,4(0,3)
0000069C E3F0 D0C8 0024          000000C8    671          STG   15,200(0,13)
000006A2 E3F0 3000 0014          00000000    672          LGF   15,0(0,3)
000006A8 E3F0 D0D0 0024          000000D0    673          STG   15,208(0,13)
000006AE E3F0 3008 0004          00000008    674          LG    15,8(0,3)
000006B4 E3F0 D0D8 0024          000000D8    675          STG   15,216(0,13)
000006BA 4110 D0B0               000000B0    676          LA    1,176(0,13)
000006BE E3F0 C0A8 0004          000006D8    677          LG    15,@lit_793_18 ; printf
000006C4                                     678 @@gen_label17 DS    0H
000006C4 05EF                                679          BALR  14,15
000006C6                                     680 @@gen_label18 DS    0H
                                             681 * ***           for (i = 0 ; i < rl->rl_cnt ; i++)
000006C6 A728 0000               00000000    682          LHI   2,0         ; 0
000006CA 47F0 C118               00000748    683          B     @L45
000006D0                                     684          DS    0D
000006D0 000000E0                            685 @FRAMESIZE_793 DC F'224'
000006D4 00000000
000006D8 0000000000000000                    686 @lit_793_18 DC AD(printf)
000006E0 000000000000402C                    687 @lit_793_17 DC AD(@strings@)
000006E8                                     688 @L44     DS    0H
                                             689 * ***                   printf("  #%d: %p at &%p\n", i,
                                             690 * ***                          rl->rl_elems[i], &rl->rl_elems[i]);
000006E8 E3F0 C0B0 0004          000006E0    691          LG    15,@lit_793_17
000006EE 41F0 F052               00000052    692          LA    15,82(0,15)
000006F2 E3F0 D0B0 0024          000000B0    693          STG   15,176(0,13)
000006F8 B914 00F2                           694          LGFR  15,2
000006FC E3F0 D0B8 0024          000000B8    695          STG   15,184(0,13)
00000702 B914 00F2                           696          LGFR  15,2
00000706 E310 3008 0004          00000008    697          LG    1,8(0,3)    ; offset of rl_elems in rd_list_s
0000070C EBFF 0003 000D          00000003    698          SLLG  15,15,3(0)  ; *0x8
00000712 E3FF 1000 0004          00000000    699          LG    15,0(15,1)
00000718 E3F0 D0C0 0024          000000C0    700          STG   15,192(0,13)
0000071E B914 00F2                           701          LGFR  15,2
00000722 E310 3008 0004          00000008    702          LG    1,8(0,3)    ; offset of rl_elems in rd_list_s
00000728 EBFF 0003 000D          00000003    703          SLLG  15,15,3(0)  ; *0x8
0000072E 41FF 1000               00000000    704          LA    15,0(15,1)
00000732 E3F0 D0C8 0024          000000C8    705          STG   15,200(0,13)
00000738 4110 D0B0               000000B0    706          LA    1,176(0,13)
0000073C E3F0 C0A8 0004          000006D8    707          LG    15,@lit_793_18 ; printf
00000742                                     708 @@gen_label19 DS    0H
00000742 05EF                                709          BALR  14,15
00000744                                     710 @@gen_label20 DS    0H
00000744 A72A 0001               00000001    711          AHI   2,1
00000748                                     712 @L45     DS    0H
00000748 5920 3004               00000004    713          C     2,4(0,3)
0000074C 4740 C0B8               000006E8    714          BL    @L44
                                             715 * ***   }
00000750                                     716 @ret_lab_793 DS 0H
                                             717 * * **** Start of Epilogue
                                                                                                                           Page   19 
  Active Usings: @REGION_793_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             718          DCCEPIL
00000750                                     719+         ds 0h                                                          01-DCCEP
                                             720+* Epilog
00000750 D707 D088 D088 00000088 00000088    721+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000756 E3D0 D080 0004          00000080    722+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000075C E3C0 D090 0004          00000090    723+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000762 E3B0 C018 0004          00000018    724+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000768 E3C0 B010 0021          00000010    725+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000076E E3E0 D008 0004          00000008    726+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000774 EB1C D020 0004          00000020    727+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000077A 078E                                728+         bcr 8,14                if same dsab, just return              01-DCCEP
0000077C E3F0 D010 0024          00000010    729+         stg 15,16(0,13)         save return code                       01-DCCEP
00000782 E300 D018 0024          00000018    730+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000788 E3F0 D090 0004          00000090    731+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000078E E3F0 F018 0004          00000018    732+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000794 47F0 F040               00000040    733+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             734+* End of Epilog
                                             735 * * **** End of Epilogue
                                             736          DROP  12
                                             737 *
                                             738 *   DSECT for automatic variables in "rd_list_dump"
                                             739 *      (FUNCTION #793)
                                             740 *
00000000                00000000 000000AC    741 @AUTO#rd_list_dump DSECT
00000000                                     742          DS    XL168
000000A8                                     743 rd_list_dump#i#0 DS 1F     ; i
                                             744 *
00000798                00000000 00003F28    745 @CODE    CSECT
                                             746 *
                                             747 *
                                             748 *
                                             749 * ....... start of rd_list_grow
                                             750 rd_list_grow ALIAS X'99846D9389A2A36D879996A6'
00000798                                     751 @LNAME762 DS   0H
00000798 0000000C                            752          DC    X'0000000C'
0000079C 99846D9389A2A36D                    753          DC    C'rd_list_grow'
000007A8 00                                  754          DC    X'00'
                                             755 rd_list_grow DCCPRLG CINDEX=762,BASER=12,FRAME=200,ENTRY=YES,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME762
                                             756          macro
                                             757          dccextrn &m
                                             758          gblc    &$dccext(1000)
                                             759          gbla    &$dccexti
                                             760          lcla    &i
                                             761 &$dccext(&$dccexti+1) setc    '&m'
                                             762 &i       seta    1
                                             763 .loop    aif    (&i gt &$dccexti).around
                                             764          aif    ('&$dccext(&i)' eq '&m').getout
                                             765 &i       seta    &i+1
                                             766          ago     .loop
                                             767 .around  anop
                                             768 &$dccexti seta &$dccexti+1
                                                                                                                           Page   20 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             769          extrn  &m
                                             770 .getout  anop
                                             771          mend
000007B0                                     772+$eye0020    ds    0d                                                    02-DCCCA
000007B0 C4C3C3                              773+         dc cl3'DCC'                                                    02-DCCCA
000007B3 01                                  774+         dc xl1'01' format one                                          02-DCCCA
000007B4 00000000                            775+         dc a(0)                                                        02-DCCCA
000007B8 0000000000000822                    776+         dc ad(@PER_762)                                                02-DCCCA
000007C0 00000000000000C8                    777+         dc ad(200)                                                     02-DCCCA
000007C8 0000000000000000                    778+         dc ad(0)                                                       02-DCCCA
000007D0 0000000000001000                    779+         dc ad(4096)                                                    02-DCCCA
000007D8 20                                  780+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000007D9 03                                  781+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000007DA 03                                  782+         dc al1(3)                                                      02-DCCCA
000007DB 08                                  783+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000007DC 00                                  784+         dc bl.8'00000000'                                              02-DCCCA
000007DD 000000                              785+         dc al3(0)                                                      02-DCCCA
000007E0 0000000000000798                    786+         dc ad(@LNAME762)                                               02-DCCCA
000007E8                                     787+         ds 0d                                                          02-DCCCA
000007E8 00000000000007B0                    788+         dc ad($eye0020)                                                02-DCCCA
000007F0 0000000000000000                    789+         dc ad(0)                                                       02-DCCCA
000007F8                                     790+         ds    0d                                                       01-DCCPR
                                             791+         entry rd_list_grow                                             01-DCCPR
000007F8                                     792+rd_list_grow ds 0d                                                      01-DCCPR
000007F8                                     793+@REGION_762_1 ds 0h                                                     01-DCCPR
000007F8 EBEC D008 0024          00000008    794+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000007FE E3E0 D088 0004          00000088    795+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000804 E3C0 D090 0004          00000090    796+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000080A B904 002E                           797+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000080E E3B0 C018 0004          00000018    798+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000814 A7EB 00C8               000000C8    799+         aghi  14,200              increase by frame size               01-DCCPR
00000818 E3E0 C020 0021          00000020    800+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000081E 4720 B020               00000020    801+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000822                                     802+@PER_762 ds    0h                                                       01-DCCPR
00000822 EBDE 2080 0024          00000080    803+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000828 E3C0 2090 0024          00000090    804+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000082E B904 00D2                           805+         lgr   13,2                set real frame pointer               01-DCCPR
00000832 B904 00CF                           806+         lgr   12,15               set base reg                         01-DCCPR
                        000007F8             807+         using @REGION_762_1,12                                         01-DCCPR
00000836 B904 0031                           808          LGR   3,1         ; ptr to parm area
                                             809 * ******* End of Prologue
                                             810 * *
                                             811 * ***           ((!(rl->rl_flags & 0x4)) ? (void)0 : __assert(__func__\
                                             812 * , "C:\\asgkafka\\librdkafka\\src\\rdlist.c", 43, "!(rl->rl_flags & 0\
                                             813 * x4)"));
0000083A E320 3000 0004          00000000    814          LG    2,0(0,3)    ; rl
00000840 9104 201B      0000001B 00000004    815          TM    27(2),4
00000844 4780 C08C               00000884    816          BZ    @L49
00000848                                     817 @L48     DS    0H
00000848 E3F0 C138 0004          00000930    818          LG    15,@lit_762_23
0000084E 41F0 F046               00000046    819          LA    15,70(0,15)
00000852 E3F0 D0A8 0024          000000A8    820          STG   15,168(0,13)
                                                                                                                           Page   21 
  Active Usings: @REGION_762_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000858 E3F0 C130 0004          00000928    821          LG    15,@lit_762_24
0000085E 4110 F064               00000064    822          LA    1,100(0,15)
00000862 E310 D0B0 0024          000000B0    823          STG   1,176(0,13)
00000868 E548 D0B8 002B          000000B8    824          MVGHI 184(13),43
0000086E 41F0 F088               00000088    825          LA    15,136(0,15)
00000872 E3F0 D0C0 0024          000000C0    826          STG   15,192(0,13)
00000878 4110 D0A8               000000A8    827          LA    1,168(0,13)
0000087C E3F0 C128 0004          00000920    828          LG    15,@lit_762_25 ; __assert
00000882                                     829 @@gen_label23 DS    0H
00000882 05EF                                830          BALR  14,15
00000884                                     831 @@gen_label24 DS    0H
00000884                                     832 @L49     DS    0H
                                             833 * ***           rl->rl_size += (int)size;
00000884 58F0 2000               00000000    834          L     15,0(0,2)
00000888 5AF0 300C               0000000C    835          A     15,12(0,3)
0000088C 50F0 2000               00000000    836          ST    15,0(0,2)
                                             837 * ***           if (((rl->rl_size == 0)))
00000890 E55C 2000 0000          00000000    838          CHSI  0(2),0
00000896 4780 C0D2               000008CA    839          BE    @ret_lab_762
                                             840 * ***                   return;
0000089A                                     841 @L50     DS    0H
                                             842 * ***           rl->rl_elems = rd_realloc(rl->rl_elems,
                                             843 * ***                                     sizeof(*rl->rl_elems) * rl->\
                                             844 * rl_size);
0000089A E3F0 2008 0004          00000008    845          LG    15,8(0,2)
000008A0 E3F0 D0A8 0024          000000A8    846          STG   15,168(0,13)
000008A6 E3F0 2000 0014          00000000    847          LGF   15,0(0,2)
000008AC EBFF 0003 000D          00000003    848          SLLG  15,15,3(0)  ; *0x8
000008B2 E3F0 D0B0 0024          000000B0    849          STG   15,176(0,13)
000008B8 4110 D0A8               000000A8    850          LA    1,168(0,13)
000008BC E3F0 C140 0004          00000938    851          LG    15,@lit_762_26 ; rd_realloc
000008C2                                     852 @@gen_label26 DS    0H
000008C2 05EF                                853          BALR  14,15
000008C4                                     854 @@gen_label27 DS    0H
000008C4 E3F0 2008 0024          00000008    855          STG   15,8(0,2)
                                             856 * ***   }
000008CA                                     857 @ret_lab_762 DS 0H
                                             858 * * **** Start of Epilogue
                                             859          DCCEPIL
000008CA                                     860+         ds 0h                                                          01-DCCEP
                                             861+* Epilog
000008CA D707 D088 D088 00000088 00000088    862+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000008D0 E3D0 D080 0004          00000080    863+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000008D6 E3C0 D090 0004          00000090    864+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000008DC E3B0 C018 0004          00000018    865+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000008E2 E3C0 B010 0021          00000010    866+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000008E8 E3E0 D008 0004          00000008    867+         lg  14,8(0,13)          load up return address                 01-DCCEP
000008EE EB1C D020 0004          00000020    868+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000008F4 078E                                869+         bcr 8,14                if same dsab, just return              01-DCCEP
000008F6 E3F0 D010 0024          00000010    870+         stg 15,16(0,13)         save return code                       01-DCCEP
000008FC E300 D018 0024          00000018    871+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000902 E3F0 D090 0004          00000090    872+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
                                                                                                                           Page   22 
  Active Usings: @REGION_762_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000908 E3F0 F018 0004          00000018    873+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000090E 47F0 F040               00000040    874+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             875+* End of Epilog
                                             876 * * **** End of Epilogue
00000918                                     877          DS    0D
00000918 000000C8                            878 @FRAMESIZE_762 DC F'200'
0000091C 00000000
00000920 0000000000000000                    879 @lit_762_25 DC AD(__assert)
00000928 000000000000402C                    880 @lit_762_24 DC AD(@strings@)
00000930 0000000000003F28                    881 @lit_762_23 DC AD(@DATA)
00000938 0000000000000330                    882 @lit_762_26 DC AD(rd_realloc)
                                             883          DROP  12
                                             884 *
                                             885 *   DSECT for automatic variables in "rd_list_grow"
                                             886 *      (FUNCTION #762)
                                             887 *
00000000                00000000 000000A8    888 @AUTO#rd_list_grow DSECT
00000000                                     889          DS    XL168
                                             890 *
00000940                00000000 00003F28    891 @CODE    CSECT
                                             892 *
                                             893 *
                                             894 *
                                             895 * ....... start of rd_list_init
                                             896 rd_list_init ALIAS X'99846D9389A2A36D899589A3'
00000940                                     897 @LNAME759 DS   0H
00000940 0000000C                            898          DC    X'0000000C'
00000944 99846D9389A2A36D                    899          DC    C'rd_list_init'
00000950 00                                  900          DC    X'00'
                                             901 rd_list_init DCCPRLG CINDEX=759,BASER=12,FRAME=184,ENTRY=YES,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME759
                                             902          macro
                                             903          dccextrn &m
                                             904          gblc    &$dccext(1000)
                                             905          gbla    &$dccexti
                                             906          lcla    &i
                                             907 &$dccext(&$dccexti+1) setc    '&m'
                                             908 &i       seta    1
                                             909 .loop    aif    (&i gt &$dccexti).around
                                             910          aif    ('&$dccext(&i)' eq '&m').getout
                                             911 &i       seta    &i+1
                                             912          ago     .loop
                                             913 .around  anop
                                             914 &$dccexti seta &$dccexti+1
                                             915          extrn  &m
                                             916 .getout  anop
                                             917          mend
00000958                                     918+$eye0023    ds    0d                                                    02-DCCCA
00000958 C4C3C3                              919+         dc cl3'DCC'                                                    02-DCCCA
0000095B 01                                  920+         dc xl1'01' format one                                          02-DCCCA
0000095C 00000000                            921+         dc a(0)                                                        02-DCCCA
00000960 00000000000009CA                    922+         dc ad(@PER_759)                                                02-DCCCA
                                                                                                                           Page   23 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000968 00000000000000B8                    923+         dc ad(184)                                                     02-DCCCA
00000970 0000000000000000                    924+         dc ad(0)                                                       02-DCCCA
00000978 0000000000001000                    925+         dc ad(4096)                                                    02-DCCCA
00000980 20                                  926+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000981 03                                  927+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000982 03                                  928+         dc al1(3)                                                      02-DCCCA
00000983 08                                  929+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000984 00                                  930+         dc bl.8'00000000'                                              02-DCCCA
00000985 000000                              931+         dc al3(0)                                                      02-DCCCA
00000988 0000000000000940                    932+         dc ad(@LNAME759)                                               02-DCCCA
00000990                                     933+         ds 0d                                                          02-DCCCA
00000990 0000000000000958                    934+         dc ad($eye0023)                                                02-DCCCA
00000998 0000000000000000                    935+         dc ad(0)                                                       02-DCCCA
000009A0                                     936+         ds    0d                                                       01-DCCPR
                                             937+         entry rd_list_init                                             01-DCCPR
000009A0                                     938+rd_list_init ds 0d                                                      01-DCCPR
000009A0                                     939+@REGION_759_1 ds 0h                                                     01-DCCPR
000009A0 EBEC D008 0024          00000008    940+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000009A6 E3E0 D088 0004          00000088    941+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000009AC E3C0 D090 0004          00000090    942+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000009B2 B904 002E                           943+         lgr   2,14                copy addr of our savearea            01-DCCPR
000009B6 E3B0 C018 0004          00000018    944+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000009BC A7EB 00B8               000000B8    945+         aghi  14,184              increase by frame size               01-DCCPR
000009C0 E3E0 C020 0021          00000020    946+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000009C6 4720 B020               00000020    947+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000009CA                                     948+@PER_759 ds    0h                                                       01-DCCPR
000009CA EBDE 2080 0024          00000080    949+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000009D0 E3C0 2090 0024          00000090    950+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000009D6 B904 00D2                           951+         lgr   13,2                set real frame pointer               01-DCCPR
000009DA B904 00CF                           952+         lgr   12,15               set base reg                         01-DCCPR
                        000009A0             953+         using @REGION_759_1,12                                         01-DCCPR
000009DE B904 0031                           954          LGR   3,1         ; ptr to parm area
                                             955 * ******* End of Prologue
                                             956 * *
                                             957 * ***           __memset(rl,0,sizeof(*rl));
000009E2 E320 3000 0004          00000000    958          LG    2,0(0,3)    ; rl
                                             959 * setting 40 bytes to 0x00
000009E8 D727 2000 2000 00000000 00000000    960          XC    0(40,2),0(2)
                                             961 * ***
                                             962 * ***      if (initial_size > 0)
000009EE E55C 300C 0000          0000000C    963          CHSI  12(3),0
000009F4 47D0 C076               00000A16    964          BNH   @L51
                                             965 * ***         rd_list_grow(rl, initial_size);
000009F8 E320 D0A8 0024          000000A8    966          STG   2,168(0,13)
000009FE E3F0 300C 0014          0000000C    967          LGF   15,12(0,3)  ; initial_size
00000A04 E3F0 D0B0 0024          000000B0    968          STG   15,176(0,13)
00000A0A 4110 D0A8               000000A8    969          LA    1,168(0,13)
00000A0E E3F0 C0D8 0004          00000A78    970          LG    15,@lit_759_28 ; rd_list_grow
00000A14                                     971 @@gen_label29 DS    0H
00000A14 05EF                                972          BALR  14,15
00000A16                                     973 @@gen_label30 DS    0H
00000A16                                     974 @L51     DS    0H
                                                                                                                           Page   24 
  Active Usings: @REGION_759_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             975 * ***
                                             976 * ***           rl->rl_free_cb = free_cb;
00000A16 E3F0 3010 0004          00000010    977          LG    15,16(0,3)  ; free_cb
00000A1C E3F0 2010 0024          00000010    978          STG   15,16(0,2)  ; offset of rl_free_cb in rd_list_s
                                             979 * ***
                                             980 * ***           return rl;
00000A22 B904 00F2                           981          LGR   15,2
                                             982 * ***   }
                                             983 * * **** Start of Epilogue
                                             984          DCCEPIL
00000A26                                     985+         ds 0h                                                          01-DCCEP
                                             986+* Epilog
00000A26 D707 D088 D088 00000088 00000088    987+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000A2C E3D0 D080 0004          00000080    988+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000A32 E3C0 D090 0004          00000090    989+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000A38 E3B0 C018 0004          00000018    990+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000A3E E3C0 B010 0021          00000010    991+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000A44 E3E0 D008 0004          00000008    992+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000A4A EB1C D020 0004          00000020    993+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000A50 078E                                994+         bcr 8,14                if same dsab, just return              01-DCCEP
00000A52 E3F0 D010 0024          00000010    995+         stg 15,16(0,13)         save return code                       01-DCCEP
00000A58 E300 D018 0024          00000018    996+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000A5E E3F0 D090 0004          00000090    997+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000A64 E3F0 F018 0004          00000018    998+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000A6A 47F0 F040               00000040    999+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1000+* End of Epilog
                                            1001 * * **** End of Epilogue
00000A70                                    1002          DS    0D
00000A70 000000B8                           1003 @FRAMESIZE_759 DC F'184'
00000A74 00000000
00000A78 00000000000007F8                   1004 @lit_759_28 DC AD(rd_list_grow)
                                            1005          DROP  12
                                            1006 *
                                            1007 *   DSECT for automatic variables in "rd_list_init"
                                            1008 *      (FUNCTION #759)
                                            1009 *
00000000                00000000 000000A8   1010 @AUTO#rd_list_init DSECT
00000000                                    1011          DS    XL168
                                            1012 *
00000A80                00000000 00003F28   1013 @CODE    CSECT
                                            1014 *
                                            1015 *
                                            1016 *
                                            1017 * ....... start of rd_list_init_copy
                                            1018 rd_list_init_copy ALIAS X'99846D9389A2A36D899589A36D839697A8'
00000A80                                    1019 @LNAME760 DS   0H
00000A80 00000011                           1020          DC    X'00000011'
00000A84 99846D9389A2A36D                   1021          DC    C'rd_list_init_copy'
00000A95 00                                 1022          DC    X'00'
                                            1023 rd_list_init_copy DCCPRLG CINDEX=760,BASER=12,FRAME=200,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME760
                                            1024          macro
                                                                                                                           Page   25 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1025          dccextrn &m
                                            1026          gblc    &$dccext(1000)
                                            1027          gbla    &$dccexti
                                            1028          lcla    &i
                                            1029 &$dccext(&$dccexti+1) setc    '&m'
                                            1030 &i       seta    1
                                            1031 .loop    aif    (&i gt &$dccexti).around
                                            1032          aif    ('&$dccext(&i)' eq '&m').getout
                                            1033 &i       seta    &i+1
                                            1034          ago     .loop
                                            1035 .around  anop
                                            1036 &$dccexti seta &$dccexti+1
                                            1037          extrn  &m
                                            1038 .getout  anop
                                            1039          mend
00000A98                                    1040+$eye0026    ds    0d                                                    02-DCCCA
00000A98 C4C3C3                             1041+         dc cl3'DCC'                                                    02-DCCCA
00000A9B 01                                 1042+         dc xl1'01' format one                                          02-DCCCA
00000A9C 00000000                           1043+         dc a(0)                                                        02-DCCCA
00000AA0 0000000000000B0A                   1044+         dc ad(@PER_760)                                                02-DCCCA
00000AA8 00000000000000C8                   1045+         dc ad(200)                                                     02-DCCCA
00000AB0 0000000000000000                   1046+         dc ad(0)                                                       02-DCCCA
00000AB8 0000000000001000                   1047+         dc ad(4096)                                                    02-DCCCA
00000AC0 20                                 1048+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000AC1 03                                 1049+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000AC2 03                                 1050+         dc al1(3)                                                      02-DCCCA
00000AC3 08                                 1051+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000AC4 00                                 1052+         dc bl.8'00000000'                                              02-DCCCA
00000AC5 000000                             1053+         dc al3(0)                                                      02-DCCCA
00000AC8 0000000000000A80                   1054+         dc ad(@LNAME760)                                               02-DCCCA
00000AD0                                    1055+         ds 0d                                                          02-DCCCA
00000AD0 0000000000000A98                   1056+         dc ad($eye0026)                                                02-DCCCA
00000AD8 0000000000000000                   1057+         dc ad(0)                                                       02-DCCCA
00000AE0                                    1058+         ds    0d                                                       01-DCCPR
                                            1059+         entry rd_list_init_copy                                        01-DCCPR
00000AE0                                    1060+rd_list_init_copy ds 0d                                                 01-DCCPR
00000AE0                                    1061+@REGION_760_1 ds 0h                                                     01-DCCPR
00000AE0 EBEC D008 0024          00000008   1062+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000AE6 E3E0 D088 0004          00000088   1063+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000AEC E3C0 D090 0004          00000090   1064+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000AF2 B904 002E                          1065+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000AF6 E3B0 C018 0004          00000018   1066+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000AFC A7EB 00C8               000000C8   1067+         aghi  14,200              increase by frame size               01-DCCPR
00000B00 E3E0 C020 0021          00000020   1068+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000B06 4720 B020               00000020   1069+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000B0A                                    1070+@PER_760 ds    0h                                                       01-DCCPR
00000B0A EBDE 2080 0024          00000080   1071+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000B10 E3C0 2090 0024          00000090   1072+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000B16 B904 00D2                          1073+         lgr   13,2                set real frame pointer               01-DCCPR
00000B1A B904 00CF                          1074+         lgr   12,15               set base reg                         01-DCCPR
                        00000AE0            1075+         using @REGION_760_1,12                                         01-DCCPR
                                            1076 * ******* End of Prologue
                                                                                                                           Page   26 
  Active Usings: @REGION_760_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1077 * *
00000B1E EB23 1000 0004          00000000   1078          LMG   2,3,0(1)    ; dst
                                            1079 * ***
                                            1080 * ***           if (src->rl_flags & 0x4) {
00000B24 9104 301B      0000001B 00000004   1081          TM    27(3),4
00000B28 4780 C0C8               00000BA8   1082          BZ    @L52
                                            1083 * ***
                                            1084 * ***                   rd_list_init(dst, 0, src->rl_free_cb);
00000B2C E320 D0A8 0024          000000A8   1085          STG   2,168(0,13)
00000B32 D707 D0B0 D0B0 000000B0 000000B0   1086          XC    176(8,13),176(13)
00000B38 E3F0 3010 0004          00000010   1087          LG    15,16(0,3)
00000B3E E3F0 D0B8 0024          000000B8   1088          STG   15,184(0,13)
00000B44 4110 D0A8               000000A8   1089          LA    1,168(0,13)
00000B48 E3F0 C0B0 0004          00000B90   1090          LG    15,@lit_760_30 ; rd_list_init
00000B4E                                    1091 @@gen_label32 DS    0H
00000B4E 05EF                               1092          BALR  14,15
00000B50                                    1093 @@gen_label33 DS    0H
                                            1094 * ***
                                            1095 * ***                   rd_list_prealloc_elems(dst, src->rl_elemsize, \
                                            1096 * src->rl_size,
                                            1097 * ***                                          1);
00000B50 E320 D0A8 0024          000000A8   1098          STG   2,168(0,13)
00000B56 E3F0 301C 0014          0000001C   1099          LGF   15,28(0,3)
00000B5C E3F0 D0B0 0024          000000B0   1100          STG   15,176(0,13)
00000B62 E3F0 3000 0014          00000000   1101          LGF   15,0(0,3)
00000B68 E3F0 D0B8 0024          000000B8   1102          STG   15,184(0,13)
00000B6E E548 D0C0 0001          000000C0   1103          MVGHI 192(13),1
00000B74 4110 D0A8               000000A8   1104          LA    1,168(0,13)
00000B78 E3F0 C0B8 0004          00000B98   1105          LG    15,@lit_760_31 ; rd_list_prealloc_elems
00000B7E                                    1106 @@gen_label34 DS    0H
00000B7E 05EF                               1107          BALR  14,15
00000B80                                    1108 @@gen_label35 DS    0H
                                            1109 * ***           } else {
00000B80 47F0 C102               00000BE2   1110          B     @L53
00000B88                                    1111          DS    0D
00000B88 000000C8                           1112 @FRAMESIZE_760 DC F'200'
00000B8C 00000000
00000B90 00000000000009A0                   1113 @lit_760_30 DC AD(rd_list_init)
00000B98 0000000000000ED8                   1114 @lit_760_31 DC AD(rd_list_prealloc_elems)
00000BA0 00000000000005B0                   1115 @lit_760_32 DC AD(rd_list_cnt)
00000BA8                                    1116 @L52     DS    0H
                                            1117 * ***
                                            1118 * ***                   rd_list_init(dst, rd_list_cnt(src), src->rl_fr\
                                            1119 * ee_cb);
00000BA8 E330 D0A8 0024          000000A8   1120          STG   3,168(0,13)
00000BAE 4110 D0A8               000000A8   1121          LA    1,168(0,13)
00000BB2 E3F0 C0C0 0004          00000BA0   1122          LG    15,@lit_760_32 ; rd_list_cnt
00000BB8                                    1123 @@gen_label36 DS    0H
00000BB8 05EF                               1124          BALR  14,15
00000BBA                                    1125 @@gen_label37 DS    0H
00000BBA E320 D0A8 0024          000000A8   1126          STG   2,168(0,13)
00000BC0 B914 00FF                          1127          LGFR  15,15
                                                                                                                           Page   27 
  Active Usings: @REGION_760_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000BC4 E3F0 D0B0 0024          000000B0   1128          STG   15,176(0,13)
00000BCA E3F0 3010 0004          00000010   1129          LG    15,16(0,3)
00000BD0 E3F0 D0B8 0024          000000B8   1130          STG   15,184(0,13)
00000BD6 4110 D0A8               000000A8   1131          LA    1,168(0,13)
00000BDA E3F0 C0B0 0004          00000B90   1132          LG    15,@lit_760_30 ; rd_list_init
00000BE0                                    1133 @@gen_label38 DS    0H
00000BE0 05EF                               1134          BALR  14,15
00000BE2                                    1135 @@gen_label39 DS    0H
                                            1136 * ***
                                            1137 * ***           }
00000BE2                                    1138 @L53     DS    0H
                                            1139 * ***
                                            1140 * ***           return dst;
00000BE2 B904 00F2                          1141          LGR   15,2
                                            1142 * ***   }
                                            1143 * * **** Start of Epilogue
                                            1144          DCCEPIL
00000BE6                                    1145+         ds 0h                                                          01-DCCEP
                                            1146+* Epilog
00000BE6 D707 D088 D088 00000088 00000088   1147+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000BEC E3D0 D080 0004          00000080   1148+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000BF2 E3C0 D090 0004          00000090   1149+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000BF8 E3B0 C018 0004          00000018   1150+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000BFE E3C0 B010 0021          00000010   1151+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000C04 E3E0 D008 0004          00000008   1152+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000C0A EB1C D020 0004          00000020   1153+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000C10 078E                               1154+         bcr 8,14                if same dsab, just return              01-DCCEP
00000C12 E3F0 D010 0024          00000010   1155+         stg 15,16(0,13)         save return code                       01-DCCEP
00000C18 E300 D018 0024          00000018   1156+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000C1E E3F0 D090 0004          00000090   1157+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000C24 E3F0 F018 0004          00000018   1158+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000C2A 47F0 F040               00000040   1159+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1160+* End of Epilog
                                            1161 * * **** End of Epilogue
                                            1162          DROP  12
                                            1163 *
                                            1164 *   DSECT for automatic variables in "rd_list_init_copy"
                                            1165 *      (FUNCTION #760)
                                            1166 *
00000000                00000000 000000A8   1167 @AUTO#rd_list_init_copy DSECT
00000000                                    1168          DS    XL168
                                            1169 *
00000C2E                00000000 00003F28   1170 @CODE    CSECT
                                            1171 *
                                            1172 *
                                            1173 *
                                            1174 * ....... start of rd_list_alloc
00000C2E                                    1175 @LNAME796 DS   0H
00000C2E 0000000D                           1176          DC    X'0000000D'
00000C32 99846D9389A2A36D                   1177          DC    C'rd_list_alloc'
00000C3F 00                                 1178          DC    X'00'
                                            1179 rd_list_alloc DCCPRLG CINDEX=796,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH*
                                                                                                                           Page   28 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                                                ,LNAMEADDR=@LNAME796
                                            1180          macro
                                            1181          dccextrn &m
                                            1182          gblc    &$dccext(1000)
                                            1183          gbla    &$dccexti
                                            1184          lcla    &i
                                            1185 &$dccext(&$dccexti+1) setc    '&m'
                                            1186 &i       seta    1
                                            1187 .loop    aif    (&i gt &$dccexti).around
                                            1188          aif    ('&$dccext(&i)' eq '&m').getout
                                            1189 &i       seta    &i+1
                                            1190          ago     .loop
                                            1191 .around  anop
                                            1192 &$dccexti seta &$dccexti+1
                                            1193          extrn  &m
                                            1194 .getout  anop
                                            1195          mend
00000C40                                    1196+$eye0029    ds    0d                                                    02-DCCCA
00000C40 C4C3C3                             1197+         dc cl3'DCC'                                                    02-DCCCA
00000C43 01                                 1198+         dc xl1'01' format one                                          02-DCCCA
00000C44 00000000                           1199+         dc a(0)                                                        02-DCCCA
00000C48 0000000000000CB2                   1200+         dc ad(@PER_796)                                                02-DCCCA
00000C50 00000000000000B0                   1201+         dc ad(176)                                                     02-DCCCA
00000C58 0000000000000000                   1202+         dc ad(0)                                                       02-DCCCA
00000C60 0000000000001000                   1203+         dc ad(4096)                                                    02-DCCCA
00000C68 20                                 1204+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000C69 03                                 1205+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000C6A 03                                 1206+         dc al1(3)                                                      02-DCCCA
00000C6B 08                                 1207+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000C6C 00                                 1208+         dc bl.8'00000000'                                              02-DCCCA
00000C6D 000000                             1209+         dc al3(0)                                                      02-DCCCA
00000C70 0000000000000C2E                   1210+         dc ad(@LNAME796)                                               02-DCCCA
00000C78                                    1211+         ds 0d                                                          02-DCCCA
00000C78 0000000000000C40                   1212+         dc ad($eye0029)                                                02-DCCCA
00000C80 0000000000000000                   1213+         dc ad(0)                                                       02-DCCCA
00000C88                                    1214+         ds    0d                                                       01-DCCPR
00000C88                                    1215+rd_list_alloc ds 0d                                                     01-DCCPR
00000C88                                    1216+@REGION_796_1 ds 0h                                                     01-DCCPR
00000C88 EBEC D008 0024          00000008   1217+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000C8E E3E0 D088 0004          00000088   1218+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000C94 E3C0 D090 0004          00000090   1219+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000C9A B904 002E                          1220+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000C9E E3B0 C018 0004          00000018   1221+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000CA4 A7EB 00B0               000000B0   1222+         aghi  14,176              increase by frame size               01-DCCPR
00000CA8 E3E0 C020 0021          00000020   1223+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000CAE 4720 B020               00000020   1224+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000CB2                                    1225+@PER_796 ds    0h                                                       01-DCCPR
00000CB2 EBDE 2080 0024          00000080   1226+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000CB8 E3C0 2090 0024          00000090   1227+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000CBE B904 00D2                          1228+         lgr   13,2                set real frame pointer               01-DCCPR
00000CC2 B904 00CF                          1229+         lgr   12,15               set base reg                         01-DCCPR
                        00000C88            1230+         using @REGION_796_1,12                                         01-DCCPR
                                                                                                                           Page   29 
  Active Usings: @REGION_796_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1231 * ******* End of Prologue
                                            1232 * *
                                            1233 * ***           return rd_malloc(sizeof(rd_list_t));
00000CC6 E548 D0A8 0028          000000A8   1234          MVGHI 168(13),40
00000CCC 4110 D0A8               000000A8   1235          LA    1,168(0,13)
00000CD0 E3F0 C0A0 0004          00000D28   1236          LG    15,@lit_796_35 ; rd_malloc
00000CD6                                    1237 @@gen_label40 DS    0H
00000CD6 05EF                               1238          BALR  14,15
00000CD8                                    1239 @@gen_label41 DS    0H
                                            1240 * ***   }
                                            1241 * * **** Start of Epilogue
                                            1242          DCCEPIL
00000CD8                                    1243+         ds 0h                                                          01-DCCEP
                                            1244+* Epilog
00000CD8 D707 D088 D088 00000088 00000088   1245+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000CDE E3D0 D080 0004          00000080   1246+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000CE4 E3C0 D090 0004          00000090   1247+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000CEA E3B0 C018 0004          00000018   1248+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000CF0 E3C0 B010 0021          00000010   1249+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000CF6 E3E0 D008 0004          00000008   1250+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000CFC EB1C D020 0004          00000020   1251+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000D02 078E                               1252+         bcr 8,14                if same dsab, just return              01-DCCEP
00000D04 E3F0 D010 0024          00000010   1253+         stg 15,16(0,13)         save return code                       01-DCCEP
00000D0A E300 D018 0024          00000018   1254+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000D10 E3F0 D090 0004          00000090   1255+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000D16 E3F0 F018 0004          00000018   1256+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000D1C 47F0 F040               00000040   1257+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1258+* End of Epilog
                                            1259 * * **** End of Epilogue
00000D20                                    1260          DS    0D
00000D20 000000B0                           1261 @FRAMESIZE_796 DC F'176'
00000D24 00000000
00000D28 00000000000001C8                   1262 @lit_796_35 DC AD(rd_malloc)
                                            1263          DROP  12
                                            1264 *
                                            1265 *   DSECT for automatic variables in "rd_list_alloc"
                                            1266 *      (FUNCTION #796)
                                            1267 *
00000000                00000000 000000A8   1268 @AUTO#rd_list_alloc DSECT
00000000                                    1269          DS    XL168
                                            1270 *
00000D30                00000000 00003F28   1271 @CODE    CSECT
                                            1272 *
                                            1273 *
                                            1274 *
                                            1275 * ....... start of rd_list_new
                                            1276 rd_list_new ALIAS X'99846D9389A2A36D9585A6'
00000D30                                    1277 @LNAME761 DS   0H
00000D30 0000000B                           1278          DC    X'0000000B'
00000D34 99846D9389A2A36D                   1279          DC    C'rd_list_new'
00000D3F 00                                 1280          DC    X'00'
                                            1281 rd_list_new DCCPRLG CINDEX=761,BASER=12,FRAME=200,ENTRY=YES,ARCH=ZARCH,*
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                                                LNAMEADDR=@LNAME761
                                            1282          macro
                                            1283          dccextrn &m
                                            1284          gblc    &$dccext(1000)
                                            1285          gbla    &$dccexti
                                            1286          lcla    &i
                                            1287 &$dccext(&$dccexti+1) setc    '&m'
                                            1288 &i       seta    1
                                            1289 .loop    aif    (&i gt &$dccexti).around
                                            1290          aif    ('&$dccext(&i)' eq '&m').getout
                                            1291 &i       seta    &i+1
                                            1292          ago     .loop
                                            1293 .around  anop
                                            1294 &$dccexti seta &$dccexti+1
                                            1295          extrn  &m
                                            1296 .getout  anop
                                            1297          mend
00000D40                                    1298+$eye0032    ds    0d                                                    02-DCCCA
00000D40 C4C3C3                             1299+         dc cl3'DCC'                                                    02-DCCCA
00000D43 01                                 1300+         dc xl1'01' format one                                          02-DCCCA
00000D44 00000000                           1301+         dc a(0)                                                        02-DCCCA
00000D48 0000000000000DB2                   1302+         dc ad(@PER_761)                                                02-DCCCA
00000D50 00000000000000C8                   1303+         dc ad(200)                                                     02-DCCCA
00000D58 0000000000000000                   1304+         dc ad(0)                                                       02-DCCCA
00000D60 0000000000001000                   1305+         dc ad(4096)                                                    02-DCCCA
00000D68 20                                 1306+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D69 03                                 1307+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D6A 03                                 1308+         dc al1(3)                                                      02-DCCCA
00000D6B 08                                 1309+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D6C 00                                 1310+         dc bl.8'00000000'                                              02-DCCCA
00000D6D 000000                             1311+         dc al3(0)                                                      02-DCCCA
00000D70 0000000000000D30                   1312+         dc ad(@LNAME761)                                               02-DCCCA
00000D78                                    1313+         ds 0d                                                          02-DCCCA
00000D78 0000000000000D40                   1314+         dc ad($eye0032)                                                02-DCCCA
00000D80 0000000000000000                   1315+         dc ad(0)                                                       02-DCCCA
00000D88                                    1316+         ds    0d                                                       01-DCCPR
                                            1317+         entry rd_list_new                                              01-DCCPR
00000D88                                    1318+rd_list_new ds 0d                                                       01-DCCPR
00000D88                                    1319+@REGION_761_1 ds 0h                                                     01-DCCPR
00000D88 EBEC D008 0024          00000008   1320+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000D8E E3E0 D088 0004          00000088   1321+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000D94 E3C0 D090 0004          00000090   1322+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000D9A B904 002E                          1323+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000D9E E3B0 C018 0004          00000018   1324+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000DA4 A7EB 00C8               000000C8   1325+         aghi  14,200              increase by frame size               01-DCCPR
00000DA8 E3E0 C020 0021          00000020   1326+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000DAE 4720 B020               00000020   1327+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000DB2                                    1328+@PER_761 ds    0h                                                       01-DCCPR
00000DB2 EBDE 2080 0024          00000080   1329+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000DB8 E3C0 2090 0024          00000090   1330+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000DBE B904 00D2                          1331+         lgr   13,2                set real frame pointer               01-DCCPR
00000DC2 B904 00CF                          1332+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   31 
  Active Usings: @REGION_761_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                        00000D88            1333+         using @REGION_761_1,12                                         01-DCCPR
00000DC6 B904 0031                          1334          LGR   3,1         ; ptr to parm area
                                            1335 * ******* End of Prologue
                                            1336 * *
                                            1337 * ***      rd_list_t *rl = rd_list_alloc();
00000DCA E3F0 C0D8 0004          00000E60   1338          LG    15,@lit_761_37 ; rd_list_alloc
00000DD0                                    1339 @@gen_label42 DS    0H
00000DD0 05EF                               1340          BALR  14,15
00000DD2                                    1341 @@gen_label43 DS    0H
00000DD2 B904 002F                          1342          LGR   2,15
                                            1343 * ***      rd_list_init(rl, initial_size, free_cb);
00000DD6 E320 D0B0 0024          000000B0   1344          STG   2,176(0,13)
00000DDC E3F0 3004 0014          00000004   1345          LGF   15,4(0,3)   ; initial_size
00000DE2 E3F0 D0B8 0024          000000B8   1346          STG   15,184(0,13)
00000DE8 E3F0 3008 0004          00000008   1347          LG    15,8(0,3)   ; free_cb
00000DEE E3F0 D0C0 0024          000000C0   1348          STG   15,192(0,13)
00000DF4 4110 D0B0               000000B0   1349          LA    1,176(0,13)
00000DF8 E3F0 C0E0 0004          00000E68   1350          LG    15,@lit_761_38 ; rd_list_init
00000DFE                                    1351 @@gen_label44 DS    0H
00000DFE 05EF                               1352          BALR  14,15
00000E00                                    1353 @@gen_label45 DS    0H
                                            1354 * ***      rl->rl_flags |= 0x1;
00000E00 58F0 2018               00000018   1355          L     15,24(0,2)
00000E04 A5FB 0001               00000001   1356          OILL  15,1
00000E08 50F0 2018               00000018   1357          ST    15,24(0,2)
                                            1358 * ***      return rl;
00000E0C B904 00F2                          1359          LGR   15,2
                                            1360 * ***   }
                                            1361 * * **** Start of Epilogue
                                            1362          DCCEPIL
00000E10                                    1363+         ds 0h                                                          01-DCCEP
                                            1364+* Epilog
00000E10 D707 D088 D088 00000088 00000088   1365+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000E16 E3D0 D080 0004          00000080   1366+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000E1C E3C0 D090 0004          00000090   1367+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000E22 E3B0 C018 0004          00000018   1368+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000E28 E3C0 B010 0021          00000010   1369+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000E2E E3E0 D008 0004          00000008   1370+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000E34 EB1C D020 0004          00000020   1371+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000E3A 078E                               1372+         bcr 8,14                if same dsab, just return              01-DCCEP
00000E3C E3F0 D010 0024          00000010   1373+         stg 15,16(0,13)         save return code                       01-DCCEP
00000E42 E300 D018 0024          00000018   1374+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000E48 E3F0 D090 0004          00000090   1375+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000E4E E3F0 F018 0004          00000018   1376+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000E54 47F0 F040               00000040   1377+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1378+* End of Epilog
                                            1379 * * **** End of Epilogue
00000E58                                    1380          DS    0D
00000E58 000000C8                           1381 @FRAMESIZE_761 DC F'200'
00000E5C 00000000
00000E60 0000000000000C88                   1382 @lit_761_37 DC AD(rd_list_alloc)
00000E68 00000000000009A0                   1383 @lit_761_38 DC AD(rd_list_init)
                                                                                                                           Page   32 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1384          DROP  12
                                            1385 *
                                            1386 *   DSECT for automatic variables in "rd_list_new"
                                            1387 *      (FUNCTION #761)
                                            1388 *
00000000                00000000 000000A8   1389 @AUTO#rd_list_new DSECT
00000000                                    1390          DS    XL168
                                            1391 *
00000E70                00000000 00003F28   1392 @CODE    CSECT
                                            1393 *
                                            1394 *
                                            1395 *
                                            1396 * ....... start of rd_list_prealloc_elems
                                            1397 rd_list_prealloc_elems ALIAS X'99846D9389A2A36D97998581939396836D859385*
                                                                94A2'
00000E70                                    1398 @LNAME763 DS   0H
00000E70 00000016                           1399          DC    X'00000016'
00000E74 99846D9389A2A36D                   1400          DC    C'rd_list_prealloc_elems'
00000E8A 00                                 1401          DC    X'00'
                                            1402 rd_list_prealloc_elems DCCPRLG CINDEX=763,BASER=12,FRAME=208,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME763
                                            1403          macro
                                            1404          dccextrn &m
                                            1405          gblc    &$dccext(1000)
                                            1406          gbla    &$dccexti
                                            1407          lcla    &i
                                            1408 &$dccext(&$dccexti+1) setc    '&m'
                                            1409 &i       seta    1
                                            1410 .loop    aif    (&i gt &$dccexti).around
                                            1411          aif    ('&$dccext(&i)' eq '&m').getout
                                            1412 &i       seta    &i+1
                                            1413          ago     .loop
                                            1414 .around  anop
                                            1415 &$dccexti seta &$dccexti+1
                                            1416          extrn  &m
                                            1417 .getout  anop
                                            1418          mend
00000E90                                    1419+$eye0035    ds    0d                                                    02-DCCCA
00000E90 C4C3C3                             1420+         dc cl3'DCC'                                                    02-DCCCA
00000E93 01                                 1421+         dc xl1'01' format one                                          02-DCCCA
00000E94 00000000                           1422+         dc a(0)                                                        02-DCCCA
00000E98 0000000000000F02                   1423+         dc ad(@PER_763)                                                02-DCCCA
00000EA0 00000000000000D0                   1424+         dc ad(208)                                                     02-DCCCA
00000EA8 0000000000000000                   1425+         dc ad(0)                                                       02-DCCCA
00000EB0 0000000000001000                   1426+         dc ad(4096)                                                    02-DCCCA
00000EB8 20                                 1427+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000EB9 03                                 1428+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000EBA 03                                 1429+         dc al1(3)                                                      02-DCCCA
00000EBB 08                                 1430+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000EBC 00                                 1431+         dc bl.8'00000000'                                              02-DCCCA
00000EBD 000000                             1432+         dc al3(0)                                                      02-DCCCA
00000EC0 0000000000000E70                   1433+         dc ad(@LNAME763)                                               02-DCCCA
                                                                                                                           Page   33 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000EC8                                    1434+         ds 0d                                                          02-DCCCA
00000EC8 0000000000000E90                   1435+         dc ad($eye0035)                                                02-DCCCA
00000ED0 0000000000000000                   1436+         dc ad(0)                                                       02-DCCCA
00000ED8                                    1437+         ds    0d                                                       01-DCCPR
                                            1438+         entry rd_list_prealloc_elems                                   01-DCCPR
00000ED8                                    1439+rd_list_prealloc_elems ds 0d                                            01-DCCPR
00000ED8                                    1440+@REGION_763_1 ds 0h                                                     01-DCCPR
00000ED8 EBEC D008 0024          00000008   1441+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000EDE E3E0 D088 0004          00000088   1442+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000EE4 E3C0 D090 0004          00000090   1443+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000EEA B904 002E                          1444+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000EEE E3B0 C018 0004          00000018   1445+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000EF4 A7EB 00D0               000000D0   1446+         aghi  14,208              increase by frame size               01-DCCPR
00000EF8 E3E0 C020 0021          00000020   1447+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000EFE 4720 B020               00000020   1448+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000F02                                    1449+@PER_763 ds    0h                                                       01-DCCPR
00000F02 EBDE 2080 0024          00000080   1450+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000F08 E3C0 2090 0024          00000090   1451+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000F0E B904 00D2                          1452+         lgr   13,2                set real frame pointer               01-DCCPR
00000F12 B904 00CF                          1453+         lgr   12,15               set base reg                         01-DCCPR
                        00000ED8            1454+         using @REGION_763_1,12                                         01-DCCPR
00000F16 B904 0051                          1455          LGR   5,1         ; ptr to parm area
                                            1456 * ******* End of Prologue
                                            1457 * *
00000F1A EB24 5000 0004          00000000   1458          LMG   2,4,0(5)    ; rl
                                            1459 * ***      size_t allocsize;
                                            1460 * ***      char *p;
                                            1461 * ***      size_t i;
                                            1462 * ***
                                            1463 * ***      ((!rl->rl_elems) ? (void)0 : __assert(__func__, "C:\\asgkaf\
                                            1464 * ka\\librdkafka\\src\\rdlist.c", 98, "!rl->rl_elems"));
00000F20 E3F0 2008 0002          00000008   1465          LTG   15,8(0,2)   ; offset of rl_elems in rd_list_s
00000F26 4780 C08E               00000F66   1466          BZ    @L55
00000F2A                                    1467 @L54     DS    0H
00000F2A E3F0 C0E8 0004          00000FC0   1468          LG    15,@lit_763_40
00000F30 41F0 F054               00000054   1469          LA    15,84(0,15)
00000F34 E3F0 D0B0 0024          000000B0   1470          STG   15,176(0,13)
00000F3A E3F0 C0E0 0004          00000FB8   1471          LG    15,@lit_763_41
00000F40 4110 F064               00000064   1472          LA    1,100(0,15)
00000F44 E310 D0B8 0024          000000B8   1473          STG   1,184(0,13)
00000F4A E548 D0C0 0062          000000C0   1474          MVGHI 192(13),98
00000F50 41F0 F09E               0000009E   1475          LA    15,158(0,15)
00000F54 E3F0 D0C8 0024          000000C8   1476          STG   15,200(0,13)
00000F5A 4110 D0B0               000000B0   1477          LA    1,176(0,13)
00000F5E E3F0 C0D8 0004          00000FB0   1478          LG    15,@lit_763_42 ; __assert
00000F64                                    1479 @@gen_label47 DS    0H
00000F64 05EF                               1480          BALR  14,15
00000F66                                    1481 @@gen_label48 DS    0H
00000F66                                    1482 @L55     DS    0H
                                            1483 * ***
                                            1484 * ***
                                            1485 * ***
                                                                                                                           Page   34 
  Active Usings: @REGION_763_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1486 * ***
                                            1487 * ***
                                            1488 * ***
                                            1489 * ***      allocsize = (sizeof(void *) * cnt) + (elemsize * cnt);
00000F66 EBF4 0003 000D          00000003   1490          SLLG  15,4,3(0)   ; *0x8
00000F6C B904 0013                          1491          LGR   1,3
00000F70 B90C 0014                          1492          MSGR  1,4
00000F74 B90A 00F1                          1493          ALGR  15,1
                                            1494 * ***           if (memzero)
00000F78 E310 501C 0012          0000001C   1495          LT    1,28(0,5)   ; memzero
00000F7E 4780 C100               00000FD8   1496          BZ    @L56
                                            1497 * ***                   rl->rl_elems = rd_calloc(1, allocsize);
00000F82 E548 D0B0 0001          000000B0   1498          MVGHI 176(13),1
00000F88 E3F0 D0B8 0024          000000B8   1499          STG   15,184(0,13)
00000F8E 4110 D0B0               000000B0   1500          LA    1,176(0,13)
00000F92 E3F0 C0F0 0004          00000FC8   1501          LG    15,@lit_763_43 ; rd_calloc
00000F98                                    1502 @@gen_label50 DS    0H
00000F98 05EF                               1503          BALR  14,15
00000F9A                                    1504 @@gen_label51 DS    0H
00000F9A E3F0 2008 0024          00000008   1505          STG   15,8(0,2)
00000FA0 47F0 C118               00000FF0   1506          B     @L57
00000FA8                                    1507          DS    0D
00000FA8 000000D0                           1508 @FRAMESIZE_763 DC F'208'
00000FAC 00000000
00000FB0 0000000000000000                   1509 @lit_763_42 DC AD(__assert)
00000FB8 000000000000402C                   1510 @lit_763_41 DC AD(@strings@)
00000FC0 0000000000003F28                   1511 @lit_763_40 DC AD(@DATA)
00000FC8 0000000000000058                   1512 @lit_763_43 DC AD(rd_calloc)
00000FD0 00000000000001C8                   1513 @lit_763_44 DC AD(rd_malloc)
                                            1514 * ***           else
00000FD8                                    1515 @L56     DS    0H
                                            1516 * ***                   rl->rl_elems = rd_malloc(allocsize);
00000FD8 E3F0 D0B0 0024          000000B0   1517          STG   15,176(0,13)
00000FDE 4110 D0B0               000000B0   1518          LA    1,176(0,13)
00000FE2 E3F0 C0F8 0004          00000FD0   1519          LG    15,@lit_763_44 ; rd_malloc
00000FE8                                    1520 @@gen_label52 DS    0H
00000FE8 05EF                               1521          BALR  14,15
00000FEA                                    1522 @@gen_label53 DS    0H
00000FEA E3F0 2008 0024          00000008   1523          STG   15,8(0,2)
00000FF0                                    1524 @L57     DS    0H
                                            1525 * ***
                                            1526 * ***
                                            1527 * ***           if (elemsize > 0)
00000FF0 C23E 0000 0000                     1528          CLGFI 3,X'00000000'
00000FF6 47D0 C140               00001018   1529          BNH   @L58
                                            1530 * ***                   p = rl->rl_p = (char *)&rl->rl_elems[cnt];
00000FFA E3F0 2008 0004          00000008   1531          LG    15,8(0,2)   ; offset of rl_elems in rd_list_s
00001000 EB14 0003 000D          00000003   1532          SLLG  1,4,3(0)    ; *0x8
00001006 4151 F000               00000000   1533          LA    5,0(1,15)
0000100A E350 2020 0024          00000020   1534          STG   5,32(0,2)
00001010 41F1 F000               00000000   1535          LA    15,0(1,15)
00001014 47F0 C14A               00001022   1536          B     @L59
                                                                                                                           Page   35 
  Active Usings: @REGION_763_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1537 * ***           else
00001018                                    1538 @L58     DS    0H
                                            1539 * ***                   p = rl->rl_p = ((void *)0);
00001018 A7F9 0000               00000000   1540          LGHI  15,0        ; 0
0000101C E3F0 2020 0024          00000020   1541          STG   15,32(0,2)  ; offset of rl_p in rd_list_s
00001022                                    1542 @L59     DS    0H
                                            1543 * ***
                                            1544 * ***
                                            1545 * ***      for (i = 0 ; i < cnt ; i++, p += elemsize)
00001022 A719 0000               00000000   1546          LGHI  1,0         ; 0
00001026 47F0 C16C               00001044   1547          B     @L61
0000102A                                    1548 @L60     DS    0H
                                            1549 * ***         rl->rl_elems[i] = p;
0000102A E350 2008 0004          00000008   1550          LG    5,8(0,2)    ; offset of rl_elems in rd_list_s
00001030 EB61 0003 000D          00000003   1551          SLLG  6,1,3(0)    ; *0x8
00001036 E3F6 5000 0024          00000000   1552          STG   15,0(6,5)
0000103C A71B 0001               00000001   1553          AGHI  1,1
00001040 41F3 F000               00000000   1554          LA    15,0(3,15)
00001044                                    1555 @L61     DS    0H
00001044 B921 0014                          1556          CLGR  1,4
00001048 4740 C152               0000102A   1557          BL    @L60
                                            1558 * ***
                                            1559 * ***      rl->rl_size = (int)cnt;
0000104C 5040 2000               00000000   1560          ST    4,0(0,2)    ; rl
                                            1561 * ***      rl->rl_cnt = 0;
00001050 E54C 2004 0000          00000004   1562          MVHI  4(2),0      ; offset of rl_cnt in rd_list_s
                                            1563 * ***      rl->rl_flags |= 0x4;
00001056 58F0 2018               00000018   1564          L     15,24(0,2)
0000105A A5FB 0004               00000004   1565          OILL  15,4
0000105E 50F0 2018               00000018   1566          ST    15,24(0,2)
                                            1567 * ***           rl->rl_elemsize = (int)elemsize;
00001062 5030 201C               0000001C   1568          ST    3,28(0,2)   ; offset of rl_elemsize in rd_list_s
                                            1569 * ***   }
00001066                                    1570 @ret_lab_763 DS 0H
                                            1571 * * **** Start of Epilogue
                                            1572          DCCEPIL
00001066                                    1573+         ds 0h                                                          01-DCCEP
                                            1574+* Epilog
00001066 D707 D088 D088 00000088 00000088   1575+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000106C E3D0 D080 0004          00000080   1576+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001072 E3C0 D090 0004          00000090   1577+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001078 E3B0 C018 0004          00000018   1578+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000107E E3C0 B010 0021          00000010   1579+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001084 E3E0 D008 0004          00000008   1580+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000108A EB1C D020 0004          00000020   1581+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001090 078E                               1582+         bcr 8,14                if same dsab, just return              01-DCCEP
00001092 E3F0 D010 0024          00000010   1583+         stg 15,16(0,13)         save return code                       01-DCCEP
00001098 E300 D018 0024          00000018   1584+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000109E E3F0 D090 0004          00000090   1585+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000010A4 E3F0 F018 0004          00000018   1586+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000010AA 47F0 F040               00000040   1587+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1588+* End of Epilog
                                                                                                                           Page   36 
  Active Usings: @REGION_763_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1589 * * **** End of Epilogue
                                            1590          DROP  12
                                            1591 *
                                            1592 *   DSECT for automatic variables in "rd_list_prealloc_elems"
                                            1593 *      (FUNCTION #763)
                                            1594 *
00000000                00000000 000000B0   1595 @AUTO#rd_list_prealloc_elems DSECT
00000000                                    1596          DS    XL168
000000A8                                    1597 rd_list_prealloc_elems#i#0 DS 8XL1 ; i
000000B0                000000B0 000000A8   1598          ORG   @AUTO#rd_list_prealloc_elems+168
000000A8                                    1599 rd_list_prealloc_elems#allocsize#0 DS 8XL1 ; allocsize
                                            1600 *
000010AE                00000000 00003F28   1601 @CODE    CSECT
                                            1602 *
                                            1603 *
                                            1604 *
                                            1605 * ....... start of rd_list_set_cnt
                                            1606 rd_list_set_cnt ALIAS X'99846D9389A2A36DA285A36D8395A3'
000010AE                                    1607 @LNAME764 DS   0H
000010AE 0000000F                           1608          DC    X'0000000F'
000010B2 99846D9389A2A36D                   1609          DC    C'rd_list_set_cnt'
000010C1 00                                 1610          DC    X'00'
                                            1611 rd_list_set_cnt DCCPRLG CINDEX=764,BASER=12,FRAME=200,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME764
                                            1612          macro
                                            1613          dccextrn &m
                                            1614          gblc    &$dccext(1000)
                                            1615          gbla    &$dccexti
                                            1616          lcla    &i
                                            1617 &$dccext(&$dccexti+1) setc    '&m'
                                            1618 &i       seta    1
                                            1619 .loop    aif    (&i gt &$dccexti).around
                                            1620          aif    ('&$dccext(&i)' eq '&m').getout
                                            1621 &i       seta    &i+1
                                            1622          ago     .loop
                                            1623 .around  anop
                                            1624 &$dccexti seta &$dccexti+1
                                            1625          extrn  &m
                                            1626 .getout  anop
                                            1627          mend
000010C8                                    1628+$eye0038    ds    0d                                                    02-DCCCA
000010C8 C4C3C3                             1629+         dc cl3'DCC'                                                    02-DCCCA
000010CB 01                                 1630+         dc xl1'01' format one                                          02-DCCCA
000010CC 00000000                           1631+         dc a(0)                                                        02-DCCCA
000010D0 000000000000113A                   1632+         dc ad(@PER_764)                                                02-DCCCA
000010D8 00000000000000C8                   1633+         dc ad(200)                                                     02-DCCCA
000010E0 0000000000000000                   1634+         dc ad(0)                                                       02-DCCCA
000010E8 0000000000001000                   1635+         dc ad(4096)                                                    02-DCCCA
000010F0 20                                 1636+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000010F1 03                                 1637+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000010F2 03                                 1638+         dc al1(3)                                                      02-DCCCA
000010F3 08                                 1639+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   37 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000010F4 00                                 1640+         dc bl.8'00000000'                                              02-DCCCA
000010F5 000000                             1641+         dc al3(0)                                                      02-DCCCA
000010F8 00000000000010AE                   1642+         dc ad(@LNAME764)                                               02-DCCCA
00001100                                    1643+         ds 0d                                                          02-DCCCA
00001100 00000000000010C8                   1644+         dc ad($eye0038)                                                02-DCCCA
00001108 0000000000000000                   1645+         dc ad(0)                                                       02-DCCCA
00001110                                    1646+         ds    0d                                                       01-DCCPR
                                            1647+         entry rd_list_set_cnt                                          01-DCCPR
00001110                                    1648+rd_list_set_cnt ds 0d                                                   01-DCCPR
00001110                                    1649+@REGION_764_1 ds 0h                                                     01-DCCPR
00001110 EBEC D008 0024          00000008   1650+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001116 E3E0 D088 0004          00000088   1651+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000111C E3C0 D090 0004          00000090   1652+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001122 B904 002E                          1653+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001126 E3B0 C018 0004          00000018   1654+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000112C A7EB 00C8               000000C8   1655+         aghi  14,200              increase by frame size               01-DCCPR
00001130 E3E0 C020 0021          00000020   1656+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001136 4720 B020               00000020   1657+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000113A                                    1658+@PER_764 ds    0h                                                       01-DCCPR
0000113A EBDE 2080 0024          00000080   1659+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001140 E3C0 2090 0024          00000090   1660+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001146 B904 00D2                          1661+         lgr   13,2                set real frame pointer               01-DCCPR
0000114A B904 00CF                          1662+         lgr   12,15               set base reg                         01-DCCPR
                        00001110            1663+         using @REGION_764_1,12                                         01-DCCPR
0000114E B904 0031                          1664          LGR   3,1         ; ptr to parm area
                                            1665 * ******* End of Prologue
                                            1666 * *
                                            1667 * ***           ((rl->rl_flags & 0x4) ? (void)0 : __assert(__func__, "\
                                            1668 * C:\\asgkafka\\librdkafka\\src\\rdlist.c", 129, "rl->rl_flags & 0x4")\
                                            1669 * );
00001152 E320 3000 0004          00000000   1670          LG    2,0(0,3)    ; rl
00001158 9104 201B      0000001B 00000004   1671          TM    27(2),4
0000115C 4770 C08C               0000119C   1672          BNZ   @L65
00001160                                    1673 @L64     DS    0H
00001160 E3F0 C140 0004          00001250   1674          LG    15,@lit_764_49
00001166 41F0 F06C               0000006C   1675          LA    15,108(0,15)
0000116A E3F0 D0A8 0024          000000A8   1676          STG   15,168(0,13)
00001170 E3F0 C138 0004          00001248   1677          LG    15,@lit_764_50
00001176 4110 F064               00000064   1678          LA    1,100(0,15)
0000117A E310 D0B0 0024          000000B0   1679          STG   1,176(0,13)
00001180 E548 D0B8 0081          000000B8   1680          MVGHI 184(13),129
00001186 41F0 F0AC               000000AC   1681          LA    15,172(0,15)
0000118A E3F0 D0C0 0024          000000C0   1682          STG   15,192(0,13)
00001190 4110 D0A8               000000A8   1683          LA    1,168(0,13)
00001194 E3F0 C130 0004          00001240   1684          LG    15,@lit_764_51 ; __assert
0000119A                                    1685 @@gen_label57 DS    0H
0000119A 05EF                               1686          BALR  14,15
0000119C                                    1687 @@gen_label58 DS    0H
0000119C                                    1688 @L65     DS    0H
                                            1689 * ***           (((int)cnt <= rl->rl_size) ? (void)0 : __assert(__func\
                                            1690 * __, "C:\\asgkafka\\librdkafka\\src\\rdlist.c", 130, "(int)cnt <= rl-\
                                            1691 * >rl_size"));
                                                                                                                           Page   38 
  Active Usings: @REGION_764_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000119C E330 3008 0004          00000008   1692          LG    3,8(0,3)    ; cnt
000011A2 5930 2000               00000000   1693          C     3,0(0,2)
000011A6 47D0 C0D6               000011E6   1694          BNH   @L67
000011AA                                    1695 @L66     DS    0H
000011AA E3F0 C140 0004          00001250   1696          LG    15,@lit_764_49
000011B0 41F0 F06C               0000006C   1697          LA    15,108(0,15)
000011B4 E3F0 D0A8 0024          000000A8   1698          STG   15,168(0,13)
000011BA E3F0 C138 0004          00001248   1699          LG    15,@lit_764_50
000011C0 4110 F064               00000064   1700          LA    1,100(0,15)
000011C4 E310 D0B0 0024          000000B0   1701          STG   1,176(0,13)
000011CA E548 D0B8 0082          000000B8   1702          MVGHI 184(13),130
000011D0 41F0 F0C0               000000C0   1703          LA    15,192(0,15)
000011D4 E3F0 D0C0 0024          000000C0   1704          STG   15,192(0,13)
000011DA 4110 D0A8               000000A8   1705          LA    1,168(0,13)
000011DE E3F0 C130 0004          00001240   1706          LG    15,@lit_764_51 ; __assert
000011E4                                    1707 @@gen_label60 DS    0H
000011E4 05EF                               1708          BALR  14,15
000011E6                                    1709 @@gen_label61 DS    0H
000011E6                                    1710 @L67     DS    0H
                                            1711 * ***           rl->rl_cnt = (int)cnt;
000011E6 5030 2004               00000004   1712          ST    3,4(0,2)    ; offset of rl_cnt in rd_list_s
                                            1713 * ***   }
000011EA                                    1714 @ret_lab_764 DS 0H
                                            1715 * * **** Start of Epilogue
                                            1716          DCCEPIL
000011EA                                    1717+         ds 0h                                                          01-DCCEP
                                            1718+* Epilog
000011EA D707 D088 D088 00000088 00000088   1719+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000011F0 E3D0 D080 0004          00000080   1720+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000011F6 E3C0 D090 0004          00000090   1721+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000011FC E3B0 C018 0004          00000018   1722+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001202 E3C0 B010 0021          00000010   1723+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001208 E3E0 D008 0004          00000008   1724+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000120E EB1C D020 0004          00000020   1725+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001214 078E                               1726+         bcr 8,14                if same dsab, just return              01-DCCEP
00001216 E3F0 D010 0024          00000010   1727+         stg 15,16(0,13)         save return code                       01-DCCEP
0000121C E300 D018 0024          00000018   1728+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001222 E3F0 D090 0004          00000090   1729+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001228 E3F0 F018 0004          00000018   1730+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000122E 47F0 F040               00000040   1731+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1732+* End of Epilog
                                            1733 * * **** End of Epilogue
00001238                                    1734          DS    0D
00001238 000000C8                           1735 @FRAMESIZE_764 DC F'200'
0000123C 00000000
00001240 0000000000000000                   1736 @lit_764_51 DC AD(__assert)
00001248 000000000000402C                   1737 @lit_764_50 DC AD(@strings@)
00001250 0000000000003F28                   1738 @lit_764_49 DC AD(@DATA)
                                            1739          DROP  12
                                            1740 *
                                            1741 *   DSECT for automatic variables in "rd_list_set_cnt"
                                            1742 *      (FUNCTION #764)
                                                                                                                           Page   39 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1743 *
00000000                00000000 000000A8   1744 @AUTO#rd_list_set_cnt DSECT
00000000                                    1745          DS    XL168
                                            1746 *
00001258                00000000 00003F28   1747 @CODE    CSECT
                                            1748 *
                                            1749 *
                                            1750 *
                                            1751 * ....... start of rd_list_free_cb
                                            1752 rd_list_free_cb ALIAS X'99846D9389A2A36D869985856D8382'
00001258                                    1753 @LNAME765 DS   0H
00001258 0000000F                           1754          DC    X'0000000F'
0000125C 99846D9389A2A36D                   1755          DC    C'rd_list_free_cb'
0000126B 00                                 1756          DC    X'00'
                                            1757 rd_list_free_cb DCCPRLG CINDEX=765,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME765
                                            1758          macro
                                            1759          dccextrn &m
                                            1760          gblc    &$dccext(1000)
                                            1761          gbla    &$dccexti
                                            1762          lcla    &i
                                            1763 &$dccext(&$dccexti+1) setc    '&m'
                                            1764 &i       seta    1
                                            1765 .loop    aif    (&i gt &$dccexti).around
                                            1766          aif    ('&$dccext(&i)' eq '&m').getout
                                            1767 &i       seta    &i+1
                                            1768          ago     .loop
                                            1769 .around  anop
                                            1770 &$dccexti seta &$dccexti+1
                                            1771          extrn  &m
                                            1772 .getout  anop
                                            1773          mend
00001270                                    1774+$eye0041    ds    0d                                                    02-DCCCA
00001270 C4C3C3                             1775+         dc cl3'DCC'                                                    02-DCCCA
00001273 01                                 1776+         dc xl1'01' format one                                          02-DCCCA
00001274 00000000                           1777+         dc a(0)                                                        02-DCCCA
00001278 00000000000012E2                   1778+         dc ad(@PER_765)                                                02-DCCCA
00001280 00000000000000B0                   1779+         dc ad(176)                                                     02-DCCCA
00001288 0000000000000000                   1780+         dc ad(0)                                                       02-DCCCA
00001290 0000000000001000                   1781+         dc ad(4096)                                                    02-DCCCA
00001298 20                                 1782+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001299 03                                 1783+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000129A 03                                 1784+         dc al1(3)                                                      02-DCCCA
0000129B 08                                 1785+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000129C 00                                 1786+         dc bl.8'00000000'                                              02-DCCCA
0000129D 000000                             1787+         dc al3(0)                                                      02-DCCCA
000012A0 0000000000001258                   1788+         dc ad(@LNAME765)                                               02-DCCCA
000012A8                                    1789+         ds 0d                                                          02-DCCCA
000012A8 0000000000001270                   1790+         dc ad($eye0041)                                                02-DCCCA
000012B0 0000000000000000                   1791+         dc ad(0)                                                       02-DCCCA
000012B8                                    1792+         ds    0d                                                       01-DCCPR
                                            1793+         entry rd_list_free_cb                                          01-DCCPR
                                                                                                                           Page   40 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000012B8                                    1794+rd_list_free_cb ds 0d                                                   01-DCCPR
000012B8                                    1795+@REGION_765_1 ds 0h                                                     01-DCCPR
000012B8 EBEC D008 0024          00000008   1796+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000012BE E3E0 D088 0004          00000088   1797+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000012C4 E3C0 D090 0004          00000090   1798+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000012CA B904 002E                          1799+         lgr   2,14                copy addr of our savearea            01-DCCPR
000012CE E3B0 C018 0004          00000018   1800+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000012D4 A7EB 00B0               000000B0   1801+         aghi  14,176              increase by frame size               01-DCCPR
000012D8 E3E0 C020 0021          00000020   1802+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000012DE 4720 B020               00000020   1803+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000012E2                                    1804+@PER_765 ds    0h                                                       01-DCCPR
000012E2 EBDE 2080 0024          00000080   1805+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000012E8 E3C0 2090 0024          00000090   1806+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000012EE B904 00D2                          1807+         lgr   13,2                set real frame pointer               01-DCCPR
000012F2 B904 00CF                          1808+         lgr   12,15               set base reg                         01-DCCPR
                        000012B8            1809+         using @REGION_765_1,12                                         01-DCCPR
                                            1810 * ******* End of Prologue
                                            1811 * *
                                            1812 * ***           if (rl->rl_free_cb && ptr)
000012F6 E3F0 1000 0004          00000000   1813          LG    15,0(0,1)   ; rl
000012FC E320 F010 0002          00000010   1814          LTG   2,16(0,15)  ; offset of rl_free_cb in rd_list_s
00001302 4780 C06E               00001326   1815          BZ    @ret_lab_765
00001306 E310 1008 0004          00000008   1816          LG    1,8(0,1)    ; ptr
0000130C B902 0021                          1817          LTGR  2,1
00001310 4780 C06E               00001326   1818          BZ    @ret_lab_765
                                            1819 * ***                   rl->rl_free_cb(ptr);
00001314 E310 D0A8 0024          000000A8   1820          STG   1,168(0,13)
0000131A E3F0 F010 0004          00000010   1821          LG    15,16(0,15) ; offset of rl_free_cb in rd_list_s
00001320 4110 D0A8               000000A8   1822          LA    1,168(0,13)
00001324                                    1823 @@gen_label64 DS    0H
00001324 05EF                               1824          BALR  14,15
00001326                                    1825 @@gen_label65 DS    0H
00001326                                    1826 @L68     DS    0H
                                            1827 * ***   }
00001326                                    1828 @ret_lab_765 DS 0H
                                            1829 * * **** Start of Epilogue
                                            1830          DCCEPIL
00001326                                    1831+         ds 0h                                                          01-DCCEP
                                            1832+* Epilog
00001326 D707 D088 D088 00000088 00000088   1833+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000132C E3D0 D080 0004          00000080   1834+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001332 E3C0 D090 0004          00000090   1835+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001338 E3B0 C018 0004          00000018   1836+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000133E E3C0 B010 0021          00000010   1837+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001344 E3E0 D008 0004          00000008   1838+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000134A EB1C D020 0004          00000020   1839+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001350 078E                               1840+         bcr 8,14                if same dsab, just return              01-DCCEP
00001352 E3F0 D010 0024          00000010   1841+         stg 15,16(0,13)         save return code                       01-DCCEP
00001358 E300 D018 0024          00000018   1842+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000135E E3F0 D090 0004          00000090   1843+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001364 E3F0 F018 0004          00000018   1844+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000136A 47F0 F040               00000040   1845+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page   41 
  Active Usings: @REGION_765_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1846+* End of Epilog
                                            1847 * * **** End of Epilogue
00001370                                    1848          DS    0D
00001370 000000B0                           1849 @FRAMESIZE_765 DC F'176'
                                            1850          DROP  12
                                            1851 *
                                            1852 *   DSECT for automatic variables in "rd_list_free_cb"
                                            1853 *      (FUNCTION #765)
                                            1854 *
00000000                00000000 000000A8   1855 @AUTO#rd_list_free_cb DSECT
00000000                                    1856          DS    XL168
                                            1857 *
00001374                00000000 00003F28   1858 @CODE    CSECT
                                            1859 *
                                            1860 *
                                            1861 *
                                            1862 * ....... start of rd_list_add
                                            1863 rd_list_add ALIAS X'99846D9389A2A36D818484'
00001374                                    1864 @LNAME766 DS   0H
00001374 0000000B                           1865          DC    X'0000000B'
00001378 99846D9389A2A36D                   1866          DC    C'rd_list_add'
00001383 00                                 1867          DC    X'00'
                                            1868 rd_list_add DCCPRLG CINDEX=766,BASER=12,FRAME=184,ENTRY=YES,ARCH=ZARCH,*
                                                                LNAMEADDR=@LNAME766
                                            1869          macro
                                            1870          dccextrn &m
                                            1871          gblc    &$dccext(1000)
                                            1872          gbla    &$dccexti
                                            1873          lcla    &i
                                            1874 &$dccext(&$dccexti+1) setc    '&m'
                                            1875 &i       seta    1
                                            1876 .loop    aif    (&i gt &$dccexti).around
                                            1877          aif    ('&$dccext(&i)' eq '&m').getout
                                            1878 &i       seta    &i+1
                                            1879          ago     .loop
                                            1880 .around  anop
                                            1881 &$dccexti seta &$dccexti+1
                                            1882          extrn  &m
                                            1883 .getout  anop
                                            1884          mend
00001388                                    1885+$eye0044    ds    0d                                                    02-DCCCA
00001388 C4C3C3                             1886+         dc cl3'DCC'                                                    02-DCCCA
0000138B 01                                 1887+         dc xl1'01' format one                                          02-DCCCA
0000138C 00000000                           1888+         dc a(0)                                                        02-DCCCA
00001390 00000000000013FA                   1889+         dc ad(@PER_766)                                                02-DCCCA
00001398 00000000000000B8                   1890+         dc ad(184)                                                     02-DCCCA
000013A0 0000000000000000                   1891+         dc ad(0)                                                       02-DCCCA
000013A8 0000000000001000                   1892+         dc ad(4096)                                                    02-DCCCA
000013B0 20                                 1893+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000013B1 03                                 1894+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000013B2 03                                 1895+         dc al1(3)                                                      02-DCCCA
000013B3 08                                 1896+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page   42 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000013B4 00                                 1897+         dc bl.8'00000000'                                              02-DCCCA
000013B5 000000                             1898+         dc al3(0)                                                      02-DCCCA
000013B8 0000000000001374                   1899+         dc ad(@LNAME766)                                               02-DCCCA
000013C0                                    1900+         ds 0d                                                          02-DCCCA
000013C0 0000000000001388                   1901+         dc ad($eye0044)                                                02-DCCCA
000013C8 0000000000000000                   1902+         dc ad(0)                                                       02-DCCCA
000013D0                                    1903+         ds    0d                                                       01-DCCPR
                                            1904+         entry rd_list_add                                              01-DCCPR
000013D0                                    1905+rd_list_add ds 0d                                                       01-DCCPR
000013D0                                    1906+@REGION_766_1 ds 0h                                                     01-DCCPR
000013D0 EBEC D008 0024          00000008   1907+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000013D6 E3E0 D088 0004          00000088   1908+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000013DC E3C0 D090 0004          00000090   1909+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000013E2 B904 002E                          1910+         lgr   2,14                copy addr of our savearea            01-DCCPR
000013E6 E3B0 C018 0004          00000018   1911+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000013EC A7EB 00B8               000000B8   1912+         aghi  14,184              increase by frame size               01-DCCPR
000013F0 E3E0 C020 0021          00000020   1913+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000013F6 4720 B020               00000020   1914+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000013FA                                    1915+@PER_766 ds    0h                                                       01-DCCPR
000013FA EBDE 2080 0024          00000080   1916+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001400 E3C0 2090 0024          00000090   1917+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001406 B904 00D2                          1918+         lgr   13,2                set real frame pointer               01-DCCPR
0000140A B904 00CF                          1919+         lgr   12,15               set base reg                         01-DCCPR
                        000013D0            1920+         using @REGION_766_1,12                                         01-DCCPR
0000140E B904 0031                          1921          LGR   3,1         ; ptr to parm area
                                            1922 * ******* End of Prologue
                                            1923 * *
                                            1924 * ***           if (rl->rl_cnt == rl->rl_size)
00001412 E320 3000 0004          00000000   1925          LG    2,0(0,3)    ; rl
00001418 58F0 2004               00000004   1926          L     15,4(0,2)   ; offset of rl_cnt in rd_list_s
0000141C 59F0 2000               00000000   1927          C     15,0(0,2)
00001420 4770 C098               00001468   1928          BNE   @L69
                                            1929 * ***                   rd_list_grow(rl, rl->rl_size ? rl->rl_size * 2\
                                            1930 *  : 16);
00001424 E3F0 2000 0012          00000000   1931          LT    15,0(0,2)   ; rl
0000142A 4780 C078               00001448   1932          BZ    @L70
0000142E 58F0 2000               00000000   1933          L     15,0(0,2)   ; rl
00001432 1AFF                               1934          AR    15,15       ; *0x2
00001434 47F0 C07C               0000144C   1935          B     @L71
00001438                                    1936          DS    0D
00001438 000000B8                           1937 @FRAMESIZE_766 DC F'184'
0000143C 00000000
00001440 00000000000007F8                   1938 @lit_766_58 DC AD(rd_list_grow)
00001448                                    1939 @L70     DS    0H
00001448 A7F8 0010               00000010   1940          LHI   15,16       ; 16
0000144C                                    1941 @L71     DS    0H
0000144C B914 00FF                          1942          LGFR  15,15
00001450 E320 D0A8 0024          000000A8   1943          STG   2,168(0,13)
00001456 E3F0 D0B0 0024          000000B0   1944          STG   15,176(0,13)
0000145C 4110 D0A8               000000A8   1945          LA    1,168(0,13)
00001460 E3F0 C070 0004          00001440   1946          LG    15,@lit_766_58 ; rd_list_grow
00001466                                    1947 @@gen_label68 DS    0H
                                                                                                                           Page   43 
  Active Usings: @REGION_766_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001466 05EF                               1948          BALR  14,15
00001468                                    1949 @@gen_label69 DS    0H
00001468                                    1950 @L69     DS    0H
                                            1951 * ***      rl->rl_flags &= ~0x2;
00001468 58F0 2018               00000018   1952          L     15,24(0,2)
0000146C A5F7 FFFD               0000FFFD   1953          NILL  15,65533
00001470 50F0 2018               00000018   1954          ST    15,24(0,2)
                                            1955 * ***      if (elem)
00001474 E3F0 3008 0004          00000008   1956          LG    15,8(0,3)   ; elem
0000147A B902 001F                          1957          LTGR  1,15
0000147E 4780 C0CA               0000149A   1958          BZ    @L72
                                            1959 * ***         rl->rl_elems[rl->rl_cnt] = elem;
00001482 E310 2004 0014          00000004   1960          LGF   1,4(0,2)
00001488 E330 2008 0004          00000008   1961          LG    3,8(0,2)    ; offset of rl_elems in rd_list_s
0000148E EB11 0003 000D          00000003   1962          SLLG  1,1,3(0)    ; *0x8
00001494 E3F1 3000 0024          00000000   1963          STG   15,0(1,3)
0000149A                                    1964 @L72     DS    0H
                                            1965 * ***      return rl->rl_elems[rl->rl_cnt++];
0000149A E3F0 2008 0004          00000008   1966          LG    15,8(0,2)   ; offset of rl_elems in rd_list_s
000014A0 5810 2004               00000004   1967          L     1,4(0,2)
000014A4 1831                               1968          LR    3,1
000014A6 A73A 0001               00000001   1969          AHI   3,1
000014AA 5030 2004               00000004   1970          ST    3,4(0,2)
000014AE B914 0011                          1971          LGFR  1,1
000014B2 EB11 0003 000D          00000003   1972          SLLG  1,1,3(0)    ; *0x8
000014B8 E3F1 F000 0004          00000000   1973          LG    15,0(1,15)
                                            1974 * ***   }
                                            1975 * * **** Start of Epilogue
                                            1976          DCCEPIL
000014BE                                    1977+         ds 0h                                                          01-DCCEP
                                            1978+* Epilog
000014BE D707 D088 D088 00000088 00000088   1979+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000014C4 E3D0 D080 0004          00000080   1980+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000014CA E3C0 D090 0004          00000090   1981+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000014D0 E3B0 C018 0004          00000018   1982+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000014D6 E3C0 B010 0021          00000010   1983+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000014DC E3E0 D008 0004          00000008   1984+         lg  14,8(0,13)          load up return address                 01-DCCEP
000014E2 EB1C D020 0004          00000020   1985+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000014E8 078E                               1986+         bcr 8,14                if same dsab, just return              01-DCCEP
000014EA E3F0 D010 0024          00000010   1987+         stg 15,16(0,13)         save return code                       01-DCCEP
000014F0 E300 D018 0024          00000018   1988+         stg 0,24(0,13)          save more return code                  01-DCCEP
000014F6 E3F0 D090 0004          00000090   1989+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000014FC E3F0 F018 0004          00000018   1990+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001502 47F0 F040               00000040   1991+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1992+* End of Epilog
                                            1993 * * **** End of Epilogue
                                            1994          DROP  12
                                            1995 *
                                            1996 *   DSECT for automatic variables in "rd_list_add"
                                            1997 *      (FUNCTION #766)
                                            1998 *
00000000                00000000 000000A8   1999 @AUTO#rd_list_add DSECT
                                                                                                                           Page   44 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000000                                    2000          DS    XL168
                                            2001 *
00001506                00000000 00003F28   2002 @CODE    CSECT
                                            2003 *
                                            2004 *
                                            2005 *
                                            2006 * ....... start of rd_list_set
                                            2007 rd_list_set ALIAS X'99846D9389A2A36DA285A3'
00001506                                    2008 @LNAME767 DS   0H
00001506 0000000B                           2009          DC    X'0000000B'
0000150A 99846D9389A2A36D                   2010          DC    C'rd_list_set'
00001515 00                                 2011          DC    X'00'
                                            2012 rd_list_set DCCPRLG CINDEX=767,BASER=12,FRAME=200,ENTRY=YES,ARCH=ZARCH,*
                                                                LNAMEADDR=@LNAME767
                                            2013          macro
                                            2014          dccextrn &m
                                            2015          gblc    &$dccext(1000)
                                            2016          gbla    &$dccexti
                                            2017          lcla    &i
                                            2018 &$dccext(&$dccexti+1) setc    '&m'
                                            2019 &i       seta    1
                                            2020 .loop    aif    (&i gt &$dccexti).around
                                            2021          aif    ('&$dccext(&i)' eq '&m').getout
                                            2022 &i       seta    &i+1
                                            2023          ago     .loop
                                            2024 .around  anop
                                            2025 &$dccexti seta &$dccexti+1
                                            2026          extrn  &m
                                            2027 .getout  anop
                                            2028          mend
00001518                                    2029+$eye0047    ds    0d                                                    02-DCCCA
00001518 C4C3C3                             2030+         dc cl3'DCC'                                                    02-DCCCA
0000151B 01                                 2031+         dc xl1'01' format one                                          02-DCCCA
0000151C 00000000                           2032+         dc a(0)                                                        02-DCCCA
00001520 000000000000158A                   2033+         dc ad(@PER_767)                                                02-DCCCA
00001528 00000000000000C8                   2034+         dc ad(200)                                                     02-DCCCA
00001530 0000000000000000                   2035+         dc ad(0)                                                       02-DCCCA
00001538 0000000000001000                   2036+         dc ad(4096)                                                    02-DCCCA
00001540 20                                 2037+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001541 03                                 2038+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001542 03                                 2039+         dc al1(3)                                                      02-DCCCA
00001543 08                                 2040+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001544 00                                 2041+         dc bl.8'00000000'                                              02-DCCCA
00001545 000000                             2042+         dc al3(0)                                                      02-DCCCA
00001548 0000000000001506                   2043+         dc ad(@LNAME767)                                               02-DCCCA
00001550                                    2044+         ds 0d                                                          02-DCCCA
00001550 0000000000001518                   2045+         dc ad($eye0047)                                                02-DCCCA
00001558 0000000000000000                   2046+         dc ad(0)                                                       02-DCCCA
00001560                                    2047+         ds    0d                                                       01-DCCPR
                                            2048+         entry rd_list_set                                              01-DCCPR
00001560                                    2049+rd_list_set ds 0d                                                       01-DCCPR
00001560                                    2050+@REGION_767_1 ds 0h                                                     01-DCCPR
                                                                                                                           Page   45 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001560 EBEC D008 0024          00000008   2051+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001566 E3E0 D088 0004          00000088   2052+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000156C E3C0 D090 0004          00000090   2053+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001572 B904 002E                          2054+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001576 E3B0 C018 0004          00000018   2055+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000157C A7EB 00C8               000000C8   2056+         aghi  14,200              increase by frame size               01-DCCPR
00001580 E3E0 C020 0021          00000020   2057+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001586 4720 B020               00000020   2058+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000158A                                    2059+@PER_767 ds    0h                                                       01-DCCPR
0000158A EBDE 2080 0024          00000080   2060+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001590 E3C0 2090 0024          00000090   2061+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001596 B904 00D2                          2062+         lgr   13,2                set real frame pointer               01-DCCPR
0000159A B904 00CF                          2063+         lgr   12,15               set base reg                         01-DCCPR
                        00001560            2064+         using @REGION_767_1,12                                         01-DCCPR
0000159E B904 0041                          2065          LGR   4,1         ; ptr to parm area
                                            2066 * ******* End of Prologue
                                            2067 * *
                                            2068 * ***           if (idx >= rl->rl_size)
000015A2 E320 4000 0004          00000000   2069          LG    2,0(0,4)    ; rl
000015A8 5830 400C               0000000C   2070          L     3,12(0,4)   ; idx
000015AC 5930 2000               00000000   2071          C     3,0(0,2)
000015B0 4740 C076               000015D6   2072          BL    @L73
                                            2073 * ***                   rd_list_grow(rl, idx+1);
000015B4 E320 D0A8 0024          000000A8   2074          STG   2,168(0,13)
000015BA 18F3                               2075          LR    15,3
000015BC A7FA 0001               00000001   2076          AHI   15,1
000015C0 B914 00FF                          2077          LGFR  15,15
000015C4 E3F0 D0B0 0024          000000B0   2078          STG   15,176(0,13)
000015CA 4110 D0A8               000000A8   2079          LA    1,168(0,13)
000015CE E3F0 C0D8 0004          00001638   2080          LG    15,@lit_767_60 ; rd_list_grow
000015D4                                    2081 @@gen_label72 DS    0H
000015D4 05EF                               2082          BALR  14,15
000015D6                                    2083 @@gen_label73 DS    0H
000015D6                                    2084 @L73     DS    0H
                                            2085 * ***
                                            2086 * ***           if (idx >= rl->rl_cnt) {
000015D6 5930 2004               00000004   2087          C     3,4(0,2)
000015DA 4740 C12E               0000168E   2088          BL    @L74
                                            2089 * ***                   __memset(&rl->rl_elems[rl->rl_cnt],0,sizeof(*r\
                                            2090 * l->rl_elems) * (idx-rl->rl_cnt));
000015DE E3F0 2004 0014          00000004   2091          LGF   15,4(0,2)
000015E4 E310 2008 0004          00000008   2092          LG    1,8(0,2)    ; offset of rl_elems in rd_list_s
000015EA EBFF 0003 000D          00000003   2093          SLLG  15,15,3(0)  ; *0x8
000015F0 1853                               2094          LR    5,3
000015F2 5B50 2004               00000004   2095          S     5,4(0,2)
000015F6 B914 0055                          2096          LGFR  5,5
000015FA EB55 0003 000D          00000003   2097          SLLG  5,5,3(0)    ; *0x8
00001600 411F 1000               00000000   2098          LA    1,0(15,1)
00001604 B902 00F5                          2099          LTGR  15,5
00001608 4780 C120               00001680   2100          BZ    @@gen_label75
0000160C 9200 1000      00000000 00000000   2101          MVI   0(1),0
00001610 A7FB FFFF               0000FFFF   2102          AGHI  15,-1
                                                                                                                           Page   46 
  Active Usings: @REGION_767_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001614                                    2103 @@gen_label76 DS 0H
00001614 B902 00FF                          2104          LTGR  15,15
00001618 4780 C120               00001680   2105          BZ    @@gen_label75
0000161C E3F0 C0E0 0031          00001640   2106          CLGF  15,@lit_767_61
00001622 4720 C108               00001668   2107          BH    @@gen_label78
00001626 B904 005F                          2108          LGR   5,15
0000162A 47F0 C10C               0000166C   2109          B     @@gen_label77
00001630                                    2110          DS    0D
00001630 000000C8                           2111 @FRAMESIZE_767 DC F'200'
00001634 00000000
00001638 00000000000007F8                   2112 @lit_767_60 DC AD(rd_list_grow)
00001640 00000100                           2113 @lit_767_61 DC F'256' 0x00000100
00001644 D200 1001 1000 00000001 00000000   2114 @lit_767_63          MVC 1(1,1),0(1)
0000164A 000000000000
00001650 0000000000000000                   2115 @lit_767_66 DC AD(__assert)
00001658 000000000000402C                   2116 @lit_767_65 DC AD(@strings@)
00001660 0000000000003F28                   2117 @lit_767_64 DC AD(@DATA)
00001668                                    2118 @@gen_label78 DS 0H
00001668 A759 0100               00000100   2119          LGHI  5,256       ; 256
0000166C                                    2120 @@gen_label77 DS 0H
0000166C B90B 00F5                          2121          SLGR  15,5
00001670 A75B FFFF               0000FFFF   2122          AGHI  5,-1
00001674 4450 C0E4               00001644   2123          EX    5,@lit_767_63
00001678 4115 1001               00000001   2124          LA    1,1(5,1)
0000167C 47F0 C0B4               00001614   2125          B     @@gen_label76
00001680                                    2126 @@gen_label75 DS 0H
                                            2127 * ***
                                            2128 * ***                   rl->rl_cnt = idx+1;
00001680 18F3                               2129          LR    15,3
00001682 A7FA 0001               00000001   2130          AHI   15,1
00001686 50F0 2004               00000004   2131          ST    15,4(0,2)   ; offset of rl_cnt in rd_list_s
                                            2132 * ***           } else {
0000168A 47F0 C184               000016E4   2133          B     @L75
0000168E                                    2134 @L74     DS    0H
                                            2135 * ***
                                            2136 * ***                   ((!rl->rl_elems[idx]) ? (void)0 : __assert(__f\
                                            2137 * unc__, "C:\\asgkafka\\librdkafka\\src\\rdlist.c", 160, "!rl->rl_elem\
                                            2138 * s[idx]"));
0000168E B914 00F3                          2139          LGFR  15,3
00001692 E310 2008 0004          00000008   2140          LG    1,8(0,2)    ; offset of rl_elems in rd_list_s
00001698 EBFF 0003 000D          00000003   2141          SLLG  15,15,3(0)  ; *0x8
0000169E E3FF 1000 0002          00000000   2142          LTG   15,0(15,1)
000016A4 4780 C184               000016E4   2143          BZ    @L75
000016A8                                    2144 @L76     DS    0H
000016A8 E3F0 C100 0004          00001660   2145          LG    15,@lit_767_64
000016AE 41F0 F07C               0000007C   2146          LA    15,124(0,15)
000016B2 E3F0 D0A8 0024          000000A8   2147          STG   15,168(0,13)
000016B8 E3F0 C0F8 0004          00001658   2148          LG    15,@lit_767_65
000016BE 4110 F064               00000064   2149          LA    1,100(0,15)
000016C2 E310 D0B0 0024          000000B0   2150          STG   1,176(0,13)
000016C8 E548 D0B8 00A0          000000B8   2151          MVGHI 184(13),160
000016CE 41F0 F0D8               000000D8   2152          LA    15,216(0,15)
                                                                                                                           Page   47 
  Active Usings: @REGION_767_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000016D2 E3F0 D0C0 0024          000000C0   2153          STG   15,192(0,13)
000016D8 4110 D0A8               000000A8   2154          LA    1,168(0,13)
000016DC E3F0 C0F0 0004          00001650   2155          LG    15,@lit_767_66 ; __assert
000016E2                                    2156 @@gen_label80 DS    0H
000016E2 05EF                               2157          BALR  14,15
000016E4                                    2158 @@gen_label81 DS    0H
000016E4                                    2159 @L77     DS    0H
                                            2160 * ***           }
000016E4                                    2161 @L75     DS    0H
                                            2162 * ***
                                            2163 * ***           rl->rl_elems[idx] = ptr;
000016E4 B914 00F3                          2164          LGFR  15,3
000016E8 E310 2008 0004          00000008   2165          LG    1,8(0,2)    ; offset of rl_elems in rd_list_s
000016EE EBFF 0003 000D          00000003   2166          SLLG  15,15,3(0)  ; *0x8
000016F4 E320 4010 0004          00000010   2167          LG    2,16(0,4)   ; ptr
000016FA E32F 1000 0024          00000000   2168          STG   2,0(15,1)
                                            2169 * ***   }
00001700                                    2170 @ret_lab_767 DS 0H
                                            2171 * * **** Start of Epilogue
                                            2172          DCCEPIL
00001700                                    2173+         ds 0h                                                          01-DCCEP
                                            2174+* Epilog
00001700 D707 D088 D088 00000088 00000088   2175+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001706 E3D0 D080 0004          00000080   2176+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000170C E3C0 D090 0004          00000090   2177+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001712 E3B0 C018 0004          00000018   2178+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001718 E3C0 B010 0021          00000010   2179+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000171E E3E0 D008 0004          00000008   2180+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001724 EB1C D020 0004          00000020   2181+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000172A 078E                               2182+         bcr 8,14                if same dsab, just return              01-DCCEP
0000172C E3F0 D010 0024          00000010   2183+         stg 15,16(0,13)         save return code                       01-DCCEP
00001732 E300 D018 0024          00000018   2184+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001738 E3F0 D090 0004          00000090   2185+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000173E E3F0 F018 0004          00000018   2186+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001744 47F0 F040               00000040   2187+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2188+* End of Epilog
                                            2189 * * **** End of Epilogue
                                            2190          DROP  12
                                            2191 *
                                            2192 *   DSECT for automatic variables in "rd_list_set"
                                            2193 *      (FUNCTION #767)
                                            2194 *
00000000                00000000 000000A8   2195 @AUTO#rd_list_set DSECT
00000000                                    2196          DS    XL168
                                            2197 *
00001748                00000000 00003F28   2198 @CODE    CSECT
                                            2199 *
                                            2200 *
                                            2201 *
                                            2202 * ....... start of rd_list_remove_elem
                                            2203 rd_list_remove_elem ALIAS X'99846D9389A2A36D99859496A5856D85938594'
00001748                                    2204 @LNAME770 DS   0H
                                                                                                                           Page   48 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001748 00000013                           2205          DC    X'00000013'
0000174C 99846D9389A2A36D                   2206          DC    C'rd_list_remove_elem'
0000175F 00                                 2207          DC    X'00'
                                            2208 rd_list_remove_elem DCCPRLG CINDEX=770,BASER=12,FRAME=200,ENTRY=YES,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME770
                                            2209          macro
                                            2210          dccextrn &m
                                            2211          gblc    &$dccext(1000)
                                            2212          gbla    &$dccexti
                                            2213          lcla    &i
                                            2214 &$dccext(&$dccexti+1) setc    '&m'
                                            2215 &i       seta    1
                                            2216 .loop    aif    (&i gt &$dccexti).around
                                            2217          aif    ('&$dccext(&i)' eq '&m').getout
                                            2218 &i       seta    &i+1
                                            2219          ago     .loop
                                            2220 .around  anop
                                            2221 &$dccexti seta &$dccexti+1
                                            2222          extrn  &m
                                            2223 .getout  anop
                                            2224          mend
00001760                                    2225+$eye0050    ds    0d                                                    02-DCCCA
00001760 C4C3C3                             2226+         dc cl3'DCC'                                                    02-DCCCA
00001763 01                                 2227+         dc xl1'01' format one                                          02-DCCCA
00001764 00000000                           2228+         dc a(0)                                                        02-DCCCA
00001768 00000000000017D2                   2229+         dc ad(@PER_770)                                                02-DCCCA
00001770 00000000000000C8                   2230+         dc ad(200)                                                     02-DCCCA
00001778 0000000000000000                   2231+         dc ad(0)                                                       02-DCCCA
00001780 0000000000001000                   2232+         dc ad(4096)                                                    02-DCCCA
00001788 20                                 2233+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001789 03                                 2234+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000178A 03                                 2235+         dc al1(3)                                                      02-DCCCA
0000178B 08                                 2236+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000178C 00                                 2237+         dc bl.8'00000000'                                              02-DCCCA
0000178D 000000                             2238+         dc al3(0)                                                      02-DCCCA
00001790 0000000000001748                   2239+         dc ad(@LNAME770)                                               02-DCCCA
00001798                                    2240+         ds 0d                                                          02-DCCCA
00001798 0000000000001760                   2241+         dc ad($eye0050)                                                02-DCCCA
000017A0 0000000000000000                   2242+         dc ad(0)                                                       02-DCCCA
000017A8                                    2243+         ds    0d                                                       01-DCCPR
                                            2244+         entry rd_list_remove_elem                                      01-DCCPR
000017A8                                    2245+rd_list_remove_elem ds 0d                                               01-DCCPR
000017A8                                    2246+@REGION_770_1 ds 0h                                                     01-DCCPR
000017A8 EBEC D008 0024          00000008   2247+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000017AE E3E0 D088 0004          00000088   2248+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000017B4 E3C0 D090 0004          00000090   2249+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000017BA B904 002E                          2250+         lgr   2,14                copy addr of our savearea            01-DCCPR
000017BE E3B0 C018 0004          00000018   2251+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000017C4 A7EB 00C8               000000C8   2252+         aghi  14,200              increase by frame size               01-DCCPR
000017C8 E3E0 C020 0021          00000020   2253+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000017CE 4720 B020               00000020   2254+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000017D2                                    2255+@PER_770 ds    0h                                                       01-DCCPR
                                                                                                                           Page   49 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000017D2 EBDE 2080 0024          00000080   2256+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000017D8 E3C0 2090 0024          00000090   2257+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000017DE B904 00D2                          2258+         lgr   13,2                set real frame pointer               01-DCCPR
000017E2 B904 00CF                          2259+         lgr   12,15               set base reg                         01-DCCPR
                        000017A8            2260+         using @REGION_770_1,12                                         01-DCCPR
                                            2261 * ******* End of Prologue
                                            2262 * *
                                            2263 * ***           ((idx < rl->rl_cnt) ? (void)0 : __assert(__func__, "C:\
                                            2264 * \\asgkafka\\librdkafka\\src\\rdlist.c", 169, "idx < rl->rl_cnt"));
000017E6 E320 1000 0004          00000000   2265          LG    2,0(0,1)    ; rl
000017EC 5830 100C               0000000C   2266          L     3,12(0,1)   ; idx
000017F0 5930 2004               00000004   2267          C     3,4(0,2)
000017F4 4740 C08C               00001834   2268          BL    @L79
000017F8                                    2269 @L78     DS    0H
000017F8 E3F0 C168 0004          00001910   2270          LG    15,@lit_770_68
000017FE 41F0 F088               00000088   2271          LA    15,136(0,15)
00001802 E3F0 D0A8 0024          000000A8   2272          STG   15,168(0,13)
00001808 E3F0 C160 0004          00001908   2273          LG    15,@lit_770_69
0000180E 4110 F064               00000064   2274          LA    1,100(0,15)
00001812 E310 D0B0 0024          000000B0   2275          STG   1,176(0,13)
00001818 E548 D0B8 00A9          000000B8   2276          MVGHI 184(13),169
0000181E 41F0 F0EC               000000EC   2277          LA    15,236(0,15)
00001822 E3F0 D0C0 0024          000000C0   2278          STG   15,192(0,13)
00001828 4110 D0A8               000000A8   2279          LA    1,168(0,13)
0000182C E3F0 C158 0004          00001900   2280          LG    15,@lit_770_70 ; __assert
00001832                                    2281 @@gen_label83 DS    0H
00001832 05EF                               2282          BALR  14,15
00001834                                    2283 @@gen_label84 DS    0H
00001834                                    2284 @L79     DS    0H
                                            2285 * ***
                                            2286 * ***           if (idx + 1 < rl->rl_cnt)
00001834 18F3                               2287          LR    15,3
00001836 A7FA 0001               00000001   2288          AHI   15,1
0000183A 59F0 2004               00000004   2289          C     15,4(0,2)
0000183E 47B0 C0FA               000018A2   2290          BNL   @L80
                                            2291 * ***                   memmove(&rl->rl_elems[idx],
                                            2292 * ***                           &rl->rl_elems[idx+1],
                                            2293 * ***                           sizeof(*rl->rl_elems) * (rl->rl_cnt - \
                                            2294 * (idx+1)));
00001842 B914 00F3                          2295          LGFR  15,3
00001846 E310 2008 0004          00000008   2296          LG    1,8(0,2)    ; offset of rl_elems in rd_list_s
0000184C EBFF 0003 000D          00000003   2297          SLLG  15,15,3(0)  ; *0x8
00001852 41FF 1000               00000000   2298          LA    15,0(15,1)
00001856 E3F0 D0A8 0024          000000A8   2299          STG   15,168(0,13)
0000185C 18F3                               2300          LR    15,3
0000185E A7FA 0001               00000001   2301          AHI   15,1
00001862 B914 00FF                          2302          LGFR  15,15
00001866 E310 2008 0004          00000008   2303          LG    1,8(0,2)    ; offset of rl_elems in rd_list_s
0000186C EBFF 0003 000D          00000003   2304          SLLG  15,15,3(0)  ; *0x8
00001872 41FF 1000               00000000   2305          LA    15,0(15,1)
00001876 E3F0 D0B0 0024          000000B0   2306          STG   15,176(0,13)
0000187C 58F0 2004               00000004   2307          L     15,4(0,2)   ; offset of rl_cnt in rd_list_s
                                                                                                                           Page   50 
  Active Usings: @REGION_770_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001880 A73A 0001               00000001   2308          AHI   3,1
00001884 1BF3                               2309          SR    15,3
00001886 B914 00FF                          2310          LGFR  15,15
0000188A EBFF 0003 000D          00000003   2311          SLLG  15,15,3(0)  ; *0x8
00001890 E3F0 D0B8 0024          000000B8   2312          STG   15,184(0,13)
00001896 4110 D0A8               000000A8   2313          LA    1,168(0,13)
0000189A E3F0 C170 0004          00001918   2314          LG    15,@lit_770_71 ; memmove
000018A0                                    2315 @@gen_label86 DS    0H
000018A0 05EF                               2316          BALR  14,15
000018A2                                    2317 @@gen_label87 DS    0H
000018A2                                    2318 @L80     DS    0H
                                            2319 * ***           rl->rl_cnt--;
000018A2 58F0 2004               00000004   2320          L     15,4(0,2)
000018A6 A7FA FFFF               0000FFFF   2321          AHI   15,-1
000018AA 50F0 2004               00000004   2322          ST    15,4(0,2)
                                            2323 * ***   }
000018AE                                    2324 @ret_lab_770 DS 0H
                                            2325 * * **** Start of Epilogue
                                            2326          DCCEPIL
000018AE                                    2327+         ds 0h                                                          01-DCCEP
                                            2328+* Epilog
000018AE D707 D088 D088 00000088 00000088   2329+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000018B4 E3D0 D080 0004          00000080   2330+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000018BA E3C0 D090 0004          00000090   2331+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000018C0 E3B0 C018 0004          00000018   2332+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000018C6 E3C0 B010 0021          00000010   2333+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000018CC E3E0 D008 0004          00000008   2334+         lg  14,8(0,13)          load up return address                 01-DCCEP
000018D2 EB1C D020 0004          00000020   2335+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000018D8 078E                               2336+         bcr 8,14                if same dsab, just return              01-DCCEP
000018DA E3F0 D010 0024          00000010   2337+         stg 15,16(0,13)         save return code                       01-DCCEP
000018E0 E300 D018 0024          00000018   2338+         stg 0,24(0,13)          save more return code                  01-DCCEP
000018E6 E3F0 D090 0004          00000090   2339+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000018EC E3F0 F018 0004          00000018   2340+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000018F2 47F0 F040               00000040   2341+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2342+* End of Epilog
                                            2343 * * **** End of Epilogue
000018F8                                    2344          DS    0D
000018F8 000000C8                           2345 @FRAMESIZE_770 DC F'200'
000018FC 00000000
00001900 0000000000000000                   2346 @lit_770_70 DC AD(__assert)
00001908 000000000000402C                   2347 @lit_770_69 DC AD(@strings@)
00001910 0000000000003F28                   2348 @lit_770_68 DC AD(@DATA)
00001918 0000000000000000                   2349 @lit_770_71 DC AD(memmove)
                                            2350          DROP  12
                                            2351 *
                                            2352 *   DSECT for automatic variables in "rd_list_remove_elem"
                                            2353 *      (FUNCTION #770)
                                            2354 *
00000000                00000000 000000A8   2355 @AUTO#rd_list_remove_elem DSECT
00000000                                    2356          DS    XL168
                                            2357 *
00001920                00000000 00003F28   2358 @CODE    CSECT
                                                                                                                           Page   51 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2359 *
                                            2360 *
                                            2361 *
                                            2362 * ....... start of rd_list_remove
                                            2363 rd_list_remove ALIAS X'99846D9389A2A36D99859496A585'
00001920                                    2364 @LNAME768 DS   0H
00001920 0000000E                           2365          DC    X'0000000E'
00001924 99846D9389A2A36D                   2366          DC    C'rd_list_remove'
00001932 00                                 2367          DC    X'00'
                                            2368 rd_list_remove DCCPRLG CINDEX=768,BASER=12,FRAME=192,ENTRY=YES,ARCH=ZAR*
                                                                CH,LNAMEADDR=@LNAME768
                                            2369          macro
                                            2370          dccextrn &m
                                            2371          gblc    &$dccext(1000)
                                            2372          gbla    &$dccexti
                                            2373          lcla    &i
                                            2374 &$dccext(&$dccexti+1) setc    '&m'
                                            2375 &i       seta    1
                                            2376 .loop    aif    (&i gt &$dccexti).around
                                            2377          aif    ('&$dccext(&i)' eq '&m').getout
                                            2378 &i       seta    &i+1
                                            2379          ago     .loop
                                            2380 .around  anop
                                            2381 &$dccexti seta &$dccexti+1
                                            2382          extrn  &m
                                            2383 .getout  anop
                                            2384          mend
00001938                                    2385+$eye0053    ds    0d                                                    02-DCCCA
00001938 C4C3C3                             2386+         dc cl3'DCC'                                                    02-DCCCA
0000193B 01                                 2387+         dc xl1'01' format one                                          02-DCCCA
0000193C 00000000                           2388+         dc a(0)                                                        02-DCCCA
00001940 00000000000019AA                   2389+         dc ad(@PER_768)                                                02-DCCCA
00001948 00000000000000C0                   2390+         dc ad(192)                                                     02-DCCCA
00001950 0000000000000000                   2391+         dc ad(0)                                                       02-DCCCA
00001958 0000000000001000                   2392+         dc ad(4096)                                                    02-DCCCA
00001960 20                                 2393+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001961 03                                 2394+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001962 03                                 2395+         dc al1(3)                                                      02-DCCCA
00001963 08                                 2396+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001964 00                                 2397+         dc bl.8'00000000'                                              02-DCCCA
00001965 000000                             2398+         dc al3(0)                                                      02-DCCCA
00001968 0000000000001920                   2399+         dc ad(@LNAME768)                                               02-DCCCA
00001970                                    2400+         ds 0d                                                          02-DCCCA
00001970 0000000000001938                   2401+         dc ad($eye0053)                                                02-DCCCA
00001978 0000000000000000                   2402+         dc ad(0)                                                       02-DCCCA
00001980                                    2403+         ds    0d                                                       01-DCCPR
                                            2404+         entry rd_list_remove                                           01-DCCPR
00001980                                    2405+rd_list_remove ds 0d                                                    01-DCCPR
00001980                                    2406+@REGION_768_1 ds 0h                                                     01-DCCPR
00001980 EBEC D008 0024          00000008   2407+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001986 E3E0 D088 0004          00000088   2408+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000198C E3C0 D090 0004          00000090   2409+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
                                                                                                                           Page   52 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001992 B904 002E                          2410+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001996 E3B0 C018 0004          00000018   2411+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000199C A7EB 00C0               000000C0   2412+         aghi  14,192              increase by frame size               01-DCCPR
000019A0 E3E0 C020 0021          00000020   2413+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000019A6 4720 B020               00000020   2414+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000019AA                                    2415+@PER_768 ds    0h                                                       01-DCCPR
000019AA EBDE 2080 0024          00000080   2416+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000019B0 E3C0 2090 0024          00000090   2417+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000019B6 B904 00D2                          2418+         lgr   13,2                set real frame pointer               01-DCCPR
000019BA B904 00CF                          2419+         lgr   12,15               set base reg                         01-DCCPR
                        00001980            2420+         using @REGION_768_1,12                                         01-DCCPR
000019BE B904 0041                          2421          LGR   4,1         ; ptr to parm area
                                            2422 * ******* End of Prologue
                                            2423 * *
                                            2424 * ***           void *elem;
                                            2425 * ***           int i;
                                            2426 * ***
                                            2427 * ***           for (i = 0 ; (elem = rd_list_elem(rl, i)) ; i++) {
000019C2 A728 0000               00000000   2428          LHI   2,0         ; 0
000019C6 47F0 C0A4               00001A24   2429          B     @L82
000019D0                                    2430          DS    0D
000019D0 000000C0                           2431 @FRAMESIZE_768 DC F'192'
000019D4 00000000
000019D8 00000000000017A8                   2432 @lit_768_74 DC AD(rd_list_remove_elem)
000019E0 0000000000002740                   2433 @lit_768_75 DC AD(rd_list_elem)
000019E8                                    2434 @L81     DS    0H
                                            2435 * ***                   if (elem == match_elem) {
000019E8 E3F0 4008 0004          00000008   2436          LG    15,8(0,4)   ; match_elem
000019EE B920 003F                          2437          CGR   3,15
000019F2 4770 C0A0               00001A20   2438          BNE   @L85
                                            2439 * ***                           rd_list_remove_elem(rl, i);
000019F6 E3F0 4000 0004          00000000   2440          LG    15,0(0,4)   ; rl
000019FC E3F0 D0B0 0024          000000B0   2441          STG   15,176(0,13)
00001A02 B914 00F2                          2442          LGFR  15,2
00001A06 E3F0 D0B8 0024          000000B8   2443          STG   15,184(0,13)
00001A0C 4110 D0B0               000000B0   2444          LA    1,176(0,13)
00001A10 E3F0 C058 0004          000019D8   2445          LG    15,@lit_768_74 ; rd_list_remove_elem
00001A16                                    2446 @@gen_label89 DS    0H
00001A16 05EF                               2447          BALR  14,15
00001A18                                    2448 @@gen_label90 DS    0H
                                            2449 * ***                           return elem;
00001A18 B904 00F3                          2450          LGR   15,3
00001A1C 47F0 C0D6               00001A56   2451          B     @ret_lab_768
                                            2452 * ***                   }
00001A20                                    2453 @L85     DS    0H
                                            2454 * ***           }
00001A20 A72A 0001               00000001   2455          AHI   2,1
00001A24                                    2456 @L82     DS    0H
00001A24 E3F0 4000 0004          00000000   2457          LG    15,0(0,4)   ; rl
00001A2A E3F0 D0B0 0024          000000B0   2458          STG   15,176(0,13)
00001A30 B914 00F2                          2459          LGFR  15,2
00001A34 E3F0 D0B8 0024          000000B8   2460          STG   15,184(0,13)
                                                                                                                           Page   53 
  Active Usings: @REGION_768_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001A3A 4110 D0B0               000000B0   2461          LA    1,176(0,13)
00001A3E E3F0 C060 0004          000019E0   2462          LG    15,@lit_768_75 ; rd_list_elem
00001A44                                    2463 @@gen_label91 DS    0H
00001A44 05EF                               2464          BALR  14,15
00001A46                                    2465 @@gen_label92 DS    0H
00001A46 B904 003F                          2466          LGR   3,15
00001A4A B902 00F3                          2467          LTGR  15,3
00001A4E 4770 C068               000019E8   2468          BNZ   @L81
                                            2469 * ***
                                            2470 * ***           return ((void *)0);
00001A52 A7F9 0000               00000000   2471          LGHI  15,0        ; 0
                                            2472 * ***   }
00001A56                                    2473 @ret_lab_768 DS 0H
                                            2474 * * **** Start of Epilogue
                                            2475          DCCEPIL
00001A56                                    2476+         ds 0h                                                          01-DCCEP
                                            2477+* Epilog
00001A56 D707 D088 D088 00000088 00000088   2478+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001A5C E3D0 D080 0004          00000080   2479+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001A62 E3C0 D090 0004          00000090   2480+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001A68 E3B0 C018 0004          00000018   2481+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001A6E E3C0 B010 0021          00000010   2482+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001A74 E3E0 D008 0004          00000008   2483+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001A7A EB1C D020 0004          00000020   2484+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001A80 078E                               2485+         bcr 8,14                if same dsab, just return              01-DCCEP
00001A82 E3F0 D010 0024          00000010   2486+         stg 15,16(0,13)         save return code                       01-DCCEP
00001A88 E300 D018 0024          00000018   2487+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001A8E E3F0 D090 0004          00000090   2488+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001A94 E3F0 F018 0004          00000018   2489+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001A9A 47F0 F040               00000040   2490+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2491+* End of Epilog
                                            2492 * * **** End of Epilogue
                                            2493          DROP  12
                                            2494 *
                                            2495 *   DSECT for automatic variables in "rd_list_remove"
                                            2496 *      (FUNCTION #768)
                                            2497 *
00000000                00000000 000000AC   2498 @AUTO#rd_list_remove DSECT
00000000                                    2499          DS    XL168
000000A8                                    2500 rd_list_remove#i#0 DS 1F   ; i
                                            2501 *
00001A9E                00000000 00003F28   2502 @CODE    CSECT
                                            2503 *
                                            2504 *
                                            2505 *
                                            2506 * ....... start of rd_list_remove_cmp
                                            2507 rd_list_remove_cmp ALIAS X'99846D9389A2A36D99859496A5856D839497'
00001A9E                                    2508 @LNAME769 DS   0H
00001A9E 00000012                           2509          DC    X'00000012'
00001AA2 99846D9389A2A36D                   2510          DC    C'rd_list_remove_cmp'
00001AB4 00                                 2511          DC    X'00'
                                            2512 rd_list_remove_cmp DCCPRLG CINDEX=769,BASER=12,FRAME=192,ENTRY=YES,ARCH*
                                                                                                                           Page   54 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                                                =ZARCH,LNAMEADDR=@LNAME769
                                            2513          macro
                                            2514          dccextrn &m
                                            2515          gblc    &$dccext(1000)
                                            2516          gbla    &$dccexti
                                            2517          lcla    &i
                                            2518 &$dccext(&$dccexti+1) setc    '&m'
                                            2519 &i       seta    1
                                            2520 .loop    aif    (&i gt &$dccexti).around
                                            2521          aif    ('&$dccext(&i)' eq '&m').getout
                                            2522 &i       seta    &i+1
                                            2523          ago     .loop
                                            2524 .around  anop
                                            2525 &$dccexti seta &$dccexti+1
                                            2526          extrn  &m
                                            2527 .getout  anop
                                            2528          mend
00001AB8                                    2529+$eye0056    ds    0d                                                    02-DCCCA
00001AB8 C4C3C3                             2530+         dc cl3'DCC'                                                    02-DCCCA
00001ABB 01                                 2531+         dc xl1'01' format one                                          02-DCCCA
00001ABC 00000000                           2532+         dc a(0)                                                        02-DCCCA
00001AC0 0000000000001B2A                   2533+         dc ad(@PER_769)                                                02-DCCCA
00001AC8 00000000000000C0                   2534+         dc ad(192)                                                     02-DCCCA
00001AD0 0000000000000000                   2535+         dc ad(0)                                                       02-DCCCA
00001AD8 0000000000001000                   2536+         dc ad(4096)                                                    02-DCCCA
00001AE0 20                                 2537+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001AE1 03                                 2538+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001AE2 03                                 2539+         dc al1(3)                                                      02-DCCCA
00001AE3 08                                 2540+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001AE4 00                                 2541+         dc bl.8'00000000'                                              02-DCCCA
00001AE5 000000                             2542+         dc al3(0)                                                      02-DCCCA
00001AE8 0000000000001A9E                   2543+         dc ad(@LNAME769)                                               02-DCCCA
00001AF0                                    2544+         ds 0d                                                          02-DCCCA
00001AF0 0000000000001AB8                   2545+         dc ad($eye0056)                                                02-DCCCA
00001AF8 0000000000000000                   2546+         dc ad(0)                                                       02-DCCCA
00001B00                                    2547+         ds    0d                                                       01-DCCPR
                                            2548+         entry rd_list_remove_cmp                                       01-DCCPR
00001B00                                    2549+rd_list_remove_cmp ds 0d                                                01-DCCPR
00001B00                                    2550+@REGION_769_1 ds 0h                                                     01-DCCPR
00001B00 EBEC D008 0024          00000008   2551+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001B06 E3E0 D088 0004          00000088   2552+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001B0C E3C0 D090 0004          00000090   2553+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001B12 B904 002E                          2554+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001B16 E3B0 C018 0004          00000018   2555+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001B1C A7EB 00C0               000000C0   2556+         aghi  14,192              increase by frame size               01-DCCPR
00001B20 E3E0 C020 0021          00000020   2557+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001B26 4720 B020               00000020   2558+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001B2A                                    2559+@PER_769 ds    0h                                                       01-DCCPR
00001B2A EBDE 2080 0024          00000080   2560+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001B30 E3C0 2090 0024          00000090   2561+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001B36 B904 00D2                          2562+         lgr   13,2                set real frame pointer               01-DCCPR
00001B3A B904 00CF                          2563+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   55 
  Active Usings: @REGION_769_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                        00001B00            2564+         using @REGION_769_1,12                                         01-DCCPR
00001B3E B904 0041                          2565          LGR   4,1         ; ptr to parm area
                                            2566 * ******* End of Prologue
                                            2567 * *
                                            2568 * ***           void *elem;
                                            2569 * ***           int i;
                                            2570 * ***
                                            2571 * ***           for (i = 0 ; (elem = rd_list_elem(rl, i)) ; i++) {
00001B42 A728 0000               00000000   2572          LHI   2,0         ; 0
00001B46 47F0 C0C2               00001BC2   2573          B     @L87
00001B50                                    2574          DS    0D
00001B50 000000C0                           2575 @FRAMESIZE_769 DC F'192'
00001B54 00000000
00001B58 00000000000017A8                   2576 @lit_769_79 DC AD(rd_list_remove_elem)
00001B60 0000000000002740                   2577 @lit_769_80 DC AD(rd_list_elem)
00001B68                                    2578 @L86     DS    0H
                                            2579 * ***                   if (elem == match_elem ||
00001B68 E3F0 4008 0004          00000008   2580          LG    15,8(0,4)   ; match_elem
00001B6E B920 003F                          2581          CGR   3,15
00001B72 4780 C094               00001B94   2582          BE    @L91
                                            2583 * ***                       !cmp(elem, match_elem)) {
00001B76 E330 D0B0 0024          000000B0   2584          STG   3,176(0,13)
00001B7C E3F0 D0B8 0024          000000B8   2585          STG   15,184(0,13)
00001B82 E3F0 4010 0004          00000010   2586          LG    15,16(0,4)  ; cmp
00001B88 4110 D0B0               000000B0   2587          LA    1,176(0,13)
00001B8C                                    2588 @@gen_label95 DS    0H
00001B8C 05EF                               2589          BALR  14,15
00001B8E                                    2590 @@gen_label96 DS    0H
00001B8E 12FF                               2591          LTR   15,15
00001B90 4770 C0BE               00001BBE   2592          BNZ   @L90
00001B94                                    2593 @L91     DS    0H
                                            2594 * ***                           rd_list_remove_elem(rl, i);
00001B94 E3F0 4000 0004          00000000   2595          LG    15,0(0,4)   ; rl
00001B9A E3F0 D0B0 0024          000000B0   2596          STG   15,176(0,13)
00001BA0 B914 00F2                          2597          LGFR  15,2
00001BA4 E3F0 D0B8 0024          000000B8   2598          STG   15,184(0,13)
00001BAA 4110 D0B0               000000B0   2599          LA    1,176(0,13)
00001BAE E3F0 C058 0004          00001B58   2600          LG    15,@lit_769_79 ; rd_list_remove_elem
00001BB4                                    2601 @@gen_label98 DS    0H
00001BB4 05EF                               2602          BALR  14,15
00001BB6                                    2603 @@gen_label99 DS    0H
                                            2604 * ***                           return elem;
00001BB6 B904 00F3                          2605          LGR   15,3
00001BBA 47F0 C0F4               00001BF4   2606          B     @ret_lab_769
                                            2607 * ***                   }
00001BBE                                    2608 @L90     DS    0H
                                            2609 * ***           }
00001BBE A72A 0001               00000001   2610          AHI   2,1
00001BC2                                    2611 @L87     DS    0H
00001BC2 E3F0 4000 0004          00000000   2612          LG    15,0(0,4)   ; rl
00001BC8 E3F0 D0B0 0024          000000B0   2613          STG   15,176(0,13)
00001BCE B914 00F2                          2614          LGFR  15,2
                                                                                                                           Page   56 
  Active Usings: @REGION_769_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001BD2 E3F0 D0B8 0024          000000B8   2615          STG   15,184(0,13)
00001BD8 4110 D0B0               000000B0   2616          LA    1,176(0,13)
00001BDC E3F0 C060 0004          00001B60   2617          LG    15,@lit_769_80 ; rd_list_elem
00001BE2                                    2618 @@gen_label100 DS    0H
00001BE2 05EF                               2619          BALR  14,15
00001BE4                                    2620 @@gen_label101 DS    0H
00001BE4 B904 003F                          2621          LGR   3,15
00001BE8 B902 00F3                          2622          LTGR  15,3
00001BEC 4770 C068               00001B68   2623          BNZ   @L86
                                            2624 * ***
                                            2625 * ***           return ((void *)0);
00001BF0 A7F9 0000               00000000   2626          LGHI  15,0        ; 0
                                            2627 * ***   }
00001BF4                                    2628 @ret_lab_769 DS 0H
                                            2629 * * **** Start of Epilogue
                                            2630          DCCEPIL
00001BF4                                    2631+         ds 0h                                                          01-DCCEP
                                            2632+* Epilog
00001BF4 D707 D088 D088 00000088 00000088   2633+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001BFA E3D0 D080 0004          00000080   2634+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001C00 E3C0 D090 0004          00000090   2635+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001C06 E3B0 C018 0004          00000018   2636+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001C0C E3C0 B010 0021          00000010   2637+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001C12 E3E0 D008 0004          00000008   2638+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001C18 EB1C D020 0004          00000020   2639+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001C1E 078E                               2640+         bcr 8,14                if same dsab, just return              01-DCCEP
00001C20 E3F0 D010 0024          00000010   2641+         stg 15,16(0,13)         save return code                       01-DCCEP
00001C26 E300 D018 0024          00000018   2642+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001C2C E3F0 D090 0004          00000090   2643+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001C32 E3F0 F018 0004          00000018   2644+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001C38 47F0 F040               00000040   2645+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2646+* End of Epilog
                                            2647 * * **** End of Epilogue
                                            2648          DROP  12
                                            2649 *
                                            2650 *   DSECT for automatic variables in "rd_list_remove_cmp"
                                            2651 *      (FUNCTION #769)
                                            2652 *
00000000                00000000 000000AC   2653 @AUTO#rd_list_remove_cmp DSECT
00000000                                    2654          DS    XL168
000000A8                                    2655 rd_list_remove_cmp#i#0 DS 1F ; i
                                            2656 *
00001C3C                00000000 00003F28   2657 @CODE    CSECT
                                            2658 *
                                            2659 *
                                            2660 *
                                            2661 * ....... start of rd_list_remove_multi_cmp
                                            2662 rd_list_remove_multi_cmp ALIAS X'99846D9389A2A36D99859496A5856D94A493A3*
                                                                896D839497'
00001C3C                                    2663 @LNAME772 DS   0H
00001C3C 00000018                           2664          DC    X'00000018'
00001C40 99846D9389A2A36D                   2665          DC    C'rd_list_remove_multi_cmp'
                                                                                                                           Page   57 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001C58 00                                 2666          DC    X'00'
                                            2667 rd_list_remove_multi_cmp DCCPRLG CINDEX=772,BASER=12,FRAME=192,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME772
                                            2668          macro
                                            2669          dccextrn &m
                                            2670          gblc    &$dccext(1000)
                                            2671          gbla    &$dccexti
                                            2672          lcla    &i
                                            2673 &$dccext(&$dccexti+1) setc    '&m'
                                            2674 &i       seta    1
                                            2675 .loop    aif    (&i gt &$dccexti).around
                                            2676          aif    ('&$dccext(&i)' eq '&m').getout
                                            2677 &i       seta    &i+1
                                            2678          ago     .loop
                                            2679 .around  anop
                                            2680 &$dccexti seta &$dccexti+1
                                            2681          extrn  &m
                                            2682 .getout  anop
                                            2683          mend
00001C60                                    2684+$eye0059    ds    0d                                                    02-DCCCA
00001C60 C4C3C3                             2685+         dc cl3'DCC'                                                    02-DCCCA
00001C63 01                                 2686+         dc xl1'01' format one                                          02-DCCCA
00001C64 00000000                           2687+         dc a(0)                                                        02-DCCCA
00001C68 0000000000001CD2                   2688+         dc ad(@PER_772)                                                02-DCCCA
00001C70 00000000000000C0                   2689+         dc ad(192)                                                     02-DCCCA
00001C78 0000000000000000                   2690+         dc ad(0)                                                       02-DCCCA
00001C80 0000000000001000                   2691+         dc ad(4096)                                                    02-DCCCA
00001C88 20                                 2692+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001C89 03                                 2693+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001C8A 03                                 2694+         dc al1(3)                                                      02-DCCCA
00001C8B 08                                 2695+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001C8C 00                                 2696+         dc bl.8'00000000'                                              02-DCCCA
00001C8D 000000                             2697+         dc al3(0)                                                      02-DCCCA
00001C90 0000000000001C3C                   2698+         dc ad(@LNAME772)                                               02-DCCCA
00001C98                                    2699+         ds 0d                                                          02-DCCCA
00001C98 0000000000001C60                   2700+         dc ad($eye0059)                                                02-DCCCA
00001CA0 0000000000000000                   2701+         dc ad(0)                                                       02-DCCCA
00001CA8                                    2702+         ds    0d                                                       01-DCCPR
                                            2703+         entry rd_list_remove_multi_cmp                                 01-DCCPR
00001CA8                                    2704+rd_list_remove_multi_cmp ds 0d                                          01-DCCPR
00001CA8                                    2705+@REGION_772_1 ds 0h                                                     01-DCCPR
00001CA8 EBEC D008 0024          00000008   2706+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001CAE E3E0 D088 0004          00000088   2707+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001CB4 E3C0 D090 0004          00000090   2708+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001CBA B904 002E                          2709+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001CBE E3B0 C018 0004          00000018   2710+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001CC4 A7EB 00C0               000000C0   2711+         aghi  14,192              increase by frame size               01-DCCPR
00001CC8 E3E0 C020 0021          00000020   2712+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001CCE 4720 B020               00000020   2713+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001CD2                                    2714+@PER_772 ds    0h                                                       01-DCCPR
00001CD2 EBDE 2080 0024          00000080   2715+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001CD8 E3C0 2090 0024          00000090   2716+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page   58 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001CDE B904 00D2                          2717+         lgr   13,2                set real frame pointer               01-DCCPR
00001CE2 B904 00CF                          2718+         lgr   12,15               set base reg                         01-DCCPR
                        00001CA8            2719+         using @REGION_772_1,12                                         01-DCCPR
00001CE6 B904 0051                          2720          LGR   5,1         ; ptr to parm area
                                            2721 * ******* End of Prologue
                                            2722 * *
00001CEA E340 5000 0004          00000000   2723          LG    4,0(0,5)    ; rl
                                            2724 * ***
                                            2725 * ***           void *elem;
                                            2726 * ***           int i;
                                            2727 * ***           int cnt = 0;
00001CF0 A738 0000               00000000   2728          LHI   3,0         ; 0
                                            2729 * ***
                                            2730 * ***
                                            2731 * ***           for (i = (rl)->rl_cnt-1 ; i >= 0 && (elem = rd_list_el\
                                            2732 * em(rl, i)) ; i--) {
00001CF4 5820 4004               00000004   2733          L     2,4(0,4)    ; offset of rl_cnt in rd_list_s
00001CF8 A72A FFFF               0000FFFF   2734          AHI   2,-1
00001CFC 47F0 C0C4               00001D6C   2735          B     @L93
00001D00                                    2736          DS    0D
00001D00 000000C0                           2737 @FRAMESIZE_772 DC F'192'
00001D04 00000000
00001D08 00000000000017A8                   2738 @lit_772_84 DC AD(rd_list_remove_elem)
00001D10 0000000000002740                   2739 @lit_772_85 DC AD(rd_list_elem)
00001D18                                    2740 @L92     DS    0H
                                            2741 * ***                   if (match_elem == cmp ||
00001D18 E310 5008 0004          00000008   2742          LG    1,8(0,5)    ; match_elem
00001D1E E360 5010 0004          00000010   2743          LG    6,16(0,5)   ; cmp
00001D24 B920 0016                          2744          CGR   1,6
00001D28 4780 C0A0               00001D48   2745          BE    @L98
                                            2746 * ***                       !cmp(elem, match_elem)) {
00001D2C E3F0 D0B0 0024          000000B0   2747          STG   15,176(0,13)
00001D32 E310 D0B8 0024          000000B8   2748          STG   1,184(0,13)
00001D38 4110 D0B0               000000B0   2749          LA    1,176(0,13)
00001D3C B904 00F6                          2750          LGR   15,6
00001D40                                    2751 @@gen_label104 DS    0H
00001D40 05EF                               2752          BALR  14,15
00001D42                                    2753 @@gen_label105 DS    0H
00001D42 12FF                               2754          LTR   15,15
00001D44 4770 C0C0               00001D68   2755          BNZ   @L97
00001D48                                    2756 @L98     DS    0H
                                            2757 * ***                           rd_list_remove_elem(rl, i);
00001D48 E340 D0B0 0024          000000B0   2758          STG   4,176(0,13)
00001D4E B914 00F2                          2759          LGFR  15,2
00001D52 E3F0 D0B8 0024          000000B8   2760          STG   15,184(0,13)
00001D58 4110 D0B0               000000B0   2761          LA    1,176(0,13)
00001D5C E3F0 C060 0004          00001D08   2762          LG    15,@lit_772_84 ; rd_list_remove_elem
00001D62                                    2763 @@gen_label107 DS    0H
00001D62 05EF                               2764          BALR  14,15
00001D64                                    2765 @@gen_label108 DS    0H
                                            2766 * ***                           cnt++;
00001D64 A73A 0001               00000001   2767          AHI   3,1
                                                                                                                           Page   59 
  Active Usings: @REGION_772_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2768 * ***                   }
00001D68                                    2769 @L97     DS    0H
                                            2770 * ***           }
00001D68 A72A FFFF               0000FFFF   2771          AHI   2,-1
00001D6C                                    2772 @L93     DS    0H
00001D6C 1222                               2773          LTR   2,2
00001D6E 4740 C0EE               00001D96   2774          BL    @L94
00001D72 E340 D0B0 0024          000000B0   2775          STG   4,176(0,13)
00001D78 B914 00F2                          2776          LGFR  15,2
00001D7C E3F0 D0B8 0024          000000B8   2777          STG   15,184(0,13)
00001D82 4110 D0B0               000000B0   2778          LA    1,176(0,13)
00001D86 E3F0 C068 0004          00001D10   2779          LG    15,@lit_772_85 ; rd_list_elem
00001D8C                                    2780 @@gen_label110 DS    0H
00001D8C 05EF                               2781          BALR  14,15
00001D8E                                    2782 @@gen_label111 DS    0H
00001D8E B902 001F                          2783          LTGR  1,15
00001D92 4770 C070               00001D18   2784          BNZ   @L92
00001D96                                    2785 @L94     DS    0H
                                            2786 * ***
                                            2787 * ***           return cnt;
00001D96 B914 00F3                          2788          LGFR  15,3
                                            2789 * ***   }
                                            2790 * * **** Start of Epilogue
                                            2791          DCCEPIL
00001D9A                                    2792+         ds 0h                                                          01-DCCEP
                                            2793+* Epilog
00001D9A D707 D088 D088 00000088 00000088   2794+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001DA0 E3D0 D080 0004          00000080   2795+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001DA6 E3C0 D090 0004          00000090   2796+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001DAC E3B0 C018 0004          00000018   2797+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001DB2 E3C0 B010 0021          00000010   2798+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001DB8 E3E0 D008 0004          00000008   2799+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001DBE EB1C D020 0004          00000020   2800+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001DC4 078E                               2801+         bcr 8,14                if same dsab, just return              01-DCCEP
00001DC6 E3F0 D010 0024          00000010   2802+         stg 15,16(0,13)         save return code                       01-DCCEP
00001DCC E300 D018 0024          00000018   2803+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001DD2 E3F0 D090 0004          00000090   2804+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001DD8 E3F0 F018 0004          00000018   2805+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001DDE 47F0 F040               00000040   2806+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2807+* End of Epilog
                                            2808 * * **** End of Epilogue
                                            2809          DROP  12
                                            2810 *
                                            2811 *   DSECT for automatic variables in "rd_list_remove_multi_cmp"
                                            2812 *      (FUNCTION #772)
                                            2813 *
00000000                00000000 000000AC   2814 @AUTO#rd_list_remove_multi_cmp DSECT
00000000                                    2815          DS    XL168
000000A8                                    2816 rd_list_remove_multi_cmp#cnt#0 DS 1F ; cnt
000000AC                000000AC 000000A8   2817          ORG   @AUTO#rd_list_remove_multi_cmp+168
000000A8                                    2818 rd_list_remove_multi_cmp#i#0 DS 1F ; i
                                            2819 *
                                                                                                                           Page   60 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001DE2                00000000 00003F28   2820 @CODE    CSECT
                                            2821 *
                                            2822 *
                                            2823 *
                                            2824 * ....... start of rd_list_pop
                                            2825 rd_list_pop ALIAS X'99846D9389A2A36D979697'
00001DE2                                    2826 @LNAME771 DS   0H
00001DE2 0000000B                           2827          DC    X'0000000B'
00001DE6 99846D9389A2A36D                   2828          DC    C'rd_list_pop'
00001DF1 00                                 2829          DC    X'00'
                                            2830 rd_list_pop DCCPRLG CINDEX=771,BASER=12,FRAME=192,ENTRY=YES,ARCH=ZARCH,*
                                                                LNAMEADDR=@LNAME771
                                            2831          macro
                                            2832          dccextrn &m
                                            2833          gblc    &$dccext(1000)
                                            2834          gbla    &$dccexti
                                            2835          lcla    &i
                                            2836 &$dccext(&$dccexti+1) setc    '&m'
                                            2837 &i       seta    1
                                            2838 .loop    aif    (&i gt &$dccexti).around
                                            2839          aif    ('&$dccext(&i)' eq '&m').getout
                                            2840 &i       seta    &i+1
                                            2841          ago     .loop
                                            2842 .around  anop
                                            2843 &$dccexti seta &$dccexti+1
                                            2844          extrn  &m
                                            2845 .getout  anop
                                            2846          mend
00001DF8                                    2847+$eye0062    ds    0d                                                    02-DCCCA
00001DF8 C4C3C3                             2848+         dc cl3'DCC'                                                    02-DCCCA
00001DFB 01                                 2849+         dc xl1'01' format one                                          02-DCCCA
00001DFC 00000000                           2850+         dc a(0)                                                        02-DCCCA
00001E00 0000000000001E6A                   2851+         dc ad(@PER_771)                                                02-DCCCA
00001E08 00000000000000C0                   2852+         dc ad(192)                                                     02-DCCCA
00001E10 0000000000000000                   2853+         dc ad(0)                                                       02-DCCCA
00001E18 0000000000001000                   2854+         dc ad(4096)                                                    02-DCCCA
00001E20 20                                 2855+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001E21 03                                 2856+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001E22 03                                 2857+         dc al1(3)                                                      02-DCCCA
00001E23 08                                 2858+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001E24 00                                 2859+         dc bl.8'00000000'                                              02-DCCCA
00001E25 000000                             2860+         dc al3(0)                                                      02-DCCCA
00001E28 0000000000001DE2                   2861+         dc ad(@LNAME771)                                               02-DCCCA
00001E30                                    2862+         ds 0d                                                          02-DCCCA
00001E30 0000000000001DF8                   2863+         dc ad($eye0062)                                                02-DCCCA
00001E38 0000000000000000                   2864+         dc ad(0)                                                       02-DCCCA
00001E40                                    2865+         ds    0d                                                       01-DCCPR
                                            2866+         entry rd_list_pop                                              01-DCCPR
00001E40                                    2867+rd_list_pop ds 0d                                                       01-DCCPR
00001E40                                    2868+@REGION_771_1 ds 0h                                                     01-DCCPR
00001E40 EBEC D008 0024          00000008   2869+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001E46 E3E0 D088 0004          00000088   2870+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page   61 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001E4C E3C0 D090 0004          00000090   2871+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001E52 B904 002E                          2872+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001E56 E3B0 C018 0004          00000018   2873+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001E5C A7EB 00C0               000000C0   2874+         aghi  14,192              increase by frame size               01-DCCPR
00001E60 E3E0 C020 0021          00000020   2875+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001E66 4720 B020               00000020   2876+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001E6A                                    2877+@PER_771 ds    0h                                                       01-DCCPR
00001E6A EBDE 2080 0024          00000080   2878+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001E70 E3C0 2090 0024          00000090   2879+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001E76 B904 00D2                          2880+         lgr   13,2                set real frame pointer               01-DCCPR
00001E7A B904 00CF                          2881+         lgr   12,15               set base reg                         01-DCCPR
                        00001E40            2882+         using @REGION_771_1,12                                         01-DCCPR
                                            2883 * ******* End of Prologue
                                            2884 * *
00001E7E E3F0 1000 0004          00000000   2885          LG    15,0(0,1)   ; rl
                                            2886 * ***           void *elem;
                                            2887 * ***           int idx = rl->rl_cnt - 1;
00001E84 5810 F004               00000004   2888          L     1,4(0,15)   ; offset of rl_cnt in rd_list_s
00001E88 A71A FFFF               0000FFFF   2889          AHI   1,-1
                                            2890 * ***
                                            2891 * ***           if (idx < 0)
00001E8C 1211                               2892          LTR   1,1
00001E8E 47B0 C070               00001EB0   2893          BNL   @L99
                                            2894 * ***                   return ((void *)0);
00001E92 A7F9 0000               00000000   2895          LGHI  15,0        ; 0
00001E96 47F0 C0A6               00001EE6   2896          B     @ret_lab_771
00001EA0                                    2897          DS    0D
00001EA0 000000C0                           2898 @FRAMESIZE_771 DC F'192'
00001EA4 00000000
00001EA8 00000000000017A8                   2899 @lit_771_88 DC AD(rd_list_remove_elem)
00001EB0                                    2900 @L99     DS    0H
                                            2901 * ***
                                            2902 * ***           elem = rl->rl_elems[idx];
00001EB0 B914 0021                          2903          LGFR  2,1
00001EB4 E330 F008 0004          00000008   2904          LG    3,8(0,15)   ; offset of rl_elems in rd_list_s
00001EBA EB22 0003 000D          00000003   2905          SLLG  2,2,3(0)    ; *0x8
00001EC0 E322 3000 0004          00000000   2906          LG    2,0(2,3)
                                            2907 * ***           rd_list_remove_elem(rl, idx);
00001EC6 E3F0 D0B0 0024          000000B0   2908          STG   15,176(0,13)
00001ECC B914 00F1                          2909          LGFR  15,1
00001ED0 E3F0 D0B8 0024          000000B8   2910          STG   15,184(0,13)
00001ED6 4110 D0B0               000000B0   2911          LA    1,176(0,13)
00001EDA E3F0 C068 0004          00001EA8   2912          LG    15,@lit_771_88 ; rd_list_remove_elem
00001EE0                                    2913 @@gen_label114 DS    0H
00001EE0 05EF                               2914          BALR  14,15
00001EE2                                    2915 @@gen_label115 DS    0H
                                            2916 * ***
                                            2917 * ***           return elem;
00001EE2 B904 00F2                          2918          LGR   15,2
                                            2919 * ***   }
00001EE6                                    2920 @ret_lab_771 DS 0H
                                            2921 * * **** Start of Epilogue
                                                                                                                           Page   62 
  Active Usings: @REGION_771_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2922          DCCEPIL
00001EE6                                    2923+         ds 0h                                                          01-DCCEP
                                            2924+* Epilog
00001EE6 D707 D088 D088 00000088 00000088   2925+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001EEC E3D0 D080 0004          00000080   2926+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001EF2 E3C0 D090 0004          00000090   2927+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001EF8 E3B0 C018 0004          00000018   2928+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001EFE E3C0 B010 0021          00000010   2929+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001F04 E3E0 D008 0004          00000008   2930+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001F0A EB1C D020 0004          00000020   2931+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001F10 078E                               2932+         bcr 8,14                if same dsab, just return              01-DCCEP
00001F12 E3F0 D010 0024          00000010   2933+         stg 15,16(0,13)         save return code                       01-DCCEP
00001F18 E300 D018 0024          00000018   2934+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001F1E E3F0 D090 0004          00000090   2935+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001F24 E3F0 F018 0004          00000018   2936+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001F2A 47F0 F040               00000040   2937+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2938+* End of Epilog
                                            2939 * * **** End of Epilogue
                                            2940          DROP  12
                                            2941 *
                                            2942 *   DSECT for automatic variables in "rd_list_pop"
                                            2943 *      (FUNCTION #771)
                                            2944 *
00000000                00000000 000000AC   2945 @AUTO#rd_list_pop DSECT
00000000                                    2946          DS    XL168
000000A8                                    2947 rd_list_pop#idx#0 DS 1F    ; idx
                                            2948 *
00001F2E                00000000 00003F28   2949 @CODE    CSECT
                                            2950 *
                                            2951 *
                                            2952 *
                                            2953 * ....... start of rd_list_cmp_trampoline
00001F2E                                    2954 @LNAME797 DS   0H
00001F2E 00000016                           2955          DC    X'00000016'
00001F32 99846D9389A2A36D                   2956          DC    C'rd_list_cmp_trampoline'
00001F48 00                                 2957          DC    X'00'
                                            2958 rd_list_cmp_trampoline DCCPRLG CINDEX=797,BASER=12,FRAME=192,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME797
                                            2959          macro
                                            2960          dccextrn &m
                                            2961          gblc    &$dccext(1000)
                                            2962          gbla    &$dccexti
                                            2963          lcla    &i
                                            2964 &$dccext(&$dccexti+1) setc    '&m'
                                            2965 &i       seta    1
                                            2966 .loop    aif    (&i gt &$dccexti).around
                                            2967          aif    ('&$dccext(&i)' eq '&m').getout
                                            2968 &i       seta    &i+1
                                            2969          ago     .loop
                                            2970 .around  anop
                                            2971 &$dccexti seta &$dccexti+1
                                            2972          extrn  &m
                                                                                                                           Page   63 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2973 .getout  anop
                                            2974          mend
00001F50                                    2975+$eye0065    ds    0d                                                    02-DCCCA
00001F50 C4C3C3                             2976+         dc cl3'DCC'                                                    02-DCCCA
00001F53 01                                 2977+         dc xl1'01' format one                                          02-DCCCA
00001F54 00000000                           2978+         dc a(0)                                                        02-DCCCA
00001F58 0000000000001FC2                   2979+         dc ad(@PER_797)                                                02-DCCCA
00001F60 00000000000000C0                   2980+         dc ad(192)                                                     02-DCCCA
00001F68 0000000000000000                   2981+         dc ad(0)                                                       02-DCCCA
00001F70 0000000000001000                   2982+         dc ad(4096)                                                    02-DCCCA
00001F78 20                                 2983+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001F79 03                                 2984+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001F7A 03                                 2985+         dc al1(3)                                                      02-DCCCA
00001F7B 08                                 2986+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001F7C 00                                 2987+         dc bl.8'00000000'                                              02-DCCCA
00001F7D 000000                             2988+         dc al3(0)                                                      02-DCCCA
00001F80 0000000000001F2E                   2989+         dc ad(@LNAME797)                                               02-DCCCA
00001F88                                    2990+         ds 0d                                                          02-DCCCA
00001F88 0000000000001F50                   2991+         dc ad($eye0065)                                                02-DCCCA
00001F90 0000000000000000                   2992+         dc ad(0)                                                       02-DCCCA
00001F98                                    2993+         ds    0d                                                       01-DCCPR
00001F98                                    2994+rd_list_cmp_trampoline ds 0d                                            01-DCCPR
00001F98                                    2995+@REGION_797_1 ds 0h                                                     01-DCCPR
00001F98 EBEC D008 0024          00000008   2996+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001F9E E3E0 D088 0004          00000088   2997+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001FA4 E3C0 D090 0004          00000090   2998+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001FAA B904 002E                          2999+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001FAE E3B0 C018 0004          00000018   3000+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001FB4 A7EB 00C0               000000C0   3001+         aghi  14,192              increase by frame size               01-DCCPR
00001FB8 E3E0 C020 0021          00000020   3002+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001FBE 4720 B020               00000020   3003+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001FC2                                    3004+@PER_797 ds    0h                                                       01-DCCPR
00001FC2 EBDE 2080 0024          00000080   3005+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001FC8 E3C0 2090 0024          00000090   3006+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001FCE B904 00D2                          3007+         lgr   13,2                set real frame pointer               01-DCCPR
00001FD2 B904 00CF                          3008+         lgr   12,15               set base reg                         01-DCCPR
                        00001F98            3009+         using @REGION_797_1,12                                         01-DCCPR
                                            3010          DCCPRV REG=15     ; Get PRV from DVT
00001FD6 E3F0 B008 0004          00000008   3011+         LG 15,8(0,11)                                                  01-DCCPR
                                            3012 * ******* End of Prologue
                                            3013 * *
                                            3014 * ***      const void *a = *(const void **)_a, *b = *(const void **)_b\
                                            3015 * ;
00001FDC E320 1000 0004          00000000   3016          LG    2,0(0,1)    ; _a
00001FE2 E320 2000 0004          00000000   3017          LG    2,0(0,2)    ; _a
00001FE8 E310 1008 0004          00000008   3018          LG    1,8(0,1)    ; _b
00001FEE E310 1000 0004          00000000   3019          LG    1,0(0,1)    ; _b
                                            3020 * ***
                                            3021 * ***      return rd_list_cmp_curr(a, b);
00001FF4 E320 D0B0 0024          000000B0   3022          STG   2,176(0,13)
00001FFA E310 D0B8 0024          000000B8   3023          STG   1,184(0,13)
00002000 E310 C0D4 0014          0000206C   3024          LGF   1,@lit_797_90
                                                                                                                           Page   64 
  Active Usings: @REGION_797_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002006 41F1 F000               00000000   3025          LA    15,0(1,15)
0000200A E3F0 F200 0004          00000200   3026          LG    15,512(0,15) ; rd_list_cmp_curr
00002010 4110 D0B0               000000B0   3027          LA    1,176(0,13)
00002014                                    3028 @@gen_label116 DS    0H
00002014 05EF                               3029          BALR  14,15
00002016                                    3030 @@gen_label117 DS    0H
00002016 B914 00FF                          3031          LGFR  15,15
                                            3032 * ***   }
                                            3033 * * **** Start of Epilogue
                                            3034          DCCEPIL
0000201A                                    3035+         ds 0h                                                          01-DCCEP
                                            3036+* Epilog
0000201A D707 D088 D088 00000088 00000088   3037+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002020 E3D0 D080 0004          00000080   3038+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002026 E3C0 D090 0004          00000090   3039+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000202C E3B0 C018 0004          00000018   3040+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002032 E3C0 B010 0021          00000010   3041+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002038 E3E0 D008 0004          00000008   3042+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000203E EB1C D020 0004          00000020   3043+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002044 078E                               3044+         bcr 8,14                if same dsab, just return              01-DCCEP
00002046 E3F0 D010 0024          00000010   3045+         stg 15,16(0,13)         save return code                       01-DCCEP
0000204C E300 D018 0024          00000018   3046+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002052 E3F0 D090 0004          00000090   3047+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002058 E3F0 F018 0004          00000018   3048+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000205E 47F0 F040               00000040   3049+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3050+* End of Epilog
                                            3051 * * **** End of Epilogue
00002068                                    3052          DS    0D
00002068 000000C0                           3053 @FRAMESIZE_797 DC F'192'
0000206C 00000000                           3054 @lit_797_90 DC Q(@@STATIC)
                                            3055          DROP  12
                                            3056 *
                                            3057 *   DSECT for automatic variables in "rd_list_cmp_trampoline"
                                            3058 *      (FUNCTION #797)
                                            3059 *
00000000                00000000 000000A8   3060 @AUTO#rd_list_cmp_trampoline DSECT
00000000                                    3061          DS    XL168
                                            3062 *
00002070                00000000 00003F28   3063 @CODE    CSECT
                                            3064 *
                                            3065 *
                                            3066 *
                                            3067 * ....... start of rd_list_sort
                                            3068 rd_list_sort ALIAS X'99846D9389A2A36DA29699A3'
00002070                                    3069 @LNAME773 DS   0H
00002070 0000000C                           3070          DC    X'0000000C'
00002074 99846D9389A2A36D                   3071          DC    C'rd_list_sort'
00002080 00                                 3072          DC    X'00'
                                            3073 rd_list_sort DCCPRLG CINDEX=773,BASER=12,FRAME=200,ENTRY=YES,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME773
                                            3074          macro
                                            3075          dccextrn &m
                                                                                                                           Page   65 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3076          gblc    &$dccext(1000)
                                            3077          gbla    &$dccexti
                                            3078          lcla    &i
                                            3079 &$dccext(&$dccexti+1) setc    '&m'
                                            3080 &i       seta    1
                                            3081 .loop    aif    (&i gt &$dccexti).around
                                            3082          aif    ('&$dccext(&i)' eq '&m').getout
                                            3083 &i       seta    &i+1
                                            3084          ago     .loop
                                            3085 .around  anop
                                            3086 &$dccexti seta &$dccexti+1
                                            3087          extrn  &m
                                            3088 .getout  anop
                                            3089          mend
00002088                                    3090+$eye0069    ds    0d                                                    02-DCCCA
00002088 C4C3C3                             3091+         dc cl3'DCC'                                                    02-DCCCA
0000208B 01                                 3092+         dc xl1'01' format one                                          02-DCCCA
0000208C 00000000                           3093+         dc a(0)                                                        02-DCCCA
00002090 00000000000020FA                   3094+         dc ad(@PER_773)                                                02-DCCCA
00002098 00000000000000C8                   3095+         dc ad(200)                                                     02-DCCCA
000020A0 0000000000000000                   3096+         dc ad(0)                                                       02-DCCCA
000020A8 0000000000001000                   3097+         dc ad(4096)                                                    02-DCCCA
000020B0 20                                 3098+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000020B1 03                                 3099+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000020B2 03                                 3100+         dc al1(3)                                                      02-DCCCA
000020B3 08                                 3101+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000020B4 00                                 3102+         dc bl.8'00000000'                                              02-DCCCA
000020B5 000000                             3103+         dc al3(0)                                                      02-DCCCA
000020B8 0000000000002070                   3104+         dc ad(@LNAME773)                                               02-DCCCA
000020C0                                    3105+         ds 0d                                                          02-DCCCA
000020C0 0000000000002088                   3106+         dc ad($eye0069)                                                02-DCCCA
000020C8 0000000000000000                   3107+         dc ad(0)                                                       02-DCCCA
000020D0                                    3108+         ds    0d                                                       01-DCCPR
                                            3109+         entry rd_list_sort                                             01-DCCPR
000020D0                                    3110+rd_list_sort ds 0d                                                      01-DCCPR
000020D0                                    3111+@REGION_773_1 ds 0h                                                     01-DCCPR
000020D0 EBEC D008 0024          00000008   3112+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000020D6 E3E0 D088 0004          00000088   3113+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000020DC E3C0 D090 0004          00000090   3114+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000020E2 B904 002E                          3115+         lgr   2,14                copy addr of our savearea            01-DCCPR
000020E6 E3B0 C018 0004          00000018   3116+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000020EC A7EB 00C8               000000C8   3117+         aghi  14,200              increase by frame size               01-DCCPR
000020F0 E3E0 C020 0021          00000020   3118+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000020F6 4720 B020               00000020   3119+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000020FA                                    3120+@PER_773 ds    0h                                                       01-DCCPR
000020FA EBDE 2080 0024          00000080   3121+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002100 E3C0 2090 0024          00000090   3122+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002106 B904 00D2                          3123+         lgr   13,2                set real frame pointer               01-DCCPR
0000210A B904 00CF                          3124+         lgr   12,15               set base reg                         01-DCCPR
                        000020D0            3125+         using @REGION_773_1,12                                         01-DCCPR
                                            3126          DCCPRV REG=15     ; Get PRV from DVT
0000210E E3F0 B008 0004          00000008   3127+         LG 15,8(0,11)                                                  01-DCCPR
                                                                                                                           Page   66 
  Active Usings: @REGION_773_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3128 * ******* End of Prologue
                                            3129 * *
                                            3130 * ***           if (((rl->rl_elems == ((void *)0))))
00002114 E320 1000 0004          00000000   3131          LG    2,0(0,1)    ; rl
0000211A E330 2008 0002          00000008   3132          LTG   3,8(0,2)    ; offset of rl_elems in rd_list_s
00002120 4780 C0AC               0000217C   3133          BE    @ret_lab_773
                                            3134 * ***                   return;
00002124                                    3135 @L100    DS    0H
                                            3136 * ***
                                            3137 * ***      rd_list_cmp_curr = cmp;
00002124 E330 C110 0014          000021E0   3138          LGF   3,@lit_773_92
0000212A 41F3 F000               00000000   3139          LA    15,0(3,15)
0000212E E310 1008 0004          00000008   3140          LG    1,8(0,1)    ; cmp
00002134 E310 F200 0024          00000200   3141          STG   1,512(0,15) ; rd_list_cmp_curr
                                            3142 * ***           qsort(rl->rl_elems, rl->rl_cnt, sizeof(*rl->rl_elems),
                                            3143 * ***            rd_list_cmp_trampoline);
0000213A E3F0 2008 0004          00000008   3144          LG    15,8(0,2)
00002140 E3F0 D0A8 0024          000000A8   3145          STG   15,168(0,13)
00002146 E3F0 2004 0014          00000004   3146          LGF   15,4(0,2)
0000214C E3F0 D0B0 0024          000000B0   3147          STG   15,176(0,13)
00002152 E548 D0B8 0008          000000B8   3148          MVGHI 184(13),8
00002158 E3F0 C108 0004          000021D8   3149          LG    15,@lit_773_93 ; rd_list_cmp_trampoline
0000215E E3F0 D0C0 0024          000000C0   3150          STG   15,192(0,13)
00002164 4110 D0A8               000000A8   3151          LA    1,168(0,13)
00002168 E3F0 C100 0004          000021D0   3152          LG    15,@lit_773_94 ; qsort
0000216E                                    3153 @@gen_label119 DS    0H
0000216E 05EF                               3154          BALR  14,15
00002170                                    3155 @@gen_label120 DS    0H
                                            3156 * ***      rl->rl_flags |= 0x2;
00002170 58F0 2018               00000018   3157          L     15,24(0,2)
00002174 A5FB 0002               00000002   3158          OILL  15,2
00002178 50F0 2018               00000018   3159          ST    15,24(0,2)
                                            3160 * ***   }
0000217C                                    3161 @ret_lab_773 DS 0H
                                            3162 * * **** Start of Epilogue
                                            3163          DCCEPIL
0000217C                                    3164+         ds 0h                                                          01-DCCEP
                                            3165+* Epilog
0000217C D707 D088 D088 00000088 00000088   3166+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002182 E3D0 D080 0004          00000080   3167+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002188 E3C0 D090 0004          00000090   3168+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000218E E3B0 C018 0004          00000018   3169+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002194 E3C0 B010 0021          00000010   3170+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000219A E3E0 D008 0004          00000008   3171+         lg  14,8(0,13)          load up return address                 01-DCCEP
000021A0 EB1C D020 0004          00000020   3172+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000021A6 078E                               3173+         bcr 8,14                if same dsab, just return              01-DCCEP
000021A8 E3F0 D010 0024          00000010   3174+         stg 15,16(0,13)         save return code                       01-DCCEP
000021AE E300 D018 0024          00000018   3175+         stg 0,24(0,13)          save more return code                  01-DCCEP
000021B4 E3F0 D090 0004          00000090   3176+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000021BA E3F0 F018 0004          00000018   3177+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000021C0 47F0 F040               00000040   3178+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3179+* End of Epilog
                                                                                                                           Page   67 
  Active Usings: @REGION_773_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3180 * * **** End of Epilogue
000021C8                                    3181          DS    0D
000021C8 000000C8                           3182 @FRAMESIZE_773 DC F'200'
000021CC 00000000
000021D0 0000000000000000                   3183 @lit_773_94 DC AD(qsort)
000021D8 0000000000001F98                   3184 @lit_773_93 DC AD(rd_list_cmp_trampoline)
000021E0 00000000                           3185 @lit_773_92 DC Q(@@STATIC)
                                            3186          DROP  12
                                            3187 *
                                            3188 *   DSECT for automatic variables in "rd_list_sort"
                                            3189 *      (FUNCTION #773)
                                            3190 *
00000000                00000000 000000A8   3191 @AUTO#rd_list_sort DSECT
00000000                                    3192          DS    XL168
                                            3193 *
000021E4                00000000 00003F28   3194 @CODE    CSECT
                                            3195 *
                                            3196 *
                                            3197 *
                                            3198 * ....... start of rd_list_destroy_elems
000021E4                                    3199 @LNAME798 DS   0H
000021E4 00000015                           3200          DC    X'00000015'
000021E8 99846D9389A2A36D                   3201          DC    C'rd_list_destroy_elems'
000021FD 00                                 3202          DC    X'00'
                                            3203 rd_list_destroy_elems DCCPRLG CINDEX=798,BASER=12,FRAME=184,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME798
                                            3204          macro
                                            3205          dccextrn &m
                                            3206          gblc    &$dccext(1000)
                                            3207          gbla    &$dccexti
                                            3208          lcla    &i
                                            3209 &$dccext(&$dccexti+1) setc    '&m'
                                            3210 &i       seta    1
                                            3211 .loop    aif    (&i gt &$dccexti).around
                                            3212          aif    ('&$dccext(&i)' eq '&m').getout
                                            3213 &i       seta    &i+1
                                            3214          ago     .loop
                                            3215 .around  anop
                                            3216 &$dccexti seta &$dccexti+1
                                            3217          extrn  &m
                                            3218 .getout  anop
                                            3219          mend
00002200                                    3220+$eye0073    ds    0d                                                    02-DCCCA
00002200 C4C3C3                             3221+         dc cl3'DCC'                                                    02-DCCCA
00002203 01                                 3222+         dc xl1'01' format one                                          02-DCCCA
00002204 00000000                           3223+         dc a(0)                                                        02-DCCCA
00002208 0000000000002272                   3224+         dc ad(@PER_798)                                                02-DCCCA
00002210 00000000000000B8                   3225+         dc ad(184)                                                     02-DCCCA
00002218 0000000000000000                   3226+         dc ad(0)                                                       02-DCCCA
00002220 0000000000001000                   3227+         dc ad(4096)                                                    02-DCCCA
00002228 20                                 3228+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002229 03                                 3229+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
                                                                                                                           Page   68 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000222A 03                                 3230+         dc al1(3)                                                      02-DCCCA
0000222B 08                                 3231+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000222C 00                                 3232+         dc bl.8'00000000'                                              02-DCCCA
0000222D 000000                             3233+         dc al3(0)                                                      02-DCCCA
00002230 00000000000021E4                   3234+         dc ad(@LNAME798)                                               02-DCCCA
00002238                                    3235+         ds 0d                                                          02-DCCCA
00002238 0000000000002200                   3236+         dc ad($eye0073)                                                02-DCCCA
00002240 0000000000000000                   3237+         dc ad(0)                                                       02-DCCCA
00002248                                    3238+         ds    0d                                                       01-DCCPR
00002248                                    3239+rd_list_destroy_elems ds 0d                                             01-DCCPR
00002248                                    3240+@REGION_798_1 ds 0h                                                     01-DCCPR
00002248 EBEC D008 0024          00000008   3241+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000224E E3E0 D088 0004          00000088   3242+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002254 E3C0 D090 0004          00000090   3243+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000225A B904 002E                          3244+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000225E E3B0 C018 0004          00000018   3245+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002264 A7EB 00B8               000000B8   3246+         aghi  14,184              increase by frame size               01-DCCPR
00002268 E3E0 C020 0021          00000020   3247+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000226E 4720 B020               00000020   3248+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002272                                    3249+@PER_798 ds    0h                                                       01-DCCPR
00002272 EBDE 2080 0024          00000080   3250+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002278 E3C0 2090 0024          00000090   3251+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000227E B904 00D2                          3252+         lgr   13,2                set real frame pointer               01-DCCPR
00002282 B904 00CF                          3253+         lgr   12,15               set base reg                         01-DCCPR
                        00002248            3254+         using @REGION_798_1,12                                         01-DCCPR
                                            3255 * ******* End of Prologue
                                            3256 * *
00002286 E330 1000 0004          00000000   3257          LG    3,0(0,1)    ; rl
                                            3258 * ***           int i;
                                            3259 * ***
                                            3260 * ***           if (!rl->rl_elems)
0000228C E3F0 3008 0002          00000008   3261          LTG   15,8(0,3)   ; offset of rl_elems in rd_list_s
00002292 4780 C0FE               00002346   3262          BZ    @ret_lab_798
                                            3263 * ***                   return;
00002296                                    3264 @L101    DS    0H
                                            3265 * ***
                                            3266 * ***           if (rl->rl_free_cb) {
00002296 E3F0 3010 0002          00000010   3267          LTG   15,16(0,3)  ; offset of rl_free_cb in rd_list_s
0000229C 4780 C0C4               0000230C   3268          BZ    @L102
                                            3269 * ***
                                            3270 * ***                   for (i = rl->rl_cnt - 1 ; i >= 0 ; i--)
000022A0 5820 3004               00000004   3271          L     2,4(0,3)    ; offset of rl_cnt in rd_list_s
000022A4 A72A FFFF               0000FFFF   3272          AHI   2,-1
000022A8 47F0 C0BE               00002306   3273          B     @L104
000022B0                                    3274          DS    0D
000022B0 000000B8                           3275 @FRAMESIZE_798 DC F'184'
000022B4 00000000
000022B8 00000000000004A8                   3276 @lit_798_96 DC AD(rd_free)
000022C0                                    3277 @L103    DS    0H
                                            3278 * ***                           if (rl->rl_elems[i])
000022C0 B914 00F2                          3279          LGFR  15,2
000022C4 E310 3008 0004          00000008   3280          LG    1,8(0,3)    ; offset of rl_elems in rd_list_s
                                                                                                                           Page   69 
  Active Usings: @REGION_798_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000022CA EBFF 0003 000D          00000003   3281          SLLG  15,15,3(0)  ; *0x8
000022D0 E3FF 1000 0002          00000000   3282          LTG   15,0(15,1)
000022D6 4780 C0BA               00002302   3283          BZ    @L107
                                            3284 * ***                                   rl->rl_free_cb(rl->rl_elems[i]\
                                            3285 * );
000022DA B914 00F2                          3286          LGFR  15,2
000022DE E310 3008 0004          00000008   3287          LG    1,8(0,3)    ; offset of rl_elems in rd_list_s
000022E4 EBFF 0003 000D          00000003   3288          SLLG  15,15,3(0)  ; *0x8
000022EA E3FF 1000 0004          00000000   3289          LG    15,0(15,1)
000022F0 E3F0 D0B0 0024          000000B0   3290          STG   15,176(0,13)
000022F6 E3F0 3010 0004          00000010   3291          LG    15,16(0,3)  ; offset of rl_free_cb in rd_list_s
000022FC 4110 D0B0               000000B0   3292          LA    1,176(0,13)
00002300                                    3293 @@gen_label124 DS    0H
00002300 05EF                               3294          BALR  14,15
00002302                                    3295 @@gen_label125 DS    0H
00002302                                    3296 @L107    DS    0H
                                            3297 * ***           }
00002302 A72A FFFF               0000FFFF   3298          AHI   2,-1
00002306                                    3299 @L104    DS    0H
00002306 1222                               3300          LTR   2,2
00002308 47B0 C078               000022C0   3301          BNL   @L103
0000230C                                    3302 @L102    DS    0H
                                            3303 * ***
                                            3304 * ***           rd_free(rl->rl_elems);
0000230C E3F0 3008 0004          00000008   3305          LG    15,8(0,3)
00002312 E3F0 D0B0 0024          000000B0   3306          STG   15,176(0,13)
00002318 4110 D0B0               000000B0   3307          LA    1,176(0,13)
0000231C E3F0 C070 0004          000022B8   3308          LG    15,@lit_798_96 ; rd_free
00002322                                    3309 @@gen_label127 DS    0H
00002322 05EF                               3310          BALR  14,15
00002324                                    3311 @@gen_label128 DS    0H
                                            3312 * ***           rl->rl_elems = ((void *)0);
00002324 A7F9 0000               00000000   3313          LGHI  15,0        ; 0
00002328 E3F0 3008 0024          00000008   3314          STG   15,8(0,3)   ; offset of rl_elems in rd_list_s
                                            3315 * ***           rl->rl_cnt = 0;
0000232E E54C 3004 0000          00000004   3316          MVHI  4(3),0      ; offset of rl_cnt in rd_list_s
                                            3317 * ***           rl->rl_size = 0;
00002334 E54C 3000 0000          00000000   3318          MVHI  0(3),0      ; rl
                                            3319 * ***           rl->rl_flags &= ~0x2;
0000233A 58F0 3018               00000018   3320          L     15,24(0,3)
0000233E A5F7 FFFD               0000FFFD   3321          NILL  15,65533
00002342 50F0 3018               00000018   3322          ST    15,24(0,3)
                                            3323 * ***   }
00002346                                    3324 @ret_lab_798 DS 0H
                                            3325 * * **** Start of Epilogue
                                            3326          DCCEPIL
00002346                                    3327+         ds 0h                                                          01-DCCEP
                                            3328+* Epilog
00002346 D707 D088 D088 00000088 00000088   3329+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000234C E3D0 D080 0004          00000080   3330+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002352 E3C0 D090 0004          00000090   3331+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002358 E3B0 C018 0004          00000018   3332+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page   70 
  Active Usings: @REGION_798_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000235E E3C0 B010 0021          00000010   3333+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002364 E3E0 D008 0004          00000008   3334+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000236A EB1C D020 0004          00000020   3335+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002370 078E                               3336+         bcr 8,14                if same dsab, just return              01-DCCEP
00002372 E3F0 D010 0024          00000010   3337+         stg 15,16(0,13)         save return code                       01-DCCEP
00002378 E300 D018 0024          00000018   3338+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000237E E3F0 D090 0004          00000090   3339+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002384 E3F0 F018 0004          00000018   3340+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000238A 47F0 F040               00000040   3341+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3342+* End of Epilog
                                            3343 * * **** End of Epilogue
                                            3344          DROP  12
                                            3345 *
                                            3346 *   DSECT for automatic variables in "rd_list_destroy_elems"
                                            3347 *      (FUNCTION #798)
                                            3348 *
00000000                00000000 000000AC   3349 @AUTO#rd_list_destroy_elems DSECT
00000000                                    3350          DS    XL168
000000A8                                    3351 rd_list_destroy_elems#i#0 DS 1F ; i
                                            3352 *
0000238E                00000000 00003F28   3353 @CODE    CSECT
                                            3354 *
                                            3355 *
                                            3356 *
                                            3357 * ....... start of rd_list_clear
                                            3358 rd_list_clear ALIAS X'99846D9389A2A36D8393858199'
0000238E                                    3359 @LNAME774 DS   0H
0000238E 0000000D                           3360          DC    X'0000000D'
00002392 99846D9389A2A36D                   3361          DC    C'rd_list_clear'
0000239F 00                                 3362          DC    X'00'
                                            3363 rd_list_clear DCCPRLG CINDEX=774,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME774
                                            3364          macro
                                            3365          dccextrn &m
                                            3366          gblc    &$dccext(1000)
                                            3367          gbla    &$dccexti
                                            3368          lcla    &i
                                            3369 &$dccext(&$dccexti+1) setc    '&m'
                                            3370 &i       seta    1
                                            3371 .loop    aif    (&i gt &$dccexti).around
                                            3372          aif    ('&$dccext(&i)' eq '&m').getout
                                            3373 &i       seta    &i+1
                                            3374          ago     .loop
                                            3375 .around  anop
                                            3376 &$dccexti seta &$dccexti+1
                                            3377          extrn  &m
                                            3378 .getout  anop
                                            3379          mend
000023A0                                    3380+$eye0076    ds    0d                                                    02-DCCCA
000023A0 C4C3C3                             3381+         dc cl3'DCC'                                                    02-DCCCA
000023A3 01                                 3382+         dc xl1'01' format one                                          02-DCCCA
000023A4 00000000                           3383+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   71 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000023A8 0000000000002412                   3384+         dc ad(@PER_774)                                                02-DCCCA
000023B0 00000000000000B0                   3385+         dc ad(176)                                                     02-DCCCA
000023B8 0000000000000000                   3386+         dc ad(0)                                                       02-DCCCA
000023C0 0000000000001000                   3387+         dc ad(4096)                                                    02-DCCCA
000023C8 20                                 3388+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000023C9 03                                 3389+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000023CA 03                                 3390+         dc al1(3)                                                      02-DCCCA
000023CB 08                                 3391+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000023CC 00                                 3392+         dc bl.8'00000000'                                              02-DCCCA
000023CD 000000                             3393+         dc al3(0)                                                      02-DCCCA
000023D0 000000000000238E                   3394+         dc ad(@LNAME774)                                               02-DCCCA
000023D8                                    3395+         ds 0d                                                          02-DCCCA
000023D8 00000000000023A0                   3396+         dc ad($eye0076)                                                02-DCCCA
000023E0 0000000000000000                   3397+         dc ad(0)                                                       02-DCCCA
000023E8                                    3398+         ds    0d                                                       01-DCCPR
                                            3399+         entry rd_list_clear                                            01-DCCPR
000023E8                                    3400+rd_list_clear ds 0d                                                     01-DCCPR
000023E8                                    3401+@REGION_774_1 ds 0h                                                     01-DCCPR
000023E8 EBEC D008 0024          00000008   3402+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000023EE E3E0 D088 0004          00000088   3403+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000023F4 E3C0 D090 0004          00000090   3404+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000023FA B904 002E                          3405+         lgr   2,14                copy addr of our savearea            01-DCCPR
000023FE E3B0 C018 0004          00000018   3406+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002404 A7EB 00B0               000000B0   3407+         aghi  14,176              increase by frame size               01-DCCPR
00002408 E3E0 C020 0021          00000020   3408+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000240E 4720 B020               00000020   3409+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002412                                    3410+@PER_774 ds    0h                                                       01-DCCPR
00002412 EBDE 2080 0024          00000080   3411+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002418 E3C0 2090 0024          00000090   3412+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000241E B904 00D2                          3413+         lgr   13,2                set real frame pointer               01-DCCPR
00002422 B904 00CF                          3414+         lgr   12,15               set base reg                         01-DCCPR
                        000023E8            3415+         using @REGION_774_1,12                                         01-DCCPR
                                            3416 * ******* End of Prologue
                                            3417 * *
                                            3418 * ***           rd_list_destroy_elems(rl);
00002426 E3F0 1000 0004          00000000   3419          LG    15,0(0,1)   ; rl
0000242C E3F0 D0A8 0024          000000A8   3420          STG   15,168(0,13)
00002432 4110 D0A8               000000A8   3421          LA    1,168(0,13)
00002436 E3F0 C0A8 0004          00002490   3422          LG    15,@lit_774_99 ; rd_list_destroy_elems
0000243C                                    3423 @@gen_label129 DS    0H
0000243C 05EF                               3424          BALR  14,15
0000243E                                    3425 @@gen_label130 DS    0H
                                            3426 * ***   }
0000243E                                    3427 @ret_lab_774 DS 0H
                                            3428 * * **** Start of Epilogue
                                            3429          DCCEPIL
0000243E                                    3430+         ds 0h                                                          01-DCCEP
                                            3431+* Epilog
0000243E D707 D088 D088 00000088 00000088   3432+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002444 E3D0 D080 0004          00000080   3433+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000244A E3C0 D090 0004          00000090   3434+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002450 E3B0 C018 0004          00000018   3435+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page   72 
  Active Usings: @REGION_774_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002456 E3C0 B010 0021          00000010   3436+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000245C E3E0 D008 0004          00000008   3437+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002462 EB1C D020 0004          00000020   3438+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002468 078E                               3439+         bcr 8,14                if same dsab, just return              01-DCCEP
0000246A E3F0 D010 0024          00000010   3440+         stg 15,16(0,13)         save return code                       01-DCCEP
00002470 E300 D018 0024          00000018   3441+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002476 E3F0 D090 0004          00000090   3442+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000247C E3F0 F018 0004          00000018   3443+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002482 47F0 F040               00000040   3444+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3445+* End of Epilog
                                            3446 * * **** End of Epilogue
00002488                                    3447          DS    0D
00002488 000000B0                           3448 @FRAMESIZE_774 DC F'176'
0000248C 00000000
00002490 0000000000002248                   3449 @lit_774_99 DC AD(rd_list_destroy_elems)
                                            3450          DROP  12
                                            3451 *
                                            3452 *   DSECT for automatic variables in "rd_list_clear"
                                            3453 *      (FUNCTION #774)
                                            3454 *
00000000                00000000 000000A8   3455 @AUTO#rd_list_clear DSECT
00000000                                    3456          DS    XL168
                                            3457 *
00002498                00000000 00003F28   3458 @CODE    CSECT
                                            3459 *
                                            3460 *
                                            3461 *
                                            3462 * ....... start of rd_list_destroy
                                            3463 rd_list_destroy ALIAS X'99846D9389A2A36D8485A2A39996A8'
00002498                                    3464 @LNAME775 DS   0H
00002498 0000000F                           3465          DC    X'0000000F'
0000249C 99846D9389A2A36D                   3466          DC    C'rd_list_destroy'
000024AB 00                                 3467          DC    X'00'
                                            3468 rd_list_destroy DCCPRLG CINDEX=775,BASER=12,FRAME=176,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME775
                                            3469          macro
                                            3470          dccextrn &m
                                            3471          gblc    &$dccext(1000)
                                            3472          gbla    &$dccexti
                                            3473          lcla    &i
                                            3474 &$dccext(&$dccexti+1) setc    '&m'
                                            3475 &i       seta    1
                                            3476 .loop    aif    (&i gt &$dccexti).around
                                            3477          aif    ('&$dccext(&i)' eq '&m').getout
                                            3478 &i       seta    &i+1
                                            3479          ago     .loop
                                            3480 .around  anop
                                            3481 &$dccexti seta &$dccexti+1
                                            3482          extrn  &m
                                            3483 .getout  anop
                                            3484          mend
000024B0                                    3485+$eye0079    ds    0d                                                    02-DCCCA
                                                                                                                           Page   73 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000024B0 C4C3C3                             3486+         dc cl3'DCC'                                                    02-DCCCA
000024B3 01                                 3487+         dc xl1'01' format one                                          02-DCCCA
000024B4 00000000                           3488+         dc a(0)                                                        02-DCCCA
000024B8 0000000000002522                   3489+         dc ad(@PER_775)                                                02-DCCCA
000024C0 00000000000000B0                   3490+         dc ad(176)                                                     02-DCCCA
000024C8 0000000000000000                   3491+         dc ad(0)                                                       02-DCCCA
000024D0 0000000000001000                   3492+         dc ad(4096)                                                    02-DCCCA
000024D8 20                                 3493+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000024D9 03                                 3494+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000024DA 03                                 3495+         dc al1(3)                                                      02-DCCCA
000024DB 08                                 3496+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000024DC 00                                 3497+         dc bl.8'00000000'                                              02-DCCCA
000024DD 000000                             3498+         dc al3(0)                                                      02-DCCCA
000024E0 0000000000002498                   3499+         dc ad(@LNAME775)                                               02-DCCCA
000024E8                                    3500+         ds 0d                                                          02-DCCCA
000024E8 00000000000024B0                   3501+         dc ad($eye0079)                                                02-DCCCA
000024F0 0000000000000000                   3502+         dc ad(0)                                                       02-DCCCA
000024F8                                    3503+         ds    0d                                                       01-DCCPR
                                            3504+         entry rd_list_destroy                                          01-DCCPR
000024F8                                    3505+rd_list_destroy ds 0d                                                   01-DCCPR
000024F8                                    3506+@REGION_775_1 ds 0h                                                     01-DCCPR
000024F8 EBEC D008 0024          00000008   3507+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000024FE E3E0 D088 0004          00000088   3508+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002504 E3C0 D090 0004          00000090   3509+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000250A B904 002E                          3510+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000250E E3B0 C018 0004          00000018   3511+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002514 A7EB 00B0               000000B0   3512+         aghi  14,176              increase by frame size               01-DCCPR
00002518 E3E0 C020 0021          00000020   3513+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000251E 4720 B020               00000020   3514+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002522                                    3515+@PER_775 ds    0h                                                       01-DCCPR
00002522 EBDE 2080 0024          00000080   3516+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002528 E3C0 2090 0024          00000090   3517+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000252E B904 00D2                          3518+         lgr   13,2                set real frame pointer               01-DCCPR
00002532 B904 00CF                          3519+         lgr   12,15               set base reg                         01-DCCPR
                        000024F8            3520+         using @REGION_775_1,12                                         01-DCCPR
                                            3521 * ******* End of Prologue
                                            3522 * *
                                            3523 * ***           rd_list_destroy_elems(rl);
00002536 E320 1000 0004          00000000   3524          LG    2,0(0,1)    ; rl
0000253C E320 D0A8 0024          000000A8   3525          STG   2,168(0,13)
00002542 4110 D0A8               000000A8   3526          LA    1,168(0,13)
00002546 E3F0 C0C0 0004          000025B8   3527          LG    15,@lit_775_101 ; rd_list_destroy_elems
0000254C                                    3528 @@gen_label131 DS    0H
0000254C 05EF                               3529          BALR  14,15
0000254E                                    3530 @@gen_label132 DS    0H
                                            3531 * ***           if (rl->rl_flags & 0x1)
0000254E 9101 201B      0000001B 00000001   3532          TM    27(2),1
00002552 4780 C070               00002568   3533          BZ    @ret_lab_775
                                            3534 * ***                   rd_free(rl);
00002556 E320 D0A8 0024          000000A8   3535          STG   2,168(0,13)
0000255C 4110 D0A8               000000A8   3536          LA    1,168(0,13)
00002560 E3F0 C0C8 0004          000025C0   3537          LG    15,@lit_775_102 ; rd_free
                                                                                                                           Page   74 
  Active Usings: @REGION_775_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002566                                    3538 @@gen_label134 DS    0H
00002566 05EF                               3539          BALR  14,15
00002568                                    3540 @@gen_label135 DS    0H
00002568                                    3541 @L108    DS    0H
                                            3542 * ***   }
00002568                                    3543 @ret_lab_775 DS 0H
                                            3544 * * **** Start of Epilogue
                                            3545          DCCEPIL
00002568                                    3546+         ds 0h                                                          01-DCCEP
                                            3547+* Epilog
00002568 D707 D088 D088 00000088 00000088   3548+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000256E E3D0 D080 0004          00000080   3549+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002574 E3C0 D090 0004          00000090   3550+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000257A E3B0 C018 0004          00000018   3551+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002580 E3C0 B010 0021          00000010   3552+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002586 E3E0 D008 0004          00000008   3553+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000258C EB1C D020 0004          00000020   3554+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002592 078E                               3555+         bcr 8,14                if same dsab, just return              01-DCCEP
00002594 E3F0 D010 0024          00000010   3556+         stg 15,16(0,13)         save return code                       01-DCCEP
0000259A E300 D018 0024          00000018   3557+         stg 0,24(0,13)          save more return code                  01-DCCEP
000025A0 E3F0 D090 0004          00000090   3558+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000025A6 E3F0 F018 0004          00000018   3559+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000025AC 47F0 F040               00000040   3560+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3561+* End of Epilog
                                            3562 * * **** End of Epilogue
000025B0                                    3563          DS    0D
000025B0 000000B0                           3564 @FRAMESIZE_775 DC F'176'
000025B4 00000000
000025B8 0000000000002248                   3565 @lit_775_101 DC AD(rd_list_destroy_elems)
000025C0 00000000000004A8                   3566 @lit_775_102 DC AD(rd_free)
                                            3567          DROP  12
                                            3568 *
                                            3569 *   DSECT for automatic variables in "rd_list_destroy"
                                            3570 *      (FUNCTION #775)
                                            3571 *
00000000                00000000 000000A8   3572 @AUTO#rd_list_destroy DSECT
00000000                                    3573          DS    XL168
                                            3574 *
000025C8                00000000 00003F28   3575 @CODE    CSECT
                                            3576 *
                                            3577 *
                                            3578 *
                                            3579 * ....... start of rd_list_destroy_free
                                            3580 rd_list_destroy_free ALIAS X'99846D9389A2A36D8485A2A39996A86D86998585'
000025C8                                    3581 @LNAME776 DS   0H
000025C8 00000014                           3582          DC    X'00000014'
000025CC 99846D9389A2A36D                   3583          DC    C'rd_list_destroy_free'
000025E0 00                                 3584          DC    X'00'
                                            3585 rd_list_destroy_free DCCPRLG CINDEX=776,BASER=12,FRAME=176,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME776
                                            3586          macro
                                            3587          dccextrn &m
                                                                                                                           Page   75 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3588          gblc    &$dccext(1000)
                                            3589          gbla    &$dccexti
                                            3590          lcla    &i
                                            3591 &$dccext(&$dccexti+1) setc    '&m'
                                            3592 &i       seta    1
                                            3593 .loop    aif    (&i gt &$dccexti).around
                                            3594          aif    ('&$dccext(&i)' eq '&m').getout
                                            3595 &i       seta    &i+1
                                            3596          ago     .loop
                                            3597 .around  anop
                                            3598 &$dccexti seta &$dccexti+1
                                            3599          extrn  &m
                                            3600 .getout  anop
                                            3601          mend
000025E8                                    3602+$eye0082    ds    0d                                                    02-DCCCA
000025E8 C4C3C3                             3603+         dc cl3'DCC'                                                    02-DCCCA
000025EB 01                                 3604+         dc xl1'01' format one                                          02-DCCCA
000025EC 00000000                           3605+         dc a(0)                                                        02-DCCCA
000025F0 000000000000265A                   3606+         dc ad(@PER_776)                                                02-DCCCA
000025F8 00000000000000B0                   3607+         dc ad(176)                                                     02-DCCCA
00002600 0000000000000000                   3608+         dc ad(0)                                                       02-DCCCA
00002608 0000000000001000                   3609+         dc ad(4096)                                                    02-DCCCA
00002610 20                                 3610+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002611 03                                 3611+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002612 03                                 3612+         dc al1(3)                                                      02-DCCCA
00002613 08                                 3613+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002614 00                                 3614+         dc bl.8'00000000'                                              02-DCCCA
00002615 000000                             3615+         dc al3(0)                                                      02-DCCCA
00002618 00000000000025C8                   3616+         dc ad(@LNAME776)                                               02-DCCCA
00002620                                    3617+         ds 0d                                                          02-DCCCA
00002620 00000000000025E8                   3618+         dc ad($eye0082)                                                02-DCCCA
00002628 0000000000000000                   3619+         dc ad(0)                                                       02-DCCCA
00002630                                    3620+         ds    0d                                                       01-DCCPR
                                            3621+         entry rd_list_destroy_free                                     01-DCCPR
00002630                                    3622+rd_list_destroy_free ds 0d                                              01-DCCPR
00002630                                    3623+@REGION_776_1 ds 0h                                                     01-DCCPR
00002630 EBEC D008 0024          00000008   3624+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002636 E3E0 D088 0004          00000088   3625+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000263C E3C0 D090 0004          00000090   3626+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002642 B904 002E                          3627+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002646 E3B0 C018 0004          00000018   3628+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000264C A7EB 00B0               000000B0   3629+         aghi  14,176              increase by frame size               01-DCCPR
00002650 E3E0 C020 0021          00000020   3630+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002656 4720 B020               00000020   3631+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000265A                                    3632+@PER_776 ds    0h                                                       01-DCCPR
0000265A EBDE 2080 0024          00000080   3633+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002660 E3C0 2090 0024          00000090   3634+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002666 B904 00D2                          3635+         lgr   13,2                set real frame pointer               01-DCCPR
0000266A B904 00CF                          3636+         lgr   12,15               set base reg                         01-DCCPR
                        00002630            3637+         using @REGION_776_1,12                                         01-DCCPR
                                            3638 * ******* End of Prologue
                                            3639 * *
                                                                                                                           Page   76 
  Active Usings: @REGION_776_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3640 * ***           rd_list_destroy((rd_list_t *)rl);
0000266E E3F0 1000 0004          00000000   3641          LG    15,0(0,1)   ; rl
00002674 E3F0 D0A8 0024          000000A8   3642          STG   15,168(0,13)
0000267A 4110 D0A8               000000A8   3643          LA    1,168(0,13)
0000267E E3F0 C0A8 0004          000026D8   3644          LG    15,@lit_776_104 ; rd_list_destroy
00002684                                    3645 @@gen_label136 DS    0H
00002684 05EF                               3646          BALR  14,15
00002686                                    3647 @@gen_label137 DS    0H
                                            3648 * ***   }
00002686                                    3649 @ret_lab_776 DS 0H
                                            3650 * * **** Start of Epilogue
                                            3651          DCCEPIL
00002686                                    3652+         ds 0h                                                          01-DCCEP
                                            3653+* Epilog
00002686 D707 D088 D088 00000088 00000088   3654+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000268C E3D0 D080 0004          00000080   3655+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002692 E3C0 D090 0004          00000090   3656+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002698 E3B0 C018 0004          00000018   3657+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000269E E3C0 B010 0021          00000010   3658+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000026A4 E3E0 D008 0004          00000008   3659+         lg  14,8(0,13)          load up return address                 01-DCCEP
000026AA EB1C D020 0004          00000020   3660+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000026B0 078E                               3661+         bcr 8,14                if same dsab, just return              01-DCCEP
000026B2 E3F0 D010 0024          00000010   3662+         stg 15,16(0,13)         save return code                       01-DCCEP
000026B8 E300 D018 0024          00000018   3663+         stg 0,24(0,13)          save more return code                  01-DCCEP
000026BE E3F0 D090 0004          00000090   3664+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000026C4 E3F0 F018 0004          00000018   3665+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000026CA 47F0 F040               00000040   3666+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3667+* End of Epilog
                                            3668 * * **** End of Epilogue
000026D0                                    3669          DS    0D
000026D0 000000B0                           3670 @FRAMESIZE_776 DC F'176'
000026D4 00000000
000026D8 00000000000024F8                   3671 @lit_776_104 DC AD(rd_list_destroy)
                                            3672          DROP  12
                                            3673 *
                                            3674 *   DSECT for automatic variables in "rd_list_destroy_free"
                                            3675 *      (FUNCTION #776)
                                            3676 *
00000000                00000000 000000A8   3677 @AUTO#rd_list_destroy_free DSECT
00000000                                    3678          DS    XL168
                                            3679 *
000026E0                00000000 00003F28   3680 @CODE    CSECT
                                            3681 *
                                            3682 *
                                            3683 *
                                            3684 * ....... start of rd_list_elem
                                            3685 rd_list_elem ALIAS X'99846D9389A2A36D85938594'
000026E0                                    3686 @LNAME777 DS   0H
000026E0 0000000C                           3687          DC    X'0000000C'
000026E4 99846D9389A2A36D                   3688          DC    C'rd_list_elem'
000026F0 00                                 3689          DC    X'00'
                                            3690 rd_list_elem DCCPRLG CINDEX=777,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY=YE*
                                                                                                                           Page   77 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME777
                                            3691          macro
                                            3692          dccextrn &m
                                            3693          gblc    &$dccext(1000)
                                            3694          gbla    &$dccexti
                                            3695          lcla    &i
                                            3696 &$dccext(&$dccexti+1) setc    '&m'
                                            3697 &i       seta    1
                                            3698 .loop    aif    (&i gt &$dccexti).around
                                            3699          aif    ('&$dccext(&i)' eq '&m').getout
                                            3700 &i       seta    &i+1
                                            3701          ago     .loop
                                            3702 .around  anop
                                            3703 &$dccexti seta &$dccexti+1
                                            3704          extrn  &m
                                            3705 .getout  anop
                                            3706          mend
000026F8                                    3707+$eye0085    ds    0d                                                    02-DCCCA
000026F8 C4C3C3                             3708+         dc cl3'DCC'                                                    02-DCCCA
000026FB 01                                 3709+         dc xl1'01' format one                                          02-DCCCA
000026FC 00000000                           3710+         dc a(0)                                                        02-DCCCA
00002700 0000000000000000                   3711+         dc ad(0)                                                       02-DCCCA
00002708 00000000000000A8                   3712+         dc ad(168)                                                     02-DCCCA
00002710 0000000000000000                   3713+         dc ad(0)                                                       02-DCCCA
00002718 0000000000001000                   3714+         dc ad(4096)                                                    02-DCCCA
00002720 20                                 3715+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002721 03                                 3716+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002722 03                                 3717+         dc al1(3)                                                      02-DCCCA
00002723 08                                 3718+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002724 00                                 3719+         dc bl.8'00000000'                                              02-DCCCA
00002725 000000                             3720+         dc al3(0)                                                      02-DCCCA
00002728 00000000000026E0                   3721+         dc ad(@LNAME777)                                               02-DCCCA
00002730                                    3722+         ds 0d                                                          02-DCCCA
00002730 00000000000026F8                   3723+         dc ad($eye0085)                                                02-DCCCA
00002738 0000000000000000                   3724+         dc ad(0)                                                       02-DCCCA
00002740                                    3725+         ds    0d                                                       01-DCCPR
                                            3726+         entry rd_list_elem                                             01-DCCPR
00002740                                    3727+rd_list_elem ds 0d                                                      01-DCCPR
00002740                                    3728+@REGION_777_1 ds 0h                                                     01-DCCPR
00002740 EBEC D008 0024          00000008   3729+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002746 B904 00CF                          3730+         lgr   12,15               set base reg                         01-DCCPR
                        00002740            3731+         using @REGION_777_1,12                                         01-DCCPR
                                            3732 * ******* End of Prologue
                                            3733 * *
                                            3734 * ***           if (((idx < rl->rl_cnt)))
0000274A 58F0 100C               0000000C   3735          L     15,12(0,1)  ; idx
0000274E E310 1000 0004          00000000   3736          LG    1,0(0,1)    ; rl
00002754 59F0 1004               00000004   3737          C     15,4(0,1)
00002758 47B0 C036               00002776   3738          BNL   @L109
                                            3739 * ***                   return (void *)rl->rl_elems[idx];
0000275C B914 00FF                          3740          LGFR  15,15
00002760 E310 1008 0004          00000008   3741          LG    1,8(0,1)    ; offset of rl_elems in rd_list_s
                                                                                                                           Page   78 
  Active Usings: @REGION_777_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002766 EBFF 0003 000D          00000003   3742          SLLG  15,15,3(0)  ; *0x8
0000276C E3FF 1000 0004          00000000   3743          LG    15,0(15,1)
00002772 47F0 C03A               0000277A   3744          B     @ret_lab_777
00002776                                    3745 @L109    DS    0H
                                            3746 * ***           return ((void *)0);
00002776 A7F9 0000               00000000   3747          LGHI  15,0        ; 0
                                            3748 * ***   }
0000277A                                    3749 @ret_lab_777 DS 0H
                                            3750 * * **** Start of Epilogue
                                            3751          DCCEPIL
0000277A                                    3752+         ds 0h                                                          01-DCCEP
                                            3753+* Epilog
                                            3754+* Epilog
0000277A E3E0 D008 0004          00000008   3755+         lg    14,8(,13) restore the reg                                01-DCCEP
00002780 EB1C D020 0004          00000020   3756+         lmg   1,12,32(13)                                              01-DCCEP
00002786 07FE                               3757+         br   14                                                        01-DCCEP
                                            3758+* End of Epilog
                                            3759 * * **** End of Epilogue
                                            3760          DROP  12
                                            3761 *
                                            3762 *   DSECT for automatic variables in "rd_list_elem"
                                            3763 *      (FUNCTION #777)
                                            3764 *
00000000                00000000 000000A8   3765 @AUTO#rd_list_elem DSECT
00000000                                    3766          DS    XL168
                                            3767 *
00002788                00000000 00003F28   3768 @CODE    CSECT
                                            3769 *
                                            3770 *
                                            3771 *
                                            3772 * ....... start of rd_list_index
                                            3773 rd_list_index ALIAS X'99846D9389A2A36D89958485A7'
00002788                                    3774 @LNAME779 DS   0H
00002788 0000000D                           3775          DC    X'0000000D'
0000278C 99846D9389A2A36D                   3776          DC    C'rd_list_index'
00002799 00                                 3777          DC    X'00'
                                            3778 rd_list_index DCCPRLG CINDEX=779,BASER=12,FRAME=192,ENTRY=YES,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME779
                                            3779          macro
                                            3780          dccextrn &m
                                            3781          gblc    &$dccext(1000)
                                            3782          gbla    &$dccexti
                                            3783          lcla    &i
                                            3784 &$dccext(&$dccexti+1) setc    '&m'
                                            3785 &i       seta    1
                                            3786 .loop    aif    (&i gt &$dccexti).around
                                            3787          aif    ('&$dccext(&i)' eq '&m').getout
                                            3788 &i       seta    &i+1
                                            3789          ago     .loop
                                            3790 .around  anop
                                            3791 &$dccexti seta &$dccexti+1
                                            3792          extrn  &m
                                                                                                                           Page   79 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3793 .getout  anop
                                            3794          mend
000027A0                                    3795+$eye0088    ds    0d                                                    02-DCCCA
000027A0 C4C3C3                             3796+         dc cl3'DCC'                                                    02-DCCCA
000027A3 01                                 3797+         dc xl1'01' format one                                          02-DCCCA
000027A4 00000000                           3798+         dc a(0)                                                        02-DCCCA
000027A8 0000000000002812                   3799+         dc ad(@PER_779)                                                02-DCCCA
000027B0 00000000000000C0                   3800+         dc ad(192)                                                     02-DCCCA
000027B8 0000000000000000                   3801+         dc ad(0)                                                       02-DCCCA
000027C0 0000000000001000                   3802+         dc ad(4096)                                                    02-DCCCA
000027C8 20                                 3803+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000027C9 03                                 3804+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000027CA 03                                 3805+         dc al1(3)                                                      02-DCCCA
000027CB 08                                 3806+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000027CC 00                                 3807+         dc bl.8'00000000'                                              02-DCCCA
000027CD 000000                             3808+         dc al3(0)                                                      02-DCCCA
000027D0 0000000000002788                   3809+         dc ad(@LNAME779)                                               02-DCCCA
000027D8                                    3810+         ds 0d                                                          02-DCCCA
000027D8 00000000000027A0                   3811+         dc ad($eye0088)                                                02-DCCCA
000027E0 0000000000000000                   3812+         dc ad(0)                                                       02-DCCCA
000027E8                                    3813+         ds    0d                                                       01-DCCPR
                                            3814+         entry rd_list_index                                            01-DCCPR
000027E8                                    3815+rd_list_index ds 0d                                                     01-DCCPR
000027E8                                    3816+@REGION_779_1 ds 0h                                                     01-DCCPR
000027E8 EBEC D008 0024          00000008   3817+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000027EE E3E0 D088 0004          00000088   3818+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000027F4 E3C0 D090 0004          00000090   3819+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000027FA B904 002E                          3820+         lgr   2,14                copy addr of our savearea            01-DCCPR
000027FE E3B0 C018 0004          00000018   3821+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002804 A7EB 00C0               000000C0   3822+         aghi  14,192              increase by frame size               01-DCCPR
00002808 E3E0 C020 0021          00000020   3823+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000280E 4720 B020               00000020   3824+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002812                                    3825+@PER_779 ds    0h                                                       01-DCCPR
00002812 EBDE 2080 0024          00000080   3826+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002818 E3C0 2090 0024          00000090   3827+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000281E B904 00D2                          3828+         lgr   13,2                set real frame pointer               01-DCCPR
00002822 B904 00CF                          3829+         lgr   12,15               set base reg                         01-DCCPR
                        000027E8            3830+         using @REGION_779_1,12                                         01-DCCPR
00002826 B904 0031                          3831          LGR   3,1         ; ptr to parm area
                                            3832 * ******* End of Prologue
                                            3833 * *
                                            3834 * ***           int i;
                                            3835 * ***           const void *elem;
                                            3836 * ***
                                            3837 * ***           for (i = 0 ; (elem = rd_list_elem(rl, i)) ; i++) {
0000282A A728 0000               00000000   3838          LHI   2,0         ; 0
0000282E 47F0 C090               00002878   3839          B     @L111
00002838                                    3840          DS    0D
00002838 000000C0                           3841 @FRAMESIZE_779 DC F'192'
0000283C 00000000
00002840 0000000000002740                   3842 @lit_779_108 DC AD(rd_list_elem)
00002848                                    3843 @L110    DS    0H
                                                                                                                           Page   80 
  Active Usings: @REGION_779_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3844 * ***                   if (!cmp(match, elem))
00002848 E310 3008 0004          00000008   3845          LG    1,8(0,3)    ; match
0000284E E310 D0B0 0024          000000B0   3846          STG   1,176(0,13)
00002854 E3F0 D0B8 0024          000000B8   3847          STG   15,184(0,13)
0000285A E3F0 3010 0004          00000010   3848          LG    15,16(0,3)  ; cmp
00002860 4110 D0B0               000000B0   3849          LA    1,176(0,13)
00002864                                    3850 @@gen_label139 DS    0H
00002864 05EF                               3851          BALR  14,15
00002866                                    3852 @@gen_label140 DS    0H
00002866 12FF                               3853          LTR   15,15
00002868 4770 C08C               00002874   3854          BNZ   @L114
                                            3855 * ***                           return i;
0000286C B914 00F2                          3856          LGFR  15,2
00002870 47F0 C0BE               000028A6   3857          B     @ret_lab_779
00002874                                    3858 @L114    DS    0H
                                            3859 * ***           }
00002874 A72A 0001               00000001   3860          AHI   2,1
00002878                                    3861 @L111    DS    0H
00002878 E3F0 3000 0004          00000000   3862          LG    15,0(0,3)   ; rl
0000287E E3F0 D0B0 0024          000000B0   3863          STG   15,176(0,13)
00002884 B914 00F2                          3864          LGFR  15,2
00002888 E3F0 D0B8 0024          000000B8   3865          STG   15,184(0,13)
0000288E 4110 D0B0               000000B0   3866          LA    1,176(0,13)
00002892 E3F0 C058 0004          00002840   3867          LG    15,@lit_779_108 ; rd_list_elem
00002898                                    3868 @@gen_label142 DS    0H
00002898 05EF                               3869          BALR  14,15
0000289A                                    3870 @@gen_label143 DS    0H
0000289A B902 001F                          3871          LTGR  1,15
0000289E 4770 C060               00002848   3872          BNZ   @L110
                                            3873 * ***
                                            3874 * ***           return -1;
000028A2 A7F9 FFFF               0000FFFF   3875          LGHI  15,-1       ; -1
                                            3876 * ***   }
000028A6                                    3877 @ret_lab_779 DS 0H
                                            3878 * * **** Start of Epilogue
                                            3879          DCCEPIL
000028A6                                    3880+         ds 0h                                                          01-DCCEP
                                            3881+* Epilog
000028A6 D707 D088 D088 00000088 00000088   3882+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000028AC E3D0 D080 0004          00000080   3883+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000028B2 E3C0 D090 0004          00000090   3884+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000028B8 E3B0 C018 0004          00000018   3885+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000028BE E3C0 B010 0021          00000010   3886+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000028C4 E3E0 D008 0004          00000008   3887+         lg  14,8(0,13)          load up return address                 01-DCCEP
000028CA EB1C D020 0004          00000020   3888+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000028D0 078E                               3889+         bcr 8,14                if same dsab, just return              01-DCCEP
000028D2 E3F0 D010 0024          00000010   3890+         stg 15,16(0,13)         save return code                       01-DCCEP
000028D8 E300 D018 0024          00000018   3891+         stg 0,24(0,13)          save more return code                  01-DCCEP
000028DE E3F0 D090 0004          00000090   3892+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000028E4 E3F0 F018 0004          00000018   3893+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000028EA 47F0 F040               00000040   3894+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3895+* End of Epilog
                                                                                                                           Page   81 
  Active Usings: @REGION_779_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3896 * * **** End of Epilogue
                                            3897          DROP  12
                                            3898 *
                                            3899 *   DSECT for automatic variables in "rd_list_index"
                                            3900 *      (FUNCTION #779)
                                            3901 *
00000000                00000000 000000AC   3902 @AUTO#rd_list_index DSECT
00000000                                    3903          DS    XL168
000000A8                                    3904 rd_list_index#i#0 DS 1F    ; i
                                            3905 *
000028EE                00000000 00003F28   3906 @CODE    CSECT
                                            3907 *
                                            3908 *
                                            3909 *
                                            3910 * ....... start of rd_list_find
                                            3911 rd_list_find ALIAS X'99846D9389A2A36D86899584'
000028EE                                    3912 @LNAME780 DS   0H
000028EE 0000000C                           3913          DC    X'0000000C'
000028F2 99846D9389A2A36D                   3914          DC    C'rd_list_find'
000028FE 00                                 3915          DC    X'00'
                                            3916 rd_list_find DCCPRLG CINDEX=780,BASER=12,FRAME=216,ENTRY=YES,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME780
                                            3917          macro
                                            3918          dccextrn &m
                                            3919          gblc    &$dccext(1000)
                                            3920          gbla    &$dccexti
                                            3921          lcla    &i
                                            3922 &$dccext(&$dccexti+1) setc    '&m'
                                            3923 &i       seta    1
                                            3924 .loop    aif    (&i gt &$dccexti).around
                                            3925          aif    ('&$dccext(&i)' eq '&m').getout
                                            3926 &i       seta    &i+1
                                            3927          ago     .loop
                                            3928 .around  anop
                                            3929 &$dccexti seta &$dccexti+1
                                            3930          extrn  &m
                                            3931 .getout  anop
                                            3932          mend
00002900                                    3933+$eye0091    ds    0d                                                    02-DCCCA
00002900 C4C3C3                             3934+         dc cl3'DCC'                                                    02-DCCCA
00002903 01                                 3935+         dc xl1'01' format one                                          02-DCCCA
00002904 00000000                           3936+         dc a(0)                                                        02-DCCCA
00002908 0000000000002972                   3937+         dc ad(@PER_780)                                                02-DCCCA
00002910 00000000000000D8                   3938+         dc ad(216)                                                     02-DCCCA
00002918 0000000000000000                   3939+         dc ad(0)                                                       02-DCCCA
00002920 0000000000001000                   3940+         dc ad(4096)                                                    02-DCCCA
00002928 20                                 3941+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002929 03                                 3942+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000292A 03                                 3943+         dc al1(3)                                                      02-DCCCA
0000292B 08                                 3944+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000292C 00                                 3945+         dc bl.8'00000000'                                              02-DCCCA
0000292D 000000                             3946+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   82 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002930 00000000000028EE                   3947+         dc ad(@LNAME780)                                               02-DCCCA
00002938                                    3948+         ds 0d                                                          02-DCCCA
00002938 0000000000002900                   3949+         dc ad($eye0091)                                                02-DCCCA
00002940 0000000000000000                   3950+         dc ad(0)                                                       02-DCCCA
00002948                                    3951+         ds    0d                                                       01-DCCPR
                                            3952+         entry rd_list_find                                             01-DCCPR
00002948                                    3953+rd_list_find ds 0d                                                      01-DCCPR
00002948                                    3954+@REGION_780_1 ds 0h                                                     01-DCCPR
00002948 EBEC D008 0024          00000008   3955+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000294E E3E0 D088 0004          00000088   3956+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002954 E3C0 D090 0004          00000090   3957+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000295A B904 002E                          3958+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000295E E3B0 C018 0004          00000018   3959+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002964 A7EB 00D8               000000D8   3960+         aghi  14,216              increase by frame size               01-DCCPR
00002968 E3E0 C020 0021          00000020   3961+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000296E 4720 B020               00000020   3962+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002972                                    3963+@PER_780 ds    0h                                                       01-DCCPR
00002972 EBDE 2080 0024          00000080   3964+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002978 E3C0 2090 0024          00000090   3965+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000297E B904 00D2                          3966+         lgr   13,2                set real frame pointer               01-DCCPR
00002982 B904 00CF                          3967+         lgr   12,15               set base reg                         01-DCCPR
                        00002948            3968+         using @REGION_780_1,12                                         01-DCCPR
                                            3969          DCCPRV REG=15     ; Get PRV from DVT
00002986 E3F0 B008 0004          00000008   3970+         LG 15,8(0,11)                                                  01-DCCPR
0000298C B904 0051                          3971          LGR   5,1         ; ptr to parm area
                                            3972 * ******* End of Prologue
                                            3973 * *
00002990 E330 5000 0004          00000000   3974          LG    3,0(0,5)    ; rl
                                            3975 * ***           int i;
                                            3976 * ***           const void *elem;
                                            3977 * ***
                                            3978 * ***      if (rl->rl_flags & 0x2) {
00002996 9102 301B      0000001B 00000002   3979          TM    27(3),2
0000299A 4780 C0F0               00002A38   3980          BZ    @L115
                                            3981 * ***         void **r;
                                            3982 * ***         rd_list_cmp_curr = cmp;
0000299E E310 C0D8 0014          00002A20   3983          LGF   1,@lit_780_111
000029A4 41F1 F000               00000000   3984          LA    15,0(1,15)
000029A8 E310 5010 0004          00000010   3985          LG    1,16(0,5)   ; cmp
000029AE E310 F200 0024          00000200   3986          STG   1,512(0,15) ; rd_list_cmp_curr
                                            3987 * ***         r = bsearch(&match,
                                            3988 * ***                rl->rl_elems, rl->rl_cnt,
                                            3989 * ***                sizeof(*rl->rl_elems), rd_list_cmp_trampoline);
000029B4 41F0 5008               00000008   3990          LA    15,8(0,5)
000029B8 E3F0 D0B0 0024          000000B0   3991          STG   15,176(0,13)
000029BE E3F0 3008 0004          00000008   3992          LG    15,8(0,3)
000029C4 E3F0 D0B8 0024          000000B8   3993          STG   15,184(0,13)
000029CA E3F0 3004 0014          00000004   3994          LGF   15,4(0,3)
000029D0 E3F0 D0C0 0024          000000C0   3995          STG   15,192(0,13)
000029D6 E548 D0C8 0008          000000C8   3996          MVGHI 200(13),8
000029DC E3F0 C0D0 0004          00002A18   3997          LG    15,@lit_780_112 ; rd_list_cmp_trampoline
000029E2 E3F0 D0D0 0024          000000D0   3998          STG   15,208(0,13)
                                                                                                                           Page   83 
  Active Usings: @REGION_780_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000029E8 4110 D0B0               000000B0   3999          LA    1,176(0,13)
000029EC E3F0 C0C8 0004          00002A10   4000          LG    15,@lit_780_113 ; bsearch
000029F2                                    4001 @@gen_label146 DS    0H
000029F2 05EF                               4002          BALR  14,15
000029F4                                    4003 @@gen_label147 DS    0H
                                            4004 * ***         return r ? *r : ((void *)0);
000029F4 B902 001F                          4005          LTGR  1,15
000029F8 4780 C0E8               00002A30   4006          BZ    @L116
000029FC E3F0 F000 0004          00000000   4007          LG    15,0(0,15)  ; r
00002A02 47F0 C0EC               00002A34   4008          B     @L117
00002A08                                    4009          DS    0D
00002A08 000000D8                           4010 @FRAMESIZE_780 DC F'216'
00002A0C 00000000
00002A10 0000000000000000                   4011 @lit_780_113 DC AD(bsearch)
00002A18 0000000000001F98                   4012 @lit_780_112 DC AD(rd_list_cmp_trampoline)
00002A20 00000000                           4013 @lit_780_111 DC Q(@@STATIC)
00002A24 00000000
00002A28 0000000000002740                   4014 @lit_780_116 DC AD(rd_list_elem)
00002A30                                    4015 @L116    DS    0H
00002A30 A7F9 0000               00000000   4016          LGHI  15,0        ; 0
00002A34                                    4017 @L117    DS    0H
00002A34 47F0 C154               00002A9C   4018          B     @ret_lab_780
                                            4019 * ***      }
00002A38                                    4020 @L115    DS    0H
                                            4021 * ***
                                            4022 * ***           for (i = 0 ; (elem = rd_list_elem(rl, i)) ; i++) {
00002A38 A728 0000               00000000   4023          LHI   2,0         ; 0
00002A3C 47F0 C128               00002A70   4024          B     @L119
00002A40                                    4025 @L118    DS    0H
                                            4026 * ***                   if (!cmp(match, elem))
00002A40 E3F0 5008 0004          00000008   4027          LG    15,8(0,5)   ; match
00002A46 E3F0 D0B0 0024          000000B0   4028          STG   15,176(0,13)
00002A4C E340 D0B8 0024          000000B8   4029          STG   4,184(0,13)
00002A52 E3F0 5010 0004          00000010   4030          LG    15,16(0,5)  ; cmp
00002A58 4110 D0B0               000000B0   4031          LA    1,176(0,13)
00002A5C                                    4032 @@gen_label149 DS    0H
00002A5C 05EF                               4033          BALR  14,15
00002A5E                                    4034 @@gen_label150 DS    0H
00002A5E 12FF                               4035          LTR   15,15
00002A60 4770 C124               00002A6C   4036          BNZ   @L122
                                            4037 * ***                           return (void *)elem;
00002A64 B904 00F4                          4038          LGR   15,4
00002A68 47F0 C154               00002A9C   4039          B     @ret_lab_780
00002A6C                                    4040 @L122    DS    0H
                                            4041 * ***           }
00002A6C A72A 0001               00000001   4042          AHI   2,1
00002A70                                    4043 @L119    DS    0H
00002A70 E330 D0B0 0024          000000B0   4044          STG   3,176(0,13)
00002A76 B914 00F2                          4045          LGFR  15,2
00002A7A E3F0 D0B8 0024          000000B8   4046          STG   15,184(0,13)
00002A80 4110 D0B0               000000B0   4047          LA    1,176(0,13)
00002A84 E3F0 C0E0 0004          00002A28   4048          LG    15,@lit_780_116 ; rd_list_elem
                                                                                                                           Page   84 
  Active Usings: @REGION_780_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002A8A                                    4049 @@gen_label152 DS    0H
00002A8A 05EF                               4050          BALR  14,15
00002A8C                                    4051 @@gen_label153 DS    0H
00002A8C B904 004F                          4052          LGR   4,15
00002A90 B902 00F4                          4053          LTGR  15,4
00002A94 4770 C0F8               00002A40   4054          BNZ   @L118
                                            4055 * ***
                                            4056 * ***           return ((void *)0);
00002A98 A7F9 0000               00000000   4057          LGHI  15,0        ; 0
                                            4058 * ***   }
00002A9C                                    4059 @ret_lab_780 DS 0H
                                            4060 * * **** Start of Epilogue
                                            4061          DCCEPIL
00002A9C                                    4062+         ds 0h                                                          01-DCCEP
                                            4063+* Epilog
00002A9C D707 D088 D088 00000088 00000088   4064+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002AA2 E3D0 D080 0004          00000080   4065+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002AA8 E3C0 D090 0004          00000090   4066+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002AAE E3B0 C018 0004          00000018   4067+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002AB4 E3C0 B010 0021          00000010   4068+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002ABA E3E0 D008 0004          00000008   4069+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002AC0 EB1C D020 0004          00000020   4070+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002AC6 078E                               4071+         bcr 8,14                if same dsab, just return              01-DCCEP
00002AC8 E3F0 D010 0024          00000010   4072+         stg 15,16(0,13)         save return code                       01-DCCEP
00002ACE E300 D018 0024          00000018   4073+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002AD4 E3F0 D090 0004          00000090   4074+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002ADA E3F0 F018 0004          00000018   4075+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002AE0 47F0 F040               00000040   4076+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4077+* End of Epilog
                                            4078 * * **** End of Epilogue
                                            4079          DROP  12
                                            4080 *
                                            4081 *   DSECT for automatic variables in "rd_list_find"
                                            4082 *      (FUNCTION #780)
                                            4083 *
00000000                00000000 000000AC   4084 @AUTO#rd_list_find DSECT
00000000                                    4085          DS    XL168
000000A8                                    4086 rd_list_find#i#0 DS 1F     ; i
                                            4087 *
00002AE4                00000000 00003F28   4088 @CODE    CSECT
                                            4089 *
                                            4090 *
                                            4091 *
                                            4092 * ....... start of rd_list_first
                                            4093 rd_list_first ALIAS X'99846D9389A2A36D868999A2A3'
00002AE4                                    4094 @LNAME781 DS   0H
00002AE4 0000000D                           4095          DC    X'0000000D'
00002AE8 99846D9389A2A36D                   4096          DC    C'rd_list_first'
00002AF5 00                                 4097          DC    X'00'
                                            4098 rd_list_first DCCPRLG CINDEX=781,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME781
                                            4099          macro
                                                                                                                           Page   85 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            4100          dccextrn &m
                                            4101          gblc    &$dccext(1000)
                                            4102          gbla    &$dccexti
                                            4103          lcla    &i
                                            4104 &$dccext(&$dccexti+1) setc    '&m'
                                            4105 &i       seta    1
                                            4106 .loop    aif    (&i gt &$dccexti).around
                                            4107          aif    ('&$dccext(&i)' eq '&m').getout
                                            4108 &i       seta    &i+1
                                            4109          ago     .loop
                                            4110 .around  anop
                                            4111 &$dccexti seta &$dccexti+1
                                            4112          extrn  &m
                                            4113 .getout  anop
                                            4114          mend
00002AF8                                    4115+$eye0095    ds    0d                                                    02-DCCCA
00002AF8 C4C3C3                             4116+         dc cl3'DCC'                                                    02-DCCCA
00002AFB 01                                 4117+         dc xl1'01' format one                                          02-DCCCA
00002AFC 00000000                           4118+         dc a(0)                                                        02-DCCCA
00002B00 0000000000000000                   4119+         dc ad(0)                                                       02-DCCCA
00002B08 00000000000000A8                   4120+         dc ad(168)                                                     02-DCCCA
00002B10 0000000000000000                   4121+         dc ad(0)                                                       02-DCCCA
00002B18 0000000000001000                   4122+         dc ad(4096)                                                    02-DCCCA
00002B20 20                                 4123+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002B21 03                                 4124+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002B22 03                                 4125+         dc al1(3)                                                      02-DCCCA
00002B23 08                                 4126+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002B24 00                                 4127+         dc bl.8'00000000'                                              02-DCCCA
00002B25 000000                             4128+         dc al3(0)                                                      02-DCCCA
00002B28 0000000000002AE4                   4129+         dc ad(@LNAME781)                                               02-DCCCA
00002B30                                    4130+         ds 0d                                                          02-DCCCA
00002B30 0000000000002AF8                   4131+         dc ad($eye0095)                                                02-DCCCA
00002B38 0000000000000000                   4132+         dc ad(0)                                                       02-DCCCA
00002B40                                    4133+         ds    0d                                                       01-DCCPR
                                            4134+         entry rd_list_first                                            01-DCCPR
00002B40                                    4135+rd_list_first ds 0d                                                     01-DCCPR
00002B40                                    4136+@REGION_781_1 ds 0h                                                     01-DCCPR
00002B40 EBEC D008 0024          00000008   4137+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002B46 B904 00CF                          4138+         lgr   12,15               set base reg                         01-DCCPR
                        00002B40            4139+         using @REGION_781_1,12                                         01-DCCPR
                                            4140 * ******* End of Prologue
                                            4141 * *
                                            4142 * ***           if (rl->rl_cnt == 0)
00002B4A E3F0 1000 0004          00000000   4143          LG    15,0(0,1)   ; rl
00002B50 E55C F004 0000          00000004   4144          CHSI  4(15),0
00002B56 4770 C022               00002B62   4145          BNE   @L123
                                            4146 * ***                   return ((void *)0);
00002B5A A7F9 0000               00000000   4147          LGHI  15,0        ; 0
00002B5E 47F0 C02E               00002B6E   4148          B     @ret_lab_781
00002B62                                    4149 @L123    DS    0H
                                            4150 * ***           return rl->rl_elems[0];
00002B62 E3F0 F008 0004          00000008   4151          LG    15,8(0,15)  ; offset of rl_elems in rd_list_s
                                                                                                                           Page   86 
  Active Usings: @REGION_781_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002B68 E3F0 F000 0004          00000000   4152          LG    15,0(0,15)
                                            4153 * ***   }
00002B6E                                    4154 @ret_lab_781 DS 0H
                                            4155 * * **** Start of Epilogue
                                            4156          DCCEPIL
00002B6E                                    4157+         ds 0h                                                          01-DCCEP
                                            4158+* Epilog
                                            4159+* Epilog
00002B6E E3E0 D008 0004          00000008   4160+         lg    14,8(,13) restore the reg                                01-DCCEP
00002B74 EB1C D020 0004          00000020   4161+         lmg   1,12,32(13)                                              01-DCCEP
00002B7A 07FE                               4162+         br   14                                                        01-DCCEP
                                            4163+* End of Epilog
                                            4164 * * **** End of Epilogue
                                            4165          DROP  12
                                            4166 *
                                            4167 *   DSECT for automatic variables in "rd_list_first"
                                            4168 *      (FUNCTION #781)
                                            4169 *
00000000                00000000 000000A8   4170 @AUTO#rd_list_first DSECT
00000000                                    4171          DS    XL168
                                            4172 *
00002B7C                00000000 00003F28   4173 @CODE    CSECT
                                            4174 *
                                            4175 *
                                            4176 *
                                            4177 * ....... start of rd_list_last
                                            4178 rd_list_last ALIAS X'99846D9389A2A36D9381A2A3'
00002B7C                                    4179 @LNAME782 DS   0H
00002B7C 0000000C                           4180          DC    X'0000000C'
00002B80 99846D9389A2A36D                   4181          DC    C'rd_list_last'
00002B8C 00                                 4182          DC    X'00'
                                            4183 rd_list_last DCCPRLG CINDEX=782,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME782
                                            4184          macro
                                            4185          dccextrn &m
                                            4186          gblc    &$dccext(1000)
                                            4187          gbla    &$dccexti
                                            4188          lcla    &i
                                            4189 &$dccext(&$dccexti+1) setc    '&m'
                                            4190 &i       seta    1
                                            4191 .loop    aif    (&i gt &$dccexti).around
                                            4192          aif    ('&$dccext(&i)' eq '&m').getout
                                            4193 &i       seta    &i+1
                                            4194          ago     .loop
                                            4195 .around  anop
                                            4196 &$dccexti seta &$dccexti+1
                                            4197          extrn  &m
                                            4198 .getout  anop
                                            4199          mend
00002B90                                    4200+$eye0098    ds    0d                                                    02-DCCCA
00002B90 C4C3C3                             4201+         dc cl3'DCC'                                                    02-DCCCA
00002B93 01                                 4202+         dc xl1'01' format one                                          02-DCCCA
                                                                                                                           Page   87 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002B94 00000000                           4203+         dc a(0)                                                        02-DCCCA
00002B98 0000000000000000                   4204+         dc ad(0)                                                       02-DCCCA
00002BA0 00000000000000A8                   4205+         dc ad(168)                                                     02-DCCCA
00002BA8 0000000000000000                   4206+         dc ad(0)                                                       02-DCCCA
00002BB0 0000000000001000                   4207+         dc ad(4096)                                                    02-DCCCA
00002BB8 20                                 4208+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002BB9 03                                 4209+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002BBA 03                                 4210+         dc al1(3)                                                      02-DCCCA
00002BBB 08                                 4211+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002BBC 00                                 4212+         dc bl.8'00000000'                                              02-DCCCA
00002BBD 000000                             4213+         dc al3(0)                                                      02-DCCCA
00002BC0 0000000000002B7C                   4214+         dc ad(@LNAME782)                                               02-DCCCA
00002BC8                                    4215+         ds 0d                                                          02-DCCCA
00002BC8 0000000000002B90                   4216+         dc ad($eye0098)                                                02-DCCCA
00002BD0 0000000000000000                   4217+         dc ad(0)                                                       02-DCCCA
00002BD8                                    4218+         ds    0d                                                       01-DCCPR
                                            4219+         entry rd_list_last                                             01-DCCPR
00002BD8                                    4220+rd_list_last ds 0d                                                      01-DCCPR
00002BD8                                    4221+@REGION_782_1 ds 0h                                                     01-DCCPR
00002BD8 EBEC D008 0024          00000008   4222+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002BDE B904 00CF                          4223+         lgr   12,15               set base reg                         01-DCCPR
                        00002BD8            4224+         using @REGION_782_1,12                                         01-DCCPR
                                            4225 * ******* End of Prologue
                                            4226 * *
                                            4227 * ***           if (rl->rl_cnt == 0)
00002BE2 E3F0 1000 0004          00000000   4228          LG    15,0(0,1)   ; rl
00002BE8 E55C F004 0000          00000004   4229          CHSI  4(15),0
00002BEE 4770 C022               00002BFA   4230          BNE   @L124
                                            4231 * ***                   return ((void *)0);
00002BF2 A7F9 0000               00000000   4232          LGHI  15,0        ; 0
00002BF6 47F0 C040               00002C18   4233          B     @ret_lab_782
00002BFA                                    4234 @L124    DS    0H
                                            4235 * ***           return rl->rl_elems[rl->rl_cnt-1];
00002BFA 5810 F004               00000004   4236          L     1,4(0,15)   ; offset of rl_cnt in rd_list_s
00002BFE A71A FFFF               0000FFFF   4237          AHI   1,-1
00002C02 B914 0011                          4238          LGFR  1,1
00002C06 E3F0 F008 0004          00000008   4239          LG    15,8(0,15)  ; offset of rl_elems in rd_list_s
00002C0C EB11 0003 000D          00000003   4240          SLLG  1,1,3(0)    ; *0x8
00002C12 E3F1 F000 0004          00000000   4241          LG    15,0(1,15)
                                            4242 * ***   }
00002C18                                    4243 @ret_lab_782 DS 0H
                                            4244 * * **** Start of Epilogue
                                            4245          DCCEPIL
00002C18                                    4246+         ds 0h                                                          01-DCCEP
                                            4247+* Epilog
                                            4248+* Epilog
00002C18 E3E0 D008 0004          00000008   4249+         lg    14,8(,13) restore the reg                                01-DCCEP
00002C1E EB1C D020 0004          00000020   4250+         lmg   1,12,32(13)                                              01-DCCEP
00002C24 07FE                               4251+         br   14                                                        01-DCCEP
                                            4252+* End of Epilog
                                            4253 * * **** End of Epilogue
                                            4254          DROP  12
                                                                                                                           Page   88 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            4255 *
                                            4256 *   DSECT for automatic variables in "rd_list_last"
                                            4257 *      (FUNCTION #782)
                                            4258 *
00000000                00000000 000000A8   4259 @AUTO#rd_list_last DSECT
00000000                                    4260          DS    XL168
                                            4261 *
00002C26                00000000 00003F28   4262 @CODE    CSECT
                                            4263 *
                                            4264 *
                                            4265 *
                                            4266 * ....... start of rd_list_find_duplicate
                                            4267 rd_list_find_duplicate ALIAS X'99846D9389A2A36D868995846D84A49793898381*
                                                                A385'
00002C26                                    4268 @LNAME783 DS   0H
00002C26 00000016                           4269          DC    X'00000016'
00002C2A 99846D9389A2A36D                   4270          DC    C'rd_list_find_duplicate'
00002C40 00                                 4271          DC    X'00'
                                            4272 rd_list_find_duplicate DCCPRLG CINDEX=783,BASER=12,FRAME=208,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME783
                                            4273          macro
                                            4274          dccextrn &m
                                            4275          gblc    &$dccext(1000)
                                            4276          gbla    &$dccexti
                                            4277          lcla    &i
                                            4278 &$dccext(&$dccexti+1) setc    '&m'
                                            4279 &i       seta    1
                                            4280 .loop    aif    (&i gt &$dccexti).around
                                            4281          aif    ('&$dccext(&i)' eq '&m').getout
                                            4282 &i       seta    &i+1
                                            4283          ago     .loop
                                            4284 .around  anop
                                            4285 &$dccexti seta &$dccexti+1
                                            4286          extrn  &m
                                            4287 .getout  anop
                                            4288          mend
00002C48                                    4289+$eye0101    ds    0d                                                    02-DCCCA
00002C48 C4C3C3                             4290+         dc cl3'DCC'                                                    02-DCCCA
00002C4B 01                                 4291+         dc xl1'01' format one                                          02-DCCCA
00002C4C 00000000                           4292+         dc a(0)                                                        02-DCCCA
00002C50 0000000000002CBA                   4293+         dc ad(@PER_783)                                                02-DCCCA
00002C58 00000000000000D0                   4294+         dc ad(208)                                                     02-DCCCA
00002C60 0000000000000000                   4295+         dc ad(0)                                                       02-DCCCA
00002C68 0000000000001000                   4296+         dc ad(4096)                                                    02-DCCCA
00002C70 20                                 4297+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002C71 03                                 4298+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002C72 03                                 4299+         dc al1(3)                                                      02-DCCCA
00002C73 08                                 4300+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002C74 00                                 4301+         dc bl.8'00000000'                                              02-DCCCA
00002C75 000000                             4302+         dc al3(0)                                                      02-DCCCA
00002C78 0000000000002C26                   4303+         dc ad(@LNAME783)                                               02-DCCCA
00002C80                                    4304+         ds 0d                                                          02-DCCCA
                                                                                                                           Page   89 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002C80 0000000000002C48                   4305+         dc ad($eye0101)                                                02-DCCCA
00002C88 0000000000000000                   4306+         dc ad(0)                                                       02-DCCCA
00002C90                                    4307+         ds    0d                                                       01-DCCPR
                                            4308+         entry rd_list_find_duplicate                                   01-DCCPR
00002C90                                    4309+rd_list_find_duplicate ds 0d                                            01-DCCPR
00002C90                                    4310+@REGION_783_1 ds 0h                                                     01-DCCPR
00002C90 EBEC D008 0024          00000008   4311+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002C96 E3E0 D088 0004          00000088   4312+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002C9C E3C0 D090 0004          00000090   4313+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002CA2 B904 002E                          4314+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002CA6 E3B0 C018 0004          00000018   4315+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002CAC A7EB 00D0               000000D0   4316+         aghi  14,208              increase by frame size               01-DCCPR
00002CB0 E3E0 C020 0021          00000020   4317+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002CB6 4720 B020               00000020   4318+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002CBA                                    4319+@PER_783 ds    0h                                                       01-DCCPR
00002CBA EBDE 2080 0024          00000080   4320+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002CC0 E3C0 2090 0024          00000090   4321+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002CC6 B904 00D2                          4322+         lgr   13,2                set real frame pointer               01-DCCPR
00002CCA B904 00CF                          4323+         lgr   12,15               set base reg                         01-DCCPR
                        00002C90            4324+         using @REGION_783_1,12                                         01-DCCPR
00002CCE B904 0041                          4325          LGR   4,1         ; ptr to parm area
                                            4326 * ******* End of Prologue
                                            4327 * *
00002CD2 E330 4000 0004          00000000   4328          LG    3,0(0,4)    ; rl
                                            4329 * ***           int i;
                                            4330 * ***
                                            4331 * ***           ((rl->rl_flags & 0x2) ? (void)0 : __assert(__func__, "\
                                            4332 * C:\\asgkafka\\librdkafka\\src\\rdlist.c", 368, "rl->rl_flags & 0x2")\
                                            4333 * );
00002CD8 9102 301B      0000001B 00000002   4334          TM    27(3),2
00002CDC 4770 C08C               00002D1C   4335          BNZ   @L126
00002CE0                                    4336 @L125    DS    0H
00002CE0 E3F0 C0B0 0004          00002D40   4337          LG    15,@lit_783_121
00002CE6 41F0 F09C               0000009C   4338          LA    15,156(0,15)
00002CEA E3F0 D0B0 0024          000000B0   4339          STG   15,176(0,13)
00002CF0 E3F0 C0A8 0004          00002D38   4340          LG    15,@lit_783_122
00002CF6 4110 F064               00000064   4341          LA    1,100(0,15)
00002CFA E310 D0B8 0024          000000B8   4342          STG   1,184(0,13)
00002D00 E548 D0C0 0170          000000C0   4343          MVGHI 192(13),368
00002D06 41F0 F0FE               000000FE   4344          LA    15,254(0,15)
00002D0A E3F0 D0C8 0024          000000C8   4345          STG   15,200(0,13)
00002D10 4110 D0B0               000000B0   4346          LA    1,176(0,13)
00002D14 E3F0 C0A0 0004          00002D30   4347          LG    15,@lit_783_123 ; __assert
00002D1A                                    4348 @@gen_label158 DS    0H
00002D1A 05EF                               4349          BALR  14,15
00002D1C                                    4350 @@gen_label159 DS    0H
00002D1C                                    4351 @L126    DS    0H
                                            4352 * ***
                                            4353 * ***           for (i = 1 ; i < rl->rl_cnt ; i++) {
00002D1C A728 0001               00000001   4354          LHI   2,1         ; 1
00002D20 47F0 C126               00002DB6   4355          B     @L128
00002D28                                    4356          DS    0D
                                                                                                                           Page   90 
  Active Usings: @REGION_783_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002D28 000000D0                           4357 @FRAMESIZE_783 DC F'208'
00002D2C 00000000
00002D30 0000000000000000                   4358 @lit_783_123 DC AD(__assert)
00002D38 000000000000402C                   4359 @lit_783_122 DC AD(@strings@)
00002D40 0000000000003F28                   4360 @lit_783_121 DC AD(@DATA)
00002D48                                    4361 @L127    DS    0H
                                            4362 * ***                   if (!cmp(rl->rl_elems[i-1],
                                            4363 * ***                            rl->rl_elems[i]))
00002D48 18F2                               4364          LR    15,2
00002D4A A7FA FFFF               0000FFFF   4365          AHI   15,-1
00002D4E B914 00FF                          4366          LGFR  15,15
00002D52 E310 3008 0004          00000008   4367          LG    1,8(0,3)    ; offset of rl_elems in rd_list_s
00002D58 EBFF 0003 000D          00000003   4368          SLLG  15,15,3(0)  ; *0x8
00002D5E E3FF 1000 0004          00000000   4369          LG    15,0(15,1)
00002D64 E3F0 D0B0 0024          000000B0   4370          STG   15,176(0,13)
00002D6A B914 00F2                          4371          LGFR  15,2
00002D6E E310 3008 0004          00000008   4372          LG    1,8(0,3)    ; offset of rl_elems in rd_list_s
00002D74 EBFF 0003 000D          00000003   4373          SLLG  15,15,3(0)  ; *0x8
00002D7A E3FF 1000 0004          00000000   4374          LG    15,0(15,1)
00002D80 E3F0 D0B8 0024          000000B8   4375          STG   15,184(0,13)
00002D86 E3F0 4008 0004          00000008   4376          LG    15,8(0,4)   ; cmp
00002D8C 4110 D0B0               000000B0   4377          LA    1,176(0,13)
00002D90                                    4378 @@gen_label160 DS    0H
00002D90 05EF                               4379          BALR  14,15
00002D92                                    4380 @@gen_label161 DS    0H
00002D92 12FF                               4381          LTR   15,15
00002D94 4770 C122               00002DB2   4382          BNZ   @L131
                                            4383 * ***                           return rl->rl_elems[i];
00002D98 B914 00F2                          4384          LGFR  15,2
00002D9C E310 3008 0004          00000008   4385          LG    1,8(0,3)    ; offset of rl_elems in rd_list_s
00002DA2 EBFF 0003 000D          00000003   4386          SLLG  15,15,3(0)  ; *0x8
00002DA8 E3FF 1000 0004          00000000   4387          LG    15,0(15,1)
00002DAE 47F0 C132               00002DC2   4388          B     @ret_lab_783
00002DB2                                    4389 @L131    DS    0H
                                            4390 * ***           }
00002DB2 A72A 0001               00000001   4391          AHI   2,1
00002DB6                                    4392 @L128    DS    0H
00002DB6 5920 3004               00000004   4393          C     2,4(0,3)
00002DBA 4740 C0B8               00002D48   4394          BL    @L127
                                            4395 * ***
                                            4396 * ***           return ((void *)0);
00002DBE A7F9 0000               00000000   4397          LGHI  15,0        ; 0
                                            4398 * ***   }
00002DC2                                    4399 @ret_lab_783 DS 0H
                                            4400 * * **** Start of Epilogue
                                            4401          DCCEPIL
00002DC2                                    4402+         ds 0h                                                          01-DCCEP
                                            4403+* Epilog
00002DC2 D707 D088 D088 00000088 00000088   4404+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002DC8 E3D0 D080 0004          00000080   4405+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002DCE E3C0 D090 0004          00000090   4406+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002DD4 E3B0 C018 0004          00000018   4407+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page   91 
  Active Usings: @REGION_783_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002DDA E3C0 B010 0021          00000010   4408+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002DE0 E3E0 D008 0004          00000008   4409+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002DE6 EB1C D020 0004          00000020   4410+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002DEC 078E                               4411+         bcr 8,14                if same dsab, just return              01-DCCEP
00002DEE E3F0 D010 0024          00000010   4412+         stg 15,16(0,13)         save return code                       01-DCCEP
00002DF4 E300 D018 0024          00000018   4413+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002DFA E3F0 D090 0004          00000090   4414+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002E00 E3F0 F018 0004          00000018   4415+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002E06 47F0 F040               00000040   4416+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4417+* End of Epilog
                                            4418 * * **** End of Epilogue
                                            4419          DROP  12
                                            4420 *
                                            4421 *   DSECT for automatic variables in "rd_list_find_duplicate"
                                            4422 *      (FUNCTION #783)
                                            4423 *
00000000                00000000 000000AC   4424 @AUTO#rd_list_find_duplicate DSECT
00000000                                    4425          DS    XL168
000000A8                                    4426 rd_list_find_duplicate#i#0 DS 1F ; i
                                            4427 *
00002E0A                00000000 00003F28   4428 @CODE    CSECT
                                            4429 *
                                            4430 *
                                            4431 *
                                            4432 * ....... start of rd_list_cmp
                                            4433 rd_list_cmp ALIAS X'99846D9389A2A36D839497'
00002E0A                                    4434 @LNAME784 DS   0H
00002E0A 0000000B                           4435          DC    X'0000000B'
00002E0E 99846D9389A2A36D                   4436          DC    C'rd_list_cmp'
00002E19 00                                 4437          DC    X'00'
                                            4438 rd_list_cmp DCCPRLG CINDEX=784,BASER=12,FRAME=192,ENTRY=YES,ARCH=ZARCH,*
                                                                LNAMEADDR=@LNAME784
                                            4439          macro
                                            4440          dccextrn &m
                                            4441          gblc    &$dccext(1000)
                                            4442          gbla    &$dccexti
                                            4443          lcla    &i
                                            4444 &$dccext(&$dccexti+1) setc    '&m'
                                            4445 &i       seta    1
                                            4446 .loop    aif    (&i gt &$dccexti).around
                                            4447          aif    ('&$dccext(&i)' eq '&m').getout
                                            4448 &i       seta    &i+1
                                            4449          ago     .loop
                                            4450 .around  anop
                                            4451 &$dccexti seta &$dccexti+1
                                            4452          extrn  &m
                                            4453 .getout  anop
                                            4454          mend
00002E20                                    4455+$eye0104    ds    0d                                                    02-DCCCA
00002E20 C4C3C3                             4456+         dc cl3'DCC'                                                    02-DCCCA
00002E23 01                                 4457+         dc xl1'01' format one                                          02-DCCCA
00002E24 00000000                           4458+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   92 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002E28 0000000000002E92                   4459+         dc ad(@PER_784)                                                02-DCCCA
00002E30 00000000000000C0                   4460+         dc ad(192)                                                     02-DCCCA
00002E38 0000000000000000                   4461+         dc ad(0)                                                       02-DCCCA
00002E40 0000000000001000                   4462+         dc ad(4096)                                                    02-DCCCA
00002E48 20                                 4463+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002E49 03                                 4464+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002E4A 03                                 4465+         dc al1(3)                                                      02-DCCCA
00002E4B 08                                 4466+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002E4C 00                                 4467+         dc bl.8'00000000'                                              02-DCCCA
00002E4D 000000                             4468+         dc al3(0)                                                      02-DCCCA
00002E50 0000000000002E0A                   4469+         dc ad(@LNAME784)                                               02-DCCCA
00002E58                                    4470+         ds 0d                                                          02-DCCCA
00002E58 0000000000002E20                   4471+         dc ad($eye0104)                                                02-DCCCA
00002E60 0000000000000000                   4472+         dc ad(0)                                                       02-DCCCA
00002E68                                    4473+         ds    0d                                                       01-DCCPR
                                            4474+         entry rd_list_cmp                                              01-DCCPR
00002E68                                    4475+rd_list_cmp ds 0d                                                       01-DCCPR
00002E68                                    4476+@REGION_784_1 ds 0h                                                     01-DCCPR
00002E68 EBEC D008 0024          00000008   4477+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002E6E E3E0 D088 0004          00000088   4478+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002E74 E3C0 D090 0004          00000090   4479+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002E7A B904 002E                          4480+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002E7E E3B0 C018 0004          00000018   4481+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002E84 A7EB 00C0               000000C0   4482+         aghi  14,192              increase by frame size               01-DCCPR
00002E88 E3E0 C020 0021          00000020   4483+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002E8E 4720 B020               00000020   4484+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002E92                                    4485+@PER_784 ds    0h                                                       01-DCCPR
00002E92 EBDE 2080 0024          00000080   4486+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002E98 E3C0 2090 0024          00000090   4487+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002E9E B904 00D2                          4488+         lgr   13,2                set real frame pointer               01-DCCPR
00002EA2 B904 00CF                          4489+         lgr   12,15               set base reg                         01-DCCPR
                        00002E68            4490+         using @REGION_784_1,12                                         01-DCCPR
00002EA6 B904 0051                          4491          LGR   5,1         ; ptr to parm area
                                            4492 * ******* End of Prologue
                                            4493 * *
00002EAA EB34 5000 0004          00000000   4494          LMG   3,4,0(5)    ; a
                                            4495 * ***      int i;
                                            4496 * ***
                                            4497 * ***      i = (int)((a->rl_cnt) < (b->rl_cnt) ? -1 : ((a->rl_cnt) > (\
                                            4498 * b->rl_cnt)));
00002EB0 58F0 3004               00000004   4499          L     15,4(0,3)   ; offset of rl_cnt in rd_list_s
00002EB4 59F0 4004               00000004   4500          C     15,4(0,4)
00002EB8 47B0 C064               00002ECC   4501          BNL   @L132
00002EBC A728 FFFF               0000FFFF   4502          LHI   2,-1        ; -1
00002EC0 47F0 C07C               00002EE4   4503          B     @L133
00002EC8                                    4504          DS    0D
00002EC8 000000C0                           4505 @FRAMESIZE_784 DC F'192'
00002ECC                                    4506 @L132    DS    0H
00002ECC 58F0 3004               00000004   4507          L     15,4(0,3)   ; offset of rl_cnt in rd_list_s
00002ED0 59F0 4004               00000004   4508          C     15,4(0,4)
00002ED4 47D0 C078               00002EE0   4509          BNH   @@gen_label165
00002ED8 A728 0001               00000001   4510          LHI   2,1
                                                                                                                           Page   93 
  Active Usings: @REGION_784_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002EDC 47F0 C07C               00002EE4   4511          B     @@gen_label166
00002EE0                                    4512 @@gen_label165 DS 0H
00002EE0 A728 0000               00000000   4513          LHI   2,0
00002EE4                                    4514 @@gen_label166 DS 0H
00002EE4                                    4515 @L133    DS    0H
                                            4516 * ***      if (i)
00002EE4 1222                               4517          LTR   2,2
00002EE6 4780 C08A               00002EF2   4518          BZ    @L134
                                            4519 * ***         return i;
00002EEA B914 00F2                          4520          LGFR  15,2
00002EEE 47F0 C0F4               00002F5C   4521          B     @ret_lab_784
00002EF2                                    4522 @L134    DS    0H
                                            4523 * ***
                                            4524 * ***      for (i = 0 ; i < a->rl_cnt ; i++) {
00002EF2 A728 0000               00000000   4525          LHI   2,0         ; 0
00002EF6 47F0 C0E8               00002F50   4526          B     @L136
00002EFA                                    4527 @L135    DS    0H
                                            4528 * ***         int r = cmp(a->rl_elems[i], b->rl_elems[i]);
00002EFA B914 00F2                          4529          LGFR  15,2
00002EFE E310 3008 0004          00000008   4530          LG    1,8(0,3)    ; offset of rl_elems in rd_list_s
00002F04 EBFF 0003 000D          00000003   4531          SLLG  15,15,3(0)  ; *0x8
00002F0A E3FF 1000 0004          00000000   4532          LG    15,0(15,1)
00002F10 E3F0 D0B0 0024          000000B0   4533          STG   15,176(0,13)
00002F16 B914 00F2                          4534          LGFR  15,2
00002F1A E310 4008 0004          00000008   4535          LG    1,8(0,4)    ; offset of rl_elems in rd_list_s
00002F20 EBFF 0003 000D          00000003   4536          SLLG  15,15,3(0)  ; *0x8
00002F26 E3FF 1000 0004          00000000   4537          LG    15,0(15,1)
00002F2C E3F0 D0B8 0024          000000B8   4538          STG   15,184(0,13)
00002F32 E3F0 5010 0004          00000010   4539          LG    15,16(0,5)  ; cmp
00002F38 4110 D0B0               000000B0   4540          LA    1,176(0,13)
00002F3C                                    4541 @@gen_label168 DS    0H
00002F3C 05EF                               4542          BALR  14,15
00002F3E                                    4543 @@gen_label169 DS    0H
                                            4544 * ***         if (r)
00002F3E 12FF                               4545          LTR   15,15
00002F40 4780 C0E4               00002F4C   4546          BZ    @L139
                                            4547 * ***            return r;
00002F44 B914 00FF                          4548          LGFR  15,15
00002F48 47F0 C0F4               00002F5C   4549          B     @ret_lab_784
00002F4C                                    4550 @L139    DS    0H
                                            4551 * ***      }
00002F4C A72A 0001               00000001   4552          AHI   2,1
00002F50                                    4553 @L136    DS    0H
00002F50 5920 3004               00000004   4554          C     2,4(0,3)
00002F54 4740 C092               00002EFA   4555          BL    @L135
                                            4556 * ***
                                            4557 * ***      return 0;
00002F58 A7F9 0000               00000000   4558          LGHI  15,0        ; 0
                                            4559 * ***   }
00002F5C                                    4560 @ret_lab_784 DS 0H
                                            4561 * * **** Start of Epilogue
                                            4562          DCCEPIL
                                                                                                                           Page   94 
  Active Usings: @REGION_784_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002F5C                                    4563+         ds 0h                                                          01-DCCEP
                                            4564+* Epilog
00002F5C D707 D088 D088 00000088 00000088   4565+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002F62 E3D0 D080 0004          00000080   4566+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002F68 E3C0 D090 0004          00000090   4567+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002F6E E3B0 C018 0004          00000018   4568+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002F74 E3C0 B010 0021          00000010   4569+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002F7A E3E0 D008 0004          00000008   4570+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002F80 EB1C D020 0004          00000020   4571+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002F86 078E                               4572+         bcr 8,14                if same dsab, just return              01-DCCEP
00002F88 E3F0 D010 0024          00000010   4573+         stg 15,16(0,13)         save return code                       01-DCCEP
00002F8E E300 D018 0024          00000018   4574+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002F94 E3F0 D090 0004          00000090   4575+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002F9A E3F0 F018 0004          00000018   4576+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002FA0 47F0 F040               00000040   4577+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4578+* End of Epilog
                                            4579 * * **** End of Epilogue
                                            4580          DROP  12
                                            4581 *
                                            4582 *   DSECT for automatic variables in "rd_list_cmp"
                                            4583 *      (FUNCTION #784)
                                            4584 *
00000000                00000000 000000AC   4585 @AUTO#rd_list_cmp DSECT
00000000                                    4586          DS    XL168
000000A8                                    4587 rd_list_cmp#r#1 DS 1F      ; r
000000AC                000000AC 000000A8   4588          ORG   @AUTO#rd_list_cmp+168
000000A8                                    4589 rd_list_cmp#i#0 DS 1F      ; i
                                            4590 *
00002FA4                00000000 00003F28   4591 @CODE    CSECT
                                            4592 *
                                            4593 *
                                            4594 *
                                            4595 * ....... start of rd_list_cmp_ptr
                                            4596 rd_list_cmp_ptr ALIAS X'99846D9389A2A36D8394976D97A399'
00002FA4                                    4597 @LNAME785 DS   0H
00002FA4 0000000F                           4598          DC    X'0000000F'
00002FA8 99846D9389A2A36D                   4599          DC    C'rd_list_cmp_ptr'
00002FB7 00                                 4600          DC    X'00'
                                            4601 rd_list_cmp_ptr DCCPRLG CINDEX=785,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME785
                                            4602          macro
                                            4603          dccextrn &m
                                            4604          gblc    &$dccext(1000)
                                            4605          gbla    &$dccexti
                                            4606          lcla    &i
                                            4607 &$dccext(&$dccexti+1) setc    '&m'
                                            4608 &i       seta    1
                                            4609 .loop    aif    (&i gt &$dccexti).around
                                            4610          aif    ('&$dccext(&i)' eq '&m').getout
                                            4611 &i       seta    &i+1
                                            4612          ago     .loop
                                            4613 .around  anop
                                                                                                                           Page   95 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            4614 &$dccexti seta &$dccexti+1
                                            4615          extrn  &m
                                            4616 .getout  anop
                                            4617          mend
00002FB8                                    4618+$eye0107    ds    0d                                                    02-DCCCA
00002FB8 C4C3C3                             4619+         dc cl3'DCC'                                                    02-DCCCA
00002FBB 01                                 4620+         dc xl1'01' format one                                          02-DCCCA
00002FBC 00000000                           4621+         dc a(0)                                                        02-DCCCA
00002FC0 0000000000000000                   4622+         dc ad(0)                                                       02-DCCCA
00002FC8 00000000000000A8                   4623+         dc ad(168)                                                     02-DCCCA
00002FD0 0000000000000000                   4624+         dc ad(0)                                                       02-DCCCA
00002FD8 0000000000001000                   4625+         dc ad(4096)                                                    02-DCCCA
00002FE0 20                                 4626+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002FE1 03                                 4627+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002FE2 03                                 4628+         dc al1(3)                                                      02-DCCCA
00002FE3 08                                 4629+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002FE4 00                                 4630+         dc bl.8'00000000'                                              02-DCCCA
00002FE5 000000                             4631+         dc al3(0)                                                      02-DCCCA
00002FE8 0000000000002FA4                   4632+         dc ad(@LNAME785)                                               02-DCCCA
00002FF0                                    4633+         ds 0d                                                          02-DCCCA
00002FF0 0000000000002FB8                   4634+         dc ad($eye0107)                                                02-DCCCA
00002FF8 0000000000000000                   4635+         dc ad(0)                                                       02-DCCCA
00003000                                    4636+         ds    0d                                                       01-DCCPR
                                            4637+         entry rd_list_cmp_ptr                                          01-DCCPR
00003000                                    4638+rd_list_cmp_ptr ds 0d                                                   01-DCCPR
00003000                                    4639+@REGION_785_1 ds 0h                                                     01-DCCPR
00003000 EBEC D008 0024          00000008   4640+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003006 B904 00CF                          4641+         lgr   12,15               set base reg                         01-DCCPR
                        00003000            4642+         using @REGION_785_1,12                                         01-DCCPR
                                            4643 * ******* End of Prologue
                                            4644 * *
                                            4645 * ***           return (int)((a) < (b) ? -1 : ((a) > (b)));
0000300A E3F0 1000 0004          00000000   4646          LG    15,0(0,1)   ; a
00003010 E310 1008 0004          00000008   4647          LG    1,8(0,1)    ; b
00003016 B920 00F1                          4648          CGR   15,1
0000301A 47B0 C026               00003026   4649          BNL   @L140
0000301E A7F8 FFFF               0000FFFF   4650          LHI   15,-1       ; -1
00003022 47F0 C03A               0000303A   4651          B     @L141
00003026                                    4652 @L140    DS    0H
00003026 B920 00F1                          4653          CGR   15,1
0000302A 47D0 C036               00003036   4654          BNH   @@gen_label173
0000302E A7F8 0001               00000001   4655          LHI   15,1
00003032 47F0 C03A               0000303A   4656          B     @@gen_label174
00003036                                    4657 @@gen_label173 DS 0H
00003036 A7F8 0000               00000000   4658          LHI   15,0
0000303A                                    4659 @@gen_label174 DS 0H
0000303A                                    4660 @L141    DS    0H
0000303A B914 00FF                          4661          LGFR  15,15
                                            4662 * ***   }
                                            4663 * * **** Start of Epilogue
                                            4664          DCCEPIL
0000303E                                    4665+         ds 0h                                                          01-DCCEP
                                                                                                                           Page   96 
  Active Usings: @REGION_785_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            4666+* Epilog
                                            4667+* Epilog
0000303E E3E0 D008 0004          00000008   4668+         lg    14,8(,13) restore the reg                                01-DCCEP
00003044 EB1C D020 0004          00000020   4669+         lmg   1,12,32(13)                                              01-DCCEP
0000304A 07FE                               4670+         br   14                                                        01-DCCEP
                                            4671+* End of Epilog
                                            4672 * * **** End of Epilogue
                                            4673          DROP  12
                                            4674 *
                                            4675 *   DSECT for automatic variables in "rd_list_cmp_ptr"
                                            4676 *      (FUNCTION #785)
                                            4677 *
00000000                00000000 000000A8   4678 @AUTO#rd_list_cmp_ptr DSECT
00000000                                    4679          DS    XL168
                                            4680 *
0000304C                00000000 00003F28   4681 @CODE    CSECT
                                            4682 *
                                            4683 *
                                            4684 *
                                            4685 * ....... start of rd_list_cmp_str
                                            4686 rd_list_cmp_str ALIAS X'99846D9389A2A36D8394976DA2A399'
0000304C                                    4687 @LNAME786 DS   0H
0000304C 0000000F                           4688          DC    X'0000000F'
00003050 99846D9389A2A36D                   4689          DC    C'rd_list_cmp_str'
0000305F 00                                 4690          DC    X'00'
                                            4691 rd_list_cmp_str DCCPRLG CINDEX=786,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME786
                                            4692          macro
                                            4693          dccextrn &m
                                            4694          gblc    &$dccext(1000)
                                            4695          gbla    &$dccexti
                                            4696          lcla    &i
                                            4697 &$dccext(&$dccexti+1) setc    '&m'
                                            4698 &i       seta    1
                                            4699 .loop    aif    (&i gt &$dccexti).around
                                            4700          aif    ('&$dccext(&i)' eq '&m').getout
                                            4701 &i       seta    &i+1
                                            4702          ago     .loop
                                            4703 .around  anop
                                            4704 &$dccexti seta &$dccexti+1
                                            4705          extrn  &m
                                            4706 .getout  anop
                                            4707          mend
00003060                                    4708+$eye0110    ds    0d                                                    02-DCCCA
00003060 C4C3C3                             4709+         dc cl3'DCC'                                                    02-DCCCA
00003063 01                                 4710+         dc xl1'01' format one                                          02-DCCCA
00003064 00000000                           4711+         dc a(0)                                                        02-DCCCA
00003068 0000000000000000                   4712+         dc ad(0)                                                       02-DCCCA
00003070 00000000000000A8                   4713+         dc ad(168)                                                     02-DCCCA
00003078 0000000000000000                   4714+         dc ad(0)                                                       02-DCCCA
00003080 0000000000001000                   4715+         dc ad(4096)                                                    02-DCCCA
00003088 20                                 4716+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
                                                                                                                           Page   97 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003089 03                                 4717+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000308A 03                                 4718+         dc al1(3)                                                      02-DCCCA
0000308B 08                                 4719+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000308C 00                                 4720+         dc bl.8'00000000'                                              02-DCCCA
0000308D 000000                             4721+         dc al3(0)                                                      02-DCCCA
00003090 000000000000304C                   4722+         dc ad(@LNAME786)                                               02-DCCCA
00003098                                    4723+         ds 0d                                                          02-DCCCA
00003098 0000000000003060                   4724+         dc ad($eye0110)                                                02-DCCCA
000030A0 0000000000000000                   4725+         dc ad(0)                                                       02-DCCCA
000030A8                                    4726+         ds    0d                                                       01-DCCPR
                                            4727+         entry rd_list_cmp_str                                          01-DCCPR
000030A8                                    4728+rd_list_cmp_str ds 0d                                                   01-DCCPR
000030A8                                    4729+@REGION_786_1 ds 0h                                                     01-DCCPR
000030A8 EBEC D008 0024          00000008   4730+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000030AE B904 00CF                          4731+         lgr   12,15               set base reg                         01-DCCPR
                        000030A8            4732+         using @REGION_786_1,12                                         01-DCCPR
                                            4733 * ******* End of Prologue
                                            4734 * *
                                            4735 * ***           return __strcmp((const char *)a,(const char *)b);
000030B2 E3F0 1000 0004          00000000   4736          LG    15,0(0,1)
000030B8 E310 1008 0004          00000008   4737          LG    1,8(0,1)
000030BE 4100 0000               00000000   4738          LA    0,0(0,0)
000030C2 A729 0000               00000000   4739          LGHI  2,0
000030C6                                    4740 @@gen_label175 DS 0H
000030C6 B25D 00F1                          4741          CLST  15,1
000030CA 4710 C01E               000030C6   4742          BC  1,@@gen_label175
000030CE 4780 C03A               000030E2   4743          BE    @@gen_label176
000030D2 E320 F000 0090          00000000   4744          LLGC  2,0(0,15)
000030D8 E3F0 1000 0090          00000000   4745          LLGC  15,0(0,1)
000030DE B90B 002F                          4746          SLGR  2,15
000030E2                                    4747 @@gen_label176 DS 0H
000030E2 B914 00F2                          4748          LGFR  15,2
                                            4749 * ***   }
                                            4750 * * **** Start of Epilogue
                                            4751          DCCEPIL
000030E6                                    4752+         ds 0h                                                          01-DCCEP
                                            4753+* Epilog
                                            4754+* Epilog
000030E6 E3E0 D008 0004          00000008   4755+         lg    14,8(,13) restore the reg                                01-DCCEP
000030EC EB1C D020 0004          00000020   4756+         lmg   1,12,32(13)                                              01-DCCEP
000030F2 07FE                               4757+         br   14                                                        01-DCCEP
                                            4758+* End of Epilog
                                            4759 * * **** End of Epilogue
                                            4760          DROP  12
                                            4761 *
                                            4762 *   DSECT for automatic variables in "rd_list_cmp_str"
                                            4763 *      (FUNCTION #786)
                                            4764 *
00000000                00000000 000000A8   4765 @AUTO#rd_list_cmp_str DSECT
00000000                                    4766          DS    XL168
                                            4767 *
000030F4                00000000 00003F28   4768 @CODE    CSECT
                                                                                                                           Page   98 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            4769 *
                                            4770 *
                                            4771 *
                                            4772 * ....... start of rd_list_apply
                                            4773 rd_list_apply ALIAS X'99846D9389A2A36D81979793A8'
000030F4                                    4774 @LNAME787 DS   0H
000030F4 0000000D                           4775          DC    X'0000000D'
000030F8 99846D9389A2A36D                   4776          DC    C'rd_list_apply'
00003105 00                                 4777          DC    X'00'
                                            4778 rd_list_apply DCCPRLG CINDEX=787,BASER=12,FRAME=192,ENTRY=YES,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME787
                                            4779          macro
                                            4780          dccextrn &m
                                            4781          gblc    &$dccext(1000)
                                            4782          gbla    &$dccexti
                                            4783          lcla    &i
                                            4784 &$dccext(&$dccexti+1) setc    '&m'
                                            4785 &i       seta    1
                                            4786 .loop    aif    (&i gt &$dccexti).around
                                            4787          aif    ('&$dccext(&i)' eq '&m').getout
                                            4788 &i       seta    &i+1
                                            4789          ago     .loop
                                            4790 .around  anop
                                            4791 &$dccexti seta &$dccexti+1
                                            4792          extrn  &m
                                            4793 .getout  anop
                                            4794          mend
00003108                                    4795+$eye0113    ds    0d                                                    02-DCCCA
00003108 C4C3C3                             4796+         dc cl3'DCC'                                                    02-DCCCA
0000310B 01                                 4797+         dc xl1'01' format one                                          02-DCCCA
0000310C 00000000                           4798+         dc a(0)                                                        02-DCCCA
00003110 000000000000317A                   4799+         dc ad(@PER_787)                                                02-DCCCA
00003118 00000000000000C0                   4800+         dc ad(192)                                                     02-DCCCA
00003120 0000000000000000                   4801+         dc ad(0)                                                       02-DCCCA
00003128 0000000000001000                   4802+         dc ad(4096)                                                    02-DCCCA
00003130 20                                 4803+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003131 03                                 4804+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003132 03                                 4805+         dc al1(3)                                                      02-DCCCA
00003133 08                                 4806+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003134 00                                 4807+         dc bl.8'00000000'                                              02-DCCCA
00003135 000000                             4808+         dc al3(0)                                                      02-DCCCA
00003138 00000000000030F4                   4809+         dc ad(@LNAME787)                                               02-DCCCA
00003140                                    4810+         ds 0d                                                          02-DCCCA
00003140 0000000000003108                   4811+         dc ad($eye0113)                                                02-DCCCA
00003148 0000000000000000                   4812+         dc ad(0)                                                       02-DCCCA
00003150                                    4813+         ds    0d                                                       01-DCCPR
                                            4814+         entry rd_list_apply                                            01-DCCPR
00003150                                    4815+rd_list_apply ds 0d                                                     01-DCCPR
00003150                                    4816+@REGION_787_1 ds 0h                                                     01-DCCPR
00003150 EBEC D008 0024          00000008   4817+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003156 E3E0 D088 0004          00000088   4818+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000315C E3C0 D090 0004          00000090   4819+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
                                                                                                                           Page   99 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003162 B904 002E                          4820+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003166 E3B0 C018 0004          00000018   4821+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000316C A7EB 00C0               000000C0   4822+         aghi  14,192              increase by frame size               01-DCCPR
00003170 E3E0 C020 0021          00000020   4823+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003176 4720 B020               00000020   4824+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000317A                                    4825+@PER_787 ds    0h                                                       01-DCCPR
0000317A EBDE 2080 0024          00000080   4826+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003180 E3C0 2090 0024          00000090   4827+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003186 B904 00D2                          4828+         lgr   13,2                set real frame pointer               01-DCCPR
0000318A B904 00CF                          4829+         lgr   12,15               set base reg                         01-DCCPR
                        00003150            4830+         using @REGION_787_1,12                                         01-DCCPR
0000318E B904 0031                          4831          LGR   3,1         ; ptr to parm area
                                            4832 * ******* End of Prologue
                                            4833 * *
                                            4834 * ***           void *elem;
                                            4835 * ***           int i;
                                            4836 * ***
                                            4837 * ***           for (i = 0 ; (elem = rd_list_elem(rl, i)) ; i++) {
00003192 A728 0000               00000000   4838          LHI   2,0         ; 0
00003196 47F0 C0B6               00003206   4839          B     @L143
000031A0                                    4840          DS    0D
000031A0 000000C0                           4841 @FRAMESIZE_787 DC F'192'
000031A4 00000000
000031A8 00000000000017A8                   4842 @lit_787_133 DC AD(rd_list_remove_elem)
000031B0 0000000000002740                   4843 @lit_787_134 DC AD(rd_list_elem)
000031B8                                    4844 @L142    DS    0H
                                            4845 * ***                   if (!cb(elem, opaque)) {
000031B8 E3F0 D0B0 0024          000000B0   4846          STG   15,176(0,13)
000031BE E3F0 3010 0004          00000010   4847          LG    15,16(0,3)  ; opaque
000031C4 E3F0 D0B8 0024          000000B8   4848          STG   15,184(0,13)
000031CA E3F0 3008 0004          00000008   4849          LG    15,8(0,3)   ; cb
000031D0 4110 D0B0               000000B0   4850          LA    1,176(0,13)
000031D4                                    4851 @@gen_label177 DS    0H
000031D4 05EF                               4852          BALR  14,15
000031D6                                    4853 @@gen_label178 DS    0H
000031D6 12FF                               4854          LTR   15,15
000031D8 4770 C0B2               00003202   4855          BNZ   @L146
                                            4856 * ***                           rd_list_remove_elem(rl, i);
000031DC E3F0 3000 0004          00000000   4857          LG    15,0(0,3)   ; rl
000031E2 E3F0 D0B0 0024          000000B0   4858          STG   15,176(0,13)
000031E8 B914 00F2                          4859          LGFR  15,2
000031EC E3F0 D0B8 0024          000000B8   4860          STG   15,184(0,13)
000031F2 4110 D0B0               000000B0   4861          LA    1,176(0,13)
000031F6 E3F0 C058 0004          000031A8   4862          LG    15,@lit_787_133 ; rd_list_remove_elem
000031FC                                    4863 @@gen_label180 DS    0H
000031FC 05EF                               4864          BALR  14,15
000031FE                                    4865 @@gen_label181 DS    0H
                                            4866 * ***                           i--;
000031FE A72A FFFF               0000FFFF   4867          AHI   2,-1
                                            4868 * ***                   }
00003202                                    4869 @L146    DS    0H
                                            4870 * ***           }
                                                                                                                           Page  100 
  Active Usings: @REGION_787_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003202 A72A 0001               00000001   4871          AHI   2,1
00003206                                    4872 @L143    DS    0H
00003206 E3F0 3000 0004          00000000   4873          LG    15,0(0,3)   ; rl
0000320C E3F0 D0B0 0024          000000B0   4874          STG   15,176(0,13)
00003212 B914 00F2                          4875          LGFR  15,2
00003216 E3F0 D0B8 0024          000000B8   4876          STG   15,184(0,13)
0000321C 4110 D0B0               000000B0   4877          LA    1,176(0,13)
00003220 E3F0 C060 0004          000031B0   4878          LG    15,@lit_787_134 ; rd_list_elem
00003226                                    4879 @@gen_label182 DS    0H
00003226 05EF                               4880          BALR  14,15
00003228                                    4881 @@gen_label183 DS    0H
00003228 B902 001F                          4882          LTGR  1,15
0000322C 4770 C068               000031B8   4883          BNZ   @L142
                                            4884 * ***
                                            4885 * ***           return;
                                            4886 * ***   }
                                            4887 * * **** Start of Epilogue
                                            4888          DCCEPIL
00003230                                    4889+         ds 0h                                                          01-DCCEP
                                            4890+* Epilog
00003230 D707 D088 D088 00000088 00000088   4891+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003236 E3D0 D080 0004          00000080   4892+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000323C E3C0 D090 0004          00000090   4893+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003242 E3B0 C018 0004          00000018   4894+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003248 E3C0 B010 0021          00000010   4895+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000324E E3E0 D008 0004          00000008   4896+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003254 EB1C D020 0004          00000020   4897+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000325A 078E                               4898+         bcr 8,14                if same dsab, just return              01-DCCEP
0000325C E3F0 D010 0024          00000010   4899+         stg 15,16(0,13)         save return code                       01-DCCEP
00003262 E300 D018 0024          00000018   4900+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003268 E3F0 D090 0004          00000090   4901+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000326E E3F0 F018 0004          00000018   4902+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003274 47F0 F040               00000040   4903+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4904+* End of Epilog
                                            4905 * * **** End of Epilogue
                                            4906          DROP  12
                                            4907 *
                                            4908 *   DSECT for automatic variables in "rd_list_apply"
                                            4909 *      (FUNCTION #787)
                                            4910 *
00000000                00000000 000000AC   4911 @AUTO#rd_list_apply DSECT
00000000                                    4912          DS    XL168
000000A8                                    4913 rd_list_apply#i#0 DS 1F    ; i
                                            4914 *
00003278                00000000 00003F28   4915 @CODE    CSECT
                                            4916 *
                                            4917 *
                                            4918 *
                                            4919 * ....... start of rd_list_nocopy_ptr
00003278                                    4920 @LNAME799 DS   0H
00003278 00000012                           4921          DC    X'00000012'
0000327C 99846D9389A2A36D                   4922          DC    C'rd_list_nocopy_ptr'
                                                                                                                           Page  101 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000328E 00                                 4923          DC    X'00'
                                            4924 rd_list_nocopy_ptr DCCPRLG CINDEX=799,BASER=0,FRAME=168,SAVEAREA=NO,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME799
                                            4925          macro
                                            4926          dccextrn &m
                                            4927          gblc    &$dccext(1000)
                                            4928          gbla    &$dccexti
                                            4929          lcla    &i
                                            4930 &$dccext(&$dccexti+1) setc    '&m'
                                            4931 &i       seta    1
                                            4932 .loop    aif    (&i gt &$dccexti).around
                                            4933          aif    ('&$dccext(&i)' eq '&m').getout
                                            4934 &i       seta    &i+1
                                            4935          ago     .loop
                                            4936 .around  anop
                                            4937 &$dccexti seta &$dccexti+1
                                            4938          extrn  &m
                                            4939 .getout  anop
                                            4940          mend
00003290                                    4941+$eye0116    ds    0d                                                    02-DCCCA
00003290 C4C3C3                             4942+         dc cl3'DCC'                                                    02-DCCCA
00003293 01                                 4943+         dc xl1'01' format one                                          02-DCCCA
00003294 00000000                           4944+         dc a(0)                                                        02-DCCCA
00003298 0000000000000000                   4945+         dc ad(0)                                                       02-DCCCA
000032A0 00000000000000A8                   4946+         dc ad(168)                                                     02-DCCCA
000032A8 0000000000000000                   4947+         dc ad(0)                                                       02-DCCCA
000032B0 0000000000001000                   4948+         dc ad(4096)                                                    02-DCCCA
000032B8 20                                 4949+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000032B9 03                                 4950+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000032BA 03                                 4951+         dc al1(3)                                                      02-DCCCA
000032BB 08                                 4952+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000032BC 00                                 4953+         dc bl.8'00000000'                                              02-DCCCA
000032BD 000000                             4954+         dc al3(0)                                                      02-DCCCA
000032C0 0000000000003278                   4955+         dc ad(@LNAME799)                                               02-DCCCA
000032C8                                    4956+         ds 0d                                                          02-DCCCA
000032C8 0000000000003290                   4957+         dc ad($eye0116)                                                02-DCCCA
000032D0 0000000000000000                   4958+         dc ad(0)                                                       02-DCCCA
000032D8                                    4959+         ds    0d                                                       01-DCCPR
000032D8                                    4960+rd_list_nocopy_ptr ds 0d                                                01-DCCPR
000032D8                                    4961+@REGION_799_1 ds 0h                                                     01-DCCPR
000032D8 EBEC D008 0024          00000008   4962+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            4963 * ******* End of Prologue
                                            4964 * *
                                            4965 * ***           return (void *)elem;
000032DE E3F0 1000 0004          00000000   4966          LG    15,0(0,1)   ; elem
                                            4967 * ***   }
                                            4968 * * **** Start of Epilogue
                                            4969          DCCEPIL
000032E4                                    4970+         ds 0h                                                          01-DCCEP
                                            4971+* Epilog
                                            4972+* Epilog
000032E4 E3E0 D008 0004          00000008   4973+         lg    14,8(,13) restore the reg                                01-DCCEP
                                                                                                                           Page  102 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000032EA EB1C D020 0004          00000020   4974+         lmg   1,12,32(13)                                              01-DCCEP
000032F0 07FE                               4975+         br   14                                                        01-DCCEP
                                            4976+* End of Epilog
                                            4977 * * **** End of Epilogue
                                            4978 *
                                            4979 *   DSECT for automatic variables in "rd_list_nocopy_ptr"
                                            4980 *      (FUNCTION #799)
                                            4981 *
00000000                00000000 000000A8   4982 @AUTO#rd_list_nocopy_ptr DSECT
00000000                                    4983          DS    XL168
                                            4984 *
000032F2                00000000 00003F28   4985 @CODE    CSECT
                                            4986 *
                                            4987 *
                                            4988 *
                                            4989 * ....... start of rd_list_copy
                                            4990 rd_list_copy ALIAS X'99846D9389A2A36D839697A8'
000032F2                                    4991 @LNAME788 DS   0H
000032F2 0000000C                           4992          DC    X'0000000C'
000032F6 99846D9389A2A36D                   4993          DC    C'rd_list_copy'
00003302 00                                 4994          DC    X'00'
                                            4995 rd_list_copy DCCPRLG CINDEX=788,BASER=12,FRAME=208,ENTRY=YES,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME788
                                            4996          macro
                                            4997          dccextrn &m
                                            4998          gblc    &$dccext(1000)
                                            4999          gbla    &$dccexti
                                            5000          lcla    &i
                                            5001 &$dccext(&$dccexti+1) setc    '&m'
                                            5002 &i       seta    1
                                            5003 .loop    aif    (&i gt &$dccexti).around
                                            5004          aif    ('&$dccext(&i)' eq '&m').getout
                                            5005 &i       seta    &i+1
                                            5006          ago     .loop
                                            5007 .around  anop
                                            5008 &$dccexti seta &$dccexti+1
                                            5009          extrn  &m
                                            5010 .getout  anop
                                            5011          mend
00003308                                    5012+$eye0119    ds    0d                                                    02-DCCCA
00003308 C4C3C3                             5013+         dc cl3'DCC'                                                    02-DCCCA
0000330B 01                                 5014+         dc xl1'01' format one                                          02-DCCCA
0000330C 00000000                           5015+         dc a(0)                                                        02-DCCCA
00003310 000000000000337A                   5016+         dc ad(@PER_788)                                                02-DCCCA
00003318 00000000000000D0                   5017+         dc ad(208)                                                     02-DCCCA
00003320 0000000000000000                   5018+         dc ad(0)                                                       02-DCCCA
00003328 0000000000001000                   5019+         dc ad(4096)                                                    02-DCCCA
00003330 20                                 5020+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003331 03                                 5021+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003332 03                                 5022+         dc al1(3)                                                      02-DCCCA
00003333 08                                 5023+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003334 00                                 5024+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page  103 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003335 000000                             5025+         dc al3(0)                                                      02-DCCCA
00003338 00000000000032F2                   5026+         dc ad(@LNAME788)                                               02-DCCCA
00003340                                    5027+         ds 0d                                                          02-DCCCA
00003340 0000000000003308                   5028+         dc ad($eye0119)                                                02-DCCCA
00003348 0000000000000000                   5029+         dc ad(0)                                                       02-DCCCA
00003350                                    5030+         ds    0d                                                       01-DCCPR
                                            5031+         entry rd_list_copy                                             01-DCCPR
00003350                                    5032+rd_list_copy ds 0d                                                      01-DCCPR
00003350                                    5033+@REGION_788_1 ds 0h                                                     01-DCCPR
00003350 EBEC D008 0024          00000008   5034+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003356 E3E0 D088 0004          00000088   5035+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000335C E3C0 D090 0004          00000090   5036+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003362 B904 002E                          5037+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003366 E3B0 C018 0004          00000018   5038+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000336C A7EB 00D0               000000D0   5039+         aghi  14,208              increase by frame size               01-DCCPR
00003370 E3E0 C020 0021          00000020   5040+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003376 4720 B020               00000020   5041+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000337A                                    5042+@PER_788 ds    0h                                                       01-DCCPR
0000337A EBDE 2080 0024          00000080   5043+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003380 E3C0 2090 0024          00000090   5044+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003386 B904 00D2                          5045+         lgr   13,2                set real frame pointer               01-DCCPR
0000338A B904 00CF                          5046+         lgr   12,15               set base reg                         01-DCCPR
                        00003350            5047+         using @REGION_788_1,12                                         01-DCCPR
0000338E B904 0041                          5048          LGR   4,1         ; ptr to parm area
                                            5049 * ******* End of Prologue
                                            5050 * *
00003392 E320 4000 0004          00000000   5051          LG    2,0(0,4)    ; src
                                            5052 * ***           rd_list_t *dst;
                                            5053 * ***
                                            5054 * ***           dst = rd_list_new(src->rl_cnt, src->rl_free_cb);
00003398 E3F0 2004 0014          00000004   5055          LGF   15,4(0,2)
0000339E E3F0 D0B0 0024          000000B0   5056          STG   15,176(0,13)
000033A4 E3F0 2010 0004          00000010   5057          LG    15,16(0,2)
000033AA E3F0 D0B8 0024          000000B8   5058          STG   15,184(0,13)
000033B0 4110 D0B0               000000B0   5059          LA    1,176(0,13)
000033B4 E3F0 C0F8 0004          00003448   5060          LG    15,@lit_788_136 ; rd_list_new
000033BA                                    5061 @@gen_label185 DS    0H
000033BA 05EF                               5062          BALR  14,15
000033BC                                    5063 @@gen_label186 DS    0H
000033BC B904 003F                          5064          LGR   3,15
                                            5065 * ***
                                            5066 * ***           rd_list_copy_to(dst, src, copy_cb, opaque);
000033C0 E330 D0B0 0024          000000B0   5067          STG   3,176(0,13)
000033C6 E320 D0B8 0024          000000B8   5068          STG   2,184(0,13)
000033CC E3F0 4008 0004          00000008   5069          LG    15,8(0,4)   ; copy_cb
000033D2 E3F0 D0C0 0024          000000C0   5070          STG   15,192(0,13)
000033D8 E3F0 4010 0004          00000010   5071          LG    15,16(0,4)  ; opaque
000033DE E3F0 D0C8 0024          000000C8   5072          STG   15,200(0,13)
000033E4 4110 D0B0               000000B0   5073          LA    1,176(0,13)
000033E8 E3F0 C100 0004          00003450   5074          LG    15,@lit_788_137 ; rd_list_copy_to
000033EE                                    5075 @@gen_label187 DS    0H
000033EE 05EF                               5076          BALR  14,15
                                                                                                                           Page  104 
  Active Usings: @REGION_788_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000033F0                                    5077 @@gen_label188 DS    0H
                                            5078 * ***           return dst;
000033F0 B904 00F3                          5079          LGR   15,3
                                            5080 * ***   }
                                            5081 * * **** Start of Epilogue
                                            5082          DCCEPIL
000033F4                                    5083+         ds 0h                                                          01-DCCEP
                                            5084+* Epilog
000033F4 D707 D088 D088 00000088 00000088   5085+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000033FA E3D0 D080 0004          00000080   5086+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003400 E3C0 D090 0004          00000090   5087+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003406 E3B0 C018 0004          00000018   5088+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000340C E3C0 B010 0021          00000010   5089+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003412 E3E0 D008 0004          00000008   5090+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003418 EB1C D020 0004          00000020   5091+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000341E 078E                               5092+         bcr 8,14                if same dsab, just return              01-DCCEP
00003420 E3F0 D010 0024          00000010   5093+         stg 15,16(0,13)         save return code                       01-DCCEP
00003426 E300 D018 0024          00000018   5094+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000342C E3F0 D090 0004          00000090   5095+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003432 E3F0 F018 0004          00000018   5096+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003438 47F0 F040               00000040   5097+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5098+* End of Epilog
                                            5099 * * **** End of Epilogue
00003440                                    5100          DS    0D
00003440 000000D0                           5101 @FRAMESIZE_788 DC F'208'
00003444 00000000
00003448 0000000000000D88                   5102 @lit_788_136 DC AD(rd_list_new)
00003450 00000000000034B8                   5103 @lit_788_137 DC AD(rd_list_copy_to)
                                            5104          DROP  12
                                            5105 *
                                            5106 *   DSECT for automatic variables in "rd_list_copy"
                                            5107 *      (FUNCTION #788)
                                            5108 *
00000000                00000000 000000A8   5109 @AUTO#rd_list_copy DSECT
00000000                                    5110          DS    XL168
                                            5111 *
00003458                00000000 00003F28   5112 @CODE    CSECT
                                            5113 *
                                            5114 *
                                            5115 *
                                            5116 * ....... start of rd_list_copy_to
                                            5117 rd_list_copy_to ALIAS X'99846D9389A2A36D839697A86DA396'
00003458                                    5118 @LNAME789 DS   0H
00003458 0000000F                           5119          DC    X'0000000F'
0000345C 99846D9389A2A36D                   5120          DC    C'rd_list_copy_to'
0000346B 00                                 5121          DC    X'00'
                                            5122 rd_list_copy_to DCCPRLG CINDEX=789,BASER=12,FRAME=208,ENTRY=YES,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME789
                                            5123          macro
                                            5124          dccextrn &m
                                            5125          gblc    &$dccext(1000)
                                            5126          gbla    &$dccexti
                                                                                                                           Page  105 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5127          lcla    &i
                                            5128 &$dccext(&$dccexti+1) setc    '&m'
                                            5129 &i       seta    1
                                            5130 .loop    aif    (&i gt &$dccexti).around
                                            5131          aif    ('&$dccext(&i)' eq '&m').getout
                                            5132 &i       seta    &i+1
                                            5133          ago     .loop
                                            5134 .around  anop
                                            5135 &$dccexti seta &$dccexti+1
                                            5136          extrn  &m
                                            5137 .getout  anop
                                            5138          mend
00003470                                    5139+$eye0122    ds    0d                                                    02-DCCCA
00003470 C4C3C3                             5140+         dc cl3'DCC'                                                    02-DCCCA
00003473 01                                 5141+         dc xl1'01' format one                                          02-DCCCA
00003474 00000000                           5142+         dc a(0)                                                        02-DCCCA
00003478 00000000000034E2                   5143+         dc ad(@PER_789)                                                02-DCCCA
00003480 00000000000000D0                   5144+         dc ad(208)                                                     02-DCCCA
00003488 0000000000000000                   5145+         dc ad(0)                                                       02-DCCCA
00003490 0000000000001000                   5146+         dc ad(4096)                                                    02-DCCCA
00003498 20                                 5147+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003499 03                                 5148+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000349A 03                                 5149+         dc al1(3)                                                      02-DCCCA
0000349B 08                                 5150+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000349C 00                                 5151+         dc bl.8'00000000'                                              02-DCCCA
0000349D 000000                             5152+         dc al3(0)                                                      02-DCCCA
000034A0 0000000000003458                   5153+         dc ad(@LNAME789)                                               02-DCCCA
000034A8                                    5154+         ds 0d                                                          02-DCCCA
000034A8 0000000000003470                   5155+         dc ad($eye0122)                                                02-DCCCA
000034B0 0000000000000000                   5156+         dc ad(0)                                                       02-DCCCA
000034B8                                    5157+         ds    0d                                                       01-DCCPR
                                            5158+         entry rd_list_copy_to                                          01-DCCPR
000034B8                                    5159+rd_list_copy_to ds 0d                                                   01-DCCPR
000034B8                                    5160+@REGION_789_1 ds 0h                                                     01-DCCPR
000034B8 EBEC D008 0024          00000008   5161+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000034BE E3E0 D088 0004          00000088   5162+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000034C4 E3C0 D090 0004          00000090   5163+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000034CA B904 002E                          5164+         lgr   2,14                copy addr of our savearea            01-DCCPR
000034CE E3B0 C018 0004          00000018   5165+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000034D4 A7EB 00D0               000000D0   5166+         aghi  14,208              increase by frame size               01-DCCPR
000034D8 E3E0 C020 0021          00000020   5167+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000034DE 4720 B020               00000020   5168+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000034E2                                    5169+@PER_789 ds    0h                                                       01-DCCPR
000034E2 EBDE 2080 0024          00000080   5170+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000034E8 E3C0 2090 0024          00000090   5171+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000034EE B904 00D2                          5172+         lgr   13,2                set real frame pointer               01-DCCPR
000034F2 B904 00CF                          5173+         lgr   12,15               set base reg                         01-DCCPR
                        000034B8            5174+         using @REGION_789_1,12                                         01-DCCPR
000034F6 B904 0041                          5175          LGR   4,1         ; ptr to parm area
                                            5176 * ******* End of Prologue
                                            5177 * *
000034FA E320 4010 0004          00000010   5178          LG    2,16(0,4)   ; copy_cb
                                                                                                                           Page  106 
  Active Usings: @REGION_789_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5179 * ***           void *elem;
                                            5180 * ***           int i;
                                            5181 * ***
                                            5182 * ***           ((dst != src) ? (void)0 : __assert(__func__, "C:\\asgk\
                                            5183 * afka\\librdkafka\\src\\rdlist.c", 448, "dst != src"));
00003500 E3F0 4000 0004          00000000   5184          LG    15,0(0,4)   ; dst
00003506 E310 4008 0004          00000008   5185          LG    1,8(0,4)    ; src
0000350C B920 00F1                          5186          CGR   15,1
00003510 4770 C098               00003550   5187          BNE   @L148
00003514                                    5188 @L147    DS    0H
00003514 E3F0 C0C8 0004          00003580   5189          LG    15,@lit_789_139
0000351A 41F0 F0B4               000000B4   5190          LA    15,180(0,15)
0000351E E3F0 D0B0 0024          000000B0   5191          STG   15,176(0,13)
00003524 E3F0 C0C0 0004          00003578   5192          LG    15,@lit_789_140
0000352A 4110 F064               00000064   5193          LA    1,100(0,15)
0000352E E310 D0B8 0024          000000B8   5194          STG   1,184(0,13)
00003534 E548 D0C0 01C0          000000C0   5195          MVGHI 192(13),448
0000353A 41F0 F112               00000112   5196          LA    15,274(0,15)
0000353E E3F0 D0C8 0024          000000C8   5197          STG   15,200(0,13)
00003544 4110 D0B0               000000B0   5198          LA    1,176(0,13)
00003548 E3F0 C0B8 0004          00003570   5199          LG    15,@lit_789_141 ; __assert
0000354E                                    5200 @@gen_label190 DS    0H
0000354E 05EF                               5201          BALR  14,15
00003550                                    5202 @@gen_label191 DS    0H
00003550                                    5203 @L148    DS    0H
                                            5204 * ***
                                            5205 * ***           if (!copy_cb)
00003550 B902 00F2                          5206          LTGR  15,2
00003554 4770 C0A6               0000355E   5207          BNZ   @L149
                                            5208 * ***                   copy_cb = rd_list_nocopy_ptr;
00003558 E320 C0D0 0004          00003588   5209          LG    2,@lit_789_142 ; rd_list_nocopy_ptr
0000355E                                    5210 @L149    DS    0H
                                            5211 * ***
                                            5212 * ***           for (i = 0 ; (elem = rd_list_elem(src, i)) ; i++) {
0000355E A738 0000               00000000   5213          LHI   3,0         ; 0
00003562 47F0 C12E               000035E6   5214          B     @L151
00003568                                    5215          DS    0D
00003568 000000D0                           5216 @FRAMESIZE_789 DC F'208'
0000356C 00000000
00003570 0000000000000000                   5217 @lit_789_141 DC AD(__assert)
00003578 000000000000402C                   5218 @lit_789_140 DC AD(@strings@)
00003580 0000000000003F28                   5219 @lit_789_139 DC AD(@DATA)
00003588 00000000000032D8                   5220 @lit_789_142 DC AD(rd_list_nocopy_ptr)
00003590 00000000000013D0                   5221 @lit_789_144 DC AD(rd_list_add)
00003598 0000000000002740                   5222 @lit_789_145 DC AD(rd_list_elem)
000035A0                                    5223 @L150    DS    0H
                                            5224 * ***                   void *celem = copy_cb(elem, opaque);
000035A0 E3F0 D0B0 0024          000000B0   5225          STG   15,176(0,13)
000035A6 E3F0 4018 0004          00000018   5226          LG    15,24(0,4)  ; opaque
000035AC E3F0 D0B8 0024          000000B8   5227          STG   15,184(0,13)
000035B2 4110 D0B0               000000B0   5228          LA    1,176(0,13)
000035B6 B904 00F2                          5229          LGR   15,2
                                                                                                                           Page  107 
  Active Usings: @REGION_789_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000035BA                                    5230 @@gen_label193 DS    0H
000035BA 05EF                               5231          BALR  14,15
000035BC                                    5232 @@gen_label194 DS    0H
                                            5233 * ***                   if (celem)
000035BC B902 001F                          5234          LTGR  1,15
000035C0 4780 C12A               000035E2   5235          BZ    @L154
                                            5236 * ***                           rd_list_add(dst, celem);
000035C4 E310 4000 0004          00000000   5237          LG    1,0(0,4)    ; dst
000035CA E310 D0B0 0024          000000B0   5238          STG   1,176(0,13)
000035D0 E3F0 D0B8 0024          000000B8   5239          STG   15,184(0,13)
000035D6 4110 D0B0               000000B0   5240          LA    1,176(0,13)
000035DA E3F0 C0D8 0004          00003590   5241          LG    15,@lit_789_144 ; rd_list_add
000035E0                                    5242 @@gen_label196 DS    0H
000035E0 05EF                               5243          BALR  14,15
000035E2                                    5244 @@gen_label197 DS    0H
000035E2                                    5245 @L154    DS    0H
                                            5246 * ***           }
000035E2 A73A 0001               00000001   5247          AHI   3,1
000035E6                                    5248 @L151    DS    0H
000035E6 E3F0 4008 0004          00000008   5249          LG    15,8(0,4)   ; src
000035EC E3F0 D0B0 0024          000000B0   5250          STG   15,176(0,13)
000035F2 B914 00F3                          5251          LGFR  15,3
000035F6 E3F0 D0B8 0024          000000B8   5252          STG   15,184(0,13)
000035FC 4110 D0B0               000000B0   5253          LA    1,176(0,13)
00003600 E3F0 C0E0 0004          00003598   5254          LG    15,@lit_789_145 ; rd_list_elem
00003606                                    5255 @@gen_label198 DS    0H
00003606 05EF                               5256          BALR  14,15
00003608                                    5257 @@gen_label199 DS    0H
00003608 B902 001F                          5258          LTGR  1,15
0000360C 4770 C0E8               000035A0   5259          BNZ   @L150
                                            5260 * ***   }
00003610                                    5261 @ret_lab_789 DS 0H
                                            5262 * * **** Start of Epilogue
                                            5263          DCCEPIL
00003610                                    5264+         ds 0h                                                          01-DCCEP
                                            5265+* Epilog
00003610 D707 D088 D088 00000088 00000088   5266+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003616 E3D0 D080 0004          00000080   5267+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000361C E3C0 D090 0004          00000090   5268+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003622 E3B0 C018 0004          00000018   5269+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003628 E3C0 B010 0021          00000010   5270+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000362E E3E0 D008 0004          00000008   5271+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003634 EB1C D020 0004          00000020   5272+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000363A 078E                               5273+         bcr 8,14                if same dsab, just return              01-DCCEP
0000363C E3F0 D010 0024          00000010   5274+         stg 15,16(0,13)         save return code                       01-DCCEP
00003642 E300 D018 0024          00000018   5275+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003648 E3F0 D090 0004          00000090   5276+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000364E E3F0 F018 0004          00000018   5277+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003654 47F0 F040               00000040   5278+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5279+* End of Epilog
                                            5280 * * **** End of Epilogue
                                            5281          DROP  12
                                                                                                                           Page  108 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5282 *
                                            5283 *   DSECT for automatic variables in "rd_list_copy_to"
                                            5284 *      (FUNCTION #789)
                                            5285 *
00000000                00000000 000000AC   5286 @AUTO#rd_list_copy_to DSECT
00000000                                    5287          DS    XL168
000000A8                                    5288 rd_list_copy_to#i#0 DS 1F  ; i
                                            5289 *
00003658                00000000 00003F28   5290 @CODE    CSECT
                                            5291 *
                                            5292 *
                                            5293 *
                                            5294 * ....... start of rd_list_copy_preallocated0
00003658                                    5295 @LNAME800 DS   0H
00003658 0000001A                           5296          DC    X'0000001A'
0000365C 99846D9389A2A36D                   5297          DC    C'rd_list_copy_preallocated0'
00003676 00                                 5298          DC    X'00'
                                            5299 rd_list_copy_preallocated0 DCCPRLG CINDEX=800,BASER=12,FRAME=208,ENTRY=*
                                                                NO,ARCH=ZARCH,LNAMEADDR=@LNAME800
                                            5300          macro
                                            5301          dccextrn &m
                                            5302          gblc    &$dccext(1000)
                                            5303          gbla    &$dccexti
                                            5304          lcla    &i
                                            5305 &$dccext(&$dccexti+1) setc    '&m'
                                            5306 &i       seta    1
                                            5307 .loop    aif    (&i gt &$dccexti).around
                                            5308          aif    ('&$dccext(&i)' eq '&m').getout
                                            5309 &i       seta    &i+1
                                            5310          ago     .loop
                                            5311 .around  anop
                                            5312 &$dccexti seta &$dccexti+1
                                            5313          extrn  &m
                                            5314 .getout  anop
                                            5315          mend
00003678                                    5316+$eye0125    ds    0d                                                    02-DCCCA
00003678 C4C3C3                             5317+         dc cl3'DCC'                                                    02-DCCCA
0000367B 01                                 5318+         dc xl1'01' format one                                          02-DCCCA
0000367C 00000000                           5319+         dc a(0)                                                        02-DCCCA
00003680 00000000000036EA                   5320+         dc ad(@PER_800)                                                02-DCCCA
00003688 00000000000000D0                   5321+         dc ad(208)                                                     02-DCCCA
00003690 0000000000000000                   5322+         dc ad(0)                                                       02-DCCCA
00003698 0000000000001000                   5323+         dc ad(4096)                                                    02-DCCCA
000036A0 20                                 5324+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000036A1 03                                 5325+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000036A2 03                                 5326+         dc al1(3)                                                      02-DCCCA
000036A3 08                                 5327+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000036A4 00                                 5328+         dc bl.8'00000000'                                              02-DCCCA
000036A5 000000                             5329+         dc al3(0)                                                      02-DCCCA
000036A8 0000000000003658                   5330+         dc ad(@LNAME800)                                               02-DCCCA
000036B0                                    5331+         ds 0d                                                          02-DCCCA
000036B0 0000000000003678                   5332+         dc ad($eye0125)                                                02-DCCCA
                                                                                                                           Page  109 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000036B8 0000000000000000                   5333+         dc ad(0)                                                       02-DCCCA
000036C0                                    5334+         ds    0d                                                       01-DCCPR
000036C0                                    5335+rd_list_copy_preallocated0 ds 0d                                        01-DCCPR
000036C0                                    5336+@REGION_800_1 ds 0h                                                     01-DCCPR
000036C0 EBEC D008 0024          00000008   5337+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000036C6 E3E0 D088 0004          00000088   5338+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000036CC E3C0 D090 0004          00000090   5339+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000036D2 B904 002E                          5340+         lgr   2,14                copy addr of our savearea            01-DCCPR
000036D6 E3B0 C018 0004          00000018   5341+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000036DC A7EB 00D0               000000D0   5342+         aghi  14,208              increase by frame size               01-DCCPR
000036E0 E3E0 C020 0021          00000020   5343+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000036E6 4720 B020               00000020   5344+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000036EA                                    5345+@PER_800 ds    0h                                                       01-DCCPR
000036EA EBDE 2080 0024          00000080   5346+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000036F0 E3C0 2090 0024          00000090   5347+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000036F6 B904 00D2                          5348+         lgr   13,2                set real frame pointer               01-DCCPR
000036FA B904 00CF                          5349+         lgr   12,15               set base reg                         01-DCCPR
                        000036C0            5350+         using @REGION_800_1,12                                         01-DCCPR
                                            5351 * ******* End of Prologue
                                            5352 * *
                                            5353 * ***           int dst_flags = dst->rl_flags & 0x1;
000036FE EB23 1000 0004          00000000   5354          LMG   2,3,0(1)    ; dst
00003704 5840 2018               00000018   5355          L     4,24(0,2)   ; offset of rl_flags in rd_list_s
00003708 C04B 0000 0001                     5356          NILF  4,X'00000001'
                                            5357 * ***
                                            5358 * ***           ((dst != src) ? (void)0 : __assert(__func__, "C:\\asgk\
                                            5359 * afka\\librdkafka\\src\\rdlist.c", 473, "dst != src"));
0000370E B920 0023                          5360          CGR   2,3
00003712 4770 C092               00003752   5361          BNE   @L156
00003716                                    5362 @L155    DS    0H
00003716 E3F0 C240 0004          00003900   5363          LG    15,@lit_800_147
0000371C 41F0 F0C4               000000C4   5364          LA    15,196(0,15)
00003720 E3F0 D0B0 0024          000000B0   5365          STG   15,176(0,13)
00003726 E3F0 C238 0004          000038F8   5366          LG    15,@lit_800_148
0000372C 4110 F064               00000064   5367          LA    1,100(0,15)
00003730 E310 D0B8 0024          000000B8   5368          STG   1,184(0,13)
00003736 E548 D0C0 01D9          000000C0   5369          MVGHI 192(13),473
0000373C 41F0 F112               00000112   5370          LA    15,274(0,15)
00003740 E3F0 D0C8 0024          000000C8   5371          STG   15,200(0,13)
00003746 4110 D0B0               000000B0   5372          LA    1,176(0,13)
0000374A E3F0 C230 0004          000038F0   5373          LG    15,@lit_800_149 ; __assert
00003750                                    5374 @@gen_label202 DS    0H
00003750 05EF                               5375          BALR  14,15
00003752                                    5376 @@gen_label203 DS    0H
00003752                                    5377 @L156    DS    0H
                                            5378 * ***
                                            5379 * ***           rd_list_init_copy(dst, src);
00003752 EB23 D0B0 0024          000000B0   5380          STMG  2,3,176(13)
00003758 4110 D0B0               000000B0   5381          LA    1,176(0,13)
0000375C E3F0 C248 0004          00003908   5382          LG    15,@lit_800_150 ; rd_list_init_copy
00003762                                    5383 @@gen_label204 DS    0H
00003762 05EF                               5384          BALR  14,15
                                                                                                                           Page  110 
  Active Usings: @REGION_800_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003764                                    5385 @@gen_label205 DS    0H
                                            5386 * ***           dst->rl_flags |= dst_flags;
00003764 5640 2018               00000018   5387          O     4,24(0,2)
00003768 5040 2018               00000018   5388          ST    4,24(0,2)
                                            5389 * ***
                                            5390 * ***           (((dst->rl_flags & 0x4)) ? (void)0 : __assert(__func__\
                                            5391 * , "C:\\asgkafka\\librdkafka\\src\\rdlist.c", 478, "(dst->rl_flags & \
                                            5392 * 0x4)"));
0000376C 9104 201B      0000001B 00000004   5393          TM    27(2),4
00003770 4770 C0F0               000037B0   5394          BNZ   @L158
00003774                                    5395 @L157    DS    0H
00003774 E3F0 C240 0004          00003900   5396          LG    15,@lit_800_147
0000377A 41F0 F0C4               000000C4   5397          LA    15,196(0,15)
0000377E E3F0 D0B0 0024          000000B0   5398          STG   15,176(0,13)
00003784 E3F0 C238 0004          000038F8   5399          LG    15,@lit_800_148
0000378A 4110 F064               00000064   5400          LA    1,100(0,15)
0000378E E310 D0B8 0024          000000B8   5401          STG   1,184(0,13)
00003794 E548 D0C0 01DE          000000C0   5402          MVGHI 192(13),478
0000379A 41F0 F11E               0000011E   5403          LA    15,286(0,15)
0000379E E3F0 D0C8 0024          000000C8   5404          STG   15,200(0,13)
000037A4 4110 D0B0               000000B0   5405          LA    1,176(0,13)
000037A8 E3F0 C230 0004          000038F0   5406          LG    15,@lit_800_149 ; __assert
000037AE                                    5407 @@gen_label207 DS    0H
000037AE 05EF                               5408          BALR  14,15
000037B0                                    5409 @@gen_label208 DS    0H
000037B0                                    5410 @L158    DS    0H
                                            5411 * ***           (((src->rl_flags & 0x4)) ? (void)0 : __assert(__func__\
                                            5412 * , "C:\\asgkafka\\librdkafka\\src\\rdlist.c", 479, "(src->rl_flags & \
                                            5413 * 0x4)"));
000037B0 9104 301B      0000001B 00000004   5414          TM    27(3),4
000037B4 4770 C134               000037F4   5415          BNZ   @L160
000037B8                                    5416 @L159    DS    0H
000037B8 E3F0 C240 0004          00003900   5417          LG    15,@lit_800_147
000037BE 41F0 F0C4               000000C4   5418          LA    15,196(0,15)
000037C2 E3F0 D0B0 0024          000000B0   5419          STG   15,176(0,13)
000037C8 E3F0 C238 0004          000038F8   5420          LG    15,@lit_800_148
000037CE 4110 F064               00000064   5421          LA    1,100(0,15)
000037D2 E310 D0B8 0024          000000B8   5422          STG   1,184(0,13)
000037D8 E548 D0C0 01DF          000000C0   5423          MVGHI 192(13),479
000037DE 41F0 F134               00000134   5424          LA    15,308(0,15)
000037E2 E3F0 D0C8 0024          000000C8   5425          STG   15,200(0,13)
000037E8 4110 D0B0               000000B0   5426          LA    1,176(0,13)
000037EC E3F0 C230 0004          000038F0   5427          LG    15,@lit_800_149 ; __assert
000037F2                                    5428 @@gen_label210 DS    0H
000037F2 05EF                               5429          BALR  14,15
000037F4                                    5430 @@gen_label211 DS    0H
000037F4                                    5431 @L160    DS    0H
                                            5432 * ***           ((dst->rl_elemsize == src->rl_elemsize && dst->rl_size\
                                            5433 *  == src->rl_size) ? (void)0 : __assert(__func__, "C:\\asgkafka\\libr\
                                            5434 * dkafka\\src\\rdlist.c", 480, "dst->rl_elemsize == src->rl_elemsize &\
                                            5435 * & dst->rl_size == src->rl_size"));
000037F4 58F0 201C               0000001C   5436          L     15,28(0,2)  ; offset of rl_elemsize in rd_list_s
                                                                                                                           Page  111 
  Active Usings: @REGION_800_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000037F8 59F0 301C               0000001C   5437          C     15,28(0,3)
000037FC 4770 C14C               0000380C   5438          BNE   @L161
00003800 58F0 2000               00000000   5439          L     15,0(0,2)   ; dst
00003804 59F0 3000               00000000   5440          C     15,0(0,3)
00003808 4780 C188               00003848   5441          BE    @L162
0000380C                                    5442 @L161    DS    0H
0000380C E3F0 C240 0004          00003900   5443          LG    15,@lit_800_147
00003812 41F0 F0C4               000000C4   5444          LA    15,196(0,15)
00003816 E3F0 D0B0 0024          000000B0   5445          STG   15,176(0,13)
0000381C E3F0 C238 0004          000038F8   5446          LG    15,@lit_800_148
00003822 4110 F064               00000064   5447          LA    1,100(0,15)
00003826 E310 D0B8 0024          000000B8   5448          STG   1,184(0,13)
0000382C E548 D0C0 01E0          000000C0   5449          MVGHI 192(13),480
00003832 41F0 F14A               0000014A   5450          LA    15,330(0,15)
00003836 E3F0 D0C8 0024          000000C8   5451          STG   15,200(0,13)
0000383C 4110 D0B0               000000B0   5452          LA    1,176(0,13)
00003840 E3F0 C230 0004          000038F0   5453          LG    15,@lit_800_149 ; __assert
00003846                                    5454 @@gen_label214 DS    0H
00003846 05EF                               5455          BALR  14,15
00003848                                    5456 @@gen_label215 DS    0H
00003848                                    5457 @L162    DS    0H
                                            5458 * ***
                                            5459 * ***
                                            5460 * ***           __memcpy(dst->rl_p,src->rl_p,src->rl_elemsize * src->r\
                                            5461 * l_size);
00003848 58F0 301C               0000001C   5462          L     15,28(0,3)  ; offset of rl_elemsize in rd_list_s
0000384C 71F0 3000               00000000   5463          MS    15,0(0,3)
00003850 B914 00FF                          5464          LGFR  15,15
00003854 E310 3020 0004          00000020   5465          LG    1,32(0,3)
0000385A E340 2020 0004          00000020   5466          LG    4,32(0,2)
00003860 B902 00FF                          5467          LTGR  15,15
00003864 4780 C1D2               00003892   5468          BZ    @@gen_label218
00003868 A7FB FFFF               0000FFFF   5469          AGHI  15,-1
0000386C EB5F 0008 000A          00000008   5470          SRAG  5,15,8(0)
00003872 B902 0055                          5471          LTGR  5,5
00003876 4780 C1CE               0000388E   5472          BZ    @@gen_label217
0000387A                                    5473 @@gen_label216 DS 0H
0000387A D2FF 4000 1000 00000000 00000000   5474          MVC   0(256,4),0(1)
00003880 4140 4100               00000100   5475          LA    4,256(0,4)
00003884 4110 1100               00000100   5476          LA    1,256(0,1)
00003888 E350 C1BA 0046          0000387A   5477          BCTG  5,@@gen_label216
0000388E                                    5478 @@gen_label217 DS 0H
0000388E 44F0 C250               00003910   5479          EX    15,@lit_800_160
00003892                                    5480 @@gen_label218 DS 0H
                                            5481 * ***           dst->rl_cnt = src->rl_cnt;
00003892 58F0 3004               00000004   5482          L     15,4(0,3)   ; offset of rl_cnt in rd_list_s
00003896 50F0 2004               00000004   5483          ST    15,4(0,2)   ; offset of rl_cnt in rd_list_s
                                            5484 * ***
                                            5485 * ***           return dst;
0000389A B904 00F2                          5486          LGR   15,2
                                            5487 * ***   }
                                            5488 * * **** Start of Epilogue
                                                                                                                           Page  112 
  Active Usings: @REGION_800_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5489          DCCEPIL
0000389E                                    5490+         ds 0h                                                          01-DCCEP
                                            5491+* Epilog
0000389E D707 D088 D088 00000088 00000088   5492+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000038A4 E3D0 D080 0004          00000080   5493+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000038AA E3C0 D090 0004          00000090   5494+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000038B0 E3B0 C018 0004          00000018   5495+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000038B6 E3C0 B010 0021          00000010   5496+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000038BC E3E0 D008 0004          00000008   5497+         lg  14,8(0,13)          load up return address                 01-DCCEP
000038C2 EB1C D020 0004          00000020   5498+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000038C8 078E                               5499+         bcr 8,14                if same dsab, just return              01-DCCEP
000038CA E3F0 D010 0024          00000010   5500+         stg 15,16(0,13)         save return code                       01-DCCEP
000038D0 E300 D018 0024          00000018   5501+         stg 0,24(0,13)          save more return code                  01-DCCEP
000038D6 E3F0 D090 0004          00000090   5502+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000038DC E3F0 F018 0004          00000018   5503+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000038E2 47F0 F040               00000040   5504+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5505+* End of Epilog
                                            5506 * * **** End of Epilogue
000038E8                                    5507          DS    0D
000038E8 000000D0                           5508 @FRAMESIZE_800 DC F'208'
000038EC 00000000
000038F0 0000000000000000                   5509 @lit_800_149 DC AD(__assert)
000038F8 000000000000402C                   5510 @lit_800_148 DC AD(@strings@)
00003900 0000000000003F28                   5511 @lit_800_147 DC AD(@DATA)
00003908 0000000000000AE0                   5512 @lit_800_150 DC AD(rd_list_init_copy)
00003910 D200 4000 1000 00000000 00000000   5513 @lit_800_160          MVC 0(1,4),0(1)
                                            5514          DROP  12
                                            5515 *
                                            5516 *   DSECT for automatic variables in "rd_list_copy_preallocated0"
                                            5517 *      (FUNCTION #800)
                                            5518 *
00000000                00000000 000000AC   5519 @AUTO#rd_list_copy_preallocated0 DSECT
00000000                                    5520          DS    XL168
000000A8                                    5521 rd_list_copy_preallocated0#dst_flags#0 DS 1F ; dst_flags
                                            5522 *
00003916                00000000 00003F28   5523 @CODE    CSECT
                                            5524 *
                                            5525 *
                                            5526 *
                                            5527 * ....... start of rd_list_copy_preallocated
                                            5528 rd_list_copy_preallocated ALIAS X'99846D9389A2A36D839697A86D97998581939*
                                                                3968381A38584'
00003916                                    5529 @LNAME790 DS   0H
00003916 00000019                           5530          DC    X'00000019'
0000391A 99846D9389A2A36D                   5531          DC    C'rd_list_copy_preallocated'
00003933 00                                 5532          DC    X'00'
                                            5533 rd_list_copy_preallocated DCCPRLG CINDEX=790,BASER=12,FRAME=184,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME790
                                            5534          macro
                                            5535          dccextrn &m
                                            5536          gblc    &$dccext(1000)
                                            5537          gbla    &$dccexti
                                                                                                                           Page  113 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5538          lcla    &i
                                            5539 &$dccext(&$dccexti+1) setc    '&m'
                                            5540 &i       seta    1
                                            5541 .loop    aif    (&i gt &$dccexti).around
                                            5542          aif    ('&$dccext(&i)' eq '&m').getout
                                            5543 &i       seta    &i+1
                                            5544          ago     .loop
                                            5545 .around  anop
                                            5546 &$dccexti seta &$dccexti+1
                                            5547          extrn  &m
                                            5548 .getout  anop
                                            5549          mend
00003938                                    5550+$eye0128    ds    0d                                                    02-DCCCA
00003938 C4C3C3                             5551+         dc cl3'DCC'                                                    02-DCCCA
0000393B 01                                 5552+         dc xl1'01' format one                                          02-DCCCA
0000393C 00000000                           5553+         dc a(0)                                                        02-DCCCA
00003940 00000000000039AA                   5554+         dc ad(@PER_790)                                                02-DCCCA
00003948 00000000000000B8                   5555+         dc ad(184)                                                     02-DCCCA
00003950 0000000000000000                   5556+         dc ad(0)                                                       02-DCCCA
00003958 0000000000001000                   5557+         dc ad(4096)                                                    02-DCCCA
00003960 20                                 5558+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003961 03                                 5559+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003962 03                                 5560+         dc al1(3)                                                      02-DCCCA
00003963 08                                 5561+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003964 00                                 5562+         dc bl.8'00000000'                                              02-DCCCA
00003965 000000                             5563+         dc al3(0)                                                      02-DCCCA
00003968 0000000000003916                   5564+         dc ad(@LNAME790)                                               02-DCCCA
00003970                                    5565+         ds 0d                                                          02-DCCCA
00003970 0000000000003938                   5566+         dc ad($eye0128)                                                02-DCCCA
00003978 0000000000000000                   5567+         dc ad(0)                                                       02-DCCCA
00003980                                    5568+         ds    0d                                                       01-DCCPR
                                            5569+         entry rd_list_copy_preallocated                                01-DCCPR
00003980                                    5570+rd_list_copy_preallocated ds 0d                                         01-DCCPR
00003980                                    5571+@REGION_790_1 ds 0h                                                     01-DCCPR
00003980 EBEC D008 0024          00000008   5572+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003986 E3E0 D088 0004          00000088   5573+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000398C E3C0 D090 0004          00000090   5574+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003992 B904 002E                          5575+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003996 E3B0 C018 0004          00000018   5576+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000399C A7EB 00B8               000000B8   5577+         aghi  14,184              increase by frame size               01-DCCPR
000039A0 E3E0 C020 0021          00000020   5578+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000039A6 4720 B020               00000020   5579+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000039AA                                    5580+@PER_790 ds    0h                                                       01-DCCPR
000039AA EBDE 2080 0024          00000080   5581+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000039B0 E3C0 2090 0024          00000090   5582+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000039B6 B904 00D2                          5583+         lgr   13,2                set real frame pointer               01-DCCPR
000039BA B904 00CF                          5584+         lgr   12,15               set base reg                         01-DCCPR
                        00003980            5585+         using @REGION_790_1,12                                         01-DCCPR
000039BE B904 0021                          5586          LGR   2,1         ; ptr to parm area
                                            5587 * ******* End of Prologue
                                            5588 * *
                                            5589 * ***           return rd_list_copy_preallocated0(rd_list_new(0, ((voi\
                                                                                                                           Page  114 
  Active Usings: @REGION_790_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5590 * d *)0)),
                                            5591 * ***                                             (const rd_list_t *)e\
                                            5592 * lem);
000039C2 D70F D0A8 D0A8 000000A8 000000A8   5593          XC    168(16,13),168(13)
000039C8 4110 D0A8               000000A8   5594          LA    1,168(0,13)
000039CC E3F0 C0C8 0004          00003A48   5595          LG    15,@lit_790_162 ; rd_list_new
000039D2                                    5596 @@gen_label219 DS    0H
000039D2 05EF                               5597          BALR  14,15
000039D4                                    5598 @@gen_label220 DS    0H
000039D4 E3F0 D0A8 0024          000000A8   5599          STG   15,168(0,13)
000039DA E3F0 2000 0004          00000000   5600          LG    15,0(0,2)   ; elem
000039E0 E3F0 D0B0 0024          000000B0   5601          STG   15,176(0,13)
000039E6 4110 D0A8               000000A8   5602          LA    1,168(0,13)
000039EA E3F0 C0D0 0004          00003A50   5603          LG    15,@lit_790_163 ; rd_list_copy_preallocated0
000039F0                                    5604 @@gen_label221 DS    0H
000039F0 05EF                               5605          BALR  14,15
000039F2                                    5606 @@gen_label222 DS    0H
                                            5607 * ***   }
                                            5608 * * **** Start of Epilogue
                                            5609          DCCEPIL
000039F2                                    5610+         ds 0h                                                          01-DCCEP
                                            5611+* Epilog
000039F2 D707 D088 D088 00000088 00000088   5612+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000039F8 E3D0 D080 0004          00000080   5613+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000039FE E3C0 D090 0004          00000090   5614+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003A04 E3B0 C018 0004          00000018   5615+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003A0A E3C0 B010 0021          00000010   5616+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003A10 E3E0 D008 0004          00000008   5617+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003A16 EB1C D020 0004          00000020   5618+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003A1C 078E                               5619+         bcr 8,14                if same dsab, just return              01-DCCEP
00003A1E E3F0 D010 0024          00000010   5620+         stg 15,16(0,13)         save return code                       01-DCCEP
00003A24 E300 D018 0024          00000018   5621+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003A2A E3F0 D090 0004          00000090   5622+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003A30 E3F0 F018 0004          00000018   5623+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003A36 47F0 F040               00000040   5624+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5625+* End of Epilog
                                            5626 * * **** End of Epilogue
00003A40                                    5627          DS    0D
00003A40 000000B8                           5628 @FRAMESIZE_790 DC F'184'
00003A44 00000000
00003A48 0000000000000D88                   5629 @lit_790_162 DC AD(rd_list_new)
00003A50 00000000000036C0                   5630 @lit_790_163 DC AD(rd_list_copy_preallocated0)
                                            5631          DROP  12
                                            5632 *
                                            5633 *   DSECT for automatic variables in "rd_list_copy_preallocated"
                                            5634 *      (FUNCTION #790)
                                            5635 *
00000000                00000000 000000A8   5636 @AUTO#rd_list_copy_preallocated DSECT
00000000                                    5637          DS    XL168
                                            5638 *
00003A58                00000000 00003F28   5639 @CODE    CSECT
                                            5640 *
                                                                                                                           Page  115 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5641 *
                                            5642 *
                                            5643 * ....... start of rd_list_init_int32
                                            5644 rd_list_init_int32 ALIAS X'99846D9389A2A36D899589A36D8995A3F3F2'
00003A58                                    5645 @LNAME792 DS   0H
00003A58 00000012                           5646          DC    X'00000012'
00003A5C 99846D9389A2A36D                   5647          DC    C'rd_list_init_int32'
00003A6E 00                                 5648          DC    X'00'
                                            5649 rd_list_init_int32 DCCPRLG CINDEX=792,BASER=12,FRAME=208,ENTRY=YES,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME792
                                            5650          macro
                                            5651          dccextrn &m
                                            5652          gblc    &$dccext(1000)
                                            5653          gbla    &$dccexti
                                            5654          lcla    &i
                                            5655 &$dccext(&$dccexti+1) setc    '&m'
                                            5656 &i       seta    1
                                            5657 .loop    aif    (&i gt &$dccexti).around
                                            5658          aif    ('&$dccext(&i)' eq '&m').getout
                                            5659 &i       seta    &i+1
                                            5660          ago     .loop
                                            5661 .around  anop
                                            5662 &$dccexti seta &$dccexti+1
                                            5663          extrn  &m
                                            5664 .getout  anop
                                            5665          mend
00003A70                                    5666+$eye0131    ds    0d                                                    02-DCCCA
00003A70 C4C3C3                             5667+         dc cl3'DCC'                                                    02-DCCCA
00003A73 01                                 5668+         dc xl1'01' format one                                          02-DCCCA
00003A74 00000000                           5669+         dc a(0)                                                        02-DCCCA
00003A78 0000000000003AE2                   5670+         dc ad(@PER_792)                                                02-DCCCA
00003A80 00000000000000D0                   5671+         dc ad(208)                                                     02-DCCCA
00003A88 0000000000000000                   5672+         dc ad(0)                                                       02-DCCCA
00003A90 0000000000001000                   5673+         dc ad(4096)                                                    02-DCCCA
00003A98 20                                 5674+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003A99 03                                 5675+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003A9A 03                                 5676+         dc al1(3)                                                      02-DCCCA
00003A9B 08                                 5677+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003A9C 00                                 5678+         dc bl.8'00000000'                                              02-DCCCA
00003A9D 000000                             5679+         dc al3(0)                                                      02-DCCCA
00003AA0 0000000000003A58                   5680+         dc ad(@LNAME792)                                               02-DCCCA
00003AA8                                    5681+         ds 0d                                                          02-DCCCA
00003AA8 0000000000003A70                   5682+         dc ad($eye0131)                                                02-DCCCA
00003AB0 0000000000000000                   5683+         dc ad(0)                                                       02-DCCCA
00003AB8                                    5684+         ds    0d                                                       01-DCCPR
                                            5685+         entry rd_list_init_int32                                       01-DCCPR
00003AB8                                    5686+rd_list_init_int32 ds 0d                                                01-DCCPR
00003AB8                                    5687+@REGION_792_1 ds 0h                                                     01-DCCPR
00003AB8 EBEC D008 0024          00000008   5688+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003ABE E3E0 D088 0004          00000088   5689+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003AC4 E3C0 D090 0004          00000090   5690+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003ACA B904 002E                          5691+         lgr   2,14                copy addr of our savearea            01-DCCPR
                                                                                                                           Page  116 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003ACE E3B0 C018 0004          00000018   5692+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003AD4 A7EB 00D0               000000D0   5693+         aghi  14,208              increase by frame size               01-DCCPR
00003AD8 E3E0 C020 0021          00000020   5694+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003ADE 4720 B020               00000020   5695+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003AE2                                    5696+@PER_792 ds    0h                                                       01-DCCPR
00003AE2 EBDE 2080 0024          00000080   5697+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003AE8 E3C0 2090 0024          00000090   5698+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003AEE B904 00D2                          5699+         lgr   13,2                set real frame pointer               01-DCCPR
00003AF2 B904 00CF                          5700+         lgr   12,15               set base reg                         01-DCCPR
                        00003AB8            5701+         using @REGION_792_1,12                                         01-DCCPR
00003AF6 B904 0041                          5702          LGR   4,1         ; ptr to parm area
                                            5703 * ******* End of Prologue
                                            5704 * *
                                            5705 * ***           int rl_flags = rl->rl_flags & 0x1;
00003AFA E320 4000 0004          00000000   5706          LG    2,0(0,4)    ; rl
00003B00 5830 2018               00000018   5707          L     3,24(0,2)   ; offset of rl_flags in rd_list_s
00003B04 C03B 0000 0001                     5708          NILF  3,X'00000001'
                                            5709 * ***           rd_list_init(rl, 0, ((void *)0));
00003B0A E320 D0B0 0024          000000B0   5710          STG   2,176(0,13)
00003B10 D70F D0B8 D0B8 000000B8 000000B8   5711          XC    184(16,13),184(13)
00003B16 4110 D0B0               000000B0   5712          LA    1,176(0,13)
00003B1A E3F0 C0F0 0004          00003BA8   5713          LG    15,@lit_792_165 ; rd_list_init
00003B20                                    5714 @@gen_label223 DS    0H
00003B20 05EF                               5715          BALR  14,15
00003B22                                    5716 @@gen_label224 DS    0H
                                            5717 * ***           rl->rl_flags |= rl_flags;
00003B22 5630 2018               00000018   5718          O     3,24(0,2)
00003B26 5030 2018               00000018   5719          ST    3,24(0,2)
                                            5720 * ***           rd_list_prealloc_elems(rl, sizeof(int32_t), max_size, \
                                            5721 * 1);
00003B2A E320 D0B0 0024          000000B0   5722          STG   2,176(0,13)
00003B30 E548 D0B8 0004          000000B8   5723          MVGHI 184(13),4
00003B36 E3F0 400C 0014          0000000C   5724          LGF   15,12(0,4)  ; max_size
00003B3C E3F0 D0C0 0024          000000C0   5725          STG   15,192(0,13)
00003B42 E548 D0C8 0001          000000C8   5726          MVGHI 200(13),1
00003B48 4110 D0B0               000000B0   5727          LA    1,176(0,13)
00003B4C E3F0 C0F8 0004          00003BB0   5728          LG    15,@lit_792_166 ; rd_list_prealloc_elems
00003B52                                    5729 @@gen_label225 DS    0H
00003B52 05EF                               5730          BALR  14,15
00003B54                                    5731 @@gen_label226 DS    0H
                                            5732 * ***           return rl;
00003B54 B904 00F2                          5733          LGR   15,2
                                            5734 * ***   }
                                            5735 * * **** Start of Epilogue
                                            5736          DCCEPIL
00003B58                                    5737+         ds 0h                                                          01-DCCEP
                                            5738+* Epilog
00003B58 D707 D088 D088 00000088 00000088   5739+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003B5E E3D0 D080 0004          00000080   5740+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003B64 E3C0 D090 0004          00000090   5741+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003B6A E3B0 C018 0004          00000018   5742+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003B70 E3C0 B010 0021          00000010   5743+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page  117 
  Active Usings: @REGION_792_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003B76 E3E0 D008 0004          00000008   5744+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003B7C EB1C D020 0004          00000020   5745+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003B82 078E                               5746+         bcr 8,14                if same dsab, just return              01-DCCEP
00003B84 E3F0 D010 0024          00000010   5747+         stg 15,16(0,13)         save return code                       01-DCCEP
00003B8A E300 D018 0024          00000018   5748+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003B90 E3F0 D090 0004          00000090   5749+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003B96 E3F0 F018 0004          00000018   5750+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003B9C 47F0 F040               00000040   5751+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5752+* End of Epilog
                                            5753 * * **** End of Epilogue
00003BA0                                    5754          DS    0D
00003BA0 000000D0                           5755 @FRAMESIZE_792 DC F'208'
00003BA4 00000000
00003BA8 00000000000009A0                   5756 @lit_792_165 DC AD(rd_list_init)
00003BB0 0000000000000ED8                   5757 @lit_792_166 DC AD(rd_list_prealloc_elems)
                                            5758          DROP  12
                                            5759 *
                                            5760 *   DSECT for automatic variables in "rd_list_init_int32"
                                            5761 *      (FUNCTION #792)
                                            5762 *
00000000                00000000 000000AC   5763 @AUTO#rd_list_init_int32 DSECT
00000000                                    5764          DS    XL168
000000A8                                    5765 rd_list_init_int32#rl_flags#0 DS 1F ; rl_flags
                                            5766 *
00003BB8                00000000 00003F28   5767 @CODE    CSECT
                                            5768 *
                                            5769 *
                                            5770 *
                                            5771 * ....... start of rd_list_set_int32
                                            5772 rd_list_set_int32 ALIAS X'99846D9389A2A36DA285A36D8995A3F3F2'
00003BB8                                    5773 @LNAME794 DS   0H
00003BB8 00000011                           5774          DC    X'00000011'
00003BBC 99846D9389A2A36D                   5775          DC    C'rd_list_set_int32'
00003BCD 00                                 5776          DC    X'00'
                                            5777 rd_list_set_int32 DCCPRLG CINDEX=794,BASER=12,FRAME=200,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME794
                                            5778          macro
                                            5779          dccextrn &m
                                            5780          gblc    &$dccext(1000)
                                            5781          gbla    &$dccexti
                                            5782          lcla    &i
                                            5783 &$dccext(&$dccexti+1) setc    '&m'
                                            5784 &i       seta    1
                                            5785 .loop    aif    (&i gt &$dccexti).around
                                            5786          aif    ('&$dccext(&i)' eq '&m').getout
                                            5787 &i       seta    &i+1
                                            5788          ago     .loop
                                            5789 .around  anop
                                            5790 &$dccexti seta &$dccexti+1
                                            5791          extrn  &m
                                            5792 .getout  anop
                                            5793          mend
                                                                                                                           Page  118 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003BD0                                    5794+$eye0134    ds    0d                                                    02-DCCCA
00003BD0 C4C3C3                             5795+         dc cl3'DCC'                                                    02-DCCCA
00003BD3 01                                 5796+         dc xl1'01' format one                                          02-DCCCA
00003BD4 00000000                           5797+         dc a(0)                                                        02-DCCCA
00003BD8 0000000000003C42                   5798+         dc ad(@PER_794)                                                02-DCCCA
00003BE0 00000000000000C8                   5799+         dc ad(200)                                                     02-DCCCA
00003BE8 0000000000000000                   5800+         dc ad(0)                                                       02-DCCCA
00003BF0 0000000000001000                   5801+         dc ad(4096)                                                    02-DCCCA
00003BF8 20                                 5802+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003BF9 03                                 5803+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003BFA 03                                 5804+         dc al1(3)                                                      02-DCCCA
00003BFB 08                                 5805+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003BFC 00                                 5806+         dc bl.8'00000000'                                              02-DCCCA
00003BFD 000000                             5807+         dc al3(0)                                                      02-DCCCA
00003C00 0000000000003BB8                   5808+         dc ad(@LNAME794)                                               02-DCCCA
00003C08                                    5809+         ds 0d                                                          02-DCCCA
00003C08 0000000000003BD0                   5810+         dc ad($eye0134)                                                02-DCCCA
00003C10 0000000000000000                   5811+         dc ad(0)                                                       02-DCCCA
00003C18                                    5812+         ds    0d                                                       01-DCCPR
                                            5813+         entry rd_list_set_int32                                        01-DCCPR
00003C18                                    5814+rd_list_set_int32 ds 0d                                                 01-DCCPR
00003C18                                    5815+@REGION_794_1 ds 0h                                                     01-DCCPR
00003C18 EBEC D008 0024          00000008   5816+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003C1E E3E0 D088 0004          00000088   5817+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003C24 E3C0 D090 0004          00000090   5818+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003C2A B904 002E                          5819+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003C2E E3B0 C018 0004          00000018   5820+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003C34 A7EB 00C8               000000C8   5821+         aghi  14,200              increase by frame size               01-DCCPR
00003C38 E3E0 C020 0021          00000020   5822+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003C3E 4720 B020               00000020   5823+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003C42                                    5824+@PER_794 ds    0h                                                       01-DCCPR
00003C42 EBDE 2080 0024          00000080   5825+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003C48 E3C0 2090 0024          00000090   5826+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003C4E B904 00D2                          5827+         lgr   13,2                set real frame pointer               01-DCCPR
00003C52 B904 00CF                          5828+         lgr   12,15               set base reg                         01-DCCPR
                        00003C18            5829+         using @REGION_794_1,12                                         01-DCCPR
00003C56 B904 0041                          5830          LGR   4,1         ; ptr to parm area
                                            5831 * ******* End of Prologue
                                            5832 * *
                                            5833 * ***           (((rl->rl_flags & 0x4) && rl->rl_elemsize == sizeof(in\
                                            5834 * t32_t)) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\sr\
                                            5835 * c\\rdlist.c", 509, "(rl->rl_flags & 0x4) && rl->rl_elemsize == sizeo\
                                            5836 * f(int32_t)"));
00003C5A E320 4000 0004          00000000   5837          LG    2,0(0,4)    ; rl
00003C60 5830 400C               0000000C   5838          L     3,12(0,4)   ; idx
00003C64 9104 201B      0000001B 00000004   5839          TM    27(2),4
00003C68 4780 C062               00003C7A   5840          BZ    @L163
00003C6C E3F0 201C 0014          0000001C   5841          LGF   15,28(0,2)
00003C72 A7FF 0004               00000004   5842          CGHI  15,4
00003C76 4780 C09E               00003CB6   5843          BE    @L164
00003C7A                                    5844 @L163    DS    0H
00003C7A E3F0 C178 0004          00003D90   5845          LG    15,@lit_794_168
                                                                                                                           Page  119 
  Active Usings: @REGION_794_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003C80 41F0 F0E0               000000E0   5846          LA    15,224(0,15)
00003C84 E3F0 D0A8 0024          000000A8   5847          STG   15,168(0,13)
00003C8A E3F0 C170 0004          00003D88   5848          LG    15,@lit_794_169
00003C90 4110 F064               00000064   5849          LA    1,100(0,15)
00003C94 E310 D0B0 0024          000000B0   5850          STG   1,176(0,13)
00003C9A E548 D0B8 01FD          000000B8   5851          MVGHI 184(13),509
00003CA0 41F0 F190               00000190   5852          LA    15,400(0,15)
00003CA4 E3F0 D0C0 0024          000000C0   5853          STG   15,192(0,13)
00003CAA 4110 D0A8               000000A8   5854          LA    1,168(0,13)
00003CAE E3F0 C168 0004          00003D80   5855          LG    15,@lit_794_170 ; __assert
00003CB4                                    5856 @@gen_label229 DS    0H
00003CB4 05EF                               5857          BALR  14,15
00003CB6                                    5858 @@gen_label230 DS    0H
00003CB6                                    5859 @L164    DS    0H
                                            5860 * ***
                                            5861 * ***           ((idx < rl->rl_size) ? (void)0 : __assert(__func__, "C\
                                            5862 * :\\asgkafka\\librdkafka\\src\\rdlist.c", 511, "idx < rl->rl_size"));
00003CB6 5930 2000               00000000   5863          C     3,0(0,2)
00003CBA 4740 C0E2               00003CFA   5864          BL    @L166
00003CBE                                    5865 @L165    DS    0H
00003CBE E3F0 C178 0004          00003D90   5866          LG    15,@lit_794_168
00003CC4 41F0 F0E0               000000E0   5867          LA    15,224(0,15)
00003CC8 E3F0 D0A8 0024          000000A8   5868          STG   15,168(0,13)
00003CCE E3F0 C170 0004          00003D88   5869          LG    15,@lit_794_169
00003CD4 4110 F064               00000064   5870          LA    1,100(0,15)
00003CD8 E310 D0B0 0024          000000B0   5871          STG   1,176(0,13)
00003CDE E548 D0B8 01FF          000000B8   5872          MVGHI 184(13),511
00003CE4 41F0 F1CC               000001CC   5873          LA    15,460(0,15)
00003CE8 E3F0 D0C0 0024          000000C0   5874          STG   15,192(0,13)
00003CEE 4110 D0A8               000000A8   5875          LA    1,168(0,13)
00003CF2 E3F0 C168 0004          00003D80   5876          LG    15,@lit_794_170 ; __assert
00003CF8                                    5877 @@gen_label232 DS    0H
00003CF8 05EF                               5878          BALR  14,15
00003CFA                                    5879 @@gen_label233 DS    0H
00003CFA                                    5880 @L166    DS    0H
                                            5881 * ***
                                            5882 * ***           __memcpy(rl->rl_elems[idx],&val,sizeof(int32_t));
00003CFA B914 00F3                          5883          LGFR  15,3
00003CFE E310 2008 0004          00000008   5884          LG    1,8(0,2)    ; offset of rl_elems in rd_list_s
00003D04 EBFF 0003 000D          00000003   5885          SLLG  15,15,3(0)  ; *0x8
00003D0A 4140 4014               00000014   5886          LA    4,20(0,4)
00003D0E E3FF 1000 0004          00000000   5887          LG    15,0(15,1)
00003D14 D203 F000 4000 00000000 00000000   5888          MVC   0(4,15),0(4)
                                            5889 * ***
                                            5890 * ***           if (rl->rl_cnt <= idx)
00003D1A 58F0 2004               00000004   5891          L     15,4(0,2)   ; offset of rl_cnt in rd_list_s
00003D1E 19F3                               5892          CR    15,3
00003D20 4720 C114               00003D2C   5893          BH    @ret_lab_794
                                            5894 * ***                   rl->rl_cnt = idx+1;
00003D24 A73A 0001               00000001   5895          AHI   3,1
00003D28 5030 2004               00000004   5896          ST    3,4(0,2)    ; offset of rl_cnt in rd_list_s
00003D2C                                    5897 @L167    DS    0H
                                                                                                                           Page  120 
  Active Usings: @REGION_794_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5898 * ***   }
00003D2C                                    5899 @ret_lab_794 DS 0H
                                            5900 * * **** Start of Epilogue
                                            5901          DCCEPIL
00003D2C                                    5902+         ds 0h                                                          01-DCCEP
                                            5903+* Epilog
00003D2C D707 D088 D088 00000088 00000088   5904+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003D32 E3D0 D080 0004          00000080   5905+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003D38 E3C0 D090 0004          00000090   5906+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003D3E E3B0 C018 0004          00000018   5907+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003D44 E3C0 B010 0021          00000010   5908+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003D4A E3E0 D008 0004          00000008   5909+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003D50 EB1C D020 0004          00000020   5910+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003D56 078E                               5911+         bcr 8,14                if same dsab, just return              01-DCCEP
00003D58 E3F0 D010 0024          00000010   5912+         stg 15,16(0,13)         save return code                       01-DCCEP
00003D5E E300 D018 0024          00000018   5913+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003D64 E3F0 D090 0004          00000090   5914+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003D6A E3F0 F018 0004          00000018   5915+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003D70 47F0 F040               00000040   5916+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5917+* End of Epilog
                                            5918 * * **** End of Epilogue
00003D78                                    5919          DS    0D
00003D78 000000C8                           5920 @FRAMESIZE_794 DC F'200'
00003D7C 00000000
00003D80 0000000000000000                   5921 @lit_794_170 DC AD(__assert)
00003D88 000000000000402C                   5922 @lit_794_169 DC AD(@strings@)
00003D90 0000000000003F28                   5923 @lit_794_168 DC AD(@DATA)
                                            5924          DROP  12
                                            5925 *
                                            5926 *   DSECT for automatic variables in "rd_list_set_int32"
                                            5927 *      (FUNCTION #794)
                                            5928 *
00000000                00000000 000000A8   5929 @AUTO#rd_list_set_int32 DSECT
00000000                                    5930          DS    XL168
                                            5931 *
00003D98                00000000 00003F28   5932 @CODE    CSECT
                                            5933 *
                                            5934 *
                                            5935 *
                                            5936 * ....... start of rd_list_get_int32
                                            5937 rd_list_get_int32 ALIAS X'99846D9389A2A36D8785A36D8995A3F3F2'
00003D98                                    5938 @LNAME795 DS   0H
00003D98 00000011                           5939          DC    X'00000011'
00003D9C 99846D9389A2A36D                   5940          DC    C'rd_list_get_int32'
00003DAD 00                                 5941          DC    X'00'
                                            5942 rd_list_get_int32 DCCPRLG CINDEX=795,BASER=12,FRAME=200,ENTRY=YES,ARCH=*
                                                                ZARCH,LNAMEADDR=@LNAME795
                                            5943          macro
                                            5944          dccextrn &m
                                            5945          gblc    &$dccext(1000)
                                            5946          gbla    &$dccexti
                                            5947          lcla    &i
                                                                                                                           Page  121 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            5948 &$dccext(&$dccexti+1) setc    '&m'
                                            5949 &i       seta    1
                                            5950 .loop    aif    (&i gt &$dccexti).around
                                            5951          aif    ('&$dccext(&i)' eq '&m').getout
                                            5952 &i       seta    &i+1
                                            5953          ago     .loop
                                            5954 .around  anop
                                            5955 &$dccexti seta &$dccexti+1
                                            5956          extrn  &m
                                            5957 .getout  anop
                                            5958          mend
00003DB0                                    5959+$eye0137    ds    0d                                                    02-DCCCA
00003DB0 C4C3C3                             5960+         dc cl3'DCC'                                                    02-DCCCA
00003DB3 01                                 5961+         dc xl1'01' format one                                          02-DCCCA
00003DB4 00000000                           5962+         dc a(0)                                                        02-DCCCA
00003DB8 0000000000003E22                   5963+         dc ad(@PER_795)                                                02-DCCCA
00003DC0 00000000000000C8                   5964+         dc ad(200)                                                     02-DCCCA
00003DC8 0000000000000000                   5965+         dc ad(0)                                                       02-DCCCA
00003DD0 0000000000001000                   5966+         dc ad(4096)                                                    02-DCCCA
00003DD8 20                                 5967+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003DD9 03                                 5968+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003DDA 03                                 5969+         dc al1(3)                                                      02-DCCCA
00003DDB 08                                 5970+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003DDC 00                                 5971+         dc bl.8'00000000'                                              02-DCCCA
00003DDD 000000                             5972+         dc al3(0)                                                      02-DCCCA
00003DE0 0000000000003D98                   5973+         dc ad(@LNAME795)                                               02-DCCCA
00003DE8                                    5974+         ds 0d                                                          02-DCCCA
00003DE8 0000000000003DB0                   5975+         dc ad($eye0137)                                                02-DCCCA
00003DF0 0000000000000000                   5976+         dc ad(0)                                                       02-DCCCA
00003DF8                                    5977+         ds    0d                                                       01-DCCPR
                                            5978+         entry rd_list_get_int32                                        01-DCCPR
00003DF8                                    5979+rd_list_get_int32 ds 0d                                                 01-DCCPR
00003DF8                                    5980+@REGION_795_1 ds 0h                                                     01-DCCPR
00003DF8 EBEC D008 0024          00000008   5981+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003DFE E3E0 D088 0004          00000088   5982+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003E04 E3C0 D090 0004          00000090   5983+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003E0A B904 002E                          5984+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003E0E E3B0 C018 0004          00000018   5985+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003E14 A7EB 00C8               000000C8   5986+         aghi  14,200              increase by frame size               01-DCCPR
00003E18 E3E0 C020 0021          00000020   5987+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003E1E 4720 B020               00000020   5988+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003E22                                    5989+@PER_795 ds    0h                                                       01-DCCPR
00003E22 EBDE 2080 0024          00000080   5990+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003E28 E3C0 2090 0024          00000090   5991+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003E2E B904 00D2                          5992+         lgr   13,2                set real frame pointer               01-DCCPR
00003E32 B904 00CF                          5993+         lgr   12,15               set base reg                         01-DCCPR
                        00003DF8            5994+         using @REGION_795_1,12                                         01-DCCPR
00003E36 B904 0031                          5995          LGR   3,1         ; ptr to parm area
                                            5996 * ******* End of Prologue
                                            5997 * *
                                            5998 * ***           (((rl->rl_flags & 0x4) && rl->rl_elemsize == sizeof(in\
                                            5999 * t32_t) && idx < rl->rl_cnt) ? (void)0 : __assert(__func__, "C:\\asgk\
                                                                                                                           Page  122 
  Active Usings: @REGION_795_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            6000 * afka\\librdkafka\\src\\rdlist.c", 520, "(rl->rl_flags & 0x4) && rl->\
                                            6001 * rl_elemsize == sizeof(int32_t) && idx < rl->rl_cnt"));
00003E3A E320 3000 0004          00000000   6002          LG    2,0(0,3)    ; rl
00003E40 9104 201B      0000001B 00000004   6003          TM    27(2),4
00003E44 4780 C06A               00003E62   6004          BZ    @L168
00003E48 E3F0 201C 0014          0000001C   6005          LGF   15,28(0,2)
00003E4E A7FF 0004               00000004   6006          CGHI  15,4
00003E52 4770 C06A               00003E62   6007          BNE   @L168
00003E56 58F0 300C               0000000C   6008          L     15,12(0,3)  ; idx
00003E5A 59F0 2004               00000004   6009          C     15,4(0,2)
00003E5E 4740 C0A6               00003E9E   6010          BL    @L169
00003E62                                    6011 @L168    DS    0H
00003E62 E3F0 C128 0004          00003F20   6012          LG    15,@lit_795_175
00003E68 41F0 F0F2               000000F2   6013          LA    15,242(0,15)
00003E6C E3F0 D0A8 0024          000000A8   6014          STG   15,168(0,13)
00003E72 E3F0 C120 0004          00003F18   6015          LG    15,@lit_795_176
00003E78 4110 F064               00000064   6016          LA    1,100(0,15)
00003E7C E310 D0B0 0024          000000B0   6017          STG   1,176(0,13)
00003E82 E548 D0B8 0208          000000B8   6018          MVGHI 184(13),520
00003E88 41F0 F1DE               000001DE   6019          LA    15,478(0,15)
00003E8C E3F0 D0C0 0024          000000C0   6020          STG   15,192(0,13)
00003E92 4110 D0A8               000000A8   6021          LA    1,168(0,13)
00003E96 E3F0 C118 0004          00003F10   6022          LG    15,@lit_795_177 ; __assert
00003E9C                                    6023 @@gen_label238 DS    0H
00003E9C 05EF                               6024          BALR  14,15
00003E9E                                    6025 @@gen_label239 DS    0H
00003E9E                                    6026 @L169    DS    0H
                                            6027 * ***
                                            6028 * ***
                                            6029 * ***           return *(int32_t *)rl->rl_elems[idx];
00003E9E E3F0 300C 0014          0000000C   6030          LGF   15,12(0,3)  ; idx
00003EA4 E310 2008 0004          00000008   6031          LG    1,8(0,2)    ; offset of rl_elems in rd_list_s
00003EAA EBFF 0003 000D          00000003   6032          SLLG  15,15,3(0)  ; *0x8
00003EB0 E3FF 1000 0004          00000000   6033          LG    15,0(15,1)
00003EB6 E3F0 F000 0014          00000000   6034          LGF   15,0(0,15)
                                            6035 * ***   }
                                            6036 * * **** Start of Epilogue
                                            6037          DCCEPIL
00003EBC                                    6038+         ds 0h                                                          01-DCCEP
                                            6039+* Epilog
00003EBC D707 D088 D088 00000088 00000088   6040+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003EC2 E3D0 D080 0004          00000080   6041+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003EC8 E3C0 D090 0004          00000090   6042+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003ECE E3B0 C018 0004          00000018   6043+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003ED4 E3C0 B010 0021          00000010   6044+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003EDA E3E0 D008 0004          00000008   6045+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003EE0 EB1C D020 0004          00000020   6046+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003EE6 078E                               6047+         bcr 8,14                if same dsab, just return              01-DCCEP
00003EE8 E3F0 D010 0024          00000010   6048+         stg 15,16(0,13)         save return code                       01-DCCEP
00003EEE E300 D018 0024          00000018   6049+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003EF4 E3F0 D090 0004          00000090   6050+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003EFA E3F0 F018 0004          00000018   6051+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page  123 
  Active Usings: @REGION_795_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003F00 47F0 F040               00000040   6052+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6053+* End of Epilog
                                            6054 * * **** End of Epilogue
00003F08                                    6055          DS    0D
00003F08 000000C8                           6056 @FRAMESIZE_795 DC F'200'
00003F0C 00000000
00003F10 0000000000000000                   6057 @lit_795_177 DC AD(__assert)
00003F18 000000000000402C                   6058 @lit_795_176 DC AD(@strings@)
00003F20 0000000000003F28                   6059 @lit_795_175 DC AD(@DATA)
                                            6060          DROP  12
                                            6061 *
                                            6062 *   DSECT for automatic variables in "rd_list_get_int32"
                                            6063 *      (FUNCTION #795)
                                            6064 *
00000000                00000000 000000A8   6065 @AUTO#rd_list_get_int32 DSECT
00000000                                    6066          DS    XL168
                                            6067 *
00003F28                00000000 00003F28   6068 @CODE    CSECT
                                            6069 @@STATIC ALIAS X'7C99849389A2A350'
                                            6070 @@STATIC DXD   65D
                                            6071 *
                                            6072 *  Non-Re-Entrant Data Section
                                            6073 *
00003F28                00003F28 00000332   6074 @DATA    CSECT
                                            6075 @DATA    RMODE ANY
                                            6076 @DATA    AMODE ANY
00003F28 99846D8381939396                   6077 @@T349   DC    X'99846D838193939683'               rd.calloc
00003F31 00                                 6078          DC    1X'00'
00003F32 99846D9481939396                   6079 @@T34D   DC    X'99846D948193939683'               rd.malloc
00003F3B 00                                 6080          DC    1X'00'
00003F3C 99846D9985819393                   6081 @@T352   DC    X'99846D99858193939683'             rd.realloc
00003F46 0000                               6082          DC    2X'00'
00003F48 99846DA2A39984A4                   6083 @@T358   DC    X'99846DA2A39984A497'               rd.strdup
00003F51 00                                 6084          DC    1X'00'
00003F52 99846DA2A3999584                   6085 @@T35D   DC    X'99846DA2A3999584A497'             rd.strndup
00003F5C 0000                               6086          DC    2X'00'
00003F5E 99846D9985868395                   6087 @@T365   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
00003F6C 0000                               6088          DC    2X'00'
00003F6E 99846D9389A2A36D                   6089 @@T393   DC    X'99846D9389A2A36D879996A6'         rd.list.grow
00003F7A 0000                               6090          DC    2X'00'
00003F7C 99846D9389A2A36D                   6091 @@T3A4   DC    X'99846D9389A2A36D9799858193939683' rd.list.prealloc
00003F8C 6D85938594A2                       6092          DC    X'6D85938594A2'                     .elems
00003F92 0000                               6093          DC    2X'00'
00003F94 99846D9389A2A36D                   6094 @@T3A7   DC    X'99846D9389A2A36DA285A36D8395A3'   rd.list.set.cnt
00003FA3 00                                 6095          DC    1X'00'
00003FA4 99846D9389A2A36D                   6096 @@T3B0   DC    X'99846D9389A2A36DA285A3'           rd.list.set
00003FAF 00                                 6097          DC    1X'00'
00003FB0 99846D9389A2A36D                   6098 @@T3B3   DC    X'99846D9389A2A36D99859496A5856D85' rd.list.remove.e
00003FC0 938594                             6099          DC    X'938594'                           lem
00003FC3 00                                 6100          DC    1X'00'
00003FC4 99846D9389A2A36D                   6101 @@T3E7   DC    X'99846D9389A2A36D868995846D84A497' rd.list.find.dup
00003FD4 93898381A385                       6102          DC    X'93898381A385'                     licate
                                                                                                                           Page  124 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003FDA 0000                               6103          DC    2X'00'
00003FDC 99846D9389A2A36D                   6104 @@T405   DC    X'99846D9389A2A36D839697A86DA396'   rd.list.copy.to
00003FEB 00                                 6105          DC    1X'00'
00003FEC 99846D9389A2A36D                   6106 @@T40B   DC    X'99846D9389A2A36D839697A86D979985' rd.list.copy.pre
00003FFC 819393968381A385                   6107          DC    X'819393968381A38584F0'             allocated0
00004006 0000                               6108          DC    2X'00'
00004008 99846D9389A2A36D                   6109 @@T414   DC    X'99846D9389A2A36DA285A36D8995A3F3' rd.list.set.int3
00004018 F2                                 6110          DC    X'F2'                               2
00004019 00                                 6111          DC    1X'00'
0000401A 99846D9389A2A36D                   6112 @@T417   DC    X'99846D9389A2A36D8785A36D8995A3F3' rd.list.get.int3
0000402A F2                                 6113          DC    X'F2'                               2
0000402B 00                                 6114          DC    1X'00'
0000402C                                    6115 @strings@ DS   0H
0000402C C37AE081A2879281                   6116          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
0000403C 849281869281E0A2                   6117          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
0000404C 97006CA27A404D99                   6118          DC    X'97006CA27A404D99846D9389A2A36DA3' p..s...rd.list.t
0000405C 5C5D6C97408395A3                   6119          DC    X'5C5D6C97408395A3406C846B40A289A9' ...p.cnt..d..siz
0000406C 85406C846B408593                   6120          DC    X'85406C846B4085938594A2406C977A15' e..d..elems..p..
0000407C 000040407B6C847A                   6121          DC    X'000040407B6C847A406C974081A34050' ......d...p.at..
0000408C 6C971500C37AE081                   6122          DC    X'6C971500C37AE081A2879281869281E0' .p..C..asgkafka.
0000409C 9389829984928186                   6123          DC    X'93898299849281869281E0A29983E099' librdkafka.src.r
000040AC 849389A2A34B8300                   6124          DC    X'849389A2A34B83005A4D9993606E9993' dlist.c...rl..rl
000040BC 6D86938187A24050                   6125          DC    X'6D86938187A2405040F0A7F45D005A99' .flags...0x4...r
000040CC 93606E99936D8593                   6126          DC    X'93606E99936D85938594A2009993606E' l..rl.elems.rl..
000040DC 99936D86938187A2                   6127          DC    X'99936D86938187A2405040F0A7F40000' rl.flags...0x4..
000040EC 4D8995A35D8395A3                   6128          DC    X'4D8995A35D8395A3404C7E409993606E' .int.cnt....rl..
000040FC 99936DA289A98500                   6129          DC    X'99936DA289A985005A9993606E99936D' rl.size..rl..rl.
0000410C 85938594A2AD8984                   6130          DC    X'85938594A2AD8984A7BD00008984A740' elems.idx...idx.
0000411C 4C409993606E9993                   6131          DC    X'4C409993606E99936D8395A300009993' ..rl..rl.cnt..rl
0000412C 606E99936D869381                   6132          DC    X'606E99936D86938187A2405040F0A7F2' ..rl.flags...0x2
0000413C 000084A2A3405A7E                   6133          DC    X'000084A2A3405A7E40A2998300004D84' ..dst....src...d
0000414C A2A3606E99936D86                   6134          DC    X'A2A3606E99936D86938187A2405040F0' st..rl.flags...0
0000415C A7F45D004DA29983                   6135          DC    X'A7F45D004DA29983606E99936D869381' x4...src..rl.fla
0000416C 87A2405040F0A7F4                   6136          DC    X'87A2405040F0A7F45D0084A2A3606E99' gs...0x4..dst..r
0000417C 936D85938594A289                   6137          DC    X'936D85938594A289A985407E7E40A299' l.elemsize....sr
0000418C 83606E99936D8593                   6138          DC    X'83606E99936D85938594A289A9854050' c..rl.elemsize..
0000419C 504084A2A3606E99                   6139          DC    X'504084A2A3606E99936DA289A985407E' ..dst..rl.size..
000041AC 7E40A29983606E99                   6140          DC    X'7E40A29983606E99936DA289A9850000' ..src..rl.size..
000041BC 4D9993606E99936D                   6141          DC    X'4D9993606E99936D86938187A2405040' .rl..rl.flags...
000041CC F0A7F45D40505040                   6142          DC    X'F0A7F45D405050409993606E99936D85' 0x4.....rl..rl.e
000041DC 938594A289A98540                   6143          DC    X'938594A289A985407E7E40A289A98596' lemsize....sizeo
000041EC 864D8995A3F3F26D                   6144          DC    X'864D8995A3F3F26DA35D00008984A740' f.int32.t...idx.
000041FC 4C409993606E9993                   6145          DC    X'4C409993606E99936DA289A985004D99' ..rl..rl.size..r
0000420C 93606E99936D8693                   6146          DC    X'93606E99936D86938187A2405040F0A7' l..rl.flags...0x
0000421C F45D405050409993                   6147          DC    X'F45D405050409993606E99936D859385' 4.....rl..rl.ele
0000422C 94A289A985407E7E                   6148          DC    X'94A289A985407E7E40A289A98596864D' msize....sizeof.
0000423C 8995A3F3F26DA35D                   6149          DC    X'8995A3F3F26DA35D405050408984A740' int32.t.....idx.
0000424C 4C409993606E9993                   6150          DC    X'4C409993606E99936D8395A30000'     ..rl..rl.cnt..
                                            6151 *
                                            6152 *
                                            6153 *   Re-entrant Data Initialization Section
                                            6154 *
                                                                                                                           Page  125 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            6155 @@INIT@  ALIAS C'@rdlist:'
00004260                00004260 00000230   6156 @@INIT@  CSECT
                                            6157 @@INIT@  AMODE ANY
                                            6158 @@INIT@  RMODE ANY
00004260 05                                 6159          DC    XL1'5'
00004261 000000                             6160          DC    AL3(0)
00004264 00000120                           6161          DC    AL4(288)
00004268 00000000                           6162          DC    4X'00'
0000426C 00000000                           6163          DC    Q(@@STATIC)
00004270 00000000                           6164          DC    X'00000000'
00004274 00000001                           6165          DC    X'00000001'
00004278 00000000                           6166          DC    X'00000000'
0000427C 000000FF                           6167          DC    X'000000FF'
00004280 0102039C09867F97                   6168          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00004290 1112139D85088718                   6169          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
000042A0 818283840A171B88                   6170          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
000042B0 9116939495960498                   6171          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
000042C0 A0E2E4E0E1E3E5E7                   6172          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
000042D0 E9EAEBE8EDEEEFEC                   6173          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
000042E0 2FC2C4C0C1C3C5C7                   6174          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
000042F0 C9CACBC8CDCECFCC                   6175          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00004300 6162636465666768                   6176          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00004310 6A6B6C6D6E6F7071                   6177          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
00004320 7E73747576777879                   6178          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
00004330 A3A5B7A9A7B6BCBD                   6179          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00004340 4142434445464748                   6180          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
00004350 4A4B4C4D4E4F5051                   6181          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
00004360 F753545556575859                   6182          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00004370 3132333435363738                   6183          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            6184 *
00004380 05                                 6185          DC    XL1'5'
00004381 000000                             6186          DC    AL3(0)
00004384 000001E0                           6187          DC    AL4(480)
00004388 00000000                           6188          DC    4X'00'
0000438C 00000000                           6189          DC    Q(@@STATIC)
00004390 00000000                           6190          DC    X'00000000'
00004394 00000101                           6191          DC    X'00000101'
00004398 00000000                           6192          DC    X'00000000'
0000439C 000000A0                           6193          DC    X'000000A0'
000043A0 010203372D2E2F16                   6194          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
000043B0 1112133C3D322618                   6195          DC    X'1112133C3D322618193F271C1D1E1F40' ................
000043C0 5A7F7B5B6C507D4D                   6196          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
000043D0 F1F2F3F4F5F6F7F8                   6197          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
000043E0 C1C2C3C4C5C6C7C8                   6198          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
000043F0 D8D9E2E3E4E5E6E7                   6199          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00004400 8182838485868788                   6200          DC    X'81828384858687888991929394959697' abcdefghijklmnop
00004410 9899A2A3A4A5A6A7                   6201          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00004420 2122232425061728                   6202          DC    X'2122232425061728292A2B2C090A1B30' ................
00004430 311A333435360838                   6203          DC    X'311A333435360838393A3B04143EFF80' ................
                                            6204 *
00004440 05                                 6205          DC    XL1'5'
00004441 000000                             6206          DC    AL3(0)
                                                                                                                           Page  126 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00004444 00000208                           6207          DC    AL4(520)
00004448 00000000                           6208          DC    4X'00'
0000444C 00000000                           6209          DC    Q(@@STATIC)
00004450 00000000                           6210          DC    X'00000000'
00004454 000001C0                           6211          DC    X'000001C0'
00004458 00000000                           6212          DC    X'00000000'
0000445C 00000001                           6213          DC    X'00000001'
00004460 8A40404040404040                   6214          DC    X'8A40404040404040'                 ........
                                            6215 *
00004468 05                                 6216          DC    XL1'5'
00004469 000000                             6217          DC    AL3(0)
0000446C 00000000                           6218          DC    AL4(0)
00004470 00000000                           6219          DC    4X'00'
00004474 00000000                           6220          DC    Q(@@STATIC)
00004478 00000000                           6221          DC    X'00000000'
0000447C 000001E0                           6222          DC    X'000001E0'
00004480 00000000                           6223          DC    X'00000000'
00004484 00000001                           6224          DC    X'00000001'
00004488 8B40404040404040                   6225          DC    X'8B40404040404040'                 ........
                                            6226 *
                                            6227          END
                                                 Relocation Dictionary                                                     Page  127 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000002 00000018   A 4      +
 00000002 00000002 00000040   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 0000000A 00000150   A 4      +
 00000002 00000008 00000158   A 4      +
 00000002 0000000D 00000160   A 4      +
 00000002 0000000D 00000168   A 4      +
 00000002 00000002 00000188   A 4      +
 00000002 00000002 000001B0   A 4      +
 00000002 00000002 000001B8   A 4      +
 00000002 00000003 000002B8   A 4      +
 00000002 00000008 000002C0   A 4      +
 00000002 0000000D 000002C8   A 4      +
 00000002 0000000D 000002D0   A 4      +
 00000002 00000002 000002F0   A 4      +
 00000002 00000002 00000318   A 4      +
 00000002 00000002 00000320   A 4      +
 00000002 00000005 00000430   A 4      +
 00000002 00000008 00000438   A 4      +
 00000002 0000000D 00000440   A 4      +
 00000002 0000000D 00000448   A 4      +
 00000002 00000002 00000468   A 4      +
 00000002 00000002 00000490   A 4      +
 00000002 00000002 00000498   A 4      +
 00000002 0000000B 00000550   A 4      +
 00000002 00000002 00000598   A 4      +
 00000002 00000002 000005A0   A 4      +
 00000002 00000002 000005F0   A 4      +
 00000002 00000002 00000618   A 4      +
 00000002 00000002 00000620   A 4      +
 00000002 00000006 000006D8   A 4      +
 00000002 0000000D 000006E0   A 4      +
 00000002 00000002 000007B8   A 4      +
 00000002 00000002 000007E0   A 4      +
 00000002 00000002 000007E8   A 4      +
 00000002 00000008 00000920   A 4      +
 00000002 0000000D 00000928   A 4      +
 00000002 0000000D 00000930   A 4      +
 00000002 00000002 00000938   A 4      +
 00000002 00000002 00000960   A 4      +
 00000002 00000002 00000988   A 4      +
 00000002 00000002 00000990   A 4      +
 00000002 00000002 00000A78   A 4      +
 00000002 00000002 00000AA0   A 4      +
 00000002 00000002 00000AC8   A 4      +
 00000002 00000002 00000AD0   A 4      +
 00000002 00000002 00000B90   A 4      +
 00000002 00000002 00000B98   A 4      +
 00000002 00000002 00000BA0   A 4      +
 00000002 00000002 00000C48   A 4      +
 00000002 00000002 00000C70   A 4      +
 00000002 00000002 00000C78   A 4      +
 00000002 00000002 00000D28   A 4      +
                                                 Relocation Dictionary                                                     Page  128 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000002 00000D48   A 4      +
 00000002 00000002 00000D70   A 4      +
 00000002 00000002 00000D78   A 4      +
 00000002 00000002 00000E60   A 4      +
 00000002 00000002 00000E68   A 4      +
 00000002 00000002 00000E98   A 4      +
 00000002 00000002 00000EC0   A 4      +
 00000002 00000002 00000EC8   A 4      +
 00000002 00000008 00000FB0   A 4      +
 00000002 0000000D 00000FB8   A 4      +
 00000002 0000000D 00000FC0   A 4      +
 00000002 00000002 00000FC8   A 4      +
 00000002 00000002 00000FD0   A 4      +
 00000002 00000002 000010D0   A 4      +
 00000002 00000002 000010F8   A 4      +
 00000002 00000002 00001100   A 4      +
 00000002 00000008 00001240   A 4      +
 00000002 0000000D 00001248   A 4      +
 00000002 0000000D 00001250   A 4      +
 00000002 00000002 00001278   A 4      +
 00000002 00000002 000012A0   A 4      +
 00000002 00000002 000012A8   A 4      +
 00000002 00000002 00001390   A 4      +
 00000002 00000002 000013B8   A 4      +
 00000002 00000002 000013C0   A 4      +
 00000002 00000002 00001440   A 4      +
 00000002 00000002 00001520   A 4      +
 00000002 00000002 00001548   A 4      +
 00000002 00000002 00001550   A 4      +
 00000002 00000002 00001638   A 4      +
 00000002 00000008 00001650   A 4      +
 00000002 0000000D 00001658   A 4      +
 00000002 0000000D 00001660   A 4      +
 00000002 00000002 00001768   A 4      +
 00000002 00000002 00001790   A 4      +
 00000002 00000002 00001798   A 4      +
 00000002 00000008 00001900   A 4      +
 00000002 0000000D 00001908   A 4      +
 00000002 0000000D 00001910   A 4      +
 00000002 00000007 00001918   A 4      +
 00000002 00000002 00001940   A 4      +
 00000002 00000002 00001968   A 4      +
 00000002 00000002 00001970   A 4      +
 00000002 00000002 000019D8   A 4      +
 00000002 00000002 000019E0   A 4      +
 00000002 00000002 00001AC0   A 4      +
 00000002 00000002 00001AE8   A 4      +
 00000002 00000002 00001AF0   A 4      +
 00000002 00000002 00001B58   A 4      +
 00000002 00000002 00001B60   A 4      +
 00000002 00000002 00001C68   A 4      +
 00000002 00000002 00001C90   A 4      +
 00000002 00000002 00001C98   A 4      +
                                                 Relocation Dictionary                                                     Page  129 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000002 00001D08   A 4      +
 00000002 00000002 00001D10   A 4      +
 00000002 00000002 00001E00   A 4      +
 00000002 00000002 00001E28   A 4      +
 00000002 00000002 00001E30   A 4      +
 00000002 00000002 00001EA8   A 4      +
 00000002 00000002 00001F58   A 4      +
 00000002 00000002 00001F80   A 4      +
 00000002 00000002 00001F88   A 4      +
 00000002 0000000C 0000206C   Q 4      +
 00000002 00000002 00002090   A 4      +
 00000002 00000002 000020B8   A 4      +
 00000002 00000002 000020C0   A 4      +
 00000002 00000004 000021D0   A 4      +
 00000002 00000002 000021D8   A 4      +
 00000002 0000000C 000021E0   Q 4      +
 00000002 00000002 00002208   A 4      +
 00000002 00000002 00002230   A 4      +
 00000002 00000002 00002238   A 4      +
 00000002 00000002 000022B8   A 4      +
 00000002 00000002 000023A8   A 4      +
 00000002 00000002 000023D0   A 4      +
 00000002 00000002 000023D8   A 4      +
 00000002 00000002 00002490   A 4      +
 00000002 00000002 000024B8   A 4      +
 00000002 00000002 000024E0   A 4      +
 00000002 00000002 000024E8   A 4      +
 00000002 00000002 000025B8   A 4      +
 00000002 00000002 000025C0   A 4      +
 00000002 00000002 000025F0   A 4      +
 00000002 00000002 00002618   A 4      +
 00000002 00000002 00002620   A 4      +
 00000002 00000002 000026D8   A 4      +
 00000002 00000002 00002728   A 4      +
 00000002 00000002 00002730   A 4      +
 00000002 00000002 000027A8   A 4      +
 00000002 00000002 000027D0   A 4      +
 00000002 00000002 000027D8   A 4      +
 00000002 00000002 00002840   A 4      +
 00000002 00000002 00002908   A 4      +
 00000002 00000002 00002930   A 4      +
 00000002 00000002 00002938   A 4      +
 00000002 00000009 00002A10   A 4      +
 00000002 00000002 00002A18   A 4      +
 00000002 0000000C 00002A20   Q 4      +
 00000002 00000002 00002A28   A 4      +
 00000002 00000002 00002B28   A 4      +
 00000002 00000002 00002B30   A 4      +
 00000002 00000002 00002BC0   A 4      +
 00000002 00000002 00002BC8   A 4      +
 00000002 00000002 00002C50   A 4      +
 00000002 00000002 00002C78   A 4      +
 00000002 00000002 00002C80   A 4      +
                                                 Relocation Dictionary                                                     Page  130 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000008 00002D30   A 4      +
 00000002 0000000D 00002D38   A 4      +
 00000002 0000000D 00002D40   A 4      +
 00000002 00000002 00002E28   A 4      +
 00000002 00000002 00002E50   A 4      +
 00000002 00000002 00002E58   A 4      +
 00000002 00000002 00002FE8   A 4      +
 00000002 00000002 00002FF0   A 4      +
 00000002 00000002 00003090   A 4      +
 00000002 00000002 00003098   A 4      +
 00000002 00000002 00003110   A 4      +
 00000002 00000002 00003138   A 4      +
 00000002 00000002 00003140   A 4      +
 00000002 00000002 000031A8   A 4      +
 00000002 00000002 000031B0   A 4      +
 00000002 00000002 000032C0   A 4      +
 00000002 00000002 000032C8   A 4      +
 00000002 00000002 00003310   A 4      +
 00000002 00000002 00003338   A 4      +
 00000002 00000002 00003340   A 4      +
 00000002 00000002 00003448   A 4      +
 00000002 00000002 00003450   A 4      +
 00000002 00000002 00003478   A 4      +
 00000002 00000002 000034A0   A 4      +
 00000002 00000002 000034A8   A 4      +
 00000002 00000008 00003570   A 4      +
 00000002 0000000D 00003578   A 4      +
 00000002 0000000D 00003580   A 4      +
 00000002 00000002 00003588   A 4      +
 00000002 00000002 00003590   A 4      +
 00000002 00000002 00003598   A 4      +
 00000002 00000002 00003680   A 4      +
 00000002 00000002 000036A8   A 4      +
 00000002 00000002 000036B0   A 4      +
 00000002 00000008 000038F0   A 4      +
 00000002 0000000D 000038F8   A 4      +
 00000002 0000000D 00003900   A 4      +
 00000002 00000002 00003908   A 4      +
 00000002 00000002 00003940   A 4      +
 00000002 00000002 00003968   A 4      +
 00000002 00000002 00003970   A 4      +
 00000002 00000002 00003A48   A 4      +
 00000002 00000002 00003A50   A 4      +
 00000002 00000002 00003A78   A 4      +
 00000002 00000002 00003AA0   A 4      +
 00000002 00000002 00003AA8   A 4      +
 00000002 00000002 00003BA8   A 4      +
 00000002 00000002 00003BB0   A 4      +
 00000002 00000002 00003BD8   A 4      +
 00000002 00000002 00003C00   A 4      +
 00000002 00000002 00003C08   A 4      +
 00000002 00000008 00003D80   A 4      +
 00000002 0000000D 00003D88   A 4      +
                                                 Relocation Dictionary                                                     Page  131 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 0000000D 00003D90   A 4      +
 00000002 00000002 00003DB8   A 4      +
 00000002 00000002 00003DE0   A 4      +
 00000002 00000002 00003DE8   A 4      +
 00000002 00000008 00003F10   A 4      +
 00000002 0000000D 00003F18   A 4      +
 00000002 0000000D 00003F20   A 4      +
 0000000E 0000000C 0000426C   Q 4      +
 0000000E 0000000C 0000438C   Q 4      +
 0000000E 0000000C 0000444C   Q 4      +
 0000000E 0000000C 00004474   Q 4      +
                                                 DSECT Cross Reference                                                     Page  132 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:36 
@AUTO#rd_calloc
         000000A8  FFFFFFFF  00160
@AUTO#rd_free
         000000A8  FFFFFFFC  00519
@AUTO#rd_list_add
         000000A8  FFFFFFF1  01999
@AUTO#rd_list_alloc
         000000A8  FFFFFFF6  01268
@AUTO#rd_list_apply
         000000AC  FFFFFFDB  04911
@AUTO#rd_list_clear
         000000A8  FFFFFFE7  03455
@AUTO#rd_list_cmp
         000000AC  FFFFFFDE  04585
@AUTO#rd_list_cmp_ptr
         000000A8  FFFFFFDD  04678
@AUTO#rd_list_cmp_str
         000000A8  FFFFFFDC  04765
@AUTO#rd_list_cmp_trampoline
         000000A8  FFFFFFEA  03060
@AUTO#rd_list_cnt
         000000A8  FFFFFFFB  00590
@AUTO#rd_list_copy
         000000A8  FFFFFFD9  05109
@AUTO#rd_list_copy_preallocated
         000000A8  FFFFFFD6  05636
@AUTO#rd_list_copy_preallocated0
         000000AC  FFFFFFD7  05519
@AUTO#rd_list_copy_to
         000000AC  FFFFFFD8  05286
@AUTO#rd_list_destroy
         000000A8  FFFFFFE6  03572
@AUTO#rd_list_destroy_elems
         000000AC  FFFFFFE8  03349
@AUTO#rd_list_destroy_free
         000000A8  FFFFFFE5  03677
@AUTO#rd_list_dump
         000000AC  FFFFFFFA  00741
@AUTO#rd_list_elem
         000000A8  FFFFFFE4  03765
@AUTO#rd_list_find
         000000AC  FFFFFFE2  04084
@AUTO#rd_list_find_duplicate
         000000AC  FFFFFFDF  04424
@AUTO#rd_list_first
         000000A8  FFFFFFE1  04170
@AUTO#rd_list_free_cb
         000000A8  FFFFFFF2  01855
@AUTO#rd_list_get_int32
         000000A8  FFFFFFD3  06065
@AUTO#rd_list_grow
         000000A8  FFFFFFF9  00888
@AUTO#rd_list_index
                                                 DSECT Cross Reference                                                     Page  133 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:36 
         000000AC  FFFFFFE3  03902
@AUTO#rd_list_init
         000000A8  FFFFFFF8  01010
@AUTO#rd_list_init_copy
         000000A8  FFFFFFF7  01167
@AUTO#rd_list_init_int32
         000000AC  FFFFFFD5  05763
@AUTO#rd_list_last
         000000A8  FFFFFFE0  04259
@AUTO#rd_list_new
         000000A8  FFFFFFF5  01389
@AUTO#rd_list_nocopy_ptr
         000000A8  FFFFFFDA  04982
@AUTO#rd_list_pop
         000000AC  FFFFFFEB  02945
@AUTO#rd_list_prealloc_elems
         000000B0  FFFFFFF4  01595
@AUTO#rd_list_remove
         000000AC  FFFFFFEE  02498
@AUTO#rd_list_remove_cmp
         000000AC  FFFFFFED  02653
@AUTO#rd_list_remove_elem
         000000A8  FFFFFFEF  02355
@AUTO#rd_list_remove_multi_cmp
         000000AC  FFFFFFEC  02814
@AUTO#rd_list_set
         000000A8  FFFFFFF0  02195
@AUTO#rd_list_set_cnt
         000000A8  FFFFFFF3  01744
@AUTO#rd_list_set_int32
         000000A8  FFFFFFD4  05929
@AUTO#rd_list_sort
         000000A8  FFFFFFE9  03191
@AUTO#rd_malloc
         000000A8  FFFFFFFE  00287
@AUTO#rd_realloc
         000000A8  FFFFFFFD  00416
                                          Macro and Copy Code Source Summary                                               Page  134 
Source                                                    Members                                     DASM V1.95.14 2021/04/30 15:36 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  135 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
    95  00000096  00000002 USING  ORDINARY    00000058 00001000 00000002  12 00110    122 @REGION_751_1,12
   155  00000170  00000002 DROP                                           12              12
   223  00000206  00000002 USING  ORDINARY    000001C8 00001000 00000002  12 00108    249 @REGION_752_1,12
   282  000002D8  00000002 DROP                                           12              12
   350  0000036E  00000002 USING  ORDINARY    00000330 00001000 00000002  12 00118    378 @REGION_753_1,12
   411  00000450  00000002 DROP                                           12              12
   479  000004E6  00000002 USING  ORDINARY    000004A8 00001000 00000002  12 000A8    486 @REGION_754_1,12
   514  00000558  00000002 DROP                                           12              12
   655  0000066E  00000002 USING  ORDINARY    00000630 00001000 00000002  12 00118    714 @REGION_793_1,12
   736  00000798  00000002 DROP                                           12              12
   807  00000836  00000002 USING  ORDINARY    000007F8 00001000 00000002  12 00140    851 @REGION_762_1,12
   883  00000940  00000002 DROP                                           12              12
   953  000009DE  00000002 USING  ORDINARY    000009A0 00001000 00000002  12 000D8    970 @REGION_759_1,12
  1005  00000A80  00000002 DROP                                           12              12
  1075  00000B1E  00000002 USING  ORDINARY    00000AE0 00001000 00000002  12 00102   1132 @REGION_760_1,12
  1162  00000C2E  00000002 DROP                                           12              12
  1230  00000CC6  00000002 USING  ORDINARY    00000C88 00001000 00000002  12 000A0   1236 @REGION_796_1,12
  1263  00000D30  00000002 DROP                                           12              12
  1333  00000DC6  00000002 USING  ORDINARY    00000D88 00001000 00000002  12 000E0   1350 @REGION_761_1,12
  1384  00000E70  00000002 DROP                                           12              12
  1454  00000F16  00000002 USING  ORDINARY    00000ED8 00001000 00000002  12 0016C   1557 @REGION_763_1,12
  1590  000010AE  00000002 DROP                                           12              12
  1663  0000114E  00000002 USING  ORDINARY    00001110 00001000 00000002  12 00140   1706 @REGION_764_1,12
  1739  00001258  00000002 DROP                                           12              12
  1809  000012F6  00000002 USING  ORDINARY    000012B8 00001000 00000002  12 0006E   1818 @REGION_765_1,12
  1850  00001374  00000002 DROP                                           12              12
  1920  0000140E  00000002 USING  ORDINARY    000013D0 00001000 00000002  12 000CA   1958 @REGION_766_1,12
  1994  00001506  00000002 DROP                                           12              12
  2064  0000159E  00000002 USING  ORDINARY    00001560 00001000 00000002  12 00184   2155 @REGION_767_1,12
  2190  00001748  00000002 DROP                                           12              12
  2260  000017E6  00000002 USING  ORDINARY    000017A8 00001000 00000002  12 00170   2314 @REGION_770_1,12
  2350  00001920  00000002 DROP                                           12              12
  2420  000019BE  00000002 USING  ORDINARY    00001980 00001000 00000002  12 000D6   2468 @REGION_768_1,12
  2493  00001A9E  00000002 DROP                                           12              12
  2564  00001B3E  00000002 USING  ORDINARY    00001B00 00001000 00000002  12 000F4   2623 @REGION_769_1,12
  2648  00001C3C  00000002 DROP                                           12              12
  2719  00001CE6  00000002 USING  ORDINARY    00001CA8 00001000 00000002  12 000EE   2784 @REGION_772_1,12
  2809  00001DE2  00000002 DROP                                           12              12
  2882  00001E7E  00000002 USING  ORDINARY    00001E40 00001000 00000002  12 000A6   2912 @REGION_771_1,12
  2940  00001F2E  00000002 DROP                                           12              12
  3009  00001FD6  00000002 USING  ORDINARY    00001F98 00001000 00000002  12 000D4   3024 @REGION_797_1,12
  3055  00002070  00000002 DROP                                           12              12
  3125  0000210E  00000002 USING  ORDINARY    000020D0 00001000 00000002  12 00110   3152 @REGION_773_1,12
  3186  000021E4  00000002 DROP                                           12              12
  3254  00002286  00000002 USING  ORDINARY    00002248 00001000 00000002  12 000FE   3308 @REGION_798_1,12
  3344  0000238E  00000002 DROP                                           12              12
  3415  00002426  00000002 USING  ORDINARY    000023E8 00001000 00000002  12 000A8   3422 @REGION_774_1,12
  3450  00002498  00000002 DROP                                           12              12
  3520  00002536  00000002 USING  ORDINARY    000024F8 00001000 00000002  12 000C8   3537 @REGION_775_1,12
  3567  000025C8  00000002 DROP                                           12              12
  3637  0000266E  00000002 USING  ORDINARY    00002630 00001000 00000002  12 000A8   3644 @REGION_776_1,12
                                                      Using Map                                                            Page  136 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
  3672  000026E0  00000002 DROP                                           12              12
  3731  0000274A  00000002 USING  ORDINARY    00002740 00001000 00000002  12 0003A   3744 @REGION_777_1,12
  3760  00002788  00000002 DROP                                           12              12
  3830  00002826  00000002 USING  ORDINARY    000027E8 00001000 00000002  12 000BE   3872 @REGION_779_1,12
  3897  000028EE  00000002 DROP                                           12              12
  3968  00002986  00000002 USING  ORDINARY    00002948 00001000 00000002  12 00154   4054 @REGION_780_1,12
  4079  00002AE4  00000002 DROP                                           12              12
  4139  00002B4A  00000002 USING  ORDINARY    00002B40 00001000 00000002  12 0002E   4148 @REGION_781_1,12
  4165  00002B7C  00000002 DROP                                           12              12
  4224  00002BE2  00000002 USING  ORDINARY    00002BD8 00001000 00000002  12 00040   4233 @REGION_782_1,12
  4254  00002C26  00000002 DROP                                           12              12
  4324  00002CCE  00000002 USING  ORDINARY    00002C90 00001000 00000002  12 00132   4394 @REGION_783_1,12
  4419  00002E0A  00000002 DROP                                           12              12
  4490  00002EA6  00000002 USING  ORDINARY    00002E68 00001000 00000002  12 000F4   4555 @REGION_784_1,12
  4580  00002FA4  00000002 DROP                                           12              12
  4642  0000300A  00000002 USING  ORDINARY    00003000 00001000 00000002  12 0003A   4656 @REGION_785_1,12
  4673  0000304C  00000002 DROP                                           12              12
  4732  000030B2  00000002 USING  ORDINARY    000030A8 00001000 00000002  12 0003A   4743 @REGION_786_1,12
  4760  000030F4  00000002 DROP                                           12              12
  4830  0000318E  00000002 USING  ORDINARY    00003150 00001000 00000002  12 000B6   4883 @REGION_787_1,12
  4906  00003278  00000002 DROP                                           12              12
  5047  0000338E  00000002 USING  ORDINARY    00003350 00001000 00000002  12 00100   5074 @REGION_788_1,12
  5104  00003458  00000002 DROP                                           12              12
  5174  000034F6  00000002 USING  ORDINARY    000034B8 00001000 00000002  12 0012E   5259 @REGION_789_1,12
  5281  00003658  00000002 DROP                                           12              12
  5350  000036FE  00000002 USING  ORDINARY    000036C0 00001000 00000002  12 00250   5479 @REGION_800_1,12
  5514  00003916  00000002 DROP                                           12              12
  5585  000039BE  00000002 USING  ORDINARY    00003980 00001000 00000002  12 000D0   5603 @REGION_790_1,12
  5631  00003A58  00000002 DROP                                           12              12
  5701  00003AF6  00000002 USING  ORDINARY    00003AB8 00001000 00000002  12 000F8   5728 @REGION_792_1,12
  5758  00003BB8  00000002 DROP                                           12              12
  5829  00003C56  00000002 USING  ORDINARY    00003C18 00001000 00000002  12 00178   5893 @REGION_794_1,12
  5924  00003D98  00000002 DROP                                           12              12
  5994  00003E36  00000002 USING  ORDINARY    00003DF8 00001000 00000002  12 00128   6022 @REGION_795_1,12
  6060  00003F28  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  137 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDLIST   ..\asg\asm\rdlist.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 15.36.18 Stop Time: 15.36.18 Processor Time: 00.00.00.0510
Return Code 000
