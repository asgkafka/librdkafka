                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdkafka_timer.obj ../asg/asm/rdkafka_timer.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdkafka_timer.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:36 
@@ZARCH#  WX 00000001                              00
@RDKAFKA_TIMER
          SD 00000002 00000000 00002890            07  @CODE
write     ER 00000003                                  WRITE
mtx_init  ER 00000004                                  MTX_INIT
mtx_destroy
          ER 00000005                                  MTX_DESTROY
mtx_lock  ER 00000006                                  MTX_LOCK
mtx_unlock
          ER 00000007                                  MTX_UNLOCK
cnd_init  ER 00000008                                  CND_INIT
cnd_destroy
          ER 00000009                                  CND_DESTROY
cnd_signal
          ER 0000000A                                  CND_SIGNAL
cnd_broadcast
          ER 0000000B                                  CND_BROADCAST
rd_kafka_q_destroy_final
          ER 0000000C                                  RD_KAFKA_Q_DESTROY_FINAL
cnd_timedwait_ms
          ER 0000000D                                  CND_TIMEDWAIT_MS
rd_kafka_q_purge0
          ER 0000000E                                  RD_KAFKA_Q_PURGE0
GETTFD@Y  ER 0000000F                                  GETTIMEOFDAY
@@PT3ML   ER 00000010                                  PTHREAD_MUTEX_LOCK
@@PT3MU   ER 00000011                                  PTHREAD_MUTEX_UNLOCK
rd_kafka_crash
          ER 00000012                                  RD_KAFKA_CRASH
@rdkafka_timer&
          XD 00000013 00000007 000006D8                @@STATIC
@rdkafka_timer
          SD 00000014 00002890 00000794            07  @DATA
rdkafka_timer:
          SD 00000015 00003028 00001040            07  @@INIT@
rd_kafka_timer_stop
          LD          00001568          00000002   00  RD_KAFKA_TIMER_STOP
rd_kafka_timer_is_started
          LD          00001730          00000002   00  RD_KAFKA_TIMER_IS_STARTED
rd_kafka_timer_start0
          LD          000018A0          00000002   00  RD_KAFKA_TIMER_START0
rd_kafka_timer_exp_backoff
          LD          00001A80          00000002   00  RD_KAFKA_TIMER_EXP_BACKOFF
rd_kafka_timer_override_once
          LD          00001C28          00000002   00  RD_KAFKA_TIMER_OVERRIDE_ONCE
rd_kafka_timer_next
          LD          00001DC8          00000002   00  RD_KAFKA_TIMER_NEXT
rd_kafka_timers_interrupt
          LD          00001F70          00000002   00  RD_KAFKA_TIMERS_INTERRUPT
rd_kafka_timers_next
          LD          000020C0          00000002   00  RD_KAFKA_TIMERS_NEXT
rd_kafka_timers_run
          LD          00002258          00000002   00  RD_KAFKA_TIMERS_RUN
rd_kafka_timers_destroy
                                              External Symbol Dictionary                                                   Page    4 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/30 15:36 
          LD          00002570          00000002   00  RD_KAFKA_TIMERS_DESTROY
rd_kafka_timers_init
          LD          00002780          00000002   00  RD_KAFKA_TIMERS_INIT
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Fri Apr 30 15:36:13 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS X'7CD9C4D2C1C6D2C16DE3C9D4C5D9'
00000000                00000000 00002890     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS X'7C998492818692816DA389948599'
                                              18 write    ALIAS C'write'
                                              19          EXTRN write
                                              20 mtx_init ALIAS X'94A3A76D899589A3'
                                              21          EXTRN mtx_init
                                              22 mtx_destroy ALIAS X'94A3A76D8485A2A39996A8'
                                              23          EXTRN mtx_destroy
                                              24 mtx_lock ALIAS X'94A3A76D93968392'
                                              25          EXTRN mtx_lock
                                              26 mtx_unlock ALIAS X'94A3A76DA49593968392'
                                              27          EXTRN mtx_unlock
                                              28 cnd_init ALIAS X'8395846D899589A3'
                                              29          EXTRN cnd_init
                                              30 cnd_destroy ALIAS X'8395846D8485A2A39996A8'
                                              31          EXTRN cnd_destroy
                                              32 cnd_signal ALIAS X'8395846DA28987958193'
                                              33          EXTRN cnd_signal
                                              34 cnd_broadcast ALIAS X'8395846D82999681848381A2A3'
                                              35          EXTRN cnd_broadcast
                                              36 rd_kafka_q_destroy_final ALIAS X'99846D92818692816D986D8485A2A39996A86D*
                                                                8689958193'
                                              37          EXTRN rd_kafka_q_destroy_final
                                              38 cnd_timedwait_ms ALIAS X'8395846DA389948584A68189A36D94A2'
                                              39          EXTRN cnd_timedwait_ms
                                              40 rd_kafka_q_purge0 ALIAS X'99846D92818692816D986D97A4998785F0'
                                              41          EXTRN rd_kafka_q_purge0
                                              42 gettimeofday ALIAS C'GETTFD@Y'
                                              43          EXTRN gettimeofday
                                              44 pthread_mutex_lock ALIAS C'@@PT3ML'
                                              45          EXTRN pthread_mutex_lock
                                              46 pthread_mutex_unlock ALIAS C'@@PT3MU'
                                              47          EXTRN pthread_mutex_unlock
                                              48 rd_kafka_crash ALIAS X'99846D92818692816D839981A288'
                                              49          EXTRN rd_kafka_crash
                                              50 *
                                              51 *
                                                                                                                           Page    6 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                              52 *
                                              53 * ....... start of rd_atomic32_get
00000000                                      54 @LNAME1061 DS  0H
00000000 0000000F                             55          DC    X'0000000F'
00000004 99846D81A3969489                     56          DC    C'rd_atomic32_get'
00000013 00                                   57          DC    X'00'
                                              58 rd_atomic32_get DCCPRLG CINDEX=1061,BASER=12,FRAME=184,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1061
                                              59          macro
                                              60          dccextrn &m
                                              61          gblc    &$dccext(1000)
                                              62          gbla    &$dccexti
                                              63          lcla    &i
                                              64 &$dccext(&$dccexti+1) setc    '&m'
                                              65 &i       seta    1
                                              66 .loop    aif    (&i gt &$dccexti).around
                                              67          aif    ('&$dccext(&i)' eq '&m').getout
                                              68 &i       seta    &i+1
                                              69          ago     .loop
                                              70 .around  anop
                                              71 &$dccexti seta &$dccexti+1
                                              72          extrn  &m
                                              73 .getout  anop
                                              74          mend
00000018                                      75+$eye0002    ds    0d                                                    02-DCCCA
00000018 C4C3C3                               76+         dc cl3'DCC'                                                    02-DCCCA
0000001B 01                                   77+         dc xl1'01' format one                                          02-DCCCA
0000001C 00000000                             78+         dc a(0)                                                        02-DCCCA
00000020 000000000000008A                     79+         dc ad(@PER_1061)                                               02-DCCCA
00000028 00000000000000B8                     80+         dc ad(184)                                                     02-DCCCA
00000030 0000000000000000                     81+         dc ad(0)                                                       02-DCCCA
00000038 0000000000001000                     82+         dc ad(4096)                                                    02-DCCCA
00000040 20                                   83+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000041 03                                   84+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000042 03                                   85+         dc al1(3)                                                      02-DCCCA
00000043 08                                   86+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000044 00                                   87+         dc bl.8'00000000'                                              02-DCCCA
00000045 000000                               88+         dc al3(0)                                                      02-DCCCA
00000048 0000000000000000                     89+         dc ad(@LNAME1061)                                              02-DCCCA
00000050                                      90+         ds 0d                                                          02-DCCCA
00000050 0000000000000018                     91+         dc ad($eye0002)                                                02-DCCCA
00000058 0000000000000000                     92+         dc ad(0)                                                       02-DCCCA
00000060                                      93+         ds    0d                                                       01-DCCPR
00000060                                      94+rd_atomic32_get ds 0d                                                   01-DCCPR
00000060                                      95+@REGION_1061_1 ds 0h                                                    01-DCCPR
00000060 EBEC D008 0024          00000008     96+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000066 E3E0 D088 0004          00000088     97+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000006C E3C0 D090 0004          00000090     98+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000072 B904 002E                            99+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000076 E3B0 C018 0004          00000018    100+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000007C A7EB 00B8               000000B8    101+         aghi  14,184              increase by frame size               01-DCCPR
00000080 E3E0 C020 0021          00000020    102+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page    7 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000086 4720 B020               00000020    103+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000008A                                     104+@PER_1061 ds   0h                                                       01-DCCPR
0000008A EBDE 2080 0024          00000080    105+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000090 E3C0 2090 0024          00000090    106+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000096 B904 00D2                           107+         lgr   13,2                set real frame pointer               01-DCCPR
0000009A B904 00CF                           108+         lgr   12,15               set base reg                         01-DCCPR
                        00000060             109+         using @REGION_1061_1,12                                        01-DCCPR
                                             110 * ******* End of Prologue
                                             111 * *
0000009E E320 1000 0004          00000000    112          LG    2,0(0,1)    ; ra
                                             113 * ***
                                             114 * ***      int32_t r;
                                             115 * ***      pthread_mutex_lock(&ra->lock);
000000A4 41F0 2008               00000008    116          LA    15,8(0,2)
000000A8 E3F0 D0B0 0024          000000B0    117          STG   15,176(0,13)
000000AE 4110 D0B0               000000B0    118          LA    1,176(0,13)
000000B2 E3F0 C0C8 0004          00000128    119          LG    15,@lit_1061_0 ; pthread_mutex_lock
000000B8                                     120 @@gen_label0 DS    0H
000000B8 05EF                                121          BALR  14,15
000000BA                                     122 @@gen_label1 DS    0H
                                             123 * ***      r = ra->val;
000000BA 5830 2000               00000000    124          L     3,0(0,2)    ; ra
                                             125 * ***      pthread_mutex_unlock(&ra->lock);
000000BE 41F0 2008               00000008    126          LA    15,8(0,2)
000000C2 E3F0 D0B0 0024          000000B0    127          STG   15,176(0,13)
000000C8 4110 D0B0               000000B0    128          LA    1,176(0,13)
000000CC E3F0 C0D0 0004          00000130    129          LG    15,@lit_1061_1 ; pthread_mutex_unlock
000000D2                                     130 @@gen_label2 DS    0H
000000D2 05EF                                131          BALR  14,15
000000D4                                     132 @@gen_label3 DS    0H
                                             133 * ***      return r;
000000D4 B914 00F3                           134          LGFR  15,3
                                             135 * ***   # 157 "C:\asgkafka\librdkafka\src\rdatomic.h"
                                             136 * ***      return __atomic_fetch_add(&ra->val, 0, 6);
                                             137 * ***
                                             138 * ***   }
                                             139 * * **** Start of Epilogue
                                             140          DCCEPIL
000000D8                                     141+         ds 0h                                                          01-DCCEP
                                             142+* Epilog
000000D8 D707 D088 D088 00000088 00000088    143+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000000DE E3D0 D080 0004          00000080    144+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000000E4 E3C0 D090 0004          00000090    145+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000000EA E3B0 C018 0004          00000018    146+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000000F0 E3C0 B010 0021          00000010    147+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000000F6 E3E0 D008 0004          00000008    148+         lg  14,8(0,13)          load up return address                 01-DCCEP
000000FC EB1C D020 0004          00000020    149+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000102 078E                                150+         bcr 8,14                if same dsab, just return              01-DCCEP
00000104 E3F0 D010 0024          00000010    151+         stg 15,16(0,13)         save return code                       01-DCCEP
0000010A E300 D018 0024          00000018    152+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000110 E3F0 D090 0004          00000090    153+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000116 E3F0 F018 0004          00000018    154+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page    8 
  Active Usings: @REGION_1061_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000011C 47F0 F040               00000040    155+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             156+* End of Epilog
                                             157 * * **** End of Epilogue
00000120                                     158          DS    0D
00000120 000000B8                            159 @FRAMESIZE_1061 DC F'184'
00000124 00000000
00000128 0000000000000000                    160 @lit_1061_0 DC AD(pthread_mutex_lock)
00000130 0000000000000000                    161 @lit_1061_1 DC AD(pthread_mutex_unlock)
                                             162          DROP  12
                                             163 *
                                             164 *   DSECT for automatic variables in "rd_atomic32_get"
                                             165 *      (FUNCTION #1061)
                                             166 *
00000000                00000000 000000AC    167 @AUTO#rd_atomic32_get DSECT
00000000                                     168          DS    XL168
000000A8                                     169 rd_atomic32_get#r#0 DS 1F  ; r
                                             170 *
00000138                00000000 00002890    171 @CODE    CSECT
                                             172 *
                                             173 *
                                             174 *
                                             175 * ....... start of rd_clock
00000138                                     176 @LNAME1088 DS  0H
00000138 00000008                            177          DC    X'00000008'
0000013C 99846D8393968392                    178          DC    C'rd_clock'
00000144 00                                  179          DC    X'00'
                                             180 rd_clock DCCPRLG CINDEX=1088,BASER=12,FRAME=200,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME1088
                                             181          macro
                                             182          dccextrn &m
                                             183          gblc    &$dccext(1000)
                                             184          gbla    &$dccexti
                                             185          lcla    &i
                                             186 &$dccext(&$dccexti+1) setc    '&m'
                                             187 &i       seta    1
                                             188 .loop    aif    (&i gt &$dccexti).around
                                             189          aif    ('&$dccext(&i)' eq '&m').getout
                                             190 &i       seta    &i+1
                                             191          ago     .loop
                                             192 .around  anop
                                             193 &$dccexti seta &$dccexti+1
                                             194          extrn  &m
                                             195 .getout  anop
                                             196          mend
00000148                                     197+$eye0005    ds    0d                                                    02-DCCCA
00000148 C4C3C3                              198+         dc cl3'DCC'                                                    02-DCCCA
0000014B 01                                  199+         dc xl1'01' format one                                          02-DCCCA
0000014C 00000000                            200+         dc a(0)                                                        02-DCCCA
00000150 00000000000001BA                    201+         dc ad(@PER_1088)                                               02-DCCCA
00000158 00000000000000C8                    202+         dc ad(200)                                                     02-DCCCA
00000160 0000000000000000                    203+         dc ad(0)                                                       02-DCCCA
00000168 0000000000001000                    204+         dc ad(4096)                                                    02-DCCCA
                                                                                                                           Page    9 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000170 20                                  205+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000171 03                                  206+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000172 03                                  207+         dc al1(3)                                                      02-DCCCA
00000173 08                                  208+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000174 00                                  209+         dc bl.8'00000000'                                              02-DCCCA
00000175 000000                              210+         dc al3(0)                                                      02-DCCCA
00000178 0000000000000138                    211+         dc ad(@LNAME1088)                                              02-DCCCA
00000180                                     212+         ds 0d                                                          02-DCCCA
00000180 0000000000000148                    213+         dc ad($eye0005)                                                02-DCCCA
00000188 0000000000000000                    214+         dc ad(0)                                                       02-DCCCA
00000190                                     215+         ds    0d                                                       01-DCCPR
00000190                                     216+rd_clock ds    0d                                                       01-DCCPR
00000190                                     217+@REGION_1088_1 ds 0h                                                    01-DCCPR
00000190 EBEC D008 0024          00000008    218+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000196 E3E0 D088 0004          00000088    219+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000019C E3C0 D090 0004          00000090    220+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001A2 B904 002E                           221+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001A6 E3B0 C018 0004          00000018    222+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001AC A7EB 00C8               000000C8    223+         aghi  14,200              increase by frame size               01-DCCPR
000001B0 E3E0 C020 0021          00000020    224+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001B6 4720 B020               00000020    225+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001BA                                     226+@PER_1088 ds   0h                                                       01-DCCPR
000001BA EBDE 2080 0024          00000080    227+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001C0 E3C0 2090 0024          00000090    228+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001C6 B904 00D2                           229+         lgr   13,2                set real frame pointer               01-DCCPR
000001CA B904 00CF                           230+         lgr   12,15               set base reg                         01-DCCPR
                        00000190             231+         using @REGION_1088_1,12                                        01-DCCPR
                                             232 * ******* End of Prologue
                                             233 * *
                                             234 * ***   # 97 "C:\asgkafka\librdkafka\src\rdtime.h"
                                             235 * ***       struct timeval tv;
                                             236 * ***       gettimeofday(&tv, ((void *)0));
000001CE 41F0 D0A8               000000A8    237          LA    15,168(0,13)
000001D2 E3F0 D0B8 0024          000000B8    238          STG   15,184(0,13)
000001D8 D707 D0C0 D0C0 000000C0 000000C0    239          XC    192(8,13),192(13)
000001DE 4110 D0B8               000000B8    240          LA    1,184(0,13)
000001E2 E3F0 C0C0 0004          00000250    241          LG    15,@lit_1088_3 ; gettimeofday
000001E8                                     242 @@gen_label4 DS    0H
000001E8 05EF                                243          BALR  14,15
000001EA                                     244 @@gen_label5 DS    0H
                                             245 * ***       return ((rd_ts_t)tv.tv_sec * 1000000LLU) + (rd_ts_t)tv.tv_\
                                             246 * usec;
000001EA E3F0 D0A8 0004          000000A8    247          LG    15,168(0,13)
000001F0 C2F0 000F 4240                      248          MSGFI 15,X'000F4240'
000001F6 E310 D0B0 0004          000000B0    249          LG    1,176(0,13) ; offset of tv_usec in timeval
000001FC B90A 00F1                           250          ALGR  15,1
                                             251 * ***   # 118 "C:\asgkafka\librdkafka\src\rdtime.h"
                                             252 * ***   }
                                             253 * * **** Start of Epilogue
                                             254          DCCEPIL
00000200                                     255+         ds 0h                                                          01-DCCEP
                                             256+* Epilog
                                                                                                                           Page   10 
  Active Usings: @REGION_1088_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000200 D707 D088 D088 00000088 00000088    257+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000206 E3D0 D080 0004          00000080    258+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000020C E3C0 D090 0004          00000090    259+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000212 E3B0 C018 0004          00000018    260+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000218 E3C0 B010 0021          00000010    261+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000021E E3E0 D008 0004          00000008    262+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000224 EB1C D020 0004          00000020    263+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000022A 078E                                264+         bcr 8,14                if same dsab, just return              01-DCCEP
0000022C E3F0 D010 0024          00000010    265+         stg 15,16(0,13)         save return code                       01-DCCEP
00000232 E300 D018 0024          00000018    266+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000238 E3F0 D090 0004          00000090    267+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000023E E3F0 F018 0004          00000018    268+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000244 47F0 F040               00000040    269+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             270+* End of Epilog
                                             271 * * **** End of Epilogue
00000248                                     272          DS    0D
00000248 000000C8                            273 @FRAMESIZE_1088 DC F'200'
0000024C 00000000
00000250 0000000000000000                    274 @lit_1088_3 DC AD(gettimeofday)
                                             275          DROP  12
                                             276 *
                                             277 *   DSECT for automatic variables in "rd_clock"
                                             278 *      (FUNCTION #1088)
                                             279 *
00000000                00000000 000000B8    280 @AUTO#rd_clock DSECT
00000000                                     281          DS    XL168
000000A8                                     282 rd_clock#tv#0 DS 16XL1     ; tv
                                             283 *
00000258                00000000 00002890    284 @CODE    CSECT
                                             285 *
                                             286 *
                                             287 *
                                             288 * ....... start of rd_kafka_q_keep
00000258                                     289 @LNAME1428 DS  0H
00000258 0000000F                            290          DC    X'0000000F'
0000025C 99846D9281869281                    291          DC    C'rd_kafka_q_keep'
0000026B 00                                  292          DC    X'00'
                                             293 rd_kafka_q_keep DCCPRLG CINDEX=1428,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME1428
                                             294          macro
                                             295          dccextrn &m
                                             296          gblc    &$dccext(1000)
                                             297          gbla    &$dccexti
                                             298          lcla    &i
                                             299 &$dccext(&$dccexti+1) setc    '&m'
                                             300 &i       seta    1
                                             301 .loop    aif    (&i gt &$dccexti).around
                                             302          aif    ('&$dccext(&i)' eq '&m').getout
                                             303 &i       seta    &i+1
                                             304          ago     .loop
                                             305 .around  anop
                                             306 &$dccexti seta &$dccexti+1
                                                                                                                           Page   11 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             307          extrn  &m
                                             308 .getout  anop
                                             309          mend
00000270                                     310+$eye0008    ds    0d                                                    02-DCCCA
00000270 C4C3C3                              311+         dc cl3'DCC'                                                    02-DCCCA
00000273 01                                  312+         dc xl1'01' format one                                          02-DCCCA
00000274 00000000                            313+         dc a(0)                                                        02-DCCCA
00000278 00000000000002E2                    314+         dc ad(@PER_1428)                                               02-DCCCA
00000280 00000000000000B0                    315+         dc ad(176)                                                     02-DCCCA
00000288 0000000000000000                    316+         dc ad(0)                                                       02-DCCCA
00000290 0000000000001000                    317+         dc ad(4096)                                                    02-DCCCA
00000298 20                                  318+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000299 03                                  319+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000029A 03                                  320+         dc al1(3)                                                      02-DCCCA
0000029B 08                                  321+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000029C 00                                  322+         dc bl.8'00000000'                                              02-DCCCA
0000029D 000000                              323+         dc al3(0)                                                      02-DCCCA
000002A0 0000000000000258                    324+         dc ad(@LNAME1428)                                              02-DCCCA
000002A8                                     325+         ds 0d                                                          02-DCCCA
000002A8 0000000000000270                    326+         dc ad($eye0008)                                                02-DCCCA
000002B0 0000000000000000                    327+         dc ad(0)                                                       02-DCCCA
000002B8                                     328+         ds    0d                                                       01-DCCPR
000002B8                                     329+rd_kafka_q_keep ds 0d                                                   01-DCCPR
000002B8                                     330+@REGION_1428_1 ds 0h                                                    01-DCCPR
000002B8 EBEC D008 0024          00000008    331+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000002BE E3E0 D088 0004          00000088    332+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000002C4 E3C0 D090 0004          00000090    333+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000002CA B904 002E                           334+         lgr   2,14                copy addr of our savearea            01-DCCPR
000002CE E3B0 C018 0004          00000018    335+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000002D4 A7EB 00B0               000000B0    336+         aghi  14,176              increase by frame size               01-DCCPR
000002D8 E3E0 C020 0021          00000020    337+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000002DE 4720 B020               00000020    338+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000002E2                                     339+@PER_1428 ds   0h                                                       01-DCCPR
000002E2 EBDE 2080 0024          00000080    340+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000002E8 E3C0 2090 0024          00000090    341+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000002EE B904 00D2                           342+         lgr   13,2                set real frame pointer               01-DCCPR
000002F2 B904 00CF                           343+         lgr   12,15               set base reg                         01-DCCPR
                        000002B8             344+         using @REGION_1428_1,12                                        01-DCCPR
                                             345 * ******* End of Prologue
                                             346 * *
                                             347 * ***           mtx_lock(&rkq->rkq_lock);
000002F6 E320 1000 0004          00000000    348          LG    2,0(0,1)    ; rkq
000002FC E320 D0A8 0024          000000A8    349          STG   2,168(0,13)
00000302 4110 D0A8               000000A8    350          LA    1,168(0,13)
00000306 E3F0 C0C8 0004          00000380    351          LG    15,@lit_1428_5 ; mtx_lock
0000030C                                     352 @@gen_label6 DS    0H
0000030C 05EF                                353          BALR  14,15
0000030E                                     354 @@gen_label7 DS    0H
                                             355 * ***           rkq->rkq_refcnt++;
0000030E 58F0 2080               00000080    356          L     15,128(0,2)
00000312 A7FA 0001               00000001    357          AHI   15,1
00000316 50F0 2080               00000080    358          ST    15,128(0,2)
                                                                                                                           Page   12 
  Active Usings: @REGION_1428_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             359 * ***           mtx_unlock(&rkq->rkq_lock);
0000031A E320 D0A8 0024          000000A8    360          STG   2,168(0,13)
00000320 4110 D0A8               000000A8    361          LA    1,168(0,13)
00000324 E3F0 C0D0 0004          00000388    362          LG    15,@lit_1428_6 ; mtx_unlock
0000032A                                     363 @@gen_label8 DS    0H
0000032A 05EF                                364          BALR  14,15
0000032C                                     365 @@gen_label9 DS    0H
                                             366 * ***      return rkq;
0000032C B904 00F2                           367          LGR   15,2
                                             368 * ***   }
                                             369 * * **** Start of Epilogue
                                             370          DCCEPIL
00000330                                     371+         ds 0h                                                          01-DCCEP
                                             372+* Epilog
00000330 D707 D088 D088 00000088 00000088    373+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000336 E3D0 D080 0004          00000080    374+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000033C E3C0 D090 0004          00000090    375+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000342 E3B0 C018 0004          00000018    376+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000348 E3C0 B010 0021          00000010    377+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000034E E3E0 D008 0004          00000008    378+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000354 EB1C D020 0004          00000020    379+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000035A 078E                                380+         bcr 8,14                if same dsab, just return              01-DCCEP
0000035C E3F0 D010 0024          00000010    381+         stg 15,16(0,13)         save return code                       01-DCCEP
00000362 E300 D018 0024          00000018    382+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000368 E3F0 D090 0004          00000090    383+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000036E E3F0 F018 0004          00000018    384+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000374 47F0 F040               00000040    385+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             386+* End of Epilog
                                             387 * * **** End of Epilogue
00000378                                     388          DS    0D
00000378 000000B0                            389 @FRAMESIZE_1428 DC F'176'
0000037C 00000000
00000380 0000000000000000                    390 @lit_1428_5 DC AD(mtx_lock)
00000388 0000000000000000                    391 @lit_1428_6 DC AD(mtx_unlock)
                                             392          DROP  12
                                             393 *
                                             394 *   DSECT for automatic variables in "rd_kafka_q_keep"
                                             395 *      (FUNCTION #1428)
                                             396 *
00000000                00000000 000000A8    397 @AUTO#rd_kafka_q_keep DSECT
00000000                                     398          DS    XL168
                                             399 *
00000390                00000000 00002890    400 @CODE    CSECT
                                             401 *
                                             402 *
                                             403 *
                                             404 * ....... start of rd_kafka_q_disable0
00000390                                     405 @LNAME1432 DS  0H
00000390 00000013                            406          DC    X'00000013'
00000394 99846D9281869281                    407          DC    C'rd_kafka_q_disable0'
000003A7 00                                  408          DC    X'00'
                                             409 rd_kafka_q_disable0 DCCPRLG CINDEX=1432,BASER=12,FRAME=176,ENTRY=NO,ARC*
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                                                H=ZARCH,LNAMEADDR=@LNAME1432
                                             410          macro
                                             411          dccextrn &m
                                             412          gblc    &$dccext(1000)
                                             413          gbla    &$dccexti
                                             414          lcla    &i
                                             415 &$dccext(&$dccexti+1) setc    '&m'
                                             416 &i       seta    1
                                             417 .loop    aif    (&i gt &$dccexti).around
                                             418          aif    ('&$dccext(&i)' eq '&m').getout
                                             419 &i       seta    &i+1
                                             420          ago     .loop
                                             421 .around  anop
                                             422 &$dccexti seta &$dccexti+1
                                             423          extrn  &m
                                             424 .getout  anop
                                             425          mend
000003A8                                     426+$eye0011    ds    0d                                                    02-DCCCA
000003A8 C4C3C3                              427+         dc cl3'DCC'                                                    02-DCCCA
000003AB 01                                  428+         dc xl1'01' format one                                          02-DCCCA
000003AC 00000000                            429+         dc a(0)                                                        02-DCCCA
000003B0 000000000000041A                    430+         dc ad(@PER_1432)                                               02-DCCCA
000003B8 00000000000000B0                    431+         dc ad(176)                                                     02-DCCCA
000003C0 0000000000000000                    432+         dc ad(0)                                                       02-DCCCA
000003C8 0000000000001000                    433+         dc ad(4096)                                                    02-DCCCA
000003D0 20                                  434+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000003D1 03                                  435+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000003D2 03                                  436+         dc al1(3)                                                      02-DCCCA
000003D3 08                                  437+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000003D4 00                                  438+         dc bl.8'00000000'                                              02-DCCCA
000003D5 000000                              439+         dc al3(0)                                                      02-DCCCA
000003D8 0000000000000390                    440+         dc ad(@LNAME1432)                                              02-DCCCA
000003E0                                     441+         ds 0d                                                          02-DCCCA
000003E0 00000000000003A8                    442+         dc ad($eye0011)                                                02-DCCCA
000003E8 0000000000000000                    443+         dc ad(0)                                                       02-DCCCA
000003F0                                     444+         ds    0d                                                       01-DCCPR
000003F0                                     445+rd_kafka_q_disable0 ds 0d                                               01-DCCPR
000003F0                                     446+@REGION_1432_1 ds 0h                                                    01-DCCPR
000003F0 EBEC D008 0024          00000008    447+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000003F6 E3E0 D088 0004          00000088    448+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000003FC E3C0 D090 0004          00000090    449+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000402 B904 002E                           450+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000406 E3B0 C018 0004          00000018    451+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000040C A7EB 00B0               000000B0    452+         aghi  14,176              increase by frame size               01-DCCPR
00000410 E3E0 C020 0021          00000020    453+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000416 4720 B020               00000020    454+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000041A                                     455+@PER_1432 ds   0h                                                       01-DCCPR
0000041A EBDE 2080 0024          00000080    456+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000420 E3C0 2090 0024          00000090    457+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000426 B904 00D2                           458+         lgr   13,2                set real frame pointer               01-DCCPR
0000042A B904 00CF                           459+         lgr   12,15               set base reg                         01-DCCPR
                        000003F0             460+         using @REGION_1432_1,12                                        01-DCCPR
                                                                                                                           Page   14 
  Active Usings: @REGION_1432_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             461 * ******* End of Prologue
                                             462 * *
                                             463 * ***           if (do_lock)
0000042E E320 1000 0004          00000000    464          LG    2,0(0,1)    ; rkq
00000434 E330 100C 0012          0000000C    465          LT    3,12(0,1)   ; do_lock
0000043A 4780 C060               00000450    466          BZ    @L256
                                             467 * ***                   mtx_lock(&rkq->rkq_lock);
0000043E E320 D0A8 0024          000000A8    468          STG   2,168(0,13)
00000444 4110 D0A8               000000A8    469          LA    1,168(0,13)
00000448 E3F0 C0D8 0004          000004C8    470          LG    15,@lit_1432_8 ; mtx_lock
0000044E                                     471 @@gen_label11 DS    0H
0000044E 05EF                                472          BALR  14,15
00000450                                     473 @@gen_label12 DS    0H
00000450                                     474 @L256    DS    0H
                                             475 * ***           rkq->rkq_flags &= ~0x2;
00000450 58F0 2084               00000084    476          L     15,132(0,2)
00000454 A5F7 FFFD               0000FFFD    477          NILL  15,65533
00000458 50F0 2084               00000084    478          ST    15,132(0,2)
                                             479 * ***           if (do_lock)
0000045C 1233                                480          LTR   3,3
0000045E 4780 C084               00000474    481          BZ    @ret_lab_1432
                                             482 * ***                   mtx_unlock(&rkq->rkq_lock);
00000462 E320 D0A8 0024          000000A8    483          STG   2,168(0,13)
00000468 4110 D0A8               000000A8    484          LA    1,168(0,13)
0000046C E3F0 C0E0 0004          000004D0    485          LG    15,@lit_1432_9 ; mtx_unlock
00000472                                     486 @@gen_label14 DS    0H
00000472 05EF                                487          BALR  14,15
00000474                                     488 @@gen_label15 DS    0H
00000474                                     489 @L257    DS    0H
                                             490 * ***   }
00000474                                     491 @ret_lab_1432 DS 0H
                                             492 * * **** Start of Epilogue
                                             493          DCCEPIL
00000474                                     494+         ds 0h                                                          01-DCCEP
                                             495+* Epilog
00000474 D707 D088 D088 00000088 00000088    496+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000047A E3D0 D080 0004          00000080    497+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000480 E3C0 D090 0004          00000090    498+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000486 E3B0 C018 0004          00000018    499+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000048C E3C0 B010 0021          00000010    500+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000492 E3E0 D008 0004          00000008    501+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000498 EB1C D020 0004          00000020    502+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000049E 078E                                503+         bcr 8,14                if same dsab, just return              01-DCCEP
000004A0 E3F0 D010 0024          00000010    504+         stg 15,16(0,13)         save return code                       01-DCCEP
000004A6 E300 D018 0024          00000018    505+         stg 0,24(0,13)          save more return code                  01-DCCEP
000004AC E3F0 D090 0004          00000090    506+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000004B2 E3F0 F018 0004          00000018    507+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000004B8 47F0 F040               00000040    508+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             509+* End of Epilog
                                             510 * * **** End of Epilogue
000004C0                                     511          DS    0D
000004C0 000000B0                            512 @FRAMESIZE_1432 DC F'176'
                                                                                                                           Page   15 
  Active Usings: @REGION_1432_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000004C4 00000000
000004C8 0000000000000000                    513 @lit_1432_8 DC AD(mtx_lock)
000004D0 0000000000000000                    514 @lit_1432_9 DC AD(mtx_unlock)
                                             515          DROP  12
                                             516 *
                                             517 *   DSECT for automatic variables in "rd_kafka_q_disable0"
                                             518 *      (FUNCTION #1432)
                                             519 *
00000000                00000000 000000A8    520 @AUTO#rd_kafka_q_disable0 DSECT
00000000                                     521          DS    XL168
                                             522 *
000004D8                00000000 00002890    523 @CODE    CSECT
                                             524 *
                                             525 *
                                             526 *
                                             527 * ....... start of rd_kafka_q_destroy0
000004D8                                     528 @LNAME1435 DS  0H
000004D8 00000013                            529          DC    X'00000013'
000004DC 99846D9281869281                    530          DC    C'rd_kafka_q_destroy0'
000004EF 00                                  531          DC    X'00'
                                             532 rd_kafka_q_destroy0 DCCPRLG CINDEX=1435,BASER=12,FRAME=216,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1435
                                             533          macro
                                             534          dccextrn &m
                                             535          gblc    &$dccext(1000)
                                             536          gbla    &$dccexti
                                             537          lcla    &i
                                             538 &$dccext(&$dccexti+1) setc    '&m'
                                             539 &i       seta    1
                                             540 .loop    aif    (&i gt &$dccexti).around
                                             541          aif    ('&$dccext(&i)' eq '&m').getout
                                             542 &i       seta    &i+1
                                             543          ago     .loop
                                             544 .around  anop
                                             545 &$dccexti seta &$dccexti+1
                                             546          extrn  &m
                                             547 .getout  anop
                                             548          mend
000004F0                                     549+$eye0014    ds    0d                                                    02-DCCCA
000004F0 C4C3C3                              550+         dc cl3'DCC'                                                    02-DCCCA
000004F3 01                                  551+         dc xl1'01' format one                                          02-DCCCA
000004F4 00000000                            552+         dc a(0)                                                        02-DCCCA
000004F8 0000000000000562                    553+         dc ad(@PER_1435)                                               02-DCCCA
00000500 00000000000000D8                    554+         dc ad(216)                                                     02-DCCCA
00000508 0000000000000000                    555+         dc ad(0)                                                       02-DCCCA
00000510 0000000000001000                    556+         dc ad(4096)                                                    02-DCCCA
00000518 20                                  557+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000519 03                                  558+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000051A 03                                  559+         dc al1(3)                                                      02-DCCCA
0000051B 08                                  560+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000051C 00                                  561+         dc bl.8'00000000'                                              02-DCCCA
0000051D 000000                              562+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   16 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000520 00000000000004D8                    563+         dc ad(@LNAME1435)                                              02-DCCCA
00000528                                     564+         ds 0d                                                          02-DCCCA
00000528 00000000000004F0                    565+         dc ad($eye0014)                                                02-DCCCA
00000530 0000000000000000                    566+         dc ad(0)                                                       02-DCCCA
00000538                                     567+         ds    0d                                                       01-DCCPR
00000538                                     568+rd_kafka_q_destroy0 ds 0d                                               01-DCCPR
00000538                                     569+@REGION_1435_1 ds 0h                                                    01-DCCPR
00000538 EBEC D008 0024          00000008    570+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000053E E3E0 D088 0004          00000088    571+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000544 E3C0 D090 0004          00000090    572+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000054A B904 002E                           573+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000054E E3B0 C018 0004          00000018    574+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000554 A7EB 00D8               000000D8    575+         aghi  14,216              increase by frame size               01-DCCPR
00000558 E3E0 C020 0021          00000020    576+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000055E 4720 B020               00000020    577+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000562                                     578+@PER_1435 ds   0h                                                       01-DCCPR
00000562 EBDE 2080 0024          00000080    579+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000568 E3C0 2090 0024          00000090    580+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000056E B904 00D2                           581+         lgr   13,2                set real frame pointer               01-DCCPR
00000572 B904 00CF                           582+         lgr   12,15               set base reg                         01-DCCPR
                        00000538             583+         using @REGION_1435_1,12                                        01-DCCPR
                                             584 * ******* End of Prologue
                                             585 * *
                                             586 * ***           int do_delete = 0;
00000576 E320 1000 0004          00000000    587          LG    2,0(0,1)    ; rkq
                                             588 * ***
                                             589 * ***           if (disable) {
0000057C E3F0 100C 0012          0000000C    590          LT    15,12(0,1)  ; disable
00000582 4780 C07E               000005B6    591          BZ    @L258
                                             592 * ***
                                             593 * ***
                                             594 * ***
                                             595 * ***
                                             596 * ***                   rd_kafka_q_disable0(rkq, 1);
00000586 E320 D0B0 0024          000000B0    597          STG   2,176(0,13)
0000058C E548 D0B8 0001          000000B8    598          MVGHI 184(13),1
00000592 4110 D0B0               000000B0    599          LA    1,176(0,13)
00000596 E3F0 C168 0004          000006A0    600          LG    15,@lit_1435_12 ; rd_kafka_q_disable0
0000059C                                     601 @@gen_label17 DS    0H
0000059C 05EF                                602          BALR  14,15
0000059E                                     603 @@gen_label18 DS    0H
                                             604 * ***                   rd_kafka_q_purge0(rkq, 1);
0000059E E320 D0B0 0024          000000B0    605          STG   2,176(0,13)
000005A4 E548 D0B8 0001          000000B8    606          MVGHI 184(13),1
000005AA 4110 D0B0               000000B0    607          LA    1,176(0,13)
000005AE E3F0 C170 0004          000006A8    608          LG    15,@lit_1435_13 ; rd_kafka_q_purge0
000005B4                                     609 @@gen_label19 DS    0H
000005B4 05EF                                610          BALR  14,15
000005B6                                     611 @@gen_label20 DS    0H
                                             612 * ***           }
000005B6                                     613 @L258    DS    0H
                                             614 * ***
                                                                                                                           Page   17 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             615 * ***           mtx_lock(&rkq->rkq_lock);
000005B6 E320 D0B0 0024          000000B0    616          STG   2,176(0,13)
000005BC 4110 D0B0               000000B0    617          LA    1,176(0,13)
000005C0 E3F0 C178 0004          000006B0    618          LG    15,@lit_1435_14 ; mtx_lock
000005C6                                     619 @@gen_label21 DS    0H
000005C6 05EF                                620          BALR  14,15
000005C8                                     621 @@gen_label22 DS    0H
                                             622 * ***           do { if (((!(rkq->rkq_refcnt > 0)))) rd_kafka_crash("C\
                                             623 * :\\asgkafka\\librdkafka\\src\\rdkafka_queue.h",211, __FUNCTION__, ((\
                                             624 * (void *)0)), "assert: " "rkq->rkq_refcnt > 0"); } while (0);
000005C8                                     625 @L259    DS    0H
000005C8 E55C 2080 0000          00000080    626          CHSI  128(2),0
000005CE 4720 C0D8               00000610    627          BH    @L262
000005D2 E3F0 C190 0004          000006C8    628          LG    15,@lit_1435_15
000005D8 E3F0 D0B0 0024          000000B0    629          STG   15,176(0,13)
000005DE E548 D0B8 00D3          000000B8    630          MVGHI 184(13),211
000005E4 E310 C188 0004          000006C0    631          LG    1,@lit_1435_16
000005EA 4110 1072               00000072    632          LA    1,114(0,1)
000005EE E310 D0C0 0024          000000C0    633          STG   1,192(0,13)
000005F4 D707 D0C8 D0C8 000000C8 000000C8    634          XC    200(8,13),200(13)
000005FA 41F0 F02C               0000002C    635          LA    15,44(0,15)
000005FE E3F0 D0D0 0024          000000D0    636          STG   15,208(0,13)
00000604 4110 D0B0               000000B0    637          LA    1,176(0,13)
00000608 E3F0 C180 0004          000006B8    638          LG    15,@lit_1435_17 ; rd_kafka_crash
0000060E                                     639 @@gen_label24 DS    0H
0000060E 05EF                                640          BALR  14,15
00000610                                     641 @@gen_label25 DS    0H
00000610                                     642 @L262    DS    0H
                                             643 * ***           do_delete = !--rkq->rkq_refcnt;
00000610 58F0 2080               00000080    644          L     15,128(0,2)
00000614 A7FA FFFF               0000FFFF    645          AHI   15,-1
00000618 50F0 2080               00000080    646          ST    15,128(0,2)
0000061C 103F                                647          LPR   3,15
0000061E A73A FFFF               0000FFFF    648          AHI   3,-1
00000622 8830 001F               0000001F    649          SRL   3,31(0)
                                             650 * ***           mtx_unlock(&rkq->rkq_lock);
00000626 E320 D0B0 0024          000000B0    651          STG   2,176(0,13)
0000062C 4110 D0B0               000000B0    652          LA    1,176(0,13)
00000630 E3F0 C198 0004          000006D0    653          LG    15,@lit_1435_18 ; mtx_unlock
00000636                                     654 @@gen_label26 DS    0H
00000636 05EF                                655          BALR  14,15
00000638                                     656 @@gen_label27 DS    0H
                                             657 * ***
                                             658 * ***           if (((do_delete)))
00000638 1233                                659          LTR   3,3
0000063A 4780 C118               00000650    660          BZ    @L263
                                             661 * ***                   rd_kafka_q_destroy_final(rkq);
0000063E E320 D0B0 0024          000000B0    662          STG   2,176(0,13)
00000644 4110 D0B0               000000B0    663          LA    1,176(0,13)
00000648 E3F0 C1A0 0004          000006D8    664          LG    15,@lit_1435_19 ; rd_kafka_q_destroy_final
0000064E                                     665 @@gen_label29 DS    0H
0000064E 05EF                                666          BALR  14,15
                                                                                                                           Page   18 
  Active Usings: @REGION_1435_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000650                                     667 @@gen_label30 DS    0H
00000650                                     668 @L263    DS    0H
                                             669 * ***   }
00000650                                     670 @ret_lab_1435 DS 0H
                                             671 * * **** Start of Epilogue
                                             672          DCCEPIL
00000650                                     673+         ds 0h                                                          01-DCCEP
                                             674+* Epilog
00000650 D707 D088 D088 00000088 00000088    675+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000656 E3D0 D080 0004          00000080    676+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000065C E3C0 D090 0004          00000090    677+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000662 E3B0 C018 0004          00000018    678+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000668 E3C0 B010 0021          00000010    679+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000066E E3E0 D008 0004          00000008    680+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000674 EB1C D020 0004          00000020    681+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000067A 078E                                682+         bcr 8,14                if same dsab, just return              01-DCCEP
0000067C E3F0 D010 0024          00000010    683+         stg 15,16(0,13)         save return code                       01-DCCEP
00000682 E300 D018 0024          00000018    684+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000688 E3F0 D090 0004          00000090    685+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000068E E3F0 F018 0004          00000018    686+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000694 47F0 F040               00000040    687+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             688+* End of Epilog
                                             689 * * **** End of Epilogue
00000698                                     690          DS    0D
00000698 000000D8                            691 @FRAMESIZE_1435 DC F'216'
0000069C 00000000
000006A0 00000000000003F0                    692 @lit_1435_12 DC AD(rd_kafka_q_disable0)
000006A8 0000000000000000                    693 @lit_1435_13 DC AD(rd_kafka_q_purge0)
000006B0 0000000000000000                    694 @lit_1435_14 DC AD(mtx_lock)
000006B8 0000000000000000                    695 @lit_1435_17 DC AD(rd_kafka_crash)
000006C0 0000000000002890                    696 @lit_1435_16 DC AD(@DATA)
000006C8 0000000000002A4E                    697 @lit_1435_15 DC AD(@strings@)
000006D0 0000000000000000                    698 @lit_1435_18 DC AD(mtx_unlock)
000006D8 0000000000000000                    699 @lit_1435_19 DC AD(rd_kafka_q_destroy_final)
                                             700          DROP  12
                                             701 *
                                             702 *   DSECT for automatic variables in "rd_kafka_q_destroy0"
                                             703 *      (FUNCTION #1435)
                                             704 *
00000000                00000000 000000AC    705 @AUTO#rd_kafka_q_destroy0 DSECT
00000000                                     706          DS    XL168
000000A8                                     707 rd_kafka_q_destroy0#do_delete#0 DS 1F ; do_delete
                                             708 *
000006E0                00000000 00002890    709 @CODE    CSECT
                                             710 *
                                             711 *
                                             712 *
                                             713 * ....... start of rd_kafka_q_fwd_get
000006E0                                     714 @LNAME1439 DS  0H
000006E0 00000012                            715          DC    X'00000012'
000006E4 99846D9281869281                    716          DC    C'rd_kafka_q_fwd_get'
000006F6 00                                  717          DC    X'00'
                                                                                                                           Page   19 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             718 rd_kafka_q_fwd_get DCCPRLG CINDEX=1439,BASER=12,FRAME=184,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME1439
                                             719          macro
                                             720          dccextrn &m
                                             721          gblc    &$dccext(1000)
                                             722          gbla    &$dccexti
                                             723          lcla    &i
                                             724 &$dccext(&$dccexti+1) setc    '&m'
                                             725 &i       seta    1
                                             726 .loop    aif    (&i gt &$dccexti).around
                                             727          aif    ('&$dccext(&i)' eq '&m').getout
                                             728 &i       seta    &i+1
                                             729          ago     .loop
                                             730 .around  anop
                                             731 &$dccexti seta &$dccexti+1
                                             732          extrn  &m
                                             733 .getout  anop
                                             734          mend
000006F8                                     735+$eye0017    ds    0d                                                    02-DCCCA
000006F8 C4C3C3                              736+         dc cl3'DCC'                                                    02-DCCCA
000006FB 01                                  737+         dc xl1'01' format one                                          02-DCCCA
000006FC 00000000                            738+         dc a(0)                                                        02-DCCCA
00000700 000000000000076A                    739+         dc ad(@PER_1439)                                               02-DCCCA
00000708 00000000000000B8                    740+         dc ad(184)                                                     02-DCCCA
00000710 0000000000000000                    741+         dc ad(0)                                                       02-DCCCA
00000718 0000000000001000                    742+         dc ad(4096)                                                    02-DCCCA
00000720 20                                  743+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000721 03                                  744+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000722 03                                  745+         dc al1(3)                                                      02-DCCCA
00000723 08                                  746+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000724 00                                  747+         dc bl.8'00000000'                                              02-DCCCA
00000725 000000                              748+         dc al3(0)                                                      02-DCCCA
00000728 00000000000006E0                    749+         dc ad(@LNAME1439)                                              02-DCCCA
00000730                                     750+         ds 0d                                                          02-DCCCA
00000730 00000000000006F8                    751+         dc ad($eye0017)                                                02-DCCCA
00000738 0000000000000000                    752+         dc ad(0)                                                       02-DCCCA
00000740                                     753+         ds    0d                                                       01-DCCPR
00000740                                     754+rd_kafka_q_fwd_get ds 0d                                                01-DCCPR
00000740                                     755+@REGION_1439_1 ds 0h                                                    01-DCCPR
00000740 EBEC D008 0024          00000008    756+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000746 E3E0 D088 0004          00000088    757+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000074C E3C0 D090 0004          00000090    758+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000752 B904 002E                           759+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000756 E3B0 C018 0004          00000018    760+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000075C A7EB 00B8               000000B8    761+         aghi  14,184              increase by frame size               01-DCCPR
00000760 E3E0 C020 0021          00000020    762+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000766 4720 B020               00000020    763+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000076A                                     764+@PER_1439 ds   0h                                                       01-DCCPR
0000076A EBDE 2080 0024          00000080    765+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000770 E3C0 2090 0024          00000090    766+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000776 B904 00D2                           767+         lgr   13,2                set real frame pointer               01-DCCPR
0000077A B904 00CF                           768+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   20 
  Active Usings: @REGION_1439_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                        00000740             769+         using @REGION_1439_1,12                                        01-DCCPR
                                             770 * ******* End of Prologue
                                             771 * *
0000077E E320 1000 0004          00000000    772          LG    2,0(0,1)    ; rkq
                                             773 * ***           rd_kafka_q_t *fwdq;
                                             774 * ***           if (do_lock)
00000784 E340 100C 0012          0000000C    775          LT    4,12(0,1)   ; do_lock
0000078A 4780 C060               000007A0    776          BZ    @L270
                                             777 * ***                   mtx_lock(&rkq->rkq_lock);
0000078E E320 D0B0 0024          000000B0    778          STG   2,176(0,13)
00000794 4110 D0B0               000000B0    779          LA    1,176(0,13)
00000798 E3F0 C0F0 0004          00000830    780          LG    15,@lit_1439_21 ; mtx_lock
0000079E                                     781 @@gen_label32 DS    0H
0000079E 05EF                                782          BALR  14,15
000007A0                                     783 @@gen_label33 DS    0H
000007A0                                     784 @L270    DS    0H
                                             785 * ***
                                             786 * ***           if ((fwdq = rkq->rkq_fwdq))
000007A0 E330 2058 0004          00000058    787          LG    3,88(0,2)   ; offset of rkq_fwdq in rd_kafka_q_s
000007A6 B902 00F3                           788          LTGR  15,3
000007AA 4780 C080               000007C0    789          BZ    @L271
                                             790 * ***                   rd_kafka_q_keep(fwdq);
000007AE E330 D0B0 0024          000000B0    791          STG   3,176(0,13)
000007B4 4110 D0B0               000000B0    792          LA    1,176(0,13)
000007B8 E3F0 C0F8 0004          00000838    793          LG    15,@lit_1439_22 ; rd_kafka_q_keep
000007BE                                     794 @@gen_label35 DS    0H
000007BE 05EF                                795          BALR  14,15
000007C0                                     796 @@gen_label36 DS    0H
000007C0                                     797 @L271    DS    0H
                                             798 * ***
                                             799 * ***           if (do_lock)
000007C0 1244                                800          LTR   4,4
000007C2 4780 C098               000007D8    801          BZ    @L272
                                             802 * ***                   mtx_unlock(&rkq->rkq_lock);
000007C6 E320 D0B0 0024          000000B0    803          STG   2,176(0,13)
000007CC 4110 D0B0               000000B0    804          LA    1,176(0,13)
000007D0 E3F0 C100 0004          00000840    805          LG    15,@lit_1439_23 ; mtx_unlock
000007D6                                     806 @@gen_label38 DS    0H
000007D6 05EF                                807          BALR  14,15
000007D8                                     808 @@gen_label39 DS    0H
000007D8                                     809 @L272    DS    0H
                                             810 * ***
                                             811 * ***           return fwdq;
000007D8 B904 00F3                           812          LGR   15,3
                                             813 * ***   }
                                             814 * * **** Start of Epilogue
                                             815          DCCEPIL
000007DC                                     816+         ds 0h                                                          01-DCCEP
                                             817+* Epilog
000007DC D707 D088 D088 00000088 00000088    818+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000007E2 E3D0 D080 0004          00000080    819+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000007E8 E3C0 D090 0004          00000090    820+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
                                                                                                                           Page   21 
  Active Usings: @REGION_1439_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000007EE E3B0 C018 0004          00000018    821+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000007F4 E3C0 B010 0021          00000010    822+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000007FA E3E0 D008 0004          00000008    823+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000800 EB1C D020 0004          00000020    824+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000806 078E                                825+         bcr 8,14                if same dsab, just return              01-DCCEP
00000808 E3F0 D010 0024          00000010    826+         stg 15,16(0,13)         save return code                       01-DCCEP
0000080E E300 D018 0024          00000018    827+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000814 E3F0 D090 0004          00000090    828+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000081A E3F0 F018 0004          00000018    829+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000820 47F0 F040               00000040    830+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             831+* End of Epilog
                                             832 * * **** End of Epilogue
00000828                                     833          DS    0D
00000828 000000B8                            834 @FRAMESIZE_1439 DC F'184'
0000082C 00000000
00000830 0000000000000000                    835 @lit_1439_21 DC AD(mtx_lock)
00000838 00000000000002B8                    836 @lit_1439_22 DC AD(rd_kafka_q_keep)
00000840 0000000000000000                    837 @lit_1439_23 DC AD(mtx_unlock)
                                             838          DROP  12
                                             839 *
                                             840 *   DSECT for automatic variables in "rd_kafka_q_fwd_get"
                                             841 *      (FUNCTION #1439)
                                             842 *
00000000                00000000 000000A8    843 @AUTO#rd_kafka_q_fwd_get DSECT
00000000                                     844          DS    XL168
                                             845 *
00000848                00000000 00002890    846 @CODE    CSECT
                                             847 *
                                             848 *
                                             849 *
                                             850 * ....... start of rd_kafka_q_io_event
00000848                                     851 @LNAME1441 DS  0H
00000848 00000013                            852          DC    X'00000013'
0000084C 99846D9281869281                    853          DC    C'rd_kafka_q_io_event'
0000085F 00                                  854          DC    X'00'
                                             855 rd_kafka_q_io_event DCCPRLG CINDEX=1441,BASER=12,FRAME=192,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME1441
                                             856          macro
                                             857          dccextrn &m
                                             858          gblc    &$dccext(1000)
                                             859          gbla    &$dccexti
                                             860          lcla    &i
                                             861 &$dccext(&$dccexti+1) setc    '&m'
                                             862 &i       seta    1
                                             863 .loop    aif    (&i gt &$dccexti).around
                                             864          aif    ('&$dccext(&i)' eq '&m').getout
                                             865 &i       seta    &i+1
                                             866          ago     .loop
                                             867 .around  anop
                                             868 &$dccexti seta &$dccexti+1
                                             869          extrn  &m
                                             870 .getout  anop
                                                                                                                           Page   22 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             871          mend
00000860                                     872+$eye0020    ds    0d                                                    02-DCCCA
00000860 C4C3C3                              873+         dc cl3'DCC'                                                    02-DCCCA
00000863 01                                  874+         dc xl1'01' format one                                          02-DCCCA
00000864 00000000                            875+         dc a(0)                                                        02-DCCCA
00000868 00000000000008D2                    876+         dc ad(@PER_1441)                                               02-DCCCA
00000870 00000000000000C0                    877+         dc ad(192)                                                     02-DCCCA
00000878 0000000000000000                    878+         dc ad(0)                                                       02-DCCCA
00000880 0000000000001000                    879+         dc ad(4096)                                                    02-DCCCA
00000888 20                                  880+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000889 03                                  881+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000088A 03                                  882+         dc al1(3)                                                      02-DCCCA
0000088B 08                                  883+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000088C 00                                  884+         dc bl.8'00000000'                                              02-DCCCA
0000088D 000000                              885+         dc al3(0)                                                      02-DCCCA
00000890 0000000000000848                    886+         dc ad(@LNAME1441)                                              02-DCCCA
00000898                                     887+         ds 0d                                                          02-DCCCA
00000898 0000000000000860                    888+         dc ad($eye0020)                                                02-DCCCA
000008A0 0000000000000000                    889+         dc ad(0)                                                       02-DCCCA
000008A8                                     890+         ds    0d                                                       01-DCCPR
000008A8                                     891+rd_kafka_q_io_event ds 0d                                               01-DCCPR
000008A8                                     892+@REGION_1441_1 ds 0h                                                    01-DCCPR
000008A8 EBEC D008 0024          00000008    893+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000008AE E3E0 D088 0004          00000088    894+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000008B4 E3C0 D090 0004          00000090    895+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000008BA B904 002E                           896+         lgr   2,14                copy addr of our savearea            01-DCCPR
000008BE E3B0 C018 0004          00000018    897+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000008C4 A7EB 00C0               000000C0    898+         aghi  14,192              increase by frame size               01-DCCPR
000008C8 E3E0 C020 0021          00000020    899+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000008CE 4720 B020               00000020    900+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000008D2                                     901+@PER_1441 ds   0h                                                       01-DCCPR
000008D2 EBDE 2080 0024          00000080    902+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000008D8 E3C0 2090 0024          00000090    903+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000008DE B904 00D2                           904+         lgr   13,2                set real frame pointer               01-DCCPR
000008E2 B904 00CF                           905+         lgr   12,15               set base reg                         01-DCCPR
                        000008A8             906+         using @REGION_1441_1,12                                        01-DCCPR
                                             907 * ******* End of Prologue
                                             908 * *
000008E6 E3F0 1000 0004          00000000    909          LG    15,0(0,1)   ; rkq
                                             910 * ***
                                             911 * ***      if (((!rkq->rkq_qio)))
000008EC E310 F090 0002          00000090    912          LTG   1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000008F2 4780 C102               000009AA    913          BZ    @ret_lab_1441
                                             914 * ***         return;
000008F6                                     915 @L275    DS    0H
                                             916 * ***
                                             917 * ***           if (rkq->rkq_qio->event_cb) {
000008F6 E310 F090 0004          00000090    918          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
000008FC E310 1020 0002          00000020    919          LTG   1,32(0,1)   ; offset of event_cb in rd_kafka_q_io
00000902 4780 C0A8               00000950    920          BZ    @L276
                                             921 * ***                   rkq->rkq_qio->event_cb(rkq->rkq_rk,
                                             922 * ***                                          rkq->rkq_qio->event_cb_\
                                                                                                                           Page   23 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                             923 * opaque);
00000906 E310 F088 0004          00000088    924          LG    1,136(0,15)
0000090C E310 D0A8 0024          000000A8    925          STG   1,168(0,13)
00000912 E310 F090 0004          00000090    926          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000918 E310 1028 0004          00000028    927          LG    1,40(0,1)
0000091E E310 D0B0 0024          000000B0    928          STG   1,176(0,13)
00000924 E3F0 F090 0004          00000090    929          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000092A E3F0 F020 0004          00000020    930          LG    15,32(0,15) ; offset of event_cb in rd_kafka_q_io
00000930 4110 D0A8               000000A8    931          LA    1,168(0,13)
00000934                                     932 @@gen_label42 DS    0H
00000934 05EF                                933          BALR  14,15
00000936                                     934 @@gen_label43 DS    0H
                                             935 * ***                   return;
00000936 47F0 C102               000009AA    936          B     @ret_lab_1441
00000940                                     937          DS    0D
00000940 000000C0                            938 @FRAMESIZE_1441 DC F'192'
00000944 00000000
00000948 0000000000000000                    939 @lit_1441_25 DC AD(write)
                                             940 * ***           }
00000950                                     941 @L276    DS    0H
                                             942 * ***
                                             943 * ***
                                             944 * ***
                                             945 * ***
                                             946 * ***
                                             947 * ***
                                             948 * ***           if (rkq->rkq_qio->sent)
00000950 E310 F090 0004          00000090    949          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000956 9500 1018      00000018 00000000    950          CLI   24(1),0
0000095A 4770 C102               000009AA    951          BNE   @ret_lab_1441
                                             952 * ***                   return;
0000095E                                     953 @L277    DS    0H
                                             954 * ***
                                             955 * ***           rkq->rkq_qio->sent = 1;
0000095E E310 F090 0004          00000090    956          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000964 9201 1018      00000018 00000001    957          MVI   24(1),1     ; offset of sent in rd_kafka_q_io
                                             958 * ***
                                             959 * ***
                                             960 * ***
                                             961 * ***           if (write(rkq->rkq_qio->fd,rkq->rkq_qio->payload,(int)\
                                             962 * rkq->rkq_qio->size) == -1)
00000968 E310 F090 0004          00000090    963          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
0000096E E310 1000 0014          00000000    964          LGF   1,0(0,1)
00000974 E310 D0A8 0024          000000A8    965          STG   1,168(0,13)
0000097A E310 F090 0004          00000090    966          LG    1,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000980 E310 1008 0004          00000008    967          LG    1,8(0,1)
00000986 E310 D0B0 0024          000000B0    968          STG   1,176(0,13)
0000098C E3F0 F090 0004          00000090    969          LG    15,144(0,15) ; offset of rkq_qio in rd_kafka_q_s
00000992 E3F0 F014 0014          00000014    970          LGF   15,20(0,15)
00000998 E3F0 D0B8 0024          000000B8    971          STG   15,184(0,13)
0000099E 4110 D0A8               000000A8    972          LA    1,168(0,13)
000009A2 E3F0 C0A0 0004          00000948    973          LG    15,@lit_1441_25 ; write
                                                                                                                           Page   24 
  Active Usings: @REGION_1441_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000009A8                                     974 @@gen_label45 DS    0H
000009A8 05EF                                975          BALR  14,15
000009AA                                     976 @@gen_label46 DS    0H
                                             977 * ***
                                             978 * ***                   ;
000009AA                                     979 @L278    DS    0H
                                             980 * ***   }
000009AA                                     981 @ret_lab_1441 DS 0H
                                             982 * * **** Start of Epilogue
                                             983          DCCEPIL
000009AA                                     984+         ds 0h                                                          01-DCCEP
                                             985+* Epilog
000009AA D707 D088 D088 00000088 00000088    986+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000009B0 E3D0 D080 0004          00000080    987+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000009B6 E3C0 D090 0004          00000090    988+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000009BC E3B0 C018 0004          00000018    989+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000009C2 E3C0 B010 0021          00000010    990+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000009C8 E3E0 D008 0004          00000008    991+         lg  14,8(0,13)          load up return address                 01-DCCEP
000009CE EB1C D020 0004          00000020    992+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000009D4 078E                                993+         bcr 8,14                if same dsab, just return              01-DCCEP
000009D6 E3F0 D010 0024          00000010    994+         stg 15,16(0,13)         save return code                       01-DCCEP
000009DC E300 D018 0024          00000018    995+         stg 0,24(0,13)          save more return code                  01-DCCEP
000009E2 E3F0 D090 0004          00000090    996+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000009E8 E3F0 F018 0004          00000018    997+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000009EE 47F0 F040               00000040    998+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             999+* End of Epilog
                                            1000 * * **** End of Epilogue
                                            1001          DROP  12
                                            1002 *
                                            1003 *   DSECT for automatic variables in "rd_kafka_q_io_event"
                                            1004 *      (FUNCTION #1441)
                                            1005 *
00000000                00000000 000000A8   1006 @AUTO#rd_kafka_q_io_event DSECT
00000000                                    1007          DS    XL168
                                            1008 *
000009F2                00000000 00002890   1009 @CODE    CSECT
                                            1010 *
                                            1011 *
                                            1012 *
                                            1013 * ....... start of rd_kafka_q_yield
000009F2                                    1014 @LNAME1443 DS  0H
000009F2 00000010                           1015          DC    X'00000010'
000009F6 99846D9281869281                   1016          DC    C'rd_kafka_q_yield'
00000A06 00                                 1017          DC    X'00'
                                            1018 rd_kafka_q_yield DCCPRLG CINDEX=1443,BASER=12,FRAME=192,ENTRY=NO,ARCH=Z*
                                                                ARCH,LNAMEADDR=@LNAME1443
                                            1019          macro
                                            1020          dccextrn &m
                                            1021          gblc    &$dccext(1000)
                                            1022          gbla    &$dccexti
                                            1023          lcla    &i
                                            1024 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page   25 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1025 &i       seta    1
                                            1026 .loop    aif    (&i gt &$dccexti).around
                                            1027          aif    ('&$dccext(&i)' eq '&m').getout
                                            1028 &i       seta    &i+1
                                            1029          ago     .loop
                                            1030 .around  anop
                                            1031 &$dccexti seta &$dccexti+1
                                            1032          extrn  &m
                                            1033 .getout  anop
                                            1034          mend
00000A08                                    1035+$eye0023    ds    0d                                                    02-DCCCA
00000A08 C4C3C3                             1036+         dc cl3'DCC'                                                    02-DCCCA
00000A0B 01                                 1037+         dc xl1'01' format one                                          02-DCCCA
00000A0C 00000000                           1038+         dc a(0)                                                        02-DCCCA
00000A10 0000000000000A7A                   1039+         dc ad(@PER_1443)                                               02-DCCCA
00000A18 00000000000000C0                   1040+         dc ad(192)                                                     02-DCCCA
00000A20 0000000000000000                   1041+         dc ad(0)                                                       02-DCCCA
00000A28 0000000000001000                   1042+         dc ad(4096)                                                    02-DCCCA
00000A30 20                                 1043+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000A31 03                                 1044+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000A32 03                                 1045+         dc al1(3)                                                      02-DCCCA
00000A33 08                                 1046+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000A34 00                                 1047+         dc bl.8'00000000'                                              02-DCCCA
00000A35 000000                             1048+         dc al3(0)                                                      02-DCCCA
00000A38 00000000000009F2                   1049+         dc ad(@LNAME1443)                                              02-DCCCA
00000A40                                    1050+         ds 0d                                                          02-DCCCA
00000A40 0000000000000A08                   1051+         dc ad($eye0023)                                                02-DCCCA
00000A48 0000000000000000                   1052+         dc ad(0)                                                       02-DCCCA
00000A50                                    1053+         ds    0d                                                       01-DCCPR
00000A50                                    1054+rd_kafka_q_yield ds 0d                                                  01-DCCPR
00000A50                                    1055+@REGION_1443_1 ds 0h                                                    01-DCCPR
00000A50 EBEC D008 0024          00000008   1056+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000A56 E3E0 D088 0004          00000088   1057+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000A5C E3C0 D090 0004          00000090   1058+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000A62 B904 002E                          1059+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000A66 E3B0 C018 0004          00000018   1060+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000A6C A7EB 00C0               000000C0   1061+         aghi  14,192              increase by frame size               01-DCCPR
00000A70 E3E0 C020 0021          00000020   1062+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000A76 4720 B020               00000020   1063+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000A7A                                    1064+@PER_1443 ds   0h                                                       01-DCCPR
00000A7A EBDE 2080 0024          00000080   1065+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000A80 E3C0 2090 0024          00000090   1066+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000A86 B904 00D2                          1067+         lgr   13,2                set real frame pointer               01-DCCPR
00000A8A B904 00CF                          1068+         lgr   12,15               set base reg                         01-DCCPR
                        00000A50            1069+         using @REGION_1443_1,12                                        01-DCCPR
                                            1070 * ******* End of Prologue
                                            1071 * *
00000A8E E320 1000 0004          00000000   1072          LG    2,0(0,1)    ; rkq
                                            1073 * ***           rd_kafka_q_t *fwdq;
                                            1074 * ***
                                            1075 * ***           mtx_lock(&rkq->rkq_lock);
00000A94 E320 D0B0 0024          000000B0   1076          STG   2,176(0,13)
                                                                                                                           Page   26 
  Active Usings: @REGION_1443_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000A9A 4110 D0B0               000000B0   1077          LA    1,176(0,13)
00000A9E E3F0 C080 0004          00000AD0   1078          LG    15,@lit_1443_27 ; mtx_lock
00000AA4                                    1079 @@gen_label47 DS    0H
00000AA4 05EF                               1080          BALR  14,15
00000AA6                                    1081 @@gen_label48 DS    0H
                                            1082 * ***
                                            1083 * ***           do {} while (0);
00000AA6                                    1084 @L281    DS    0H
                                            1085 * ***
                                            1086 * ***           if (((!(rkq->rkq_flags & 0x2)))) {
00000AA6 9102 2087      00000087 00000002   1087          TM    135(2),2
00000AAA 4770 C0B8               00000B08   1088          BNZ   @L284
                                            1089 * ***
                                            1090 * ***                   mtx_unlock(&rkq->rkq_lock);
00000AAE E320 D0B0 0024          000000B0   1091          STG   2,176(0,13)
00000AB4 4110 D0B0               000000B0   1092          LA    1,176(0,13)
00000AB8 E3F0 C088 0004          00000AD8   1093          LG    15,@lit_1443_28 ; mtx_unlock
00000ABE                                    1094 @@gen_label50 DS    0H
00000ABE 05EF                               1095          BALR  14,15
00000AC0                                    1096 @@gen_label51 DS    0H
                                            1097 * ***                   return;
00000AC0 47F0 C16C               00000BBC   1098          B     @ret_lab_1443
00000AC8                                    1099          DS    0D
00000AC8 000000C0                           1100 @FRAMESIZE_1443 DC F'192'
00000ACC 00000000
00000AD0 0000000000000000                   1101 @lit_1443_27 DC AD(mtx_lock)
00000AD8 0000000000000000                   1102 @lit_1443_28 DC AD(mtx_unlock)
00000AE0 0000000000000740                   1103 @lit_1443_29 DC AD(rd_kafka_q_fwd_get)
00000AE8 0000000000000000                   1104 @lit_1443_30 DC AD(cnd_broadcast)
00000AF0 00000000000008A8                   1105 @lit_1443_31 DC AD(rd_kafka_q_io_event)
00000AF8 0000000000000A50                   1106 @lit_1443_34 DC AD(rd_kafka_q_yield)
00000B00 0000000000000538                   1107 @lit_1443_35 DC AD(rd_kafka_q_destroy0)
                                            1108 * ***           }
00000B08                                    1109 @L284    DS    0H
                                            1110 * ***
                                            1111 * ***           if (!(fwdq = rd_kafka_q_fwd_get(rkq, 0))) {
00000B08 E320 D0B0 0024          000000B0   1112          STG   2,176(0,13)
00000B0E D707 D0B8 D0B8 000000B8 000000B8   1113          XC    184(8,13),184(13)
00000B14 4110 D0B0               000000B0   1114          LA    1,176(0,13)
00000B18 E3F0 C090 0004          00000AE0   1115          LG    15,@lit_1443_29 ; rd_kafka_q_fwd_get
00000B1E                                    1116 @@gen_label52 DS    0H
00000B1E 05EF                               1117          BALR  14,15
00000B20                                    1118 @@gen_label53 DS    0H
00000B20 B904 003F                          1119          LGR   3,15
00000B24 B902 00F3                          1120          LTGR  15,3
00000B28 4770 C130               00000B80   1121          BNZ   @L285
                                            1122 * ***                   rkq->rkq_flags |= 0x8;
00000B2C 58F0 2084               00000084   1123          L     15,132(0,2)
00000B30 A5FB 0008               00000008   1124          OILL  15,8
00000B34 50F0 2084               00000084   1125          ST    15,132(0,2)
                                            1126 * ***                   cnd_broadcast(&rkq->rkq_cond);
00000B38 41F0 2028               00000028   1127          LA    15,40(0,2)
                                                                                                                           Page   27 
  Active Usings: @REGION_1443_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000B3C E3F0 D0B0 0024          000000B0   1128          STG   15,176(0,13)
00000B42 4110 D0B0               000000B0   1129          LA    1,176(0,13)
00000B46 E3F0 C098 0004          00000AE8   1130          LG    15,@lit_1443_30 ; cnd_broadcast
00000B4C                                    1131 @@gen_label55 DS    0H
00000B4C 05EF                               1132          BALR  14,15
00000B4E                                    1133 @@gen_label56 DS    0H
                                            1134 * ***                   if (rkq->rkq_qlen == 0)
00000B4E E55C 2070 0000          00000070   1135          CHSI  112(2),0
00000B54 4770 C11A               00000B6A   1136          BNE   @L286
                                            1137 * ***                           rd_kafka_q_io_event(rkq);
00000B58 E320 D0B0 0024          000000B0   1138          STG   2,176(0,13)
00000B5E 4110 D0B0               000000B0   1139          LA    1,176(0,13)
00000B62 E3F0 C0A0 0004          00000AF0   1140          LG    15,@lit_1443_31 ; rd_kafka_q_io_event
00000B68                                    1141 @@gen_label58 DS    0H
00000B68 05EF                               1142          BALR  14,15
00000B6A                                    1143 @@gen_label59 DS    0H
00000B6A                                    1144 @L286    DS    0H
                                            1145 * ***
                                            1146 * ***                   mtx_unlock(&rkq->rkq_lock);
00000B6A E320 D0B0 0024          000000B0   1147          STG   2,176(0,13)
00000B70 4110 D0B0               000000B0   1148          LA    1,176(0,13)
00000B74 E3F0 C088 0004          00000AD8   1149          LG    15,@lit_1443_28 ; mtx_unlock
00000B7A                                    1150 @@gen_label60 DS    0H
00000B7A 05EF                               1151          BALR  14,15
00000B7C                                    1152 @@gen_label61 DS    0H
                                            1153 * ***           } else {
00000B7C 47F0 C16C               00000BBC   1154          B     @L287
00000B80                                    1155 @L285    DS    0H
                                            1156 * ***                   mtx_unlock(&rkq->rkq_lock);
00000B80 E320 D0B0 0024          000000B0   1157          STG   2,176(0,13)
00000B86 4110 D0B0               000000B0   1158          LA    1,176(0,13)
00000B8A E3F0 C088 0004          00000AD8   1159          LG    15,@lit_1443_28 ; mtx_unlock
00000B90                                    1160 @@gen_label62 DS    0H
00000B90 05EF                               1161          BALR  14,15
00000B92                                    1162 @@gen_label63 DS    0H
                                            1163 * ***                   rd_kafka_q_yield(fwdq);
00000B92 E330 D0B0 0024          000000B0   1164          STG   3,176(0,13)
00000B98 4110 D0B0               000000B0   1165          LA    1,176(0,13)
00000B9C E3F0 C0A8 0004          00000AF8   1166          LG    15,@lit_1443_34 ; rd_kafka_q_yield
00000BA2                                    1167 @@gen_label64 DS    0H
00000BA2 05EF                               1168          BALR  14,15
00000BA4                                    1169 @@gen_label65 DS    0H
                                            1170 * ***                   rd_kafka_q_destroy0(fwdq, 0 );
00000BA4 E330 D0B0 0024          000000B0   1171          STG   3,176(0,13)
00000BAA D707 D0B8 D0B8 000000B8 000000B8   1172          XC    184(8,13),184(13)
00000BB0 4110 D0B0               000000B0   1173          LA    1,176(0,13)
00000BB4 E3F0 C0B0 0004          00000B00   1174          LG    15,@lit_1443_35 ; rd_kafka_q_destroy0
00000BBA                                    1175 @@gen_label66 DS    0H
00000BBA 05EF                               1176          BALR  14,15
00000BBC                                    1177 @@gen_label67 DS    0H
                                            1178 * ***           }
00000BBC                                    1179 @L287    DS    0H
                                                                                                                           Page   28 
  Active Usings: @REGION_1443_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1180 * ***
                                            1181 * ***
                                            1182 * ***   }
00000BBC                                    1183 @ret_lab_1443 DS 0H
                                            1184 * * **** Start of Epilogue
                                            1185          DCCEPIL
00000BBC                                    1186+         ds 0h                                                          01-DCCEP
                                            1187+* Epilog
00000BBC D707 D088 D088 00000088 00000088   1188+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000BC2 E3D0 D080 0004          00000080   1189+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000BC8 E3C0 D090 0004          00000090   1190+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000BCE E3B0 C018 0004          00000018   1191+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000BD4 E3C0 B010 0021          00000010   1192+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000BDA E3E0 D008 0004          00000008   1193+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000BE0 EB1C D020 0004          00000020   1194+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000BE6 078E                               1195+         bcr 8,14                if same dsab, just return              01-DCCEP
00000BE8 E3F0 D010 0024          00000010   1196+         stg 15,16(0,13)         save return code                       01-DCCEP
00000BEE E300 D018 0024          00000018   1197+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000BF4 E3F0 D090 0004          00000090   1198+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000BFA E3F0 F018 0004          00000018   1199+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000C00 47F0 F040               00000040   1200+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1201+* End of Epilog
                                            1202 * * **** End of Epilogue
                                            1203          DROP  12
                                            1204 *
                                            1205 *   DSECT for automatic variables in "rd_kafka_q_yield"
                                            1206 *      (FUNCTION #1443)
                                            1207 *
00000000                00000000 000000A8   1208 @AUTO#rd_kafka_q_yield DSECT
00000000                                    1209          DS    XL168
                                            1210 *
00000C04                00000000 00002890   1211 @CODE    CSECT
                                            1212 *
                                            1213 *
                                            1214 *
                                            1215 * ....... start of rd_kafka_timers_lock
00000C04                                    1216 @LNAME1917 DS  0H
00000C04 00000014                           1217          DC    X'00000014'
00000C08 99846D9281869281                   1218          DC    C'rd_kafka_timers_lock'
00000C1C 00                                 1219          DC    X'00'
                                            1220 rd_kafka_timers_lock DCCPRLG CINDEX=1917,BASER=12,FRAME=176,ENTRY=NO,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1917
                                            1221          macro
                                            1222          dccextrn &m
                                            1223          gblc    &$dccext(1000)
                                            1224          gbla    &$dccexti
                                            1225          lcla    &i
                                            1226 &$dccext(&$dccexti+1) setc    '&m'
                                            1227 &i       seta    1
                                            1228 .loop    aif    (&i gt &$dccexti).around
                                            1229          aif    ('&$dccext(&i)' eq '&m').getout
                                            1230 &i       seta    &i+1
                                                                                                                           Page   29 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1231          ago     .loop
                                            1232 .around  anop
                                            1233 &$dccexti seta &$dccexti+1
                                            1234          extrn  &m
                                            1235 .getout  anop
                                            1236          mend
00000C20                                    1237+$eye0026    ds    0d                                                    02-DCCCA
00000C20 C4C3C3                             1238+         dc cl3'DCC'                                                    02-DCCCA
00000C23 01                                 1239+         dc xl1'01' format one                                          02-DCCCA
00000C24 00000000                           1240+         dc a(0)                                                        02-DCCCA
00000C28 0000000000000C92                   1241+         dc ad(@PER_1917)                                               02-DCCCA
00000C30 00000000000000B0                   1242+         dc ad(176)                                                     02-DCCCA
00000C38 0000000000000000                   1243+         dc ad(0)                                                       02-DCCCA
00000C40 0000000000001000                   1244+         dc ad(4096)                                                    02-DCCCA
00000C48 20                                 1245+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000C49 03                                 1246+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000C4A 03                                 1247+         dc al1(3)                                                      02-DCCCA
00000C4B 08                                 1248+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000C4C 00                                 1249+         dc bl.8'00000000'                                              02-DCCCA
00000C4D 000000                             1250+         dc al3(0)                                                      02-DCCCA
00000C50 0000000000000C04                   1251+         dc ad(@LNAME1917)                                              02-DCCCA
00000C58                                    1252+         ds 0d                                                          02-DCCCA
00000C58 0000000000000C20                   1253+         dc ad($eye0026)                                                02-DCCCA
00000C60 0000000000000000                   1254+         dc ad(0)                                                       02-DCCCA
00000C68                                    1255+         ds    0d                                                       01-DCCPR
00000C68                                    1256+rd_kafka_timers_lock ds 0d                                              01-DCCPR
00000C68                                    1257+@REGION_1917_1 ds 0h                                                    01-DCCPR
00000C68 EBEC D008 0024          00000008   1258+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000C6E E3E0 D088 0004          00000088   1259+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000C74 E3C0 D090 0004          00000090   1260+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000C7A B904 002E                          1261+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000C7E E3B0 C018 0004          00000018   1262+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000C84 A7EB 00B0               000000B0   1263+         aghi  14,176              increase by frame size               01-DCCPR
00000C88 E3E0 C020 0021          00000020   1264+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000C8E 4720 B020               00000020   1265+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000C92                                    1266+@PER_1917 ds   0h                                                       01-DCCPR
00000C92 EBDE 2080 0024          00000080   1267+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000C98 E3C0 2090 0024          00000090   1268+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000C9E B904 00D2                          1269+         lgr   13,2                set real frame pointer               01-DCCPR
00000CA2 B904 00CF                          1270+         lgr   12,15               set base reg                         01-DCCPR
                        00000C68            1271+         using @REGION_1917_1,12                                        01-DCCPR
                                            1272 * ******* End of Prologue
                                            1273 * *
                                            1274 * ***           mtx_lock(&rkts->rkts_lock);
00000CA6 E3F0 1000 0004          00000000   1275          LG    15,0(0,1)   ; rkts
00000CAC 41F0 F018               00000018   1276          LA    15,24(0,15)
00000CB0 E3F0 D0A8 0024          000000A8   1277          STG   15,168(0,13)
00000CB6 4110 D0A8               000000A8   1278          LA    1,168(0,13)
00000CBA E3F0 C0B0 0004          00000D18   1279          LG    15,@lit_1917_37 ; mtx_lock
00000CC0                                    1280 @@gen_label68 DS    0H
00000CC0 05EF                               1281          BALR  14,15
00000CC2                                    1282 @@gen_label69 DS    0H
                                                                                                                           Page   30 
  Active Usings: @REGION_1917_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1283 * ***   }
00000CC2                                    1284 @ret_lab_1917 DS 0H
                                            1285 * * **** Start of Epilogue
                                            1286          DCCEPIL
00000CC2                                    1287+         ds 0h                                                          01-DCCEP
                                            1288+* Epilog
00000CC2 D707 D088 D088 00000088 00000088   1289+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000CC8 E3D0 D080 0004          00000080   1290+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000CCE E3C0 D090 0004          00000090   1291+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000CD4 E3B0 C018 0004          00000018   1292+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000CDA E3C0 B010 0021          00000010   1293+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000CE0 E3E0 D008 0004          00000008   1294+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000CE6 EB1C D020 0004          00000020   1295+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000CEC 078E                               1296+         bcr 8,14                if same dsab, just return              01-DCCEP
00000CEE E3F0 D010 0024          00000010   1297+         stg 15,16(0,13)         save return code                       01-DCCEP
00000CF4 E300 D018 0024          00000018   1298+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000CFA E3F0 D090 0004          00000090   1299+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000D00 E3F0 F018 0004          00000018   1300+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000D06 47F0 F040               00000040   1301+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1302+* End of Epilog
                                            1303 * * **** End of Epilogue
00000D10                                    1304          DS    0D
00000D10 000000B0                           1305 @FRAMESIZE_1917 DC F'176'
00000D14 00000000
00000D18 0000000000000000                   1306 @lit_1917_37 DC AD(mtx_lock)
                                            1307          DROP  12
                                            1308 *
                                            1309 *   DSECT for automatic variables in "rd_kafka_timers_lock"
                                            1310 *      (FUNCTION #1917)
                                            1311 *
00000000                00000000 000000A8   1312 @AUTO#rd_kafka_timers_lock DSECT
00000000                                    1313          DS    XL168
                                            1314 *
00000D20                00000000 00002890   1315 @CODE    CSECT
                                            1316 *
                                            1317 *
                                            1318 *
                                            1319 * ....... start of rd_kafka_timers_unlock
00000D20                                    1320 @LNAME1918 DS  0H
00000D20 00000016                           1321          DC    X'00000016'
00000D24 99846D9281869281                   1322          DC    C'rd_kafka_timers_unlock'
00000D3A 00                                 1323          DC    X'00'
                                            1324 rd_kafka_timers_unlock DCCPRLG CINDEX=1918,BASER=12,FRAME=176,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1918
                                            1325          macro
                                            1326          dccextrn &m
                                            1327          gblc    &$dccext(1000)
                                            1328          gbla    &$dccexti
                                            1329          lcla    &i
                                            1330 &$dccext(&$dccexti+1) setc    '&m'
                                            1331 &i       seta    1
                                            1332 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   31 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1333          aif    ('&$dccext(&i)' eq '&m').getout
                                            1334 &i       seta    &i+1
                                            1335          ago     .loop
                                            1336 .around  anop
                                            1337 &$dccexti seta &$dccexti+1
                                            1338          extrn  &m
                                            1339 .getout  anop
                                            1340          mend
00000D40                                    1341+$eye0029    ds    0d                                                    02-DCCCA
00000D40 C4C3C3                             1342+         dc cl3'DCC'                                                    02-DCCCA
00000D43 01                                 1343+         dc xl1'01' format one                                          02-DCCCA
00000D44 00000000                           1344+         dc a(0)                                                        02-DCCCA
00000D48 0000000000000DB2                   1345+         dc ad(@PER_1918)                                               02-DCCCA
00000D50 00000000000000B0                   1346+         dc ad(176)                                                     02-DCCCA
00000D58 0000000000000000                   1347+         dc ad(0)                                                       02-DCCCA
00000D60 0000000000001000                   1348+         dc ad(4096)                                                    02-DCCCA
00000D68 20                                 1349+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D69 03                                 1350+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D6A 03                                 1351+         dc al1(3)                                                      02-DCCCA
00000D6B 08                                 1352+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D6C 00                                 1353+         dc bl.8'00000000'                                              02-DCCCA
00000D6D 000000                             1354+         dc al3(0)                                                      02-DCCCA
00000D70 0000000000000D20                   1355+         dc ad(@LNAME1918)                                              02-DCCCA
00000D78                                    1356+         ds 0d                                                          02-DCCCA
00000D78 0000000000000D40                   1357+         dc ad($eye0029)                                                02-DCCCA
00000D80 0000000000000000                   1358+         dc ad(0)                                                       02-DCCCA
00000D88                                    1359+         ds    0d                                                       01-DCCPR
00000D88                                    1360+rd_kafka_timers_unlock ds 0d                                            01-DCCPR
00000D88                                    1361+@REGION_1918_1 ds 0h                                                    01-DCCPR
00000D88 EBEC D008 0024          00000008   1362+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000D8E E3E0 D088 0004          00000088   1363+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000D94 E3C0 D090 0004          00000090   1364+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000D9A B904 002E                          1365+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000D9E E3B0 C018 0004          00000018   1366+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000DA4 A7EB 00B0               000000B0   1367+         aghi  14,176              increase by frame size               01-DCCPR
00000DA8 E3E0 C020 0021          00000020   1368+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000DAE 4720 B020               00000020   1369+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000DB2                                    1370+@PER_1918 ds   0h                                                       01-DCCPR
00000DB2 EBDE 2080 0024          00000080   1371+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000DB8 E3C0 2090 0024          00000090   1372+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000DBE B904 00D2                          1373+         lgr   13,2                set real frame pointer               01-DCCPR
00000DC2 B904 00CF                          1374+         lgr   12,15               set base reg                         01-DCCPR
                        00000D88            1375+         using @REGION_1918_1,12                                        01-DCCPR
                                            1376 * ******* End of Prologue
                                            1377 * *
                                            1378 * ***           mtx_unlock(&rkts->rkts_lock);
00000DC6 E3F0 1000 0004          00000000   1379          LG    15,0(0,1)   ; rkts
00000DCC 41F0 F018               00000018   1380          LA    15,24(0,15)
00000DD0 E3F0 D0A8 0024          000000A8   1381          STG   15,168(0,13)
00000DD6 4110 D0A8               000000A8   1382          LA    1,168(0,13)
00000DDA E3F0 C0B0 0004          00000E38   1383          LG    15,@lit_1918_39 ; mtx_unlock
00000DE0                                    1384 @@gen_label70 DS    0H
                                                                                                                           Page   32 
  Active Usings: @REGION_1918_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000DE0 05EF                               1385          BALR  14,15
00000DE2                                    1386 @@gen_label71 DS    0H
                                            1387 * ***   }
00000DE2                                    1388 @ret_lab_1918 DS 0H
                                            1389 * * **** Start of Epilogue
                                            1390          DCCEPIL
00000DE2                                    1391+         ds 0h                                                          01-DCCEP
                                            1392+* Epilog
00000DE2 D707 D088 D088 00000088 00000088   1393+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000DE8 E3D0 D080 0004          00000080   1394+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000DEE E3C0 D090 0004          00000090   1395+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000DF4 E3B0 C018 0004          00000018   1396+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000DFA E3C0 B010 0021          00000010   1397+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000E00 E3E0 D008 0004          00000008   1398+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000E06 EB1C D020 0004          00000020   1399+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000E0C 078E                               1400+         bcr 8,14                if same dsab, just return              01-DCCEP
00000E0E E3F0 D010 0024          00000010   1401+         stg 15,16(0,13)         save return code                       01-DCCEP
00000E14 E300 D018 0024          00000018   1402+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000E1A E3F0 D090 0004          00000090   1403+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000E20 E3F0 F018 0004          00000018   1404+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000E26 47F0 F040               00000040   1405+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1406+* End of Epilog
                                            1407 * * **** End of Epilogue
00000E30                                    1408          DS    0D
00000E30 000000B0                           1409 @FRAMESIZE_1918 DC F'176'
00000E34 00000000
00000E38 0000000000000000                   1410 @lit_1918_39 DC AD(mtx_unlock)
                                            1411          DROP  12
                                            1412 *
                                            1413 *   DSECT for automatic variables in "rd_kafka_timers_unlock"
                                            1414 *      (FUNCTION #1918)
                                            1415 *
00000000                00000000 000000A8   1416 @AUTO#rd_kafka_timers_unlock DSECT
00000000                                    1417          DS    XL168
                                            1418 *
00000E40                00000000 00002890   1419 @CODE    CSECT
                                            1420 *
                                            1421 *
                                            1422 *
                                            1423 * ....... start of rd_kafka_timer_started
00000E40                                    1424 @LNAME1919 DS  0H
00000E40 00000016                           1425          DC    X'00000016'
00000E44 99846D9281869281                   1426          DC    C'rd_kafka_timer_started'
00000E5A 00                                 1427          DC    X'00'
                                            1428 rd_kafka_timer_started DCCPRLG CINDEX=1919,BASER=12,FRAME=168,SAVEAREA=*
                                                                NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1919
                                            1429          macro
                                            1430          dccextrn &m
                                            1431          gblc    &$dccext(1000)
                                            1432          gbla    &$dccexti
                                            1433          lcla    &i
                                            1434 &$dccext(&$dccexti+1) setc    '&m'
                                                                                                                           Page   33 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1435 &i       seta    1
                                            1436 .loop    aif    (&i gt &$dccexti).around
                                            1437          aif    ('&$dccext(&i)' eq '&m').getout
                                            1438 &i       seta    &i+1
                                            1439          ago     .loop
                                            1440 .around  anop
                                            1441 &$dccexti seta &$dccexti+1
                                            1442          extrn  &m
                                            1443 .getout  anop
                                            1444          mend
00000E60                                    1445+$eye0032    ds    0d                                                    02-DCCCA
00000E60 C4C3C3                             1446+         dc cl3'DCC'                                                    02-DCCCA
00000E63 01                                 1447+         dc xl1'01' format one                                          02-DCCCA
00000E64 00000000                           1448+         dc a(0)                                                        02-DCCCA
00000E68 0000000000000000                   1449+         dc ad(0)                                                       02-DCCCA
00000E70 00000000000000A8                   1450+         dc ad(168)                                                     02-DCCCA
00000E78 0000000000000000                   1451+         dc ad(0)                                                       02-DCCCA
00000E80 0000000000001000                   1452+         dc ad(4096)                                                    02-DCCCA
00000E88 20                                 1453+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000E89 03                                 1454+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000E8A 03                                 1455+         dc al1(3)                                                      02-DCCCA
00000E8B 08                                 1456+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000E8C 00                                 1457+         dc bl.8'00000000'                                              02-DCCCA
00000E8D 000000                             1458+         dc al3(0)                                                      02-DCCCA
00000E90 0000000000000E40                   1459+         dc ad(@LNAME1919)                                              02-DCCCA
00000E98                                    1460+         ds 0d                                                          02-DCCCA
00000E98 0000000000000E60                   1461+         dc ad($eye0032)                                                02-DCCCA
00000EA0 0000000000000000                   1462+         dc ad(0)                                                       02-DCCCA
00000EA8                                    1463+         ds    0d                                                       01-DCCPR
00000EA8                                    1464+rd_kafka_timer_started ds 0d                                            01-DCCPR
00000EA8                                    1465+@REGION_1919_1 ds 0h                                                    01-DCCPR
00000EA8 EBEC D008 0024          00000008   1466+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000EAE B904 00CF                          1467+         lgr   12,15               set base reg                         01-DCCPR
                        00000EA8            1468+         using @REGION_1919_1,12                                        01-DCCPR
                                            1469 * ******* End of Prologue
                                            1470 * *
                                            1471 * ***      return rtmr->rtmr_interval ? 1 : 0;
00000EB2 E3F0 1000 0004          00000000   1472          LG    15,0(0,1)   ; rtmr
00000EB8 E3F0 F018 0002          00000018   1473          LTG   15,24(0,15) ; offset of rtmr_interval in rd_kafka_timer_*
                                                                s
00000EBE 4780 C022               00000ECA   1474          BZ    @L630
00000EC2 A7F8 0001               00000001   1475          LHI   15,1        ; 1
00000EC6 47F0 C026               00000ECE   1476          B     @L631
00000ECA                                    1477 @L630    DS    0H
00000ECA A7F8 0000               00000000   1478          LHI   15,0        ; 0
00000ECE                                    1479 @L631    DS    0H
00000ECE B914 00FF                          1480          LGFR  15,15
                                            1481 * ***   }
                                            1482 * * **** Start of Epilogue
                                            1483          DCCEPIL
00000ED2                                    1484+         ds 0h                                                          01-DCCEP
                                            1485+* Epilog
                                                                                                                           Page   34 
  Active Usings: @REGION_1919_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1486+* Epilog
00000ED2 E3E0 D008 0004          00000008   1487+         lg    14,8(,13) restore the reg                                01-DCCEP
00000ED8 EB1C D020 0004          00000020   1488+         lmg   1,12,32(13)                                              01-DCCEP
00000EDE 07FE                               1489+         br   14                                                        01-DCCEP
                                            1490+* End of Epilog
                                            1491 * * **** End of Epilogue
                                            1492          DROP  12
                                            1493 *
                                            1494 *   DSECT for automatic variables in "rd_kafka_timer_started"
                                            1495 *      (FUNCTION #1919)
                                            1496 *
00000000                00000000 000000A8   1497 @AUTO#rd_kafka_timer_started DSECT
00000000                                    1498          DS    XL168
                                            1499 *
00000EE0                00000000 00002890   1500 @CODE    CSECT
                                            1501 *
                                            1502 *
                                            1503 *
                                            1504 * ....... start of rd_kafka_timer_scheduled
00000EE0                                    1505 @LNAME1920 DS  0H
00000EE0 00000018                           1506          DC    X'00000018'
00000EE4 99846D9281869281                   1507          DC    C'rd_kafka_timer_scheduled'
00000EFC 00                                 1508          DC    X'00'
                                            1509 rd_kafka_timer_scheduled DCCPRLG CINDEX=1920,BASER=12,FRAME=168,SAVEARE*
                                                                A=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1920
                                            1510          macro
                                            1511          dccextrn &m
                                            1512          gblc    &$dccext(1000)
                                            1513          gbla    &$dccexti
                                            1514          lcla    &i
                                            1515 &$dccext(&$dccexti+1) setc    '&m'
                                            1516 &i       seta    1
                                            1517 .loop    aif    (&i gt &$dccexti).around
                                            1518          aif    ('&$dccext(&i)' eq '&m').getout
                                            1519 &i       seta    &i+1
                                            1520          ago     .loop
                                            1521 .around  anop
                                            1522 &$dccexti seta &$dccexti+1
                                            1523          extrn  &m
                                            1524 .getout  anop
                                            1525          mend
00000F00                                    1526+$eye0035    ds    0d                                                    02-DCCCA
00000F00 C4C3C3                             1527+         dc cl3'DCC'                                                    02-DCCCA
00000F03 01                                 1528+         dc xl1'01' format one                                          02-DCCCA
00000F04 00000000                           1529+         dc a(0)                                                        02-DCCCA
00000F08 0000000000000000                   1530+         dc ad(0)                                                       02-DCCCA
00000F10 00000000000000A8                   1531+         dc ad(168)                                                     02-DCCCA
00000F18 0000000000000000                   1532+         dc ad(0)                                                       02-DCCCA
00000F20 0000000000001000                   1533+         dc ad(4096)                                                    02-DCCCA
00000F28 20                                 1534+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000F29 03                                 1535+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000F2A 03                                 1536+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page   35 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000F2B 08                                 1537+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000F2C 00                                 1538+         dc bl.8'00000000'                                              02-DCCCA
00000F2D 000000                             1539+         dc al3(0)                                                      02-DCCCA
00000F30 0000000000000EE0                   1540+         dc ad(@LNAME1920)                                              02-DCCCA
00000F38                                    1541+         ds 0d                                                          02-DCCCA
00000F38 0000000000000F00                   1542+         dc ad($eye0035)                                                02-DCCCA
00000F40 0000000000000000                   1543+         dc ad(0)                                                       02-DCCCA
00000F48                                    1544+         ds    0d                                                       01-DCCPR
00000F48                                    1545+rd_kafka_timer_scheduled ds 0d                                          01-DCCPR
00000F48                                    1546+@REGION_1920_1 ds 0h                                                    01-DCCPR
00000F48 EBEC D008 0024          00000008   1547+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000F4E B904 00CF                          1548+         lgr   12,15               set base reg                         01-DCCPR
                        00000F48            1549+         using @REGION_1920_1,12                                        01-DCCPR
                                            1550 * ******* End of Prologue
                                            1551 * *
                                            1552 * ***      return rtmr->rtmr_next ? 1 : 0;
00000F52 E3F0 1000 0004          00000000   1553          LG    15,0(0,1)   ; rtmr
00000F58 E3F0 F010 0002          00000010   1554          LTG   15,16(0,15) ; offset of rtmr_next in rd_kafka_timer_s
00000F5E 4780 C022               00000F6A   1555          BZ    @L632
00000F62 A7F8 0001               00000001   1556          LHI   15,1        ; 1
00000F66 47F0 C026               00000F6E   1557          B     @L633
00000F6A                                    1558 @L632    DS    0H
00000F6A A7F8 0000               00000000   1559          LHI   15,0        ; 0
00000F6E                                    1560 @L633    DS    0H
00000F6E B914 00FF                          1561          LGFR  15,15
                                            1562 * ***   }
                                            1563 * * **** Start of Epilogue
                                            1564          DCCEPIL
00000F72                                    1565+         ds 0h                                                          01-DCCEP
                                            1566+* Epilog
                                            1567+* Epilog
00000F72 E3E0 D008 0004          00000008   1568+         lg    14,8(,13) restore the reg                                01-DCCEP
00000F78 EB1C D020 0004          00000020   1569+         lmg   1,12,32(13)                                              01-DCCEP
00000F7E 07FE                               1570+         br   14                                                        01-DCCEP
                                            1571+* End of Epilog
                                            1572 * * **** End of Epilogue
                                            1573          DROP  12
                                            1574 *
                                            1575 *   DSECT for automatic variables in "rd_kafka_timer_scheduled"
                                            1576 *      (FUNCTION #1920)
                                            1577 *
00000000                00000000 000000A8   1578 @AUTO#rd_kafka_timer_scheduled DSECT
00000000                                    1579          DS    XL168
                                            1580 *
00000F80                00000000 00002890   1581 @CODE    CSECT
                                            1582 *
                                            1583 *
                                            1584 *
                                            1585 * ....... start of rd_kafka_timer_cmp
00000F80                                    1586 @LNAME1921 DS  0H
00000F80 00000012                           1587          DC    X'00000012'
00000F84 99846D9281869281                   1588          DC    C'rd_kafka_timer_cmp'
                                                                                                                           Page   36 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00000F96 00                                 1589          DC    X'00'
                                            1590 rd_kafka_timer_cmp DCCPRLG CINDEX=1921,BASER=12,FRAME=176,SAVEAREA=NO,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1921
                                            1591          macro
                                            1592          dccextrn &m
                                            1593          gblc    &$dccext(1000)
                                            1594          gbla    &$dccexti
                                            1595          lcla    &i
                                            1596 &$dccext(&$dccexti+1) setc    '&m'
                                            1597 &i       seta    1
                                            1598 .loop    aif    (&i gt &$dccexti).around
                                            1599          aif    ('&$dccext(&i)' eq '&m').getout
                                            1600 &i       seta    &i+1
                                            1601          ago     .loop
                                            1602 .around  anop
                                            1603 &$dccexti seta &$dccexti+1
                                            1604          extrn  &m
                                            1605 .getout  anop
                                            1606          mend
00000F98                                    1607+$eye0038    ds    0d                                                    02-DCCCA
00000F98 C4C3C3                             1608+         dc cl3'DCC'                                                    02-DCCCA
00000F9B 01                                 1609+         dc xl1'01' format one                                          02-DCCCA
00000F9C 00000000                           1610+         dc a(0)                                                        02-DCCCA
00000FA0 0000000000000000                   1611+         dc ad(0)                                                       02-DCCCA
00000FA8 00000000000000B0                   1612+         dc ad(176)                                                     02-DCCCA
00000FB0 0000000000000000                   1613+         dc ad(0)                                                       02-DCCCA
00000FB8 0000000000001000                   1614+         dc ad(4096)                                                    02-DCCCA
00000FC0 20                                 1615+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000FC1 03                                 1616+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000FC2 03                                 1617+         dc al1(3)                                                      02-DCCCA
00000FC3 08                                 1618+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000FC4 00                                 1619+         dc bl.8'00000000'                                              02-DCCCA
00000FC5 000000                             1620+         dc al3(0)                                                      02-DCCCA
00000FC8 0000000000000F80                   1621+         dc ad(@LNAME1921)                                              02-DCCCA
00000FD0                                    1622+         ds 0d                                                          02-DCCCA
00000FD0 0000000000000F98                   1623+         dc ad($eye0038)                                                02-DCCCA
00000FD8 0000000000000000                   1624+         dc ad(0)                                                       02-DCCCA
00000FE0                                    1625+         ds    0d                                                       01-DCCPR
00000FE0                                    1626+rd_kafka_timer_cmp ds 0d                                                01-DCCPR
00000FE0                                    1627+@REGION_1921_1 ds 0h                                                    01-DCCPR
00000FE0 EBEC D008 0024          00000008   1628+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000FE6 B904 00CF                          1629+         lgr   12,15               set base reg                         01-DCCPR
                        00000FE0            1630+         using @REGION_1921_1,12                                        01-DCCPR
                                            1631 * ******* End of Prologue
                                            1632 * *
                                            1633 * ***      const rd_kafka_timer_t *a = _a, *b = _b;
00000FEA E3F0 1000 0004          00000000   1634          LG    15,0(0,1)   ; _a
00000FF0 E310 1008 0004          00000008   1635          LG    1,8(0,1)    ; _b
                                            1636 * ***           return (int)((a->rtmr_next) < (b->rtmr_next) ? -1 : ((\
                                            1637 * a->rtmr_next) > (b->rtmr_next)));
00000FF6 E320 F010 0004          00000010   1638          LG    2,16(0,15)  ; offset of rtmr_next in rd_kafka_timer_s
00000FFC E320 1010 0020          00000010   1639          CG    2,16(0,1)
                                                                                                                           Page   37 
  Active Usings: @REGION_1921_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001002 47B0 C02E               0000100E   1640          BNL   @L634
00001006 A7F8 FFFF               0000FFFF   1641          LHI   15,-1       ; -1
0000100A 47F0 C04A               0000102A   1642          B     @L635
0000100E                                    1643 @L634    DS    0H
0000100E E3F0 F010 0004          00000010   1644          LG    15,16(0,15) ; offset of rtmr_next in rd_kafka_timer_s
00001014 E3F0 1010 0020          00000010   1645          CG    15,16(0,1)
0000101A 47D0 C046               00001026   1646          BNH   @@gen_label75
0000101E A7F8 0001               00000001   1647          LHI   15,1
00001022 47F0 C04A               0000102A   1648          B     @@gen_label76
00001026                                    1649 @@gen_label75 DS 0H
00001026 A7F8 0000               00000000   1650          LHI   15,0
0000102A                                    1651 @@gen_label76 DS 0H
0000102A                                    1652 @L635    DS    0H
0000102A B914 00FF                          1653          LGFR  15,15
                                            1654 * ***   }
                                            1655 * * **** Start of Epilogue
                                            1656          DCCEPIL
0000102E                                    1657+         ds 0h                                                          01-DCCEP
                                            1658+* Epilog
                                            1659+* Epilog
0000102E E3E0 D008 0004          00000008   1660+         lg    14,8(,13) restore the reg                                01-DCCEP
00001034 EB1C D020 0004          00000020   1661+         lmg   1,12,32(13)                                              01-DCCEP
0000103A 07FE                               1662+         br   14                                                        01-DCCEP
                                            1663+* End of Epilog
                                            1664 * * **** End of Epilogue
                                            1665          DROP  12
                                            1666 *
                                            1667 *   DSECT for automatic variables in "rd_kafka_timer_cmp"
                                            1668 *      (FUNCTION #1921)
                                            1669 *
00000000                00000000 000000A8   1670 @AUTO#rd_kafka_timer_cmp DSECT
00000000                                    1671          DS    XL168
                                            1672 *
0000103C                00000000 00002890   1673 @CODE    CSECT
                                            1674 *
                                            1675 *
                                            1676 *
                                            1677 * ....... start of rd_kafka_timer_unschedule
0000103C                                    1678 @LNAME1922 DS  0H
0000103C 00000019                           1679          DC    X'00000019'
00001040 99846D9281869281                   1680          DC    C'rd_kafka_timer_unschedule'
00001059 00                                 1681          DC    X'00'
                                            1682 rd_kafka_timer_unschedule DCCPRLG CINDEX=1922,BASER=12,FRAME=168,SAVEAR*
                                                                EA=NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1922
                                            1683          macro
                                            1684          dccextrn &m
                                            1685          gblc    &$dccext(1000)
                                            1686          gbla    &$dccexti
                                            1687          lcla    &i
                                            1688 &$dccext(&$dccexti+1) setc    '&m'
                                            1689 &i       seta    1
                                            1690 .loop    aif    (&i gt &$dccexti).around
                                                                                                                           Page   38 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1691          aif    ('&$dccext(&i)' eq '&m').getout
                                            1692 &i       seta    &i+1
                                            1693          ago     .loop
                                            1694 .around  anop
                                            1695 &$dccexti seta &$dccexti+1
                                            1696          extrn  &m
                                            1697 .getout  anop
                                            1698          mend
00001060                                    1699+$eye0041    ds    0d                                                    02-DCCCA
00001060 C4C3C3                             1700+         dc cl3'DCC'                                                    02-DCCCA
00001063 01                                 1701+         dc xl1'01' format one                                          02-DCCCA
00001064 00000000                           1702+         dc a(0)                                                        02-DCCCA
00001068 0000000000000000                   1703+         dc ad(0)                                                       02-DCCCA
00001070 00000000000000A8                   1704+         dc ad(168)                                                     02-DCCCA
00001078 0000000000000000                   1705+         dc ad(0)                                                       02-DCCCA
00001080 0000000000001000                   1706+         dc ad(4096)                                                    02-DCCCA
00001088 20                                 1707+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001089 03                                 1708+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000108A 03                                 1709+         dc al1(3)                                                      02-DCCCA
0000108B 08                                 1710+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000108C 00                                 1711+         dc bl.8'00000000'                                              02-DCCCA
0000108D 000000                             1712+         dc al3(0)                                                      02-DCCCA
00001090 000000000000103C                   1713+         dc ad(@LNAME1922)                                              02-DCCCA
00001098                                    1714+         ds 0d                                                          02-DCCCA
00001098 0000000000001060                   1715+         dc ad($eye0041)                                                02-DCCCA
000010A0 0000000000000000                   1716+         dc ad(0)                                                       02-DCCCA
000010A8                                    1717+         ds    0d                                                       01-DCCPR
000010A8                                    1718+rd_kafka_timer_unschedule ds 0d                                         01-DCCPR
000010A8                                    1719+@REGION_1922_1 ds 0h                                                    01-DCCPR
000010A8 EBEC D008 0024          00000008   1720+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000010AE B904 00CF                          1721+         lgr   12,15               set base reg                         01-DCCPR
                        000010A8            1722+         using @REGION_1922_1,12                                        01-DCCPR
                                            1723 * ******* End of Prologue
                                            1724 * *
                                            1725 * ***      do {   if (((rtmr)->rtmr_link .tqe_next) != (((void *)0))) \
                                            1726 * (rtmr)->rtmr_link .tqe_next->rtmr_link .tqe_prev = (rtmr)->rtmr_link\
                                            1727 *  .tqe_prev; else (&rkts->rkts_timers)->tqh_last = (rtmr)->rtmr_link \
                                            1728 * .tqe_prev; *(rtmr)->rtmr_link .tqe_prev = (rtmr)->rtmr_link .tqe_nex\
                                            1729 * t; ; } while ( 0);
000010B2 E3F0 1008 0004          00000008   1730          LG    15,8(0,1)   ; rtmr
000010B8                                    1731 @L636    DS    0H
000010B8 E320 F000 0002          00000000   1732          LTG   2,0(0,15)   ; rtmr
000010BE 4780 C02A               000010D2   1733          BE    @L639
000010C2 EB12 F000 0004          00000000   1734          LMG   1,2,0(15)   ; rtmr
000010C8 E320 1008 0024          00000008   1735          STG   2,8(0,1)    ; offset of tqe_prev in 0000045
000010CE 47F0 C03C               000010E4   1736          B     @L640
000010D2                                    1737 @L639    DS    0H
000010D2 E310 1000 0004          00000000   1738          LG    1,0(0,1)    ; rkts
000010D8 E320 F008 0004          00000008   1739          LG    2,8(0,15)   ; offset of tqe_prev in 0000045
000010DE E320 1008 0024          00000008   1740          STG   2,8(0,1)    ; offset of tqh_last in 0000044
000010E4                                    1741 @L640    DS    0H
000010E4 E310 F008 0004          00000008   1742          LG    1,8(0,15)   ; offset of tqe_prev in 0000045
                                                                                                                           Page   39 
  Active Usings: @REGION_1922_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000010EA E320 F000 0004          00000000   1743          LG    2,0(0,15)   ; rtmr
000010F0 E320 1000 0024          00000000   1744          STG   2,0(0,1)
                                            1745 * ***      rtmr->rtmr_next = 0;
000010F6 E548 F010 0000          00000010   1746          MVGHI 16(15),0    ; offset of rtmr_next in rd_kafka_timer_s
                                            1747 * ***   }
000010FC                                    1748 @ret_lab_1922 DS 0H
                                            1749 * * **** Start of Epilogue
                                            1750          DCCEPIL
000010FC                                    1751+         ds 0h                                                          01-DCCEP
                                            1752+* Epilog
                                            1753+* Epilog
000010FC E3E0 D008 0004          00000008   1754+         lg    14,8(,13) restore the reg                                01-DCCEP
00001102 EB1C D020 0004          00000020   1755+         lmg   1,12,32(13)                                              01-DCCEP
00001108 07FE                               1756+         br   14                                                        01-DCCEP
                                            1757+* End of Epilog
                                            1758 * * **** End of Epilogue
                                            1759          DROP  12
                                            1760 *
                                            1761 *   DSECT for automatic variables in "rd_kafka_timer_unschedule"
                                            1762 *      (FUNCTION #1922)
                                            1763 *
00000000                00000000 000000A8   1764 @AUTO#rd_kafka_timer_unschedule DSECT
00000000                                    1765          DS    XL168
                                            1766 *
0000110A                00000000 00002890   1767 @CODE    CSECT
                                            1768 *
                                            1769 *
                                            1770 *
                                            1771 * ....... start of rd_kafka_timer_schedule_next
0000110A                                    1772 @LNAME1923 DS  0H
0000110A 0000001C                           1773          DC    X'0000001C'
0000110E 99846D9281869281                   1774          DC    C'rd_kafka_timer_schedule_next'
0000112A 00                                 1775          DC    X'00'
                                            1776 rd_kafka_timer_schedule_next DCCPRLG CINDEX=1923,BASER=12,FRAME=192,ENT*
                                                                RY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME1923
                                            1777          macro
                                            1778          dccextrn &m
                                            1779          gblc    &$dccext(1000)
                                            1780          gbla    &$dccexti
                                            1781          lcla    &i
                                            1782 &$dccext(&$dccexti+1) setc    '&m'
                                            1783 &i       seta    1
                                            1784 .loop    aif    (&i gt &$dccexti).around
                                            1785          aif    ('&$dccext(&i)' eq '&m').getout
                                            1786 &i       seta    &i+1
                                            1787          ago     .loop
                                            1788 .around  anop
                                            1789 &$dccexti seta &$dccexti+1
                                            1790          extrn  &m
                                            1791 .getout  anop
                                            1792          mend
00001130                                    1793+$eye0044    ds    0d                                                    02-DCCCA
                                                                                                                           Page   40 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001130 C4C3C3                             1794+         dc cl3'DCC'                                                    02-DCCCA
00001133 01                                 1795+         dc xl1'01' format one                                          02-DCCCA
00001134 00000000                           1796+         dc a(0)                                                        02-DCCCA
00001138 00000000000011A2                   1797+         dc ad(@PER_1923)                                               02-DCCCA
00001140 00000000000000C0                   1798+         dc ad(192)                                                     02-DCCCA
00001148 0000000000000000                   1799+         dc ad(0)                                                       02-DCCCA
00001150 0000000000001000                   1800+         dc ad(4096)                                                    02-DCCCA
00001158 20                                 1801+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001159 03                                 1802+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000115A 03                                 1803+         dc al1(3)                                                      02-DCCCA
0000115B 08                                 1804+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000115C 00                                 1805+         dc bl.8'00000000'                                              02-DCCCA
0000115D 000000                             1806+         dc al3(0)                                                      02-DCCCA
00001160 000000000000110A                   1807+         dc ad(@LNAME1923)                                              02-DCCCA
00001168                                    1808+         ds 0d                                                          02-DCCCA
00001168 0000000000001130                   1809+         dc ad($eye0044)                                                02-DCCCA
00001170 0000000000000000                   1810+         dc ad(0)                                                       02-DCCCA
00001178                                    1811+         ds    0d                                                       01-DCCPR
00001178                                    1812+rd_kafka_timer_schedule_next ds 0d                                      01-DCCPR
00001178                                    1813+@REGION_1923_1 ds 0h                                                    01-DCCPR
00001178 EBEC D008 0024          00000008   1814+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000117E E3E0 D088 0004          00000088   1815+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001184 E3C0 D090 0004          00000090   1816+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000118A B904 002E                          1817+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000118E E3B0 C018 0004          00000018   1818+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001194 A7EB 00C0               000000C0   1819+         aghi  14,192              increase by frame size               01-DCCPR
00001198 E3E0 C020 0021          00000020   1820+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000119E 4720 B020               00000020   1821+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000011A2                                    1822+@PER_1923 ds   0h                                                       01-DCCPR
000011A2 EBDE 2080 0024          00000080   1823+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000011A8 E3C0 2090 0024          00000090   1824+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000011AE B904 00D2                          1825+         lgr   13,2                set real frame pointer               01-DCCPR
000011B2 B904 00CF                          1826+         lgr   12,15               set base reg                         01-DCCPR
                        00001178            1827+         using @REGION_1923_1,12                                        01-DCCPR
                                            1828 * ******* End of Prologue
                                            1829 * *
000011B6 EB34 1000 0004          00000000   1830          LMG   3,4,0(1)    ; rkts
                                            1831 * ***           rd_kafka_timer_t *first;
                                            1832 * ***
                                            1833 * ***           rtmr->rtmr_next = abs_time;
000011BC E3F0 1010 0004          00000010   1834          LG    15,16(0,1)  ; abs_time
000011C2 E3F0 4010 0024          00000010   1835          STG   15,16(0,4)  ; offset of rtmr_next in rd_kafka_timer_s
                                            1836 * ***
                                            1837 * ***           if (!(first = ((&rkts->rkts_timers)->tqh_first)) ||
000011C8 E3F0 3000 0004          00000000   1838          LG    15,0(0,3)   ; rkts
000011CE B902 001F                          1839          LTGR  1,15
000011D2 4780 C06E               000011E6   1840          BZ    @L643
                                            1841 * ***               first->rtmr_next > rtmr->rtmr_next) {
000011D6 E3F0 F010 0004          00000010   1842          LG    15,16(0,15) ; offset of rtmr_next in rd_kafka_timer_s
000011DC E3F0 4010 0020          00000010   1843          CG    15,16(0,4)
000011E2 47D0 C106               0000127E   1844          BNH   @L650
000011E6                                    1845 @L642    DS    0H
                                                                                                                           Page   41 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1846 * ***                   do {  if (((rtmr)->rtmr_link .tqe_next = (&rkt\
                                            1847 * s->rkts_timers)->tqh_first) != (((void *)0))) (&rkts->rkts_timers)->\
                                            1848 * tqh_first->rtmr_link .tqe_prev = &(rtmr)->rtmr_link .tqe_next; else \
                                            1849 * (&rkts->rkts_timers)->tqh_last = &(rtmr)->rtmr_link .tqe_next; (&rkt\
                                            1850 * s->rkts_timers)->tqh_first = (rtmr); (rtmr)->rtmr_link .tqe_prev = &\
                                            1851 * (&rkts->rkts_timers)->tqh_first; } while ( 0);
000011E6                                    1852 @L643    DS    0H
000011E6 E3F0 3000 0004          00000000   1853          LG    15,0(0,3)   ; rkts
000011EC E3F0 4000 0024          00000000   1854          STG   15,0(0,4)
000011F2 B902 00FF                          1855          LTGR  15,15
000011F6 4780 C0B8               00001230   1856          BE    @L646
000011FA E3F0 3000 0004          00000000   1857          LG    15,0(0,3)   ; rkts
00001200 E340 F008 0024          00000008   1858          STG   4,8(0,15)   ; offset of tqe_prev in 0000045
00001206 47F0 C0BE               00001236   1859          B     @L647
00001210                                    1860          DS    0D
00001210 000000C0                           1861 @FRAMESIZE_1923 DC F'192'
00001214 00000000
00001218 0000000000000000                   1862 @lit_1923_46 DC AD(cnd_signal)
00001220 0000000000000A50                   1863 @lit_1923_47 DC AD(rd_kafka_q_yield)
00001228 0000000000000FE0                   1864 @lit_1923_48 DC AD(rd_kafka_timer_cmp)
00001230                                    1865 @L646    DS    0H
00001230 E340 3008 0024          00000008   1866          STG   4,8(0,3)    ; offset of tqh_last in 0000044
00001236                                    1867 @L647    DS    0H
00001236 E340 3000 0024          00000000   1868          STG   4,0(0,3)    ; rkts
0000123C E330 4008 0024          00000008   1869          STG   3,8(0,4)    ; offset of tqe_prev in 0000045
                                            1870 * ***                   cnd_signal(&rkts->rkts_cond);
00001242 41F0 3040               00000040   1871          LA    15,64(0,3)
00001246 E3F0 D0B0 0024          000000B0   1872          STG   15,176(0,13)
0000124C 4110 D0B0               000000B0   1873          LA    1,176(0,13)
00001250 E3F0 C0A0 0004          00001218   1874          LG    15,@lit_1923_46 ; cnd_signal
00001256                                    1875 @@gen_label81 DS    0H
00001256 05EF                               1876          BALR  14,15
00001258                                    1877 @@gen_label82 DS    0H
                                            1878 * ***                   if (rkts->rkts_wakeq)
00001258 E3F0 3070 0002          00000070   1879          LTG   15,112(0,3) ; offset of rkts_wakeq in rd_kafka_timers_s
0000125E 4780 C1EC               00001364   1880          BZ    @L649
                                            1881 * ***                           rd_kafka_q_yield(rkts->rkts_wakeq);
00001262 E3F0 3070 0004          00000070   1882          LG    15,112(0,3)
00001268 E3F0 D0B0 0024          000000B0   1883          STG   15,176(0,13)
0000126E 4110 D0B0               000000B0   1884          LA    1,176(0,13)
00001272 E3F0 C0A8 0004          00001220   1885          LG    15,@lit_1923_47 ; rd_kafka_q_yield
00001278                                    1886 @@gen_label84 DS    0H
00001278 05EF                               1887          BALR  14,15
0000127A                                    1888 @@gen_label85 DS    0H
0000127A                                    1889 @L648    DS    0H
                                            1890 * ***           } else
0000127A 47F0 C1EC               00001364   1891          B     @L649
                                            1892 * ***                   do { if(((&rkts->rkts_timers)->tqh_first) == (\
                                            1893 * (void *)0)) { do {  if (((rtmr)->rtmr_link .tqe_next = (&rkts->rkts_\
                                            1894 * timers)->tqh_first) != (((void *)0))) (&rkts->rkts_timers)->tqh_firs\
                                            1895 * t->rtmr_link .tqe_prev = &(rtmr)->rtmr_link .tqe_next; else (&rkts->\
                                            1896 * rkts_timers)->tqh_last = &(rtmr)->rtmr_link .tqe_next; (&rkts->rkts_\
                                                                                                                           Page   42 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            1897 * timers)->tqh_first = (rtmr); (rtmr)->rtmr_link .tqe_prev = &(&rkts->\
                                            1898 * rkts_timers)->tqh_first; } while ( 0); } else { rd_kafka_timer_t * _\
                                            1899 * tmp; for ((_tmp) = ((&rkts->rkts_timers)->tqh_first); (_tmp) != (((v\
                                            1900 * oid *)0)); (_tmp) = ((_tmp)->rtmr_link .tqe_next)) { if(rd_kafka_tim\
                                            1901 * er_cmp(rtmr,_tmp) < 0) { do {  (rtmr)->rtmr_link .tqe_prev = (_tmp)-\
                                            1902 * >rtmr_link .tqe_prev; (rtmr)->rtmr_link .tqe_next = (_tmp); *(_tmp)-\
                                            1903 * >rtmr_link .tqe_prev = (rtmr); (_tmp)->rtmr_link .tqe_prev = &(rtmr)\
                                            1904 * ->rtmr_link .tqe_next; } while ( 0); break; } if(!((_tmp)->rtmr_link\
                                            1905 *  .tqe_next)) { do {  if (((rtmr)->rtmr_link .tqe_next = (_tmp)->rtmr\
                                            1906 * _link .tqe_next) != (((void *)0))) (rtmr)->rtmr_link .tqe_next->rtmr\
                                            1907 * _link .tqe_prev = &(rtmr)->rtmr_link .tqe_next; else (&rkts->rkts_ti\
                                            1908 * mers)->tqh_last = &(rtmr)->rtmr_link .tqe_next; (_tmp)->rtmr_link .t\
                                            1909 * qe_next = (rtmr); (rtmr)->rtmr_link .tqe_prev = &(_tmp)->rtmr_link .\
                                            1910 * tqe_next; } while ( 0); break; } } } } while(0);
0000127E                                    1911 @L650    DS    0H
0000127E E3F0 3000 0002          00000000   1912          LTG   15,0(0,3)   ; rkts
00001284 4770 C14A               000012C2   1913          BNE   @L653
00001288                                    1914 @L654    DS    0H
00001288 E3F0 3000 0004          00000000   1915          LG    15,0(0,3)   ; rkts
0000128E E3F0 4000 0024          00000000   1916          STG   15,0(0,4)
00001294 B902 00FF                          1917          LTGR  15,15
00001298 4780 C134               000012AC   1918          BE    @L657
0000129C E3F0 3000 0004          00000000   1919          LG    15,0(0,3)   ; rkts
000012A2 E340 F008 0024          00000008   1920          STG   4,8(0,15)   ; offset of tqe_prev in 0000045
000012A8 47F0 C13A               000012B2   1921          B     @L658
000012AC                                    1922 @L657    DS    0H
000012AC E340 3008 0024          00000008   1923          STG   4,8(0,3)    ; offset of tqh_last in 0000044
000012B2                                    1924 @L658    DS    0H
000012B2 E340 3000 0024          00000000   1925          STG   4,0(0,3)    ; rkts
000012B8 E330 4008 0024          00000008   1926          STG   3,8(0,4)    ; offset of tqe_prev in 0000045
000012BE 47F0 C1EC               00001364   1927          B     @L659
000012C2                                    1928 @L653    DS    0H
000012C2 E320 3000 0004          00000000   1929          LG    2,0(0,3)    ; rkts
000012C8 47F0 C1E4               0000135C   1930          B     @L661
000012CC                                    1931 @L660    DS    0H
000012CC E340 D0B0 0024          000000B0   1932          STG   4,176(0,13)
000012D2 E320 D0B8 0024          000000B8   1933          STG   2,184(0,13)
000012D8 4110 D0B0               000000B0   1934          LA    1,176(0,13)
000012DC E3F0 C0B0 0004          00001228   1935          LG    15,@lit_1923_48 ; rd_kafka_timer_cmp
000012E2                                    1936 @@gen_label88 DS    0H
000012E2 05EF                               1937          BALR  14,15
000012E4                                    1938 @@gen_label89 DS    0H
000012E4 12FF                               1939          LTR   15,15
000012E6 47B0 C19A               00001312   1940          BNL   @L664
000012EA                                    1941 @L665    DS    0H
000012EA E3F0 2008 0004          00000008   1942          LG    15,8(0,2)   ; offset of tqe_prev in 0000045
000012F0 E3F0 4008 0024          00000008   1943          STG   15,8(0,4)   ; offset of tqe_prev in 0000045
000012F6 E320 4000 0024          00000000   1944          STG   2,0(0,4)    ; rtmr
000012FC E3F0 2008 0004          00000008   1945          LG    15,8(0,2)   ; offset of tqe_prev in 0000045
00001302 E340 F000 0024          00000000   1946          STG   4,0(0,15)
00001308 E340 2008 0024          00000008   1947          STG   4,8(0,2)    ; offset of tqe_prev in 0000045
0000130E 47F0 C1EC               00001364   1948          B     @L662
                                                                                                                           Page   43 
  Active Usings: @REGION_1923_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001312                                    1949 @L664    DS    0H
00001312 E3F0 2000 0002          00000000   1950          LTG   15,0(0,2)   ; _tmp
00001318 4770 C1DE               00001356   1951          BNZ   @L668
0000131C                                    1952 @L669    DS    0H
0000131C E3F0 2000 0004          00000000   1953          LG    15,0(0,2)   ; _tmp
00001322 E3F0 4000 0024          00000000   1954          STG   15,0(0,4)
00001328 B902 00FF                          1955          LTGR  15,15
0000132C 4780 C1C8               00001340   1956          BE    @L672
00001330 E3F0 4000 0004          00000000   1957          LG    15,0(0,4)   ; rtmr
00001336 E340 F008 0024          00000008   1958          STG   4,8(0,15)   ; offset of tqe_prev in 0000045
0000133C 47F0 C1CE               00001346   1959          B     @L673
00001340                                    1960 @L672    DS    0H
00001340 E340 3008 0024          00000008   1961          STG   4,8(0,3)    ; offset of tqh_last in 0000044
00001346                                    1962 @L673    DS    0H
00001346 E340 2000 0024          00000000   1963          STG   4,0(0,2)    ; _tmp
0000134C E320 4008 0024          00000008   1964          STG   2,8(0,4)    ; offset of tqe_prev in 0000045
00001352 47F0 C1EC               00001364   1965          B     @L662
00001356                                    1966 @L668    DS    0H
00001356 E320 2000 0004          00000000   1967          LG    2,0(0,2)    ; _tmp
0000135C                                    1968 @L661    DS    0H
0000135C B902 00F2                          1969          LTGR  15,2
00001360 4770 C154               000012CC   1970          BNE   @L660
00001364                                    1971 @L662    DS    0H
00001364                                    1972 @L659    DS    0H
                                            1973 * ***
                                            1974 * ***
                                            1975 * ***   }
00001364                                    1976 @L649    DS    0H
00001364                                    1977 @ret_lab_1923 DS 0H
                                            1978 * * **** Start of Epilogue
                                            1979          DCCEPIL
00001364                                    1980+         ds 0h                                                          01-DCCEP
                                            1981+* Epilog
00001364 D707 D088 D088 00000088 00000088   1982+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000136A E3D0 D080 0004          00000080   1983+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001370 E3C0 D090 0004          00000090   1984+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001376 E3B0 C018 0004          00000018   1985+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000137C E3C0 B010 0021          00000010   1986+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001382 E3E0 D008 0004          00000008   1987+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001388 EB1C D020 0004          00000020   1988+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000138E 078E                               1989+         bcr 8,14                if same dsab, just return              01-DCCEP
00001390 E3F0 D010 0024          00000010   1990+         stg 15,16(0,13)         save return code                       01-DCCEP
00001396 E300 D018 0024          00000018   1991+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000139C E3F0 D090 0004          00000090   1992+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000013A2 E3F0 F018 0004          00000018   1993+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000013A8 47F0 F040               00000040   1994+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1995+* End of Epilog
                                            1996 * * **** End of Epilogue
                                            1997          DROP  12
                                            1998 *
                                            1999 *   DSECT for automatic variables in "rd_kafka_timer_schedule_next"
                                            2000 *      (FUNCTION #1923)
                                                                                                                           Page   44 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2001 *
00000000                00000000 000000A8   2002 @AUTO#rd_kafka_timer_schedule_next DSECT
00000000                                    2003          DS    XL168
                                            2004 *
000013AC                00000000 00002890   2005 @CODE    CSECT
                                            2006 *
                                            2007 *
                                            2008 *
                                            2009 * ....... start of rd_kafka_timer_schedule
000013AC                                    2010 @LNAME1924 DS  0H
000013AC 00000017                           2011          DC    X'00000017'
000013B0 99846D9281869281                   2012          DC    C'rd_kafka_timer_schedule'
000013C7 00                                 2013          DC    X'00'
                                            2014 rd_kafka_timer_schedule DCCPRLG CINDEX=1924,BASER=12,FRAME=192,ENTRY=NO*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME1924
                                            2015          macro
                                            2016          dccextrn &m
                                            2017          gblc    &$dccext(1000)
                                            2018          gbla    &$dccexti
                                            2019          lcla    &i
                                            2020 &$dccext(&$dccexti+1) setc    '&m'
                                            2021 &i       seta    1
                                            2022 .loop    aif    (&i gt &$dccexti).around
                                            2023          aif    ('&$dccext(&i)' eq '&m').getout
                                            2024 &i       seta    &i+1
                                            2025          ago     .loop
                                            2026 .around  anop
                                            2027 &$dccexti seta &$dccexti+1
                                            2028          extrn  &m
                                            2029 .getout  anop
                                            2030          mend
000013C8                                    2031+$eye0047    ds    0d                                                    02-DCCCA
000013C8 C4C3C3                             2032+         dc cl3'DCC'                                                    02-DCCCA
000013CB 01                                 2033+         dc xl1'01' format one                                          02-DCCCA
000013CC 00000000                           2034+         dc a(0)                                                        02-DCCCA
000013D0 000000000000143A                   2035+         dc ad(@PER_1924)                                               02-DCCCA
000013D8 00000000000000C0                   2036+         dc ad(192)                                                     02-DCCCA
000013E0 0000000000000000                   2037+         dc ad(0)                                                       02-DCCCA
000013E8 0000000000001000                   2038+         dc ad(4096)                                                    02-DCCCA
000013F0 20                                 2039+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000013F1 03                                 2040+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000013F2 03                                 2041+         dc al1(3)                                                      02-DCCCA
000013F3 08                                 2042+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000013F4 00                                 2043+         dc bl.8'00000000'                                              02-DCCCA
000013F5 000000                             2044+         dc al3(0)                                                      02-DCCCA
000013F8 00000000000013AC                   2045+         dc ad(@LNAME1924)                                              02-DCCCA
00001400                                    2046+         ds 0d                                                          02-DCCCA
00001400 00000000000013C8                   2047+         dc ad($eye0047)                                                02-DCCCA
00001408 0000000000000000                   2048+         dc ad(0)                                                       02-DCCCA
00001410                                    2049+         ds    0d                                                       01-DCCPR
00001410                                    2050+rd_kafka_timer_schedule ds 0d                                           01-DCCPR
00001410                                    2051+@REGION_1924_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   45 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001410 EBEC D008 0024          00000008   2052+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001416 E3E0 D088 0004          00000088   2053+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000141C E3C0 D090 0004          00000090   2054+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001422 B904 002E                          2055+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001426 E3B0 C018 0004          00000018   2056+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000142C A7EB 00C0               000000C0   2057+         aghi  14,192              increase by frame size               01-DCCPR
00001430 E3E0 C020 0021          00000020   2058+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001436 4720 B020               00000020   2059+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000143A                                    2060+@PER_1924 ds   0h                                                       01-DCCPR
0000143A EBDE 2080 0024          00000080   2061+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001440 E3C0 2090 0024          00000090   2062+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001446 B904 00D2                          2063+         lgr   13,2                set real frame pointer               01-DCCPR
0000144A B904 00CF                          2064+         lgr   12,15               set base reg                         01-DCCPR
                        00001410            2065+         using @REGION_1924_1,12                                        01-DCCPR
0000144E B904 0031                          2066          LGR   3,1         ; ptr to parm area
                                            2067 * ******* End of Prologue
                                            2068 * *
00001452 E320 3008 0004          00000008   2069          LG    2,8(0,3)    ; rtmr
                                            2070 * ***
                                            2071 * ***
                                            2072 * ***      if (!rtmr->rtmr_interval)
00001458 E3F0 2018 0002          00000018   2073          LTG   15,24(0,2)  ; offset of rtmr_interval in rd_kafka_timer_*
                                                                s
0000145E 4780 C094               000014A4   2074          BZ    @ret_lab_1924
                                            2075 * ***         return;
00001462                                    2076 @L674    DS    0H
                                            2077 * ***
                                            2078 * ***
                                            2079 * ***           if (((!rkts->rkts_enabled)))
00001462 E340 3000 0004          00000000   2080          LG    4,0(0,3)    ; rkts
00001468 E3F0 4078 0012          00000078   2081          LT    15,120(0,4) ; offset of rkts_enabled in rd_kafka_timers_*
                                                                s
0000146E 4780 C094               000014A4   2082          BZ    @ret_lab_1924
                                            2083 * ***                   return;
00001472                                    2084 @L675    DS    0H
                                            2085 * ***
                                            2086 * ***           rd_kafka_timer_schedule_next(
                                            2087 * ***                   rkts, rtmr, rd_clock() + rtmr->rtmr_interval +\
                                            2088 *  extra_us);
00001472 E3F0 C0E8 0004          000014F8   2089          LG    15,@lit_1924_50 ; rd_clock
00001478                                    2090 @@gen_label96 DS    0H
00001478 05EF                               2091          BALR  14,15
0000147A                                    2092 @@gen_label97 DS    0H
0000147A E3F0 2018 0008          00000018   2093          AG    15,24(0,2)
00001480 E3F0 3014 0018          00000014   2094          AGF   15,20(0,3)
00001486 E340 D0A8 0024          000000A8   2095          STG   4,168(0,13)
0000148C E320 D0B0 0024          000000B0   2096          STG   2,176(0,13)
00001492 E3F0 D0B8 0024          000000B8   2097          STG   15,184(0,13)
00001498 4110 D0A8               000000A8   2098          LA    1,168(0,13)
0000149C E3F0 C0F0 0004          00001500   2099          LG    15,@lit_1924_51 ; rd_kafka_timer_schedule_next
000014A2                                    2100 @@gen_label98 DS    0H
000014A2 05EF                               2101          BALR  14,15
                                                                                                                           Page   46 
  Active Usings: @REGION_1924_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000014A4                                    2102 @@gen_label99 DS    0H
                                            2103 * ***   }
000014A4                                    2104 @ret_lab_1924 DS 0H
                                            2105 * * **** Start of Epilogue
                                            2106          DCCEPIL
000014A4                                    2107+         ds 0h                                                          01-DCCEP
                                            2108+* Epilog
000014A4 D707 D088 D088 00000088 00000088   2109+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000014AA E3D0 D080 0004          00000080   2110+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000014B0 E3C0 D090 0004          00000090   2111+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000014B6 E3B0 C018 0004          00000018   2112+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000014BC E3C0 B010 0021          00000010   2113+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000014C2 E3E0 D008 0004          00000008   2114+         lg  14,8(0,13)          load up return address                 01-DCCEP
000014C8 EB1C D020 0004          00000020   2115+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000014CE 078E                               2116+         bcr 8,14                if same dsab, just return              01-DCCEP
000014D0 E3F0 D010 0024          00000010   2117+         stg 15,16(0,13)         save return code                       01-DCCEP
000014D6 E300 D018 0024          00000018   2118+         stg 0,24(0,13)          save more return code                  01-DCCEP
000014DC E3F0 D090 0004          00000090   2119+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000014E2 E3F0 F018 0004          00000018   2120+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000014E8 47F0 F040               00000040   2121+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2122+* End of Epilog
                                            2123 * * **** End of Epilogue
000014F0                                    2124          DS    0D
000014F0 000000C0                           2125 @FRAMESIZE_1924 DC F'192'
000014F4 00000000
000014F8 0000000000000190                   2126 @lit_1924_50 DC AD(rd_clock)
00001500 0000000000001178                   2127 @lit_1924_51 DC AD(rd_kafka_timer_schedule_next)
                                            2128          DROP  12
                                            2129 *
                                            2130 *   DSECT for automatic variables in "rd_kafka_timer_schedule"
                                            2131 *      (FUNCTION #1924)
                                            2132 *
00000000                00000000 000000A8   2133 @AUTO#rd_kafka_timer_schedule DSECT
00000000                                    2134          DS    XL168
                                            2135 *
00001508                00000000 00002890   2136 @CODE    CSECT
                                            2137 *
                                            2138 *
                                            2139 *
                                            2140 * ....... start of rd_kafka_timer_stop
                                            2141 rd_kafka_timer_stop ALIAS X'99846D92818692816DA3899485996DA2A39697'
00001508                                    2142 @LNAME1373 DS  0H
00001508 00000013                           2143          DC    X'00000013'
0000150C 99846D9281869281                   2144          DC    C'rd_kafka_timer_stop'
0000151F 00                                 2145          DC    X'00'
                                            2146 rd_kafka_timer_stop DCCPRLG CINDEX=1373,BASER=12,FRAME=184,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1373
                                            2147          macro
                                            2148          dccextrn &m
                                            2149          gblc    &$dccext(1000)
                                            2150          gbla    &$dccexti
                                            2151          lcla    &i
                                                                                                                           Page   47 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2152 &$dccext(&$dccexti+1) setc    '&m'
                                            2153 &i       seta    1
                                            2154 .loop    aif    (&i gt &$dccexti).around
                                            2155          aif    ('&$dccext(&i)' eq '&m').getout
                                            2156 &i       seta    &i+1
                                            2157          ago     .loop
                                            2158 .around  anop
                                            2159 &$dccexti seta &$dccexti+1
                                            2160          extrn  &m
                                            2161 .getout  anop
                                            2162          mend
00001520                                    2163+$eye0050    ds    0d                                                    02-DCCCA
00001520 C4C3C3                             2164+         dc cl3'DCC'                                                    02-DCCCA
00001523 01                                 2165+         dc xl1'01' format one                                          02-DCCCA
00001524 00000000                           2166+         dc a(0)                                                        02-DCCCA
00001528 0000000000001592                   2167+         dc ad(@PER_1373)                                               02-DCCCA
00001530 00000000000000B8                   2168+         dc ad(184)                                                     02-DCCCA
00001538 0000000000000000                   2169+         dc ad(0)                                                       02-DCCCA
00001540 0000000000001000                   2170+         dc ad(4096)                                                    02-DCCCA
00001548 20                                 2171+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001549 03                                 2172+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000154A 03                                 2173+         dc al1(3)                                                      02-DCCCA
0000154B 08                                 2174+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000154C 00                                 2175+         dc bl.8'00000000'                                              02-DCCCA
0000154D 000000                             2176+         dc al3(0)                                                      02-DCCCA
00001550 0000000000001508                   2177+         dc ad(@LNAME1373)                                              02-DCCCA
00001558                                    2178+         ds 0d                                                          02-DCCCA
00001558 0000000000001520                   2179+         dc ad($eye0050)                                                02-DCCCA
00001560 0000000000000000                   2180+         dc ad(0)                                                       02-DCCCA
00001568                                    2181+         ds    0d                                                       01-DCCPR
                                            2182+         entry rd_kafka_timer_stop                                      01-DCCPR
00001568                                    2183+rd_kafka_timer_stop ds 0d                                               01-DCCPR
00001568                                    2184+@REGION_1373_1 ds 0h                                                    01-DCCPR
00001568 EBEC D008 0024          00000008   2185+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000156E E3E0 D088 0004          00000088   2186+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001574 E3C0 D090 0004          00000090   2187+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000157A B904 002E                          2188+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000157E E3B0 C018 0004          00000018   2189+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001584 A7EB 00B8               000000B8   2190+         aghi  14,184              increase by frame size               01-DCCPR
00001588 E3E0 C020 0021          00000020   2191+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000158E 4720 B020               00000020   2192+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001592                                    2193+@PER_1373 ds   0h                                                       01-DCCPR
00001592 EBDE 2080 0024          00000080   2194+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001598 E3C0 2090 0024          00000090   2195+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000159E B904 00D2                          2196+         lgr   13,2                set real frame pointer               01-DCCPR
000015A2 B904 00CF                          2197+         lgr   12,15               set base reg                         01-DCCPR
                        00001568            2198+         using @REGION_1373_1,12                                        01-DCCPR
                                            2199 * ******* End of Prologue
                                            2200 * *
                                            2201 * ***      if (lock)
000015A6 EB23 1000 0004          00000000   2202          LMG   2,3,0(1)    ; rkts
000015AC E340 1014 0012          00000014   2203          LT    4,20(0,1)   ; lock
                                                                                                                           Page   48 
  Active Usings: @REGION_1373_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000015B2 4780 C060               000015C8   2204          BZ    @L676
                                            2205 * ***         rd_kafka_timers_lock(rkts);
000015B6 E320 D0A8 0024          000000A8   2206          STG   2,168(0,13)
000015BC 4110 D0A8               000000A8   2207          LA    1,168(0,13)
000015C0 E3F0 C0A0 0004          00001608   2208          LG    15,@lit_1373_53 ; rd_kafka_timers_lock
000015C6                                    2209 @@gen_label101 DS    0H
000015C6 05EF                               2210          BALR  14,15
000015C8                                    2211 @@gen_label102 DS    0H
000015C8                                    2212 @L676    DS    0H
                                            2213 * ***
                                            2214 * ***      if (!rd_kafka_timer_started(rtmr)) {
000015C8 E330 D0A8 0024          000000A8   2215          STG   3,168(0,13)
000015CE 4110 D0A8               000000A8   2216          LA    1,168(0,13)
000015D2 E3F0 C0A8 0004          00001610   2217          LG    15,@lit_1373_54 ; rd_kafka_timer_started
000015D8                                    2218 @@gen_label103 DS    0H
000015D8 05EF                               2219          BALR  14,15
000015DA                                    2220 @@gen_label104 DS    0H
000015DA 12FF                               2221          LTR   15,15
000015DC 4770 C0C8               00001630   2222          BNZ   @L677
                                            2223 * ***         if (lock)
000015E0 1244                               2224          LTR   4,4
000015E2 4780 C090               000015F8   2225          BZ    @L678
                                            2226 * ***            rd_kafka_timers_unlock(rkts);
000015E6 E320 D0A8 0024          000000A8   2227          STG   2,168(0,13)
000015EC 4110 D0A8               000000A8   2228          LA    1,168(0,13)
000015F0 E3F0 C0B0 0004          00001618   2229          LG    15,@lit_1373_55 ; rd_kafka_timers_unlock
000015F6                                    2230 @@gen_label107 DS    0H
000015F6 05EF                               2231          BALR  14,15
000015F8                                    2232 @@gen_label108 DS    0H
000015F8                                    2233 @L678    DS    0H
                                            2234 * ***         return 0;
000015F8 A7F9 0000               00000000   2235          LGHI  15,0        ; 0
000015FC 47F0 C114               0000167C   2236          B     @ret_lab_1373
00001600                                    2237          DS    0D
00001600 000000B8                           2238 @FRAMESIZE_1373 DC F'184'
00001604 00000000
00001608 0000000000000C68                   2239 @lit_1373_53 DC AD(rd_kafka_timers_lock)
00001610 0000000000000EA8                   2240 @lit_1373_54 DC AD(rd_kafka_timer_started)
00001618 0000000000000D88                   2241 @lit_1373_55 DC AD(rd_kafka_timers_unlock)
00001620 0000000000000F48                   2242 @lit_1373_57 DC AD(rd_kafka_timer_scheduled)
00001628 00000000000010A8                   2243 @lit_1373_58 DC AD(rd_kafka_timer_unschedule)
                                            2244 * ***      }
00001630                                    2245 @L677    DS    0H
                                            2246 * ***
                                            2247 * ***      if (rd_kafka_timer_scheduled(rtmr))
00001630 E330 D0A8 0024          000000A8   2248          STG   3,168(0,13)
00001636 4110 D0A8               000000A8   2249          LA    1,168(0,13)
0000163A E3F0 C0B8 0004          00001620   2250          LG    15,@lit_1373_57 ; rd_kafka_timer_scheduled
00001640                                    2251 @@gen_label109 DS    0H
00001640 05EF                               2252          BALR  14,15
00001642                                    2253 @@gen_label110 DS    0H
00001642 12FF                               2254          LTR   15,15
                                                                                                                           Page   49 
  Active Usings: @REGION_1373_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001644 4780 C0F2               0000165A   2255          BZ    @L679
                                            2256 * ***         rd_kafka_timer_unschedule(rkts, rtmr);
00001648 EB23 D0A8 0024          000000A8   2257          STMG  2,3,168(13)
0000164E 4110 D0A8               000000A8   2258          LA    1,168(0,13)
00001652 E3F0 C0C0 0004          00001628   2259          LG    15,@lit_1373_58 ; rd_kafka_timer_unschedule
00001658                                    2260 @@gen_label112 DS    0H
00001658 05EF                               2261          BALR  14,15
0000165A                                    2262 @@gen_label113 DS    0H
0000165A                                    2263 @L679    DS    0H
                                            2264 * ***
                                            2265 * ***      rtmr->rtmr_interval = 0;
0000165A E548 3018 0000          00000018   2266          MVGHI 24(3),0     ; offset of rtmr_interval in rd_kafka_timer_*
                                                                s
                                            2267 * ***
                                            2268 * ***      if (lock)
00001660 1244                               2269          LTR   4,4
00001662 4780 C110               00001678   2270          BZ    @L680
                                            2271 * ***         rd_kafka_timers_unlock(rkts);
00001666 E320 D0A8 0024          000000A8   2272          STG   2,168(0,13)
0000166C 4110 D0A8               000000A8   2273          LA    1,168(0,13)
00001670 E3F0 C0B0 0004          00001618   2274          LG    15,@lit_1373_55 ; rd_kafka_timers_unlock
00001676                                    2275 @@gen_label115 DS    0H
00001676 05EF                               2276          BALR  14,15
00001678                                    2277 @@gen_label116 DS    0H
00001678                                    2278 @L680    DS    0H
                                            2279 * ***
                                            2280 * ***           return 1;
00001678 A7F9 0001               00000001   2281          LGHI  15,1        ; 1
                                            2282 * ***   }
0000167C                                    2283 @ret_lab_1373 DS 0H
                                            2284 * * **** Start of Epilogue
                                            2285          DCCEPIL
0000167C                                    2286+         ds 0h                                                          01-DCCEP
                                            2287+* Epilog
0000167C D707 D088 D088 00000088 00000088   2288+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001682 E3D0 D080 0004          00000080   2289+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001688 E3C0 D090 0004          00000090   2290+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000168E E3B0 C018 0004          00000018   2291+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001694 E3C0 B010 0021          00000010   2292+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000169A E3E0 D008 0004          00000008   2293+         lg  14,8(0,13)          load up return address                 01-DCCEP
000016A0 EB1C D020 0004          00000020   2294+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000016A6 078E                               2295+         bcr 8,14                if same dsab, just return              01-DCCEP
000016A8 E3F0 D010 0024          00000010   2296+         stg 15,16(0,13)         save return code                       01-DCCEP
000016AE E300 D018 0024          00000018   2297+         stg 0,24(0,13)          save more return code                  01-DCCEP
000016B4 E3F0 D090 0004          00000090   2298+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000016BA E3F0 F018 0004          00000018   2299+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000016C0 47F0 F040               00000040   2300+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2301+* End of Epilog
                                            2302 * * **** End of Epilogue
                                            2303          DROP  12
                                            2304 *
                                            2305 *   DSECT for automatic variables in "rd_kafka_timer_stop"
                                                                                                                           Page   50 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2306 *      (FUNCTION #1373)
                                            2307 *
00000000                00000000 000000A8   2308 @AUTO#rd_kafka_timer_stop DSECT
00000000                                    2309          DS    XL168
                                            2310 *
000016C4                00000000 00002890   2311 @CODE    CSECT
                                            2312 *
                                            2313 *
                                            2314 *
                                            2315 * ....... start of rd_kafka_timer_is_started
                                            2316 rd_kafka_timer_is_started ALIAS X'99846D92818692816DA3899485996D89A26DA*
                                                                2A38199A38584'
000016C4                                    2317 @LNAME1378 DS  0H
000016C4 00000019                           2318          DC    X'00000019'
000016C8 99846D9281869281                   2319          DC    C'rd_kafka_timer_is_started'
000016E1 00                                 2320          DC    X'00'
                                            2321 rd_kafka_timer_is_started DCCPRLG CINDEX=1378,BASER=12,FRAME=184,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME1378
                                            2322          macro
                                            2323          dccextrn &m
                                            2324          gblc    &$dccext(1000)
                                            2325          gbla    &$dccexti
                                            2326          lcla    &i
                                            2327 &$dccext(&$dccexti+1) setc    '&m'
                                            2328 &i       seta    1
                                            2329 .loop    aif    (&i gt &$dccexti).around
                                            2330          aif    ('&$dccext(&i)' eq '&m').getout
                                            2331 &i       seta    &i+1
                                            2332          ago     .loop
                                            2333 .around  anop
                                            2334 &$dccexti seta &$dccexti+1
                                            2335          extrn  &m
                                            2336 .getout  anop
                                            2337          mend
000016E8                                    2338+$eye0053    ds    0d                                                    02-DCCCA
000016E8 C4C3C3                             2339+         dc cl3'DCC'                                                    02-DCCCA
000016EB 01                                 2340+         dc xl1'01' format one                                          02-DCCCA
000016EC 00000000                           2341+         dc a(0)                                                        02-DCCCA
000016F0 000000000000175A                   2342+         dc ad(@PER_1378)                                               02-DCCCA
000016F8 00000000000000B8                   2343+         dc ad(184)                                                     02-DCCCA
00001700 0000000000000000                   2344+         dc ad(0)                                                       02-DCCCA
00001708 0000000000001000                   2345+         dc ad(4096)                                                    02-DCCCA
00001710 20                                 2346+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001711 03                                 2347+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001712 03                                 2348+         dc al1(3)                                                      02-DCCCA
00001713 08                                 2349+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001714 00                                 2350+         dc bl.8'00000000'                                              02-DCCCA
00001715 000000                             2351+         dc al3(0)                                                      02-DCCCA
00001718 00000000000016C4                   2352+         dc ad(@LNAME1378)                                              02-DCCCA
00001720                                    2353+         ds 0d                                                          02-DCCCA
00001720 00000000000016E8                   2354+         dc ad($eye0053)                                                02-DCCCA
00001728 0000000000000000                   2355+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   51 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001730                                    2356+         ds    0d                                                       01-DCCPR
                                            2357+         entry rd_kafka_timer_is_started                                01-DCCPR
00001730                                    2358+rd_kafka_timer_is_started ds 0d                                         01-DCCPR
00001730                                    2359+@REGION_1378_1 ds 0h                                                    01-DCCPR
00001730 EBEC D008 0024          00000008   2360+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001736 E3E0 D088 0004          00000088   2361+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000173C E3C0 D090 0004          00000090   2362+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001742 B904 002E                          2363+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001746 E3B0 C018 0004          00000018   2364+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000174C A7EB 00B8               000000B8   2365+         aghi  14,184              increase by frame size               01-DCCPR
00001750 E3E0 C020 0021          00000020   2366+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001756 4720 B020               00000020   2367+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000175A                                    2368+@PER_1378 ds   0h                                                       01-DCCPR
0000175A EBDE 2080 0024          00000080   2369+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001760 E3C0 2090 0024          00000090   2370+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001766 B904 00D2                          2371+         lgr   13,2                set real frame pointer               01-DCCPR
0000176A B904 00CF                          2372+         lgr   12,15               set base reg                         01-DCCPR
                        00001730            2373+         using @REGION_1378_1,12                                        01-DCCPR
0000176E B904 0031                          2374          LGR   3,1         ; ptr to parm area
                                            2375 * ******* End of Prologue
                                            2376 * *
                                            2377 * ***           rd_bool_t ret;
                                            2378 * ***           rd_kafka_timers_lock(rkts);
00001772 E3F0 3000 0004          00000000   2379          LG    15,0(0,3)   ; rkts
00001778 E3F0 D0B0 0024          000000B0   2380          STG   15,176(0,13)
0000177E 4110 D0B0               000000B0   2381          LA    1,176(0,13)
00001782 E3F0 C0F0 0004          00001820   2382          LG    15,@lit_1378_62 ; rd_kafka_timers_lock
00001788                                    2383 @@gen_label117 DS    0H
00001788 05EF                               2384          BALR  14,15
0000178A                                    2385 @@gen_label118 DS    0H
                                            2386 * ***           ret = rtmr->rtmr_interval != 0;
0000178A E3F0 3008 0004          00000008   2387          LG    15,8(0,3)   ; rtmr
00001790 A719 0000               00000000   2388          LGHI  1,0         ; 0
00001794 E310 F018 0082          00000018   2389          XG    1,24(0,15)
0000179A B900 0021                          2390          LPGR  2,1
0000179E B903 0022                          2391          LCGR  2,2
000017A2 EB22 003F 000C          0000003F   2392          SRLG  2,2,63(0)
000017A8 4220 D0A8               000000A8   2393          STC   2,168(0,13) ; ret
                                            2394 * ***           rd_kafka_timers_unlock(rkts);
000017AC E3F0 3000 0004          00000000   2395          LG    15,0(0,3)   ; rkts
000017B2 E3F0 D0B0 0024          000000B0   2396          STG   15,176(0,13)
000017B8 4110 D0B0               000000B0   2397          LA    1,176(0,13)
000017BC E3F0 C0F8 0004          00001828   2398          LG    15,@lit_1378_64 ; rd_kafka_timers_unlock
000017C2                                    2399 @@gen_label119 DS    0H
000017C2 05EF                               2400          BALR  14,15
000017C4                                    2401 @@gen_label120 DS    0H
                                            2402 * ***           return ret;
000017C4 E320 C100 0080          00001830   2403          NG    2,@lit_1378_65
000017CA B904 00F2                          2404          LGR   15,2
                                            2405 * ***   }
                                            2406 * * **** Start of Epilogue
                                            2407          DCCEPIL
                                                                                                                           Page   52 
  Active Usings: @REGION_1378_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000017CE                                    2408+         ds 0h                                                          01-DCCEP
                                            2409+* Epilog
000017CE D707 D088 D088 00000088 00000088   2410+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000017D4 E3D0 D080 0004          00000080   2411+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000017DA E3C0 D090 0004          00000090   2412+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000017E0 E3B0 C018 0004          00000018   2413+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000017E6 E3C0 B010 0021          00000010   2414+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000017EC E3E0 D008 0004          00000008   2415+         lg  14,8(0,13)          load up return address                 01-DCCEP
000017F2 EB1C D020 0004          00000020   2416+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000017F8 078E                               2417+         bcr 8,14                if same dsab, just return              01-DCCEP
000017FA E3F0 D010 0024          00000010   2418+         stg 15,16(0,13)         save return code                       01-DCCEP
00001800 E300 D018 0024          00000018   2419+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001806 E3F0 D090 0004          00000090   2420+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000180C E3F0 F018 0004          00000018   2421+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001812 47F0 F040               00000040   2422+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2423+* End of Epilog
                                            2424 * * **** End of Epilogue
00001818                                    2425          DS    0D
00001818 000000B8                           2426 @FRAMESIZE_1378 DC F'184'
0000181C 00000000
00001820 0000000000000C68                   2427 @lit_1378_62 DC AD(rd_kafka_timers_lock)
00001828 0000000000000D88                   2428 @lit_1378_64 DC AD(rd_kafka_timers_unlock)
00001830 00000000000000FF                   2429 @lit_1378_65 DC FD'255' 0x00000000000000ff
                                            2430          DROP  12
                                            2431 *
                                            2432 *   DSECT for automatic variables in "rd_kafka_timer_is_started"
                                            2433 *      (FUNCTION #1378)
                                            2434 *
00000000                00000000 000000A9   2435 @AUTO#rd_kafka_timer_is_started DSECT
00000000                                    2436          DS    XL168
000000A8                                    2437 rd_kafka_timer_is_started#ret#0 DS 1CL1 ; ret
                                            2438 *
00001838                00000000 00002890   2439 @CODE    CSECT
                                            2440 *
                                            2441 *
                                            2442 *
                                            2443 * ....... start of rd_kafka_timer_start0
                                            2444 rd_kafka_timer_start0 ALIAS X'99846D92818692816DA3899485996DA2A38199A3F*
                                                                0'
00001838                                    2445 @LNAME1374 DS  0H
00001838 00000015                           2446          DC    X'00000015'
0000183C 99846D9281869281                   2447          DC    C'rd_kafka_timer_start0'
00001851 00                                 2448          DC    X'00'
                                            2449 rd_kafka_timer_start0 DCCPRLG CINDEX=1374,BASER=12,FRAME=192,ENTRY=YES,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME1374
                                            2450          macro
                                            2451          dccextrn &m
                                            2452          gblc    &$dccext(1000)
                                            2453          gbla    &$dccexti
                                            2454          lcla    &i
                                            2455 &$dccext(&$dccexti+1) setc    '&m'
                                            2456 &i       seta    1
                                                                                                                           Page   53 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2457 .loop    aif    (&i gt &$dccexti).around
                                            2458          aif    ('&$dccext(&i)' eq '&m').getout
                                            2459 &i       seta    &i+1
                                            2460          ago     .loop
                                            2461 .around  anop
                                            2462 &$dccexti seta &$dccexti+1
                                            2463          extrn  &m
                                            2464 .getout  anop
                                            2465          mend
00001858                                    2466+$eye0056    ds    0d                                                    02-DCCCA
00001858 C4C3C3                             2467+         dc cl3'DCC'                                                    02-DCCCA
0000185B 01                                 2468+         dc xl1'01' format one                                          02-DCCCA
0000185C 00000000                           2469+         dc a(0)                                                        02-DCCCA
00001860 00000000000018CA                   2470+         dc ad(@PER_1374)                                               02-DCCCA
00001868 00000000000000C0                   2471+         dc ad(192)                                                     02-DCCCA
00001870 0000000000000000                   2472+         dc ad(0)                                                       02-DCCCA
00001878 0000000000001000                   2473+         dc ad(4096)                                                    02-DCCCA
00001880 20                                 2474+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001881 03                                 2475+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001882 03                                 2476+         dc al1(3)                                                      02-DCCCA
00001883 08                                 2477+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001884 00                                 2478+         dc bl.8'00000000'                                              02-DCCCA
00001885 000000                             2479+         dc al3(0)                                                      02-DCCCA
00001888 0000000000001838                   2480+         dc ad(@LNAME1374)                                              02-DCCCA
00001890                                    2481+         ds 0d                                                          02-DCCCA
00001890 0000000000001858                   2482+         dc ad($eye0056)                                                02-DCCCA
00001898 0000000000000000                   2483+         dc ad(0)                                                       02-DCCCA
000018A0                                    2484+         ds    0d                                                       01-DCCPR
                                            2485+         entry rd_kafka_timer_start0                                    01-DCCPR
000018A0                                    2486+rd_kafka_timer_start0 ds 0d                                             01-DCCPR
000018A0                                    2487+@REGION_1374_1 ds 0h                                                    01-DCCPR
000018A0 EBEC D008 0024          00000008   2488+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000018A6 E3E0 D088 0004          00000088   2489+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000018AC E3C0 D090 0004          00000090   2490+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000018B2 B904 002E                          2491+         lgr   2,14                copy addr of our savearea            01-DCCPR
000018B6 E3B0 C018 0004          00000018   2492+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000018BC A7EB 00C0               000000C0   2493+         aghi  14,192              increase by frame size               01-DCCPR
000018C0 E3E0 C020 0021          00000020   2494+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000018C6 4720 B020               00000020   2495+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000018CA                                    2496+@PER_1374 ds   0h                                                       01-DCCPR
000018CA EBDE 2080 0024          00000080   2497+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000018D0 E3C0 2090 0024          00000090   2498+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000018D6 B904 00D2                          2499+         lgr   13,2                set real frame pointer               01-DCCPR
000018DA B904 00CF                          2500+         lgr   12,15               set base reg                         01-DCCPR
                        000018A0            2501+         using @REGION_1374_1,12                                        01-DCCPR
000018DE B904 0041                          2502          LGR   4,1         ; ptr to parm area
                                            2503 * ******* End of Prologue
                                            2504 * *
                                            2505 * ***      rd_kafka_timers_lock(rkts);
000018E2 EB23 4000 0004          00000000   2506          LMG   2,3,0(4)    ; rkts
000018E8 E320 D0A8 0024          000000A8   2507          STG   2,168(0,13)
000018EE 4110 D0A8               000000A8   2508          LA    1,168(0,13)
                                                                                                                           Page   54 
  Active Usings: @REGION_1374_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000018F2 E3F0 C098 0004          00001938   2509          LG    15,@lit_1374_67 ; rd_kafka_timers_lock
000018F8                                    2510 @@gen_label121 DS    0H
000018F8 05EF                               2511          BALR  14,15
000018FA                                    2512 @@gen_label122 DS    0H
                                            2513 * ***
                                            2514 * ***           if (!restart && rd_kafka_timer_scheduled(rtmr)) {
000018FA 9500 4027      00000027 00000000   2515          CLI   39(4),0
000018FE 4770 C0C0               00001960   2516          BNE   @L681
00001902 E330 D0A8 0024          000000A8   2517          STG   3,168(0,13)
00001908 4110 D0A8               000000A8   2518          LA    1,168(0,13)
0000190C E3F0 C0A0 0004          00001940   2519          LG    15,@lit_1374_68 ; rd_kafka_timer_scheduled
00001912                                    2520 @@gen_label124 DS    0H
00001912 05EF                               2521          BALR  14,15
00001914                                    2522 @@gen_label125 DS    0H
00001914 12FF                               2523          LTR   15,15
00001916 4780 C0C0               00001960   2524          BZ    @L681
                                            2525 * ***                   rd_kafka_timers_unlock(rkts);
0000191A E320 D0A8 0024          000000A8   2526          STG   2,168(0,13)
00001920 4110 D0A8               000000A8   2527          LA    1,168(0,13)
00001924 E3F0 C0A8 0004          00001948   2528          LG    15,@lit_1374_69 ; rd_kafka_timers_unlock
0000192A                                    2529 @@gen_label127 DS    0H
0000192A 05EF                               2530          BALR  14,15
0000192C                                    2531 @@gen_label128 DS    0H
                                            2532 * ***                   return;
0000192C 47F0 C12E               000019CE   2533          B     @ret_lab_1374
00001930                                    2534          DS    0D
00001930 000000C0                           2535 @FRAMESIZE_1374 DC F'192'
00001934 00000000
00001938 0000000000000C68                   2536 @lit_1374_67 DC AD(rd_kafka_timers_lock)
00001940 0000000000000F48                   2537 @lit_1374_68 DC AD(rd_kafka_timer_scheduled)
00001948 0000000000000D88                   2538 @lit_1374_69 DC AD(rd_kafka_timers_unlock)
00001950 0000000000001568                   2539 @lit_1374_70 DC AD(rd_kafka_timer_stop)
00001958 0000000000001410                   2540 @lit_1374_71 DC AD(rd_kafka_timer_schedule)
                                            2541 * ***           }
00001960                                    2542 @L681    DS    0H
                                            2543 * ***
                                            2544 * ***      rd_kafka_timer_stop(rkts, rtmr, 0);
00001960 EB23 D0A8 0024          000000A8   2545          STMG  2,3,168(13)
00001966 D707 D0B8 D0B8 000000B8 000000B8   2546          XC    184(8,13),184(13)
0000196C 4110 D0A8               000000A8   2547          LA    1,168(0,13)
00001970 E3F0 C0B0 0004          00001950   2548          LG    15,@lit_1374_70 ; rd_kafka_timer_stop
00001976                                    2549 @@gen_label129 DS    0H
00001976 05EF                               2550          BALR  14,15
00001978                                    2551 @@gen_label130 DS    0H
                                            2552 * ***
                                            2553 * ***      rtmr->rtmr_interval = interval;
00001978 E3F0 4010 0004          00000010   2554          LG    15,16(0,4)  ; interval
0000197E E3F0 3018 0024          00000018   2555          STG   15,24(0,3)  ; offset of rtmr_interval in rd_kafka_timer_*
                                                                s
                                            2556 * ***      rtmr->rtmr_callback = callback;
00001984 E3F0 4028 0004          00000028   2557          LG    15,40(0,4)  ; callback
0000198A E3F0 3028 0024          00000028   2558          STG   15,40(0,3)  ; offset of rtmr_callback in rd_kafka_timer_*
                                                                                                                           Page   55 
  Active Usings: @REGION_1374_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                                                s
                                            2559 * ***      rtmr->rtmr_arg      = arg;
00001990 E3F0 4030 0004          00000030   2560          LG    15,48(0,4)  ; arg
00001996 E3F0 3030 0024          00000030   2561          STG   15,48(0,3)  ; offset of rtmr_arg in rd_kafka_timer_s
                                            2562 * ***           rtmr->rtmr_oneshot  = oneshot;
0000199C 43F0 401F               0000001F   2563          IC    15,31(0,4)  ; oneshot
000019A0 42F0 3020               00000020   2564          STC   15,32(0,3)  ; offset of rtmr_oneshot in rd_kafka_timer_s
                                            2565 * ***
                                            2566 * ***      rd_kafka_timer_schedule(rkts, rtmr, 0);
000019A4 EB23 D0A8 0024          000000A8   2567          STMG  2,3,168(13)
000019AA D707 D0B8 D0B8 000000B8 000000B8   2568          XC    184(8,13),184(13)
000019B0 4110 D0A8               000000A8   2569          LA    1,168(0,13)
000019B4 E3F0 C0B8 0004          00001958   2570          LG    15,@lit_1374_71 ; rd_kafka_timer_schedule
000019BA                                    2571 @@gen_label131 DS    0H
000019BA 05EF                               2572          BALR  14,15
000019BC                                    2573 @@gen_label132 DS    0H
                                            2574 * ***
                                            2575 * ***      rd_kafka_timers_unlock(rkts);
000019BC E320 D0A8 0024          000000A8   2576          STG   2,168(0,13)
000019C2 4110 D0A8               000000A8   2577          LA    1,168(0,13)
000019C6 E3F0 C0A8 0004          00001948   2578          LG    15,@lit_1374_69 ; rd_kafka_timers_unlock
000019CC                                    2579 @@gen_label133 DS    0H
000019CC 05EF                               2580          BALR  14,15
000019CE                                    2581 @@gen_label134 DS    0H
                                            2582 * ***   }
000019CE                                    2583 @ret_lab_1374 DS 0H
                                            2584 * * **** Start of Epilogue
                                            2585          DCCEPIL
000019CE                                    2586+         ds 0h                                                          01-DCCEP
                                            2587+* Epilog
000019CE D707 D088 D088 00000088 00000088   2588+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000019D4 E3D0 D080 0004          00000080   2589+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000019DA E3C0 D090 0004          00000090   2590+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000019E0 E3B0 C018 0004          00000018   2591+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000019E6 E3C0 B010 0021          00000010   2592+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000019EC E3E0 D008 0004          00000008   2593+         lg  14,8(0,13)          load up return address                 01-DCCEP
000019F2 EB1C D020 0004          00000020   2594+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000019F8 078E                               2595+         bcr 8,14                if same dsab, just return              01-DCCEP
000019FA E3F0 D010 0024          00000010   2596+         stg 15,16(0,13)         save return code                       01-DCCEP
00001A00 E300 D018 0024          00000018   2597+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001A06 E3F0 D090 0004          00000090   2598+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001A0C E3F0 F018 0004          00000018   2599+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001A12 47F0 F040               00000040   2600+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2601+* End of Epilog
                                            2602 * * **** End of Epilogue
                                            2603          DROP  12
                                            2604 *
                                            2605 *   DSECT for automatic variables in "rd_kafka_timer_start0"
                                            2606 *      (FUNCTION #1374)
                                            2607 *
00000000                00000000 000000A8   2608 @AUTO#rd_kafka_timer_start0 DSECT
00000000                                    2609          DS    XL168
                                                                                                                           Page   56 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2610 *
00001A16                00000000 00002890   2611 @CODE    CSECT
                                            2612 *
                                            2613 *
                                            2614 *
                                            2615 * ....... start of rd_kafka_timer_exp_backoff
                                            2616 rd_kafka_timer_exp_backoff ALIAS X'99846D92818692816DA3899485996D85A797*
                                                                6D82818392968686'
00001A16                                    2617 @LNAME1375 DS  0H
00001A16 0000001A                           2618          DC    X'0000001A'
00001A1A 99846D9281869281                   2619          DC    C'rd_kafka_timer_exp_backoff'
00001A34 00                                 2620          DC    X'00'
                                            2621 rd_kafka_timer_exp_backoff DCCPRLG CINDEX=1375,BASER=12,FRAME=192,ENTRY*
                                                                =YES,ARCH=ZARCH,LNAMEADDR=@LNAME1375
                                            2622          macro
                                            2623          dccextrn &m
                                            2624          gblc    &$dccext(1000)
                                            2625          gbla    &$dccexti
                                            2626          lcla    &i
                                            2627 &$dccext(&$dccexti+1) setc    '&m'
                                            2628 &i       seta    1
                                            2629 .loop    aif    (&i gt &$dccexti).around
                                            2630          aif    ('&$dccext(&i)' eq '&m').getout
                                            2631 &i       seta    &i+1
                                            2632          ago     .loop
                                            2633 .around  anop
                                            2634 &$dccexti seta &$dccexti+1
                                            2635          extrn  &m
                                            2636 .getout  anop
                                            2637          mend
00001A38                                    2638+$eye0059    ds    0d                                                    02-DCCCA
00001A38 C4C3C3                             2639+         dc cl3'DCC'                                                    02-DCCCA
00001A3B 01                                 2640+         dc xl1'01' format one                                          02-DCCCA
00001A3C 00000000                           2641+         dc a(0)                                                        02-DCCCA
00001A40 0000000000001AAA                   2642+         dc ad(@PER_1375)                                               02-DCCCA
00001A48 00000000000000C0                   2643+         dc ad(192)                                                     02-DCCCA
00001A50 0000000000000000                   2644+         dc ad(0)                                                       02-DCCCA
00001A58 0000000000001000                   2645+         dc ad(4096)                                                    02-DCCCA
00001A60 20                                 2646+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001A61 03                                 2647+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001A62 03                                 2648+         dc al1(3)                                                      02-DCCCA
00001A63 08                                 2649+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001A64 00                                 2650+         dc bl.8'00000000'                                              02-DCCCA
00001A65 000000                             2651+         dc al3(0)                                                      02-DCCCA
00001A68 0000000000001A16                   2652+         dc ad(@LNAME1375)                                              02-DCCCA
00001A70                                    2653+         ds 0d                                                          02-DCCCA
00001A70 0000000000001A38                   2654+         dc ad($eye0059)                                                02-DCCCA
00001A78 0000000000000000                   2655+         dc ad(0)                                                       02-DCCCA
00001A80                                    2656+         ds    0d                                                       01-DCCPR
                                            2657+         entry rd_kafka_timer_exp_backoff                               01-DCCPR
00001A80                                    2658+rd_kafka_timer_exp_backoff ds 0d                                        01-DCCPR
00001A80                                    2659+@REGION_1375_1 ds 0h                                                    01-DCCPR
                                                                                                                           Page   57 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001A80 EBEC D008 0024          00000008   2660+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001A86 E3E0 D088 0004          00000088   2661+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001A8C E3C0 D090 0004          00000090   2662+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001A92 B904 002E                          2663+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001A96 E3B0 C018 0004          00000018   2664+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001A9C A7EB 00C0               000000C0   2665+         aghi  14,192              increase by frame size               01-DCCPR
00001AA0 E3E0 C020 0021          00000020   2666+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001AA6 4720 B020               00000020   2667+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001AAA                                    2668+@PER_1375 ds   0h                                                       01-DCCPR
00001AAA EBDE 2080 0024          00000080   2669+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001AB0 E3C0 2090 0024          00000090   2670+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001AB6 B904 00D2                          2671+         lgr   13,2                set real frame pointer               01-DCCPR
00001ABA B904 00CF                          2672+         lgr   12,15               set base reg                         01-DCCPR
                        00001A80            2673+         using @REGION_1375_1,12                                        01-DCCPR
                                            2674 * ******* End of Prologue
                                            2675 * *
                                            2676 * ***           rd_kafka_timers_lock(rkts);
00001ABE EB23 1000 0004          00000000   2677          LMG   2,3,0(1)    ; rkts
00001AC4 E320 D0A8 0024          000000A8   2678          STG   2,168(0,13)
00001ACA 4110 D0A8               000000A8   2679          LA    1,168(0,13)
00001ACE E3F0 C110 0004          00001B90   2680          LG    15,@lit_1375_74 ; rd_kafka_timers_lock
00001AD4                                    2681 @@gen_label135 DS    0H
00001AD4 05EF                               2682          BALR  14,15
00001AD6                                    2683 @@gen_label136 DS    0H
                                            2684 * ***           if (rd_kafka_timer_scheduled(rtmr)) {
00001AD6 E330 D0A8 0024          000000A8   2685          STG   3,168(0,13)
00001ADC 4110 D0A8               000000A8   2686          LA    1,168(0,13)
00001AE0 E3F0 C118 0004          00001B98   2687          LG    15,@lit_1375_75 ; rd_kafka_timer_scheduled
00001AE6                                    2688 @@gen_label137 DS    0H
00001AE6 05EF                               2689          BALR  14,15
00001AE8                                    2690 @@gen_label138 DS    0H
00001AE8 12FF                               2691          LTR   15,15
00001AEA 4780 C090               00001B10   2692          BZ    @L682
                                            2693 * ***                   rtmr->rtmr_interval *= 2;
00001AEE E3F0 3018 0004          00000018   2694          LG    15,24(0,3)
00001AF4 B908 00FF                          2695          AGR   15,15       ; *0x2
00001AF8 E3F0 3018 0024          00000018   2696          STG   15,24(0,3)
                                            2697 * ***                   rd_kafka_timer_unschedule(rkts, rtmr);
00001AFE EB23 D0A8 0024          000000A8   2698          STMG  2,3,168(13)
00001B04 4110 D0A8               000000A8   2699          LA    1,168(0,13)
00001B08 E3F0 C120 0004          00001BA0   2700          LG    15,@lit_1375_76 ; rd_kafka_timer_unschedule
00001B0E                                    2701 @@gen_label140 DS    0H
00001B0E 05EF                               2702          BALR  14,15
00001B10                                    2703 @@gen_label141 DS    0H
                                            2704 * ***           }
00001B10                                    2705 @L682    DS    0H
                                            2706 * ***           rd_kafka_timer_schedule(rkts, rtmr, 0);
00001B10 EB23 D0A8 0024          000000A8   2707          STMG  2,3,168(13)
00001B16 D707 D0B8 D0B8 000000B8 000000B8   2708          XC    184(8,13),184(13)
00001B1C 4110 D0A8               000000A8   2709          LA    1,168(0,13)
00001B20 E3F0 C128 0004          00001BA8   2710          LG    15,@lit_1375_77 ; rd_kafka_timer_schedule
00001B26                                    2711 @@gen_label142 DS    0H
                                                                                                                           Page   58 
  Active Usings: @REGION_1375_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001B26 05EF                               2712          BALR  14,15
00001B28                                    2713 @@gen_label143 DS    0H
                                            2714 * ***           rd_kafka_timers_unlock(rkts);
00001B28 E320 D0A8 0024          000000A8   2715          STG   2,168(0,13)
00001B2E 4110 D0A8               000000A8   2716          LA    1,168(0,13)
00001B32 E3F0 C130 0004          00001BB0   2717          LG    15,@lit_1375_78 ; rd_kafka_timers_unlock
00001B38                                    2718 @@gen_label144 DS    0H
00001B38 05EF                               2719          BALR  14,15
00001B3A                                    2720 @@gen_label145 DS    0H
                                            2721 * ***   }
00001B3A                                    2722 @ret_lab_1375 DS 0H
                                            2723 * * **** Start of Epilogue
                                            2724          DCCEPIL
00001B3A                                    2725+         ds 0h                                                          01-DCCEP
                                            2726+* Epilog
00001B3A D707 D088 D088 00000088 00000088   2727+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001B40 E3D0 D080 0004          00000080   2728+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001B46 E3C0 D090 0004          00000090   2729+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001B4C E3B0 C018 0004          00000018   2730+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001B52 E3C0 B010 0021          00000010   2731+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001B58 E3E0 D008 0004          00000008   2732+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001B5E EB1C D020 0004          00000020   2733+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001B64 078E                               2734+         bcr 8,14                if same dsab, just return              01-DCCEP
00001B66 E3F0 D010 0024          00000010   2735+         stg 15,16(0,13)         save return code                       01-DCCEP
00001B6C E300 D018 0024          00000018   2736+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001B72 E3F0 D090 0004          00000090   2737+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001B78 E3F0 F018 0004          00000018   2738+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001B7E 47F0 F040               00000040   2739+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2740+* End of Epilog
                                            2741 * * **** End of Epilogue
00001B88                                    2742          DS    0D
00001B88 000000C0                           2743 @FRAMESIZE_1375 DC F'192'
00001B8C 00000000
00001B90 0000000000000C68                   2744 @lit_1375_74 DC AD(rd_kafka_timers_lock)
00001B98 0000000000000F48                   2745 @lit_1375_75 DC AD(rd_kafka_timer_scheduled)
00001BA0 00000000000010A8                   2746 @lit_1375_76 DC AD(rd_kafka_timer_unschedule)
00001BA8 0000000000001410                   2747 @lit_1375_77 DC AD(rd_kafka_timer_schedule)
00001BB0 0000000000000D88                   2748 @lit_1375_78 DC AD(rd_kafka_timers_unlock)
                                            2749          DROP  12
                                            2750 *
                                            2751 *   DSECT for automatic variables in "rd_kafka_timer_exp_backoff"
                                            2752 *      (FUNCTION #1375)
                                            2753 *
00000000                00000000 000000A8   2754 @AUTO#rd_kafka_timer_exp_backoff DSECT
00000000                                    2755          DS    XL168
                                            2756 *
00001BB8                00000000 00002890   2757 @CODE    CSECT
                                            2758 *
                                            2759 *
                                            2760 *
                                            2761 * ....... start of rd_kafka_timer_override_once
                                            2762 rd_kafka_timer_override_once ALIAS X'99846D92818692816DA3899485996D96A5*
                                                                                                                           Page   59 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                                                8599998984856D96958385'
00001BB8                                    2763 @LNAME1377 DS  0H
00001BB8 0000001C                           2764          DC    X'0000001C'
00001BBC 99846D9281869281                   2765          DC    C'rd_kafka_timer_override_once'
00001BD8 00                                 2766          DC    X'00'
                                            2767 rd_kafka_timer_override_once DCCPRLG CINDEX=1377,BASER=12,FRAME=192,ENT*
                                                                RY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME1377
                                            2768          macro
                                            2769          dccextrn &m
                                            2770          gblc    &$dccext(1000)
                                            2771          gbla    &$dccexti
                                            2772          lcla    &i
                                            2773 &$dccext(&$dccexti+1) setc    '&m'
                                            2774 &i       seta    1
                                            2775 .loop    aif    (&i gt &$dccexti).around
                                            2776          aif    ('&$dccext(&i)' eq '&m').getout
                                            2777 &i       seta    &i+1
                                            2778          ago     .loop
                                            2779 .around  anop
                                            2780 &$dccexti seta &$dccexti+1
                                            2781          extrn  &m
                                            2782 .getout  anop
                                            2783          mend
00001BE0                                    2784+$eye0062    ds    0d                                                    02-DCCCA
00001BE0 C4C3C3                             2785+         dc cl3'DCC'                                                    02-DCCCA
00001BE3 01                                 2786+         dc xl1'01' format one                                          02-DCCCA
00001BE4 00000000                           2787+         dc a(0)                                                        02-DCCCA
00001BE8 0000000000001C52                   2788+         dc ad(@PER_1377)                                               02-DCCCA
00001BF0 00000000000000C0                   2789+         dc ad(192)                                                     02-DCCCA
00001BF8 0000000000000000                   2790+         dc ad(0)                                                       02-DCCCA
00001C00 0000000000001000                   2791+         dc ad(4096)                                                    02-DCCCA
00001C08 20                                 2792+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001C09 03                                 2793+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001C0A 03                                 2794+         dc al1(3)                                                      02-DCCCA
00001C0B 08                                 2795+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001C0C 00                                 2796+         dc bl.8'00000000'                                              02-DCCCA
00001C0D 000000                             2797+         dc al3(0)                                                      02-DCCCA
00001C10 0000000000001BB8                   2798+         dc ad(@LNAME1377)                                              02-DCCCA
00001C18                                    2799+         ds 0d                                                          02-DCCCA
00001C18 0000000000001BE0                   2800+         dc ad($eye0062)                                                02-DCCCA
00001C20 0000000000000000                   2801+         dc ad(0)                                                       02-DCCCA
00001C28                                    2802+         ds    0d                                                       01-DCCPR
                                            2803+         entry rd_kafka_timer_override_once                             01-DCCPR
00001C28                                    2804+rd_kafka_timer_override_once ds 0d                                      01-DCCPR
00001C28                                    2805+@REGION_1377_1 ds 0h                                                    01-DCCPR
00001C28 EBEC D008 0024          00000008   2806+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001C2E E3E0 D088 0004          00000088   2807+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001C34 E3C0 D090 0004          00000090   2808+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001C3A B904 002E                          2809+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001C3E E3B0 C018 0004          00000018   2810+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001C44 A7EB 00C0               000000C0   2811+         aghi  14,192              increase by frame size               01-DCCPR
00001C48 E3E0 C020 0021          00000020   2812+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page   60 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001C4E 4720 B020               00000020   2813+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001C52                                    2814+@PER_1377 ds   0h                                                       01-DCCPR
00001C52 EBDE 2080 0024          00000080   2815+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001C58 E3C0 2090 0024          00000090   2816+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001C5E B904 00D2                          2817+         lgr   13,2                set real frame pointer               01-DCCPR
00001C62 B904 00CF                          2818+         lgr   12,15               set base reg                         01-DCCPR
                        00001C28            2819+         using @REGION_1377_1,12                                        01-DCCPR
00001C66 B904 0041                          2820          LGR   4,1         ; ptr to parm area
                                            2821 * ******* End of Prologue
                                            2822 * *
                                            2823 * ***           rd_kafka_timers_lock(rkts);
00001C6A EB23 4000 0004          00000000   2824          LMG   2,3,0(4)    ; rkts
00001C70 E320 D0A8 0024          000000A8   2825          STG   2,168(0,13)
00001C76 4110 D0A8               000000A8   2826          LA    1,168(0,13)
00001C7A E3F0 C110 0004          00001D38   2827          LG    15,@lit_1377_80 ; rd_kafka_timers_lock
00001C80                                    2828 @@gen_label146 DS    0H
00001C80 05EF                               2829          BALR  14,15
00001C82                                    2830 @@gen_label147 DS    0H
                                            2831 * ***           if (rd_kafka_timer_scheduled(rtmr))
00001C82 E330 D0A8 0024          000000A8   2832          STG   3,168(0,13)
00001C88 4110 D0A8               000000A8   2833          LA    1,168(0,13)
00001C8C E3F0 C118 0004          00001D40   2834          LG    15,@lit_1377_81 ; rd_kafka_timer_scheduled
00001C92                                    2835 @@gen_label148 DS    0H
00001C92 05EF                               2836          BALR  14,15
00001C94                                    2837 @@gen_label149 DS    0H
00001C94 12FF                               2838          LTR   15,15
00001C96 4780 C084               00001CAC   2839          BZ    @L683
                                            2840 * ***                   rd_kafka_timer_unschedule(rkts, rtmr);
00001C9A EB23 D0A8 0024          000000A8   2841          STMG  2,3,168(13)
00001CA0 4110 D0A8               000000A8   2842          LA    1,168(0,13)
00001CA4 E3F0 C120 0004          00001D48   2843          LG    15,@lit_1377_82 ; rd_kafka_timer_unschedule
00001CAA                                    2844 @@gen_label151 DS    0H
00001CAA 05EF                               2845          BALR  14,15
00001CAC                                    2846 @@gen_label152 DS    0H
00001CAC                                    2847 @L683    DS    0H
                                            2848 * ***           rd_kafka_timer_schedule_next(rkts, rtmr, rd_clock() + \
                                            2849 * interval);
00001CAC E3F0 C128 0004          00001D50   2850          LG    15,@lit_1377_83 ; rd_clock
00001CB2                                    2851 @@gen_label153 DS    0H
00001CB2 05EF                               2852          BALR  14,15
00001CB4                                    2853 @@gen_label154 DS    0H
00001CB4 E3F0 4010 0008          00000010   2854          AG    15,16(0,4)
00001CBA EB23 D0A8 0024          000000A8   2855          STMG  2,3,168(13)
00001CC0 E3F0 D0B8 0024          000000B8   2856          STG   15,184(0,13)
00001CC6 4110 D0A8               000000A8   2857          LA    1,168(0,13)
00001CCA E3F0 C130 0004          00001D58   2858          LG    15,@lit_1377_84 ; rd_kafka_timer_schedule_next
00001CD0                                    2859 @@gen_label155 DS    0H
00001CD0 05EF                               2860          BALR  14,15
00001CD2                                    2861 @@gen_label156 DS    0H
                                            2862 * ***           rd_kafka_timers_unlock(rkts);
00001CD2 E320 D0A8 0024          000000A8   2863          STG   2,168(0,13)
00001CD8 4110 D0A8               000000A8   2864          LA    1,168(0,13)
                                                                                                                           Page   61 
  Active Usings: @REGION_1377_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001CDC E3F0 C138 0004          00001D60   2865          LG    15,@lit_1377_85 ; rd_kafka_timers_unlock
00001CE2                                    2866 @@gen_label157 DS    0H
00001CE2 05EF                               2867          BALR  14,15
00001CE4                                    2868 @@gen_label158 DS    0H
                                            2869 * ***   }
00001CE4                                    2870 @ret_lab_1377 DS 0H
                                            2871 * * **** Start of Epilogue
                                            2872          DCCEPIL
00001CE4                                    2873+         ds 0h                                                          01-DCCEP
                                            2874+* Epilog
00001CE4 D707 D088 D088 00000088 00000088   2875+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001CEA E3D0 D080 0004          00000080   2876+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001CF0 E3C0 D090 0004          00000090   2877+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001CF6 E3B0 C018 0004          00000018   2878+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001CFC E3C0 B010 0021          00000010   2879+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001D02 E3E0 D008 0004          00000008   2880+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001D08 EB1C D020 0004          00000020   2881+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001D0E 078E                               2882+         bcr 8,14                if same dsab, just return              01-DCCEP
00001D10 E3F0 D010 0024          00000010   2883+         stg 15,16(0,13)         save return code                       01-DCCEP
00001D16 E300 D018 0024          00000018   2884+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001D1C E3F0 D090 0004          00000090   2885+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001D22 E3F0 F018 0004          00000018   2886+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001D28 47F0 F040               00000040   2887+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2888+* End of Epilog
                                            2889 * * **** End of Epilogue
00001D30                                    2890          DS    0D
00001D30 000000C0                           2891 @FRAMESIZE_1377 DC F'192'
00001D34 00000000
00001D38 0000000000000C68                   2892 @lit_1377_80 DC AD(rd_kafka_timers_lock)
00001D40 0000000000000F48                   2893 @lit_1377_81 DC AD(rd_kafka_timer_scheduled)
00001D48 00000000000010A8                   2894 @lit_1377_82 DC AD(rd_kafka_timer_unschedule)
00001D50 0000000000000190                   2895 @lit_1377_83 DC AD(rd_clock)
00001D58 0000000000001178                   2896 @lit_1377_84 DC AD(rd_kafka_timer_schedule_next)
00001D60 0000000000000D88                   2897 @lit_1377_85 DC AD(rd_kafka_timers_unlock)
                                            2898          DROP  12
                                            2899 *
                                            2900 *   DSECT for automatic variables in "rd_kafka_timer_override_once"
                                            2901 *      (FUNCTION #1377)
                                            2902 *
00000000                00000000 000000A8   2903 @AUTO#rd_kafka_timer_override_once DSECT
00000000                                    2904          DS    XL168
                                            2905 *
00001D68                00000000 00002890   2906 @CODE    CSECT
                                            2907 *
                                            2908 *
                                            2909 *
                                            2910 * ....... start of rd_kafka_timer_next
                                            2911 rd_kafka_timer_next ALIAS X'99846D92818692816DA3899485996D9585A7A3'
00001D68                                    2912 @LNAME1376 DS  0H
00001D68 00000013                           2913          DC    X'00000013'
00001D6C 99846D9281869281                   2914          DC    C'rd_kafka_timer_next'
00001D7F 00                                 2915          DC    X'00'
                                                                                                                           Page   62 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            2916 rd_kafka_timer_next DCCPRLG CINDEX=1376,BASER=12,FRAME=184,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1376
                                            2917          macro
                                            2918          dccextrn &m
                                            2919          gblc    &$dccext(1000)
                                            2920          gbla    &$dccexti
                                            2921          lcla    &i
                                            2922 &$dccext(&$dccexti+1) setc    '&m'
                                            2923 &i       seta    1
                                            2924 .loop    aif    (&i gt &$dccexti).around
                                            2925          aif    ('&$dccext(&i)' eq '&m').getout
                                            2926 &i       seta    &i+1
                                            2927          ago     .loop
                                            2928 .around  anop
                                            2929 &$dccexti seta &$dccexti+1
                                            2930          extrn  &m
                                            2931 .getout  anop
                                            2932          mend
00001D80                                    2933+$eye0065    ds    0d                                                    02-DCCCA
00001D80 C4C3C3                             2934+         dc cl3'DCC'                                                    02-DCCCA
00001D83 01                                 2935+         dc xl1'01' format one                                          02-DCCCA
00001D84 00000000                           2936+         dc a(0)                                                        02-DCCCA
00001D88 0000000000001DF2                   2937+         dc ad(@PER_1376)                                               02-DCCCA
00001D90 00000000000000B8                   2938+         dc ad(184)                                                     02-DCCCA
00001D98 0000000000000000                   2939+         dc ad(0)                                                       02-DCCCA
00001DA0 0000000000001000                   2940+         dc ad(4096)                                                    02-DCCCA
00001DA8 20                                 2941+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001DA9 03                                 2942+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001DAA 03                                 2943+         dc al1(3)                                                      02-DCCCA
00001DAB 08                                 2944+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001DAC 00                                 2945+         dc bl.8'00000000'                                              02-DCCCA
00001DAD 000000                             2946+         dc al3(0)                                                      02-DCCCA
00001DB0 0000000000001D68                   2947+         dc ad(@LNAME1376)                                              02-DCCCA
00001DB8                                    2948+         ds 0d                                                          02-DCCCA
00001DB8 0000000000001D80                   2949+         dc ad($eye0065)                                                02-DCCCA
00001DC0 0000000000000000                   2950+         dc ad(0)                                                       02-DCCCA
00001DC8                                    2951+         ds    0d                                                       01-DCCPR
                                            2952+         entry rd_kafka_timer_next                                      01-DCCPR
00001DC8                                    2953+rd_kafka_timer_next ds 0d                                               01-DCCPR
00001DC8                                    2954+@REGION_1376_1 ds 0h                                                    01-DCCPR
00001DC8 EBEC D008 0024          00000008   2955+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001DCE E3E0 D088 0004          00000088   2956+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001DD4 E3C0 D090 0004          00000090   2957+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001DDA B904 002E                          2958+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001DDE E3B0 C018 0004          00000018   2959+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001DE4 A7EB 00B8               000000B8   2960+         aghi  14,184              increase by frame size               01-DCCPR
00001DE8 E3E0 C020 0021          00000020   2961+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001DEE 4720 B020               00000020   2962+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001DF2                                    2963+@PER_1376 ds   0h                                                       01-DCCPR
00001DF2 EBDE 2080 0024          00000080   2964+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001DF8 E3C0 2090 0024          00000090   2965+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001DFE B904 00D2                          2966+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page   63 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001E02 B904 00CF                          2967+         lgr   12,15               set base reg                         01-DCCPR
                        00001DC8            2968+         using @REGION_1376_1,12                                        01-DCCPR
00001E06 B904 0041                          2969          LGR   4,1         ; ptr to parm area
                                            2970 * ******* End of Prologue
                                            2971 * *
                                            2972 * ***           rd_ts_t now = rd_clock();
00001E0A E3F0 C120 0004          00001EE8   2973          LG    15,@lit_1376_87 ; rd_clock
00001E10                                    2974 @@gen_label159 DS    0H
00001E10 05EF                               2975          BALR  14,15
00001E12                                    2976 @@gen_label160 DS    0H
00001E12 B904 003F                          2977          LGR   3,15
                                            2978 * ***           rd_ts_t delta = -1;
00001E16 A729 FFFF               0000FFFF   2979          LGHI  2,-1        ; -1
                                            2980 * ***
                                            2981 * ***           if (do_lock)
00001E1A E350 4014 0012          00000014   2982          LT    5,20(0,4)   ; do_lock
00001E20 4780 C074               00001E3C   2983          BZ    @L684
                                            2984 * ***                   rd_kafka_timers_lock(rkts);
00001E24 E3F0 4000 0004          00000000   2985          LG    15,0(0,4)   ; rkts
00001E2A E3F0 D0B0 0024          000000B0   2986          STG   15,176(0,13)
00001E30 4110 D0B0               000000B0   2987          LA    1,176(0,13)
00001E34 E3F0 C128 0004          00001EF0   2988          LG    15,@lit_1376_89 ; rd_kafka_timers_lock
00001E3A                                    2989 @@gen_label162 DS    0H
00001E3A 05EF                               2990          BALR  14,15
00001E3C                                    2991 @@gen_label163 DS    0H
00001E3C                                    2992 @L684    DS    0H
                                            2993 * ***
                                            2994 * ***           if (rd_kafka_timer_scheduled(rtmr)) {
00001E3C E3F0 4008 0004          00000008   2995          LG    15,8(0,4)   ; rtmr
00001E42 E3F0 D0B0 0024          000000B0   2996          STG   15,176(0,13)
00001E48 4110 D0B0               000000B0   2997          LA    1,176(0,13)
00001E4C E3F0 C130 0004          00001EF8   2998          LG    15,@lit_1376_90 ; rd_kafka_timer_scheduled
00001E52                                    2999 @@gen_label164 DS    0H
00001E52 05EF                               3000          BALR  14,15
00001E54                                    3001 @@gen_label165 DS    0H
00001E54 12FF                               3002          LTR   15,15
00001E56 4780 C0AE               00001E76   3003          BZ    @L685
                                            3004 * ***                   delta = rtmr->rtmr_next - now;
00001E5A E3F0 4008 0004          00000008   3005          LG    15,8(0,4)   ; rtmr
00001E60 E320 F010 0004          00000010   3006          LG    2,16(0,15)  ; offset of rtmr_next in rd_kafka_timer_s
00001E66 B909 0023                          3007          SGR   2,3
                                            3008 * ***                   if (delta < 0)
00001E6A B902 00F2                          3009          LTGR  15,2
00001E6E 47B0 C0AE               00001E76   3010          BNL   @L685
                                            3011 * ***                           delta = 0;
00001E72 A729 0000               00000000   3012          LGHI  2,0         ; 0
00001E76                                    3013 @L686    DS    0H
                                            3014 * ***           }
00001E76                                    3015 @L685    DS    0H
                                            3016 * ***
                                            3017 * ***           if (do_lock)
00001E76 1255                               3018          LTR   5,5
                                                                                                                           Page   64 
  Active Usings: @REGION_1376_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001E78 4780 C0CC               00001E94   3019          BZ    @L687
                                            3020 * ***                   rd_kafka_timers_unlock(rkts);
00001E7C E3F0 4000 0004          00000000   3021          LG    15,0(0,4)   ; rkts
00001E82 E3F0 D0B0 0024          000000B0   3022          STG   15,176(0,13)
00001E88 4110 D0B0               000000B0   3023          LA    1,176(0,13)
00001E8C E3F0 C138 0004          00001F00   3024          LG    15,@lit_1376_92 ; rd_kafka_timers_unlock
00001E92                                    3025 @@gen_label169 DS    0H
00001E92 05EF                               3026          BALR  14,15
00001E94                                    3027 @@gen_label170 DS    0H
00001E94                                    3028 @L687    DS    0H
                                            3029 * ***
                                            3030 * ***           return delta;
00001E94 B904 00F2                          3031          LGR   15,2
                                            3032 * ***   }
                                            3033 * * **** Start of Epilogue
                                            3034          DCCEPIL
00001E98                                    3035+         ds 0h                                                          01-DCCEP
                                            3036+* Epilog
00001E98 D707 D088 D088 00000088 00000088   3037+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001E9E E3D0 D080 0004          00000080   3038+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001EA4 E3C0 D090 0004          00000090   3039+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001EAA E3B0 C018 0004          00000018   3040+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001EB0 E3C0 B010 0021          00000010   3041+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001EB6 E3E0 D008 0004          00000008   3042+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001EBC EB1C D020 0004          00000020   3043+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001EC2 078E                               3044+         bcr 8,14                if same dsab, just return              01-DCCEP
00001EC4 E3F0 D010 0024          00000010   3045+         stg 15,16(0,13)         save return code                       01-DCCEP
00001ECA E300 D018 0024          00000018   3046+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001ED0 E3F0 D090 0004          00000090   3047+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001ED6 E3F0 F018 0004          00000018   3048+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001EDC 47F0 F040               00000040   3049+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3050+* End of Epilog
                                            3051 * * **** End of Epilogue
00001EE0                                    3052          DS    0D
00001EE0 000000B8                           3053 @FRAMESIZE_1376 DC F'184'
00001EE4 00000000
00001EE8 0000000000000190                   3054 @lit_1376_87 DC AD(rd_clock)
00001EF0 0000000000000C68                   3055 @lit_1376_89 DC AD(rd_kafka_timers_lock)
00001EF8 0000000000000F48                   3056 @lit_1376_90 DC AD(rd_kafka_timer_scheduled)
00001F00 0000000000000D88                   3057 @lit_1376_92 DC AD(rd_kafka_timers_unlock)
                                            3058          DROP  12
                                            3059 *
                                            3060 *   DSECT for automatic variables in "rd_kafka_timer_next"
                                            3061 *      (FUNCTION #1376)
                                            3062 *
00000000                00000000 000000B0   3063 @AUTO#rd_kafka_timer_next DSECT
00000000                                    3064          DS    XL168
000000A8                                    3065 rd_kafka_timer_next#delta#0 DS 8XL1 ; delta
000000B0                000000B0 000000A8   3066          ORG   @AUTO#rd_kafka_timer_next+168
000000A8                                    3067 rd_kafka_timer_next#now#0 DS 8XL1 ; now
                                            3068 *
00001F08                00000000 00002890   3069 @CODE    CSECT
                                                                                                                           Page   65 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3070 *
                                            3071 *
                                            3072 *
                                            3073 * ....... start of rd_kafka_timers_interrupt
                                            3074 rd_kafka_timers_interrupt ALIAS X'99846D92818692816DA389948599A26D8995A*
                                                                3859999A497A3'
00001F08                                    3075 @LNAME1379 DS  0H
00001F08 00000019                           3076          DC    X'00000019'
00001F0C 99846D9281869281                   3077          DC    C'rd_kafka_timers_interrupt'
00001F25 00                                 3078          DC    X'00'
                                            3079 rd_kafka_timers_interrupt DCCPRLG CINDEX=1379,BASER=12,FRAME=176,ENTRY=*
                                                                YES,ARCH=ZARCH,LNAMEADDR=@LNAME1379
                                            3080          macro
                                            3081          dccextrn &m
                                            3082          gblc    &$dccext(1000)
                                            3083          gbla    &$dccexti
                                            3084          lcla    &i
                                            3085 &$dccext(&$dccexti+1) setc    '&m'
                                            3086 &i       seta    1
                                            3087 .loop    aif    (&i gt &$dccexti).around
                                            3088          aif    ('&$dccext(&i)' eq '&m').getout
                                            3089 &i       seta    &i+1
                                            3090          ago     .loop
                                            3091 .around  anop
                                            3092 &$dccexti seta &$dccexti+1
                                            3093          extrn  &m
                                            3094 .getout  anop
                                            3095          mend
00001F28                                    3096+$eye0068    ds    0d                                                    02-DCCCA
00001F28 C4C3C3                             3097+         dc cl3'DCC'                                                    02-DCCCA
00001F2B 01                                 3098+         dc xl1'01' format one                                          02-DCCCA
00001F2C 00000000                           3099+         dc a(0)                                                        02-DCCCA
00001F30 0000000000001F9A                   3100+         dc ad(@PER_1379)                                               02-DCCCA
00001F38 00000000000000B0                   3101+         dc ad(176)                                                     02-DCCCA
00001F40 0000000000000000                   3102+         dc ad(0)                                                       02-DCCCA
00001F48 0000000000001000                   3103+         dc ad(4096)                                                    02-DCCCA
00001F50 20                                 3104+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001F51 03                                 3105+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001F52 03                                 3106+         dc al1(3)                                                      02-DCCCA
00001F53 08                                 3107+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001F54 00                                 3108+         dc bl.8'00000000'                                              02-DCCCA
00001F55 000000                             3109+         dc al3(0)                                                      02-DCCCA
00001F58 0000000000001F08                   3110+         dc ad(@LNAME1379)                                              02-DCCCA
00001F60                                    3111+         ds 0d                                                          02-DCCCA
00001F60 0000000000001F28                   3112+         dc ad($eye0068)                                                02-DCCCA
00001F68 0000000000000000                   3113+         dc ad(0)                                                       02-DCCCA
00001F70                                    3114+         ds    0d                                                       01-DCCPR
                                            3115+         entry rd_kafka_timers_interrupt                                01-DCCPR
00001F70                                    3116+rd_kafka_timers_interrupt ds 0d                                         01-DCCPR
00001F70                                    3117+@REGION_1379_1 ds 0h                                                    01-DCCPR
00001F70 EBEC D008 0024          00000008   3118+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001F76 E3E0 D088 0004          00000088   3119+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
                                                                                                                           Page   66 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00001F7C E3C0 D090 0004          00000090   3120+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001F82 B904 002E                          3121+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001F86 E3B0 C018 0004          00000018   3122+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001F8C A7EB 00B0               000000B0   3123+         aghi  14,176              increase by frame size               01-DCCPR
00001F90 E3E0 C020 0021          00000020   3124+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001F96 4720 B020               00000020   3125+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001F9A                                    3126+@PER_1379 ds   0h                                                       01-DCCPR
00001F9A EBDE 2080 0024          00000080   3127+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001FA0 E3C0 2090 0024          00000090   3128+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001FA6 B904 00D2                          3129+         lgr   13,2                set real frame pointer               01-DCCPR
00001FAA B904 00CF                          3130+         lgr   12,15               set base reg                         01-DCCPR
                        00001F70            3131+         using @REGION_1379_1,12                                        01-DCCPR
                                            3132 * ******* End of Prologue
                                            3133 * *
                                            3134 * ***      rd_kafka_timers_lock(rkts);
00001FAE E320 1000 0004          00000000   3135          LG    2,0(0,1)    ; rkts
00001FB4 E320 D0A8 0024          000000A8   3136          STG   2,168(0,13)
00001FBA 4110 D0A8               000000A8   3137          LA    1,168(0,13)
00001FBE E3F0 C0D0 0004          00002040   3138          LG    15,@lit_1379_94 ; rd_kafka_timers_lock
00001FC4                                    3139 @@gen_label171 DS    0H
00001FC4 05EF                               3140          BALR  14,15
00001FC6                                    3141 @@gen_label172 DS    0H
                                            3142 * ***      cnd_signal(&rkts->rkts_cond);
00001FC6 41F0 2040               00000040   3143          LA    15,64(0,2)
00001FCA E3F0 D0A8 0024          000000A8   3144          STG   15,168(0,13)
00001FD0 4110 D0A8               000000A8   3145          LA    1,168(0,13)
00001FD4 E3F0 C0D8 0004          00002048   3146          LG    15,@lit_1379_95 ; cnd_signal
00001FDA                                    3147 @@gen_label173 DS    0H
00001FDA 05EF                               3148          BALR  14,15
00001FDC                                    3149 @@gen_label174 DS    0H
                                            3150 * ***      rd_kafka_timers_unlock(rkts);
00001FDC E320 D0A8 0024          000000A8   3151          STG   2,168(0,13)
00001FE2 4110 D0A8               000000A8   3152          LA    1,168(0,13)
00001FE6 E3F0 C0E0 0004          00002050   3153          LG    15,@lit_1379_96 ; rd_kafka_timers_unlock
00001FEC                                    3154 @@gen_label175 DS    0H
00001FEC 05EF                               3155          BALR  14,15
00001FEE                                    3156 @@gen_label176 DS    0H
                                            3157 * ***   }
00001FEE                                    3158 @ret_lab_1379 DS 0H
                                            3159 * * **** Start of Epilogue
                                            3160          DCCEPIL
00001FEE                                    3161+         ds 0h                                                          01-DCCEP
                                            3162+* Epilog
00001FEE D707 D088 D088 00000088 00000088   3163+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001FF4 E3D0 D080 0004          00000080   3164+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001FFA E3C0 D090 0004          00000090   3165+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002000 E3B0 C018 0004          00000018   3166+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002006 E3C0 B010 0021          00000010   3167+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000200C E3E0 D008 0004          00000008   3168+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002012 EB1C D020 0004          00000020   3169+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002018 078E                               3170+         bcr 8,14                if same dsab, just return              01-DCCEP
0000201A E3F0 D010 0024          00000010   3171+         stg 15,16(0,13)         save return code                       01-DCCEP
                                                                                                                           Page   67 
  Active Usings: @REGION_1379_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002020 E300 D018 0024          00000018   3172+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002026 E3F0 D090 0004          00000090   3173+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000202C E3F0 F018 0004          00000018   3174+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002032 47F0 F040               00000040   3175+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3176+* End of Epilog
                                            3177 * * **** End of Epilogue
00002038                                    3178          DS    0D
00002038 000000B0                           3179 @FRAMESIZE_1379 DC F'176'
0000203C 00000000
00002040 0000000000000C68                   3180 @lit_1379_94 DC AD(rd_kafka_timers_lock)
00002048 0000000000000000                   3181 @lit_1379_95 DC AD(cnd_signal)
00002050 0000000000000D88                   3182 @lit_1379_96 DC AD(rd_kafka_timers_unlock)
                                            3183          DROP  12
                                            3184 *
                                            3185 *   DSECT for automatic variables in "rd_kafka_timers_interrupt"
                                            3186 *      (FUNCTION #1379)
                                            3187 *
00000000                00000000 000000A8   3188 @AUTO#rd_kafka_timers_interrupt DSECT
00000000                                    3189          DS    XL168
                                            3190 *
00002058                00000000 00002890   3191 @CODE    CSECT
                                            3192 *
                                            3193 *
                                            3194 *
                                            3195 * ....... start of rd_kafka_timers_next
                                            3196 rd_kafka_timers_next ALIAS X'99846D92818692816DA389948599A26D9585A7A3'
00002058                                    3197 @LNAME1380 DS  0H
00002058 00000014                           3198          DC    X'00000014'
0000205C 99846D9281869281                   3199          DC    C'rd_kafka_timers_next'
00002070 00                                 3200          DC    X'00'
                                            3201 rd_kafka_timers_next DCCPRLG CINDEX=1380,BASER=12,FRAME=184,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1380
                                            3202          macro
                                            3203          dccextrn &m
                                            3204          gblc    &$dccext(1000)
                                            3205          gbla    &$dccexti
                                            3206          lcla    &i
                                            3207 &$dccext(&$dccexti+1) setc    '&m'
                                            3208 &i       seta    1
                                            3209 .loop    aif    (&i gt &$dccexti).around
                                            3210          aif    ('&$dccext(&i)' eq '&m').getout
                                            3211 &i       seta    &i+1
                                            3212          ago     .loop
                                            3213 .around  anop
                                            3214 &$dccexti seta &$dccexti+1
                                            3215          extrn  &m
                                            3216 .getout  anop
                                            3217          mend
00002078                                    3218+$eye0071    ds    0d                                                    02-DCCCA
00002078 C4C3C3                             3219+         dc cl3'DCC'                                                    02-DCCCA
0000207B 01                                 3220+         dc xl1'01' format one                                          02-DCCCA
0000207C 00000000                           3221+         dc a(0)                                                        02-DCCCA
                                                                                                                           Page   68 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002080 00000000000020EA                   3222+         dc ad(@PER_1380)                                               02-DCCCA
00002088 00000000000000B8                   3223+         dc ad(184)                                                     02-DCCCA
00002090 0000000000000000                   3224+         dc ad(0)                                                       02-DCCCA
00002098 0000000000001000                   3225+         dc ad(4096)                                                    02-DCCCA
000020A0 20                                 3226+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000020A1 03                                 3227+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000020A2 03                                 3228+         dc al1(3)                                                      02-DCCCA
000020A3 08                                 3229+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000020A4 00                                 3230+         dc bl.8'00000000'                                              02-DCCCA
000020A5 000000                             3231+         dc al3(0)                                                      02-DCCCA
000020A8 0000000000002058                   3232+         dc ad(@LNAME1380)                                              02-DCCCA
000020B0                                    3233+         ds 0d                                                          02-DCCCA
000020B0 0000000000002078                   3234+         dc ad($eye0071)                                                02-DCCCA
000020B8 0000000000000000                   3235+         dc ad(0)                                                       02-DCCCA
000020C0                                    3236+         ds    0d                                                       01-DCCPR
                                            3237+         entry rd_kafka_timers_next                                     01-DCCPR
000020C0                                    3238+rd_kafka_timers_next ds 0d                                              01-DCCPR
000020C0                                    3239+@REGION_1380_1 ds 0h                                                    01-DCCPR
000020C0 EBEC D008 0024          00000008   3240+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000020C6 E3E0 D088 0004          00000088   3241+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000020CC E3C0 D090 0004          00000090   3242+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000020D2 B904 002E                          3243+         lgr   2,14                copy addr of our savearea            01-DCCPR
000020D6 E3B0 C018 0004          00000018   3244+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000020DC A7EB 00B8               000000B8   3245+         aghi  14,184              increase by frame size               01-DCCPR
000020E0 E3E0 C020 0021          00000020   3246+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000020E6 4720 B020               00000020   3247+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000020EA                                    3248+@PER_1380 ds   0h                                                       01-DCCPR
000020EA EBDE 2080 0024          00000080   3249+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000020F0 E3C0 2090 0024          00000090   3250+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000020F6 B904 00D2                          3251+         lgr   13,2                set real frame pointer               01-DCCPR
000020FA B904 00CF                          3252+         lgr   12,15               set base reg                         01-DCCPR
                        000020C0            3253+         using @REGION_1380_1,12                                        01-DCCPR
000020FE B904 0051                          3254          LGR   5,1         ; ptr to parm area
                                            3255 * ******* End of Prologue
                                            3256 * *
                                            3257 * ***      rd_ts_t now = rd_clock();
00002102 E330 5000 0004          00000000   3258          LG    3,0(0,5)    ; rkts
00002108 5840 500C               0000000C   3259          L     4,12(0,5)   ; timeout_us
0000210C E3F0 C0A8 0004          00002168   3260          LG    15,@lit_1380_98 ; rd_clock
00002112                                    3261 @@gen_label177 DS    0H
00002112 05EF                               3262          BALR  14,15
00002114                                    3263 @@gen_label178 DS    0H
00002114 B904 002F                          3264          LGR   2,15
                                            3265 * ***      rd_ts_t sleeptime = 0;
00002118 A769 0000               00000000   3266          LGHI  6,0         ; 0
                                            3267 * ***      rd_kafka_timer_t *rtmr;
                                            3268 * ***
                                            3269 * ***      if (do_lock)
0000211C E350 5014 0012          00000014   3270          LT    5,20(0,5)   ; do_lock
00002122 4780 C078               00002138   3271          BZ    @L688
                                            3272 * ***         rd_kafka_timers_lock(rkts);
00002126 E330 D0B0 0024          000000B0   3273          STG   3,176(0,13)
                                                                                                                           Page   69 
  Active Usings: @REGION_1380_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000212C 4110 D0B0               000000B0   3274          LA    1,176(0,13)
00002130 E3F0 C0B0 0004          00002170   3275          LG    15,@lit_1380_100 ; rd_kafka_timers_lock
00002136                                    3276 @@gen_label180 DS    0H
00002136 05EF                               3277          BALR  14,15
00002138                                    3278 @@gen_label181 DS    0H
00002138                                    3279 @L688    DS    0H
                                            3280 * ***
                                            3281 * ***      if ((((rtmr = ((&rkts->rkts_timers)->tqh_first)) != ((void \
                                            3282 * *)0)))) {
00002138 E3F0 3000 0004          00000000   3283          LG    15,0(0,3)   ; rkts
0000213E B902 001F                          3284          LTGR  1,15
00002142 4780 C0D0               00002190   3285          BE    @L689
                                            3286 * ***         sleeptime = rtmr->rtmr_next - now;
00002146 E3F0 F010 0004          00000010   3287          LG    15,16(0,15) ; offset of rtmr_next in rd_kafka_timer_s
0000214C B909 00F2                          3288          SGR   15,2
00002150 B902 002F                          3289          LTGR  2,15        ; sleeptime
                                            3290 * ***         if (sleeptime < 0)
00002154 47B0 C0C0               00002180   3291          BNL   @L690
                                            3292 * ***            sleeptime = 0;
00002158 B904 0026                          3293          LGR   2,6         ; sleeptime
0000215C 47F0 C0D4               00002194   3294          B     @L693
00002160                                    3295          DS    0D
00002160 000000B8                           3296 @FRAMESIZE_1380 DC F'184'
00002164 00000000
00002168 0000000000000190                   3297 @lit_1380_98 DC AD(rd_clock)
00002170 0000000000000C68                   3298 @lit_1380_100 DC AD(rd_kafka_timers_lock)
00002178 0000000000000D88                   3299 @lit_1380_102 DC AD(rd_kafka_timers_unlock)
                                            3300 * ***         else if (sleeptime > (rd_ts_t)timeout_us)
00002180                                    3301 @L690    DS    0H
00002180 B930 0024                          3302          CGFR  2,4
00002184 47D0 C0D4               00002194   3303          BNH   @L693
                                            3304 * ***            sleeptime = (rd_ts_t)timeout_us;
00002188 B914 0024                          3305          LGFR  2,4
0000218C                                    3306 @L692    DS    0H
                                            3307 * ***      } else
0000218C                                    3308 @L691    DS    0H
0000218C 47F0 C0D4               00002194   3309          B     @L693
00002190                                    3310 @L689    DS    0H
                                            3311 * ***         sleeptime = (rd_ts_t)timeout_us;
00002190 B914 0024                          3312          LGFR  2,4
00002194                                    3313 @L693    DS    0H
                                            3314 * ***
                                            3315 * ***      if (do_lock)
00002194 1255                               3316          LTR   5,5
00002196 4780 C0EC               000021AC   3317          BZ    @L694
                                            3318 * ***         rd_kafka_timers_unlock(rkts);
0000219A E330 D0B0 0024          000000B0   3319          STG   3,176(0,13)
000021A0 4110 D0B0               000000B0   3320          LA    1,176(0,13)
000021A4 E3F0 C0B8 0004          00002178   3321          LG    15,@lit_1380_102 ; rd_kafka_timers_unlock
000021AA                                    3322 @@gen_label186 DS    0H
000021AA 05EF                               3323          BALR  14,15
000021AC                                    3324 @@gen_label187 DS    0H
                                                                                                                           Page   70 
  Active Usings: @REGION_1380_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000021AC                                    3325 @L694    DS    0H
                                            3326 * ***
                                            3327 * ***      return sleeptime;
000021AC B904 00F2                          3328          LGR   15,2
                                            3329 * ***   }
                                            3330 * * **** Start of Epilogue
                                            3331          DCCEPIL
000021B0                                    3332+         ds 0h                                                          01-DCCEP
                                            3333+* Epilog
000021B0 D707 D088 D088 00000088 00000088   3334+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000021B6 E3D0 D080 0004          00000080   3335+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000021BC E3C0 D090 0004          00000090   3336+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000021C2 E3B0 C018 0004          00000018   3337+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000021C8 E3C0 B010 0021          00000010   3338+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000021CE E3E0 D008 0004          00000008   3339+         lg  14,8(0,13)          load up return address                 01-DCCEP
000021D4 EB1C D020 0004          00000020   3340+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000021DA 078E                               3341+         bcr 8,14                if same dsab, just return              01-DCCEP
000021DC E3F0 D010 0024          00000010   3342+         stg 15,16(0,13)         save return code                       01-DCCEP
000021E2 E300 D018 0024          00000018   3343+         stg 0,24(0,13)          save more return code                  01-DCCEP
000021E8 E3F0 D090 0004          00000090   3344+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000021EE E3F0 F018 0004          00000018   3345+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000021F4 47F0 F040               00000040   3346+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3347+* End of Epilog
                                            3348 * * **** End of Epilogue
                                            3349          DROP  12
                                            3350 *
                                            3351 *   DSECT for automatic variables in "rd_kafka_timers_next"
                                            3352 *      (FUNCTION #1380)
                                            3353 *
00000000                00000000 000000B0   3354 @AUTO#rd_kafka_timers_next DSECT
00000000                                    3355          DS    XL168
000000A8                                    3356 rd_kafka_timers_next#sleeptime#0 DS 8XL1 ; sleeptime
000000B0                000000B0 000000A8   3357          ORG   @AUTO#rd_kafka_timers_next+168
000000A8                                    3358 rd_kafka_timers_next#now#0 DS 8XL1 ; now
                                            3359 *
000021F8                00000000 00002890   3360 @CODE    CSECT
                                            3361 *
                                            3362 *
                                            3363 *
                                            3364 * ....... start of rd_kafka_timers_run
                                            3365 rd_kafka_timers_run ALIAS X'99846D92818692816DA389948599A26D99A495'
000021F8                                    3366 @LNAME1381 DS  0H
000021F8 00000013                           3367          DC    X'00000013'
000021FC 99846D9281869281                   3368          DC    C'rd_kafka_timers_run'
0000220F 00                                 3369          DC    X'00'
                                            3370 rd_kafka_timers_run DCCPRLG CINDEX=1381,BASER=12,FRAME=200,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME1381
                                            3371          macro
                                            3372          dccextrn &m
                                            3373          gblc    &$dccext(1000)
                                            3374          gbla    &$dccexti
                                            3375          lcla    &i
                                                                                                                           Page   71 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3376 &$dccext(&$dccexti+1) setc    '&m'
                                            3377 &i       seta    1
                                            3378 .loop    aif    (&i gt &$dccexti).around
                                            3379          aif    ('&$dccext(&i)' eq '&m').getout
                                            3380 &i       seta    &i+1
                                            3381          ago     .loop
                                            3382 .around  anop
                                            3383 &$dccexti seta &$dccexti+1
                                            3384          extrn  &m
                                            3385 .getout  anop
                                            3386          mend
00002210                                    3387+$eye0074    ds    0d                                                    02-DCCCA
00002210 C4C3C3                             3388+         dc cl3'DCC'                                                    02-DCCCA
00002213 01                                 3389+         dc xl1'01' format one                                          02-DCCCA
00002214 00000000                           3390+         dc a(0)                                                        02-DCCCA
00002218 0000000000002282                   3391+         dc ad(@PER_1381)                                               02-DCCCA
00002220 00000000000000C8                   3392+         dc ad(200)                                                     02-DCCCA
00002228 0000000000000000                   3393+         dc ad(0)                                                       02-DCCCA
00002230 0000000000001000                   3394+         dc ad(4096)                                                    02-DCCCA
00002238 20                                 3395+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002239 03                                 3396+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000223A 03                                 3397+         dc al1(3)                                                      02-DCCCA
0000223B 08                                 3398+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000223C 00                                 3399+         dc bl.8'00000000'                                              02-DCCCA
0000223D 000000                             3400+         dc al3(0)                                                      02-DCCCA
00002240 00000000000021F8                   3401+         dc ad(@LNAME1381)                                              02-DCCCA
00002248                                    3402+         ds 0d                                                          02-DCCCA
00002248 0000000000002210                   3403+         dc ad($eye0074)                                                02-DCCCA
00002250 0000000000000000                   3404+         dc ad(0)                                                       02-DCCCA
00002258                                    3405+         ds    0d                                                       01-DCCPR
                                            3406+         entry rd_kafka_timers_run                                      01-DCCPR
00002258                                    3407+rd_kafka_timers_run ds 0d                                               01-DCCPR
00002258                                    3408+@REGION_1381_1 ds 0h                                                    01-DCCPR
00002258 EBEC D008 0024          00000008   3409+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000225E E3E0 D088 0004          00000088   3410+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002264 E3C0 D090 0004          00000090   3411+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000226A B904 002E                          3412+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000226E E3B0 C018 0004          00000018   3413+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002274 A7EB 00C8               000000C8   3414+         aghi  14,200              increase by frame size               01-DCCPR
00002278 E3E0 C020 0021          00000020   3415+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000227E 4720 B020               00000020   3416+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002282                                    3417+@PER_1381 ds   0h                                                       01-DCCPR
00002282 EBDE 2080 0024          00000080   3418+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002288 E3C0 2090 0024          00000090   3419+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000228E B904 00D2                          3420+         lgr   13,2                set real frame pointer               01-DCCPR
00002292 B904 00CF                          3421+         lgr   12,15               set base reg                         01-DCCPR
                        00002258            3422+         using @REGION_1381_1,12                                        01-DCCPR
                                            3423 * ******* End of Prologue
                                            3424 * *
                                            3425 * ***      rd_ts_t now = rd_clock();
00002296 E350 1000 0004          00000000   3426          LG    5,0(0,1)    ; rkts
0000229C 5860 100C               0000000C   3427          L     6,12(0,1)   ; timeout_us
                                                                                                                           Page   72 
  Active Usings: @REGION_1381_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000022A0 E3F0 C080 0004          000022D8   3428          LG    15,@lit_1381_104 ; rd_clock
000022A6                                    3429 @@gen_label188 DS    0H
000022A6 05EF                               3430          BALR  14,15
000022A8                                    3431 @@gen_label189 DS    0H
000022A8 B904 002F                          3432          LGR   2,15        ; now
                                            3433 * ***      rd_ts_t end = now + timeout_us;
000022AC B904 003F                          3434          LGR   3,15
000022B0 B918 0036                          3435          AGFR  3,6
                                            3436 * ***
                                            3437 * ***           rd_kafka_timers_lock(rkts);
000022B4 E350 D0B0 0024          000000B0   3438          STG   5,176(0,13)
000022BA 4110 D0B0               000000B0   3439          LA    1,176(0,13)
000022BE E3F0 C088 0004          000022E0   3440          LG    15,@lit_1381_105 ; rd_kafka_timers_lock
000022C4                                    3441 @@gen_label190 DS    0H
000022C4 05EF                               3442          BALR  14,15
000022C6                                    3443 @@gen_label191 DS    0H
                                            3444 * ***
                                            3445 * ***      while (!(rd_atomic32_get(&(rkts->rkts_rk)->rk_terminate) & \
                                            3446 * 0x1) && now <= end) {
000022C6 47F0 C228               00002480   3447          B     @L698
000022D0                                    3448          DS    0D
000022D0 000000C8                           3449 @FRAMESIZE_1381 DC F'200'
000022D4 00000000
000022D8 0000000000000190                   3450 @lit_1381_104 DC AD(rd_clock)
000022E0 0000000000000C68                   3451 @lit_1381_105 DC AD(rd_kafka_timers_lock)
000022E8 00000000000020C0                   3452 @lit_1381_106 DC AD(rd_kafka_timers_next)
000022F0 0000000000000000                   3453 @lit_1381_108 DC AD(cnd_timedwait_ms)
000022F8 000003E8                           3454 @lit_1381_107 DC F'1000' 0x000003e8
000022FC 00000000
00002300 00000000000010A8                   3455 @lit_1381_110 DC AD(rd_kafka_timer_unschedule)
00002308 0000000000000D88                   3456 @lit_1381_111 DC AD(rd_kafka_timers_unlock)
00002310 0000000000000EA8                   3457 @lit_1381_113 DC AD(rd_kafka_timer_started)
00002318 0000000000000F48                   3458 @lit_1381_114 DC AD(rd_kafka_timer_scheduled)
00002320 0000000000001410                   3459 @lit_1381_115 DC AD(rd_kafka_timer_schedule)
00002328 0000000000000060                   3460 @lit_1381_116 DC AD(rd_atomic32_get)
00002330                                    3461 @L697    DS    0H
                                            3462 * ***         int64_t sleeptime;
                                            3463 * ***         rd_kafka_timer_t *rtmr;
                                            3464 * ***
                                            3465 * ***         if (timeout_us != 0) {
00002330 1266                               3466          LTR   6,6
00002332 4780 C13C               00002394   3467          BE    @L700
                                            3468 * ***            sleeptime = rd_kafka_timers_next(rkts,
                                            3469 * ***                         timeout_us,
                                            3470 * ***                         0);
00002336 E350 D0B0 0024          000000B0   3471          STG   5,176(0,13)
0000233C B914 00F6                          3472          LGFR  15,6
00002340 E3F0 D0B8 0024          000000B8   3473          STG   15,184(0,13)
00002346 D707 D0C0 D0C0 000000C0 000000C0   3474          XC    192(8,13),192(13)
0000234C 4110 D0B0               000000B0   3475          LA    1,176(0,13)
00002350 E3F0 C090 0004          000022E8   3476          LG    15,@lit_1381_106 ; rd_kafka_timers_next
00002356                                    3477 @@gen_label193 DS    0H
                                                                                                                           Page   73 
  Active Usings: @REGION_1381_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002356 05EF                               3478          BALR  14,15
00002358                                    3479 @@gen_label194 DS    0H
                                            3480 * ***
                                            3481 * ***            if (sleeptime > 0) {
00002358 B902 001F                          3482          LTGR  1,15
0000235C 47D0 C13C               00002394   3483          BNH   @L700
                                            3484 * ***               cnd_timedwait_ms(&rkts->rkts_cond,
                                            3485 * ***                      &rkts->rkts_lock,
                                            3486 * ***                      (int)(sleeptime / 1000));
00002360 4110 5040               00000040   3487          LA    1,64(0,5)
00002364 E310 D0B0 0024          000000B0   3488          STG   1,176(0,13)
0000236A 4110 5018               00000018   3489          LA    1,24(0,5)
0000236E E310 D0B8 0024          000000B8   3490          STG   1,184(0,13)
00002374 B904 009F                          3491          LGR   9,15
00002378 E380 C0A0 001D          000022F8   3492          DSGF  8,@lit_1381_107
0000237E B914 00F9                          3493          LGFR  15,9
00002382 E3F0 D0C0 0024          000000C0   3494          STG   15,192(0,13)
00002388 4110 D0B0               000000B0   3495          LA    1,176(0,13)
0000238C E3F0 C098 0004          000022F0   3496          LG    15,@lit_1381_108 ; cnd_timedwait_ms
00002392                                    3497 @@gen_label196 DS    0H
00002392 05EF                               3498          BALR  14,15
00002394                                    3499 @@gen_label197 DS    0H
                                            3500 * ***
                                            3501 * ***            }
00002394                                    3502 @L701    DS    0H
                                            3503 * ***         }
00002394                                    3504 @L700    DS    0H
                                            3505 * ***
                                            3506 * ***         now = rd_clock();
00002394 E3F0 C080 0004          000022D8   3507          LG    15,@lit_1381_104 ; rd_clock
0000239A                                    3508 @@gen_label198 DS    0H
0000239A 05EF                               3509          BALR  14,15
0000239C                                    3510 @@gen_label199 DS    0H
0000239C B904 002F                          3511          LGR   2,15        ; now
                                            3512 * ***
                                            3513 * ***         while ((rtmr = ((&rkts->rkts_timers)->tqh_first)) &&
000023A0 47F0 C202               0000245A   3514          B     @L705
000023A4                                    3515 @L704    DS    0H
                                            3516 * ***
                                            3517 * ***            rd_kafka_timer_unschedule(rkts, rtmr);
000023A4 E350 D0B0 0024          000000B0   3518          STG   5,176(0,13)
000023AA E340 D0B8 0024          000000B8   3519          STG   4,184(0,13)
000023B0 4110 D0B0               000000B0   3520          LA    1,176(0,13)
000023B4 E3F0 C0A8 0004          00002300   3521          LG    15,@lit_1381_110 ; rd_kafka_timer_unschedule
000023BA                                    3522 @@gen_label200 DS    0H
000023BA 05EF                               3523          BALR  14,15
000023BC                                    3524 @@gen_label201 DS    0H
                                            3525 * ***
                                            3526 * ***
                                            3527 * ***
                                            3528 * ***                           if (rtmr->rtmr_oneshot)
000023BC 9500 4020      00000020 00000000   3529          CLI   32(4),0
                                                                                                                           Page   74 
  Active Usings: @REGION_1381_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000023C0 4780 C172               000023CA   3530          BE    @L707
                                            3531 * ***                                   rtmr->rtmr_interval = 0;
000023C4 E548 4018 0000          00000018   3532          MVGHI 24(4),0     ; offset of rtmr_interval in rd_kafka_timer_*
                                                                s
000023CA                                    3533 @L707    DS    0H
                                            3534 * ***
                                            3535 * ***                           rd_kafka_timers_unlock(rkts);
000023CA E350 D0B0 0024          000000B0   3536          STG   5,176(0,13)
000023D0 4110 D0B0               000000B0   3537          LA    1,176(0,13)
000023D4 E3F0 C0B0 0004          00002308   3538          LG    15,@lit_1381_111 ; rd_kafka_timers_unlock
000023DA                                    3539 @@gen_label203 DS    0H
000023DA 05EF                               3540          BALR  14,15
000023DC                                    3541 @@gen_label204 DS    0H
                                            3542 * ***
                                            3543 * ***            rtmr->rtmr_callback(rkts, rtmr->rtmr_arg);
000023DC E350 D0B0 0024          000000B0   3544          STG   5,176(0,13)
000023E2 E3F0 4030 0004          00000030   3545          LG    15,48(0,4)
000023E8 E3F0 D0B8 0024          000000B8   3546          STG   15,184(0,13)
000023EE E3F0 4028 0004          00000028   3547          LG    15,40(0,4)  ; offset of rtmr_callback in rd_kafka_timer_*
                                                                s
000023F4 4110 D0B0               000000B0   3548          LA    1,176(0,13)
000023F8                                    3549 @@gen_label205 DS    0H
000023F8 05EF                               3550          BALR  14,15
000023FA                                    3551 @@gen_label206 DS    0H
                                            3552 * ***
                                            3553 * ***                           rd_kafka_timers_lock(rkts);
000023FA E350 D0B0 0024          000000B0   3554          STG   5,176(0,13)
00002400 4110 D0B0               000000B0   3555          LA    1,176(0,13)
00002404 E3F0 C088 0004          000022E0   3556          LG    15,@lit_1381_105 ; rd_kafka_timers_lock
0000240A                                    3557 @@gen_label207 DS    0H
0000240A 05EF                               3558          BALR  14,15
0000240C                                    3559 @@gen_label208 DS    0H
                                            3560 * ***
                                            3561 * ***
                                            3562 * ***
                                            3563 * ***            if (rd_kafka_timer_started(rtmr) &&
0000240C E340 D0B0 0024          000000B0   3564          STG   4,176(0,13)
00002412 4110 D0B0               000000B0   3565          LA    1,176(0,13)
00002416 E3F0 C0B8 0004          00002310   3566          LG    15,@lit_1381_113 ; rd_kafka_timer_started
0000241C                                    3567 @@gen_label209 DS    0H
0000241C 05EF                               3568          BALR  14,15
0000241E                                    3569 @@gen_label210 DS    0H
0000241E 12FF                               3570          LTR   15,15
00002420 4780 C202               0000245A   3571          BZ    @L705
                                            3572 * ***                !rd_kafka_timer_scheduled(rtmr))
00002424 E340 D0B0 0024          000000B0   3573          STG   4,176(0,13)
0000242A 4110 D0B0               000000B0   3574          LA    1,176(0,13)
0000242E E3F0 C0C0 0004          00002318   3575          LG    15,@lit_1381_114 ; rd_kafka_timer_scheduled
00002434                                    3576 @@gen_label212 DS    0H
00002434 05EF                               3577          BALR  14,15
00002436                                    3578 @@gen_label213 DS    0H
00002436 12FF                               3579          LTR   15,15
                                                                                                                           Page   75 
  Active Usings: @REGION_1381_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002438 4770 C202               0000245A   3580          BNZ   @L705
                                            3581 * ***               rd_kafka_timer_schedule(rkts, rtmr, 0);
0000243C E350 D0B0 0024          000000B0   3582          STG   5,176(0,13)
00002442 E340 D0B8 0024          000000B8   3583          STG   4,184(0,13)
00002448 D707 D0C0 D0C0 000000C0 000000C0   3584          XC    192(8,13),192(13)
0000244E 4110 D0B0               000000B0   3585          LA    1,176(0,13)
00002452 E3F0 C0C8 0004          00002320   3586          LG    15,@lit_1381_115 ; rd_kafka_timer_schedule
00002458                                    3587 @@gen_label215 DS    0H
00002458 05EF                               3588          BALR  14,15
0000245A                                    3589 @@gen_label216 DS    0H
0000245A                                    3590 @L708    DS    0H
                                            3591 * ***         }
0000245A                                    3592 @L705    DS    0H
0000245A E340 5000 0004          00000000   3593          LG    4,0(0,5)    ; rkts
00002460 B902 00F4                          3594          LTGR  15,4
00002464 4780 C21E               00002476   3595          BZ    @L706
                                            3596 * ***                rtmr->rtmr_next <= now) {
00002468 E3F0 4010 0004          00000010   3597          LG    15,16(0,4)  ; offset of rtmr_next in rd_kafka_timer_s
0000246E B920 00F2                          3598          CGR   15,2
00002472 47D0 C14C               000023A4   3599          BNH   @L704
00002476                                    3600 @L706    DS    0H
                                            3601 * ***
                                            3602 * ***         if (timeout_us == 0) {
00002476 1266                               3603          LTR   6,6
00002478 4770 C228               00002480   3604          BNE   @L709
                                            3605 * ***
                                            3606 * ***            break;
0000247C 47F0 C254               000024AC   3607          B     @L695
                                            3608 * ***         }
00002480                                    3609 @L709    DS    0H
                                            3610 * ***      }
00002480                                    3611 @L698    DS    0H
00002480 E3F0 5010 0004          00000010   3612          LG    15,16(0,5)  ; offset of rkts_rk in rd_kafka_timers_s
00002486 41F0 F970               00000970   3613          LA    15,2416(0,15)
0000248A E3F0 D0B0 0024          000000B0   3614          STG   15,176(0,13)
00002490 4110 D0B0               000000B0   3615          LA    1,176(0,13)
00002494 E3F0 C0D0 0004          00002328   3616          LG    15,@lit_1381_116 ; rd_atomic32_get
0000249A                                    3617 @@gen_label220 DS    0H
0000249A 05EF                               3618          BALR  14,15
0000249C                                    3619 @@gen_label221 DS    0H
0000249C A7F1 0001               00000001   3620          TML   15,1
000024A0 4770 C254               000024AC   3621          BNZ   @L695
000024A4 B920 0023                          3622          CGR   2,3
000024A8 47D0 C0D8               00002330   3623          BNH   @L697
000024AC                                    3624 @L695    DS    0H
                                            3625 * ***
                                            3626 * ***      rd_kafka_timers_unlock(rkts);
000024AC E350 D0B0 0024          000000B0   3627          STG   5,176(0,13)
000024B2 4110 D0B0               000000B0   3628          LA    1,176(0,13)
000024B6 E3F0 C0B0 0004          00002308   3629          LG    15,@lit_1381_111 ; rd_kafka_timers_unlock
000024BC                                    3630 @@gen_label224 DS    0H
000024BC 05EF                               3631          BALR  14,15
                                                                                                                           Page   76 
  Active Usings: @REGION_1381_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000024BE                                    3632 @@gen_label225 DS    0H
                                            3633 * ***   }
000024BE                                    3634 @ret_lab_1381 DS 0H
                                            3635 * * **** Start of Epilogue
                                            3636          DCCEPIL
000024BE                                    3637+         ds 0h                                                          01-DCCEP
                                            3638+* Epilog
000024BE D707 D088 D088 00000088 00000088   3639+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000024C4 E3D0 D080 0004          00000080   3640+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000024CA E3C0 D090 0004          00000090   3641+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000024D0 E3B0 C018 0004          00000018   3642+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000024D6 E3C0 B010 0021          00000010   3643+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000024DC E3E0 D008 0004          00000008   3644+         lg  14,8(0,13)          load up return address                 01-DCCEP
000024E2 EB1C D020 0004          00000020   3645+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000024E8 078E                               3646+         bcr 8,14                if same dsab, just return              01-DCCEP
000024EA E3F0 D010 0024          00000010   3647+         stg 15,16(0,13)         save return code                       01-DCCEP
000024F0 E300 D018 0024          00000018   3648+         stg 0,24(0,13)          save more return code                  01-DCCEP
000024F6 E3F0 D090 0004          00000090   3649+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000024FC E3F0 F018 0004          00000018   3650+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002502 47F0 F040               00000040   3651+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3652+* End of Epilog
                                            3653 * * **** End of Epilogue
                                            3654          DROP  12
                                            3655 *
                                            3656 *   DSECT for automatic variables in "rd_kafka_timers_run"
                                            3657 *      (FUNCTION #1381)
                                            3658 *
00000000                00000000 000000B0   3659 @AUTO#rd_kafka_timers_run DSECT
00000000                                    3660          DS    XL168
000000A8                                    3661 rd_kafka_timers_run#sleeptime#1 DS 8XL1 ; sleeptime
000000B0                000000B0 000000A8   3662          ORG   @AUTO#rd_kafka_timers_run+168
000000A8                                    3663 rd_kafka_timers_run#end#0 DS 8XL1 ; end
000000B0                000000B0 000000A8   3664          ORG   @AUTO#rd_kafka_timers_run+168
000000A8                                    3665 rd_kafka_timers_run#now#0 DS 8XL1 ; now
                                            3666 *
00002506                00000000 00002890   3667 @CODE    CSECT
                                            3668 *
                                            3669 *
                                            3670 *
                                            3671 * ....... start of rd_kafka_timers_destroy
                                            3672 rd_kafka_timers_destroy ALIAS X'99846D92818692816DA389948599A26D8485A2A*
                                                                39996A8'
00002506                                    3673 @LNAME1382 DS  0H
00002506 00000017                           3674          DC    X'00000017'
0000250A 99846D9281869281                   3675          DC    C'rd_kafka_timers_destroy'
00002521 00                                 3676          DC    X'00'
                                            3677 rd_kafka_timers_destroy DCCPRLG CINDEX=1382,BASER=12,FRAME=216,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME1382
                                            3678          macro
                                            3679          dccextrn &m
                                            3680          gblc    &$dccext(1000)
                                            3681          gbla    &$dccexti
                                                                                                                           Page   77 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3682          lcla    &i
                                            3683 &$dccext(&$dccexti+1) setc    '&m'
                                            3684 &i       seta    1
                                            3685 .loop    aif    (&i gt &$dccexti).around
                                            3686          aif    ('&$dccext(&i)' eq '&m').getout
                                            3687 &i       seta    &i+1
                                            3688          ago     .loop
                                            3689 .around  anop
                                            3690 &$dccexti seta &$dccexti+1
                                            3691          extrn  &m
                                            3692 .getout  anop
                                            3693          mend
00002528                                    3694+$eye0077    ds    0d                                                    02-DCCCA
00002528 C4C3C3                             3695+         dc cl3'DCC'                                                    02-DCCCA
0000252B 01                                 3696+         dc xl1'01' format one                                          02-DCCCA
0000252C 00000000                           3697+         dc a(0)                                                        02-DCCCA
00002530 000000000000259A                   3698+         dc ad(@PER_1382)                                               02-DCCCA
00002538 00000000000000D8                   3699+         dc ad(216)                                                     02-DCCCA
00002540 0000000000000000                   3700+         dc ad(0)                                                       02-DCCCA
00002548 0000000000001000                   3701+         dc ad(4096)                                                    02-DCCCA
00002550 20                                 3702+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002551 03                                 3703+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002552 03                                 3704+         dc al1(3)                                                      02-DCCCA
00002553 08                                 3705+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002554 00                                 3706+         dc bl.8'00000000'                                              02-DCCCA
00002555 000000                             3707+         dc al3(0)                                                      02-DCCCA
00002558 0000000000002506                   3708+         dc ad(@LNAME1382)                                              02-DCCCA
00002560                                    3709+         ds 0d                                                          02-DCCCA
00002560 0000000000002528                   3710+         dc ad($eye0077)                                                02-DCCCA
00002568 0000000000000000                   3711+         dc ad(0)                                                       02-DCCCA
00002570                                    3712+         ds    0d                                                       01-DCCPR
                                            3713+         entry rd_kafka_timers_destroy                                  01-DCCPR
00002570                                    3714+rd_kafka_timers_destroy ds 0d                                           01-DCCPR
00002570                                    3715+@REGION_1382_1 ds 0h                                                    01-DCCPR
00002570 EBEC D008 0024          00000008   3716+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002576 E3E0 D088 0004          00000088   3717+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000257C E3C0 D090 0004          00000090   3718+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002582 B904 002E                          3719+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002586 E3B0 C018 0004          00000018   3720+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000258C A7EB 00D8               000000D8   3721+         aghi  14,216              increase by frame size               01-DCCPR
00002590 E3E0 C020 0021          00000020   3722+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002596 4720 B020               00000020   3723+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000259A                                    3724+@PER_1382 ds   0h                                                       01-DCCPR
0000259A EBDE 2080 0024          00000080   3725+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000025A0 E3C0 2090 0024          00000090   3726+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000025A6 B904 00D2                          3727+         lgr   13,2                set real frame pointer               01-DCCPR
000025AA B904 00CF                          3728+         lgr   12,15               set base reg                         01-DCCPR
                        00002570            3729+         using @REGION_1382_1,12                                        01-DCCPR
                                            3730 * ******* End of Prologue
                                            3731 * *
000025AE E320 1000 0004          00000000   3732          LG    2,0(0,1)    ; rkts
                                            3733 * ***           rd_kafka_timer_t *rtmr;
                                                                                                                           Page   78 
  Active Usings: @REGION_1382_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3734 * ***
                                            3735 * ***           rd_kafka_timers_lock(rkts);
000025B4 E320 D0B0 0024          000000B0   3736          STG   2,176(0,13)
000025BA 4110 D0B0               000000B0   3737          LA    1,176(0,13)
000025BE E3F0 C068 0004          000025D8   3738          LG    15,@lit_1382_119 ; rd_kafka_timers_lock
000025C4                                    3739 @@gen_label226 DS    0H
000025C4 05EF                               3740          BALR  14,15
000025C6                                    3741 @@gen_label227 DS    0H
                                            3742 * ***           rkts->rkts_enabled = 0;
000025C6 E54C 2078 0000          00000078   3743          MVHI  120(2),0    ; offset of rkts_enabled in rd_kafka_timers_*
                                                                s
                                            3744 * ***           while ((rtmr = ((&rkts->rkts_timers)->tqh_first)))
000025CC 47F0 C0C6               00002636   3745          B     @L713
000025D0                                    3746          DS    0D
000025D0 000000D8                           3747 @FRAMESIZE_1382 DC F'216'
000025D4 00000000
000025D8 0000000000000C68                   3748 @lit_1382_119 DC AD(rd_kafka_timers_lock)
000025E0 0000000000001568                   3749 @lit_1382_120 DC AD(rd_kafka_timer_stop)
000025E8 0000000000000000                   3750 @lit_1382_123 DC AD(rd_kafka_crash)
000025F0 0000000000002890                   3751 @lit_1382_122 DC AD(@DATA)
000025F8 0000000000002A4E                   3752 @lit_1382_121 DC AD(@strings@)
00002600 0000000000000D88                   3753 @lit_1382_124 DC AD(rd_kafka_timers_unlock)
00002608 0000000000000000                   3754 @lit_1382_125 DC AD(cnd_destroy)
00002610 0000000000000000                   3755 @lit_1382_126 DC AD(mtx_destroy)
00002618                                    3756 @L712    DS    0H
                                            3757 * ***                   rd_kafka_timer_stop(rkts, rtmr, 0);
00002618 E320 D0B0 0024          000000B0   3758          STG   2,176(0,13)
0000261E E3F0 D0B8 0024          000000B8   3759          STG   15,184(0,13)
00002624 D707 D0C0 D0C0 000000C0 000000C0   3760          XC    192(8,13),192(13)
0000262A 4110 D0B0               000000B0   3761          LA    1,176(0,13)
0000262E E3F0 C070 0004          000025E0   3762          LG    15,@lit_1382_120 ; rd_kafka_timer_stop
00002634                                    3763 @@gen_label228 DS    0H
00002634 05EF                               3764          BALR  14,15
00002636                                    3765 @@gen_label229 DS    0H
00002636                                    3766 @L713    DS    0H
00002636 E3F0 2000 0004          00000000   3767          LG    15,0(0,2)   ; rkts
0000263C B902 001F                          3768          LTGR  1,15
00002640 4770 C0A8               00002618   3769          BNZ   @L712
                                            3770 * ***           do { if (((!((((&rkts->rkts_timers)->tqh_first) == (((\
                                            3771 * void *)0))))))) rd_kafka_crash("C:\\asgkafka\\librdkafka\\src\\rdkaf\
                                            3772 * ka_timer.c",357, __FUNCTION__, (rkts->rkts_rk), "assert: " "TAILQ_EM\
                                            3773 * PTY(&rkts->rkts_timers)"); } while (0);
00002644                                    3774 @L714    DS    0H
00002644 E3F0 2000 0002          00000000   3775          LTG   15,0(0,2)   ; rkts
0000264A 4780 C126               00002696   3776          BE    @L717
0000264E E3F0 C088 0004          000025F8   3777          LG    15,@lit_1382_121
00002654 4110 F048               00000048   3778          LA    1,72(0,15)
00002658 E310 D0B0 0024          000000B0   3779          STG   1,176(0,13)
0000265E E548 D0B8 0165          000000B8   3780          MVGHI 184(13),357
00002664 E310 C080 0004          000025F0   3781          LG    1,@lit_1382_122
0000266A 4110 11A6               000001A6   3782          LA    1,422(0,1)
0000266E E310 D0C0 0024          000000C0   3783          STG   1,192(0,13)
                                                                                                                           Page   79 
  Active Usings: @REGION_1382_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002674 E310 2010 0004          00000010   3784          LG    1,16(0,2)
0000267A E310 D0C8 0024          000000C8   3785          STG   1,200(0,13)
00002680 41F0 F074               00000074   3786          LA    15,116(0,15)
00002684 E3F0 D0D0 0024          000000D0   3787          STG   15,208(0,13)
0000268A 4110 D0B0               000000B0   3788          LA    1,176(0,13)
0000268E E3F0 C078 0004          000025E8   3789          LG    15,@lit_1382_123 ; rd_kafka_crash
00002694                                    3790 @@gen_label232 DS    0H
00002694 05EF                               3791          BALR  14,15
00002696                                    3792 @@gen_label233 DS    0H
00002696                                    3793 @L717    DS    0H
                                            3794 * ***           rd_kafka_timers_unlock(rkts);
00002696 E320 D0B0 0024          000000B0   3795          STG   2,176(0,13)
0000269C 4110 D0B0               000000B0   3796          LA    1,176(0,13)
000026A0 E3F0 C090 0004          00002600   3797          LG    15,@lit_1382_124 ; rd_kafka_timers_unlock
000026A6                                    3798 @@gen_label234 DS    0H
000026A6 05EF                               3799          BALR  14,15
000026A8                                    3800 @@gen_label235 DS    0H
                                            3801 * ***
                                            3802 * ***           cnd_destroy(&rkts->rkts_cond);
000026A8 41F0 2040               00000040   3803          LA    15,64(0,2)
000026AC E3F0 D0B0 0024          000000B0   3804          STG   15,176(0,13)
000026B2 4110 D0B0               000000B0   3805          LA    1,176(0,13)
000026B6 E3F0 C098 0004          00002608   3806          LG    15,@lit_1382_125 ; cnd_destroy
000026BC                                    3807 @@gen_label236 DS    0H
000026BC 05EF                               3808          BALR  14,15
000026BE                                    3809 @@gen_label237 DS    0H
                                            3810 * ***           mtx_destroy(&rkts->rkts_lock);
000026BE 41F0 2018               00000018   3811          LA    15,24(0,2)
000026C2 E3F0 D0B0 0024          000000B0   3812          STG   15,176(0,13)
000026C8 4110 D0B0               000000B0   3813          LA    1,176(0,13)
000026CC E3F0 C0A0 0004          00002610   3814          LG    15,@lit_1382_126 ; mtx_destroy
000026D2                                    3815 @@gen_label238 DS    0H
000026D2 05EF                               3816          BALR  14,15
000026D4                                    3817 @@gen_label239 DS    0H
                                            3818 * ***   }
000026D4                                    3819 @ret_lab_1382 DS 0H
                                            3820 * * **** Start of Epilogue
                                            3821          DCCEPIL
000026D4                                    3822+         ds 0h                                                          01-DCCEP
                                            3823+* Epilog
000026D4 D707 D088 D088 00000088 00000088   3824+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000026DA E3D0 D080 0004          00000080   3825+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000026E0 E3C0 D090 0004          00000090   3826+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000026E6 E3B0 C018 0004          00000018   3827+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000026EC E3C0 B010 0021          00000010   3828+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000026F2 E3E0 D008 0004          00000008   3829+         lg  14,8(0,13)          load up return address                 01-DCCEP
000026F8 EB1C D020 0004          00000020   3830+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000026FE 078E                               3831+         bcr 8,14                if same dsab, just return              01-DCCEP
00002700 E3F0 D010 0024          00000010   3832+         stg 15,16(0,13)         save return code                       01-DCCEP
00002706 E300 D018 0024          00000018   3833+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000270C E3F0 D090 0004          00000090   3834+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002712 E3F0 F018 0004          00000018   3835+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page   80 
  Active Usings: @REGION_1382_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002718 47F0 F040               00000040   3836+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3837+* End of Epilog
                                            3838 * * **** End of Epilogue
                                            3839          DROP  12
                                            3840 *
                                            3841 *   DSECT for automatic variables in "rd_kafka_timers_destroy"
                                            3842 *      (FUNCTION #1382)
                                            3843 *
00000000                00000000 000000A8   3844 @AUTO#rd_kafka_timers_destroy DSECT
00000000                                    3845          DS    XL168
                                            3846 *
0000271C                00000000 00002890   3847 @CODE    CSECT
                                            3848 *
                                            3849 *
                                            3850 *
                                            3851 * ....... start of rd_kafka_timers_init
                                            3852 rd_kafka_timers_init ALIAS X'99846D92818692816DA389948599A26D899589A3'
0000271C                                    3853 @LNAME1383 DS  0H
0000271C 00000014                           3854          DC    X'00000014'
00002720 99846D9281869281                   3855          DC    C'rd_kafka_timers_init'
00002734 00                                 3856          DC    X'00'
                                            3857 rd_kafka_timers_init DCCPRLG CINDEX=1383,BASER=12,FRAME=184,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME1383
                                            3858          macro
                                            3859          dccextrn &m
                                            3860          gblc    &$dccext(1000)
                                            3861          gbla    &$dccexti
                                            3862          lcla    &i
                                            3863 &$dccext(&$dccexti+1) setc    '&m'
                                            3864 &i       seta    1
                                            3865 .loop    aif    (&i gt &$dccexti).around
                                            3866          aif    ('&$dccext(&i)' eq '&m').getout
                                            3867 &i       seta    &i+1
                                            3868          ago     .loop
                                            3869 .around  anop
                                            3870 &$dccexti seta &$dccexti+1
                                            3871          extrn  &m
                                            3872 .getout  anop
                                            3873          mend
00002738                                    3874+$eye0080    ds    0d                                                    02-DCCCA
00002738 C4C3C3                             3875+         dc cl3'DCC'                                                    02-DCCCA
0000273B 01                                 3876+         dc xl1'01' format one                                          02-DCCCA
0000273C 00000000                           3877+         dc a(0)                                                        02-DCCCA
00002740 00000000000027AA                   3878+         dc ad(@PER_1383)                                               02-DCCCA
00002748 00000000000000B8                   3879+         dc ad(184)                                                     02-DCCCA
00002750 0000000000000000                   3880+         dc ad(0)                                                       02-DCCCA
00002758 0000000000001000                   3881+         dc ad(4096)                                                    02-DCCCA
00002760 20                                 3882+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002761 03                                 3883+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002762 03                                 3884+         dc al1(3)                                                      02-DCCCA
00002763 08                                 3885+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002764 00                                 3886+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page   81 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002765 000000                             3887+         dc al3(0)                                                      02-DCCCA
00002768 000000000000271C                   3888+         dc ad(@LNAME1383)                                              02-DCCCA
00002770                                    3889+         ds 0d                                                          02-DCCCA
00002770 0000000000002738                   3890+         dc ad($eye0080)                                                02-DCCCA
00002778 0000000000000000                   3891+         dc ad(0)                                                       02-DCCCA
00002780                                    3892+         ds    0d                                                       01-DCCPR
                                            3893+         entry rd_kafka_timers_init                                     01-DCCPR
00002780                                    3894+rd_kafka_timers_init ds 0d                                              01-DCCPR
00002780                                    3895+@REGION_1383_1 ds 0h                                                    01-DCCPR
00002780 EBEC D008 0024          00000008   3896+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002786 E3E0 D088 0004          00000088   3897+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000278C E3C0 D090 0004          00000090   3898+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002792 B904 002E                          3899+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002796 E3B0 C018 0004          00000018   3900+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000279C A7EB 00B8               000000B8   3901+         aghi  14,184              increase by frame size               01-DCCPR
000027A0 E3E0 C020 0021          00000020   3902+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000027A6 4720 B020               00000020   3903+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000027AA                                    3904+@PER_1383 ds   0h                                                       01-DCCPR
000027AA EBDE 2080 0024          00000080   3905+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000027B0 E3C0 2090 0024          00000090   3906+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000027B6 B904 00D2                          3907+         lgr   13,2                set real frame pointer               01-DCCPR
000027BA B904 00CF                          3908+         lgr   12,15               set base reg                         01-DCCPR
                        00002780            3909+         using @REGION_1383_1,12                                        01-DCCPR
000027BE B904 0031                          3910          LGR   3,1         ; ptr to parm area
                                            3911 * ******* End of Prologue
                                            3912 * *
                                            3913 * ***           __memset(rkts,0,sizeof(*rkts));
000027C2 E320 3000 0004          00000000   3914          LG    2,0(0,3)    ; rkts
                                            3915 * setting 128 bytes to 0x00
000027C8 D77F 2000 2000 00000000 00000000   3916          XC    0(128,2),0(2)
                                            3917 * ***           rkts->rkts_rk = rk;
000027CE E3F0 3008 0004          00000008   3918          LG    15,8(0,3)   ; rk
000027D4 E3F0 2010 0024          00000010   3919          STG   15,16(0,2)  ; offset of rkts_rk in rd_kafka_timers_s
                                            3920 * ***           do { (&rkts->rkts_timers)->tqh_first = (((void *)0)); \
                                            3921 * (&rkts->rkts_timers)->tqh_last = &(&rkts->rkts_timers)->tqh_first; }\
                                            3922 *  while ( 0);
000027DA                                    3923 @L718    DS    0H
000027DA A7F9 0000               00000000   3924          LGHI  15,0        ; 0
000027DE E3F0 2000 0024          00000000   3925          STG   15,0(0,2)   ; rkts
000027E4 E320 2008 0024          00000008   3926          STG   2,8(0,2)    ; offset of tqh_last in 0000044
                                            3927 * ***           mtx_init(&rkts->rkts_lock, 0);
000027EA 41F0 2018               00000018   3928          LA    15,24(0,2)
000027EE E3F0 D0A8 0024          000000A8   3929          STG   15,168(0,13)
000027F4 D707 D0B0 D0B0 000000B0 000000B0   3930          XC    176(8,13),176(13)
000027FA 4110 D0A8               000000A8   3931          LA    1,168(0,13)
000027FE E3F0 C100 0004          00002880   3932          LG    15,@lit_1383_129 ; mtx_init
00002804                                    3933 @@gen_label240 DS    0H
00002804 05EF                               3934          BALR  14,15
00002806                                    3935 @@gen_label241 DS    0H
                                            3936 * ***           cnd_init(&rkts->rkts_cond);
00002806 41F0 2040               00000040   3937          LA    15,64(0,2)
0000280A E3F0 D0A8 0024          000000A8   3938          STG   15,168(0,13)
                                                                                                                           Page   82 
  Active Usings: @REGION_1383_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002810 4110 D0A8               000000A8   3939          LA    1,168(0,13)
00002814 E3F0 C108 0004          00002888   3940          LG    15,@lit_1383_130 ; cnd_init
0000281A                                    3941 @@gen_label242 DS    0H
0000281A 05EF                               3942          BALR  14,15
0000281C                                    3943 @@gen_label243 DS    0H
                                            3944 * ***           rkts->rkts_enabled = 1;
0000281C E54C 2078 0001          00000078   3945          MVHI  120(2),1    ; offset of rkts_enabled in rd_kafka_timers_*
                                                                s
                                            3946 * ***           rkts->rkts_wakeq = wakeq;
00002822 E3F0 3010 0004          00000010   3947          LG    15,16(0,3)  ; wakeq
00002828 E3F0 2070 0024          00000070   3948          STG   15,112(0,2) ; offset of rkts_wakeq in rd_kafka_timers_s
                                            3949 * ***   }
0000282E                                    3950 @ret_lab_1383 DS 0H
                                            3951 * * **** Start of Epilogue
                                            3952          DCCEPIL
0000282E                                    3953+         ds 0h                                                          01-DCCEP
                                            3954+* Epilog
0000282E D707 D088 D088 00000088 00000088   3955+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002834 E3D0 D080 0004          00000080   3956+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000283A E3C0 D090 0004          00000090   3957+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002840 E3B0 C018 0004          00000018   3958+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002846 E3C0 B010 0021          00000010   3959+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000284C E3E0 D008 0004          00000008   3960+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002852 EB1C D020 0004          00000020   3961+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002858 078E                               3962+         bcr 8,14                if same dsab, just return              01-DCCEP
0000285A E3F0 D010 0024          00000010   3963+         stg 15,16(0,13)         save return code                       01-DCCEP
00002860 E300 D018 0024          00000018   3964+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002866 E3F0 D090 0004          00000090   3965+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000286C E3F0 F018 0004          00000018   3966+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002872 47F0 F040               00000040   3967+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3968+* End of Epilog
                                            3969 * * **** End of Epilogue
00002878                                    3970          DS    0D
00002878 000000B8                           3971 @FRAMESIZE_1383 DC F'184'
0000287C 00000000
00002880 0000000000000000                   3972 @lit_1383_129 DC AD(mtx_init)
00002888 0000000000000000                   3973 @lit_1383_130 DC AD(cnd_init)
                                            3974          DROP  12
                                            3975 *
                                            3976 *   DSECT for automatic variables in "rd_kafka_timers_init"
                                            3977 *      (FUNCTION #1383)
                                            3978 *
00000000                00000000 000000A8   3979 @AUTO#rd_kafka_timers_init DSECT
00000000                                    3980          DS    XL168
                                            3981 *
00002890                00000000 00002890   3982 @CODE    CSECT
                                            3983 @@STATIC ALIAS X'7C998492818692816DA38994859950'
                                            3984 @@STATIC DXD   219D
                                            3985 *
                                            3986 *  Non-Re-Entrant Data Section
                                            3987 *
00002890                00002890 00000794   3988 @DATA    CSECT
                                                                                                                           Page   83 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            3989 @DATA    RMODE ANY
                                            3990 @DATA    AMODE ANY
00002890 99846D8381939396                   3991 @@T48F   DC    X'99846D838193939683'               rd.calloc
00002899 00                                 3992          DC    1X'00'
0000289A 99846D9481939396                   3993 @@T493   DC    X'99846D948193939683'               rd.malloc
000028A3 00                                 3994          DC    1X'00'
000028A4 99846D9985819393                   3995 @@T498   DC    X'99846D99858193939683'             rd.realloc
000028AE 0000                               3996          DC    2X'00'
000028B0 99846DA2A39984A4                   3997 @@T49E   DC    X'99846DA2A39984A497'               rd.strdup
000028B9 00                                 3998          DC    1X'00'
000028BA 99846DA2A3999584                   3999 @@T4A3   DC    X'99846DA2A3999584A497'             rd.strndup
000028C4 0000                               4000          DC    2X'00'
000028C6 99846D9985868395                   4001 @@T4AB   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
000028D4 00000000                           4002          DC    4X'00'
000028D8 00000000                           4003 @@T65A   DC    4X'00'
000028DC 0000001A00000000                   4004          DC    X'0000001A000000000000002200000000' ................
000028EC 00000024                           4005          DC    X'00000024'                         ....
000028F0 99846D9281869281                   4006 @@T67D   DC    X'99846D92818692816D94A287986D8485' rd.kafka.msgq.de
00002900 98                                 4007          DC    X'98'                               q
00002901 00                                 4008          DC    1X'00'
00002902 99846D9281869281                   4009 @@T704   DC    X'99846D92818692816D986D8485A2A399' rd.kafka.q.destr
00002912 96A8F0                             4010          DC    X'96A8F0'                           oy0
00002915 00                                 4011          DC    1X'00'
00002916 99846D9281869281                   4012 @@T785   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00002926 856D8485A2A39996                   4013          DC    X'856D8485A2A39996A8F0'             e.destroy0
00002930 0000                               4014          DC    2X'00'
00002932 99846D9281869281                   4015 @@T78D   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00002942 856D8485936DA296                   4016          DC    X'856D8485936DA296A4998385'         e.del.source
0000294E 0000                               4017          DC    2X'00'
00002950 99846D9281869281                   4018 @@T794   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00002960 856D8485936DA296                   4019          DC    X'856D8485936DA296A49983856D9985A3' e.del.source.ret
00002970 A49995                             4020          DC    X'A49995'                           urn
00002973 00                                 4021          DC    1X'00'
00002974 99846D9281869281                   4022 @@T79C   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
00002984 856DA39989878785                   4023          DC    X'856DA3998987878599'               e.trigger
0000298D 00                                 4024          DC    1X'00'
0000298E 99846D9281869281                   4025 @@T7A0   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
0000299E 856D8485A2A39996                   4026          DC    X'856D8485A2A39996A8'               e.destroy
000029A7 00                                 4027          DC    1X'00'
000029A8 99846D9281869281                   4028 @@T7A5   DC    X'99846D92818692816D8595986D969583' rd.kafka.enq.onc
000029B8 856D8489A2818293                   4029          DC    X'856D8489A281829385'               e.disable
000029C1 00                                 4030          DC    1X'00'
000029C2 99846DA394978182                   4031 @@T7C5   DC    X'99846DA394978182A4866D8193939683' rd.tmpabuf.alloc
000029D2 F0                                 4032          DC    X'F0'                               0
000029D3 00                                 4033          DC    1X'00'
000029D4 99846D9281869281                   4034 @@T7F9   DC    X'99846D92818692816D82A4866DA49784' rd.kafka.buf.upd
000029E4 81A385                             4035          DC    X'81A385'                           ate
000029E7 00                                 4036          DC    1X'00'
000029E8 99846D9281869281                   4037 @@T81A   DC    X'99846D92818692816D82A4866D868995' rd.kafka.buf.fin
000029F8 819389A9856D8199                   4038          DC    X'819389A9856D81999981A88395A3'     alize.arraycnt
00002A06 0000                               4039          DC    2X'00'
00002A08 99846D9281869281                   4040 @@T857   DC    X'99846D92818692816D82A4866D839983' rd.kafka.buf.crc
                                                                                                                           Page   84 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002A18 6D899589A3                         4041          DC    X'6D899589A3'                       .init
00002A1D 00                                 4042          DC    1X'00'
00002A1E 99846D9281869281                   4043 @@TA27   DC    X'99846D92818692816D83A499996D94A2' rd.kafka.curr.ms
00002A2E 87A26DA2A482                       4044          DC    X'87A26DA2A482'                     gs.sub
00002A34 0000                               4045          DC    2X'00'
00002A36 99846D9281869281                   4046 @@TA95   DC    X'99846D92818692816DA389948599A26D' rd.kafka.timers.
00002A46 8485A2A39996A8                     4047          DC    X'8485A2A39996A8'                   destroy
00002A4D 00                                 4048          DC    1X'00'
00002A4E                                    4049 @strings@ DS   0H
00002A4E C37AE081A2879281                   4050          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
00002A5E 849281869281E0A2                   4051          DC    X'849281869281E0A29983E09984928186' dkafka.src.rdkaf
00002A6E 92816D98A485A485                   4052          DC    X'92816D98A485A4854B88000081A2A285' ka.queue.h..asse
00002A7E 99A37A4099929860                   4053          DC    X'99A37A40999298606E9992986D998586' rt..rkq..rkq.ref
00002A8E 8395A3406E40F000                   4054          DC    X'8395A3406E40F000C37AE081A2879281' cnt...0.C..asgka
00002A9E 869281E093898299                   4055          DC    X'869281E093898299849281869281E0A2' fka.librdkafka.s
00002AAE 9983E09984928186                   4056          DC    X'9983E0998492818692816DA389948599' rc.rdkafka.timer
00002ABE 4B83000081A2A285                   4057          DC    X'4B83000081A2A28599A37A40E3C1C9D3' .c..assert..TAIL
00002ACE D86DC5D4D7E3E84D                   4058          DC    X'D86DC5D4D7E3E84D509992A3A2606E99' Q.EMPTY..rkts..r
00002ADE 92A3A26DA3899485                   4059          DC    X'92A3A26DA389948599A25D00D7999684' kts.timers..Prod
00002AEE A4838500C685A383                   4060          DC    X'A4838500C685A3838800D68686A285A3' uce.Fetch.Offset
00002AFE 0000D485A3818481                   4061          DC    X'0000D485A3818481A3810000D3858184' ..Metadata..Lead
00002B0E 8599C19584C9A299                   4062          DC    X'8599C19584C9A2990000E2A39697D985' erAndIsr..StopRe
00002B1E 979389838100E497                   4063          DC    X'979389838100E4978481A385D485A381' plica.UpdateMeta
00002B2E 8481A3810000C396                   4064          DC    X'8481A3810000C39695A3999693938584' data..Controlled
00002B3E E288A4A38496A695                   4065          DC    X'E288A4A38496A6950000D68686A285A3' Shutdown..Offset
00002B4E C396949489A30000                   4066          DC    X'C396949489A30000D68686A285A3C685' Commit..OffsetFe
00002B5E A3838800C6899584                   4067          DC    X'A3838800C6899584C396969984899581' tch.FindCoordina
00002B6E A3969900D1968995                   4068          DC    X'A3969900D1968995C79996A49700C885' tor.JoinGroup.He
00002B7E 8199A3828581A300                   4069          DC    X'8199A3828581A300D38581A585C79996' artbeat.LeaveGro
00002B8E A4970000E2A89583                   4070          DC    X'A4970000E2A89583C79996A49700C485' up..SyncGroup.De
00002B9E A28399898285C799                   4071          DC    X'A28399898285C79996A497A20000D389' scribeGroups..Li
00002BAE A2A3C79996A497A2                   4072          DC    X'A2A3C79996A497A20000E281A293C881' stGroups..SaslHa
00002BBE 9584A28881928500                   4073          DC    X'9584A28881928500C19789E58599A289' ndshake.ApiVersi
00002BCE 96950000C3998581                   4074          DC    X'96950000C3998581A385E396978983A2' on..CreateTopics
00002BDE 0000C4859385A385                   4075          DC    X'0000C4859385A385E396978983A20000' ..DeleteTopics..
00002BEE C4859385A385D985                   4076          DC    X'C4859385A385D98583969984A200C995' DeleteRecords.In
00002BFE 89A3D7999684A483                   4077          DC    X'89A3D7999684A4838599C9840000D686' itProducerId..Of
00002C0E 86A285A3C69699D3                   4078          DC    X'86A285A3C69699D38581848599C59796' fsetForLeaderEpo
00002C1E 83880000C18484D7                   4079          DC    X'83880000C18484D78199A389A3899695' ch..AddPartition
00002C2E A2E396E3A7950000                   4080          DC    X'A2E396E3A7950000C18484D68686A285' sToTxn..AddOffse
00002C3E A3A2E396E3A79500                   4081          DC    X'A3A2E396E3A79500C59584E3A7950000' tsToTxn.EndTxn..
00002C4E E69989A385E3A795                   4082          DC    X'E69989A385E3A795D48199928599A200' WriteTxnMarkers.
00002C5E E3A795D68686A285                   4083          DC    X'E3A795D68686A285A3C396949489A300' TxnOffsetCommit.
00002C6E C485A28399898285                   4084          DC    X'C485A28399898285C18393A20000C399' DescribeAcls..Cr
00002C7E 8581A385C18393A2                   4085          DC    X'8581A385C18393A20000C4859385A385' eateAcls..Delete
00002C8E C18393A20000C485                   4086          DC    X'C18393A20000C485A28399898285C396' Acls..DescribeCo
00002C9E 95868987A200C193                   4087          DC    X'95868987A200C193A38599C396958689' nfigs.AlterConfi
00002CAE 87A20000C193A385                   4088          DC    X'87A20000C193A38599D9859793898381' gs..AlterReplica
00002CBE D39687C48999A200                   4089          DC    X'D39687C48999A200C485A28399898285' LogDirs.Describe
00002CCE D39687C48999A200                   4090          DC    X'D39687C48999A200E281A293C1A4A388' LogDirs.SaslAuth
00002CDE 8595A3898381A385                   4091          DC    X'8595A3898381A3850000C3998581A385' enticate..Create
00002CEE D78199A389A38996                   4092          DC    X'D78199A389A3899695A20000C3998581' Partitions..Crea
                                                                                                                           Page   85 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00002CFE A385C48593858781                   4093          DC    X'A385C48593858781A3899695E3969285' teDelegationToke
00002D0E 9500D9859585A6C4                   4094          DC    X'9500D9859585A6C48593858781A38996' n.RenewDelegatio
00002D1E 95E3969285950000                   4095          DC    X'95E3969285950000C5A797899985C485' nToken..ExpireDe
00002D2E 93858781A3899695                   4096          DC    X'93858781A3899695E39692859500C485' legationToken.De
00002D3E A28399898285C485                   4097          DC    X'A28399898285C48593858781A3899695' scribeDelegation
00002D4E E39692859500C485                   4098          DC    X'E39692859500C4859385A385C79996A4' Token.DeleteGrou
00002D5E 97A20000C5938583                   4099          DC    X'97A20000C5938583A3D38581848599A2' ps..ElectLeaders
00002D6E D98598A485A2A300                   4100          DC    X'D98598A485A2A300C995839985948595' Request.Incremen
00002D7E A38193C193A38599                   4101          DC    X'A38193C193A38599C39695868987A2D9' talAlterConfigsR
00002D8E 8598A485A2A30000                   4102          DC    X'8598A485A2A30000C193A38599D78199' equest..AlterPar
00002D9E A389A3899695D985                   4103          DC    X'A389A3899695D98581A2A28987959485' titionReassignme
00002DAE 95A3A2D98598A485                   4104          DC    X'95A3A2D98598A485A2A30000D389A2A3' ntsRequest..List
00002DBE D78199A389A38996                   4105          DC    X'D78199A389A3899695D98581A2A28987' PartitionReassig
00002DCE 95948595A3A2D985                   4106          DC    X'95948595A3A2D98598A485A2A300D686' nmentsRequest.Of
00002DDE 86A285A3C4859385                   4107          DC    X'86A285A3C4859385A385D98598A485A2' fsetDeleteReques
00002DEE A300C485A2839989                   4108          DC    X'A300C485A28399898285C393898595A3' t.DescribeClient
00002DFE D8A496A381A2D985                   4109          DC    X'D8A496A381A2D98598A485A2A300C193' QuotasRequest.Al
00002E0E A38599C393898595                   4110          DC    X'A38599C393898595A3D8A496A381A2D9' terClientQuotasR
00002E1E 8598A485A2A30000                   4111          DC    X'8598A485A2A30000C485A28399898285' equest..Describe
00002E2E E4A28599E2839981                   4112          DC    X'E4A28599E283998194C39985848595A3' UserScramCredent
00002E3E 898193A2D98598A4                   4113          DC    X'898193A2D98598A485A2A300C193A385' ialsRequest.Alte
00002E4E 99E4A28599E28399                   4114          DC    X'99E4A28599E283998194C39985848595' rUserScramCreden
00002E5E A3898193A2D98598                   4115          DC    X'A3898193A2D98598A485A2A30000E596' tialsRequest..Vo
00002E6E A385D98598A485A2                   4116          DC    X'A385D98598A485A2A300C285878995D8' teRequest.BeginQ
00002E7E A49699A494C59796                   4117          DC    X'A49699A494C597968388D98598A485A2' uorumEpochReques
00002E8E A300C59584D8A496                   4118          DC    X'A300C59584D8A49699A494C597968388' t.EndQuorumEpoch
00002E9E D98598A485A2A300                   4119          DC    X'D98598A485A2A300C485A28399898285' Request.Describe
00002EAE D8A49699A494D985                   4120          DC    X'D8A49699A494D98598A485A2A300C193' QuorumRequest.Al
00002EBE A38599C9A299D985                   4121          DC    X'A38599C9A299D98598A485A2A300E497' terIsrRequest.Up
00002ECE 8481A385C68581A3                   4122          DC    X'8481A385C68581A3A49985A2D98598A4' dateFeaturesRequ
00002EDE 85A2A300C595A585                   4123          DC    X'85A2A300C595A58593969785D98598A4' est.EnvelopeRequ
00002EEE 85A2A30095969585                   4124          DC    X'85A2A30095969585000087A989970000' est.none..gzip..
00002EFE A295819797A80000                   4125          DC    X'A295819797A8000093A9F400A9A2A384' snappy..lz4.zstd
00002F0E 0000899588859989                   4126          DC    X'0000899588859989A300839695868987' ..inherit.config
00002F1E A499858400009385                   4127          DC    X'A4998584000093858199958584008995' ured..learned.in
00002F2E A385999581930000                   4128          DC    X'A3859995819300009396878983819300' ternal..logical.
00002F3E C99589A30000E385                   4129          DC    X'C99589A30000E3859994899581A38500' Init..Terminate.
00002F4E C681A38193C59999                   4130          DC    X'C681A38193C5999996990000D98598A4' FatalError..Requ
00002F5E 85A2A3D7C9C40000                   4131          DC    X'85A2A3D7C9C40000E68189A3E3998195' estPID..WaitTran
00002F6E A2979699A300E681                   4132          DC    X'A2979699A300E68189A3D7C9C400C1A2' sport.WaitPID.As
00002F7E A289879585840000                   4133          DC    X'A289879585840000C499818995D985A2' signed..DrainRes
00002F8E 85A30000C4998189                   4134          DC    X'85A30000C499818995C2A4949700D985' et..DrainBump.Re
00002F9E 8184A8D596A3C183                   4135          DC    X'8184A8D596A3C18392858400D9858184' adyNotAcked.Read
00002FAE A800C995E3998195                   4136          DC    X'A800C995E3998195A28183A389969500' y.InTransaction.
00002FBE C285878995C39694                   4137          DC    X'C285878995C396949489A300C3969494' BeginCommit.Comm
00002FCE 89A3A3899587E399                   4138          DC    X'89A3A3899587E3998195A28183A38996' ittingTransactio
00002FDE 9500C396949489A3                   4139          DC    X'9500C396949489A3D596A3C183928584' n.CommitNotAcked
00002FEE 0000C1829699A389                   4140          DC    X'0000C1829699A3899587E3998195A281' ..AbortingTransa
00002FFE 83A389969500C182                   4141          DC    X'83A389969500C1829699A38584D596A3' ction.AbortedNot
0000300E C18392858400C182                   4142          DC    X'C18392858400C1829699A381829385C5' Acked.AbortableE
0000301E 999996990000                       4143          DC    X'999996990000'                     rror..
                                            4144 *
                                                                                                                           Page   86 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            4145 *
                                            4146 *   Re-entrant Data Initialization Section
                                            4147 *
                                            4148 @@INIT@  ALIAS C'rdkafka_timer:'
00003028                00003028 00001040   4149 @@INIT@  CSECT
                                            4150 @@INIT@  AMODE ANY
                                            4151 @@INIT@  RMODE ANY
00003028 05                                 4152          DC    XL1'5'
00003029 000000                             4153          DC    AL3(0)
0000302C 00000120                           4154          DC    AL4(288)
00003030 00000000                           4155          DC    4X'00'
00003034 00000000                           4156          DC    Q(@@STATIC)
00003038 00000000                           4157          DC    X'00000000'
0000303C 00000001                           4158          DC    X'00000001'
00003040 00000000                           4159          DC    X'00000000'
00003044 000000FF                           4160          DC    X'000000FF'
00003048 0102039C09867F97                   4161          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00003058 1112139D85088718                   4162          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00003068 818283840A171B88                   4163          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00003078 9116939495960498                   4164          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00003088 A0E2E4E0E1E3E5E7                   4165          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00003098 E9EAEBE8EDEEEFEC                   4166          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
000030A8 2FC2C4C0C1C3C5C7                   4167          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
000030B8 C9CACBC8CDCECFCC                   4168          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
000030C8 6162636465666768                   4169          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
000030D8 6A6B6C6D6E6F7071                   4170          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
000030E8 7E73747576777879                   4171          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
000030F8 A3A5B7A9A7B6BCBD                   4172          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00003108 4142434445464748                   4173          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
00003118 4A4B4C4D4E4F5051                   4174          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
00003128 F753545556575859                   4175          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00003138 3132333435363738                   4176          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            4177 *
00003148 05                                 4178          DC    XL1'5'
00003149 000000                             4179          DC    AL3(0)
0000314C 000001E0                           4180          DC    AL4(480)
00003150 00000000                           4181          DC    4X'00'
00003154 00000000                           4182          DC    Q(@@STATIC)
00003158 00000000                           4183          DC    X'00000000'
0000315C 00000101                           4184          DC    X'00000101'
00003160 00000000                           4185          DC    X'00000000'
00003164 000000A0                           4186          DC    X'000000A0'
00003168 010203372D2E2F16                   4187          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00003178 1112133C3D322618                   4188          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00003188 5A7F7B5B6C507D4D                   4189          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00003198 F1F2F3F4F5F6F7F8                   4190          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
000031A8 C1C2C3C4C5C6C7C8                   4191          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
000031B8 D8D9E2E3E4E5E6E7                   4192          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
000031C8 8182838485868788                   4193          DC    X'81828384858687888991929394959697' abcdefghijklmnop
000031D8 9899A2A3A4A5A6A7                   4194          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
000031E8 2122232425061728                   4195          DC    X'2122232425061728292A2B2C090A1B30' ................
000031F8 311A333435360838                   4196          DC    X'311A333435360838393A3B04143EFF80' ................
                                                                                                                           Page   87 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            4197 *
00003208 05                                 4198          DC    XL1'5'
00003209 000000                             4199          DC    AL3(0)
0000320C 00000208                           4200          DC    AL4(520)
00003210 00000000                           4201          DC    4X'00'
00003214 00000000                           4202          DC    Q(@@STATIC)
00003218 00000000                           4203          DC    X'00000000'
0000321C 000001C0                           4204          DC    X'000001C0'
00003220 00000000                           4205          DC    X'00000000'
00003224 00000001                           4206          DC    X'00000001'
00003228 8A40404040404040                   4207          DC    X'8A40404040404040'                 ........
                                            4208 *
00003230 05                                 4209          DC    XL1'5'
00003231 000000                             4210          DC    AL3(0)
00003234 00000230                           4211          DC    AL4(560)
00003238 00000000                           4212          DC    4X'00'
0000323C 00000000                           4213          DC    Q(@@STATIC)
00003240 00000000                           4214          DC    X'00000000'
00003244 000001E0                           4215          DC    X'000001E0'
00003248 00000000                           4216          DC    X'00000000'
0000324C 00000001                           4217          DC    X'00000001'
00003250 8B40404040404040                   4218          DC    X'8B40404040404040'                 ........
                                            4219 *
00003258 0D                                 4220          DC    XL1'D'
00003259 000000                             4221          DC    AL3(0)
0000325C 00000258                           4222          DC    AL4(600)
00003260 00000000                           4223          DC    4X'00'
00003264 00000000                           4224          DC    Q(@@STATIC)
00003268 00000000                           4225          DC    X'00000000'
0000326C 00000220                           4226          DC    X'00000220'
00003270 0000000000002890                   4227          DC    ADL8(@DATA)
00003278 00000000                           4228          DC    X'00000000'
0000327C 0000025A                           4229          DC    X'0000025A'
                                            4230 *
00003280 0D                                 4231          DC    XL1'D'
00003281 000000                             4232          DC    AL3(0)
00003284 00000280                           4233          DC    AL4(640)
00003288 00000000                           4234          DC    4X'00'
0000328C 00000000                           4235          DC    Q(@@STATIC)
00003290 00000000                           4236          DC    X'00000000'
00003294 00000228                           4237          DC    X'00000228'
00003298 0000000000002890                   4238          DC    ADL8(@DATA)
000032A0 00000000                           4239          DC    X'00000000'
000032A4 00000262                           4240          DC    X'00000262'
                                            4241 *
000032A8 0D                                 4242          DC    XL1'D'
000032A9 000000                             4243          DC    AL3(0)
000032AC 000002A8                           4244          DC    AL4(680)
000032B0 00000000                           4245          DC    4X'00'
000032B4 00000000                           4246          DC    Q(@@STATIC)
000032B8 00000000                           4247          DC    X'00000000'
000032BC 00000230                           4248          DC    X'00000230'
                                                                                                                           Page   88 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000032C0 0000000000002890                   4249          DC    ADL8(@DATA)
000032C8 00000000                           4250          DC    X'00000000'
000032CC 00000268                           4251          DC    X'00000268'
                                            4252 *
000032D0 0D                                 4253          DC    XL1'D'
000032D1 000000                             4254          DC    AL3(0)
000032D4 000002D0                           4255          DC    AL4(720)
000032D8 00000000                           4256          DC    4X'00'
000032DC 00000000                           4257          DC    Q(@@STATIC)
000032E0 00000000                           4258          DC    X'00000000'
000032E4 00000238                           4259          DC    X'00000238'
000032E8 0000000000002890                   4260          DC    ADL8(@DATA)
000032F0 00000000                           4261          DC    X'00000000'
000032F4 00000270                           4262          DC    X'00000270'
                                            4263 *
000032F8 0D                                 4264          DC    XL1'D'
000032F9 000000                             4265          DC    AL3(0)
000032FC 000002F8                           4266          DC    AL4(760)
00003300 00000000                           4267          DC    4X'00'
00003304 00000000                           4268          DC    Q(@@STATIC)
00003308 00000000                           4269          DC    X'00000000'
0000330C 00000240                           4270          DC    X'00000240'
00003310 0000000000002890                   4271          DC    ADL8(@DATA)
00003318 00000000                           4272          DC    X'00000000'
0000331C 0000027A                           4273          DC    X'0000027A'
                                            4274 *
00003320 0D                                 4275          DC    XL1'D'
00003321 000000                             4276          DC    AL3(0)
00003324 00000320                           4277          DC    AL4(800)
00003328 00000000                           4278          DC    4X'00'
0000332C 00000000                           4279          DC    Q(@@STATIC)
00003330 00000000                           4280          DC    X'00000000'
00003334 00000248                           4281          DC    X'00000248'
00003338 0000000000002890                   4282          DC    ADL8(@DATA)
00003340 00000000                           4283          DC    X'00000000'
00003344 00000288                           4284          DC    X'00000288'
                                            4285 *
00003348 0D                                 4286          DC    XL1'D'
00003349 000000                             4287          DC    AL3(0)
0000334C 00000348                           4288          DC    AL4(840)
00003350 00000000                           4289          DC    4X'00'
00003354 00000000                           4290          DC    Q(@@STATIC)
00003358 00000000                           4291          DC    X'00000000'
0000335C 00000250                           4292          DC    X'00000250'
00003360 0000000000002890                   4293          DC    ADL8(@DATA)
00003368 00000000                           4294          DC    X'00000000'
0000336C 00000294                           4295          DC    X'00000294'
                                            4296 *
00003370 0D                                 4297          DC    XL1'D'
00003371 000000                             4298          DC    AL3(0)
00003374 00000370                           4299          DC    AL4(880)
00003378 00000000                           4300          DC    4X'00'
                                                                                                                           Page   89 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
0000337C 00000000                           4301          DC    Q(@@STATIC)
00003380 00000000                           4302          DC    X'00000000'
00003384 00000258                           4303          DC    X'00000258'
00003388 0000000000002890                   4304          DC    ADL8(@DATA)
00003390 00000000                           4305          DC    X'00000000'
00003394 000002A4                           4306          DC    X'000002A4'
                                            4307 *
00003398 0D                                 4308          DC    XL1'D'
00003399 000000                             4309          DC    AL3(0)
0000339C 00000398                           4310          DC    AL4(920)
000033A0 00000000                           4311          DC    4X'00'
000033A4 00000000                           4312          DC    Q(@@STATIC)
000033A8 00000000                           4313          DC    X'00000000'
000033AC 00000260                           4314          DC    X'00000260'
000033B0 0000000000002890                   4315          DC    ADL8(@DATA)
000033B8 00000000                           4316          DC    X'00000000'
000033BC 000002B8                           4317          DC    X'000002B8'
                                            4318 *
000033C0 0D                                 4319          DC    XL1'D'
000033C1 000000                             4320          DC    AL3(0)
000033C4 000003C0                           4321          DC    AL4(960)
000033C8 00000000                           4322          DC    4X'00'
000033CC 00000000                           4323          DC    Q(@@STATIC)
000033D0 00000000                           4324          DC    X'00000000'
000033D4 00000268                           4325          DC    X'00000268'
000033D8 0000000000002890                   4326          DC    ADL8(@DATA)
000033E0 00000000                           4327          DC    X'00000000'
000033E4 000002C6                           4328          DC    X'000002C6'
                                            4329 *
000033E8 0D                                 4330          DC    XL1'D'
000033E9 000000                             4331          DC    AL3(0)
000033EC 000003E8                           4332          DC    AL4(1000)
000033F0 00000000                           4333          DC    4X'00'
000033F4 00000000                           4334          DC    Q(@@STATIC)
000033F8 00000000                           4335          DC    X'00000000'
000033FC 00000270                           4336          DC    X'00000270'
00003400 0000000000002890                   4337          DC    ADL8(@DATA)
00003408 00000000                           4338          DC    X'00000000'
0000340C 000002D2                           4339          DC    X'000002D2'
                                            4340 *
00003410 0D                                 4341          DC    XL1'D'
00003411 000000                             4342          DC    AL3(0)
00003414 00000410                           4343          DC    AL4(1040)
00003418 00000000                           4344          DC    4X'00'
0000341C 00000000                           4345          DC    Q(@@STATIC)
00003420 00000000                           4346          DC    X'00000000'
00003424 00000278                           4347          DC    X'00000278'
00003428 0000000000002890                   4348          DC    ADL8(@DATA)
00003430 00000000                           4349          DC    X'00000000'
00003434 000002E2                           4350          DC    X'000002E2'
                                            4351 *
00003438 0D                                 4352          DC    XL1'D'
                                                                                                                           Page   90 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003439 000000                             4353          DC    AL3(0)
0000343C 00000438                           4354          DC    AL4(1080)
00003440 00000000                           4355          DC    4X'00'
00003444 00000000                           4356          DC    Q(@@STATIC)
00003448 00000000                           4357          DC    X'00000000'
0000344C 00000280                           4358          DC    X'00000280'
00003450 0000000000002890                   4359          DC    ADL8(@DATA)
00003458 00000000                           4360          DC    X'00000000'
0000345C 000002EC                           4361          DC    X'000002EC'
                                            4362 *
00003460 0D                                 4363          DC    XL1'D'
00003461 000000                             4364          DC    AL3(0)
00003464 00000460                           4365          DC    AL4(1120)
00003468 00000000                           4366          DC    4X'00'
0000346C 00000000                           4367          DC    Q(@@STATIC)
00003470 00000000                           4368          DC    X'00000000'
00003474 00000288                           4369          DC    X'00000288'
00003478 0000000000002890                   4370          DC    ADL8(@DATA)
00003480 00000000                           4371          DC    X'00000000'
00003484 000002F6                           4372          DC    X'000002F6'
                                            4373 *
00003488 0D                                 4374          DC    XL1'D'
00003489 000000                             4375          DC    AL3(0)
0000348C 00000488                           4376          DC    AL4(1160)
00003490 00000000                           4377          DC    4X'00'
00003494 00000000                           4378          DC    Q(@@STATIC)
00003498 00000000                           4379          DC    X'00000000'
0000349C 00000290                           4380          DC    X'00000290'
000034A0 0000000000002890                   4381          DC    ADL8(@DATA)
000034A8 00000000                           4382          DC    X'00000000'
000034AC 00000302                           4383          DC    X'00000302'
                                            4384 *
000034B0 0D                                 4385          DC    XL1'D'
000034B1 000000                             4386          DC    AL3(0)
000034B4 000004B0                           4387          DC    AL4(1200)
000034B8 00000000                           4388          DC    4X'00'
000034BC 00000000                           4389          DC    Q(@@STATIC)
000034C0 00000000                           4390          DC    X'00000000'
000034C4 00000298                           4391          DC    X'00000298'
000034C8 0000000000002890                   4392          DC    ADL8(@DATA)
000034D0 00000000                           4393          DC    X'00000000'
000034D4 0000030C                           4394          DC    X'0000030C'
                                            4395 *
000034D8 0D                                 4396          DC    XL1'D'
000034D9 000000                             4397          DC    AL3(0)
000034DC 000004D8                           4398          DC    AL4(1240)
000034E0 00000000                           4399          DC    4X'00'
000034E4 00000000                           4400          DC    Q(@@STATIC)
000034E8 00000000                           4401          DC    X'00000000'
000034EC 000002A0                           4402          DC    X'000002A0'
000034F0 0000000000002890                   4403          DC    ADL8(@DATA)
000034F8 00000000                           4404          DC    X'00000000'
                                                                                                                           Page   91 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000034FC 0000031C                           4405          DC    X'0000031C'
                                            4406 *
00003500 0D                                 4407          DC    XL1'D'
00003501 000000                             4408          DC    AL3(0)
00003504 00000500                           4409          DC    AL4(1280)
00003508 00000000                           4410          DC    4X'00'
0000350C 00000000                           4411          DC    Q(@@STATIC)
00003510 00000000                           4412          DC    X'00000000'
00003514 000002A8                           4413          DC    X'000002A8'
00003518 0000000000002890                   4414          DC    ADL8(@DATA)
00003520 00000000                           4415          DC    X'00000000'
00003524 00000328                           4416          DC    X'00000328'
                                            4417 *
00003528 0D                                 4418          DC    XL1'D'
00003529 000000                             4419          DC    AL3(0)
0000352C 00000528                           4420          DC    AL4(1320)
00003530 00000000                           4421          DC    4X'00'
00003534 00000000                           4422          DC    Q(@@STATIC)
00003538 00000000                           4423          DC    X'00000000'
0000353C 000002B0                           4424          DC    X'000002B0'
00003540 0000000000002890                   4425          DC    ADL8(@DATA)
00003548 00000000                           4426          DC    X'00000000'
0000354C 00000336                           4427          DC    X'00000336'
                                            4428 *
00003550 0D                                 4429          DC    XL1'D'
00003551 000000                             4430          DC    AL3(0)
00003554 00000550                           4431          DC    AL4(1360)
00003558 00000000                           4432          DC    4X'00'
0000355C 00000000                           4433          DC    Q(@@STATIC)
00003560 00000000                           4434          DC    X'00000000'
00003564 000002B8                           4435          DC    X'000002B8'
00003568 0000000000002890                   4436          DC    ADL8(@DATA)
00003570 00000000                           4437          DC    X'00000000'
00003574 00000342                           4438          DC    X'00000342'
                                            4439 *
00003578 0D                                 4440          DC    XL1'D'
00003579 000000                             4441          DC    AL3(0)
0000357C 00000578                           4442          DC    AL4(1400)
00003580 00000000                           4443          DC    4X'00'
00003584 00000000                           4444          DC    Q(@@STATIC)
00003588 00000000                           4445          DC    X'00000000'
0000358C 000002C0                           4446          DC    X'000002C0'
00003590 0000000000002890                   4447          DC    ADL8(@DATA)
00003598 00000000                           4448          DC    X'00000000'
0000359C 00000350                           4449          DC    X'00000350'
                                            4450 *
000035A0 0D                                 4451          DC    XL1'D'
000035A1 000000                             4452          DC    AL3(0)
000035A4 000005A0                           4453          DC    AL4(1440)
000035A8 00000000                           4454          DC    4X'00'
000035AC 00000000                           4455          DC    Q(@@STATIC)
000035B0 00000000                           4456          DC    X'00000000'
                                                                                                                           Page   92 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000035B4 000002C8                           4457          DC    X'000002C8'
000035B8 0000000000002890                   4458          DC    ADL8(@DATA)
000035C0 00000000                           4459          DC    X'00000000'
000035C4 0000035E                           4460          DC    X'0000035E'
                                            4461 *
000035C8 0D                                 4462          DC    XL1'D'
000035C9 000000                             4463          DC    AL3(0)
000035CC 000005C8                           4464          DC    AL4(1480)
000035D0 00000000                           4465          DC    4X'00'
000035D4 00000000                           4466          DC    Q(@@STATIC)
000035D8 00000000                           4467          DC    X'00000000'
000035DC 000002D0                           4468          DC    X'000002D0'
000035E0 0000000000002890                   4469          DC    ADL8(@DATA)
000035E8 00000000                           4470          DC    X'00000000'
000035EC 0000036C                           4471          DC    X'0000036C'
                                            4472 *
000035F0 0D                                 4473          DC    XL1'D'
000035F1 000000                             4474          DC    AL3(0)
000035F4 000005F0                           4475          DC    AL4(1520)
000035F8 00000000                           4476          DC    4X'00'
000035FC 00000000                           4477          DC    Q(@@STATIC)
00003600 00000000                           4478          DC    X'00000000'
00003604 000002D8                           4479          DC    X'000002D8'
00003608 0000000000002890                   4480          DC    ADL8(@DATA)
00003610 00000000                           4481          DC    X'00000000'
00003614 0000037C                           4482          DC    X'0000037C'
                                            4483 *
00003618 0D                                 4484          DC    XL1'D'
00003619 000000                             4485          DC    AL3(0)
0000361C 00000618                           4486          DC    AL4(1560)
00003620 00000000                           4487          DC    4X'00'
00003624 00000000                           4488          DC    Q(@@STATIC)
00003628 00000000                           4489          DC    X'00000000'
0000362C 000002E0                           4490          DC    X'000002E0'
00003630 0000000000002890                   4491          DC    ADL8(@DATA)
00003638 00000000                           4492          DC    X'00000000'
0000363C 00000392                           4493          DC    X'00000392'
                                            4494 *
00003640 0D                                 4495          DC    XL1'D'
00003641 000000                             4496          DC    AL3(0)
00003644 00000640                           4497          DC    AL4(1600)
00003648 00000000                           4498          DC    4X'00'
0000364C 00000000                           4499          DC    Q(@@STATIC)
00003650 00000000                           4500          DC    X'00000000'
00003654 000002E8                           4501          DC    X'000002E8'
00003658 0000000000002890                   4502          DC    ADL8(@DATA)
00003660 00000000                           4503          DC    X'00000000'
00003664 000003A6                           4504          DC    X'000003A6'
                                            4505 *
00003668 0D                                 4506          DC    XL1'D'
00003669 000000                             4507          DC    AL3(0)
0000366C 00000668                           4508          DC    AL4(1640)
                                                                                                                           Page   93 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003670 00000000                           4509          DC    4X'00'
00003674 00000000                           4510          DC    Q(@@STATIC)
00003678 00000000                           4511          DC    X'00000000'
0000367C 000002F0                           4512          DC    X'000002F0'
00003680 0000000000002890                   4513          DC    ADL8(@DATA)
00003688 00000000                           4514          DC    X'00000000'
0000368C 000003B6                           4515          DC    X'000003B6'
                                            4516 *
00003690 0D                                 4517          DC    XL1'D'
00003691 000000                             4518          DC    AL3(0)
00003694 00000690                           4519          DC    AL4(1680)
00003698 00000000                           4520          DC    4X'00'
0000369C 00000000                           4521          DC    Q(@@STATIC)
000036A0 00000000                           4522          DC    X'00000000'
000036A4 000002F8                           4523          DC    X'000002F8'
000036A8 0000000000002890                   4524          DC    ADL8(@DATA)
000036B0 00000000                           4525          DC    X'00000000'
000036B4 000003BE                           4526          DC    X'000003BE'
                                            4527 *
000036B8 0D                                 4528          DC    XL1'D'
000036B9 000000                             4529          DC    AL3(0)
000036BC 000006B8                           4530          DC    AL4(1720)
000036C0 00000000                           4531          DC    4X'00'
000036C4 00000000                           4532          DC    Q(@@STATIC)
000036C8 00000000                           4533          DC    X'00000000'
000036CC 00000300                           4534          DC    X'00000300'
000036D0 0000000000002890                   4535          DC    ADL8(@DATA)
000036D8 00000000                           4536          DC    X'00000000'
000036DC 000003CE                           4537          DC    X'000003CE'
                                            4538 *
000036E0 0D                                 4539          DC    XL1'D'
000036E1 000000                             4540          DC    AL3(0)
000036E4 000006E0                           4541          DC    AL4(1760)
000036E8 00000000                           4542          DC    4X'00'
000036EC 00000000                           4543          DC    Q(@@STATIC)
000036F0 00000000                           4544          DC    X'00000000'
000036F4 00000308                           4545          DC    X'00000308'
000036F8 0000000000002890                   4546          DC    ADL8(@DATA)
00003700 00000000                           4547          DC    X'00000000'
00003704 000003DE                           4548          DC    X'000003DE'
                                            4549 *
00003708 0D                                 4550          DC    XL1'D'
00003709 000000                             4551          DC    AL3(0)
0000370C 00000708                           4552          DC    AL4(1800)
00003710 00000000                           4553          DC    4X'00'
00003714 00000000                           4554          DC    Q(@@STATIC)
00003718 00000000                           4555          DC    X'00000000'
0000371C 00000310                           4556          DC    X'00000310'
00003720 0000000000002890                   4557          DC    ADL8(@DATA)
00003728 00000000                           4558          DC    X'00000000'
0000372C 000003EC                           4559          DC    X'000003EC'
                                            4560 *
                                                                                                                           Page   94 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003730 0D                                 4561          DC    XL1'D'
00003731 000000                             4562          DC    AL3(0)
00003734 00000730                           4563          DC    AL4(1840)
00003738 00000000                           4564          DC    4X'00'
0000373C 00000000                           4565          DC    Q(@@STATIC)
00003740 00000000                           4566          DC    X'00000000'
00003744 00000318                           4567          DC    X'00000318'
00003748 0000000000002890                   4568          DC    ADL8(@DATA)
00003750 00000000                           4569          DC    X'00000000'
00003754 000003F8                           4570          DC    X'000003F8'
                                            4571 *
00003758 0D                                 4572          DC    XL1'D'
00003759 000000                             4573          DC    AL3(0)
0000375C 00000758                           4574          DC    AL4(1880)
00003760 00000000                           4575          DC    4X'00'
00003764 00000000                           4576          DC    Q(@@STATIC)
00003768 00000000                           4577          DC    X'00000000'
0000376C 00000320                           4578          DC    X'00000320'
00003770 0000000000002890                   4579          DC    ADL8(@DATA)
00003778 00000000                           4580          DC    X'00000000'
0000377C 00000404                           4581          DC    X'00000404'
                                            4582 *
00003780 0D                                 4583          DC    XL1'D'
00003781 000000                             4584          DC    AL3(0)
00003784 00000780                           4585          DC    AL4(1920)
00003788 00000000                           4586          DC    4X'00'
0000378C 00000000                           4587          DC    Q(@@STATIC)
00003790 00000000                           4588          DC    X'00000000'
00003794 00000328                           4589          DC    X'00000328'
00003798 0000000000002890                   4590          DC    ADL8(@DATA)
000037A0 00000000                           4591          DC    X'00000000'
000037A4 00000414                           4592          DC    X'00000414'
                                            4593 *
000037A8 0D                                 4594          DC    XL1'D'
000037A9 000000                             4595          DC    AL3(0)
000037AC 000007A8                           4596          DC    AL4(1960)
000037B0 00000000                           4597          DC    4X'00'
000037B4 00000000                           4598          DC    Q(@@STATIC)
000037B8 00000000                           4599          DC    X'00000000'
000037BC 00000330                           4600          DC    X'00000330'
000037C0 0000000000002890                   4601          DC    ADL8(@DATA)
000037C8 00000000                           4602          DC    X'00000000'
000037CC 00000422                           4603          DC    X'00000422'
                                            4604 *
000037D0 0D                                 4605          DC    XL1'D'
000037D1 000000                             4606          DC    AL3(0)
000037D4 000007D0                           4607          DC    AL4(2000)
000037D8 00000000                           4608          DC    4X'00'
000037DC 00000000                           4609          DC    Q(@@STATIC)
000037E0 00000000                           4610          DC    X'00000000'
000037E4 00000338                           4611          DC    X'00000338'
000037E8 0000000000002890                   4612          DC    ADL8(@DATA)
                                                                                                                           Page   95 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000037F0 00000000                           4613          DC    X'00000000'
000037F4 00000436                           4614          DC    X'00000436'
                                            4615 *
000037F8 0D                                 4616          DC    XL1'D'
000037F9 000000                             4617          DC    AL3(0)
000037FC 000007F8                           4618          DC    AL4(2040)
00003800 00000000                           4619          DC    4X'00'
00003804 00000000                           4620          DC    Q(@@STATIC)
00003808 00000000                           4621          DC    X'00000000'
0000380C 00000340                           4622          DC    X'00000340'
00003810 0000000000002890                   4623          DC    ADL8(@DATA)
00003818 00000000                           4624          DC    X'00000000'
0000381C 00000446                           4625          DC    X'00000446'
                                            4626 *
00003820 0D                                 4627          DC    XL1'D'
00003821 000000                             4628          DC    AL3(0)
00003824 00000820                           4629          DC    AL4(2080)
00003828 00000000                           4630          DC    4X'00'
0000382C 00000000                           4631          DC    Q(@@STATIC)
00003830 00000000                           4632          DC    X'00000000'
00003834 00000348                           4633          DC    X'00000348'
00003838 0000000000002890                   4634          DC    ADL8(@DATA)
00003840 00000000                           4635          DC    X'00000000'
00003844 00000458                           4636          DC    X'00000458'
                                            4637 *
00003848 0D                                 4638          DC    XL1'D'
00003849 000000                             4639          DC    AL3(0)
0000384C 00000848                           4640          DC    AL4(2120)
00003850 00000000                           4641          DC    4X'00'
00003854 00000000                           4642          DC    Q(@@STATIC)
00003858 00000000                           4643          DC    X'00000000'
0000385C 00000350                           4644          DC    X'00000350'
00003860 0000000000002890                   4645          DC    ADL8(@DATA)
00003868 00000000                           4646          DC    X'00000000'
0000386C 0000046A                           4647          DC    X'0000046A'
                                            4648 *
00003870 0D                                 4649          DC    XL1'D'
00003871 000000                             4650          DC    AL3(0)
00003874 00000870                           4651          DC    AL4(2160)
00003878 00000000                           4652          DC    4X'00'
0000387C 00000000                           4653          DC    Q(@@STATIC)
00003880 00000000                           4654          DC    X'00000000'
00003884 00000358                           4655          DC    X'00000358'
00003888 0000000000002890                   4656          DC    ADL8(@DATA)
00003890 00000000                           4657          DC    X'00000000'
00003894 00000480                           4658          DC    X'00000480'
                                            4659 *
00003898 0D                                 4660          DC    XL1'D'
00003899 000000                             4661          DC    AL3(0)
0000389C 00000898                           4662          DC    AL4(2200)
000038A0 00000000                           4663          DC    4X'00'
000038A4 00000000                           4664          DC    Q(@@STATIC)
                                                                                                                           Page   96 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
000038A8 00000000                           4665          DC    X'00000000'
000038AC 00000360                           4666          DC    X'00000360'
000038B0 0000000000002890                   4667          DC    ADL8(@DATA)
000038B8 00000000                           4668          DC    X'00000000'
000038BC 00000496                           4669          DC    X'00000496'
                                            4670 *
000038C0 0D                                 4671          DC    XL1'D'
000038C1 000000                             4672          DC    AL3(0)
000038C4 000008C0                           4673          DC    AL4(2240)
000038C8 00000000                           4674          DC    4X'00'
000038CC 00000000                           4675          DC    Q(@@STATIC)
000038D0 00000000                           4676          DC    X'00000000'
000038D4 00000368                           4677          DC    X'00000368'
000038D8 0000000000002890                   4678          DC    ADL8(@DATA)
000038E0 00000000                           4679          DC    X'00000000'
000038E4 000004AC                           4680          DC    X'000004AC'
                                            4681 *
000038E8 0D                                 4682          DC    XL1'D'
000038E9 000000                             4683          DC    AL3(0)
000038EC 000008E8                           4684          DC    AL4(2280)
000038F0 00000000                           4685          DC    4X'00'
000038F4 00000000                           4686          DC    Q(@@STATIC)
000038F8 00000000                           4687          DC    X'00000000'
000038FC 00000370                           4688          DC    X'00000370'
00003900 0000000000002890                   4689          DC    ADL8(@DATA)
00003908 00000000                           4690          DC    X'00000000'
0000390C 000004C4                           4691          DC    X'000004C4'
                                            4692 *
00003910 0D                                 4693          DC    XL1'D'
00003911 000000                             4694          DC    AL3(0)
00003914 00000910                           4695          DC    AL4(2320)
00003918 00000000                           4696          DC    4X'00'
0000391C 00000000                           4697          DC    Q(@@STATIC)
00003920 00000000                           4698          DC    X'00000000'
00003924 00000378                           4699          DC    X'00000378'
00003928 0000000000002890                   4700          DC    ADL8(@DATA)
00003930 00000000                           4701          DC    X'00000000'
00003934 000004D2                           4702          DC    X'000004D2'
                                            4703 *
00003938 0D                                 4704          DC    XL1'D'
00003939 000000                             4705          DC    AL3(0)
0000393C 00000938                           4706          DC    AL4(2360)
00003940 00000000                           4707          DC    4X'00'
00003944 00000000                           4708          DC    Q(@@STATIC)
00003948 00000000                           4709          DC    X'00000000'
0000394C 00000380                           4710          DC    X'00000380'
00003950 0000000000002890                   4711          DC    ADL8(@DATA)
00003958 00000000                           4712          DC    X'00000000'
0000395C 000004E6                           4713          DC    X'000004E6'
                                            4714 *
00003960 0D                                 4715          DC    XL1'D'
00003961 000000                             4716          DC    AL3(0)
                                                                                                                           Page   97 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003964 00000960                           4717          DC    AL4(2400)
00003968 00000000                           4718          DC    4X'00'
0000396C 00000000                           4719          DC    Q(@@STATIC)
00003970 00000000                           4720          DC    X'00000000'
00003974 00000388                           4721          DC    X'00000388'
00003978 0000000000002890                   4722          DC    ADL8(@DATA)
00003980 00000000                           4723          DC    X'00000000'
00003984 00000506                           4724          DC    X'00000506'
                                            4725 *
00003988 0D                                 4726          DC    XL1'D'
00003989 000000                             4727          DC    AL3(0)
0000398C 00000988                           4728          DC    AL4(2440)
00003990 00000000                           4729          DC    4X'00'
00003994 00000000                           4730          DC    Q(@@STATIC)
00003998 00000000                           4731          DC    X'00000000'
0000399C 00000390                           4732          DC    X'00000390'
000039A0 0000000000002890                   4733          DC    ADL8(@DATA)
000039A8 00000000                           4734          DC    X'00000000'
000039AC 0000052A                           4735          DC    X'0000052A'
                                            4736 *
000039B0 0D                                 4737          DC    XL1'D'
000039B1 000000                             4738          DC    AL3(0)
000039B4 000009B0                           4739          DC    AL4(2480)
000039B8 00000000                           4740          DC    4X'00'
000039BC 00000000                           4741          DC    Q(@@STATIC)
000039C0 00000000                           4742          DC    X'00000000'
000039C4 00000398                           4743          DC    X'00000398'
000039C8 0000000000002890                   4744          DC    ADL8(@DATA)
000039D0 00000000                           4745          DC    X'00000000'
000039D4 0000054C                           4746          DC    X'0000054C'
                                            4747 *
000039D8 0D                                 4748          DC    XL1'D'
000039D9 000000                             4749          DC    AL3(0)
000039DC 000009D8                           4750          DC    AL4(2520)
000039E0 00000000                           4751          DC    4X'00'
000039E4 00000000                           4752          DC    Q(@@STATIC)
000039E8 00000000                           4753          DC    X'00000000'
000039EC 000003A0                           4754          DC    X'000003A0'
000039F0 0000000000002890                   4755          DC    ADL8(@DATA)
000039F8 00000000                           4756          DC    X'00000000'
000039FC 00000560                           4757          DC    X'00000560'
                                            4758 *
00003A00 0D                                 4759          DC    XL1'D'
00003A01 000000                             4760          DC    AL3(0)
00003A04 00000A00                           4761          DC    AL4(2560)
00003A08 00000000                           4762          DC    4X'00'
00003A0C 00000000                           4763          DC    Q(@@STATIC)
00003A10 00000000                           4764          DC    X'00000000'
00003A14 000003A8                           4765          DC    X'000003A8'
00003A18 0000000000002890                   4766          DC    ADL8(@DATA)
00003A20 00000000                           4767          DC    X'00000000'
00003A24 0000057C                           4768          DC    X'0000057C'
                                                                                                                           Page   98 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
                                            4769 *
00003A28 0D                                 4770          DC    XL1'D'
00003A29 000000                             4771          DC    AL3(0)
00003A2C 00000A28                           4772          DC    AL4(2600)
00003A30 00000000                           4773          DC    4X'00'
00003A34 00000000                           4774          DC    Q(@@STATIC)
00003A38 00000000                           4775          DC    X'00000000'
00003A3C 000003B0                           4776          DC    X'000003B0'
00003A40 0000000000002890                   4777          DC    ADL8(@DATA)
00003A48 00000000                           4778          DC    X'00000000'
00003A4C 00000596                           4779          DC    X'00000596'
                                            4780 *
00003A50 0D                                 4781          DC    XL1'D'
00003A51 000000                             4782          DC    AL3(0)
00003A54 00000A50                           4783          DC    AL4(2640)
00003A58 00000000                           4784          DC    4X'00'
00003A5C 00000000                           4785          DC    Q(@@STATIC)
00003A60 00000000                           4786          DC    X'00000000'
00003A64 000003B8                           4787          DC    X'000003B8'
00003A68 0000000000002890                   4788          DC    ADL8(@DATA)
00003A70 00000000                           4789          DC    X'00000000'
00003A74 000005BA                           4790          DC    X'000005BA'
                                            4791 *
00003A78 0D                                 4792          DC    XL1'D'
00003A79 000000                             4793          DC    AL3(0)
00003A7C 00000A78                           4794          DC    AL4(2680)
00003A80 00000000                           4795          DC    4X'00'
00003A84 00000000                           4796          DC    Q(@@STATIC)
00003A88 00000000                           4797          DC    X'00000000'
00003A8C 000003C0                           4798          DC    X'000003C0'
00003A90 0000000000002890                   4799          DC    ADL8(@DATA)
00003A98 00000000                           4800          DC    X'00000000'
00003A9C 000005DC                           4801          DC    X'000005DC'
                                            4802 *
00003AA0 0D                                 4803          DC    XL1'D'
00003AA1 000000                             4804          DC    AL3(0)
00003AA4 00000AA0                           4805          DC    AL4(2720)
00003AA8 00000000                           4806          DC    4X'00'
00003AAC 00000000                           4807          DC    Q(@@STATIC)
00003AB0 00000000                           4808          DC    X'00000000'
00003AB4 000003C8                           4809          DC    X'000003C8'
00003AB8 0000000000002890                   4810          DC    ADL8(@DATA)
00003AC0 00000000                           4811          DC    X'00000000'
00003AC4 000005E8                           4812          DC    X'000005E8'
                                            4813 *
00003AC8 0D                                 4814          DC    XL1'D'
00003AC9 000000                             4815          DC    AL3(0)
00003ACC 00000AC8                           4816          DC    AL4(2760)
00003AD0 00000000                           4817          DC    4X'00'
00003AD4 00000000                           4818          DC    Q(@@STATIC)
00003AD8 00000000                           4819          DC    X'00000000'
00003ADC 000003D0                           4820          DC    X'000003D0'
                                                                                                                           Page   99 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003AE0 0000000000002890                   4821          DC    ADL8(@DATA)
00003AE8 00000000                           4822          DC    X'00000000'
00003AEC 00000600                           4823          DC    X'00000600'
                                            4824 *
00003AF0 0D                                 4825          DC    XL1'D'
00003AF1 000000                             4826          DC    AL3(0)
00003AF4 00000AF0                           4827          DC    AL4(2800)
00003AF8 00000000                           4828          DC    4X'00'
00003AFC 00000000                           4829          DC    Q(@@STATIC)
00003B00 00000000                           4830          DC    X'00000000'
00003B04 000003D8                           4831          DC    X'000003D8'
00003B08 0000000000002890                   4832          DC    ADL8(@DATA)
00003B10 00000000                           4833          DC    X'00000000'
00003B14 00000616                           4834          DC    X'00000616'
                                            4835 *
00003B18 0D                                 4836          DC    XL1'D'
00003B19 000000                             4837          DC    AL3(0)
00003B1C 00000B18                           4838          DC    AL4(2840)
00003B20 00000000                           4839          DC    4X'00'
00003B24 00000000                           4840          DC    Q(@@STATIC)
00003B28 00000000                           4841          DC    X'00000000'
00003B2C 000003E0                           4842          DC    X'000003E0'
00003B30 0000000000002890                   4843          DC    ADL8(@DATA)
00003B38 00000000                           4844          DC    X'00000000'
00003B3C 0000062C                           4845          DC    X'0000062C'
                                            4846 *
00003B40 0D                                 4847          DC    XL1'D'
00003B41 000000                             4848          DC    AL3(0)
00003B44 00000B40                           4849          DC    AL4(2880)
00003B48 00000000                           4850          DC    4X'00'
00003B4C 00000000                           4851          DC    Q(@@STATIC)
00003B50 00000000                           4852          DC    X'00000000'
00003B54 000003E8                           4853          DC    X'000003E8'
00003B58 0000000000002890                   4854          DC    ADL8(@DATA)
00003B60 00000000                           4855          DC    X'00000000'
00003B64 0000063C                           4856          DC    X'0000063C'
                                            4857 *
00003B68 0D                                 4858          DC    XL1'D'
00003B69 000000                             4859          DC    AL3(0)
00003B6C 00000B68                           4860          DC    AL4(2920)
00003B70 00000000                           4861          DC    4X'00'
00003B74 00000000                           4862          DC    Q(@@STATIC)
00003B78 00000000                           4863          DC    X'00000000'
00003B7C 000003F0                           4864          DC    X'000003F0'
00003B80 0000000000002890                   4865          DC    ADL8(@DATA)
00003B88 00000000                           4866          DC    X'00000000'
00003B8C 00000652                           4867          DC    X'00000652'
                                            4868 *
00003B90 0D                                 4869          DC    XL1'D'
00003B91 000000                             4870          DC    AL3(0)
00003B94 00000B90                           4871          DC    AL4(2960)
00003B98 00000000                           4872          DC    4X'00'
                                                                                                                           Page  100 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003B9C 00000000                           4873          DC    Q(@@STATIC)
00003BA0 00000000                           4874          DC    X'00000000'
00003BA4 000004C0                           4875          DC    X'000004C0'
00003BA8 0000000000002890                   4876          DC    ADL8(@DATA)
00003BB0 00000000                           4877          DC    X'00000000'
00003BB4 00000662                           4878          DC    X'00000662'
                                            4879 *
00003BB8 0D                                 4880          DC    XL1'D'
00003BB9 000000                             4881          DC    AL3(0)
00003BBC 00000BB8                           4882          DC    AL4(3000)
00003BC0 00000000                           4883          DC    4X'00'
00003BC4 00000000                           4884          DC    Q(@@STATIC)
00003BC8 00000000                           4885          DC    X'00000000'
00003BCC 000004C8                           4886          DC    X'000004C8'
00003BD0 0000000000002890                   4887          DC    ADL8(@DATA)
00003BD8 00000000                           4888          DC    X'00000000'
00003BDC 00000668                           4889          DC    X'00000668'
                                            4890 *
00003BE0 0D                                 4891          DC    XL1'D'
00003BE1 000000                             4892          DC    AL3(0)
00003BE4 00000BE0                           4893          DC    AL4(3040)
00003BE8 00000000                           4894          DC    4X'00'
00003BEC 00000000                           4895          DC    Q(@@STATIC)
00003BF0 00000000                           4896          DC    X'00000000'
00003BF4 000004D0                           4897          DC    X'000004D0'
00003BF8 0000000000002890                   4898          DC    ADL8(@DATA)
00003C00 00000000                           4899          DC    X'00000000'
00003C04 0000066E                           4900          DC    X'0000066E'
                                            4901 *
00003C08 0D                                 4902          DC    XL1'D'
00003C09 000000                             4903          DC    AL3(0)
00003C0C 00000C08                           4904          DC    AL4(3080)
00003C10 00000000                           4905          DC    4X'00'
00003C14 00000000                           4906          DC    Q(@@STATIC)
00003C18 00000000                           4907          DC    X'00000000'
00003C1C 000004D8                           4908          DC    X'000004D8'
00003C20 0000000000002890                   4909          DC    ADL8(@DATA)
00003C28 00000000                           4910          DC    X'00000000'
00003C2C 00000676                           4911          DC    X'00000676'
                                            4912 *
00003C30 0D                                 4913          DC    XL1'D'
00003C31 000000                             4914          DC    AL3(0)
00003C34 00000C30                           4915          DC    AL4(3120)
00003C38 00000000                           4916          DC    4X'00'
00003C3C 00000000                           4917          DC    Q(@@STATIC)
00003C40 00000000                           4918          DC    X'00000000'
00003C44 000004E0                           4919          DC    X'000004E0'
00003C48 0000000000002890                   4920          DC    ADL8(@DATA)
00003C50 00000000                           4921          DC    X'00000000'
00003C54 0000067A                           4922          DC    X'0000067A'
                                            4923 *
00003C58 0D                                 4924          DC    XL1'D'
                                                                                                                           Page  101 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003C59 000000                             4925          DC    AL3(0)
00003C5C 00000C58                           4926          DC    AL4(3160)
00003C60 00000000                           4927          DC    4X'00'
00003C64 00000000                           4928          DC    Q(@@STATIC)
00003C68 00000000                           4929          DC    X'00000000'
00003C6C 000004E8                           4930          DC    X'000004E8'
00003C70 0000000000002890                   4931          DC    ADL8(@DATA)
00003C78 00000000                           4932          DC    X'00000000'
00003C7C 00000680                           4933          DC    X'00000680'
                                            4934 *
00003C80 0D                                 4935          DC    XL1'D'
00003C81 000000                             4936          DC    AL3(0)
00003C84 00000C80                           4937          DC    AL4(3200)
00003C88 00000000                           4938          DC    4X'00'
00003C8C 00000000                           4939          DC    Q(@@STATIC)
00003C90 00000000                           4940          DC    X'00000000'
00003C94 00000510                           4941          DC    X'00000510'
00003C98 0000000000002890                   4942          DC    ADL8(@DATA)
00003CA0 00000000                           4943          DC    X'00000000'
00003CA4 00000688                           4944          DC    X'00000688'
                                            4945 *
00003CA8 0D                                 4946          DC    XL1'D'
00003CA9 000000                             4947          DC    AL3(0)
00003CAC 00000CA8                           4948          DC    AL4(3240)
00003CB0 00000000                           4949          DC    4X'00'
00003CB4 00000000                           4950          DC    Q(@@STATIC)
00003CB8 00000000                           4951          DC    X'00000000'
00003CBC 00000518                           4952          DC    X'00000518'
00003CC0 0000000000002890                   4953          DC    ADL8(@DATA)
00003CC8 00000000                           4954          DC    X'00000000'
00003CCC 00000694                           4955          DC    X'00000694'
                                            4956 *
00003CD0 0D                                 4957          DC    XL1'D'
00003CD1 000000                             4958          DC    AL3(0)
00003CD4 00000CD0                           4959          DC    AL4(3280)
00003CD8 00000000                           4960          DC    4X'00'
00003CDC 00000000                           4961          DC    Q(@@STATIC)
00003CE0 00000000                           4962          DC    X'00000000'
00003CE4 00000520                           4963          DC    X'00000520'
00003CE8 0000000000002890                   4964          DC    ADL8(@DATA)
00003CF0 00000000                           4965          DC    X'00000000'
00003CF4 0000069C                           4966          DC    X'0000069C'
                                            4967 *
00003CF8 0D                                 4968          DC    XL1'D'
00003CF9 000000                             4969          DC    AL3(0)
00003CFC 00000CF8                           4970          DC    AL4(3320)
00003D00 00000000                           4971          DC    4X'00'
00003D04 00000000                           4972          DC    Q(@@STATIC)
00003D08 00000000                           4973          DC    X'00000000'
00003D0C 00000528                           4974          DC    X'00000528'
00003D10 0000000000002890                   4975          DC    ADL8(@DATA)
00003D18 00000000                           4976          DC    X'00000000'
                                                                                                                           Page  102 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003D1C 000006A6                           4977          DC    X'000006A6'
                                            4978 *
00003D20 0D                                 4979          DC    XL1'D'
00003D21 000000                             4980          DC    AL3(0)
00003D24 00000D20                           4981          DC    AL4(3360)
00003D28 00000000                           4982          DC    4X'00'
00003D2C 00000000                           4983          DC    Q(@@STATIC)
00003D30 00000000                           4984          DC    X'00000000'
00003D34 00000630                           4985          DC    X'00000630'
00003D38 0000000000002890                   4986          DC    ADL8(@DATA)
00003D40 00000000                           4987          DC    X'00000000'
00003D44 000006AE                           4988          DC    X'000006AE'
                                            4989 *
00003D48 0D                                 4990          DC    XL1'D'
00003D49 000000                             4991          DC    AL3(0)
00003D4C 00000D48                           4992          DC    AL4(3400)
00003D50 00000000                           4993          DC    4X'00'
00003D54 00000000                           4994          DC    Q(@@STATIC)
00003D58 00000000                           4995          DC    X'00000000'
00003D5C 00000638                           4996          DC    X'00000638'
00003D60 0000000000002890                   4997          DC    ADL8(@DATA)
00003D68 00000000                           4998          DC    X'00000000'
00003D6C 000006B4                           4999          DC    X'000006B4'
                                            5000 *
00003D70 0D                                 5001          DC    XL1'D'
00003D71 000000                             5002          DC    AL3(0)
00003D74 00000D70                           5003          DC    AL4(3440)
00003D78 00000000                           5004          DC    4X'00'
00003D7C 00000000                           5005          DC    Q(@@STATIC)
00003D80 00000000                           5006          DC    X'00000000'
00003D84 00000640                           5007          DC    X'00000640'
00003D88 0000000000002890                   5008          DC    ADL8(@DATA)
00003D90 00000000                           5009          DC    X'00000000'
00003D94 000006BE                           5010          DC    X'000006BE'
                                            5011 *
00003D98 0D                                 5012          DC    XL1'D'
00003D99 000000                             5013          DC    AL3(0)
00003D9C 00000D98                           5014          DC    AL4(3480)
00003DA0 00000000                           5015          DC    4X'00'
00003DA4 00000000                           5016          DC    Q(@@STATIC)
00003DA8 00000000                           5017          DC    X'00000000'
00003DAC 00000648                           5018          DC    X'00000648'
00003DB0 0000000000002890                   5019          DC    ADL8(@DATA)
00003DB8 00000000                           5020          DC    X'00000000'
00003DBC 000006CA                           5021          DC    X'000006CA'
                                            5022 *
00003DC0 0D                                 5023          DC    XL1'D'
00003DC1 000000                             5024          DC    AL3(0)
00003DC4 00000DC0                           5025          DC    AL4(3520)
00003DC8 00000000                           5026          DC    4X'00'
00003DCC 00000000                           5027          DC    Q(@@STATIC)
00003DD0 00000000                           5028          DC    X'00000000'
                                                                                                                           Page  103 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003DD4 00000650                           5029          DC    X'00000650'
00003DD8 0000000000002890                   5030          DC    ADL8(@DATA)
00003DE0 00000000                           5031          DC    X'00000000'
00003DE4 000006D6                           5032          DC    X'000006D6'
                                            5033 *
00003DE8 0D                                 5034          DC    XL1'D'
00003DE9 000000                             5035          DC    AL3(0)
00003DEC 00000DE8                           5036          DC    AL4(3560)
00003DF0 00000000                           5037          DC    4X'00'
00003DF4 00000000                           5038          DC    Q(@@STATIC)
00003DF8 00000000                           5039          DC    X'00000000'
00003DFC 00000658                           5040          DC    X'00000658'
00003E00 0000000000002890                   5041          DC    ADL8(@DATA)
00003E08 00000000                           5042          DC    X'00000000'
00003E0C 000006E4                           5043          DC    X'000006E4'
                                            5044 *
00003E10 0D                                 5045          DC    XL1'D'
00003E11 000000                             5046          DC    AL3(0)
00003E14 00000E10                           5047          DC    AL4(3600)
00003E18 00000000                           5048          DC    4X'00'
00003E1C 00000000                           5049          DC    Q(@@STATIC)
00003E20 00000000                           5050          DC    X'00000000'
00003E24 00000660                           5051          DC    X'00000660'
00003E28 0000000000002890                   5052          DC    ADL8(@DATA)
00003E30 00000000                           5053          DC    X'00000000'
00003E34 000006EC                           5054          DC    X'000006EC'
                                            5055 *
00003E38 0D                                 5056          DC    XL1'D'
00003E39 000000                             5057          DC    AL3(0)
00003E3C 00000E38                           5058          DC    AL4(3640)
00003E40 00000000                           5059          DC    4X'00'
00003E44 00000000                           5060          DC    Q(@@STATIC)
00003E48 00000000                           5061          DC    X'00000000'
00003E4C 00000668                           5062          DC    X'00000668'
00003E50 0000000000002890                   5063          DC    ADL8(@DATA)
00003E58 00000000                           5064          DC    X'00000000'
00003E5C 000006F6                           5065          DC    X'000006F6'
                                            5066 *
00003E60 0D                                 5067          DC    XL1'D'
00003E61 000000                             5068          DC    AL3(0)
00003E64 00000E60                           5069          DC    AL4(3680)
00003E68 00000000                           5070          DC    4X'00'
00003E6C 00000000                           5071          DC    Q(@@STATIC)
00003E70 00000000                           5072          DC    X'00000000'
00003E74 00000670                           5073          DC    X'00000670'
00003E78 0000000000002890                   5074          DC    ADL8(@DATA)
00003E80 00000000                           5075          DC    X'00000000'
00003E84 00000702                           5076          DC    X'00000702'
                                            5077 *
00003E88 0D                                 5078          DC    XL1'D'
00003E89 000000                             5079          DC    AL3(0)
00003E8C 00000E88                           5080          DC    AL4(3720)
                                                                                                                           Page  104 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003E90 00000000                           5081          DC    4X'00'
00003E94 00000000                           5082          DC    Q(@@STATIC)
00003E98 00000000                           5083          DC    X'00000000'
00003E9C 00000678                           5084          DC    X'00000678'
00003EA0 0000000000002890                   5085          DC    ADL8(@DATA)
00003EA8 00000000                           5086          DC    X'00000000'
00003EAC 000006AE                           5087          DC    X'000006AE'
                                            5088 *
00003EB0 0D                                 5089          DC    XL1'D'
00003EB1 000000                             5090          DC    AL3(0)
00003EB4 00000EB0                           5091          DC    AL4(3760)
00003EB8 00000000                           5092          DC    4X'00'
00003EBC 00000000                           5093          DC    Q(@@STATIC)
00003EC0 00000000                           5094          DC    X'00000000'
00003EC4 00000680                           5095          DC    X'00000680'
00003EC8 0000000000002890                   5096          DC    ADL8(@DATA)
00003ED0 00000000                           5097          DC    X'00000000'
00003ED4 000006E4                           5098          DC    X'000006E4'
                                            5099 *
00003ED8 0D                                 5100          DC    XL1'D'
00003ED9 000000                             5101          DC    AL3(0)
00003EDC 00000ED8                           5102          DC    AL4(3800)
00003EE0 00000000                           5103          DC    4X'00'
00003EE4 00000000                           5104          DC    Q(@@STATIC)
00003EE8 00000000                           5105          DC    X'00000000'
00003EEC 00000688                           5106          DC    X'00000688'
00003EF0 0000000000002890                   5107          DC    ADL8(@DATA)
00003EF8 00000000                           5108          DC    X'00000000'
00003EFC 0000070C                           5109          DC    X'0000070C'
                                            5110 *
00003F00 0D                                 5111          DC    XL1'D'
00003F01 000000                             5112          DC    AL3(0)
00003F04 00000F00                           5113          DC    AL4(3840)
00003F08 00000000                           5114          DC    4X'00'
00003F0C 00000000                           5115          DC    Q(@@STATIC)
00003F10 00000000                           5116          DC    X'00000000'
00003F14 00000690                           5117          DC    X'00000690'
00003F18 0000000000002890                   5118          DC    ADL8(@DATA)
00003F20 00000000                           5119          DC    X'00000000'
00003F24 0000071A                           5120          DC    X'0000071A'
                                            5121 *
00003F28 0D                                 5122          DC    XL1'D'
00003F29 000000                             5123          DC    AL3(0)
00003F2C 00000F28                           5124          DC    AL4(3880)
00003F30 00000000                           5125          DC    4X'00'
00003F34 00000000                           5126          DC    Q(@@STATIC)
00003F38 00000000                           5127          DC    X'00000000'
00003F3C 00000698                           5128          DC    X'00000698'
00003F40 0000000000002890                   5129          DC    ADL8(@DATA)
00003F48 00000000                           5130          DC    X'00000000'
00003F4C 00000720                           5131          DC    X'00000720'
                                            5132 *
                                                                                                                           Page  105 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00003F50 0D                                 5133          DC    XL1'D'
00003F51 000000                             5134          DC    AL3(0)
00003F54 00000F50                           5135          DC    AL4(3920)
00003F58 00000000                           5136          DC    4X'00'
00003F5C 00000000                           5137          DC    Q(@@STATIC)
00003F60 00000000                           5138          DC    X'00000000'
00003F64 000006A0                           5139          DC    X'000006A0'
00003F68 0000000000002890                   5140          DC    ADL8(@DATA)
00003F70 00000000                           5141          DC    X'00000000'
00003F74 0000072E                           5142          DC    X'0000072E'
                                            5143 *
00003F78 0D                                 5144          DC    XL1'D'
00003F79 000000                             5145          DC    AL3(0)
00003F7C 00000F78                           5146          DC    AL4(3960)
00003F80 00000000                           5147          DC    4X'00'
00003F84 00000000                           5148          DC    Q(@@STATIC)
00003F88 00000000                           5149          DC    X'00000000'
00003F8C 000006A8                           5150          DC    X'000006A8'
00003F90 0000000000002890                   5151          DC    ADL8(@DATA)
00003F98 00000000                           5152          DC    X'00000000'
00003F9C 0000073A                           5153          DC    X'0000073A'
                                            5154 *
00003FA0 0D                                 5155          DC    XL1'D'
00003FA1 000000                             5156          DC    AL3(0)
00003FA4 00000FA0                           5157          DC    AL4(4000)
00003FA8 00000000                           5158          DC    4X'00'
00003FAC 00000000                           5159          DC    Q(@@STATIC)
00003FB0 00000000                           5160          DC    X'00000000'
00003FB4 000006B0                           5161          DC    X'000006B0'
00003FB8 0000000000002890                   5162          DC    ADL8(@DATA)
00003FC0 00000000                           5163          DC    X'00000000'
00003FC4 00000750                           5164          DC    X'00000750'
                                            5165 *
00003FC8 0D                                 5166          DC    XL1'D'
00003FC9 000000                             5167          DC    AL3(0)
00003FCC 00000FC8                           5168          DC    AL4(4040)
00003FD0 00000000                           5169          DC    4X'00'
00003FD4 00000000                           5170          DC    Q(@@STATIC)
00003FD8 00000000                           5171          DC    X'00000000'
00003FDC 000006B8                           5172          DC    X'000006B8'
00003FE0 0000000000002890                   5173          DC    ADL8(@DATA)
00003FE8 00000000                           5174          DC    X'00000000'
00003FEC 00000760                           5175          DC    X'00000760'
                                            5176 *
00003FF0 0D                                 5177          DC    XL1'D'
00003FF1 000000                             5178          DC    AL3(0)
00003FF4 00000FF0                           5179          DC    AL4(4080)
00003FF8 00000000                           5180          DC    4X'00'
00003FFC 00000000                           5181          DC    Q(@@STATIC)
00004000 00000000                           5182          DC    X'00000000'
00004004 000006C0                           5183          DC    X'000006C0'
00004008 0000000000002890                   5184          DC    ADL8(@DATA)
                                                                                                                           Page  106 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/30 15:36 
00004010 00000000                           5185          DC    X'00000000'
00004014 00000774                           5186          DC    X'00000774'
                                            5187 *
00004018 0D                                 5188          DC    XL1'D'
00004019 000000                             5189          DC    AL3(0)
0000401C 00001018                           5190          DC    AL4(4120)
00004020 00000000                           5191          DC    4X'00'
00004024 00000000                           5192          DC    Q(@@STATIC)
00004028 00000000                           5193          DC    X'00000000'
0000402C 000006C8                           5194          DC    X'000006C8'
00004030 0000000000002890                   5195          DC    ADL8(@DATA)
00004038 00000000                           5196          DC    X'00000000'
0000403C 00000784                           5197          DC    X'00000784'
                                            5198 *
00004040 0D                                 5199          DC    XL1'D'
00004041 000000                             5200          DC    AL3(0)
00004044 00000000                           5201          DC    AL4(0)
00004048 00000000                           5202          DC    4X'00'
0000404C 00000000                           5203          DC    Q(@@STATIC)
00004050 00000000                           5204          DC    X'00000000'
00004054 000006D0                           5205          DC    X'000006D0'
00004058 0000000000002890                   5206          DC    ADL8(@DATA)
00004060 00000000                           5207          DC    X'00000000'
00004064 000006BE                           5208          DC    X'000006BE'
                                            5209 *
                                            5210          END
                                                 Relocation Dictionary                                                     Page  107 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000002 00000020   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 00000002 00000050   A 4      +
 00000002 00000010 00000128   A 4      +
 00000002 00000011 00000130   A 4      +
 00000002 00000002 00000150   A 4      +
 00000002 00000002 00000178   A 4      +
 00000002 00000002 00000180   A 4      +
 00000002 0000000F 00000250   A 4      +
 00000002 00000002 00000278   A 4      +
 00000002 00000002 000002A0   A 4      +
 00000002 00000002 000002A8   A 4      +
 00000002 00000006 00000380   A 4      +
 00000002 00000007 00000388   A 4      +
 00000002 00000002 000003B0   A 4      +
 00000002 00000002 000003D8   A 4      +
 00000002 00000002 000003E0   A 4      +
 00000002 00000006 000004C8   A 4      +
 00000002 00000007 000004D0   A 4      +
 00000002 00000002 000004F8   A 4      +
 00000002 00000002 00000520   A 4      +
 00000002 00000002 00000528   A 4      +
 00000002 00000002 000006A0   A 4      +
 00000002 0000000E 000006A8   A 4      +
 00000002 00000006 000006B0   A 4      +
 00000002 00000012 000006B8   A 4      +
 00000002 00000014 000006C0   A 4      +
 00000002 00000014 000006C8   A 4      +
 00000002 00000007 000006D0   A 4      +
 00000002 0000000C 000006D8   A 4      +
 00000002 00000002 00000700   A 4      +
 00000002 00000002 00000728   A 4      +
 00000002 00000002 00000730   A 4      +
 00000002 00000006 00000830   A 4      +
 00000002 00000002 00000838   A 4      +
 00000002 00000007 00000840   A 4      +
 00000002 00000002 00000868   A 4      +
 00000002 00000002 00000890   A 4      +
 00000002 00000002 00000898   A 4      +
 00000002 00000003 00000948   A 4      +
 00000002 00000002 00000A10   A 4      +
 00000002 00000002 00000A38   A 4      +
 00000002 00000002 00000A40   A 4      +
 00000002 00000006 00000AD0   A 4      +
 00000002 00000007 00000AD8   A 4      +
 00000002 00000002 00000AE0   A 4      +
 00000002 0000000B 00000AE8   A 4      +
 00000002 00000002 00000AF0   A 4      +
 00000002 00000002 00000AF8   A 4      +
 00000002 00000002 00000B00   A 4      +
 00000002 00000002 00000C28   A 4      +
 00000002 00000002 00000C50   A 4      +
 00000002 00000002 00000C58   A 4      +
                                                 Relocation Dictionary                                                     Page  108 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000006 00000D18   A 4      +
 00000002 00000002 00000D48   A 4      +
 00000002 00000002 00000D70   A 4      +
 00000002 00000002 00000D78   A 4      +
 00000002 00000007 00000E38   A 4      +
 00000002 00000002 00000E90   A 4      +
 00000002 00000002 00000E98   A 4      +
 00000002 00000002 00000F30   A 4      +
 00000002 00000002 00000F38   A 4      +
 00000002 00000002 00000FC8   A 4      +
 00000002 00000002 00000FD0   A 4      +
 00000002 00000002 00001090   A 4      +
 00000002 00000002 00001098   A 4      +
 00000002 00000002 00001138   A 4      +
 00000002 00000002 00001160   A 4      +
 00000002 00000002 00001168   A 4      +
 00000002 0000000A 00001218   A 4      +
 00000002 00000002 00001220   A 4      +
 00000002 00000002 00001228   A 4      +
 00000002 00000002 000013D0   A 4      +
 00000002 00000002 000013F8   A 4      +
 00000002 00000002 00001400   A 4      +
 00000002 00000002 000014F8   A 4      +
 00000002 00000002 00001500   A 4      +
 00000002 00000002 00001528   A 4      +
 00000002 00000002 00001550   A 4      +
 00000002 00000002 00001558   A 4      +
 00000002 00000002 00001608   A 4      +
 00000002 00000002 00001610   A 4      +
 00000002 00000002 00001618   A 4      +
 00000002 00000002 00001620   A 4      +
 00000002 00000002 00001628   A 4      +
 00000002 00000002 000016F0   A 4      +
 00000002 00000002 00001718   A 4      +
 00000002 00000002 00001720   A 4      +
 00000002 00000002 00001820   A 4      +
 00000002 00000002 00001828   A 4      +
 00000002 00000002 00001860   A 4      +
 00000002 00000002 00001888   A 4      +
 00000002 00000002 00001890   A 4      +
 00000002 00000002 00001938   A 4      +
 00000002 00000002 00001940   A 4      +
 00000002 00000002 00001948   A 4      +
 00000002 00000002 00001950   A 4      +
 00000002 00000002 00001958   A 4      +
 00000002 00000002 00001A40   A 4      +
 00000002 00000002 00001A68   A 4      +
 00000002 00000002 00001A70   A 4      +
 00000002 00000002 00001B90   A 4      +
 00000002 00000002 00001B98   A 4      +
 00000002 00000002 00001BA0   A 4      +
 00000002 00000002 00001BA8   A 4      +
 00000002 00000002 00001BB0   A 4      +
                                                 Relocation Dictionary                                                     Page  109 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000002 00001BE8   A 4      +
 00000002 00000002 00001C10   A 4      +
 00000002 00000002 00001C18   A 4      +
 00000002 00000002 00001D38   A 4      +
 00000002 00000002 00001D40   A 4      +
 00000002 00000002 00001D48   A 4      +
 00000002 00000002 00001D50   A 4      +
 00000002 00000002 00001D58   A 4      +
 00000002 00000002 00001D60   A 4      +
 00000002 00000002 00001D88   A 4      +
 00000002 00000002 00001DB0   A 4      +
 00000002 00000002 00001DB8   A 4      +
 00000002 00000002 00001EE8   A 4      +
 00000002 00000002 00001EF0   A 4      +
 00000002 00000002 00001EF8   A 4      +
 00000002 00000002 00001F00   A 4      +
 00000002 00000002 00001F30   A 4      +
 00000002 00000002 00001F58   A 4      +
 00000002 00000002 00001F60   A 4      +
 00000002 00000002 00002040   A 4      +
 00000002 0000000A 00002048   A 4      +
 00000002 00000002 00002050   A 4      +
 00000002 00000002 00002080   A 4      +
 00000002 00000002 000020A8   A 4      +
 00000002 00000002 000020B0   A 4      +
 00000002 00000002 00002168   A 4      +
 00000002 00000002 00002170   A 4      +
 00000002 00000002 00002178   A 4      +
 00000002 00000002 00002218   A 4      +
 00000002 00000002 00002240   A 4      +
 00000002 00000002 00002248   A 4      +
 00000002 00000002 000022D8   A 4      +
 00000002 00000002 000022E0   A 4      +
 00000002 00000002 000022E8   A 4      +
 00000002 0000000D 000022F0   A 4      +
 00000002 00000002 00002300   A 4      +
 00000002 00000002 00002308   A 4      +
 00000002 00000002 00002310   A 4      +
 00000002 00000002 00002318   A 4      +
 00000002 00000002 00002320   A 4      +
 00000002 00000002 00002328   A 4      +
 00000002 00000002 00002530   A 4      +
 00000002 00000002 00002558   A 4      +
 00000002 00000002 00002560   A 4      +
 00000002 00000002 000025D8   A 4      +
 00000002 00000002 000025E0   A 4      +
 00000002 00000012 000025E8   A 4      +
 00000002 00000014 000025F0   A 4      +
 00000002 00000014 000025F8   A 4      +
 00000002 00000002 00002600   A 4      +
 00000002 00000009 00002608   A 4      +
 00000002 00000005 00002610   A 4      +
 00000002 00000002 00002740   A 4      +
                                                 Relocation Dictionary                                                     Page  110 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000002 00000002 00002768   A 4      +
 00000002 00000002 00002770   A 4      +
 00000002 00000004 00002880   A 4      +
 00000002 00000008 00002888   A 4      +
 00000015 00000013 00003034   Q 4      +
 00000015 00000013 00003154   Q 4      +
 00000015 00000013 00003214   Q 4      +
 00000015 00000013 0000323C   Q 4      +
 00000015 00000013 00003264   Q 4      +
 00000015 00000014 00003270   A 4      +
 00000015 00000013 0000328C   Q 4      +
 00000015 00000014 00003298   A 4      +
 00000015 00000013 000032B4   Q 4      +
 00000015 00000014 000032C0   A 4      +
 00000015 00000013 000032DC   Q 4      +
 00000015 00000014 000032E8   A 4      +
 00000015 00000013 00003304   Q 4      +
 00000015 00000014 00003310   A 4      +
 00000015 00000013 0000332C   Q 4      +
 00000015 00000014 00003338   A 4      +
 00000015 00000013 00003354   Q 4      +
 00000015 00000014 00003360   A 4      +
 00000015 00000013 0000337C   Q 4      +
 00000015 00000014 00003388   A 4      +
 00000015 00000013 000033A4   Q 4      +
 00000015 00000014 000033B0   A 4      +
 00000015 00000013 000033CC   Q 4      +
 00000015 00000014 000033D8   A 4      +
 00000015 00000013 000033F4   Q 4      +
 00000015 00000014 00003400   A 4      +
 00000015 00000013 0000341C   Q 4      +
 00000015 00000014 00003428   A 4      +
 00000015 00000013 00003444   Q 4      +
 00000015 00000014 00003450   A 4      +
 00000015 00000013 0000346C   Q 4      +
 00000015 00000014 00003478   A 4      +
 00000015 00000013 00003494   Q 4      +
 00000015 00000014 000034A0   A 4      +
 00000015 00000013 000034BC   Q 4      +
 00000015 00000014 000034C8   A 4      +
 00000015 00000013 000034E4   Q 4      +
 00000015 00000014 000034F0   A 4      +
 00000015 00000013 0000350C   Q 4      +
 00000015 00000014 00003518   A 4      +
 00000015 00000013 00003534   Q 4      +
 00000015 00000014 00003540   A 4      +
 00000015 00000013 0000355C   Q 4      +
 00000015 00000014 00003568   A 4      +
 00000015 00000013 00003584   Q 4      +
 00000015 00000014 00003590   A 4      +
 00000015 00000013 000035AC   Q 4      +
 00000015 00000014 000035B8   A 4      +
 00000015 00000013 000035D4   Q 4      +
                                                 Relocation Dictionary                                                     Page  111 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000015 00000014 000035E0   A 4      +
 00000015 00000013 000035FC   Q 4      +
 00000015 00000014 00003608   A 4      +
 00000015 00000013 00003624   Q 4      +
 00000015 00000014 00003630   A 4      +
 00000015 00000013 0000364C   Q 4      +
 00000015 00000014 00003658   A 4      +
 00000015 00000013 00003674   Q 4      +
 00000015 00000014 00003680   A 4      +
 00000015 00000013 0000369C   Q 4      +
 00000015 00000014 000036A8   A 4      +
 00000015 00000013 000036C4   Q 4      +
 00000015 00000014 000036D0   A 4      +
 00000015 00000013 000036EC   Q 4      +
 00000015 00000014 000036F8   A 4      +
 00000015 00000013 00003714   Q 4      +
 00000015 00000014 00003720   A 4      +
 00000015 00000013 0000373C   Q 4      +
 00000015 00000014 00003748   A 4      +
 00000015 00000013 00003764   Q 4      +
 00000015 00000014 00003770   A 4      +
 00000015 00000013 0000378C   Q 4      +
 00000015 00000014 00003798   A 4      +
 00000015 00000013 000037B4   Q 4      +
 00000015 00000014 000037C0   A 4      +
 00000015 00000013 000037DC   Q 4      +
 00000015 00000014 000037E8   A 4      +
 00000015 00000013 00003804   Q 4      +
 00000015 00000014 00003810   A 4      +
 00000015 00000013 0000382C   Q 4      +
 00000015 00000014 00003838   A 4      +
 00000015 00000013 00003854   Q 4      +
 00000015 00000014 00003860   A 4      +
 00000015 00000013 0000387C   Q 4      +
 00000015 00000014 00003888   A 4      +
 00000015 00000013 000038A4   Q 4      +
 00000015 00000014 000038B0   A 4      +
 00000015 00000013 000038CC   Q 4      +
 00000015 00000014 000038D8   A 4      +
 00000015 00000013 000038F4   Q 4      +
 00000015 00000014 00003900   A 4      +
 00000015 00000013 0000391C   Q 4      +
 00000015 00000014 00003928   A 4      +
 00000015 00000013 00003944   Q 4      +
 00000015 00000014 00003950   A 4      +
 00000015 00000013 0000396C   Q 4      +
 00000015 00000014 00003978   A 4      +
 00000015 00000013 00003994   Q 4      +
 00000015 00000014 000039A0   A 4      +
 00000015 00000013 000039BC   Q 4      +
 00000015 00000014 000039C8   A 4      +
 00000015 00000013 000039E4   Q 4      +
 00000015 00000014 000039F0   A 4      +
                                                 Relocation Dictionary                                                     Page  112 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000015 00000013 00003A0C   Q 4      +
 00000015 00000014 00003A18   A 4      +
 00000015 00000013 00003A34   Q 4      +
 00000015 00000014 00003A40   A 4      +
 00000015 00000013 00003A5C   Q 4      +
 00000015 00000014 00003A68   A 4      +
 00000015 00000013 00003A84   Q 4      +
 00000015 00000014 00003A90   A 4      +
 00000015 00000013 00003AAC   Q 4      +
 00000015 00000014 00003AB8   A 4      +
 00000015 00000013 00003AD4   Q 4      +
 00000015 00000014 00003AE0   A 4      +
 00000015 00000013 00003AFC   Q 4      +
 00000015 00000014 00003B08   A 4      +
 00000015 00000013 00003B24   Q 4      +
 00000015 00000014 00003B30   A 4      +
 00000015 00000013 00003B4C   Q 4      +
 00000015 00000014 00003B58   A 4      +
 00000015 00000013 00003B74   Q 4      +
 00000015 00000014 00003B80   A 4      +
 00000015 00000013 00003B9C   Q 4      +
 00000015 00000014 00003BA8   A 4      +
 00000015 00000013 00003BC4   Q 4      +
 00000015 00000014 00003BD0   A 4      +
 00000015 00000013 00003BEC   Q 4      +
 00000015 00000014 00003BF8   A 4      +
 00000015 00000013 00003C14   Q 4      +
 00000015 00000014 00003C20   A 4      +
 00000015 00000013 00003C3C   Q 4      +
 00000015 00000014 00003C48   A 4      +
 00000015 00000013 00003C64   Q 4      +
 00000015 00000014 00003C70   A 4      +
 00000015 00000013 00003C8C   Q 4      +
 00000015 00000014 00003C98   A 4      +
 00000015 00000013 00003CB4   Q 4      +
 00000015 00000014 00003CC0   A 4      +
 00000015 00000013 00003CDC   Q 4      +
 00000015 00000014 00003CE8   A 4      +
 00000015 00000013 00003D04   Q 4      +
 00000015 00000014 00003D10   A 4      +
 00000015 00000013 00003D2C   Q 4      +
 00000015 00000014 00003D38   A 4      +
 00000015 00000013 00003D54   Q 4      +
 00000015 00000014 00003D60   A 4      +
 00000015 00000013 00003D7C   Q 4      +
 00000015 00000014 00003D88   A 4      +
 00000015 00000013 00003DA4   Q 4      +
 00000015 00000014 00003DB0   A 4      +
 00000015 00000013 00003DCC   Q 4      +
 00000015 00000014 00003DD8   A 4      +
 00000015 00000013 00003DF4   Q 4      +
 00000015 00000014 00003E00   A 4      +
 00000015 00000013 00003E1C   Q 4      +
                                                 Relocation Dictionary                                                     Page  113 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/30 15:36 
 00000015 00000014 00003E28   A 4      +
 00000015 00000013 00003E44   Q 4      +
 00000015 00000014 00003E50   A 4      +
 00000015 00000013 00003E6C   Q 4      +
 00000015 00000014 00003E78   A 4      +
 00000015 00000013 00003E94   Q 4      +
 00000015 00000014 00003EA0   A 4      +
 00000015 00000013 00003EBC   Q 4      +
 00000015 00000014 00003EC8   A 4      +
 00000015 00000013 00003EE4   Q 4      +
 00000015 00000014 00003EF0   A 4      +
 00000015 00000013 00003F0C   Q 4      +
 00000015 00000014 00003F18   A 4      +
 00000015 00000013 00003F34   Q 4      +
 00000015 00000014 00003F40   A 4      +
 00000015 00000013 00003F5C   Q 4      +
 00000015 00000014 00003F68   A 4      +
 00000015 00000013 00003F84   Q 4      +
 00000015 00000014 00003F90   A 4      +
 00000015 00000013 00003FAC   Q 4      +
 00000015 00000014 00003FB8   A 4      +
 00000015 00000013 00003FD4   Q 4      +
 00000015 00000014 00003FE0   A 4      +
 00000015 00000013 00003FFC   Q 4      +
 00000015 00000014 00004008   A 4      +
 00000015 00000013 00004024   Q 4      +
 00000015 00000014 00004030   A 4      +
 00000015 00000013 0000404C   Q 4      +
 00000015 00000014 00004058   A 4      +
                                                 DSECT Cross Reference                                                     Page  114 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:36 
@AUTO#rd_atomic32_get
         000000AC  FFFFFFFF  00167
@AUTO#rd_clock
         000000B8  FFFFFFFE  00280
@AUTO#rd_kafka_q_destroy0
         000000AC  FFFFFFFB  00705
@AUTO#rd_kafka_q_disable0
         000000A8  FFFFFFFC  00520
@AUTO#rd_kafka_q_fwd_get
         000000A8  FFFFFFFA  00843
@AUTO#rd_kafka_q_io_event
         000000A8  FFFFFFF9  01006
@AUTO#rd_kafka_q_keep
         000000A8  FFFFFFFD  00397
@AUTO#rd_kafka_q_yield
         000000A8  FFFFFFF8  01208
@AUTO#rd_kafka_timer_cmp
         000000A8  FFFFFFF3  01670
@AUTO#rd_kafka_timer_exp_backoff
         000000A8  FFFFFFEC  02754
@AUTO#rd_kafka_timer_is_started
         000000A9  FFFFFFEE  02435
@AUTO#rd_kafka_timer_next
         000000B0  FFFFFFEA  03063
@AUTO#rd_kafka_timer_override_once
         000000A8  FFFFFFEB  02903
@AUTO#rd_kafka_timer_schedule
         000000A8  FFFFFFF0  02133
@AUTO#rd_kafka_timer_schedule_next
         000000A8  FFFFFFF1  02002
@AUTO#rd_kafka_timer_scheduled
         000000A8  FFFFFFF4  01578
@AUTO#rd_kafka_timer_started
         000000A8  FFFFFFF5  01497
@AUTO#rd_kafka_timer_start0
         000000A8  FFFFFFED  02608
@AUTO#rd_kafka_timer_stop
         000000A8  FFFFFFEF  02308
@AUTO#rd_kafka_timer_unschedule
         000000A8  FFFFFFF2  01764
@AUTO#rd_kafka_timers_destroy
         000000A8  FFFFFFE6  03844
@AUTO#rd_kafka_timers_init
         000000A8  FFFFFFE5  03979
@AUTO#rd_kafka_timers_interrupt
         000000A8  FFFFFFE9  03188
@AUTO#rd_kafka_timers_lock
         000000A8  FFFFFFF7  01312
@AUTO#rd_kafka_timers_next
         000000B0  FFFFFFE8  03354
@AUTO#rd_kafka_timers_run
         000000B0  FFFFFFE7  03659
@AUTO#rd_kafka_timers_unlock
                                                 DSECT Cross Reference                                                     Page  115 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/30 15:36 
         000000A8  FFFFFFF6  01416
                                          Macro and Copy Code Source Summary                                               Page  116 
Source                                                    Members                                     DASM V1.95.14 2021/04/30 15:36 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  dccextrn
                                                      Using Map                                                            Page  117 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
   109  0000009E  00000002 USING  ORDINARY    00000060 00001000 00000002  12 000D0    129 @REGION_1061_1,12
   162  00000138  00000002 DROP                                           12              12
   231  000001CE  00000002 USING  ORDINARY    00000190 00001000 00000002  12 000C0    241 @REGION_1088_1,12
   275  00000258  00000002 DROP                                           12              12
   344  000002F6  00000002 USING  ORDINARY    000002B8 00001000 00000002  12 000D0    362 @REGION_1428_1,12
   392  00000390  00000002 DROP                                           12              12
   460  0000042E  00000002 USING  ORDINARY    000003F0 00001000 00000002  12 000E0    485 @REGION_1432_1,12
   515  000004D8  00000002 DROP                                           12              12
   583  00000576  00000002 USING  ORDINARY    00000538 00001000 00000002  12 001A0    664 @REGION_1435_1,12
   700  000006E0  00000002 DROP                                           12              12
   769  0000077E  00000002 USING  ORDINARY    00000740 00001000 00000002  12 00100    805 @REGION_1439_1,12
   838  00000848  00000002 DROP                                           12              12
   906  000008E6  00000002 USING  ORDINARY    000008A8 00001000 00000002  12 00102    973 @REGION_1441_1,12
  1001  000009F2  00000002 DROP                                           12              12
  1069  00000A8E  00000002 USING  ORDINARY    00000A50 00001000 00000002  12 0016C   1174 @REGION_1443_1,12
  1203  00000C04  00000002 DROP                                           12              12
  1271  00000CA6  00000002 USING  ORDINARY    00000C68 00001000 00000002  12 000B0   1279 @REGION_1917_1,12
  1307  00000D20  00000002 DROP                                           12              12
  1375  00000DC6  00000002 USING  ORDINARY    00000D88 00001000 00000002  12 000B0   1383 @REGION_1918_1,12
  1411  00000E40  00000002 DROP                                           12              12
  1468  00000EB2  00000002 USING  ORDINARY    00000EA8 00001000 00000002  12 00026   1476 @REGION_1919_1,12
  1492  00000EE0  00000002 DROP                                           12              12
  1549  00000F52  00000002 USING  ORDINARY    00000F48 00001000 00000002  12 00026   1557 @REGION_1920_1,12
  1573  00000F80  00000002 DROP                                           12              12
  1630  00000FEA  00000002 USING  ORDINARY    00000FE0 00001000 00000002  12 0004A   1648 @REGION_1921_1,12
  1665  0000103C  00000002 DROP                                           12              12
  1722  000010B2  00000002 USING  ORDINARY    000010A8 00001000 00000002  12 0003C   1736 @REGION_1922_1,12
  1759  0000110A  00000002 DROP                                           12              12
  1827  000011B6  00000002 USING  ORDINARY    00001178 00001000 00000002  12 001EC   1970 @REGION_1923_1,12
  1997  000013AC  00000002 DROP                                           12              12
  2065  0000144E  00000002 USING  ORDINARY    00001410 00001000 00000002  12 000F0   2099 @REGION_1924_1,12
  2128  00001508  00000002 DROP                                           12              12
  2198  000015A6  00000002 USING  ORDINARY    00001568 00001000 00000002  12 00114   2274 @REGION_1373_1,12
  2303  000016C4  00000002 DROP                                           12              12
  2373  0000176E  00000002 USING  ORDINARY    00001730 00001000 00000002  12 00100   2403 @REGION_1378_1,12
  2430  00001838  00000002 DROP                                           12              12
  2501  000018DE  00000002 USING  ORDINARY    000018A0 00001000 00000002  12 0012E   2578 @REGION_1374_1,12
  2603  00001A16  00000002 DROP                                           12              12
  2673  00001ABE  00000002 USING  ORDINARY    00001A80 00001000 00000002  12 00130   2717 @REGION_1375_1,12
  2749  00001BB8  00000002 DROP                                           12              12
  2819  00001C66  00000002 USING  ORDINARY    00001C28 00001000 00000002  12 00138   2865 @REGION_1377_1,12
  2898  00001D68  00000002 DROP                                           12              12
  2968  00001E06  00000002 USING  ORDINARY    00001DC8 00001000 00000002  12 00138   3024 @REGION_1376_1,12
  3058  00001F08  00000002 DROP                                           12              12
  3131  00001FAE  00000002 USING  ORDINARY    00001F70 00001000 00000002  12 000E0   3153 @REGION_1379_1,12
  3183  00002058  00000002 DROP                                           12              12
  3253  000020FE  00000002 USING  ORDINARY    000020C0 00001000 00000002  12 000EC   3321 @REGION_1380_1,12
  3349  000021F8  00000002 DROP                                           12              12
  3422  00002296  00000002 USING  ORDINARY    00002258 00001000 00000002  12 00254   3629 @REGION_1381_1,12
  3654  00002506  00000002 DROP                                           12              12
  3729  000025AE  00000002 USING  ORDINARY    00002570 00001000 00000002  12 00126   3814 @REGION_1382_1,12
                                                      Using Map                                                            Page  118 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
  3839  0000271C  00000002 DROP                                           12              12
  3909  000027BE  00000002 USING  ORDINARY    00002780 00001000 00000002  12 00108   3940 @REGION_1383_1,12
  3974  00002890  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  119 
                                                                                                      DASM V1.95.14 2021/04/30 15:36 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDKAFKA_TIMER ..\asg\asm\rdkafka_timer.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil

Assembly Start Time: 15.36.14 Stop Time: 15.36.14 Processor Time: 00.00.00.0440
Return Code 000
