                                            Dignus Assembler Option Summary                                                Page    1 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 

Overriding Parameters- -LC:\DIGNUS\MACLIB\&m -oc:../asg/obj/rdhdrhistogram.obj ../asg/asm/rdhdrhistogram.asm
  Process Statements-       DUPALIAS

Options for this Assembly             Source
-------------------------             -------------------------
   NOADATA                            {Default}
     ALIGN                            {Default}
     BATCH                            {Default}
   NOCOMPATCASE                       {Default}
   NOCOMPATMACROCASE                  {Default}
   NOCOMPATSYSLIST                    {Default}
   NOCOMPATLITTYPE                    {Default}
   NOCOMPATSYSPATH                    {Default}
     DXREF                            {Default}
   NOMAPAT                            {Default}
     DUPALIAS                         {*PROCESS}
   NOVSELIBR                          {Default}
     ESD                              {Default}
     ERRFMT(microsoft)                {Default}
     FLAG(0,ALIGN,CONT,NOEXLITW,NOPAGE0,PUSH,RECORD,NOSUBSTR,NOIMPLEN,USING0)
                                      {Default}
   NOFOLD                             {Default}
   NOGOFF                             {Default}
     LANGUAGE(EN)                     {Default}
     LINECOUNT(55)                    {Default}
     LIST(&d&p&f.lst)                 {Default}
     MACCPYEXT(mac)                   {Default}
     MXREF                            {Default}
     OBJECT(c:..\asg\obj\rdhdrhistogram.obj)
                                      CMDLINE
     OPTABLE(UNI,NOLIST)              {Default}
     OPTIONSUMMARY                    {Default}
   NOPCONTROL                         {Default}
   NOPESTOP                           {Default}
   NOPROFILE                          {Default}
   NORA2                              {Default}
     RLD                              {Default}
     RENT                             {Default}
   NORXREF                            {Default}
     SECTALGN(8)                      {Default}
     SIZE(MAX)                        {Default}
   NOSUPRWARN                         {Default}
     SYSPARM()                        {Default}
     TERM(WIDE)                       {Default}
     THREAD                           {Default}
   NOTRANSLATE                        {Default}
     TYPECHECK(MAGNITUDE,REGISTER)    {Default}
     USING(NOLIMIT,MAP,WARN(15))      {Default}
   NONXREF                            {Default}
   NOXREF                             {Default}
     XSD                              {Default}

                                            Dignus Assembler Option Summary                                                Page    2 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 
Libraries in Search Order:
       CMDLINE      C:\DIGNUS\MACLIB\&m
                                              External Symbol Dictionary                                                   Page    3 
Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                                      DASM V1.95.14 2021/04/29 12:42 
@@ZARCH#  WX 00000001                              00
@RDHDRHISTOGRAM
          SD 00000002 00000000 000056F0            07  @CODE
fprintf   ER 00000003                                  FPRINTF
rd_unittest_assert_on_failure
          XD 00000004 00000003 00000000                RD_UNITTEST_ASSERT_ON_FAILURE
@@DXPD@H  ER 00000005                                  POW
@@WSQT@H  ER 00000006                                  SQRT
@@CEIL@H  ER 00000007                                  CEIL
@@FLOOR@  ER 00000008                                  FLOOR
@@DLG2@H  ER 00000009                                  LOG2
@@ASSERT  ER 0000000A                                  __ASSERT
@@STDERP  XD 0000000B 00000003 00000000                __STDERRP
calloc    ER 0000000C                                  CALLOC
free      ER 0000000D                                  FREE
@rdhdrhistogram&
          XD 0000000E 00000007 00000200                @@STATIC
@rdhdrhistogram
          SD 0000000F 000056F0 000007C0            07  @DATA
@@STDERP  ER 00000010                                  @E__STDERRP
rd_unittest_assert_on_failure
          ER 00000011                                  @ERD_UNITTEST_ASSERT_ON_FAILURE
rdhdrhistogram:
          SD 00000012 00005EB0 00000230            07  @@INIT@
rd_hdr_histogram_destroy
          LD          00000370          00000002   00  RD_HDR_HISTOGRAM_DESTROY
rd_hdr_histogram_new
          LD          00000488          00000002   00  RD_HDR_HISTOGRAM_NEW
rd_hdr_histogram_reset
          LD          000007A0          00000002   00  RD_HDR_HISTOGRAM_RESET
rd_hdr_histogram_stddev
          LD          00001830          00000002   00  RD_HDR_HISTOGRAM_STDDEV
rd_hdr_histogram_max
          LD          00001A20          00000002   00  RD_HDR_HISTOGRAM_MAX
rd_hdr_histogram_min
          LD          00001B98          00000002   00  RD_HDR_HISTOGRAM_MIN
rd_hdr_histogram_mean
          LD          00001D18          00000002   00  RD_HDR_HISTOGRAM_MEAN
rd_hdr_histogram_record
          LD          00001EB8          00000002   00  RD_HDR_HISTOGRAM_RECORD
rd_hdr_histogram_quantile
          LD          00002050          00000002   00  RD_HDR_HISTOGRAM_QUANTILE
unittest_rdhdrhistogram
          LD          00005570          00000002   00  UNITTEST_RDHDRHISTOGRAM
                                                                                                                           Page    4 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                               1 *PROCESS DUPALIAS
                                               2 *
                                               3 *  Compiled by DCC Version 2.25.07 Mar  6 2021 08:51:07
                                               4 *           on Thu Apr 29 12:42:42 2021
                                               5 *

                                               7          WXTRN @@ZARCH#
                                               8 *
                                               9 *
                                              10 *
                                              11 *    Code Section
                                              12 *
                                              13 @CODE    ALIAS C'@RDHDRHISTOGRAM'
00000000                00000000 000056F0     14 @CODE    CSECT
                                              15 @CODE    AMODE ANY
                                              16 @CODE    RMODE ANY
                                              17 @DATA    ALIAS C'@rdhdrhistogram'
                                              18 fprintf  ALIAS C'fprintf'
                                              19          EXTRN fprintf
                                              20 rd_unittest_assert_on_failure ALIAS X'99846DA49589A3A385A2A36D81A2A2859*
                                                                9A36D96956D86818993A49985'
                                              21 rd_unittest_assert_on_failure DXD   0F
                                              22 pow      ALIAS C'@@DXPD@H'
                                              23          EXTRN pow
                                              24 sqrt     ALIAS C'@@WSQT@H'
                                              25          EXTRN sqrt
                                              26 ceil     ALIAS C'@@CEIL@H'
                                              27          EXTRN ceil
                                              28 floor    ALIAS C'@@FLOOR@'
                                              29          EXTRN floor
                                              30 log2     ALIAS C'@@DLG2@H'
                                              31          EXTRN log2
                                              32 __assert ALIAS C'@@ASSERT'
                                              33          EXTRN __assert
                                              34 __stderrp ALIAS C'@@STDERP'
                                              35 __stderrp DXD   0F
                                              36 calloc   ALIAS C'calloc'
                                              37          EXTRN calloc
                                              38 free     ALIAS C'free'
                                              39          EXTRN free
                                              40 *
                                              41 *
                                              42 *
                                              43 * ....... start of rd_calloc
00000000                                      44 @LNAME751 DS   0H
00000000 00000009                             45          DC    X'00000009'
00000004 99846D8381939396                     46          DC    C'rd_calloc'
0000000D 00                                   47          DC    X'00'
                                              48 rd_calloc DCCPRLG CINDEX=751,BASER=12,FRAME=208,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME751
                                              49          macro
                                              50          dccextrn &m
                                                                                                                           Page    5 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                              51          gblc    &$dccext(1000)
                                              52          gbla    &$dccexti
                                              53          lcla    &i
                                              54 &$dccext(&$dccexti+1) setc    '&m'
                                              55 &i       seta    1
                                              56 .loop    aif    (&i gt &$dccexti).around
                                              57          aif    ('&$dccext(&i)' eq '&m').getout
                                              58 &i       seta    &i+1
                                              59          ago     .loop
                                              60 .around  anop
                                              61 &$dccexti seta &$dccexti+1
                                              62          extrn  &m
                                              63 .getout  anop
                                              64          mend
00000010                                      65+$eye0002    ds    0d                                                    02-DCCCA
00000010 C4C3C3                               66+         dc cl3'DCC'                                                    02-DCCCA
00000013 01                                   67+         dc xl1'01' format one                                          02-DCCCA
00000014 00000000                             68+         dc a(0)                                                        02-DCCCA
00000018 0000000000000082                     69+         dc ad(@PER_751)                                                02-DCCCA
00000020 00000000000000D0                     70+         dc ad(208)                                                     02-DCCCA
00000028 0000000000000000                     71+         dc ad(0)                                                       02-DCCCA
00000030 0000000000001000                     72+         dc ad(4096)                                                    02-DCCCA
00000038 20                                   73+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000039 03                                   74+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000003A 03                                   75+         dc al1(3)                                                      02-DCCCA
0000003B 08                                   76+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000003C 00                                   77+         dc bl.8'00000000'                                              02-DCCCA
0000003D 000000                               78+         dc al3(0)                                                      02-DCCCA
00000040 0000000000000000                     79+         dc ad(@LNAME751)                                               02-DCCCA
00000048                                      80+         ds 0d                                                          02-DCCCA
00000048 0000000000000010                     81+         dc ad($eye0002)                                                02-DCCCA
00000050 0000000000000000                     82+         dc ad(0)                                                       02-DCCCA
00000058                                      83+         ds    0d                                                       01-DCCPR
00000058                                      84+rd_calloc ds   0d                                                       01-DCCPR
00000058                                      85+@REGION_751_1 ds 0h                                                     01-DCCPR
00000058 EBEC D008 0024          00000008     86+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000005E E3E0 D088 0004          00000088     87+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000064 E3C0 D090 0004          00000090     88+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000006A B904 002E                            89+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000006E E3B0 C018 0004          00000018     90+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000074 A7EB 00D0               000000D0     91+         aghi  14,208              increase by frame size               01-DCCPR
00000078 E3E0 C020 0021          00000020     92+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000007E 4720 B020               00000020     93+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000082                                      94+@PER_751 ds    0h                                                       01-DCCPR
00000082 EBDE 2080 0024          00000080     95+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000088 E3C0 2090 0024          00000090     96+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000008E B904 00D2                            97+         lgr   13,2                set real frame pointer               01-DCCPR
00000092 B904 00CF                            98+         lgr   12,15               set base reg                         01-DCCPR
                        00000058              99+         using @REGION_751_1,12                                         01-DCCPR
                                             100 * ******* End of Prologue
                                             101 * *
                                             102 * ***      void *p = calloc(num, sz);
                                                                                                                           Page    6 
  Active Usings: @REGION_751_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000096 E3F0 1000 0004          00000000    103          LG    15,0(0,1)   ; num
0000009C E3F0 D0B0 0024          000000B0    104          STG   15,176(0,13)
000000A2 E3F0 1008 0004          00000008    105          LG    15,8(0,1)   ; sz
000000A8 E3F0 D0B8 0024          000000B8    106          STG   15,184(0,13)
000000AE 4110 D0B0               000000B0    107          LA    1,176(0,13)
000000B2 E3F0 C0F8 0004          00000150    108          LG    15,@lit_751_0 ; calloc
000000B8                                     109 @@gen_label0 DS    0H
000000B8 05EF                                110          BALR  14,15
000000BA                                     111 @@gen_label1 DS    0H
000000BA B904 002F                           112          LGR   2,15
                                             113 * ***      ((p) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkaf\
                                             114 * ka\\src\\rd.h", 122, "p"));
000000BE B902 00F2                           115          LTGR  15,2
000000C2 4770 C0A2               000000FA    116          BNZ   @L32
000000C6                                     117 @L31     DS    0H
000000C6 E3F0 C110 0004          00000168    118          LG    15,@lit_751_1
000000CC E3F0 D0B0 0024          000000B0    119          STG   15,176(0,13)
000000D2 E3F0 C108 0004          00000160    120          LG    15,@lit_751_2
000000D8 E3F0 D0B8 0024          000000B8    121          STG   15,184(0,13)
000000DE E548 D0C0 007A          000000C0    122          MVGHI 192(13),122
000000E4 41F0 F020               00000020    123          LA    15,32(0,15)
000000E8 E3F0 D0C8 0024          000000C8    124          STG   15,200(0,13)
000000EE 4110 D0B0               000000B0    125          LA    1,176(0,13)
000000F2 E3F0 C100 0004          00000158    126          LG    15,@lit_751_3 ; __assert
000000F8                                     127 @@gen_label3 DS    0H
000000F8 05EF                                128          BALR  14,15
000000FA                                     129 @@gen_label4 DS    0H
000000FA                                     130 @L32     DS    0H
                                             131 * ***      return p;
000000FA B904 00F2                           132          LGR   15,2
                                             133 * ***   }
                                             134 * * **** Start of Epilogue
                                             135          DCCEPIL
000000FE                                     136+         ds 0h                                                          01-DCCEP
                                             137+* Epilog
000000FE D707 D088 D088 00000088 00000088    138+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000104 E3D0 D080 0004          00000080    139+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000010A E3C0 D090 0004          00000090    140+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000110 E3B0 C018 0004          00000018    141+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000116 E3C0 B010 0021          00000010    142+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000011C E3E0 D008 0004          00000008    143+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000122 EB1C D020 0004          00000020    144+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000128 078E                                145+         bcr 8,14                if same dsab, just return              01-DCCEP
0000012A E3F0 D010 0024          00000010    146+         stg 15,16(0,13)         save return code                       01-DCCEP
00000130 E300 D018 0024          00000018    147+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000136 E3F0 D090 0004          00000090    148+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000013C E3F0 F018 0004          00000018    149+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000142 47F0 F040               00000040    150+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             151+* End of Epilog
                                             152 * * **** End of Epilogue
00000148                                     153          DS    0D
00000148 000000D0                            154 @FRAMESIZE_751 DC F'208'
                                                                                                                           Page    7 
  Active Usings: @REGION_751_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000014C 00000000
00000150 0000000000000000                    155 @lit_751_0 DC  AD(calloc)
00000158 0000000000000000                    156 @lit_751_3 DC  AD(__assert)
00000160 00000000000057E8                    157 @lit_751_2 DC  AD(@strings@)
00000168 00000000000056F0                    158 @lit_751_1 DC  AD(@DATA)
                                             159          DROP  12
                                             160 *
                                             161 *   DSECT for automatic variables in "rd_calloc"
                                             162 *      (FUNCTION #751)
                                             163 *
00000000                00000000 000000A8    164 @AUTO#rd_calloc DSECT
00000000                                     165          DS    XL168
                                             166 *
00000170                00000000 000056F0    167 @CODE    CSECT
                                             168 *
                                             169 *
                                             170 *
                                             171 * ....... start of rd_free
00000170                                     172 @LNAME754 DS   0H
00000170 00000007                            173          DC    X'00000007'
00000174 99846D86998585                      174          DC    C'rd_free'
0000017B 00                                  175          DC    X'00'
                                             176 rd_free  DCCPRLG CINDEX=754,BASER=12,FRAME=176,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME754
                                             177          macro
                                             178          dccextrn &m
                                             179          gblc    &$dccext(1000)
                                             180          gbla    &$dccexti
                                             181          lcla    &i
                                             182 &$dccext(&$dccexti+1) setc    '&m'
                                             183 &i       seta    1
                                             184 .loop    aif    (&i gt &$dccexti).around
                                             185          aif    ('&$dccext(&i)' eq '&m').getout
                                             186 &i       seta    &i+1
                                             187          ago     .loop
                                             188 .around  anop
                                             189 &$dccexti seta &$dccexti+1
                                             190          extrn  &m
                                             191 .getout  anop
                                             192          mend
00000180                                     193+$eye0005    ds    0d                                                    02-DCCCA
00000180 C4C3C3                              194+         dc cl3'DCC'                                                    02-DCCCA
00000183 01                                  195+         dc xl1'01' format one                                          02-DCCCA
00000184 00000000                            196+         dc a(0)                                                        02-DCCCA
00000188 00000000000001F2                    197+         dc ad(@PER_754)                                                02-DCCCA
00000190 00000000000000B0                    198+         dc ad(176)                                                     02-DCCCA
00000198 0000000000000000                    199+         dc ad(0)                                                       02-DCCCA
000001A0 0000000000001000                    200+         dc ad(4096)                                                    02-DCCCA
000001A8 20                                  201+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000001A9 03                                  202+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000001AA 03                                  203+         dc al1(3)                                                      02-DCCCA
000001AB 08                                  204+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
                                                                                                                           Page    8 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000001AC 00                                  205+         dc bl.8'00000000'                                              02-DCCCA
000001AD 000000                              206+         dc al3(0)                                                      02-DCCCA
000001B0 0000000000000170                    207+         dc ad(@LNAME754)                                               02-DCCCA
000001B8                                     208+         ds 0d                                                          02-DCCCA
000001B8 0000000000000180                    209+         dc ad($eye0005)                                                02-DCCCA
000001C0 0000000000000000                    210+         dc ad(0)                                                       02-DCCCA
000001C8                                     211+         ds    0d                                                       01-DCCPR
000001C8                                     212+rd_free  ds    0d                                                       01-DCCPR
000001C8                                     213+@REGION_754_1 ds 0h                                                     01-DCCPR
000001C8 EBEC D008 0024          00000008    214+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000001CE E3E0 D088 0004          00000088    215+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000001D4 E3C0 D090 0004          00000090    216+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000001DA B904 002E                           217+         lgr   2,14                copy addr of our savearea            01-DCCPR
000001DE E3B0 C018 0004          00000018    218+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000001E4 A7EB 00B0               000000B0    219+         aghi  14,176              increase by frame size               01-DCCPR
000001E8 E3E0 C020 0021          00000020    220+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000001EE 4720 B020               00000020    221+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000001F2                                     222+@PER_754 ds    0h                                                       01-DCCPR
000001F2 EBDE 2080 0024          00000080    223+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000001F8 E3C0 2090 0024          00000090    224+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000001FE B904 00D2                           225+         lgr   13,2                set real frame pointer               01-DCCPR
00000202 B904 00CF                           226+         lgr   12,15               set base reg                         01-DCCPR
                        000001C8             227+         using @REGION_754_1,12                                         01-DCCPR
                                             228 * ******* End of Prologue
                                             229 * *
                                             230 * ***      free(ptr);
00000206 E3F0 1000 0004          00000000    231          LG    15,0(0,1)   ; ptr
0000020C E3F0 D0A8 0024          000000A8    232          STG   15,168(0,13)
00000212 4110 D0A8               000000A8    233          LA    1,168(0,13)
00000216 E3F0 C0A8 0004          00000270    234          LG    15,@lit_754_5 ; free
0000021C                                     235 @@gen_label5 DS    0H
0000021C 05EF                                236          BALR  14,15
0000021E                                     237 @@gen_label6 DS    0H
                                             238 * ***   }
0000021E                                     239 @ret_lab_754 DS 0H
                                             240 * * **** Start of Epilogue
                                             241          DCCEPIL
0000021E                                     242+         ds 0h                                                          01-DCCEP
                                             243+* Epilog
0000021E D707 D088 D088 00000088 00000088    244+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000224 E3D0 D080 0004          00000080    245+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000022A E3C0 D090 0004          00000090    246+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000230 E3B0 C018 0004          00000018    247+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000236 E3C0 B010 0021          00000010    248+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000023C E3E0 D008 0004          00000008    249+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000242 EB1C D020 0004          00000020    250+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000248 078E                                251+         bcr 8,14                if same dsab, just return              01-DCCEP
0000024A E3F0 D010 0024          00000010    252+         stg 15,16(0,13)         save return code                       01-DCCEP
00000250 E300 D018 0024          00000018    253+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000256 E3F0 D090 0004          00000090    254+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000025C E3F0 F018 0004          00000018    255+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000262 47F0 F040               00000040    256+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                                                                                                           Page    9 
  Active Usings: @REGION_754_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             257+* End of Epilog
                                             258 * * **** End of Epilogue
00000268                                     259          DS    0D
00000268 000000B0                            260 @FRAMESIZE_754 DC F'176'
0000026C 00000000
00000270 0000000000000000                    261 @lit_754_5 DC  AD(free)
                                             262          DROP  12
                                             263 *
                                             264 *   DSECT for automatic variables in "rd_free"
                                             265 *      (FUNCTION #754)
                                             266 *
00000000                00000000 000000A8    267 @AUTO#rd_free DSECT
00000000                                     268          DS    XL168
                                             269 *
00000278                00000000 000056F0    270 @CODE    CSECT
                                             271 *
                                             272 *
                                             273 *
                                             274 * ....... start of rd_dbl_eq0
00000278                                     275 @LNAME963 DS   0H
00000278 0000000A                            276          DC    X'0000000A'
0000027C 99846D8482936D85                    277          DC    C'rd_dbl_eq0'
00000286 00                                  278          DC    X'00'
                                             279 rd_dbl_eq0 DCCPRLG CINDEX=963,BASER=12,FRAME=168,SAVEAREA=NO,ENTRY=NO,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME963
                                             280          macro
                                             281          dccextrn &m
                                             282          gblc    &$dccext(1000)
                                             283          gbla    &$dccexti
                                             284          lcla    &i
                                             285 &$dccext(&$dccexti+1) setc    '&m'
                                             286 &i       seta    1
                                             287 .loop    aif    (&i gt &$dccexti).around
                                             288          aif    ('&$dccext(&i)' eq '&m').getout
                                             289 &i       seta    &i+1
                                             290          ago     .loop
                                             291 .around  anop
                                             292 &$dccexti seta &$dccexti+1
                                             293          extrn  &m
                                             294 .getout  anop
                                             295          mend
00000288                                     296+$eye0008    ds    0d                                                    02-DCCCA
00000288 C4C3C3                              297+         dc cl3'DCC'                                                    02-DCCCA
0000028B 01                                  298+         dc xl1'01' format one                                          02-DCCCA
0000028C 00000000                            299+         dc a(0)                                                        02-DCCCA
00000290 0000000000000000                    300+         dc ad(0)                                                       02-DCCCA
00000298 00000000000000A8                    301+         dc ad(168)                                                     02-DCCCA
000002A0 0000000000000000                    302+         dc ad(0)                                                       02-DCCCA
000002A8 0000000000001000                    303+         dc ad(4096)                                                    02-DCCCA
000002B0 20                                  304+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000002B1 03                                  305+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000002B2 03                                  306+         dc al1(3)                                                      02-DCCCA
                                                                                                                           Page   10 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000002B3 08                                  307+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000002B4 00                                  308+         dc bl.8'00000000'                                              02-DCCCA
000002B5 000000                              309+         dc al3(0)                                                      02-DCCCA
000002B8 0000000000000278                    310+         dc ad(@LNAME963)                                               02-DCCCA
000002C0                                     311+         ds 0d                                                          02-DCCCA
000002C0 0000000000000288                    312+         dc ad($eye0008)                                                02-DCCCA
000002C8 0000000000000000                    313+         dc ad(0)                                                       02-DCCCA
000002D0                                     314+         ds    0d                                                       01-DCCPR
000002D0                                     315+rd_dbl_eq0 ds  0d                                                       01-DCCPR
000002D0                                     316+@REGION_963_1 ds 0h                                                     01-DCCPR
000002D0 EBEC D008 0024          00000008    317+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000002D6 B904 00CF                           318+         lgr   12,15               set base reg                         01-DCCPR
                        000002D0             319+         using @REGION_963_1,12                                         01-DCCPR
                                             320 * ******* End of Prologue
                                             321 * *
                                             322 * ***     return __fabs(a - b) < prec;
000002DA 68F0 1000               00000000    323          LD    15,0(0,1)   ; a
000002DE 6BF0 1008               00000008    324          SD    15,8(0,1)
000002E2 20FF                                325          LPDR  15,15
000002E4 69F0 1010               00000010    326          CD    15,16(0,1)
000002E8 47B0 C024               000002F4    327          BNL   @@gen_label7
000002EC A7F8 0001               00000001    328          LHI   15,1
000002F0 47F0 C028               000002F8    329          B     @@gen_label8
000002F4                                     330 @@gen_label7 DS 0H
000002F4 A7F8 0000               00000000    331          LHI   15,0
000002F8                                     332 @@gen_label8 DS 0H
000002F8 B914 00FF                           333          LGFR  15,15
                                             334 * ***   }
                                             335 * * **** Start of Epilogue
                                             336          DCCEPIL
000002FC                                     337+         ds 0h                                                          01-DCCEP
                                             338+* Epilog
                                             339+* Epilog
000002FC E3E0 D008 0004          00000008    340+         lg    14,8(,13) restore the reg                                01-DCCEP
00000302 EB1C D020 0004          00000020    341+         lmg   1,12,32(13)                                              01-DCCEP
00000308 07FE                                342+         br   14                                                        01-DCCEP
                                             343+* End of Epilog
                                             344 * * **** End of Epilogue
                                             345          DROP  12
                                             346 *
                                             347 *   DSECT for automatic variables in "rd_dbl_eq0"
                                             348 *      (FUNCTION #963)
                                             349 *
00000000                00000000 000000A8    350 @AUTO#rd_dbl_eq0 DSECT
00000000                                     351          DS    XL168
                                             352 *
0000030A                00000000 000056F0    353 @CODE    CSECT
                                             354 *
                                             355 *
                                             356 *
                                             357 * ....... start of rd_hdr_histogram_destroy
                                             358 rd_hdr_histogram_destroy ALIAS X'99846D8884996D8889A2A396879981946D8485*
                                                                                                                           Page   11 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                                                A2A39996A8'
0000030A                                     359 @LNAME952 DS   0H
0000030A 00000018                            360          DC    X'00000018'
0000030E 99846D8884996D88                    361          DC    C'rd_hdr_histogram_destroy'
00000326 00                                  362          DC    X'00'
                                             363 rd_hdr_histogram_destroy DCCPRLG CINDEX=952,BASER=12,FRAME=176,ENTRY=YE*
                                                                S,ARCH=ZARCH,LNAMEADDR=@LNAME952
                                             364          macro
                                             365          dccextrn &m
                                             366          gblc    &$dccext(1000)
                                             367          gbla    &$dccexti
                                             368          lcla    &i
                                             369 &$dccext(&$dccexti+1) setc    '&m'
                                             370 &i       seta    1
                                             371 .loop    aif    (&i gt &$dccexti).around
                                             372          aif    ('&$dccext(&i)' eq '&m').getout
                                             373 &i       seta    &i+1
                                             374          ago     .loop
                                             375 .around  anop
                                             376 &$dccexti seta &$dccexti+1
                                             377          extrn  &m
                                             378 .getout  anop
                                             379          mend
00000328                                     380+$eye0011    ds    0d                                                    02-DCCCA
00000328 C4C3C3                              381+         dc cl3'DCC'                                                    02-DCCCA
0000032B 01                                  382+         dc xl1'01' format one                                          02-DCCCA
0000032C 00000000                            383+         dc a(0)                                                        02-DCCCA
00000330 000000000000039A                    384+         dc ad(@PER_952)                                                02-DCCCA
00000338 00000000000000B0                    385+         dc ad(176)                                                     02-DCCCA
00000340 0000000000000000                    386+         dc ad(0)                                                       02-DCCCA
00000348 0000000000001000                    387+         dc ad(4096)                                                    02-DCCCA
00000350 20                                  388+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000351 03                                  389+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000352 03                                  390+         dc al1(3)                                                      02-DCCCA
00000353 08                                  391+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000354 00                                  392+         dc bl.8'00000000'                                              02-DCCCA
00000355 000000                              393+         dc al3(0)                                                      02-DCCCA
00000358 000000000000030A                    394+         dc ad(@LNAME952)                                               02-DCCCA
00000360                                     395+         ds 0d                                                          02-DCCCA
00000360 0000000000000328                    396+         dc ad($eye0011)                                                02-DCCCA
00000368 0000000000000000                    397+         dc ad(0)                                                       02-DCCCA
00000370                                     398+         ds    0d                                                       01-DCCPR
                                             399+         entry rd_hdr_histogram_destroy                                 01-DCCPR
00000370                                     400+rd_hdr_histogram_destroy ds 0d                                          01-DCCPR
00000370                                     401+@REGION_952_1 ds 0h                                                     01-DCCPR
00000370 EBEC D008 0024          00000008    402+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000376 E3E0 D088 0004          00000088    403+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000037C E3C0 D090 0004          00000090    404+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000382 B904 002E                           405+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000386 E3B0 C018 0004          00000018    406+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000038C A7EB 00B0               000000B0    407+         aghi  14,176              increase by frame size               01-DCCPR
00000390 E3E0 C020 0021          00000020    408+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
                                                                                                                           Page   12 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000396 4720 B020               00000020    409+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000039A                                     410+@PER_952 ds    0h                                                       01-DCCPR
0000039A EBDE 2080 0024          00000080    411+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000003A0 E3C0 2090 0024          00000090    412+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000003A6 B904 00D2                           413+         lgr   13,2                set real frame pointer               01-DCCPR
000003AA B904 00CF                           414+         lgr   12,15               set base reg                         01-DCCPR
                        00000370             415+         using @REGION_952_1,12                                         01-DCCPR
                                             416 * ******* End of Prologue
                                             417 * *
                                             418 * ***           rd_free(hdr);
000003AE E3F0 1000 0004          00000000    419          LG    15,0(0,1)   ; hdr
000003B4 E3F0 D0A8 0024          000000A8    420          STG   15,168(0,13)
000003BA 4110 D0A8               000000A8    421          LA    1,168(0,13)
000003BE E3F0 C0A8 0004          00000418    422          LG    15,@lit_952_7 ; rd_free
000003C4                                     423 @@gen_label9 DS    0H
000003C4 05EF                                424          BALR  14,15
000003C6                                     425 @@gen_label10 DS    0H
                                             426 * ***   }
000003C6                                     427 @ret_lab_952 DS 0H
                                             428 * * **** Start of Epilogue
                                             429          DCCEPIL
000003C6                                     430+         ds 0h                                                          01-DCCEP
                                             431+* Epilog
000003C6 D707 D088 D088 00000088 00000088    432+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000003CC E3D0 D080 0004          00000080    433+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000003D2 E3C0 D090 0004          00000090    434+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000003D8 E3B0 C018 0004          00000018    435+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000003DE E3C0 B010 0021          00000010    436+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000003E4 E3E0 D008 0004          00000008    437+         lg  14,8(0,13)          load up return address                 01-DCCEP
000003EA EB1C D020 0004          00000020    438+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000003F0 078E                                439+         bcr 8,14                if same dsab, just return              01-DCCEP
000003F2 E3F0 D010 0024          00000010    440+         stg 15,16(0,13)         save return code                       01-DCCEP
000003F8 E300 D018 0024          00000018    441+         stg 0,24(0,13)          save more return code                  01-DCCEP
000003FE E3F0 D090 0004          00000090    442+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000404 E3F0 F018 0004          00000018    443+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000040A 47F0 F040               00000040    444+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             445+* End of Epilog
                                             446 * * **** End of Epilogue
00000410                                     447          DS    0D
00000410 000000B0                            448 @FRAMESIZE_952 DC F'176'
00000414 00000000
00000418 00000000000001C8                    449 @lit_952_7 DC  AD(rd_free)
                                             450          DROP  12
                                             451 *
                                             452 *   DSECT for automatic variables in "rd_hdr_histogram_destroy"
                                             453 *      (FUNCTION #952)
                                             454 *
00000000                00000000 000000A8    455 @AUTO#rd_hdr_histogram_destroy DSECT
00000000                                     456          DS    XL168
                                             457 *
00000420                00000000 000056F0    458 @CODE    CSECT
                                             459 *
                                                                                                                           Page   13 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             460 *
                                             461 *
                                             462 * ....... start of rd_hdr_histogram_new
                                             463 rd_hdr_histogram_new ALIAS X'99846D8884996D8889A2A396879981946D9585A6'
00000420                                     464 @LNAME953 DS   0H
00000420 00000014                            465          DC    X'00000014'
00000424 99846D8884996D88                    466          DC    C'rd_hdr_histogram_new'
00000438 00                                  467          DC    X'00'
                                             468 rd_hdr_histogram_new DCCPRLG CINDEX=953,BASER=12,FRAME=208,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME953
                                             469          macro
                                             470          dccextrn &m
                                             471          gblc    &$dccext(1000)
                                             472          gbla    &$dccexti
                                             473          lcla    &i
                                             474 &$dccext(&$dccexti+1) setc    '&m'
                                             475 &i       seta    1
                                             476 .loop    aif    (&i gt &$dccexti).around
                                             477          aif    ('&$dccext(&i)' eq '&m').getout
                                             478 &i       seta    &i+1
                                             479          ago     .loop
                                             480 .around  anop
                                             481 &$dccexti seta &$dccexti+1
                                             482          extrn  &m
                                             483 .getout  anop
                                             484          mend
00000440                                     485+$eye0014    ds    0d                                                    02-DCCCA
00000440 C4C3C3                              486+         dc cl3'DCC'                                                    02-DCCCA
00000443 01                                  487+         dc xl1'01' format one                                          02-DCCCA
00000444 00000000                            488+         dc a(0)                                                        02-DCCCA
00000448 00000000000004B2                    489+         dc ad(@PER_953)                                                02-DCCCA
00000450 00000000000000D0                    490+         dc ad(208)                                                     02-DCCCA
00000458 0000000000000000                    491+         dc ad(0)                                                       02-DCCCA
00000460 0000000000001000                    492+         dc ad(4096)                                                    02-DCCCA
00000468 20                                  493+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000469 03                                  494+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000046A 03                                  495+         dc al1(3)                                                      02-DCCCA
0000046B 08                                  496+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000046C 00                                  497+         dc bl.8'00000000'                                              02-DCCCA
0000046D 000000                              498+         dc al3(0)                                                      02-DCCCA
00000470 0000000000000420                    499+         dc ad(@LNAME953)                                               02-DCCCA
00000478                                     500+         ds 0d                                                          02-DCCCA
00000478 0000000000000440                    501+         dc ad($eye0014)                                                02-DCCCA
00000480 0000000000000000                    502+         dc ad(0)                                                       02-DCCCA
00000488                                     503+         ds    0d                                                       01-DCCPR
                                             504+         entry rd_hdr_histogram_new                                     01-DCCPR
00000488                                     505+rd_hdr_histogram_new ds 0d                                              01-DCCPR
00000488                                     506+@REGION_953_1 ds 0h                                                     01-DCCPR
00000488 EBEC D008 0024          00000008    507+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000048E E3E0 D088 0004          00000088    508+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000494 E3C0 D090 0004          00000090    509+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000049A B904 002E                           510+         lgr   2,14                copy addr of our savearea            01-DCCPR
                                                                                                                           Page   14 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000049E E3B0 C018 0004          00000018    511+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000004A4 A7EB 00D0               000000D0    512+         aghi  14,208              increase by frame size               01-DCCPR
000004A8 E3E0 C020 0021          00000020    513+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000004AE 4720 B020               00000020    514+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000004B2                                     515+@PER_953 ds    0h                                                       01-DCCPR
000004B2 EBDE 2080 0024          00000080    516+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000004B8 E3C0 2090 0024          00000090    517+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000004BE B904 00D2                           518+         lgr   13,2                set real frame pointer               01-DCCPR
000004C2 B904 00CF                           519+         lgr   12,15               set base reg                         01-DCCPR
                        00000488             520+         using @REGION_953_1,12                                         01-DCCPR
                                             521 * ******* End of Prologue
                                             522 * *
000004C6 EB34 1000 0004          00000000    523          LMG   3,4,0(1)    ; minValue
000004CC 5850 1014               00000014    524          L     5,20(0,1)   ; significantFigures
                                             525 * ***           rd_hdr_histogram_t *hdr;
                                             526 * ***           int64_t largestValueWithSingleUnitResolution;
                                             527 * ***           int32_t subBucketCountMagnitude;
                                             528 * ***           int32_t subBucketHalfCountMagnitude;
                                             529 * ***           int32_t unitMagnitude;
                                             530 * ***           int32_t subBucketCount;
                                             531 * ***           int32_t subBucketHalfCount;
                                             532 * ***           int64_t subBucketMask;
                                             533 * ***           int64_t smallestUntrackableValue;
                                             534 * ***           int32_t bucketsNeeded = 1;
000004D0 A728 0001               00000001    535          LHI   2,1         ; 1
                                             536 * ***           int32_t bucketCount;
                                             537 * ***           int32_t countsLen;
                                             538 * ***
                                             539 * ***           if (significantFigures < 1 || significantFigures > 5)
000004D4 A75E 0001               00000001    540          CHI   5,1
000004D8 4740 C05C               000004E4    541          BL    @L45
000004DC A75E 0005               00000005    542          CHI   5,5
000004E0 47D0 C0B0               00000538    543          BNH   @L44
000004E4                                     544 @L45     DS    0H
                                             545 * ***                   return ((void *)0);
000004E4 A7F9 0000               00000000    546          LGHI  15,0        ; 0
000004E8 47F0 C266               000006EE    547          B     @ret_lab_953
000004F0                                     548          DS    0D
000004F0 000000D0                            549 @FRAMESIZE_953 DC F'208'
000004F4 00000000
000004F8 0000000000000000                    550 @lit_953_12 DC AD(pow)
00000500                                     551          DS 0D
00000500 41A0000000000000                    552 @lit_953_11 DC XL8'41A0000000000000'
00000508 0000000000000000                    553 @lit_953_14 DC AD(log2)
00000510                                     554          DS 0D
00000510 4120000000000000                    555 @lit_953_13 DC XL8'4120000000000000'
00000518 0000000000000000                    556 @lit_953_15 DC AD(ceil)
00000520 0000000000000000                    557 @lit_953_18 DC AD(floor)
00000528                                     558          DS 0D
00000528 4110000000000000                    559 @lit_953_22 DC XL8'4110000000000000'
00000530 0000000000000058                    560 @lit_953_24 DC AD(rd_calloc)
00000538                                     561 @L44     DS    0H
                                                                                                                           Page   15 
  Active Usings: @REGION_953_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             562 * ***
                                             563 * ***           largestValueWithSingleUnitResolution =
                                             564 * ***                   (int64_t)(2.0 * pow(10.0, (double)significantF\
                                             565 * igures));
00000538 68F0 C078               00000500    566          LD    15,@lit_953_11
0000053C 60F0 D0C0               000000C0    567          STD   15,192(0,13)
00000540 B3B5 00F5                           568          CDFR  15,5
00000544 60F0 D0C8               000000C8    569          STD   15,200(0,13)
00000548 4110 D0C0               000000C0    570          LA    1,192(0,13)
0000054C E380 C070 0004          000004F8    571          LG    8,@lit_953_12 ; pow
00000552 B904 00F8                           572          LGR   15,8
00000556                                     573 @@gen_label13 DS    0H
00000556 05EF                                574          BALR  14,15
00000558                                     575 @@gen_label14 DS    0H
00000558 6C00 C088               00000510    576          MD    0,@lit_953_13
0000055C B3C9 50F0                           577          CGDR  15,5,0
                                             578 * ***
                                             579 * ***           subBucketCountMagnitude =
                                             580 * ***                   (int32_t)ceil(
                                             581 * ***                           log2((double)largestValueWithSingleUni\
                                             582 * tResolution));
00000560 B3C5 00FF                           583          CDGR  15,15
00000564 60F0 D0C0               000000C0    584          STD   15,192(0,13)
00000568 4110 D0C0               000000C0    585          LA    1,192(0,13)
0000056C E370 C080 0004          00000508    586          LG    7,@lit_953_14 ; log2
00000572 B904 00F7                           587          LGR   15,7
00000576                                     588 @@gen_label15 DS    0H
00000576 05EF                                589          BALR  14,15
00000578                                     590 @@gen_label16 DS    0H
00000578 6000 D0C0               000000C0    591          STD   0,192(0,13)
0000057C 4110 D0C0               000000C0    592          LA    1,192(0,13)
00000580 E3F0 C090 0004          00000518    593          LG    15,@lit_953_15 ; ceil
00000586                                     594 @@gen_label17 DS    0H
00000586 05EF                                595          BALR  14,15
00000588                                     596 @@gen_label18 DS    0H
00000588 B3B9 50F0                           597          CFDR  15,5,0
                                             598 * ***
                                             599 * ***           subBucketHalfCountMagnitude = ((subBucketCountMagnitud\
                                             600 * e) > (1) ? (subBucketCountMagnitude) : (1)) - 1;
0000058C A7FE 0001               00000001    601          CHI   15,1
00000590 47D0 C110               00000598    602          BNH   @L46
00000594 47F0 C112               0000059A    603          B     @L47
00000598                                     604 @L46     DS    0H
00000598 18F2                                605          LR    15,2
0000059A                                     606 @L47     DS    0H
0000059A 186F                                607          LR    6,15
0000059C A76A FFFF               0000FFFF    608          AHI   6,-1
                                             609 * ***
                                             610 * ***           unitMagnitude = (int32_t)((floor(log2((double)minValue\
                                             611 * ))) > (0) ? (floor(log2((double)minValue))) : (0));
000005A0 B3C5 00F3                           612          CDGR  15,3
000005A4 60F0 D0C0               000000C0    613          STD   15,192(0,13)
                                                                                                                           Page   16 
  Active Usings: @REGION_953_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000005A8 4110 D0C0               000000C0    614          LA    1,192(0,13)
000005AC B904 00F7                           615          LGR   15,7
000005B0                                     616 @@gen_label20 DS    0H
000005B0 05EF                                617          BALR  14,15
000005B2                                     618 @@gen_label21 DS    0H
000005B2 6000 D0C0               000000C0    619          STD   0,192(0,13)
000005B6 4110 D0C0               000000C0    620          LA    1,192(0,13)
000005BA E390 C098 0004          00000520    621          LG    9,@lit_953_18 ; floor
000005C0 B904 00F9                           622          LGR   15,9
000005C4                                     623 @@gen_label22 DS    0H
000005C4 05EF                                624          BALR  14,15
000005C6                                     625 @@gen_label23 DS    0H
000005C6 2200                                626          LTDR  0,0
000005C8 47D0 C168               000005F0    627          BNH   @L48
000005CC B3C5 00F3                           628          CDGR  15,3
000005D0 60F0 D0C0               000000C0    629          STD   15,192(0,13)
000005D4 4110 D0C0               000000C0    630          LA    1,192(0,13)
000005D8 B904 00F7                           631          LGR   15,7
000005DC                                     632 @@gen_label25 DS    0H
000005DC 05EF                                633          BALR  14,15
000005DE                                     634 @@gen_label26 DS    0H
000005DE 6000 D0C0               000000C0    635          STD   0,192(0,13)
000005E2 4110 D0C0               000000C0    636          LA    1,192(0,13)
000005E6 B904 00F9                           637          LGR   15,9
000005EA                                     638 @@gen_label27 DS    0H
000005EA 05EF                                639          BALR  14,15
000005EC                                     640 @@gen_label28 DS    0H
000005EC 47F0 C16C               000005F4    641          B     @L49
000005F0                                     642 @L48     DS    0H
000005F0 B375 0000                           643          LZDR  0
000005F4                                     644 @L49     DS    0H
000005F4 B3B9 5070                           645          CFDR  7,5,0
                                             646 * ***
                                             647 * ***           subBucketCount = (int32_t)pow(2,
                                             648 * ***                                         (double)subBucketHalfCou\
                                             649 * ntMagnitude+1.0);
000005F8 68F0 C088               00000510    650          LD    15,@lit_953_13
000005FC 60F0 D0C0               000000C0    651          STD   15,192(0,13)
00000600 B3B5 00F6                           652          CDFR  15,6
00000604 6AF0 C0A0               00000528    653          AD    15,@lit_953_22
00000608 60F0 D0C8               000000C8    654          STD   15,200(0,13)
0000060C 4110 D0C0               000000C0    655          LA    1,192(0,13)
00000610 B904 00F8                           656          LGR   15,8
00000614                                     657 @@gen_label29 DS    0H
00000614 05EF                                658          BALR  14,15
00000616                                     659 @@gen_label30 DS    0H
00000616 B3B9 5080                           660          CFDR  8,5,0
                                             661 * ***
                                             662 * ***           subBucketHalfCount = subBucketCount / 2;
0000061A 1898                                663          LR    9,8         ; /0x2
0000061C 8890 001F               0000001F    664          SRL   9,31(0)     ;   .
00000620 1A98                                665          AR    9,8         ;   .
                                                                                                                           Page   17 
  Active Usings: @REGION_953_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000622 8A90 0001               00000001    666          SRA   9,1(0)      ;   .
                                             667 * ***
                                             668 * ***           subBucketMask = (int64_t)(subBucketCount-1) << unitMag\
                                             669 * nitude;
00000626 18F8                                670          LR    15,8
00000628 A7FA FFFF               0000FFFF    671          AHI   15,-1
0000062C B914 00FF                           672          LGFR  15,15
00000630 EBAF 7000 000D          00000000    673          SLLG  10,15,0(7)
                                             674 * ***
                                             675 * ***
                                             676 * ***
                                             677 * ***           smallestUntrackableValue = (int64_t)subBucketCount << \
                                             678 * unitMagnitude;
00000636 B914 00F8                           679          LGFR  15,8
0000063A EBFF 7000 000D          00000000    680          SLLG  15,15,0(7)
                                             681 * ***           while (smallestUntrackableValue < maxValue) {
00000640 47F0 C1C6               0000064E    682          B     @L53
00000644                                     683 @L52     DS    0H
                                             684 * ***                   smallestUntrackableValue <<= 1;
00000644 EBFF 0001 000D          00000001    685          SLLG  15,15,1(0)
                                             686 * ***                   bucketsNeeded++;
0000064A A72A 0001               00000001    687          AHI   2,1
                                             688 * ***           }
0000064E                                     689 @L53     DS    0H
0000064E B920 00F4                           690          CGR   15,4
00000652 4740 C1BC               00000644    691          BL    @L52
                                             692 * ***
                                             693 * ***           bucketCount = bucketsNeeded;
                                             694 * ***           countsLen = (bucketCount + 1) * (subBucketCount / 2);
00000656 18B2                                695          LR    11,2
00000658 A7BA 0001               00000001    696          AHI   11,1
0000065C 18F8                                697          LR    15,8        ; /0x2
0000065E 88F0 001F               0000001F    698          SRL   15,31(0)    ;   .
00000662 1AF8                                699          AR    15,8        ;   .
00000664 8AF0 0001               00000001    700          SRA   15,1(0)     ;   .
00000668 B252 00BF                           701          MSR   11,15
                                             702 * ***           hdr = rd_calloc(1, sizeof(*hdr) + (sizeof(*hdr->counts\
                                             703 * ) * countsLen));
0000066C E548 D0C0 0001          000000C0    704          MVGHI 192(13),1
00000672 B914 00FB                           705          LGFR  15,11
00000676 EBFF 0003 000D          00000003    706          SLLG  15,15,3(0)  ; *0x8
0000067C A7FB 0070               00000070    707          AGHI  15,112
00000680 E3F0 D0C8 0024          000000C8    708          STG   15,200(0,13)
00000686 4110 D0C0               000000C0    709          LA    1,192(0,13)
0000068A E3F0 C0A8 0004          00000530    710          LG    15,@lit_953_24 ; rd_calloc
00000690                                     711 @@gen_label32 DS    0H
00000690 05EF                                712          BALR  14,15
00000692                                     713 @@gen_label33 DS    0H
                                             714 * ***           hdr->counts = (int64_t *)(hdr+1);
00000692 4110 F070               00000070    715          LA    1,112(0,15)
00000696 E310 F048 0024          00000048    716          STG   1,72(0,15)  ; offset of counts in rd_hdr_histogram_s
                                             717 * ***           hdr->allocatedSize = sizeof(*hdr) + (sizeof(*hdr->coun\
                                                                                                                           Page   18 
  Active Usings: @REGION_953_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             718 * ts) * countsLen);
0000069C B914 001B                           719          LGFR  1,11
000006A0 EB11 0003 000D          00000003    720          SLLG  1,1,3(0)    ; *0x8
000006A6 A71B 0070               00000070    721          AGHI  1,112
000006AA 5010 F068               00000068    722          ST    1,104(0,15) ; offset of allocatedSize in rd_hdr_histogra*
                                                                m_s
                                             723 * ***
                                             724 * ***           hdr->lowestTrackableValue =        minValue;
000006AE EB34 F000 0024          00000000    725          STMG  3,4,0(15)   ; hdr
                                             726 * ***           hdr->highestTrackableValue =       maxValue;
                                             727 * ***           hdr->unitMagnitude =               unitMagnitude;
000006B4 B914 0017                           728          LGFR  1,7
000006B8 E310 F010 0024          00000010    729          STG   1,16(0,15)  ; offset of unitMagnitude in rd_hdr_histogra*
                                                                m_s
                                             730 * ***           hdr->significantFigures =          significantFigures;
000006BE B914 0015                           731          LGFR  1,5
000006C2 E310 F018 0024          00000018    732          STG   1,24(0,15)  ; offset of significantFigures in rd_hdr_his*
                                                                togram_s
                                             733 * ***           hdr->subBucketHalfCountMagnitude = subBucketHalfCountM\
                                             734 * agnitude;
000006C8 5060 F020               00000020    735          ST    6,32(0,15)  ; offset of subBucketHalfCountMagnitude in r*
                                                                d_hdr_histogram_s
                                             736 * ***           hdr->subBucketHalfCount =          subBucketHalfCount;
000006CC 5090 F024               00000024    737          ST    9,36(0,15)  ; offset of subBucketHalfCount in rd_hdr_his*
                                                                togram_s
                                             738 * ***           hdr->subBucketMask =               subBucketMask;
000006D0 E3A0 F028 0024          00000028    739          STG   10,40(0,15) ; offset of subBucketMask in rd_hdr_histogra*
                                                                m_s
                                             740 * ***           hdr->subBucketCount =              subBucketCount;
000006D6 5080 F030               00000030    741          ST    8,48(0,15)  ; offset of subBucketCount in rd_hdr_histogr*
                                                                am_s
                                             742 * ***           hdr->bucketCount =                 bucketCount;
000006DA 5020 F034               00000034    743          ST    2,52(0,15)  ; offset of bucketCount in rd_hdr_histogram_*
                                                                s
                                             744 * ***           hdr->countsLen =                   countsLen;
000006DE 50B0 F038               00000038    745          ST    11,56(0,15) ; offset of countsLen in rd_hdr_histogram_s
                                             746 * ***           hdr->totalCount =                  0;
000006E2 E548 F040 0000          00000040    747          MVGHI 64(15),0    ; offset of totalCount in rd_hdr_histogram_s
                                             748 * ***           hdr->lowestOutOfRange =            minValue;
000006E8 EB34 F058 0024          00000058    749          STMG  3,4,88(15)  ; offset of lowestOutOfRange in rd_hdr_histo*
                                                                gram_s
                                             750 * ***           hdr->highestOutOfRange =           maxValue;
                                             751 * ***
                                             752 * ***           return hdr;
                                             753 * ***   }
000006EE                                     754 @ret_lab_953 DS 0H
                                             755 * * **** Start of Epilogue
                                             756          DCCEPIL
000006EE                                     757+         ds 0h                                                          01-DCCEP
                                             758+* Epilog
000006EE D707 D088 D088 00000088 00000088    759+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000006F4 E3D0 D080 0004          00000080    760+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
                                                                                                                           Page   19 
  Active Usings: @REGION_953_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000006FA E3C0 D090 0004          00000090    761+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000700 E3B0 C018 0004          00000018    762+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000706 E3C0 B010 0021          00000010    763+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000070C E3E0 D008 0004          00000008    764+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000712 EB1C D020 0004          00000020    765+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000718 078E                                766+         bcr 8,14                if same dsab, just return              01-DCCEP
0000071A E3F0 D010 0024          00000010    767+         stg 15,16(0,13)         save return code                       01-DCCEP
00000720 E300 D018 0024          00000018    768+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000726 E3F0 D090 0004          00000090    769+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000072C E3F0 F018 0004          00000018    770+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000732 47F0 F040               00000040    771+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                             772+* End of Epilog
                                             773 * * **** End of Epilogue
                                             774          DROP  12
                                             775 *
                                             776 *   DSECT for automatic variables in "rd_hdr_histogram_new"
                                             777 *      (FUNCTION #953)
                                             778 *
00000000                00000000 000000C0    779 @AUTO#rd_hdr_histogram_new DSECT
00000000                                     780          DS    XL184
000000B8                                     781 rd_hdr_histogram_new#counts$Len#0 DS 1F ; countsLen
000000BC                000000BC 000000B8    782          ORG   @AUTO#rd_hdr_histogram_new+184
000000B8                                     783 rd_hdr_histogram_new#bucket$Count#0 DS 1F ; bucketCount
000000BC                000000BC 000000B8    784          ORG   @AUTO#rd_hdr_histogram_new+184
000000B8                                     785 rd_hdr_histogram_new#buckets$Needed#0 DS 1F ; bucketsNeeded
000000BC                000000BC 000000B8    786          ORG   @AUTO#rd_hdr_histogram_new+184
000000B8                                     787 rd_hdr_histogram_new#smallest$Untrackable$Value#0 DS 8XL1 ; smallestUnt*
                                                                rackableValue
000000C0                000000C0 000000B8    788          ORG   @AUTO#rd_hdr_histogram_new+184
000000B8                                     789 rd_hdr_histogram_new#sub$Bucket$Mask#0 DS 8XL1 ; subBucketMask
000000C0                000000C0 000000B8    790          ORG   @AUTO#rd_hdr_histogram_new+184
000000B8                                     791 rd_hdr_histogram_new#sub$Bucket$Half$Count#0 DS 1F ; subBucketHalfCount
000000BC                000000BC 000000B8    792          ORG   @AUTO#rd_hdr_histogram_new+184
000000B8                                     793 rd_hdr_histogram_new#sub$Bucket$Count#0 DS 1F ; subBucketCount
000000BC                000000BC 000000B8    794          ORG   @AUTO#rd_hdr_histogram_new+184
000000B8                                     795 rd_hdr_histogram_new#unit$Magnitude#0 DS 1F ; unitMagnitude
000000BC                000000BC 000000B8    796          ORG   @AUTO#rd_hdr_histogram_new+184
000000B8                                     797 rd_hdr_histogram_new#sub$Bucket$Half$Count$Magnitude#0 DS 1F ; subBucke*
                                                                tHalfCountMagnitude
000000BC                000000BC 000000B8    798          ORG   @AUTO#rd_hdr_histogram_new+184
000000B8                                     799 rd_hdr_histogram_new#sub$Bucket$Count$Magnitude#0 DS 1F ; subBucketCoun*
                                                                tMagnitude
000000BC                000000BC 000000B8    800          ORG   @AUTO#rd_hdr_histogram_new+184
000000B8                                     801 F#953#largest$Value$With$Single$Unit$Resolution#0 DS 8XL1 ; largestValu*
                                                                eWithSingleUnitResolution
                                             802 *
00000736                00000000 000056F0    803 @CODE    CSECT
                                             804 *
                                             805 *
                                             806 *
                                             807 * ....... start of rd_hdr_histogram_reset
                                             808 rd_hdr_histogram_reset ALIAS X'99846D8884996D8889A2A396879981946D9985A2*
                                                                                                                           Page   20 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                                                85A3'
00000736                                     809 @LNAME954 DS   0H
00000736 00000016                            810          DC    X'00000016'
0000073A 99846D8884996D88                    811          DC    C'rd_hdr_histogram_reset'
00000750 00                                  812          DC    X'00'
                                             813 rd_hdr_histogram_reset DCCPRLG CINDEX=954,BASER=12,FRAME=176,SAVEAREA=N*
                                                                O,ENTRY=YES,ARCH=ZARCH,LNAMEADDR=@LNAME954
                                             814          macro
                                             815          dccextrn &m
                                             816          gblc    &$dccext(1000)
                                             817          gbla    &$dccexti
                                             818          lcla    &i
                                             819 &$dccext(&$dccexti+1) setc    '&m'
                                             820 &i       seta    1
                                             821 .loop    aif    (&i gt &$dccexti).around
                                             822          aif    ('&$dccext(&i)' eq '&m').getout
                                             823 &i       seta    &i+1
                                             824          ago     .loop
                                             825 .around  anop
                                             826 &$dccexti seta &$dccexti+1
                                             827          extrn  &m
                                             828 .getout  anop
                                             829          mend
00000758                                     830+$eye0017    ds    0d                                                    02-DCCCA
00000758 C4C3C3                              831+         dc cl3'DCC'                                                    02-DCCCA
0000075B 01                                  832+         dc xl1'01' format one                                          02-DCCCA
0000075C 00000000                            833+         dc a(0)                                                        02-DCCCA
00000760 0000000000000000                    834+         dc ad(0)                                                       02-DCCCA
00000768 00000000000000B0                    835+         dc ad(176)                                                     02-DCCCA
00000770 0000000000000000                    836+         dc ad(0)                                                       02-DCCCA
00000778 0000000000001000                    837+         dc ad(4096)                                                    02-DCCCA
00000780 20                                  838+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000781 03                                  839+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000782 03                                  840+         dc al1(3)                                                      02-DCCCA
00000783 08                                  841+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000784 00                                  842+         dc bl.8'00000000'                                              02-DCCCA
00000785 000000                              843+         dc al3(0)                                                      02-DCCCA
00000788 0000000000000736                    844+         dc ad(@LNAME954)                                               02-DCCCA
00000790                                     845+         ds 0d                                                          02-DCCCA
00000790 0000000000000758                    846+         dc ad($eye0017)                                                02-DCCCA
00000798 0000000000000000                    847+         dc ad(0)                                                       02-DCCCA
000007A0                                     848+         ds    0d                                                       01-DCCPR
                                             849+         entry rd_hdr_histogram_reset                                   01-DCCPR
000007A0                                     850+rd_hdr_histogram_reset ds 0d                                            01-DCCPR
000007A0                                     851+@REGION_954_1 ds 0h                                                     01-DCCPR
000007A0 EBEC D008 0024          00000008    852+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000007A6 B904 00CF                           853+         lgr   12,15               set base reg                         01-DCCPR
                        000007A0             854+         using @REGION_954_1,12                                         01-DCCPR
                                             855 * ******* End of Prologue
                                             856 * *
000007AA E3F0 1000 0004          00000000    857          LG    15,0(0,1)   ; hdr
                                             858 * ***           int32_t i;
                                                                                                                           Page   21 
  Active Usings: @REGION_954_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             859 * ***           hdr->totalCount = 0;
000007B0 E548 F040 0000          00000040    860          MVGHI 64(15),0    ; offset of totalCount in rd_hdr_histogram_s
                                             861 * ***           for (i = 0 ; i < hdr->countsLen ; i++)
000007B6 A718 0000               00000000    862          LHI   1,0         ; 0
000007BA 47F0 C03C               000007DC    863          B     @L55
000007BE                                     864 @L54     DS    0H
                                             865 * ***                   hdr->counts[i] = 0;
000007BE B914 0021                           866          LGFR  2,1
000007C2 E330 F048 0004          00000048    867          LG    3,72(0,15)  ; offset of counts in rd_hdr_histogram_s
000007C8 EB22 0003 000D          00000003    868          SLLG  2,2,3(0)    ; *0x8
000007CE 4122 3000               00000000    869          LA    2,0(2,3)
000007D2 E548 2000 0000          00000000    870          MVGHI 0(2),0
000007D8 A71A 0001               00000001    871          AHI   1,1
000007DC                                     872 @L55     DS    0H
000007DC 5910 F038               00000038    873          C     1,56(0,15)
000007E0 4740 C01E               000007BE    874          BL    @L54
                                             875 * ***   }
000007E4                                     876 @ret_lab_954 DS 0H
                                             877 * * **** Start of Epilogue
                                             878          DCCEPIL
000007E4                                     879+         ds 0h                                                          01-DCCEP
                                             880+* Epilog
                                             881+* Epilog
000007E4 E3E0 D008 0004          00000008    882+         lg    14,8(,13) restore the reg                                01-DCCEP
000007EA EB1C D020 0004          00000020    883+         lmg   1,12,32(13)                                              01-DCCEP
000007F0 07FE                                884+         br   14                                                        01-DCCEP
                                             885+* End of Epilog
                                             886 * * **** End of Epilogue
                                             887          DROP  12
                                             888 *
                                             889 *   DSECT for automatic variables in "rd_hdr_histogram_reset"
                                             890 *      (FUNCTION #954)
                                             891 *
00000000                00000000 000000AC    892 @AUTO#rd_hdr_histogram_reset DSECT
00000000                                     893          DS    XL168
000000A8                                     894 rd_hdr_histogram_reset#i#0 DS 1F ; i
                                             895 *
000007F2                00000000 000056F0    896 @CODE    CSECT
                                             897 *
                                             898 *
                                             899 *
                                             900 * ....... start of rd_hdr_countsIndex
000007F2                                     901 @LNAME964 DS   0H
000007F2 00000012                            902          DC    X'00000012'
000007F6 99846D8884996D83                    903          DC    C'rd_hdr_countsIndex'
00000808 00                                  904          DC    X'00'
                                             905 rd_hdr_counts$Index DCCPRLG CINDEX=964,BASER=0,FRAME=176,SAVEAREA=NO,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME964
                                             906          macro
                                             907          dccextrn &m
                                             908          gblc    &$dccext(1000)
                                             909          gbla    &$dccexti
                                                                                                                           Page   22 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             910          lcla    &i
                                             911 &$dccext(&$dccexti+1) setc    '&m'
                                             912 &i       seta    1
                                             913 .loop    aif    (&i gt &$dccexti).around
                                             914          aif    ('&$dccext(&i)' eq '&m').getout
                                             915 &i       seta    &i+1
                                             916          ago     .loop
                                             917 .around  anop
                                             918 &$dccexti seta &$dccexti+1
                                             919          extrn  &m
                                             920 .getout  anop
                                             921          mend
00000810                                     922+$eye0020    ds    0d                                                    02-DCCCA
00000810 C4C3C3                              923+         dc cl3'DCC'                                                    02-DCCCA
00000813 01                                  924+         dc xl1'01' format one                                          02-DCCCA
00000814 00000000                            925+         dc a(0)                                                        02-DCCCA
00000818 0000000000000000                    926+         dc ad(0)                                                       02-DCCCA
00000820 00000000000000B0                    927+         dc ad(176)                                                     02-DCCCA
00000828 0000000000000000                    928+         dc ad(0)                                                       02-DCCCA
00000830 0000000000001000                    929+         dc ad(4096)                                                    02-DCCCA
00000838 20                                  930+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000839 03                                  931+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000083A 03                                  932+         dc al1(3)                                                      02-DCCCA
0000083B 08                                  933+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000083C 00                                  934+         dc bl.8'00000000'                                              02-DCCCA
0000083D 000000                              935+         dc al3(0)                                                      02-DCCCA
00000840 00000000000007F2                    936+         dc ad(@LNAME964)                                               02-DCCCA
00000848                                     937+         ds 0d                                                          02-DCCCA
00000848 0000000000000810                    938+         dc ad($eye0020)                                                02-DCCCA
00000850 0000000000000000                    939+         dc ad(0)                                                       02-DCCCA
00000858                                     940+         ds    0d                                                       01-DCCPR
00000858                                     941+rd_hdr_counts$Index ds 0d                                               01-DCCPR
00000858                                     942+@REGION_964_1 ds 0h                                                     01-DCCPR
00000858 EBEC D008 0024          00000008    943+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                             944 * ******* End of Prologue
                                             945 * *
                                             946 * ***           int32_t bucketBaseIdx = (bucketIdx + 1) <<
                                             947 * ***                   hdr->subBucketHalfCountMagnitude;
0000085E 58F0 100C               0000000C    948          L     15,12(0,1)  ; bucketIdx
00000862 A7FA 0001               00000001    949          AHI   15,1
00000866 E320 1000 0004          00000000    950          LG    2,0(0,1)    ; hdr
0000086C 5830 2020               00000020    951          L     3,32(0,2)   ; offset of subBucketHalfCountMagnitude in r*
                                                                d_hdr_histogram_s
00000870 89F0 3000               00000000    952          SLL   15,0(3)
                                             953 * ***           int32_t offsetInBucket = subBucketIdx - hdr->subBucket\
                                             954 * HalfCount;
00000874 5810 1014               00000014    955          L     1,20(0,1)   ; subBucketIdx
00000878 5B10 2024               00000024    956          S     1,36(0,2)
                                             957 * ***           return bucketBaseIdx + offsetInBucket;
0000087C 1AF1                                958          AR    15,1
0000087E B914 00FF                           959          LGFR  15,15
                                             960 * ***   }
                                                                                                                           Page   23 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                             961 * * **** Start of Epilogue
                                             962          DCCEPIL
00000882                                     963+         ds 0h                                                          01-DCCEP
                                             964+* Epilog
                                             965+* Epilog
00000882 E3E0 D008 0004          00000008    966+         lg    14,8(,13) restore the reg                                01-DCCEP
00000888 EB1C D020 0004          00000020    967+         lmg   1,12,32(13)                                              01-DCCEP
0000088E 07FE                                968+         br   14                                                        01-DCCEP
                                             969+* End of Epilog
                                             970 * * **** End of Epilogue
                                             971 *
                                             972 *   DSECT for automatic variables in "rd_hdr_countsIndex"
                                             973 *      (FUNCTION #964)
                                             974 *
00000000                00000000 000000AC    975 @AUTO#rd_hdr_counts$Index DSECT
00000000                                     976          DS    XL168
000000A8                                     977 rd_hdr_counts$Index#offset$In$Bucket#0 DS 1F ; offsetInBucket
000000AC                000000AC 000000A8    978          ORG   @AUTO#rd_hdr_counts$Index+168
000000A8                                     979 rd_hdr_counts$Index#bucket$Base$Idx#0 DS 1F ; bucketBaseIdx
                                             980 *
00000890                00000000 000056F0    981 @CODE    CSECT
                                             982 *
                                             983 *
                                             984 *
                                             985 * ....... start of rd_hdr_getCountAtIndex
00000890                                     986 @LNAME965 DS   0H
00000890 00000016                            987          DC    X'00000016'
00000894 99846D8884996D87                    988          DC    C'rd_hdr_getCountAtIndex'
000008AA 00                                  989          DC    X'00'
                                             990 rd_hdr_get$Count$At$Index DCCPRLG CINDEX=965,BASER=12,FRAME=192,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME965
                                             991          macro
                                             992          dccextrn &m
                                             993          gblc    &$dccext(1000)
                                             994          gbla    &$dccexti
                                             995          lcla    &i
                                             996 &$dccext(&$dccexti+1) setc    '&m'
                                             997 &i       seta    1
                                             998 .loop    aif    (&i gt &$dccexti).around
                                             999          aif    ('&$dccext(&i)' eq '&m').getout
                                            1000 &i       seta    &i+1
                                            1001          ago     .loop
                                            1002 .around  anop
                                            1003 &$dccexti seta &$dccexti+1
                                            1004          extrn  &m
                                            1005 .getout  anop
                                            1006          mend
000008B0                                    1007+$eye0023    ds    0d                                                    02-DCCCA
000008B0 C4C3C3                             1008+         dc cl3'DCC'                                                    02-DCCCA
000008B3 01                                 1009+         dc xl1'01' format one                                          02-DCCCA
000008B4 00000000                           1010+         dc a(0)                                                        02-DCCCA
000008B8 0000000000000922                   1011+         dc ad(@PER_965)                                                02-DCCCA
                                                                                                                           Page   24 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000008C0 00000000000000C0                   1012+         dc ad(192)                                                     02-DCCCA
000008C8 0000000000000000                   1013+         dc ad(0)                                                       02-DCCCA
000008D0 0000000000001000                   1014+         dc ad(4096)                                                    02-DCCCA
000008D8 20                                 1015+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000008D9 03                                 1016+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000008DA 03                                 1017+         dc al1(3)                                                      02-DCCCA
000008DB 08                                 1018+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000008DC 00                                 1019+         dc bl.8'00000000'                                              02-DCCCA
000008DD 000000                             1020+         dc al3(0)                                                      02-DCCCA
000008E0 0000000000000890                   1021+         dc ad(@LNAME965)                                               02-DCCCA
000008E8                                    1022+         ds 0d                                                          02-DCCCA
000008E8 00000000000008B0                   1023+         dc ad($eye0023)                                                02-DCCCA
000008F0 0000000000000000                   1024+         dc ad(0)                                                       02-DCCCA
000008F8                                    1025+         ds    0d                                                       01-DCCPR
000008F8                                    1026+rd_hdr_get$Count$At$Index ds 0d                                         01-DCCPR
000008F8                                    1027+@REGION_965_1 ds 0h                                                     01-DCCPR
000008F8 EBEC D008 0024          00000008   1028+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000008FE E3E0 D088 0004          00000088   1029+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000904 E3C0 D090 0004          00000090   1030+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000090A B904 002E                          1031+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000090E E3B0 C018 0004          00000018   1032+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000914 A7EB 00C0               000000C0   1033+         aghi  14,192              increase by frame size               01-DCCPR
00000918 E3E0 C020 0021          00000020   1034+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000091E 4720 B020               00000020   1035+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000922                                    1036+@PER_965 ds    0h                                                       01-DCCPR
00000922 EBDE 2080 0024          00000080   1037+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000928 E3C0 2090 0024          00000090   1038+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000092E B904 00D2                          1039+         lgr   13,2                set real frame pointer               01-DCCPR
00000932 B904 00CF                          1040+         lgr   12,15               set base reg                         01-DCCPR
                        000008F8            1041+         using @REGION_965_1,12                                         01-DCCPR
                                            1042 * ******* End of Prologue
                                            1043 * *
                                            1044 * ***           return hdr->counts[rd_hdr_countsIndex(hdr, bucketIdx, \
                                            1045 * subBucketIdx)];
00000936 E3F0 1000 0004          00000000   1046          LG    15,0(0,1)   ; hdr
0000093C E320 F048 0004          00000048   1047          LG    2,72(0,15)  ; offset of counts in rd_hdr_histogram_s
00000942 E3F0 D0A8 0024          000000A8   1048          STG   15,168(0,13)
00000948 E3F0 100C 0014          0000000C   1049          LGF   15,12(0,1)  ; bucketIdx
0000094E E3F0 D0B0 0024          000000B0   1050          STG   15,176(0,13)
00000954 E3F0 1014 0014          00000014   1051          LGF   15,20(0,1)  ; subBucketIdx
0000095A E3F0 D0B8 0024          000000B8   1052          STG   15,184(0,13)
00000960 4110 D0A8               000000A8   1053          LA    1,168(0,13)
00000964 E3F0 C0D8 0004          000009D0   1054          LG    15,@lit_965_27 ; rd_hdr_countsIndex
0000096A                                    1055 @@gen_label35 DS    0H
0000096A 05EF                               1056          BALR  14,15
0000096C                                    1057 @@gen_label36 DS    0H
0000096C B914 00FF                          1058          LGFR  15,15
00000970 EBFF 0003 000D          00000003   1059          SLLG  15,15,3(0)  ; *0x8
00000976 E3FF 2000 0004          00000000   1060          LG    15,0(15,2)
                                            1061 * ***   }
                                            1062 * * **** Start of Epilogue
                                            1063          DCCEPIL
                                                                                                                           Page   25 
  Active Usings: @REGION_965_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000097C                                    1064+         ds 0h                                                          01-DCCEP
                                            1065+* Epilog
0000097C D707 D088 D088 00000088 00000088   1066+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000982 E3D0 D080 0004          00000080   1067+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000988 E3C0 D090 0004          00000090   1068+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000098E E3B0 C018 0004          00000018   1069+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000994 E3C0 B010 0021          00000010   1070+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000099A E3E0 D008 0004          00000008   1071+         lg  14,8(0,13)          load up return address                 01-DCCEP
000009A0 EB1C D020 0004          00000020   1072+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000009A6 078E                               1073+         bcr 8,14                if same dsab, just return              01-DCCEP
000009A8 E3F0 D010 0024          00000010   1074+         stg 15,16(0,13)         save return code                       01-DCCEP
000009AE E300 D018 0024          00000018   1075+         stg 0,24(0,13)          save more return code                  01-DCCEP
000009B4 E3F0 D090 0004          00000090   1076+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000009BA E3F0 F018 0004          00000018   1077+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000009C0 47F0 F040               00000040   1078+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1079+* End of Epilog
                                            1080 * * **** End of Epilogue
000009C8                                    1081          DS    0D
000009C8 000000C0                           1082 @FRAMESIZE_965 DC F'192'
000009CC 00000000
000009D0 0000000000000858                   1083 @lit_965_27 DC AD(rd_hdr_counts$Index)
                                            1084          DROP  12
                                            1085 *
                                            1086 *   DSECT for automatic variables in "rd_hdr_getCountAtIndex"
                                            1087 *      (FUNCTION #965)
                                            1088 *
00000000                00000000 000000A8   1089 @AUTO#rd_hdr_get$Count$At$Index DSECT
00000000                                    1090          DS    XL168
                                            1091 *
000009D8                00000000 000056F0   1092 @CODE    CSECT
                                            1093 *
                                            1094 *
                                            1095 *
                                            1096 * ....... start of bitLen
000009D8                                    1097 @LNAME966 DS   0H
000009D8 00000006                           1098          DC    X'00000006'
000009DC 8289A3D38595                       1099          DC    C'bitLen'
000009E2 00                                 1100          DC    X'00'
                                            1101 bit$Len  DCCPRLG CINDEX=966,BASER=12,FRAME=176,SAVEAREA=NO,ENTRY=NO,ARC*
                                                                H=ZARCH,LNAMEADDR=@LNAME966
                                            1102          macro
                                            1103          dccextrn &m
                                            1104          gblc    &$dccext(1000)
                                            1105          gbla    &$dccexti
                                            1106          lcla    &i
                                            1107 &$dccext(&$dccexti+1) setc    '&m'
                                            1108 &i       seta    1
                                            1109 .loop    aif    (&i gt &$dccexti).around
                                            1110          aif    ('&$dccext(&i)' eq '&m').getout
                                            1111 &i       seta    &i+1
                                            1112          ago     .loop
                                            1113 .around  anop
                                                                                                                           Page   26 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1114 &$dccexti seta &$dccexti+1
                                            1115          extrn  &m
                                            1116 .getout  anop
                                            1117          mend
000009E8                                    1118+$eye0026    ds    0d                                                    02-DCCCA
000009E8 C4C3C3                             1119+         dc cl3'DCC'                                                    02-DCCCA
000009EB 01                                 1120+         dc xl1'01' format one                                          02-DCCCA
000009EC 00000000                           1121+         dc a(0)                                                        02-DCCCA
000009F0 0000000000000000                   1122+         dc ad(0)                                                       02-DCCCA
000009F8 00000000000000B0                   1123+         dc ad(176)                                                     02-DCCCA
00000A00 0000000000000000                   1124+         dc ad(0)                                                       02-DCCCA
00000A08 0000000000001000                   1125+         dc ad(4096)                                                    02-DCCCA
00000A10 20                                 1126+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000A11 03                                 1127+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000A12 03                                 1128+         dc al1(3)                                                      02-DCCCA
00000A13 08                                 1129+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000A14 00                                 1130+         dc bl.8'00000000'                                              02-DCCCA
00000A15 000000                             1131+         dc al3(0)                                                      02-DCCCA
00000A18 00000000000009D8                   1132+         dc ad(@LNAME966)                                               02-DCCCA
00000A20                                    1133+         ds 0d                                                          02-DCCCA
00000A20 00000000000009E8                   1134+         dc ad($eye0026)                                                02-DCCCA
00000A28 0000000000000000                   1135+         dc ad(0)                                                       02-DCCCA
00000A30                                    1136+         ds    0d                                                       01-DCCPR
00000A30                                    1137+bit$Len  ds    0d                                                       01-DCCPR
00000A30                                    1138+@REGION_966_1 ds 0h                                                     01-DCCPR
00000A30 EBEC D008 0024          00000008   1139+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000A36 B904 00CF                          1140+         lgr   12,15               set base reg                         01-DCCPR
                        00000A30            1141+         using @REGION_966_1,12                                         01-DCCPR
                                            1142 * ******* End of Prologue
                                            1143 * *
                                            1144 * ***           int64_t n = 0;
00000A3A E3F0 1000 0004          00000000   1145          LG    15,0(0,1)   ; x
00000A40 A719 0000               00000000   1146          LGHI  1,0         ; 0
                                            1147 * ***           for (; x >= 0x8000; x >>= 16)
00000A44 47F0 C022               00000A52   1148          B     @L59
00000A48                                    1149 @L58     DS    0H
                                            1150 * ***                   n += 16;
00000A48 A71B 0010               00000010   1151          AGHI  1,16
00000A4C EBFF 0010 000A          00000010   1152          SRAG  15,15,16(0)
00000A52                                    1153 @L59     DS    0H
00000A52 C2FC 0000 8000                     1154          CGFI  15,X'00008000'
00000A58 47B0 C018               00000A48   1155          BNL   @L58
                                            1156 * ***           if (x >= 0x80) {
00000A5C A7FF 0080               00000080   1157          CGHI  15,128
00000A60 4740 C03E               00000A6E   1158          BL    @L62
                                            1159 * ***                   x >>= 8;
00000A64 EBFF 0008 000A          00000008   1160          SRAG  15,15,8(0)
                                            1161 * ***                   n += 8;
00000A6A A71B 0008               00000008   1162          AGHI  1,8
                                            1163 * ***           }
00000A6E                                    1164 @L62     DS    0H
                                            1165 * ***           if (x >= 0x8) {
                                                                                                                           Page   27 
  Active Usings: @REGION_966_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000A6E A7FF 0008               00000008   1166          CGHI  15,8
00000A72 4740 C050               00000A80   1167          BL    @L63
                                            1168 * ***                   x >>= 4;
00000A76 EBFF 0004 000A          00000004   1169          SRAG  15,15,4(0)
                                            1170 * ***                   n += 4;
00000A7C A71B 0004               00000004   1171          AGHI  1,4
                                            1172 * ***           }
00000A80                                    1173 @L63     DS    0H
                                            1174 * ***           if (x >= 0x2) {
00000A80 A7FF 0002               00000002   1175          CGHI  15,2
00000A84 4740 C062               00000A92   1176          BL    @L64
                                            1177 * ***                   x >>= 2;
00000A88 EBFF 0002 000A          00000002   1178          SRAG  15,15,2(0)
                                            1179 * ***                   n += 2;
00000A8E A71B 0002               00000002   1180          AGHI  1,2
                                            1181 * ***           }
00000A92                                    1182 @L64     DS    0H
                                            1183 * ***           if (x >= 0x1)
00000A92 A7FF 0001               00000001   1184          CGHI  15,1
00000A96 4740 C06E               00000A9E   1185          BL    @L65
                                            1186 * ***                   n++;
00000A9A A71B 0001               00000001   1187          AGHI  1,1
00000A9E                                    1188 @L65     DS    0H
                                            1189 * ***           return n;
00000A9E B904 00F1                          1190          LGR   15,1
                                            1191 * ***   }
                                            1192 * * **** Start of Epilogue
                                            1193          DCCEPIL
00000AA2                                    1194+         ds 0h                                                          01-DCCEP
                                            1195+* Epilog
                                            1196+* Epilog
00000AA2 E3E0 D008 0004          00000008   1197+         lg    14,8(,13) restore the reg                                01-DCCEP
00000AA8 EB1C D020 0004          00000020   1198+         lmg   1,12,32(13)                                              01-DCCEP
00000AAE 07FE                               1199+         br   14                                                        01-DCCEP
                                            1200+* End of Epilog
                                            1201 * * **** End of Epilogue
                                            1202          DROP  12
                                            1203 *
                                            1204 *   DSECT for automatic variables in "bitLen"
                                            1205 *      (FUNCTION #966)
                                            1206 *
00000000                00000000 000000B0   1207 @AUTO#bit$Len DSECT
00000000                                    1208          DS    XL168
000000A8                                    1209 bit$Len#n#0 DS 8XL1        ; n
                                            1210 *
00000AB0                00000000 000056F0   1211 @CODE    CSECT
                                            1212 *
                                            1213 *
                                            1214 *
                                            1215 * ....... start of rd_hdr_getBucketIndex
00000AB0                                    1216 @LNAME967 DS   0H
00000AB0 00000015                           1217          DC    X'00000015'
                                                                                                                           Page   28 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000AB4 99846D8884996D87                   1218          DC    C'rd_hdr_getBucketIndex'
00000AC9 00                                 1219          DC    X'00'
                                            1220 rd_hdr_get$Bucket$Index DCCPRLG CINDEX=967,BASER=12,FRAME=184,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME967
                                            1221          macro
                                            1222          dccextrn &m
                                            1223          gblc    &$dccext(1000)
                                            1224          gbla    &$dccexti
                                            1225          lcla    &i
                                            1226 &$dccext(&$dccexti+1) setc    '&m'
                                            1227 &i       seta    1
                                            1228 .loop    aif    (&i gt &$dccexti).around
                                            1229          aif    ('&$dccext(&i)' eq '&m').getout
                                            1230 &i       seta    &i+1
                                            1231          ago     .loop
                                            1232 .around  anop
                                            1233 &$dccexti seta &$dccexti+1
                                            1234          extrn  &m
                                            1235 .getout  anop
                                            1236          mend
00000AD0                                    1237+$eye0029    ds    0d                                                    02-DCCCA
00000AD0 C4C3C3                             1238+         dc cl3'DCC'                                                    02-DCCCA
00000AD3 01                                 1239+         dc xl1'01' format one                                          02-DCCCA
00000AD4 00000000                           1240+         dc a(0)                                                        02-DCCCA
00000AD8 0000000000000B42                   1241+         dc ad(@PER_967)                                                02-DCCCA
00000AE0 00000000000000B8                   1242+         dc ad(184)                                                     02-DCCCA
00000AE8 0000000000000000                   1243+         dc ad(0)                                                       02-DCCCA
00000AF0 0000000000001000                   1244+         dc ad(4096)                                                    02-DCCCA
00000AF8 20                                 1245+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000AF9 03                                 1246+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000AFA 03                                 1247+         dc al1(3)                                                      02-DCCCA
00000AFB 08                                 1248+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000AFC 00                                 1249+         dc bl.8'00000000'                                              02-DCCCA
00000AFD 000000                             1250+         dc al3(0)                                                      02-DCCCA
00000B00 0000000000000AB0                   1251+         dc ad(@LNAME967)                                               02-DCCCA
00000B08                                    1252+         ds 0d                                                          02-DCCCA
00000B08 0000000000000AD0                   1253+         dc ad($eye0029)                                                02-DCCCA
00000B10 0000000000000000                   1254+         dc ad(0)                                                       02-DCCCA
00000B18                                    1255+         ds    0d                                                       01-DCCPR
00000B18                                    1256+rd_hdr_get$Bucket$Index ds 0d                                           01-DCCPR
00000B18                                    1257+@REGION_967_1 ds 0h                                                     01-DCCPR
00000B18 EBEC D008 0024          00000008   1258+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000B1E E3E0 D088 0004          00000088   1259+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000B24 E3C0 D090 0004          00000090   1260+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000B2A B904 002E                          1261+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000B2E E3B0 C018 0004          00000018   1262+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000B34 A7EB 00B8               000000B8   1263+         aghi  14,184              increase by frame size               01-DCCPR
00000B38 E3E0 C020 0021          00000020   1264+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000B3E 4720 B020               00000020   1265+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000B42                                    1266+@PER_967 ds    0h                                                       01-DCCPR
00000B42 EBDE 2080 0024          00000080   1267+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000B48 E3C0 2090 0024          00000090   1268+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page   29 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000B4E B904 00D2                          1269+         lgr   13,2                set real frame pointer               01-DCCPR
00000B52 B904 00CF                          1270+         lgr   12,15               set base reg                         01-DCCPR
                        00000B18            1271+         using @REGION_967_1,12                                         01-DCCPR
                                            1272 * ******* End of Prologue
                                            1273 * *
                                            1274 * ***           int64_t pow2Ceiling = bitLen(v | hdr->subBucketMask);
00000B56 E320 1000 0004          00000000   1275          LG    2,0(0,1)    ; hdr
00000B5C E3F0 1008 0004          00000008   1276          LG    15,8(0,1)   ; v
00000B62 E3F0 2028 0081          00000028   1277          OG    15,40(0,2)
00000B68 E3F0 D0B0 0024          000000B0   1278          STG   15,176(0,13)
00000B6E 4110 D0B0               000000B0   1279          LA    1,176(0,13)
00000B72 E3F0 C0C8 0004          00000BE0   1280          LG    15,@lit_967_30 ; bitLen
00000B78                                    1281 @@gen_label42 DS    0H
00000B78 05EF                               1282          BALR  14,15
00000B7A                                    1283 @@gen_label43 DS    0H
                                            1284 * ***           return (int32_t)(pow2Ceiling - (int64_t)hdr->unitMagni\
                                            1285 * tude -
                                            1286 * ***                            (int64_t)(hdr->subBucketHalfCountMagn\
                                            1287 * itude+1));
00000B7A E3F0 2010 0009          00000010   1288          SG    15,16(0,2)
00000B80 5810 2020               00000020   1289          L     1,32(0,2)   ; offset of subBucketHalfCountMagnitude in r*
                                                                d_hdr_histogram_s
00000B84 A71A 0001               00000001   1290          AHI   1,1
00000B88 B919 00F1                          1291          SGFR  15,1
00000B8C B914 00FF                          1292          LGFR  15,15
                                            1293 * ***   }
                                            1294 * * **** Start of Epilogue
                                            1295          DCCEPIL
00000B90                                    1296+         ds 0h                                                          01-DCCEP
                                            1297+* Epilog
00000B90 D707 D088 D088 00000088 00000088   1298+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000B96 E3D0 D080 0004          00000080   1299+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000B9C E3C0 D090 0004          00000090   1300+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000BA2 E3B0 C018 0004          00000018   1301+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000BA8 E3C0 B010 0021          00000010   1302+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000BAE E3E0 D008 0004          00000008   1303+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000BB4 EB1C D020 0004          00000020   1304+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000BBA 078E                               1305+         bcr 8,14                if same dsab, just return              01-DCCEP
00000BBC E3F0 D010 0024          00000010   1306+         stg 15,16(0,13)         save return code                       01-DCCEP
00000BC2 E300 D018 0024          00000018   1307+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000BC8 E3F0 D090 0004          00000090   1308+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000BCE E3F0 F018 0004          00000018   1309+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000BD4 47F0 F040               00000040   1310+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1311+* End of Epilog
                                            1312 * * **** End of Epilogue
00000BD8                                    1313          DS    0D
00000BD8 000000B8                           1314 @FRAMESIZE_967 DC F'184'
00000BDC 00000000
00000BE0 0000000000000A30                   1315 @lit_967_30 DC AD(bit$Len)
                                            1316          DROP  12
                                            1317 *
                                            1318 *   DSECT for automatic variables in "rd_hdr_getBucketIndex"
                                                                                                                           Page   30 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1319 *      (FUNCTION #967)
                                            1320 *
00000000                00000000 000000B0   1321 @AUTO#rd_hdr_get$Bucket$Index DSECT
00000000                                    1322          DS    XL168
000000A8                                    1323 rd_hdr_get$Bucket$Index#pow2$Ceiling#0 DS 8XL1 ; pow2Ceiling
                                            1324 *
00000BE8                00000000 000056F0   1325 @CODE    CSECT
                                            1326 *
                                            1327 *
                                            1328 *
                                            1329 * ....... start of rd_hdr_getSubBucketIdx
00000BE8                                    1330 @LNAME968 DS   0H
00000BE8 00000016                           1331          DC    X'00000016'
00000BEC 99846D8884996D87                   1332          DC    C'rd_hdr_getSubBucketIdx'
00000C02 00                                 1333          DC    X'00'
                                            1334 rd_hdr_get$Sub$Bucket$Idx DCCPRLG CINDEX=968,BASER=0,FRAME=168,SAVEAREA*
                                                                =NO,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME968
                                            1335          macro
                                            1336          dccextrn &m
                                            1337          gblc    &$dccext(1000)
                                            1338          gbla    &$dccexti
                                            1339          lcla    &i
                                            1340 &$dccext(&$dccexti+1) setc    '&m'
                                            1341 &i       seta    1
                                            1342 .loop    aif    (&i gt &$dccexti).around
                                            1343          aif    ('&$dccext(&i)' eq '&m').getout
                                            1344 &i       seta    &i+1
                                            1345          ago     .loop
                                            1346 .around  anop
                                            1347 &$dccexti seta &$dccexti+1
                                            1348          extrn  &m
                                            1349 .getout  anop
                                            1350          mend
00000C08                                    1351+$eye0032    ds    0d                                                    02-DCCCA
00000C08 C4C3C3                             1352+         dc cl3'DCC'                                                    02-DCCCA
00000C0B 01                                 1353+         dc xl1'01' format one                                          02-DCCCA
00000C0C 00000000                           1354+         dc a(0)                                                        02-DCCCA
00000C10 0000000000000000                   1355+         dc ad(0)                                                       02-DCCCA
00000C18 00000000000000A8                   1356+         dc ad(168)                                                     02-DCCCA
00000C20 0000000000000000                   1357+         dc ad(0)                                                       02-DCCCA
00000C28 0000000000001000                   1358+         dc ad(4096)                                                    02-DCCCA
00000C30 20                                 1359+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000C31 03                                 1360+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000C32 03                                 1361+         dc al1(3)                                                      02-DCCCA
00000C33 08                                 1362+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000C34 00                                 1363+         dc bl.8'00000000'                                              02-DCCCA
00000C35 000000                             1364+         dc al3(0)                                                      02-DCCCA
00000C38 0000000000000BE8                   1365+         dc ad(@LNAME968)                                               02-DCCCA
00000C40                                    1366+         ds 0d                                                          02-DCCCA
00000C40 0000000000000C08                   1367+         dc ad($eye0032)                                                02-DCCCA
00000C48 0000000000000000                   1368+         dc ad(0)                                                       02-DCCCA
00000C50                                    1369+         ds    0d                                                       01-DCCPR
                                                                                                                           Page   31 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000C50                                    1370+rd_hdr_get$Sub$Bucket$Idx ds 0d                                         01-DCCPR
00000C50                                    1371+@REGION_968_1 ds 0h                                                     01-DCCPR
00000C50 EBEC D008 0024          00000008   1372+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1373 * ******* End of Prologue
                                            1374 * *
                                            1375 * ***           return (int32_t)(v >> ((int64_t)idx + (int64_t)hdr->un\
                                            1376 * itMagnitude));
00000C56 E3F0 1008 0004          00000008   1377          LG    15,8(0,1)   ; v
00000C5C E320 1014 0014          00000014   1378          LGF   2,20(0,1)   ; idx
00000C62 E310 1000 0004          00000000   1379          LG    1,0(0,1)    ; hdr
00000C68 E320 1010 0008          00000010   1380          AG    2,16(0,1)
00000C6E EBFF 2000 000A          00000000   1381          SRAG  15,15,0(2)
00000C74 B914 00FF                          1382          LGFR  15,15
                                            1383 * ***   }
                                            1384 * * **** Start of Epilogue
                                            1385          DCCEPIL
00000C78                                    1386+         ds 0h                                                          01-DCCEP
                                            1387+* Epilog
                                            1388+* Epilog
00000C78 E3E0 D008 0004          00000008   1389+         lg    14,8(,13) restore the reg                                01-DCCEP
00000C7E EB1C D020 0004          00000020   1390+         lmg   1,12,32(13)                                              01-DCCEP
00000C84 07FE                               1391+         br   14                                                        01-DCCEP
                                            1392+* End of Epilog
                                            1393 * * **** End of Epilogue
                                            1394 *
                                            1395 *   DSECT for automatic variables in "rd_hdr_getSubBucketIdx"
                                            1396 *      (FUNCTION #968)
                                            1397 *
00000000                00000000 000000A8   1398 @AUTO#rd_hdr_get$Sub$Bucket$Idx DSECT
00000000                                    1399          DS    XL168
                                            1400 *
00000C86                00000000 000056F0   1401 @CODE    CSECT
                                            1402 *
                                            1403 *
                                            1404 *
                                            1405 * ....... start of rd_hdr_valueFromIndex
00000C86                                    1406 @LNAME969 DS   0H
00000C86 00000015                           1407          DC    X'00000015'
00000C8A 99846D8884996DA5                   1408          DC    C'rd_hdr_valueFromIndex'
00000C9F 00                                 1409          DC    X'00'
                                            1410 rd_hdr_value$From$Index DCCPRLG CINDEX=969,BASER=0,FRAME=168,SAVEAREA=N*
                                                                O,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME969
                                            1411          macro
                                            1412          dccextrn &m
                                            1413          gblc    &$dccext(1000)
                                            1414          gbla    &$dccexti
                                            1415          lcla    &i
                                            1416 &$dccext(&$dccexti+1) setc    '&m'
                                            1417 &i       seta    1
                                            1418 .loop    aif    (&i gt &$dccexti).around
                                            1419          aif    ('&$dccext(&i)' eq '&m').getout
                                            1420 &i       seta    &i+1
                                                                                                                           Page   32 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1421          ago     .loop
                                            1422 .around  anop
                                            1423 &$dccexti seta &$dccexti+1
                                            1424          extrn  &m
                                            1425 .getout  anop
                                            1426          mend
00000CA0                                    1427+$eye0035    ds    0d                                                    02-DCCCA
00000CA0 C4C3C3                             1428+         dc cl3'DCC'                                                    02-DCCCA
00000CA3 01                                 1429+         dc xl1'01' format one                                          02-DCCCA
00000CA4 00000000                           1430+         dc a(0)                                                        02-DCCCA
00000CA8 0000000000000000                   1431+         dc ad(0)                                                       02-DCCCA
00000CB0 00000000000000A8                   1432+         dc ad(168)                                                     02-DCCCA
00000CB8 0000000000000000                   1433+         dc ad(0)                                                       02-DCCCA
00000CC0 0000000000001000                   1434+         dc ad(4096)                                                    02-DCCCA
00000CC8 20                                 1435+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000CC9 03                                 1436+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000CCA 03                                 1437+         dc al1(3)                                                      02-DCCCA
00000CCB 08                                 1438+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000CCC 00                                 1439+         dc bl.8'00000000'                                              02-DCCCA
00000CCD 000000                             1440+         dc al3(0)                                                      02-DCCCA
00000CD0 0000000000000C86                   1441+         dc ad(@LNAME969)                                               02-DCCCA
00000CD8                                    1442+         ds 0d                                                          02-DCCCA
00000CD8 0000000000000CA0                   1443+         dc ad($eye0035)                                                02-DCCCA
00000CE0 0000000000000000                   1444+         dc ad(0)                                                       02-DCCCA
00000CE8                                    1445+         ds    0d                                                       01-DCCPR
00000CE8                                    1446+rd_hdr_value$From$Index ds 0d                                           01-DCCPR
00000CE8                                    1447+@REGION_969_1 ds 0h                                                     01-DCCPR
00000CE8 EBEC D008 0024          00000008   1448+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                            1449 * ******* End of Prologue
                                            1450 * *
                                            1451 * ***           return (int64_t)subBucketIdx <<
                                            1452 * ***                   ((int64_t)bucketIdx + hdr->unitMagnitude);
00000CEE E3F0 1014 0014          00000014   1453          LGF   15,20(0,1)  ; subBucketIdx
00000CF4 E320 100C 0014          0000000C   1454          LGF   2,12(0,1)   ; bucketIdx
00000CFA E310 1000 0004          00000000   1455          LG    1,0(0,1)    ; hdr
00000D00 E320 1010 0008          00000010   1456          AG    2,16(0,1)
00000D06 EBFF 2000 000D          00000000   1457          SLLG  15,15,0(2)
                                            1458 * ***   }
                                            1459 * * **** Start of Epilogue
                                            1460          DCCEPIL
00000D0C                                    1461+         ds 0h                                                          01-DCCEP
                                            1462+* Epilog
                                            1463+* Epilog
00000D0C E3E0 D008 0004          00000008   1464+         lg    14,8(,13) restore the reg                                01-DCCEP
00000D12 EB1C D020 0004          00000020   1465+         lmg   1,12,32(13)                                              01-DCCEP
00000D18 07FE                               1466+         br   14                                                        01-DCCEP
                                            1467+* End of Epilog
                                            1468 * * **** End of Epilogue
                                            1469 *
                                            1470 *   DSECT for automatic variables in "rd_hdr_valueFromIndex"
                                            1471 *      (FUNCTION #969)
                                            1472 *
                                                                                                                           Page   33 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000000                00000000 000000A8   1473 @AUTO#rd_hdr_value$From$Index DSECT
00000000                                    1474          DS    XL168
                                            1475 *
00000D1A                00000000 000056F0   1476 @CODE    CSECT
                                            1477 *
                                            1478 *
                                            1479 *
                                            1480 * ....... start of rd_hdr_sizeOfEquivalentValueRange
00000D1A                                    1481 @LNAME970 DS   0H
00000D1A 00000021                           1482          DC    X'00000021'
00000D1E 99846D8884996DA2                   1483          DC    C'rd_hdr_sizeOfEquivalentValueRang'
00000D3E 85                                 1484          DC    C'e'
00000D3F 00                                 1485          DC    X'00'
                                            1486 rd_hdr_size$Of$Equivalent$Value$Range DCCPRLG CINDEX=970,BASER=12,FRAME*
                                                                =200,ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME970
                                            1487          macro
                                            1488          dccextrn &m
                                            1489          gblc    &$dccext(1000)
                                            1490          gbla    &$dccexti
                                            1491          lcla    &i
                                            1492 &$dccext(&$dccexti+1) setc    '&m'
                                            1493 &i       seta    1
                                            1494 .loop    aif    (&i gt &$dccexti).around
                                            1495          aif    ('&$dccext(&i)' eq '&m').getout
                                            1496 &i       seta    &i+1
                                            1497          ago     .loop
                                            1498 .around  anop
                                            1499 &$dccexti seta &$dccexti+1
                                            1500          extrn  &m
                                            1501 .getout  anop
                                            1502          mend
00000D40                                    1503+$eye0038    ds    0d                                                    02-DCCCA
00000D40 C4C3C3                             1504+         dc cl3'DCC'                                                    02-DCCCA
00000D43 01                                 1505+         dc xl1'01' format one                                          02-DCCCA
00000D44 00000000                           1506+         dc a(0)                                                        02-DCCCA
00000D48 0000000000000DB2                   1507+         dc ad(@PER_970)                                                02-DCCCA
00000D50 00000000000000C8                   1508+         dc ad(200)                                                     02-DCCCA
00000D58 0000000000000000                   1509+         dc ad(0)                                                       02-DCCCA
00000D60 0000000000001000                   1510+         dc ad(4096)                                                    02-DCCCA
00000D68 20                                 1511+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000D69 03                                 1512+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000D6A 03                                 1513+         dc al1(3)                                                      02-DCCCA
00000D6B 08                                 1514+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000D6C 00                                 1515+         dc bl.8'00000000'                                              02-DCCCA
00000D6D 000000                             1516+         dc al3(0)                                                      02-DCCCA
00000D70 0000000000000D1A                   1517+         dc ad(@LNAME970)                                               02-DCCCA
00000D78                                    1518+         ds 0d                                                          02-DCCCA
00000D78 0000000000000D40                   1519+         dc ad($eye0038)                                                02-DCCCA
00000D80 0000000000000000                   1520+         dc ad(0)                                                       02-DCCCA
00000D88                                    1521+         ds    0d                                                       01-DCCPR
00000D88                                    1522+rd_hdr_size$Of$Equivalent$Value$Range ds 0d                             01-DCCPR
00000D88                                    1523+@REGION_970_1 ds 0h                                                     01-DCCPR
                                                                                                                           Page   34 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000D88 EBEC D008 0024          00000008   1524+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000D8E E3E0 D088 0004          00000088   1525+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000D94 E3C0 D090 0004          00000090   1526+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000D9A B904 002E                          1527+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000D9E E3B0 C018 0004          00000018   1528+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000DA4 A7EB 00C8               000000C8   1529+         aghi  14,200              increase by frame size               01-DCCPR
00000DA8 E3E0 C020 0021          00000020   1530+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000DAE 4720 B020               00000020   1531+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000DB2                                    1532+@PER_970 ds    0h                                                       01-DCCPR
00000DB2 EBDE 2080 0024          00000080   1533+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000DB8 E3C0 2090 0024          00000090   1534+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000DBE B904 00D2                          1535+         lgr   13,2                set real frame pointer               01-DCCPR
00000DC2 B904 00CF                          1536+         lgr   12,15               set base reg                         01-DCCPR
                        00000D88            1537+         using @REGION_970_1,12                                         01-DCCPR
00000DC6 B904 0041                          1538          LGR   4,1         ; ptr to parm area
                                            1539 * ******* End of Prologue
                                            1540 * *
                                            1541 * ***           int32_t bucketIdx = rd_hdr_getBucketIndex(hdr, v);
00000DCA E320 4000 0004          00000000   1542          LG    2,0(0,4)    ; hdr
00000DD0 E320 D0B0 0024          000000B0   1543          STG   2,176(0,13)
00000DD6 E3F0 4008 0004          00000008   1544          LG    15,8(0,4)   ; v
00000DDC E3F0 D0B8 0024          000000B8   1545          STG   15,184(0,13)
00000DE2 4110 D0B0               000000B0   1546          LA    1,176(0,13)
00000DE6 E3F0 C100 0004          00000E88   1547          LG    15,@lit_970_32 ; rd_hdr_getBucketIndex
00000DEC                                    1548 @@gen_label44 DS    0H
00000DEC 05EF                               1549          BALR  14,15
00000DEE                                    1550 @@gen_label45 DS    0H
00000DEE 183F                               1551          LR    3,15
                                            1552 * ***           int32_t subBucketIdx = rd_hdr_getSubBucketIdx(hdr, v, \
                                            1553 * bucketIdx);
00000DF0 E320 D0B0 0024          000000B0   1554          STG   2,176(0,13)
00000DF6 E310 4008 0004          00000008   1555          LG    1,8(0,4)    ; v
00000DFC E310 D0B8 0024          000000B8   1556          STG   1,184(0,13)
00000E02 B914 00F3                          1557          LGFR  15,3
00000E06 E3F0 D0C0 0024          000000C0   1558          STG   15,192(0,13)
00000E0C 4110 D0B0               000000B0   1559          LA    1,176(0,13)
00000E10 E3F0 C108 0004          00000E90   1560          LG    15,@lit_970_33 ; rd_hdr_getSubBucketIdx
00000E16                                    1561 @@gen_label46 DS    0H
00000E16 05EF                               1562          BALR  14,15
00000E18                                    1563 @@gen_label47 DS    0H
                                            1564 * ***           int32_t adjustedBucket = bucketIdx;
                                            1565 * ***           if (((subBucketIdx >= hdr->subBucketCount)))
00000E18 59F0 2030               00000030   1566          C     15,48(0,2)
00000E1C 4740 C09C               00000E24   1567          BL    @L66
                                            1568 * ***                   adjustedBucket++;
00000E20 A73A 0001               00000001   1569          AHI   3,1
00000E24                                    1570 @L66     DS    0H
                                            1571 * ***           return (int64_t)1 << (hdr->unitMagnitude + (int64_t)ad\
                                            1572 * justedBucket);
00000E24 A7F9 0001               00000001   1573          LGHI  15,1        ; 1
00000E28 E310 2010 0004          00000010   1574          LG    1,16(0,2)   ; offset of unitMagnitude in rd_hdr_histogra*
                                                                m_s
                                                                                                                           Page   35 
  Active Usings: @REGION_970_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000E2E B918 0013                          1575          AGFR  1,3
00000E32 EBFF 1000 000D          00000000   1576          SLLG  15,15,0(1)
                                            1577 * ***   }
                                            1578 * * **** Start of Epilogue
                                            1579          DCCEPIL
00000E38                                    1580+         ds 0h                                                          01-DCCEP
                                            1581+* Epilog
00000E38 D707 D088 D088 00000088 00000088   1582+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000E3E E3D0 D080 0004          00000080   1583+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000E44 E3C0 D090 0004          00000090   1584+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000E4A E3B0 C018 0004          00000018   1585+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000E50 E3C0 B010 0021          00000010   1586+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000E56 E3E0 D008 0004          00000008   1587+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000E5C EB1C D020 0004          00000020   1588+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000E62 078E                               1589+         bcr 8,14                if same dsab, just return              01-DCCEP
00000E64 E3F0 D010 0024          00000010   1590+         stg 15,16(0,13)         save return code                       01-DCCEP
00000E6A E300 D018 0024          00000018   1591+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000E70 E3F0 D090 0004          00000090   1592+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000E76 E3F0 F018 0004          00000018   1593+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00000E7C 47F0 F040               00000040   1594+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1595+* End of Epilog
                                            1596 * * **** End of Epilogue
00000E80                                    1597          DS    0D
00000E80 000000C8                           1598 @FRAMESIZE_970 DC F'200'
00000E84 00000000
00000E88 0000000000000B18                   1599 @lit_970_32 DC AD(rd_hdr_get$Bucket$Index)
00000E90 0000000000000C50                   1600 @lit_970_33 DC AD(rd_hdr_get$Sub$Bucket$Idx)
                                            1601          DROP  12
                                            1602 *
                                            1603 *   DSECT for automatic variables in "rd_hdr_sizeOfEquivalentValueRang
                                            1604 *           e"
                                            1605 *      (FUNCTION #970)
                                            1606 *
00000000                00000000 000000AC   1607 @AUTO#rd_hdr_size$Of$Equivalent$Value$Range DSECT
00000000                                    1608          DS    XL168
000000A8                                    1609 rd_hdr_size$Of$Equivalent$Value$Range#adjusted$Bucket#0 DS 1F ; adjuste*
                                                                dBucket
000000AC                000000AC 000000A8   1610          ORG   @AUTO#rd_hdr_size$Of$Equivalent$Value$Range+168
000000A8                                    1611 rd_hdr_size$Of$Equivalent$Value$Range#sub$Bucket$Idx#0 DS 1F ; subBucke*
                                                                tIdx
000000AC                000000AC 000000A8   1612          ORG   @AUTO#rd_hdr_size$Of$Equivalent$Value$Range+168
000000A8                                    1613 rd_hdr_size$Of$Equivalent$Value$Range#bucket$Idx#0 DS 1F ; bucketIdx
                                            1614 *
00000E98                00000000 000056F0   1615 @CODE    CSECT
                                            1616 *
                                            1617 *
                                            1618 *
                                            1619 * ....... start of rd_hdr_lowestEquivalentValue
00000E98                                    1620 @LNAME971 DS   0H
00000E98 0000001C                           1621          DC    X'0000001C'
00000E9C 99846D8884996D93                   1622          DC    C'rd_hdr_lowestEquivalentValue'
00000EB8 00                                 1623          DC    X'00'
                                                                                                                           Page   36 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1624 rd_hdr_lowest$Equivalent$Value DCCPRLG CINDEX=971,BASER=12,FRAME=200,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME971
                                            1625          macro
                                            1626          dccextrn &m
                                            1627          gblc    &$dccext(1000)
                                            1628          gbla    &$dccexti
                                            1629          lcla    &i
                                            1630 &$dccext(&$dccexti+1) setc    '&m'
                                            1631 &i       seta    1
                                            1632 .loop    aif    (&i gt &$dccexti).around
                                            1633          aif    ('&$dccext(&i)' eq '&m').getout
                                            1634 &i       seta    &i+1
                                            1635          ago     .loop
                                            1636 .around  anop
                                            1637 &$dccexti seta &$dccexti+1
                                            1638          extrn  &m
                                            1639 .getout  anop
                                            1640          mend
00000EC0                                    1641+$eye0041    ds    0d                                                    02-DCCCA
00000EC0 C4C3C3                             1642+         dc cl3'DCC'                                                    02-DCCCA
00000EC3 01                                 1643+         dc xl1'01' format one                                          02-DCCCA
00000EC4 00000000                           1644+         dc a(0)                                                        02-DCCCA
00000EC8 0000000000000F32                   1645+         dc ad(@PER_971)                                                02-DCCCA
00000ED0 00000000000000C8                   1646+         dc ad(200)                                                     02-DCCCA
00000ED8 0000000000000000                   1647+         dc ad(0)                                                       02-DCCCA
00000EE0 0000000000001000                   1648+         dc ad(4096)                                                    02-DCCCA
00000EE8 20                                 1649+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00000EE9 03                                 1650+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00000EEA 03                                 1651+         dc al1(3)                                                      02-DCCCA
00000EEB 08                                 1652+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00000EEC 00                                 1653+         dc bl.8'00000000'                                              02-DCCCA
00000EED 000000                             1654+         dc al3(0)                                                      02-DCCCA
00000EF0 0000000000000E98                   1655+         dc ad(@LNAME971)                                               02-DCCCA
00000EF8                                    1656+         ds 0d                                                          02-DCCCA
00000EF8 0000000000000EC0                   1657+         dc ad($eye0041)                                                02-DCCCA
00000F00 0000000000000000                   1658+         dc ad(0)                                                       02-DCCCA
00000F08                                    1659+         ds    0d                                                       01-DCCPR
00000F08                                    1660+rd_hdr_lowest$Equivalent$Value ds 0d                                    01-DCCPR
00000F08                                    1661+@REGION_971_1 ds 0h                                                     01-DCCPR
00000F08 EBEC D008 0024          00000008   1662+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00000F0E E3E0 D088 0004          00000088   1663+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00000F14 E3C0 D090 0004          00000090   1664+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00000F1A B904 002E                          1665+         lgr   2,14                copy addr of our savearea            01-DCCPR
00000F1E E3B0 C018 0004          00000018   1666+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00000F24 A7EB 00C8               000000C8   1667+         aghi  14,200              increase by frame size               01-DCCPR
00000F28 E3E0 C020 0021          00000020   1668+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00000F2E 4720 B020               00000020   1669+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00000F32                                    1670+@PER_971 ds    0h                                                       01-DCCPR
00000F32 EBDE 2080 0024          00000080   1671+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00000F38 E3C0 2090 0024          00000090   1672+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00000F3E B904 00D2                          1673+         lgr   13,2                set real frame pointer               01-DCCPR
00000F42 B904 00CF                          1674+         lgr   12,15               set base reg                         01-DCCPR
                                                                                                                           Page   37 
  Active Usings: @REGION_971_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                        00000F08            1675+         using @REGION_971_1,12                                         01-DCCPR
00000F46 B904 0041                          1676          LGR   4,1         ; ptr to parm area
                                            1677 * ******* End of Prologue
                                            1678 * *
                                            1679 * ***           int32_t bucketIdx = rd_hdr_getBucketIndex(hdr, v);
00000F4A E320 4000 0004          00000000   1680          LG    2,0(0,4)    ; hdr
00000F50 E320 D0B0 0024          000000B0   1681          STG   2,176(0,13)
00000F56 E3F0 4008 0004          00000008   1682          LG    15,8(0,4)   ; v
00000F5C E3F0 D0B8 0024          000000B8   1683          STG   15,184(0,13)
00000F62 4110 D0B0               000000B0   1684          LA    1,176(0,13)
00000F66 E3F0 C108 0004          00001010   1685          LG    15,@lit_971_36 ; rd_hdr_getBucketIndex
00000F6C                                    1686 @@gen_label49 DS    0H
00000F6C 05EF                               1687          BALR  14,15
00000F6E                                    1688 @@gen_label50 DS    0H
00000F6E 183F                               1689          LR    3,15
                                            1690 * ***           int32_t subBucketIdx = rd_hdr_getSubBucketIdx(hdr, v, \
                                            1691 * bucketIdx);
00000F70 E320 D0B0 0024          000000B0   1692          STG   2,176(0,13)
00000F76 E310 4008 0004          00000008   1693          LG    1,8(0,4)    ; v
00000F7C E310 D0B8 0024          000000B8   1694          STG   1,184(0,13)
00000F82 B914 00F3                          1695          LGFR  15,3
00000F86 E3F0 D0C0 0024          000000C0   1696          STG   15,192(0,13)
00000F8C 4110 D0B0               000000B0   1697          LA    1,176(0,13)
00000F90 E3F0 C110 0004          00001018   1698          LG    15,@lit_971_37 ; rd_hdr_getSubBucketIdx
00000F96                                    1699 @@gen_label51 DS    0H
00000F96 05EF                               1700          BALR  14,15
00000F98                                    1701 @@gen_label52 DS    0H
                                            1702 * ***           return rd_hdr_valueFromIndex(hdr, bucketIdx, subBucket\
                                            1703 * Idx);
00000F98 E320 D0B0 0024          000000B0   1704          STG   2,176(0,13)
00000F9E B914 0013                          1705          LGFR  1,3
00000FA2 E310 D0B8 0024          000000B8   1706          STG   1,184(0,13)
00000FA8 B914 00FF                          1707          LGFR  15,15
00000FAC E3F0 D0C0 0024          000000C0   1708          STG   15,192(0,13)
00000FB2 4110 D0B0               000000B0   1709          LA    1,176(0,13)
00000FB6 E3F0 C118 0004          00001020   1710          LG    15,@lit_971_38 ; rd_hdr_valueFromIndex
00000FBC                                    1711 @@gen_label53 DS    0H
00000FBC 05EF                               1712          BALR  14,15
00000FBE                                    1713 @@gen_label54 DS    0H
                                            1714 * ***   }
                                            1715 * * **** Start of Epilogue
                                            1716          DCCEPIL
00000FBE                                    1717+         ds 0h                                                          01-DCCEP
                                            1718+* Epilog
00000FBE D707 D088 D088 00000088 00000088   1719+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00000FC4 E3D0 D080 0004          00000080   1720+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00000FCA E3C0 D090 0004          00000090   1721+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00000FD0 E3B0 C018 0004          00000018   1722+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00000FD6 E3C0 B010 0021          00000010   1723+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00000FDC E3E0 D008 0004          00000008   1724+         lg  14,8(0,13)          load up return address                 01-DCCEP
00000FE2 EB1C D020 0004          00000020   1725+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00000FE8 078E                               1726+         bcr 8,14                if same dsab, just return              01-DCCEP
                                                                                                                           Page   38 
  Active Usings: @REGION_971_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000FEA E3F0 D010 0024          00000010   1727+         stg 15,16(0,13)         save return code                       01-DCCEP
00000FF0 E300 D018 0024          00000018   1728+         stg 0,24(0,13)          save more return code                  01-DCCEP
00000FF6 E3F0 D090 0004          00000090   1729+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00000FFC E3F0 F018 0004          00000018   1730+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001002 47F0 F040               00000040   1731+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1732+* End of Epilog
                                            1733 * * **** End of Epilogue
00001008                                    1734          DS    0D
00001008 000000C8                           1735 @FRAMESIZE_971 DC F'200'
0000100C 00000000
00001010 0000000000000B18                   1736 @lit_971_36 DC AD(rd_hdr_get$Bucket$Index)
00001018 0000000000000C50                   1737 @lit_971_37 DC AD(rd_hdr_get$Sub$Bucket$Idx)
00001020 0000000000000CE8                   1738 @lit_971_38 DC AD(rd_hdr_value$From$Index)
                                            1739          DROP  12
                                            1740 *
                                            1741 *   DSECT for automatic variables in "rd_hdr_lowestEquivalentValue"
                                            1742 *      (FUNCTION #971)
                                            1743 *
00000000                00000000 000000AC   1744 @AUTO#rd_hdr_lowest$Equivalent$Value DSECT
00000000                                    1745          DS    XL168
000000A8                                    1746 rd_hdr_lowest$Equivalent$Value#sub$Bucket$Idx#0 DS 1F ; subBucketIdx
000000AC                000000AC 000000A8   1747          ORG   @AUTO#rd_hdr_lowest$Equivalent$Value+168
000000A8                                    1748 rd_hdr_lowest$Equivalent$Value#bucket$Idx#0 DS 1F ; bucketIdx
                                            1749 *
00001028                00000000 000056F0   1750 @CODE    CSECT
                                            1751 *
                                            1752 *
                                            1753 *
                                            1754 * ....... start of rd_hdr_nextNonEquivalentValue
00001028                                    1755 @LNAME972 DS   0H
00001028 0000001D                           1756          DC    X'0000001D'
0000102C 99846D8884996D95                   1757          DC    C'rd_hdr_nextNonEquivalentValue'
00001049 00                                 1758          DC    X'00'
                                            1759 rd_hdr_next$Non$Equivalent$Value DCCPRLG CINDEX=972,BASER=12,FRAME=184,*
                                                                ENTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME972
                                            1760          macro
                                            1761          dccextrn &m
                                            1762          gblc    &$dccext(1000)
                                            1763          gbla    &$dccexti
                                            1764          lcla    &i
                                            1765 &$dccext(&$dccexti+1) setc    '&m'
                                            1766 &i       seta    1
                                            1767 .loop    aif    (&i gt &$dccexti).around
                                            1768          aif    ('&$dccext(&i)' eq '&m').getout
                                            1769 &i       seta    &i+1
                                            1770          ago     .loop
                                            1771 .around  anop
                                            1772 &$dccexti seta &$dccexti+1
                                            1773          extrn  &m
                                            1774 .getout  anop
                                            1775          mend
00001050                                    1776+$eye0044    ds    0d                                                    02-DCCCA
                                                                                                                           Page   39 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001050 C4C3C3                             1777+         dc cl3'DCC'                                                    02-DCCCA
00001053 01                                 1778+         dc xl1'01' format one                                          02-DCCCA
00001054 00000000                           1779+         dc a(0)                                                        02-DCCCA
00001058 00000000000010C2                   1780+         dc ad(@PER_972)                                                02-DCCCA
00001060 00000000000000B8                   1781+         dc ad(184)                                                     02-DCCCA
00001068 0000000000000000                   1782+         dc ad(0)                                                       02-DCCCA
00001070 0000000000001000                   1783+         dc ad(4096)                                                    02-DCCCA
00001078 20                                 1784+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001079 03                                 1785+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000107A 03                                 1786+         dc al1(3)                                                      02-DCCCA
0000107B 08                                 1787+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000107C 00                                 1788+         dc bl.8'00000000'                                              02-DCCCA
0000107D 000000                             1789+         dc al3(0)                                                      02-DCCCA
00001080 0000000000001028                   1790+         dc ad(@LNAME972)                                               02-DCCCA
00001088                                    1791+         ds 0d                                                          02-DCCCA
00001088 0000000000001050                   1792+         dc ad($eye0044)                                                02-DCCCA
00001090 0000000000000000                   1793+         dc ad(0)                                                       02-DCCCA
00001098                                    1794+         ds    0d                                                       01-DCCPR
00001098                                    1795+rd_hdr_next$Non$Equivalent$Value ds 0d                                  01-DCCPR
00001098                                    1796+@REGION_972_1 ds 0h                                                     01-DCCPR
00001098 EBEC D008 0024          00000008   1797+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000109E E3E0 D088 0004          00000088   1798+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000010A4 E3C0 D090 0004          00000090   1799+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000010AA B904 002E                          1800+         lgr   2,14                copy addr of our savearea            01-DCCPR
000010AE E3B0 C018 0004          00000018   1801+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000010B4 A7EB 00B8               000000B8   1802+         aghi  14,184              increase by frame size               01-DCCPR
000010B8 E3E0 C020 0021          00000020   1803+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000010BE 4720 B020               00000020   1804+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000010C2                                    1805+@PER_972 ds    0h                                                       01-DCCPR
000010C2 EBDE 2080 0024          00000080   1806+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000010C8 E3C0 2090 0024          00000090   1807+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000010CE B904 00D2                          1808+         lgr   13,2                set real frame pointer               01-DCCPR
000010D2 B904 00CF                          1809+         lgr   12,15               set base reg                         01-DCCPR
                        00001098            1810+         using @REGION_972_1,12                                         01-DCCPR
000010D6 B904 0021                          1811          LGR   2,1         ; ptr to parm area
                                            1812 * ******* End of Prologue
                                            1813 * *
                                            1814 * ***           return rd_hdr_lowestEquivalentValue(hdr, v) +
000010DA E3F0 2000 0004          00000000   1815          LG    15,0(0,2)   ; hdr
000010E0 E3F0 D0A8 0024          000000A8   1816          STG   15,168(0,13)
000010E6 E3F0 2008 0004          00000008   1817          LG    15,8(0,2)   ; v
000010EC E3F0 D0B0 0024          000000B0   1818          STG   15,176(0,13)
000010F2 4110 D0A8               000000A8   1819          LA    1,168(0,13)
000010F6 E3F0 C0E8 0004          00001180   1820          LG    15,@lit_972_40 ; rd_hdr_lowestEquivalentValue
000010FC                                    1821 @@gen_label55 DS    0H
000010FC 05EF                               1822          BALR  14,15
000010FE                                    1823 @@gen_label56 DS    0H
000010FE B904 003F                          1824          LGR   3,15
                                            1825 * ***                   rd_hdr_sizeOfEquivalentValueRange(hdr, v);
00001102 E3F0 2000 0004          00000000   1826          LG    15,0(0,2)   ; hdr
00001108 E3F0 D0A8 0024          000000A8   1827          STG   15,168(0,13)
0000110E E3F0 2008 0004          00000008   1828          LG    15,8(0,2)   ; v
                                                                                                                           Page   40 
  Active Usings: @REGION_972_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001114 E3F0 D0B0 0024          000000B0   1829          STG   15,176(0,13)
0000111A 4110 D0A8               000000A8   1830          LA    1,168(0,13)
0000111E E3F0 C0F0 0004          00001188   1831          LG    15,@lit_972_41 ; rd_hdr_sizeOfEquivalentValueRange
00001124                                    1832 @@gen_label57 DS    0H
00001124 05EF                               1833          BALR  14,15
00001126                                    1834 @@gen_label58 DS    0H
00001126 B908 003F                          1835          AGR   3,15
0000112A B904 00F3                          1836          LGR   15,3
                                            1837 * ***   }
                                            1838 * * **** Start of Epilogue
                                            1839          DCCEPIL
0000112E                                    1840+         ds 0h                                                          01-DCCEP
                                            1841+* Epilog
0000112E D707 D088 D088 00000088 00000088   1842+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001134 E3D0 D080 0004          00000080   1843+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000113A E3C0 D090 0004          00000090   1844+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001140 E3B0 C018 0004          00000018   1845+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001146 E3C0 B010 0021          00000010   1846+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000114C E3E0 D008 0004          00000008   1847+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001152 EB1C D020 0004          00000020   1848+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001158 078E                               1849+         bcr 8,14                if same dsab, just return              01-DCCEP
0000115A E3F0 D010 0024          00000010   1850+         stg 15,16(0,13)         save return code                       01-DCCEP
00001160 E300 D018 0024          00000018   1851+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001166 E3F0 D090 0004          00000090   1852+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000116C E3F0 F018 0004          00000018   1853+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001172 47F0 F040               00000040   1854+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1855+* End of Epilog
                                            1856 * * **** End of Epilogue
00001178                                    1857          DS    0D
00001178 000000B8                           1858 @FRAMESIZE_972 DC F'184'
0000117C 00000000
00001180 0000000000000F08                   1859 @lit_972_40 DC AD(rd_hdr_lowest$Equivalent$Value)
00001188 0000000000000D88                   1860 @lit_972_41 DC AD(rd_hdr_size$Of$Equivalent$Value$Range)
                                            1861          DROP  12
                                            1862 *
                                            1863 *   DSECT for automatic variables in "rd_hdr_nextNonEquivalentValue"
                                            1864 *      (FUNCTION #972)
                                            1865 *
00000000                00000000 000000A8   1866 @AUTO#rd_hdr_next$Non$Equivalent$Value DSECT
00000000                                    1867          DS    XL168
                                            1868 *
00001190                00000000 000056F0   1869 @CODE    CSECT
                                            1870 *
                                            1871 *
                                            1872 *
                                            1873 * ....... start of rd_hdr_highestEquivalentValue
00001190                                    1874 @LNAME973 DS   0H
00001190 0000001D                           1875          DC    X'0000001D'
00001194 99846D8884996D88                   1876          DC    C'rd_hdr_highestEquivalentValue'
000011B1 00                                 1877          DC    X'00'
                                            1878 rd_hdr_highest$Equivalent$Value DCCPRLG CINDEX=973,BASER=12,FRAME=184,E*
                                                                NTRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME973
                                                                                                                           Page   41 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1879          macro
                                            1880          dccextrn &m
                                            1881          gblc    &$dccext(1000)
                                            1882          gbla    &$dccexti
                                            1883          lcla    &i
                                            1884 &$dccext(&$dccexti+1) setc    '&m'
                                            1885 &i       seta    1
                                            1886 .loop    aif    (&i gt &$dccexti).around
                                            1887          aif    ('&$dccext(&i)' eq '&m').getout
                                            1888 &i       seta    &i+1
                                            1889          ago     .loop
                                            1890 .around  anop
                                            1891 &$dccexti seta &$dccexti+1
                                            1892          extrn  &m
                                            1893 .getout  anop
                                            1894          mend
000011B8                                    1895+$eye0047    ds    0d                                                    02-DCCCA
000011B8 C4C3C3                             1896+         dc cl3'DCC'                                                    02-DCCCA
000011BB 01                                 1897+         dc xl1'01' format one                                          02-DCCCA
000011BC 00000000                           1898+         dc a(0)                                                        02-DCCCA
000011C0 000000000000122A                   1899+         dc ad(@PER_973)                                                02-DCCCA
000011C8 00000000000000B8                   1900+         dc ad(184)                                                     02-DCCCA
000011D0 0000000000000000                   1901+         dc ad(0)                                                       02-DCCCA
000011D8 0000000000001000                   1902+         dc ad(4096)                                                    02-DCCCA
000011E0 20                                 1903+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000011E1 03                                 1904+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000011E2 03                                 1905+         dc al1(3)                                                      02-DCCCA
000011E3 08                                 1906+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000011E4 00                                 1907+         dc bl.8'00000000'                                              02-DCCCA
000011E5 000000                             1908+         dc al3(0)                                                      02-DCCCA
000011E8 0000000000001190                   1909+         dc ad(@LNAME973)                                               02-DCCCA
000011F0                                    1910+         ds 0d                                                          02-DCCCA
000011F0 00000000000011B8                   1911+         dc ad($eye0047)                                                02-DCCCA
000011F8 0000000000000000                   1912+         dc ad(0)                                                       02-DCCCA
00001200                                    1913+         ds    0d                                                       01-DCCPR
00001200                                    1914+rd_hdr_highest$Equivalent$Value ds 0d                                   01-DCCPR
00001200                                    1915+@REGION_973_1 ds 0h                                                     01-DCCPR
00001200 EBEC D008 0024          00000008   1916+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001206 E3E0 D088 0004          00000088   1917+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000120C E3C0 D090 0004          00000090   1918+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001212 B904 002E                          1919+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001216 E3B0 C018 0004          00000018   1920+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000121C A7EB 00B8               000000B8   1921+         aghi  14,184              increase by frame size               01-DCCPR
00001220 E3E0 C020 0021          00000020   1922+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001226 4720 B020               00000020   1923+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000122A                                    1924+@PER_973 ds    0h                                                       01-DCCPR
0000122A EBDE 2080 0024          00000080   1925+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001230 E3C0 2090 0024          00000090   1926+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001236 B904 00D2                          1927+         lgr   13,2                set real frame pointer               01-DCCPR
0000123A B904 00CF                          1928+         lgr   12,15               set base reg                         01-DCCPR
                        00001200            1929+         using @REGION_973_1,12                                         01-DCCPR
                                            1930 * ******* End of Prologue
                                                                                                                           Page   42 
  Active Usings: @REGION_973_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            1931 * *
                                            1932 * ***           return rd_hdr_nextNonEquivalentValue(hdr, v) - 1;
0000123E E3F0 1000 0004          00000000   1933          LG    15,0(0,1)   ; hdr
00001244 E3F0 D0A8 0024          000000A8   1934          STG   15,168(0,13)
0000124A E3F0 1008 0004          00000008   1935          LG    15,8(0,1)   ; v
00001250 E3F0 D0B0 0024          000000B0   1936          STG   15,176(0,13)
00001256 4110 D0A8               000000A8   1937          LA    1,168(0,13)
0000125A E3F0 C0B8 0004          000012B8   1938          LG    15,@lit_973_43 ; rd_hdr_nextNonEquivalentValue
00001260                                    1939 @@gen_label59 DS    0H
00001260 05EF                               1940          BALR  14,15
00001262                                    1941 @@gen_label60 DS    0H
00001262 A7FB FFFF               0000FFFF   1942          AGHI  15,-1
                                            1943 * ***   }
                                            1944 * * **** Start of Epilogue
                                            1945          DCCEPIL
00001266                                    1946+         ds 0h                                                          01-DCCEP
                                            1947+* Epilog
00001266 D707 D088 D088 00000088 00000088   1948+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000126C E3D0 D080 0004          00000080   1949+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001272 E3C0 D090 0004          00000090   1950+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001278 E3B0 C018 0004          00000018   1951+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000127E E3C0 B010 0021          00000010   1952+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001284 E3E0 D008 0004          00000008   1953+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000128A EB1C D020 0004          00000020   1954+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001290 078E                               1955+         bcr 8,14                if same dsab, just return              01-DCCEP
00001292 E3F0 D010 0024          00000010   1956+         stg 15,16(0,13)         save return code                       01-DCCEP
00001298 E300 D018 0024          00000018   1957+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000129E E3F0 D090 0004          00000090   1958+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000012A4 E3F0 F018 0004          00000018   1959+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000012AA 47F0 F040               00000040   1960+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            1961+* End of Epilog
                                            1962 * * **** End of Epilogue
000012B0                                    1963          DS    0D
000012B0 000000B8                           1964 @FRAMESIZE_973 DC F'184'
000012B4 00000000
000012B8 0000000000001098                   1965 @lit_973_43 DC AD(rd_hdr_next$Non$Equivalent$Value)
                                            1966          DROP  12
                                            1967 *
                                            1968 *   DSECT for automatic variables in "rd_hdr_highestEquivalentValue"
                                            1969 *      (FUNCTION #973)
                                            1970 *
00000000                00000000 000000A8   1971 @AUTO#rd_hdr_highest$Equivalent$Value DSECT
00000000                                    1972          DS    XL168
                                            1973 *
000012C0                00000000 000056F0   1974 @CODE    CSECT
                                            1975 *
                                            1976 *
                                            1977 *
                                            1978 * ....... start of rd_hdr_medianEquivalentValue
000012C0                                    1979 @LNAME974 DS   0H
000012C0 0000001C                           1980          DC    X'0000001C'
000012C4 99846D8884996D94                   1981          DC    C'rd_hdr_medianEquivalentValue'
                                                                                                                           Page   43 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000012E0 00                                 1982          DC    X'00'
                                            1983 rd_hdr_median$Equivalent$Value DCCPRLG CINDEX=974,BASER=12,FRAME=184,EN*
                                                                TRY=NO,ARCH=ZARCH,LNAMEADDR=@LNAME974
                                            1984          macro
                                            1985          dccextrn &m
                                            1986          gblc    &$dccext(1000)
                                            1987          gbla    &$dccexti
                                            1988          lcla    &i
                                            1989 &$dccext(&$dccexti+1) setc    '&m'
                                            1990 &i       seta    1
                                            1991 .loop    aif    (&i gt &$dccexti).around
                                            1992          aif    ('&$dccext(&i)' eq '&m').getout
                                            1993 &i       seta    &i+1
                                            1994          ago     .loop
                                            1995 .around  anop
                                            1996 &$dccexti seta &$dccexti+1
                                            1997          extrn  &m
                                            1998 .getout  anop
                                            1999          mend
000012E8                                    2000+$eye0050    ds    0d                                                    02-DCCCA
000012E8 C4C3C3                             2001+         dc cl3'DCC'                                                    02-DCCCA
000012EB 01                                 2002+         dc xl1'01' format one                                          02-DCCCA
000012EC 00000000                           2003+         dc a(0)                                                        02-DCCCA
000012F0 000000000000135A                   2004+         dc ad(@PER_974)                                                02-DCCCA
000012F8 00000000000000B8                   2005+         dc ad(184)                                                     02-DCCCA
00001300 0000000000000000                   2006+         dc ad(0)                                                       02-DCCCA
00001308 0000000000001000                   2007+         dc ad(4096)                                                    02-DCCCA
00001310 20                                 2008+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001311 03                                 2009+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001312 03                                 2010+         dc al1(3)                                                      02-DCCCA
00001313 08                                 2011+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001314 00                                 2012+         dc bl.8'00000000'                                              02-DCCCA
00001315 000000                             2013+         dc al3(0)                                                      02-DCCCA
00001318 00000000000012C0                   2014+         dc ad(@LNAME974)                                               02-DCCCA
00001320                                    2015+         ds 0d                                                          02-DCCCA
00001320 00000000000012E8                   2016+         dc ad($eye0050)                                                02-DCCCA
00001328 0000000000000000                   2017+         dc ad(0)                                                       02-DCCCA
00001330                                    2018+         ds    0d                                                       01-DCCPR
00001330                                    2019+rd_hdr_median$Equivalent$Value ds 0d                                    01-DCCPR
00001330                                    2020+@REGION_974_1 ds 0h                                                     01-DCCPR
00001330 EBEC D008 0024          00000008   2021+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001336 E3E0 D088 0004          00000088   2022+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000133C E3C0 D090 0004          00000090   2023+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001342 B904 002E                          2024+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001346 E3B0 C018 0004          00000018   2025+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000134C A7EB 00B8               000000B8   2026+         aghi  14,184              increase by frame size               01-DCCPR
00001350 E3E0 C020 0021          00000020   2027+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001356 4720 B020               00000020   2028+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000135A                                    2029+@PER_974 ds    0h                                                       01-DCCPR
0000135A EBDE 2080 0024          00000080   2030+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001360 E3C0 2090 0024          00000090   2031+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001366 B904 00D2                          2032+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page   44 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000136A B904 00CF                          2033+         lgr   12,15               set base reg                         01-DCCPR
                        00001330            2034+         using @REGION_974_1,12                                         01-DCCPR
0000136E B904 0021                          2035          LGR   2,1         ; ptr to parm area
                                            2036 * ******* End of Prologue
                                            2037 * *
                                            2038 * ***           return rd_hdr_lowestEquivalentValue(hdr, v) +
00001372 E3F0 2000 0004          00000000   2039          LG    15,0(0,2)   ; hdr
00001378 E3F0 D0A8 0024          000000A8   2040          STG   15,168(0,13)
0000137E E3F0 2008 0004          00000008   2041          LG    15,8(0,2)   ; v
00001384 E3F0 D0B0 0024          000000B0   2042          STG   15,176(0,13)
0000138A 4110 D0A8               000000A8   2043          LA    1,168(0,13)
0000138E E3F0 C0F0 0004          00001420   2044          LG    15,@lit_974_45 ; rd_hdr_lowestEquivalentValue
00001394                                    2045 @@gen_label61 DS    0H
00001394 05EF                               2046          BALR  14,15
00001396                                    2047 @@gen_label62 DS    0H
00001396 B904 003F                          2048          LGR   3,15
                                            2049 * ***                   (rd_hdr_sizeOfEquivalentValueRange(hdr, v) >> \
                                            2050 * 1);
0000139A E3F0 2000 0004          00000000   2051          LG    15,0(0,2)   ; hdr
000013A0 E3F0 D0A8 0024          000000A8   2052          STG   15,168(0,13)
000013A6 E3F0 2008 0004          00000008   2053          LG    15,8(0,2)   ; v
000013AC E3F0 D0B0 0024          000000B0   2054          STG   15,176(0,13)
000013B2 4110 D0A8               000000A8   2055          LA    1,168(0,13)
000013B6 E3F0 C0F8 0004          00001428   2056          LG    15,@lit_974_46 ; rd_hdr_sizeOfEquivalentValueRange
000013BC                                    2057 @@gen_label63 DS    0H
000013BC 05EF                               2058          BALR  14,15
000013BE                                    2059 @@gen_label64 DS    0H
000013BE EBFF 0001 000A          00000001   2060          SRAG  15,15,1(0)
000013C4 B908 003F                          2061          AGR   3,15
000013C8 B904 00F3                          2062          LGR   15,3
                                            2063 * ***   }
                                            2064 * * **** Start of Epilogue
                                            2065          DCCEPIL
000013CC                                    2066+         ds 0h                                                          01-DCCEP
                                            2067+* Epilog
000013CC D707 D088 D088 00000088 00000088   2068+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000013D2 E3D0 D080 0004          00000080   2069+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000013D8 E3C0 D090 0004          00000090   2070+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000013DE E3B0 C018 0004          00000018   2071+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000013E4 E3C0 B010 0021          00000010   2072+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000013EA E3E0 D008 0004          00000008   2073+         lg  14,8(0,13)          load up return address                 01-DCCEP
000013F0 EB1C D020 0004          00000020   2074+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000013F6 078E                               2075+         bcr 8,14                if same dsab, just return              01-DCCEP
000013F8 E3F0 D010 0024          00000010   2076+         stg 15,16(0,13)         save return code                       01-DCCEP
000013FE E300 D018 0024          00000018   2077+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001404 E3F0 D090 0004          00000090   2078+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000140A E3F0 F018 0004          00000018   2079+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001410 47F0 F040               00000040   2080+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2081+* End of Epilog
                                            2082 * * **** End of Epilogue
00001418                                    2083          DS    0D
00001418 000000B8                           2084 @FRAMESIZE_974 DC F'184'
                                                                                                                           Page   45 
  Active Usings: @REGION_974_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000141C 00000000
00001420 0000000000000F08                   2085 @lit_974_45 DC AD(rd_hdr_lowest$Equivalent$Value)
00001428 0000000000000D88                   2086 @lit_974_46 DC AD(rd_hdr_size$Of$Equivalent$Value$Range)
                                            2087          DROP  12
                                            2088 *
                                            2089 *   DSECT for automatic variables in "rd_hdr_medianEquivalentValue"
                                            2090 *      (FUNCTION #974)
                                            2091 *
00000000                00000000 000000A8   2092 @AUTO#rd_hdr_median$Equivalent$Value DSECT
00000000                                    2093          DS    XL168
                                            2094 *
00001430                00000000 000056F0   2095 @CODE    CSECT
                                            2096 *
                                            2097 *
                                            2098 *
                                            2099 * ....... start of rd_hdr_countsIndexFor
00001430                                    2100 @LNAME975 DS   0H
00001430 00000015                           2101          DC    X'00000015'
00001434 99846D8884996D83                   2102          DC    C'rd_hdr_countsIndexFor'
00001449 00                                 2103          DC    X'00'
                                            2104 rd_hdr_counts$Index$For DCCPRLG CINDEX=975,BASER=12,FRAME=200,ENTRY=NO,*
                                                                ARCH=ZARCH,LNAMEADDR=@LNAME975
                                            2105          macro
                                            2106          dccextrn &m
                                            2107          gblc    &$dccext(1000)
                                            2108          gbla    &$dccexti
                                            2109          lcla    &i
                                            2110 &$dccext(&$dccexti+1) setc    '&m'
                                            2111 &i       seta    1
                                            2112 .loop    aif    (&i gt &$dccexti).around
                                            2113          aif    ('&$dccext(&i)' eq '&m').getout
                                            2114 &i       seta    &i+1
                                            2115          ago     .loop
                                            2116 .around  anop
                                            2117 &$dccexti seta &$dccexti+1
                                            2118          extrn  &m
                                            2119 .getout  anop
                                            2120          mend
00001450                                    2121+$eye0053    ds    0d                                                    02-DCCCA
00001450 C4C3C3                             2122+         dc cl3'DCC'                                                    02-DCCCA
00001453 01                                 2123+         dc xl1'01' format one                                          02-DCCCA
00001454 00000000                           2124+         dc a(0)                                                        02-DCCCA
00001458 00000000000014C2                   2125+         dc ad(@PER_975)                                                02-DCCCA
00001460 00000000000000C8                   2126+         dc ad(200)                                                     02-DCCCA
00001468 0000000000000000                   2127+         dc ad(0)                                                       02-DCCCA
00001470 0000000000001000                   2128+         dc ad(4096)                                                    02-DCCCA
00001478 20                                 2129+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001479 03                                 2130+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000147A 03                                 2131+         dc al1(3)                                                      02-DCCCA
0000147B 08                                 2132+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000147C 00                                 2133+         dc bl.8'00000000'                                              02-DCCCA
0000147D 000000                             2134+         dc al3(0)                                                      02-DCCCA
                                                                                                                           Page   46 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001480 0000000000001430                   2135+         dc ad(@LNAME975)                                               02-DCCCA
00001488                                    2136+         ds 0d                                                          02-DCCCA
00001488 0000000000001450                   2137+         dc ad($eye0053)                                                02-DCCCA
00001490 0000000000000000                   2138+         dc ad(0)                                                       02-DCCCA
00001498                                    2139+         ds    0d                                                       01-DCCPR
00001498                                    2140+rd_hdr_counts$Index$For ds 0d                                           01-DCCPR
00001498                                    2141+@REGION_975_1 ds 0h                                                     01-DCCPR
00001498 EBEC D008 0024          00000008   2142+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000149E E3E0 D088 0004          00000088   2143+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000014A4 E3C0 D090 0004          00000090   2144+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000014AA B904 002E                          2145+         lgr   2,14                copy addr of our savearea            01-DCCPR
000014AE E3B0 C018 0004          00000018   2146+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000014B4 A7EB 00C8               000000C8   2147+         aghi  14,200              increase by frame size               01-DCCPR
000014B8 E3E0 C020 0021          00000020   2148+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000014BE 4720 B020               00000020   2149+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000014C2                                    2150+@PER_975 ds    0h                                                       01-DCCPR
000014C2 EBDE 2080 0024          00000080   2151+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000014C8 E3C0 2090 0024          00000090   2152+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000014CE B904 00D2                          2153+         lgr   13,2                set real frame pointer               01-DCCPR
000014D2 B904 00CF                          2154+         lgr   12,15               set base reg                         01-DCCPR
                        00001498            2155+         using @REGION_975_1,12                                         01-DCCPR
000014D6 B904 0041                          2156          LGR   4,1         ; ptr to parm area
                                            2157 * ******* End of Prologue
                                            2158 * *
                                            2159 * ***           int32_t bucketIdx = rd_hdr_getBucketIndex(hdr, v);
000014DA E320 4000 0004          00000000   2160          LG    2,0(0,4)    ; hdr
000014E0 E320 D0B0 0024          000000B0   2161          STG   2,176(0,13)
000014E6 E3F0 4008 0004          00000008   2162          LG    15,8(0,4)   ; v
000014EC E3F0 D0B8 0024          000000B8   2163          STG   15,184(0,13)
000014F2 4110 D0B0               000000B0   2164          LA    1,176(0,13)
000014F6 E3F0 C110 0004          000015A8   2165          LG    15,@lit_975_48 ; rd_hdr_getBucketIndex
000014FC                                    2166 @@gen_label65 DS    0H
000014FC 05EF                               2167          BALR  14,15
000014FE                                    2168 @@gen_label66 DS    0H
000014FE 183F                               2169          LR    3,15
                                            2170 * ***           int32_t subBucketIdx = rd_hdr_getSubBucketIdx(hdr, v, \
                                            2171 * bucketIdx);
00001500 E320 D0B0 0024          000000B0   2172          STG   2,176(0,13)
00001506 E310 4008 0004          00000008   2173          LG    1,8(0,4)    ; v
0000150C E310 D0B8 0024          000000B8   2174          STG   1,184(0,13)
00001512 B914 00F3                          2175          LGFR  15,3
00001516 E3F0 D0C0 0024          000000C0   2176          STG   15,192(0,13)
0000151C 4110 D0B0               000000B0   2177          LA    1,176(0,13)
00001520 E3F0 C118 0004          000015B0   2178          LG    15,@lit_975_49 ; rd_hdr_getSubBucketIdx
00001526                                    2179 @@gen_label67 DS    0H
00001526 05EF                               2180          BALR  14,15
00001528                                    2181 @@gen_label68 DS    0H
                                            2182 * ***           return rd_hdr_countsIndex(hdr, bucketIdx, subBucketIdx\
                                            2183 * );
00001528 E320 D0B0 0024          000000B0   2184          STG   2,176(0,13)
0000152E B914 0013                          2185          LGFR  1,3
00001532 E310 D0B8 0024          000000B8   2186          STG   1,184(0,13)
                                                                                                                           Page   47 
  Active Usings: @REGION_975_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001538 B914 00FF                          2187          LGFR  15,15
0000153C E3F0 D0C0 0024          000000C0   2188          STG   15,192(0,13)
00001542 4110 D0B0               000000B0   2189          LA    1,176(0,13)
00001546 E3F0 C120 0004          000015B8   2190          LG    15,@lit_975_50 ; rd_hdr_countsIndex
0000154C                                    2191 @@gen_label69 DS    0H
0000154C 05EF                               2192          BALR  14,15
0000154E                                    2193 @@gen_label70 DS    0H
0000154E B914 00FF                          2194          LGFR  15,15
                                            2195 * ***   }
                                            2196 * * **** Start of Epilogue
                                            2197          DCCEPIL
00001552                                    2198+         ds 0h                                                          01-DCCEP
                                            2199+* Epilog
00001552 D707 D088 D088 00000088 00000088   2200+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001558 E3D0 D080 0004          00000080   2201+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000155E E3C0 D090 0004          00000090   2202+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001564 E3B0 C018 0004          00000018   2203+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000156A E3C0 B010 0021          00000010   2204+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001570 E3E0 D008 0004          00000008   2205+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001576 EB1C D020 0004          00000020   2206+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000157C 078E                               2207+         bcr 8,14                if same dsab, just return              01-DCCEP
0000157E E3F0 D010 0024          00000010   2208+         stg 15,16(0,13)         save return code                       01-DCCEP
00001584 E300 D018 0024          00000018   2209+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000158A E3F0 D090 0004          00000090   2210+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001590 E3F0 F018 0004          00000018   2211+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001596 47F0 F040               00000040   2212+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2213+* End of Epilog
                                            2214 * * **** End of Epilogue
000015A0                                    2215          DS    0D
000015A0 000000C8                           2216 @FRAMESIZE_975 DC F'200'
000015A4 00000000
000015A8 0000000000000B18                   2217 @lit_975_48 DC AD(rd_hdr_get$Bucket$Index)
000015B0 0000000000000C50                   2218 @lit_975_49 DC AD(rd_hdr_get$Sub$Bucket$Idx)
000015B8 0000000000000858                   2219 @lit_975_50 DC AD(rd_hdr_counts$Index)
                                            2220          DROP  12
                                            2221 *
                                            2222 *   DSECT for automatic variables in "rd_hdr_countsIndexFor"
                                            2223 *      (FUNCTION #975)
                                            2224 *
00000000                00000000 000000AC   2225 @AUTO#rd_hdr_counts$Index$For DSECT
00000000                                    2226          DS    XL168
000000A8                                    2227 rd_hdr_counts$Index$For#sub$Bucket$Idx#0 DS 1F ; subBucketIdx
000000AC                000000AC 000000A8   2228          ORG   @AUTO#rd_hdr_counts$Index$For+168
000000A8                                    2229 rd_hdr_counts$Index$For#bucket$Idx#0 DS 1F ; bucketIdx
                                            2230 *
000015C0                00000000 000056F0   2231 @CODE    CSECT
                                            2232 *
                                            2233 *
                                            2234 *
                                            2235 * ....... start of rd_hdr_iter_next
000015C0                                    2236 @LNAME976 DS   0H
000015C0 00000010                           2237          DC    X'00000010'
                                                                                                                           Page   48 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000015C4 99846D8884996D89                   2238          DC    C'rd_hdr_iter_next'
000015D4 00                                 2239          DC    X'00'
                                            2240 rd_hdr_iter_next DCCPRLG CINDEX=976,BASER=12,FRAME=200,ENTRY=NO,ARCH=ZA*
                                                                RCH,LNAMEADDR=@LNAME976
                                            2241          macro
                                            2242          dccextrn &m
                                            2243          gblc    &$dccext(1000)
                                            2244          gbla    &$dccexti
                                            2245          lcla    &i
                                            2246 &$dccext(&$dccexti+1) setc    '&m'
                                            2247 &i       seta    1
                                            2248 .loop    aif    (&i gt &$dccexti).around
                                            2249          aif    ('&$dccext(&i)' eq '&m').getout
                                            2250 &i       seta    &i+1
                                            2251          ago     .loop
                                            2252 .around  anop
                                            2253 &$dccexti seta &$dccexti+1
                                            2254          extrn  &m
                                            2255 .getout  anop
                                            2256          mend
000015D8                                    2257+$eye0056    ds    0d                                                    02-DCCCA
000015D8 C4C3C3                             2258+         dc cl3'DCC'                                                    02-DCCCA
000015DB 01                                 2259+         dc xl1'01' format one                                          02-DCCCA
000015DC 00000000                           2260+         dc a(0)                                                        02-DCCCA
000015E0 000000000000164A                   2261+         dc ad(@PER_976)                                                02-DCCCA
000015E8 00000000000000C8                   2262+         dc ad(200)                                                     02-DCCCA
000015F0 0000000000000000                   2263+         dc ad(0)                                                       02-DCCCA
000015F8 0000000000001000                   2264+         dc ad(4096)                                                    02-DCCCA
00001600 20                                 2265+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001601 03                                 2266+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001602 03                                 2267+         dc al1(3)                                                      02-DCCCA
00001603 08                                 2268+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001604 00                                 2269+         dc bl.8'00000000'                                              02-DCCCA
00001605 000000                             2270+         dc al3(0)                                                      02-DCCCA
00001608 00000000000015C0                   2271+         dc ad(@LNAME976)                                               02-DCCCA
00001610                                    2272+         ds 0d                                                          02-DCCCA
00001610 00000000000015D8                   2273+         dc ad($eye0056)                                                02-DCCCA
00001618 0000000000000000                   2274+         dc ad(0)                                                       02-DCCCA
00001620                                    2275+         ds    0d                                                       01-DCCPR
00001620                                    2276+rd_hdr_iter_next ds 0d                                                  01-DCCPR
00001620                                    2277+@REGION_976_1 ds 0h                                                     01-DCCPR
00001620 EBEC D008 0024          00000008   2278+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001626 E3E0 D088 0004          00000088   2279+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000162C E3C0 D090 0004          00000090   2280+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001632 B904 002E                          2281+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001636 E3B0 C018 0004          00000018   2282+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000163C A7EB 00C8               000000C8   2283+         aghi  14,200              increase by frame size               01-DCCPR
00001640 E3E0 C020 0021          00000020   2284+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001646 4720 B020               00000020   2285+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000164A                                    2286+@PER_976 ds    0h                                                       01-DCCPR
0000164A EBDE 2080 0024          00000080   2287+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001650 E3C0 2090 0024          00000090   2288+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
                                                                                                                           Page   49 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001656 B904 00D2                          2289+         lgr   13,2                set real frame pointer               01-DCCPR
0000165A B904 00CF                          2290+         lgr   12,15               set base reg                         01-DCCPR
                        00001620            2291+         using @REGION_976_1,12                                         01-DCCPR
                                            2292 * ******* End of Prologue
                                            2293 * *
                                            2294 * ***           const rd_hdr_histogram_t *hdr = it->hdr;
0000165E E320 1000 0004          00000000   2295          LG    2,0(0,1)    ; it
00001664 E330 2000 0004          00000000   2296          LG    3,0(0,2)    ; it
                                            2297 * ***
                                            2298 * ***           if (((it->countToIdx >= hdr->totalCount)))
0000166A E3F0 2018 0004          00000018   2299          LG    15,24(0,2)  ; offset of countToIdx in rd_hdr_iter_s
00001670 E3F0 3040 0020          00000040   2300          CG    15,64(0,3)
00001676 4740 C088               000016A8   2301          BL    @L67
                                            2302 * ***                   return 0;
0000167A A7F9 0000               00000000   2303          LGHI  15,0        ; 0
0000167E 47F0 C15E               0000177E   2304          B     @ret_lab_976
00001688                                    2305          DS    0D
00001688 000000C8                           2306 @FRAMESIZE_976 DC F'200'
0000168C 00000000
00001690 00000000000008F8                   2307 @lit_976_54 DC AD(rd_hdr_get$Count$At$Index)
00001698 0000000000000CE8                   2308 @lit_976_55 DC AD(rd_hdr_value$From$Index)
000016A0 0000000000001200                   2309 @lit_976_56 DC AD(rd_hdr_highest$Equivalent$Value)
000016A8                                    2310 @L67     DS    0H
                                            2311 * ***
                                            2312 * ***           it->subBucketIdx++;
000016A8 58F0 200C               0000000C   2313          L     15,12(0,2)
000016AC A7FA 0001               00000001   2314          AHI   15,1
000016B0 50F0 200C               0000000C   2315          ST    15,12(0,2)
                                            2316 * ***           if (((it->subBucketIdx >= hdr->subBucketCount))) {
000016B4 59F0 3030               00000030   2317          C     15,48(0,3)
000016B8 4740 C0B0               000016D0   2318          BL    @L68
                                            2319 * ***                   it->subBucketIdx = hdr->subBucketHalfCount;
000016BC 58F0 3024               00000024   2320          L     15,36(0,3)  ; offset of subBucketHalfCount in rd_hdr_his*
                                                                togram_s
000016C0 50F0 200C               0000000C   2321          ST    15,12(0,2)  ; offset of subBucketIdx in rd_hdr_iter_s
                                            2322 * ***                   it->bucketIdx++;
000016C4 58F0 2008               00000008   2323          L     15,8(0,2)
000016C8 A7FA 0001               00000001   2324          AHI   15,1
000016CC 50F0 2008               00000008   2325          ST    15,8(0,2)
                                            2326 * ***           }
000016D0                                    2327 @L68     DS    0H
                                            2328 * ***
                                            2329 * ***           if (((it->bucketIdx >= hdr->bucketCount)))
000016D0 58F0 2008               00000008   2330          L     15,8(0,2)   ; offset of bucketIdx in rd_hdr_iter_s
000016D4 59F0 3034               00000034   2331          C     15,52(0,3)
000016D8 4740 C0C4               000016E4   2332          BL    @L69
                                            2333 * ***                   return 0;
000016DC A7F9 0000               00000000   2334          LGHI  15,0        ; 0
000016E0 47F0 C15E               0000177E   2335          B     @ret_lab_976
000016E4                                    2336 @L69     DS    0H
                                            2337 * ***
                                            2338 * ***           it->countAtIdx = rd_hdr_getCountAtIndex(hdr,
                                                                                                                           Page   50 
  Active Usings: @REGION_976_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2339 * ***                                                   it->bucketIdx,
                                            2340 * ***                                                   it->subBucketI\
                                            2341 * dx);
000016E4 E330 D0B0 0024          000000B0   2342          STG   3,176(0,13)
000016EA E3F0 2008 0014          00000008   2343          LGF   15,8(0,2)
000016F0 E3F0 D0B8 0024          000000B8   2344          STG   15,184(0,13)
000016F6 E3F0 200C 0014          0000000C   2345          LGF   15,12(0,2)
000016FC E3F0 D0C0 0024          000000C0   2346          STG   15,192(0,13)
00001702 4110 D0B0               000000B0   2347          LA    1,176(0,13)
00001706 E3F0 C070 0004          00001690   2348          LG    15,@lit_976_54 ; rd_hdr_getCountAtIndex
0000170C                                    2349 @@gen_label74 DS    0H
0000170C 05EF                               2350          BALR  14,15
0000170E                                    2351 @@gen_label75 DS    0H
0000170E E3F0 2010 0024          00000010   2352          STG   15,16(0,2)
                                            2353 * ***           it->countToIdx += it->countAtIdx;
00001714 E3F0 2018 0004          00000018   2354          LG    15,24(0,2)
0000171A E3F0 2010 0008          00000010   2355          AG    15,16(0,2)
00001720 E3F0 2018 0024          00000018   2356          STG   15,24(0,2)
                                            2357 * ***           it->valueFromIdx = rd_hdr_valueFromIndex(hdr,
                                            2358 * ***                                                    it->bucketIdx\
                                            2359 * ,
                                            2360 * ***                                                    it->subBucket\
                                            2361 * Idx);
00001726 E330 D0B0 0024          000000B0   2362          STG   3,176(0,13)
0000172C E3F0 2008 0014          00000008   2363          LGF   15,8(0,2)
00001732 E3F0 D0B8 0024          000000B8   2364          STG   15,184(0,13)
00001738 E3F0 200C 0014          0000000C   2365          LGF   15,12(0,2)
0000173E E3F0 D0C0 0024          000000C0   2366          STG   15,192(0,13)
00001744 4110 D0B0               000000B0   2367          LA    1,176(0,13)
00001748 E3F0 C078 0004          00001698   2368          LG    15,@lit_976_55 ; rd_hdr_valueFromIndex
0000174E                                    2369 @@gen_label76 DS    0H
0000174E 05EF                               2370          BALR  14,15
00001750                                    2371 @@gen_label77 DS    0H
00001750 E3F0 2020 0024          00000020   2372          STG   15,32(0,2)
                                            2373 * ***           it->highestEquivalentValue =
                                            2374 * ***                   rd_hdr_highestEquivalentValue(hdr, it->valueFr\
                                            2375 * omIdx);
00001756 E330 D0B0 0024          000000B0   2376          STG   3,176(0,13)
0000175C E3F0 2020 0004          00000020   2377          LG    15,32(0,2)
00001762 E3F0 D0B8 0024          000000B8   2378          STG   15,184(0,13)
00001768 4110 D0B0               000000B0   2379          LA    1,176(0,13)
0000176C E3F0 C080 0004          000016A0   2380          LG    15,@lit_976_56 ; rd_hdr_highestEquivalentValue
00001772                                    2381 @@gen_label78 DS    0H
00001772 05EF                               2382          BALR  14,15
00001774                                    2383 @@gen_label79 DS    0H
00001774 E3F0 2028 0024          00000028   2384          STG   15,40(0,2)
                                            2385 * ***
                                            2386 * ***           return 1;
0000177A A7F9 0001               00000001   2387          LGHI  15,1        ; 1
                                            2388 * ***   }
0000177E                                    2389 @ret_lab_976 DS 0H
                                            2390 * * **** Start of Epilogue
                                                                                                                           Page   51 
  Active Usings: @REGION_976_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2391          DCCEPIL
0000177E                                    2392+         ds 0h                                                          01-DCCEP
                                            2393+* Epilog
0000177E D707 D088 D088 00000088 00000088   2394+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001784 E3D0 D080 0004          00000080   2395+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000178A E3C0 D090 0004          00000090   2396+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001790 E3B0 C018 0004          00000018   2397+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001796 E3C0 B010 0021          00000010   2398+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000179C E3E0 D008 0004          00000008   2399+         lg  14,8(0,13)          load up return address                 01-DCCEP
000017A2 EB1C D020 0004          00000020   2400+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000017A8 078E                               2401+         bcr 8,14                if same dsab, just return              01-DCCEP
000017AA E3F0 D010 0024          00000010   2402+         stg 15,16(0,13)         save return code                       01-DCCEP
000017B0 E300 D018 0024          00000018   2403+         stg 0,24(0,13)          save more return code                  01-DCCEP
000017B6 E3F0 D090 0004          00000090   2404+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000017BC E3F0 F018 0004          00000018   2405+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000017C2 47F0 F040               00000040   2406+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2407+* End of Epilog
                                            2408 * * **** End of Epilogue
                                            2409          DROP  12
                                            2410 *
                                            2411 *   DSECT for automatic variables in "rd_hdr_iter_next"
                                            2412 *      (FUNCTION #976)
                                            2413 *
00000000                00000000 000000A8   2414 @AUTO#rd_hdr_iter_next DSECT
00000000                                    2415          DS    XL168
                                            2416 *
000017C6                00000000 000056F0   2417 @CODE    CSECT
                                            2418 *
                                            2419 *
                                            2420 *
                                            2421 * ....... start of rd_hdr_histogram_stddev
                                            2422 rd_hdr_histogram_stddev ALIAS X'99846D8884996D8889A2A396879981946DA2A38*
                                                                48485A5'
000017C6                                    2423 @LNAME956 DS   0H
000017C6 00000017                           2424          DC    X'00000017'
000017CA 99846D8884996D88                   2425          DC    C'rd_hdr_histogram_stddev'
000017E1 00                                 2426          DC    X'00'
                                            2427 rd_hdr_histogram_stddev DCCPRLG CINDEX=956,BASER=12,FRAME=264,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME956
                                            2428          macro
                                            2429          dccextrn &m
                                            2430          gblc    &$dccext(1000)
                                            2431          gbla    &$dccexti
                                            2432          lcla    &i
                                            2433 &$dccext(&$dccexti+1) setc    '&m'
                                            2434 &i       seta    1
                                            2435 .loop    aif    (&i gt &$dccexti).around
                                            2436          aif    ('&$dccext(&i)' eq '&m').getout
                                            2437 &i       seta    &i+1
                                            2438          ago     .loop
                                            2439 .around  anop
                                            2440 &$dccexti seta &$dccexti+1
                                                                                                                           Page   52 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2441          extrn  &m
                                            2442 .getout  anop
                                            2443          mend
000017E8                                    2444+$eye0059    ds    0d                                                    02-DCCCA
000017E8 C4C3C3                             2445+         dc cl3'DCC'                                                    02-DCCCA
000017EB 01                                 2446+         dc xl1'01' format one                                          02-DCCCA
000017EC 00000000                           2447+         dc a(0)                                                        02-DCCCA
000017F0 000000000000185A                   2448+         dc ad(@PER_956)                                                02-DCCCA
000017F8 0000000000000108                   2449+         dc ad(264)                                                     02-DCCCA
00001800 0000000000000000                   2450+         dc ad(0)                                                       02-DCCCA
00001808 0000000000001000                   2451+         dc ad(4096)                                                    02-DCCCA
00001810 20                                 2452+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001811 03                                 2453+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001812 03                                 2454+         dc al1(3)                                                      02-DCCCA
00001813 08                                 2455+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001814 00                                 2456+         dc bl.8'00000000'                                              02-DCCCA
00001815 000000                             2457+         dc al3(0)                                                      02-DCCCA
00001818 00000000000017C6                   2458+         dc ad(@LNAME956)                                               02-DCCCA
00001820                                    2459+         ds 0d                                                          02-DCCCA
00001820 00000000000017E8                   2460+         dc ad($eye0059)                                                02-DCCCA
00001828 0000000000000000                   2461+         dc ad(0)                                                       02-DCCCA
00001830                                    2462+         ds    0d                                                       01-DCCPR
                                            2463+         entry rd_hdr_histogram_stddev                                  01-DCCPR
00001830                                    2464+rd_hdr_histogram_stddev ds 0d                                           01-DCCPR
00001830                                    2465+@REGION_956_1 ds 0h                                                     01-DCCPR
00001830 EBEC D008 0024          00000008   2466+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001836 E3E0 D088 0004          00000088   2467+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000183C E3C0 D090 0004          00000090   2468+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001842 B904 002E                          2469+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001846 E3B0 C018 0004          00000018   2470+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000184C A7EB 0108               00000108   2471+         aghi  14,264              increase by frame size               01-DCCPR
00001850 E3E0 C020 0021          00000020   2472+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001856 4720 B020               00000020   2473+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000185A                                    2474+@PER_956 ds    0h                                                       01-DCCPR
0000185A EBDE 2080 0024          00000080   2475+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001860 E3C0 2090 0024          00000090   2476+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001866 B904 00D2                          2477+         lgr   13,2                set real frame pointer               01-DCCPR
0000186A B904 00CF                          2478+         lgr   12,15               set base reg                         01-DCCPR
                        00001830            2479+         using @REGION_956_1,12                                         01-DCCPR
                                            2480 * ******* End of Prologue
                                            2481 * *
0000186E E320 1000 0004          00000000   2482          LG    2,0(0,1)    ; hdr
                                            2483 * ***           double mean;
                                            2484 * ***           double geometricDevTotal = 0.0;
00001874 B375 00F0                          2485          LZDR  15
00001878 60F0 D0F8               000000F8   2486          STD   15,248(0,13) ; spill
                                            2487 * ***           rd_hdr_iter_t it = { . hdr = hdr, .subBucketIdx = -1 }\
                                            2488 * ;
0000187C E320 D0B8 0024          000000B8   2489          STG   2,184(0,13)
00001882 E54C D0C4 FFFF          000000C4   2490          MVHI  196(13),-1
                                            2491 * setting 4 bytes to 0x00
00001888 D703 D0C0 D0C0 000000C0 000000C0   2492          XC    192(4,13),192(13)
                                                                                                                           Page   53 
  Active Usings: @REGION_956_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2493 * setting 32 bytes to 0x00
0000188E D71F D0C8 D0C8 000000C8 000000C8   2494          XC    200(32,13),200(13)
                                            2495 * ***
                                            2496 * ***           if (hdr->totalCount == 0)
00001894 E558 2040 0000          00000040   2497          CGHSI 64(2),0
0000189A 4770 C0A0               000018D0   2498          BNE   @L70
                                            2499 * ***                   return 0;
0000189E B375 0000                          2500          LZDR  0
000018A2 47F0 C140               00001970   2501          B     @ret_lab_956
000018A8                                    2502          DS    0D
000018A8 00000108                           2503 @FRAMESIZE_956 DC F'264'
000018AC 00000000
000018B0 0000000000001D18                   2504 @lit_956_59 DC AD(rd_hdr_histogram_mean)
000018B8 0000000000001330                   2505 @lit_956_60 DC AD(rd_hdr_median$Equivalent$Value)
000018C0 0000000000001620                   2506 @lit_956_61 DC AD(rd_hdr_iter_next)
000018C8 0000000000000000                   2507 @lit_956_62 DC AD(sqrt)
000018D0                                    2508 @L70     DS    0H
                                            2509 * ***
                                            2510 * ***           mean = rd_hdr_histogram_mean(hdr);
000018D0 E320 D0E8 0024          000000E8   2511          STG   2,232(0,13)
000018D6 4110 D0E8               000000E8   2512          LA    1,232(0,13)
000018DA E3F0 C080 0004          000018B0   2513          LG    15,@lit_956_59 ; rd_hdr_histogram_mean
000018E0                                    2514 @@gen_label81 DS    0H
000018E0 05EF                               2515          BALR  14,15
000018E2                                    2516 @@gen_label82 DS    0H
000018E2 6000 D100               00000100   2517          STD   0,256(0,13) ; spill
                                            2518 * ***
                                            2519 * ***
                                            2520 * ***           while (rd_hdr_iter_next(&it)) {
000018E6 47F0 C104               00001934   2521          B     @L74
000018EA                                    2522 @L73     DS    0H
                                            2523 * ***                   double dev;
                                            2524 * ***
                                            2525 * ***                   if (it.countAtIdx == 0)
000018EA E558 D0C8 0000          000000C8   2526          CGHSI 200(13),0
000018F0 4780 C104               00001934   2527          BE    @L74
                                            2528 * ***                           continue;
000018F4                                    2529 @L75     DS    0H
                                            2530 * ***
                                            2531 * ***                   dev = (double)rd_hdr_medianEquivalentValue(
                                            2532 * ***                           hdr, it.valueFromIdx) - mean;
000018F4 E320 D0E8 0024          000000E8   2533          STG   2,232(0,13)
000018FA E3F0 D0D8 0004          000000D8   2534          LG    15,216(0,13)
00001900 E3F0 D0F0 0024          000000F0   2535          STG   15,240(0,13)
00001906 4110 D0E8               000000E8   2536          LA    1,232(0,13)
0000190A E3F0 C088 0004          000018B8   2537          LG    15,@lit_956_60 ; rd_hdr_medianEquivalentValue
00001910                                    2538 @@gen_label84 DS    0H
00001910 05EF                               2539          BALR  14,15
00001912                                    2540 @@gen_label85 DS    0H
00001912 B3C5 00FF                          2541          CDGR  15,15
00001916 6800 D100               00000100   2542          LD    0,256(0,13) ; spill
0000191A 2BF0                               2543          SDR   15,0
                                                                                                                           Page   54 
  Active Usings: @REGION_956_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2544 * ***                   geometricDevTotal += (dev * dev) * (double)it.\
                                            2545 * countAtIdx;
0000191C 2CFF                               2546          MDR   15,15
0000191E E3F0 D0C8 0004          000000C8   2547          LG    15,200(0,13) ; offset of countAtIdx in rd_hdr_iter_s
00001924 B3C5 00DF                          2548          CDGR  13,15
00001928 2CFD                               2549          MDR   15,13
0000192A 68D0 D0F8               000000F8   2550          LD    13,248(0,13) ; spill
0000192E 2ADF                               2551          ADR   13,15
00001930 60D0 D0F8               000000F8   2552          STD   13,248(0,13) ; spill
                                            2553 * ***           }
00001934                                    2554 @L72     DS    0H
00001934                                    2555 @L74     DS    0H
00001934 41F0 D0B8               000000B8   2556          LA    15,184(0,13)
00001938 E3F0 D0E8 0024          000000E8   2557          STG   15,232(0,13)
0000193E 4110 D0E8               000000E8   2558          LA    1,232(0,13)
00001942 E3F0 C090 0004          000018C0   2559          LG    15,@lit_956_61 ; rd_hdr_iter_next
00001948                                    2560 @@gen_label86 DS    0H
00001948 05EF                               2561          BALR  14,15
0000194A                                    2562 @@gen_label87 DS    0H
0000194A 12FF                               2563          LTR   15,15
0000194C 4770 C0BA               000018EA   2564          BNZ   @L73
                                            2565 * ***
                                            2566 * ***           return sqrt(geometricDevTotal / (double)hdr->totalCoun\
                                            2567 * t);
00001950 E3F0 2040 0004          00000040   2568          LG    15,64(0,2)  ; offset of totalCount in rd_hdr_histogram_s
00001956 B3C5 00FF                          2569          CDGR  15,15
0000195A 68D0 D0F8               000000F8   2570          LD    13,248(0,13) ; spill
0000195E 2DDF                               2571          DDR   13,15
00001960 60D0 D0E8               000000E8   2572          STD   13,232(0,13)
00001964 4110 D0E8               000000E8   2573          LA    1,232(0,13)
00001968 E3F0 C098 0004          000018C8   2574          LG    15,@lit_956_62 ; sqrt
0000196E                                    2575 @@gen_label89 DS    0H
0000196E 05EF                               2576          BALR  14,15
00001970                                    2577 @@gen_label90 DS    0H
                                            2578 * ***   }
00001970                                    2579 @ret_lab_956 DS 0H
                                            2580 * * **** Start of Epilogue
                                            2581          DCCEPIL
00001970                                    2582+         ds 0h                                                          01-DCCEP
                                            2583+* Epilog
00001970 D707 D088 D088 00000088 00000088   2584+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001976 E3D0 D080 0004          00000080   2585+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000197C E3C0 D090 0004          00000090   2586+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001982 E3B0 C018 0004          00000018   2587+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001988 E3C0 B010 0021          00000010   2588+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000198E E3E0 D008 0004          00000008   2589+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001994 EB1C D020 0004          00000020   2590+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000199A 078E                               2591+         bcr 8,14                if same dsab, just return              01-DCCEP
0000199C E3F0 D010 0024          00000010   2592+         stg 15,16(0,13)         save return code                       01-DCCEP
000019A2 E300 D018 0024          00000018   2593+         stg 0,24(0,13)          save more return code                  01-DCCEP
000019A8 E3F0 D090 0004          00000090   2594+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000019AE E3F0 F018 0004          00000018   2595+         lg  15,24(0,15)         load dvt address                       01-DCCEP
                                                                                                                           Page   55 
  Active Usings: @REGION_956_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000019B4 47F0 F040               00000040   2596+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2597+* End of Epilog
                                            2598 * * **** End of Epilogue
                                            2599          DROP  12
                                            2600 *
                                            2601 *   DSECT for automatic variables in "rd_hdr_histogram_stddev"
                                            2602 *      (FUNCTION #956)
                                            2603 *
00000000                00000000 000000E8   2604 @AUTO#rd_hdr_histogram_stddev DSECT
00000000                                    2605          DS    XL184
000000B8                                    2606 rd_hdr_histogram_stddev#dev#1 DS 1D ; dev
000000C0                000000C0 000000B8   2607          ORG   @AUTO#rd_hdr_histogram_stddev+184
000000B8                                    2608 rd_hdr_histogram_stddev#it#0 DS 48XL1 ; it
000000E8                000000E8 000000B8   2609          ORG   @AUTO#rd_hdr_histogram_stddev+184
000000B8                                    2610 rd_hdr_histogram_stddev#geometric$Dev$Total#0 DS 1D ; geometricDevTotal
000000C0                000000C0 000000B8   2611          ORG   @AUTO#rd_hdr_histogram_stddev+184
000000B8                                    2612 rd_hdr_histogram_stddev#mean#0 DS 1D ; mean
                                            2613 *
000019B8                00000000 000056F0   2614 @CODE    CSECT
                                            2615 *
                                            2616 *
                                            2617 *
                                            2618 * ....... start of rd_hdr_histogram_max
                                            2619 rd_hdr_histogram_max ALIAS X'99846D8884996D8889A2A396879981946D9481A7'
000019B8                                    2620 @LNAME958 DS   0H
000019B8 00000014                           2621          DC    X'00000014'
000019BC 99846D8884996D88                   2622          DC    C'rd_hdr_histogram_max'
000019D0 00                                 2623          DC    X'00'
                                            2624 rd_hdr_histogram_max DCCPRLG CINDEX=958,BASER=12,FRAME=232,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME958
                                            2625          macro
                                            2626          dccextrn &m
                                            2627          gblc    &$dccext(1000)
                                            2628          gbla    &$dccexti
                                            2629          lcla    &i
                                            2630 &$dccext(&$dccexti+1) setc    '&m'
                                            2631 &i       seta    1
                                            2632 .loop    aif    (&i gt &$dccexti).around
                                            2633          aif    ('&$dccext(&i)' eq '&m').getout
                                            2634 &i       seta    &i+1
                                            2635          ago     .loop
                                            2636 .around  anop
                                            2637 &$dccexti seta &$dccexti+1
                                            2638          extrn  &m
                                            2639 .getout  anop
                                            2640          mend
000019D8                                    2641+$eye0062    ds    0d                                                    02-DCCCA
000019D8 C4C3C3                             2642+         dc cl3'DCC'                                                    02-DCCCA
000019DB 01                                 2643+         dc xl1'01' format one                                          02-DCCCA
000019DC 00000000                           2644+         dc a(0)                                                        02-DCCCA
000019E0 0000000000001A4A                   2645+         dc ad(@PER_958)                                                02-DCCCA
000019E8 00000000000000E8                   2646+         dc ad(232)                                                     02-DCCCA
                                                                                                                           Page   56 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000019F0 0000000000000000                   2647+         dc ad(0)                                                       02-DCCCA
000019F8 0000000000001000                   2648+         dc ad(4096)                                                    02-DCCCA
00001A00 20                                 2649+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001A01 03                                 2650+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001A02 03                                 2651+         dc al1(3)                                                      02-DCCCA
00001A03 08                                 2652+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001A04 00                                 2653+         dc bl.8'00000000'                                              02-DCCCA
00001A05 000000                             2654+         dc al3(0)                                                      02-DCCCA
00001A08 00000000000019B8                   2655+         dc ad(@LNAME958)                                               02-DCCCA
00001A10                                    2656+         ds 0d                                                          02-DCCCA
00001A10 00000000000019D8                   2657+         dc ad($eye0062)                                                02-DCCCA
00001A18 0000000000000000                   2658+         dc ad(0)                                                       02-DCCCA
00001A20                                    2659+         ds    0d                                                       01-DCCPR
                                            2660+         entry rd_hdr_histogram_max                                     01-DCCPR
00001A20                                    2661+rd_hdr_histogram_max ds 0d                                              01-DCCPR
00001A20                                    2662+@REGION_958_1 ds 0h                                                     01-DCCPR
00001A20 EBEC D008 0024          00000008   2663+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001A26 E3E0 D088 0004          00000088   2664+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001A2C E3C0 D090 0004          00000090   2665+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001A32 B904 002E                          2666+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001A36 E3B0 C018 0004          00000018   2667+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001A3C A7EB 00E8               000000E8   2668+         aghi  14,232              increase by frame size               01-DCCPR
00001A40 E3E0 C020 0021          00000020   2669+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001A46 4720 B020               00000020   2670+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001A4A                                    2671+@PER_958 ds    0h                                                       01-DCCPR
00001A4A EBDE 2080 0024          00000080   2672+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001A50 E3C0 2090 0024          00000090   2673+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001A56 B904 00D2                          2674+         lgr   13,2                set real frame pointer               01-DCCPR
00001A5A B904 00CF                          2675+         lgr   12,15               set base reg                         01-DCCPR
                        00001A20            2676+         using @REGION_958_1,12                                         01-DCCPR
00001A5E B904 0031                          2677          LGR   3,1         ; ptr to parm area
                                            2678 * ******* End of Prologue
                                            2679 * *
                                            2680 * ***           int64_t vmax = 0;
00001A62 A729 0000               00000000   2681          LGHI  2,0         ; 0
                                            2682 * ***           rd_hdr_iter_t it = { . hdr = hdr, .subBucketIdx = -1 }\
                                            2683 * ;
00001A66 E3F0 3000 0004          00000000   2684          LG    15,0(0,3)   ; hdr
00001A6C E3F0 D0A8 0024          000000A8   2685          STG   15,168(0,13)
00001A72 E54C D0B4 FFFF          000000B4   2686          MVHI  180(13),-1
                                            2687 * setting 4 bytes to 0x00
00001A78 D703 D0B0 D0B0 000000B0 000000B0   2688          XC    176(4,13),176(13)
                                            2689 * setting 32 bytes to 0x00
00001A7E D71F D0B8 D0B8 000000B8 000000B8   2690          XC    184(32,13),184(13)
                                            2691 * ***
                                            2692 * ***           while (rd_hdr_iter_next(&it)) {
00001A84 47F0 C090               00001AB0   2693          B     @L79
00001A88                                    2694          DS    0D
00001A88 000000E8                           2695 @FRAMESIZE_958 DC F'232'
00001A8C 00000000
00001A90 0000000000001620                   2696 @lit_958_65 DC AD(rd_hdr_iter_next)
00001A98 0000000000001200                   2697 @lit_958_66 DC AD(rd_hdr_highest$Equivalent$Value)
                                                                                                                           Page   57 
  Active Usings: @REGION_958_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001AA0                                    2698 @L78     DS    0H
                                            2699 * ***                   if (it.countAtIdx != 0)
00001AA0 E558 D0B8 0000          000000B8   2700          CGHSI 184(13),0
00001AA6 4780 C090               00001AB0   2701          BE    @L79
                                            2702 * ***                           vmax = it.highestEquivalentValue;
00001AAA E320 D0D0 0004          000000D0   2703          LG    2,208(0,13) ; offset of highestEquivalentValue in rd_hdr*
                                                                _iter_s
00001AB0                                    2704 @L80     DS    0H
                                            2705 * ***           }
00001AB0                                    2706 @L79     DS    0H
00001AB0 41F0 D0A8               000000A8   2707          LA    15,168(0,13)
00001AB4 E3F0 D0D8 0024          000000D8   2708          STG   15,216(0,13)
00001ABA 4110 D0D8               000000D8   2709          LA    1,216(0,13)
00001ABE E3F0 C070 0004          00001A90   2710          LG    15,@lit_958_65 ; rd_hdr_iter_next
00001AC4                                    2711 @@gen_label92 DS    0H
00001AC4 05EF                               2712          BALR  14,15
00001AC6                                    2713 @@gen_label93 DS    0H
00001AC6 12FF                               2714          LTR   15,15
00001AC8 4770 C080               00001AA0   2715          BNZ   @L78
                                            2716 * ***           return rd_hdr_highestEquivalentValue(hdr, vmax);
00001ACC E3F0 3000 0004          00000000   2717          LG    15,0(0,3)   ; hdr
00001AD2 E3F0 D0D8 0024          000000D8   2718          STG   15,216(0,13)
00001AD8 E320 D0E0 0024          000000E0   2719          STG   2,224(0,13)
00001ADE 4110 D0D8               000000D8   2720          LA    1,216(0,13)
00001AE2 E3F0 C078 0004          00001A98   2721          LG    15,@lit_958_66 ; rd_hdr_highestEquivalentValue
00001AE8                                    2722 @@gen_label95 DS    0H
00001AE8 05EF                               2723          BALR  14,15
00001AEA                                    2724 @@gen_label96 DS    0H
                                            2725 * ***   }
                                            2726 * * **** Start of Epilogue
                                            2727          DCCEPIL
00001AEA                                    2728+         ds 0h                                                          01-DCCEP
                                            2729+* Epilog
00001AEA D707 D088 D088 00000088 00000088   2730+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001AF0 E3D0 D080 0004          00000080   2731+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001AF6 E3C0 D090 0004          00000090   2732+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001AFC E3B0 C018 0004          00000018   2733+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001B02 E3C0 B010 0021          00000010   2734+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001B08 E3E0 D008 0004          00000008   2735+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001B0E EB1C D020 0004          00000020   2736+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001B14 078E                               2737+         bcr 8,14                if same dsab, just return              01-DCCEP
00001B16 E3F0 D010 0024          00000010   2738+         stg 15,16(0,13)         save return code                       01-DCCEP
00001B1C E300 D018 0024          00000018   2739+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001B22 E3F0 D090 0004          00000090   2740+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001B28 E3F0 F018 0004          00000018   2741+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001B2E 47F0 F040               00000040   2742+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2743+* End of Epilog
                                            2744 * * **** End of Epilogue
                                            2745          DROP  12
                                            2746 *
                                            2747 *   DSECT for automatic variables in "rd_hdr_histogram_max"
                                            2748 *      (FUNCTION #958)
                                                                                                                           Page   58 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2749 *
00000000                00000000 000000D8   2750 @AUTO#rd_hdr_histogram_max DSECT
00000000                                    2751          DS    XL168
000000A8                                    2752 rd_hdr_histogram_max#it#0 DS 48XL1 ; it
000000D8                000000D8 000000A8   2753          ORG   @AUTO#rd_hdr_histogram_max+168
000000A8                                    2754 rd_hdr_histogram_max#vmax#0 DS 8XL1 ; vmax
                                            2755 *
00001B32                00000000 000056F0   2756 @CODE    CSECT
                                            2757 *
                                            2758 *
                                            2759 *
                                            2760 * ....... start of rd_hdr_histogram_min
                                            2761 rd_hdr_histogram_min ALIAS X'99846D8884996D8889A2A396879981946D948995'
00001B32                                    2762 @LNAME959 DS   0H
00001B32 00000014                           2763          DC    X'00000014'
00001B36 99846D8884996D88                   2764          DC    C'rd_hdr_histogram_min'
00001B4A 00                                 2765          DC    X'00'
                                            2766 rd_hdr_histogram_min DCCPRLG CINDEX=959,BASER=12,FRAME=232,ENTRY=YES,AR*
                                                                CH=ZARCH,LNAMEADDR=@LNAME959
                                            2767          macro
                                            2768          dccextrn &m
                                            2769          gblc    &$dccext(1000)
                                            2770          gbla    &$dccexti
                                            2771          lcla    &i
                                            2772 &$dccext(&$dccexti+1) setc    '&m'
                                            2773 &i       seta    1
                                            2774 .loop    aif    (&i gt &$dccexti).around
                                            2775          aif    ('&$dccext(&i)' eq '&m').getout
                                            2776 &i       seta    &i+1
                                            2777          ago     .loop
                                            2778 .around  anop
                                            2779 &$dccexti seta &$dccexti+1
                                            2780          extrn  &m
                                            2781 .getout  anop
                                            2782          mend
00001B50                                    2783+$eye0065    ds    0d                                                    02-DCCCA
00001B50 C4C3C3                             2784+         dc cl3'DCC'                                                    02-DCCCA
00001B53 01                                 2785+         dc xl1'01' format one                                          02-DCCCA
00001B54 00000000                           2786+         dc a(0)                                                        02-DCCCA
00001B58 0000000000001BC2                   2787+         dc ad(@PER_959)                                                02-DCCCA
00001B60 00000000000000E8                   2788+         dc ad(232)                                                     02-DCCCA
00001B68 0000000000000000                   2789+         dc ad(0)                                                       02-DCCCA
00001B70 0000000000001000                   2790+         dc ad(4096)                                                    02-DCCCA
00001B78 20                                 2791+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001B79 03                                 2792+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001B7A 03                                 2793+         dc al1(3)                                                      02-DCCCA
00001B7B 08                                 2794+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001B7C 00                                 2795+         dc bl.8'00000000'                                              02-DCCCA
00001B7D 000000                             2796+         dc al3(0)                                                      02-DCCCA
00001B80 0000000000001B32                   2797+         dc ad(@LNAME959)                                               02-DCCCA
00001B88                                    2798+         ds 0d                                                          02-DCCCA
00001B88 0000000000001B50                   2799+         dc ad($eye0065)                                                02-DCCCA
                                                                                                                           Page   59 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001B90 0000000000000000                   2800+         dc ad(0)                                                       02-DCCCA
00001B98                                    2801+         ds    0d                                                       01-DCCPR
                                            2802+         entry rd_hdr_histogram_min                                     01-DCCPR
00001B98                                    2803+rd_hdr_histogram_min ds 0d                                              01-DCCPR
00001B98                                    2804+@REGION_959_1 ds 0h                                                     01-DCCPR
00001B98 EBEC D008 0024          00000008   2805+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001B9E E3E0 D088 0004          00000088   2806+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001BA4 E3C0 D090 0004          00000090   2807+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001BAA B904 002E                          2808+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001BAE E3B0 C018 0004          00000018   2809+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001BB4 A7EB 00E8               000000E8   2810+         aghi  14,232              increase by frame size               01-DCCPR
00001BB8 E3E0 C020 0021          00000020   2811+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001BBE 4720 B020               00000020   2812+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001BC2                                    2813+@PER_959 ds    0h                                                       01-DCCPR
00001BC2 EBDE 2080 0024          00000080   2814+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001BC8 E3C0 2090 0024          00000090   2815+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001BCE B904 00D2                          2816+         lgr   13,2                set real frame pointer               01-DCCPR
00001BD2 B904 00CF                          2817+         lgr   12,15               set base reg                         01-DCCPR
                        00001B98            2818+         using @REGION_959_1,12                                         01-DCCPR
00001BD6 B904 0031                          2819          LGR   3,1         ; ptr to parm area
                                            2820 * ******* End of Prologue
                                            2821 * *
                                            2822 * ***           int64_t vmin = 0;
00001BDA A729 0000               00000000   2823          LGHI  2,0         ; 0
                                            2824 * ***           rd_hdr_iter_t it = { . hdr = hdr, .subBucketIdx = -1 }\
                                            2825 * ;
00001BDE E3F0 3000 0004          00000000   2826          LG    15,0(0,3)   ; hdr
00001BE4 E3F0 D0A8 0024          000000A8   2827          STG   15,168(0,13)
00001BEA E54C D0B4 FFFF          000000B4   2828          MVHI  180(13),-1
                                            2829 * setting 4 bytes to 0x00
00001BF0 D703 D0B0 D0B0 000000B0 000000B0   2830          XC    176(4,13),176(13)
                                            2831 * setting 32 bytes to 0x00
00001BF6 D71F D0B8 D0B8 000000B8 000000B8   2832          XC    184(32,13),184(13)
                                            2833 * ***
                                            2834 * ***           while (rd_hdr_iter_next(&it)) {
00001BFC 47F0 C09C               00001C34   2835          B     @L84
00001C00                                    2836          DS    0D
00001C00 000000E8                           2837 @FRAMESIZE_959 DC F'232'
00001C04 00000000
00001C08 0000000000001620                   2838 @lit_959_69 DC AD(rd_hdr_iter_next)
00001C10 0000000000000F08                   2839 @lit_959_70 DC AD(rd_hdr_lowest$Equivalent$Value)
00001C18                                    2840 @L83     DS    0H
                                            2841 * ***                   if (it.countAtIdx != 0 && vmin == 0) {
00001C18 E558 D0B8 0000          000000B8   2842          CGHSI 184(13),0
00001C1E 4780 C09C               00001C34   2843          BE    @L84
00001C22 B902 00F2                          2844          LTGR  15,2
00001C26 4770 C09C               00001C34   2845          BNE   @L84
                                            2846 * ***                           vmin = it.highestEquivalentValue;
00001C2A E320 D0D0 0004          000000D0   2847          LG    2,208(0,13) ; offset of highestEquivalentValue in rd_hdr*
                                                                _iter_s
                                            2848 * ***                           break;
00001C30 47F0 C0B8               00001C50   2849          B     @L81
                                                                                                                           Page   60 
  Active Usings: @REGION_959_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2850 * ***                   }
                                            2851 * ***           }
00001C34                                    2852 @L84     DS    0H
00001C34 41F0 D0A8               000000A8   2853          LA    15,168(0,13)
00001C38 E3F0 D0D8 0024          000000D8   2854          STG   15,216(0,13)
00001C3E 4110 D0D8               000000D8   2855          LA    1,216(0,13)
00001C42 E3F0 C070 0004          00001C08   2856          LG    15,@lit_959_69 ; rd_hdr_iter_next
00001C48                                    2857 @@gen_label99 DS    0H
00001C48 05EF                               2858          BALR  14,15
00001C4A                                    2859 @@gen_label100 DS    0H
00001C4A 12FF                               2860          LTR   15,15
00001C4C 4770 C080               00001C18   2861          BNZ   @L83
00001C50                                    2862 @L81     DS    0H
                                            2863 * ***           return rd_hdr_lowestEquivalentValue(hdr, vmin);
00001C50 E3F0 3000 0004          00000000   2864          LG    15,0(0,3)   ; hdr
00001C56 E3F0 D0D8 0024          000000D8   2865          STG   15,216(0,13)
00001C5C E320 D0E0 0024          000000E0   2866          STG   2,224(0,13)
00001C62 4110 D0D8               000000D8   2867          LA    1,216(0,13)
00001C66 E3F0 C078 0004          00001C10   2868          LG    15,@lit_959_70 ; rd_hdr_lowestEquivalentValue
00001C6C                                    2869 @@gen_label102 DS    0H
00001C6C 05EF                               2870          BALR  14,15
00001C6E                                    2871 @@gen_label103 DS    0H
                                            2872 * ***   }
                                            2873 * * **** Start of Epilogue
                                            2874          DCCEPIL
00001C6E                                    2875+         ds 0h                                                          01-DCCEP
                                            2876+* Epilog
00001C6E D707 D088 D088 00000088 00000088   2877+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001C74 E3D0 D080 0004          00000080   2878+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001C7A E3C0 D090 0004          00000090   2879+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001C80 E3B0 C018 0004          00000018   2880+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001C86 E3C0 B010 0021          00000010   2881+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001C8C E3E0 D008 0004          00000008   2882+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001C92 EB1C D020 0004          00000020   2883+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001C98 078E                               2884+         bcr 8,14                if same dsab, just return              01-DCCEP
00001C9A E3F0 D010 0024          00000010   2885+         stg 15,16(0,13)         save return code                       01-DCCEP
00001CA0 E300 D018 0024          00000018   2886+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001CA6 E3F0 D090 0004          00000090   2887+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001CAC E3F0 F018 0004          00000018   2888+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001CB2 47F0 F040               00000040   2889+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            2890+* End of Epilog
                                            2891 * * **** End of Epilogue
                                            2892          DROP  12
                                            2893 *
                                            2894 *   DSECT for automatic variables in "rd_hdr_histogram_min"
                                            2895 *      (FUNCTION #959)
                                            2896 *
00000000                00000000 000000D8   2897 @AUTO#rd_hdr_histogram_min DSECT
00000000                                    2898          DS    XL168
000000A8                                    2899 rd_hdr_histogram_min#it#0 DS 48XL1 ; it
000000D8                000000D8 000000A8   2900          ORG   @AUTO#rd_hdr_histogram_min+168
000000A8                                    2901 rd_hdr_histogram_min#vmin#0 DS 8XL1 ; vmin
                                                                                                                           Page   61 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            2902 *
00001CB6                00000000 000056F0   2903 @CODE    CSECT
                                            2904 *
                                            2905 *
                                            2906 *
                                            2907 * ....... start of rd_hdr_histogram_mean
                                            2908 rd_hdr_histogram_mean ALIAS X'99846D8884996D8889A2A396879981946D9485819*
                                                                5'
00001CB6                                    2909 @LNAME957 DS   0H
00001CB6 00000015                           2910          DC    X'00000015'
00001CBA 99846D8884996D88                   2911          DC    C'rd_hdr_histogram_mean'
00001CCF 00                                 2912          DC    X'00'
                                            2913 rd_hdr_histogram_mean DCCPRLG CINDEX=957,BASER=12,FRAME=248,ENTRY=YES,A*
                                                                RCH=ZARCH,LNAMEADDR=@LNAME957
                                            2914          macro
                                            2915          dccextrn &m
                                            2916          gblc    &$dccext(1000)
                                            2917          gbla    &$dccexti
                                            2918          lcla    &i
                                            2919 &$dccext(&$dccexti+1) setc    '&m'
                                            2920 &i       seta    1
                                            2921 .loop    aif    (&i gt &$dccexti).around
                                            2922          aif    ('&$dccext(&i)' eq '&m').getout
                                            2923 &i       seta    &i+1
                                            2924          ago     .loop
                                            2925 .around  anop
                                            2926 &$dccexti seta &$dccexti+1
                                            2927          extrn  &m
                                            2928 .getout  anop
                                            2929          mend
00001CD0                                    2930+$eye0068    ds    0d                                                    02-DCCCA
00001CD0 C4C3C3                             2931+         dc cl3'DCC'                                                    02-DCCCA
00001CD3 01                                 2932+         dc xl1'01' format one                                          02-DCCCA
00001CD4 00000000                           2933+         dc a(0)                                                        02-DCCCA
00001CD8 0000000000001D42                   2934+         dc ad(@PER_957)                                                02-DCCCA
00001CE0 00000000000000F8                   2935+         dc ad(248)                                                     02-DCCCA
00001CE8 0000000000000000                   2936+         dc ad(0)                                                       02-DCCCA
00001CF0 0000000000001000                   2937+         dc ad(4096)                                                    02-DCCCA
00001CF8 20                                 2938+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001CF9 03                                 2939+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001CFA 03                                 2940+         dc al1(3)                                                      02-DCCCA
00001CFB 08                                 2941+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001CFC 00                                 2942+         dc bl.8'00000000'                                              02-DCCCA
00001CFD 000000                             2943+         dc al3(0)                                                      02-DCCCA
00001D00 0000000000001CB6                   2944+         dc ad(@LNAME957)                                               02-DCCCA
00001D08                                    2945+         ds 0d                                                          02-DCCCA
00001D08 0000000000001CD0                   2946+         dc ad($eye0068)                                                02-DCCCA
00001D10 0000000000000000                   2947+         dc ad(0)                                                       02-DCCCA
00001D18                                    2948+         ds    0d                                                       01-DCCPR
                                            2949+         entry rd_hdr_histogram_mean                                    01-DCCPR
00001D18                                    2950+rd_hdr_histogram_mean ds 0d                                             01-DCCPR
00001D18                                    2951+@REGION_957_1 ds 0h                                                     01-DCCPR
                                                                                                                           Page   62 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001D18 EBEC D008 0024          00000008   2952+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001D1E E3E0 D088 0004          00000088   2953+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001D24 E3C0 D090 0004          00000090   2954+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001D2A B904 002E                          2955+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001D2E E3B0 C018 0004          00000018   2956+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001D34 A7EB 00F8               000000F8   2957+         aghi  14,248              increase by frame size               01-DCCPR
00001D38 E3E0 C020 0021          00000020   2958+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001D3E 4720 B020               00000020   2959+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001D42                                    2960+@PER_957 ds    0h                                                       01-DCCPR
00001D42 EBDE 2080 0024          00000080   2961+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001D48 E3C0 2090 0024          00000090   2962+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001D4E B904 00D2                          2963+         lgr   13,2                set real frame pointer               01-DCCPR
00001D52 B904 00CF                          2964+         lgr   12,15               set base reg                         01-DCCPR
                        00001D18            2965+         using @REGION_957_1,12                                         01-DCCPR
                                            2966 * ******* End of Prologue
                                            2967 * *
                                            2968 * ***           int64_t total = 0;
00001D56 E330 1000 0004          00000000   2969          LG    3,0(0,1)    ; hdr
00001D5C A729 0000               00000000   2970          LGHI  2,0         ; 0
                                            2971 * ***           rd_hdr_iter_t it = { . hdr = hdr, .subBucketIdx = -1 }\
                                            2972 * ;
00001D60 E330 D0B8 0024          000000B8   2973          STG   3,184(0,13)
00001D66 E54C D0C4 FFFF          000000C4   2974          MVHI  196(13),-1
                                            2975 * setting 4 bytes to 0x00
00001D6C D703 D0C0 D0C0 000000C0 000000C0   2976          XC    192(4,13),192(13)
                                            2977 * setting 32 bytes to 0x00
00001D72 D71F D0C8 D0C8 000000C8 000000C8   2978          XC    200(32,13),200(13)
                                            2979 * ***
                                            2980 * ***           if (hdr->totalCount == 0)
00001D78 E558 3040 0000          00000040   2981          CGHSI 64(3),0
00001D7E 4770 C0C6               00001DDE   2982          BNE   @L90
                                            2983 * ***                   return 0.0;
00001D82 B375 0000                          2984          LZDR  0
00001D86 47F0 C0F2               00001E0A   2985          B     @ret_lab_957
00001D90                                    2986          DS    0D
00001D90 000000F8                           2987 @FRAMESIZE_957 DC F'248'
00001D94 00000000
00001D98 0000000000001330                   2988 @lit_957_73 DC AD(rd_hdr_median$Equivalent$Value)
00001DA0 0000000000001620                   2989 @lit_957_74 DC AD(rd_hdr_iter_next)
                                            2990 * ***
                                            2991 * ***           while (rd_hdr_iter_next(&it)) {
00001DA8                                    2992 @L89     DS    0H
                                            2993 * ***                   if (it.countAtIdx != 0)
00001DA8 E558 D0C8 0000          000000C8   2994          CGHSI 200(13),0
00001DAE 4780 C0C6               00001DDE   2995          BE    @L90
                                            2996 * ***                           total += it.countAtIdx *
00001DB2 E340 D0C8 0004          000000C8   2997          LG    4,200(0,13) ; offset of countAtIdx in rd_hdr_iter_s
                                            2998 * ***                                   rd_hdr_medianEquivalentValue(h\
                                            2999 * dr,
                                            3000 * ***                                                                i\
                                            3001 * t.valueFromIdx);
00001DB8 E330 D0E8 0024          000000E8   3002          STG   3,232(0,13)
                                                                                                                           Page   63 
  Active Usings: @REGION_957_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001DBE E3F0 D0D8 0004          000000D8   3003          LG    15,216(0,13)
00001DC4 E3F0 D0F0 0024          000000F0   3004          STG   15,240(0,13)
00001DCA 4110 D0E8               000000E8   3005          LA    1,232(0,13)
00001DCE E3F0 C080 0004          00001D98   3006          LG    15,@lit_957_73 ; rd_hdr_medianEquivalentValue
00001DD4                                    3007 @@gen_label106 DS    0H
00001DD4 05EF                               3008          BALR  14,15
00001DD6                                    3009 @@gen_label107 DS    0H
00001DD6 B90C 004F                          3010          MSGR  4,15
00001DDA B908 0024                          3011          AGR   2,4
00001DDE                                    3012 @L91     DS    0H
                                            3013 * ***           }
00001DDE                                    3014 @L90     DS    0H
00001DDE 41F0 D0B8               000000B8   3015          LA    15,184(0,13)
00001DE2 E3F0 D0E8 0024          000000E8   3016          STG   15,232(0,13)
00001DE8 4110 D0E8               000000E8   3017          LA    1,232(0,13)
00001DEC E3F0 C088 0004          00001DA0   3018          LG    15,@lit_957_74 ; rd_hdr_iter_next
00001DF2                                    3019 @@gen_label108 DS    0H
00001DF2 05EF                               3020          BALR  14,15
00001DF4                                    3021 @@gen_label109 DS    0H
00001DF4 12FF                               3022          LTR   15,15
00001DF6 4770 C090               00001DA8   3023          BNZ   @L89
                                            3024 * ***           return (double)total / (double)hdr->totalCount;
00001DFA B3C5 0002                          3025          CDGR  0,2
00001DFE E3F0 3040 0004          00000040   3026          LG    15,64(0,3)  ; offset of totalCount in rd_hdr_histogram_s
00001E04 B3C5 00FF                          3027          CDGR  15,15
00001E08 2D0F                               3028          DDR   0,15
                                            3029 * ***   }
00001E0A                                    3030 @ret_lab_957 DS 0H
                                            3031 * * **** Start of Epilogue
                                            3032          DCCEPIL
00001E0A                                    3033+         ds 0h                                                          01-DCCEP
                                            3034+* Epilog
00001E0A D707 D088 D088 00000088 00000088   3035+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001E10 E3D0 D080 0004          00000080   3036+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001E16 E3C0 D090 0004          00000090   3037+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001E1C E3B0 C018 0004          00000018   3038+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001E22 E3C0 B010 0021          00000010   3039+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001E28 E3E0 D008 0004          00000008   3040+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001E2E EB1C D020 0004          00000020   3041+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001E34 078E                               3042+         bcr 8,14                if same dsab, just return              01-DCCEP
00001E36 E3F0 D010 0024          00000010   3043+         stg 15,16(0,13)         save return code                       01-DCCEP
00001E3C E300 D018 0024          00000018   3044+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001E42 E3F0 D090 0004          00000090   3045+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001E48 E3F0 F018 0004          00000018   3046+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001E4E 47F0 F040               00000040   3047+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3048+* End of Epilog
                                            3049 * * **** End of Epilogue
                                            3050          DROP  12
                                            3051 *
                                            3052 *   DSECT for automatic variables in "rd_hdr_histogram_mean"
                                            3053 *      (FUNCTION #957)
                                            3054 *
                                                                                                                           Page   64 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00000000                00000000 000000E8   3055 @AUTO#rd_hdr_histogram_mean DSECT
00000000                                    3056          DS    XL184
000000B8                                    3057 rd_hdr_histogram_mean#it#0 DS 48XL1 ; it
000000E8                000000E8 000000B8   3058          ORG   @AUTO#rd_hdr_histogram_mean+184
000000B8                                    3059 rd_hdr_histogram_mean#total#0 DS 8XL1 ; total
                                            3060 *
00001E52                00000000 000056F0   3061 @CODE    CSECT
                                            3062 *
                                            3063 *
                                            3064 *
                                            3065 * ....... start of rd_hdr_histogram_record
                                            3066 rd_hdr_histogram_record ALIAS X'99846D8884996D8889A2A396879981946D99858*
                                                                3969984'
00001E52                                    3067 @LNAME955 DS   0H
00001E52 00000017                           3068          DC    X'00000017'
00001E56 99846D8884996D88                   3069          DC    C'rd_hdr_histogram_record'
00001E6D 00                                 3070          DC    X'00'
                                            3071 rd_hdr_histogram_record DCCPRLG CINDEX=955,BASER=12,FRAME=192,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME955
                                            3072          macro
                                            3073          dccextrn &m
                                            3074          gblc    &$dccext(1000)
                                            3075          gbla    &$dccexti
                                            3076          lcla    &i
                                            3077 &$dccext(&$dccexti+1) setc    '&m'
                                            3078 &i       seta    1
                                            3079 .loop    aif    (&i gt &$dccexti).around
                                            3080          aif    ('&$dccext(&i)' eq '&m').getout
                                            3081 &i       seta    &i+1
                                            3082          ago     .loop
                                            3083 .around  anop
                                            3084 &$dccexti seta &$dccexti+1
                                            3085          extrn  &m
                                            3086 .getout  anop
                                            3087          mend
00001E70                                    3088+$eye0071    ds    0d                                                    02-DCCCA
00001E70 C4C3C3                             3089+         dc cl3'DCC'                                                    02-DCCCA
00001E73 01                                 3090+         dc xl1'01' format one                                          02-DCCCA
00001E74 00000000                           3091+         dc a(0)                                                        02-DCCCA
00001E78 0000000000001EE2                   3092+         dc ad(@PER_955)                                                02-DCCCA
00001E80 00000000000000C0                   3093+         dc ad(192)                                                     02-DCCCA
00001E88 0000000000000000                   3094+         dc ad(0)                                                       02-DCCCA
00001E90 0000000000001000                   3095+         dc ad(4096)                                                    02-DCCCA
00001E98 20                                 3096+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00001E99 03                                 3097+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00001E9A 03                                 3098+         dc al1(3)                                                      02-DCCCA
00001E9B 08                                 3099+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00001E9C 00                                 3100+         dc bl.8'00000000'                                              02-DCCCA
00001E9D 000000                             3101+         dc al3(0)                                                      02-DCCCA
00001EA0 0000000000001E52                   3102+         dc ad(@LNAME955)                                               02-DCCCA
00001EA8                                    3103+         ds 0d                                                          02-DCCCA
00001EA8 0000000000001E70                   3104+         dc ad($eye0071)                                                02-DCCCA
                                                                                                                           Page   65 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001EB0 0000000000000000                   3105+         dc ad(0)                                                       02-DCCCA
00001EB8                                    3106+         ds    0d                                                       01-DCCPR
                                            3107+         entry rd_hdr_histogram_record                                  01-DCCPR
00001EB8                                    3108+rd_hdr_histogram_record ds 0d                                           01-DCCPR
00001EB8                                    3109+@REGION_955_1 ds 0h                                                     01-DCCPR
00001EB8 EBEC D008 0024          00000008   3110+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00001EBE E3E0 D088 0004          00000088   3111+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00001EC4 E3C0 D090 0004          00000090   3112+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00001ECA B904 002E                          3113+         lgr   2,14                copy addr of our savearea            01-DCCPR
00001ECE E3B0 C018 0004          00000018   3114+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00001ED4 A7EB 00C0               000000C0   3115+         aghi  14,192              increase by frame size               01-DCCPR
00001ED8 E3E0 C020 0021          00000020   3116+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00001EDE 4720 B020               00000020   3117+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00001EE2                                    3118+@PER_955 ds    0h                                                       01-DCCPR
00001EE2 EBDE 2080 0024          00000080   3119+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00001EE8 E3C0 2090 0024          00000090   3120+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00001EEE B904 00D2                          3121+         lgr   13,2                set real frame pointer               01-DCCPR
00001EF2 B904 00CF                          3122+         lgr   12,15               set base reg                         01-DCCPR
                        00001EB8            3123+         using @REGION_955_1,12                                         01-DCCPR
                                            3124 * ******* End of Prologue
                                            3125 * *
                                            3126 * ***           int32_t idx = rd_hdr_countsIndexFor(hdr, v);
00001EF6 EB23 1000 0004          00000000   3127          LMG   2,3,0(1)    ; hdr
00001EFC EB23 D0B0 0024          000000B0   3128          STMG  2,3,176(13)
00001F02 4110 D0B0               000000B0   3129          LA    1,176(0,13)
00001F06 E3F0 C0A8 0004          00001F60   3130          LG    15,@lit_955_76 ; rd_hdr_countsIndexFor
00001F0C                                    3131 @@gen_label111 DS    0H
00001F0C 05EF                               3132          BALR  14,15
00001F0E                                    3133 @@gen_label112 DS    0H
                                            3134 * ***
                                            3135 * ***           if (idx < 0 || hdr->countsLen <= idx) {
00001F0E 12FF                               3136          LTR   15,15
00001F10 4740 C066               00001F1E   3137          BL    @L93
00001F14 5810 2038               00000038   3138          L     1,56(0,2)   ; offset of countsLen in rd_hdr_histogram_s
00001F18 191F                               3139          CR    1,15
00001F1A 4720 C0B0               00001F68   3140          BH    @L92
00001F1E                                    3141 @L93     DS    0H
                                            3142 * ***                   hdr->outOfRangeCount++;
00001F1E E3F0 2050 0004          00000050   3143          LG    15,80(0,2)
00001F24 A7FB 0001               00000001   3144          AGHI  15,1
00001F28 E3F0 2050 0024          00000050   3145          STG   15,80(0,2)
                                            3146 * ***                   if (v > hdr->highestOutOfRange)
00001F2E E330 2060 0020          00000060   3147          CG    3,96(0,2)
00001F34 47D0 C086               00001F3E   3148          BNH   @L94
                                            3149 * ***                           hdr->highestOutOfRange = v;
00001F38 E330 2060 0024          00000060   3150          STG   3,96(0,2)   ; offset of highestOutOfRange in rd_hdr_hist*
                                                                ogram_s
00001F3E                                    3151 @L94     DS    0H
                                            3152 * ***                   if (v < hdr->lowestOutOfRange)
00001F3E E330 2058 0020          00000058   3153          CG    3,88(0,2)
00001F44 47B0 C096               00001F4E   3154          BNL   @L95
                                            3155 * ***                           hdr->lowestOutOfRange = v;
                                                                                                                           Page   66 
  Active Usings: @REGION_955_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00001F48 E330 2058 0024          00000058   3156          STG   3,88(0,2)   ; offset of lowestOutOfRange in rd_hdr_histo*
                                                                gram_s
00001F4E                                    3157 @L95     DS    0H
                                            3158 * ***                   return 0;
00001F4E A7F9 0000               00000000   3159          LGHI  15,0        ; 0
00001F52 47F0 C0E4               00001F9C   3160          B     @ret_lab_955
00001F58                                    3161          DS    0D
00001F58 000000C0                           3162 @FRAMESIZE_955 DC F'192'
00001F5C 00000000
00001F60 0000000000001498                   3163 @lit_955_76 DC AD(rd_hdr_counts$Index$For)
                                            3164 * ***           }
00001F68                                    3165 @L92     DS    0H
                                            3166 * ***
                                            3167 * ***           hdr->counts[idx]++;
00001F68 B914 00FF                          3168          LGFR  15,15
00001F6C E310 2048 0004          00000048   3169          LG    1,72(0,2)   ; offset of counts in rd_hdr_histogram_s
00001F72 EBFF 0003 000D          00000003   3170          SLLG  15,15,3(0)  ; *0x8
00001F78 E33F 1000 0004          00000000   3171          LG    3,0(15,1)
00001F7E A73B 0001               00000001   3172          AGHI  3,1
00001F82 E33F 1000 0024          00000000   3173          STG   3,0(15,1)
                                            3174 * ***           hdr->totalCount++;
00001F88 E3F0 2040 0004          00000040   3175          LG    15,64(0,2)
00001F8E A7FB 0001               00000001   3176          AGHI  15,1
00001F92 E3F0 2040 0024          00000040   3177          STG   15,64(0,2)
                                            3178 * ***
                                            3179 * ***           return 1;
00001F98 A7F9 0001               00000001   3180          LGHI  15,1        ; 1
                                            3181 * ***   }
00001F9C                                    3182 @ret_lab_955 DS 0H
                                            3183 * * **** Start of Epilogue
                                            3184          DCCEPIL
00001F9C                                    3185+         ds 0h                                                          01-DCCEP
                                            3186+* Epilog
00001F9C D707 D088 D088 00000088 00000088   3187+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00001FA2 E3D0 D080 0004          00000080   3188+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00001FA8 E3C0 D090 0004          00000090   3189+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00001FAE E3B0 C018 0004          00000018   3190+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00001FB4 E3C0 B010 0021          00000010   3191+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00001FBA E3E0 D008 0004          00000008   3192+         lg  14,8(0,13)          load up return address                 01-DCCEP
00001FC0 EB1C D020 0004          00000020   3193+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00001FC6 078E                               3194+         bcr 8,14                if same dsab, just return              01-DCCEP
00001FC8 E3F0 D010 0024          00000010   3195+         stg 15,16(0,13)         save return code                       01-DCCEP
00001FCE E300 D018 0024          00000018   3196+         stg 0,24(0,13)          save more return code                  01-DCCEP
00001FD4 E3F0 D090 0004          00000090   3197+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00001FDA E3F0 F018 0004          00000018   3198+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00001FE0 47F0 F040               00000040   3199+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3200+* End of Epilog
                                            3201 * * **** End of Epilogue
                                            3202          DROP  12
                                            3203 *
                                            3204 *   DSECT for automatic variables in "rd_hdr_histogram_record"
                                            3205 *      (FUNCTION #955)
                                                                                                                           Page   67 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3206 *
00000000                00000000 000000AC   3207 @AUTO#rd_hdr_histogram_record DSECT
00000000                                    3208          DS    XL168
000000A8                                    3209 rd_hdr_histogram_record#idx#0 DS 1F ; idx
                                            3210 *
00001FE4                00000000 000056F0   3211 @CODE    CSECT
                                            3212 *
                                            3213 *
                                            3214 *
                                            3215 * ....... start of rd_hdr_histogram_quantile
                                            3216 rd_hdr_histogram_quantile ALIAS X'99846D8884996D8889A2A396879981946D98A*
                                                                48195A3899385'
00001FE4                                    3217 @LNAME960 DS   0H
00001FE4 00000019                           3218          DC    X'00000019'
00001FE8 99846D8884996D88                   3219          DC    C'rd_hdr_histogram_quantile'
00002001 00                                 3220          DC    X'00'
                                            3221 rd_hdr_histogram_quantile DCCPRLG CINDEX=960,BASER=12,FRAME=248,ENTRY=Y*
                                                                ES,ARCH=ZARCH,LNAMEADDR=@LNAME960
                                            3222          macro
                                            3223          dccextrn &m
                                            3224          gblc    &$dccext(1000)
                                            3225          gbla    &$dccexti
                                            3226          lcla    &i
                                            3227 &$dccext(&$dccexti+1) setc    '&m'
                                            3228 &i       seta    1
                                            3229 .loop    aif    (&i gt &$dccexti).around
                                            3230          aif    ('&$dccext(&i)' eq '&m').getout
                                            3231 &i       seta    &i+1
                                            3232          ago     .loop
                                            3233 .around  anop
                                            3234 &$dccexti seta &$dccexti+1
                                            3235          extrn  &m
                                            3236 .getout  anop
                                            3237          mend
00002008                                    3238+$eye0074    ds    0d                                                    02-DCCCA
00002008 C4C3C3                             3239+         dc cl3'DCC'                                                    02-DCCCA
0000200B 01                                 3240+         dc xl1'01' format one                                          02-DCCCA
0000200C 00000000                           3241+         dc a(0)                                                        02-DCCCA
00002010 000000000000207A                   3242+         dc ad(@PER_960)                                                02-DCCCA
00002018 00000000000000F8                   3243+         dc ad(248)                                                     02-DCCCA
00002020 0000000000000000                   3244+         dc ad(0)                                                       02-DCCCA
00002028 0000000000001000                   3245+         dc ad(4096)                                                    02-DCCCA
00002030 20                                 3246+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002031 03                                 3247+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002032 03                                 3248+         dc al1(3)                                                      02-DCCCA
00002033 08                                 3249+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002034 00                                 3250+         dc bl.8'00000000'                                              02-DCCCA
00002035 000000                             3251+         dc al3(0)                                                      02-DCCCA
00002038 0000000000001FE4                   3252+         dc ad(@LNAME960)                                               02-DCCCA
00002040                                    3253+         ds 0d                                                          02-DCCCA
00002040 0000000000002008                   3254+         dc ad($eye0074)                                                02-DCCCA
00002048 0000000000000000                   3255+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   68 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002050                                    3256+         ds    0d                                                       01-DCCPR
                                            3257+         entry rd_hdr_histogram_quantile                                01-DCCPR
00002050                                    3258+rd_hdr_histogram_quantile ds 0d                                         01-DCCPR
00002050                                    3259+@REGION_960_1 ds 0h                                                     01-DCCPR
00002050 EBEC D008 0024          00000008   3260+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002056 E3E0 D088 0004          00000088   3261+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000205C E3C0 D090 0004          00000090   3262+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002062 B904 002E                          3263+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002066 E3B0 C018 0004          00000018   3264+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000206C A7EB 00F8               000000F8   3265+         aghi  14,248              increase by frame size               01-DCCPR
00002070 E3E0 C020 0021          00000020   3266+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002076 4720 B020               00000020   3267+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000207A                                    3268+@PER_960 ds    0h                                                       01-DCCPR
0000207A EBDE 2080 0024          00000080   3269+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002080 E3C0 2090 0024          00000090   3270+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002086 B904 00D2                          3271+         lgr   13,2                set real frame pointer               01-DCCPR
0000208A B904 00CF                          3272+         lgr   12,15               set base reg                         01-DCCPR
                        00002050            3273+         using @REGION_960_1,12                                         01-DCCPR
                                            3274 * ******* End of Prologue
                                            3275 * *
                                            3276 * ***           int64_t total = 0;
0000208E E330 1000 0004          00000000   3277          LG    3,0(0,1)    ; hdr
00002094 68F0 1008               00000008   3278          LD    15,8(0,1)   ; q
00002098 A729 0000               00000000   3279          LGHI  2,0         ; 0
                                            3280 * ***           int64_t countAtPercentile;
                                            3281 * ***           rd_hdr_iter_t it = { . hdr = hdr, .subBucketIdx = -1 }\
                                            3282 * ;
0000209C E330 D0B8 0024          000000B8   3283          STG   3,184(0,13)
000020A2 E54C D0C4 FFFF          000000C4   3284          MVHI  196(13),-1
                                            3285 * setting 4 bytes to 0x00
000020A8 D703 D0C0 D0C0 000000C0 000000C0   3286          XC    192(4,13),192(13)
                                            3287 * setting 32 bytes to 0x00
000020AE D71F D0C8 D0C8 000000C8 000000C8   3288          XC    200(32,13),200(13)
                                            3289 * ***
                                            3290 * ***           if (q > 100.0)
000020B4 69F0 C098               000020E8   3291          CD    15,@lit_960_81
000020B8 47D0 C070               000020C0   3292          BNH   @L96
                                            3293 * ***                   q = 100.0;
000020BC 68F0 C098               000020E8   3294          LD    15,@lit_960_81
000020C0                                    3295 @L96     DS    0H
                                            3296 * ***
                                            3297 * ***           countAtPercentile =
                                            3298 * ***                   (int64_t)(((q / 100.0) * (double)hdr->totalCou\
                                            3299 * nt) + 0.5);
000020C0 6DF0 C098               000020E8   3300          DD    15,@lit_960_81
000020C4 E3F0 3040 0004          00000040   3301          LG    15,64(0,3)  ; offset of totalCount in rd_hdr_histogram_s
000020CA B3C5 00DF                          3302          CDGR  13,15
000020CE 2CFD                               3303          MDR   15,13
000020D0 6AF0 C0A0               000020F0   3304          AD    15,@lit_960_84
000020D4 B3C9 504F                          3305          CGDR  4,5,15
                                            3306 * ***
                                            3307 * ***           while (rd_hdr_iter_next(&it)) {
                                                                                                                           Page   69 
  Active Usings: @REGION_960_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000020D8 47F0 C0E8               00002138   3308          B     @L100
000020E0                                    3309          DS    0D
000020E0 000000F8                           3310 @FRAMESIZE_960 DC F'248'
000020E8                                    3311          DS 0D
000020E8 4264000000000000                   3312 @lit_960_81 DC XL8'4264000000000000'
000020F0                                    3313          DS 0D
000020F0 4080000000000000                   3314 @lit_960_84 DC XL8'4080000000000000'
000020F8 0000000000001200                   3315 @lit_960_85 DC AD(rd_hdr_highest$Equivalent$Value)
00002100 0000000000001620                   3316 @lit_960_86 DC AD(rd_hdr_iter_next)
00002108                                    3317 @L99     DS    0H
                                            3318 * ***                   total += it.countAtIdx;
00002108 E320 D0C8 0008          000000C8   3319          AG    2,200(0,13)
                                            3320 * ***                   if (total >= countAtPercentile)
0000210E B920 0024                          3321          CGR   2,4
00002112 4740 C0E8               00002138   3322          BL    @L100
                                            3323 * ***                           return rd_hdr_highestEquivalentValue(
                                            3324 * ***                                   hdr, it.valueFromIdx);
00002116 E330 D0E8 0024          000000E8   3325          STG   3,232(0,13)
0000211C E3F0 D0D8 0004          000000D8   3326          LG    15,216(0,13)
00002122 E3F0 D0F0 0024          000000F0   3327          STG   15,240(0,13)
00002128 4110 D0E8               000000E8   3328          LA    1,232(0,13)
0000212C E3F0 C0A8 0004          000020F8   3329          LG    15,@lit_960_85 ; rd_hdr_highestEquivalentValue
00002132                                    3330 @@gen_label119 DS    0H
00002132 05EF                               3331          BALR  14,15
00002134                                    3332 @@gen_label120 DS    0H
00002134 47F0 C108               00002158   3333          B     @ret_lab_960
                                            3334 * ***           }
00002138                                    3335 @L100    DS    0H
00002138 41F0 D0B8               000000B8   3336          LA    15,184(0,13)
0000213C E3F0 D0E8 0024          000000E8   3337          STG   15,232(0,13)
00002142 4110 D0E8               000000E8   3338          LA    1,232(0,13)
00002146 E3F0 C0B0 0004          00002100   3339          LG    15,@lit_960_86 ; rd_hdr_iter_next
0000214C                                    3340 @@gen_label121 DS    0H
0000214C 05EF                               3341          BALR  14,15
0000214E                                    3342 @@gen_label122 DS    0H
0000214E 12FF                               3343          LTR   15,15
00002150 4770 C0B8               00002108   3344          BNZ   @L99
                                            3345 * ***
                                            3346 * ***           return 0;
00002154 A7F9 0000               00000000   3347          LGHI  15,0        ; 0
                                            3348 * ***   }
00002158                                    3349 @ret_lab_960 DS 0H
                                            3350 * * **** Start of Epilogue
                                            3351          DCCEPIL
00002158                                    3352+         ds 0h                                                          01-DCCEP
                                            3353+* Epilog
00002158 D707 D088 D088 00000088 00000088   3354+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000215E E3D0 D080 0004          00000080   3355+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002164 E3C0 D090 0004          00000090   3356+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000216A E3B0 C018 0004          00000018   3357+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002170 E3C0 B010 0021          00000010   3358+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002176 E3E0 D008 0004          00000008   3359+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page   70 
  Active Usings: @REGION_960_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000217C EB1C D020 0004          00000020   3360+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002182 078E                               3361+         bcr 8,14                if same dsab, just return              01-DCCEP
00002184 E3F0 D010 0024          00000010   3362+         stg 15,16(0,13)         save return code                       01-DCCEP
0000218A E300 D018 0024          00000018   3363+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002190 E3F0 D090 0004          00000090   3364+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002196 E3F0 F018 0004          00000018   3365+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000219C 47F0 F040               00000040   3366+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3367+* End of Epilog
                                            3368 * * **** End of Epilogue
                                            3369          DROP  12
                                            3370 *
                                            3371 *   DSECT for automatic variables in "rd_hdr_histogram_quantile"
                                            3372 *      (FUNCTION #960)
                                            3373 *
00000000                00000000 000000E8   3374 @AUTO#rd_hdr_histogram_quantile DSECT
00000000                                    3375          DS    XL184
000000B8                                    3376 rd_hdr_histogram_quantile#it#0 DS 48XL1 ; it
000000E8                000000E8 000000B8   3377          ORG   @AUTO#rd_hdr_histogram_quantile+184
000000B8                                    3378 rd_hdr_histogram_quantile#count$At$Percentile#0 DS 8XL1 ; countAtPercen*
                                                                tile
000000C0                000000C0 000000B8   3379          ORG   @AUTO#rd_hdr_histogram_quantile+184
000000B8                                    3380 rd_hdr_histogram_quantile#total#0 DS 8XL1 ; total
                                            3381 *
000021A0                00000000 000056F0   3382 @CODE    CSECT
                                            3383 *
                                            3384 *
                                            3385 *
                                            3386 * ....... start of ut_high_sigfig
000021A0                                    3387 @LNAME977 DS   0H
000021A0 0000000E                           3388          DC    X'0000000E'
000021A4 A4A36D888987886D                   3389          DC    C'ut_high_sigfig'
000021B2 00                                 3390          DC    X'00'
                                            3391 ut_high_sigfig DCCPRLG CINDEX=977,BASER=12,FRAME=288,ENTRY=NO,ARCH=ZARC*
                                                                H,LNAMEADDR=@LNAME977
                                            3392          macro
                                            3393          dccextrn &m
                                            3394          gblc    &$dccext(1000)
                                            3395          gbla    &$dccexti
                                            3396          lcla    &i
                                            3397 &$dccext(&$dccexti+1) setc    '&m'
                                            3398 &i       seta    1
                                            3399 .loop    aif    (&i gt &$dccexti).around
                                            3400          aif    ('&$dccext(&i)' eq '&m').getout
                                            3401 &i       seta    &i+1
                                            3402          ago     .loop
                                            3403 .around  anop
                                            3404 &$dccexti seta &$dccexti+1
                                            3405          extrn  &m
                                            3406 .getout  anop
                                            3407          mend
000021B8                                    3408+$eye0077    ds    0d                                                    02-DCCCA
000021B8 C4C3C3                             3409+         dc cl3'DCC'                                                    02-DCCCA
                                                                                                                           Page   71 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000021BB 01                                 3410+         dc xl1'01' format one                                          02-DCCCA
000021BC 00000000                           3411+         dc a(0)                                                        02-DCCCA
000021C0 000000000000222A                   3412+         dc ad(@PER_977)                                                02-DCCCA
000021C8 0000000000000120                   3413+         dc ad(288)                                                     02-DCCCA
000021D0 0000000000000000                   3414+         dc ad(0)                                                       02-DCCCA
000021D8 0000000000001000                   3415+         dc ad(4096)                                                    02-DCCCA
000021E0 20                                 3416+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000021E1 03                                 3417+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000021E2 03                                 3418+         dc al1(3)                                                      02-DCCCA
000021E3 08                                 3419+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000021E4 00                                 3420+         dc bl.8'00000000'                                              02-DCCCA
000021E5 000000                             3421+         dc al3(0)                                                      02-DCCCA
000021E8 00000000000021A0                   3422+         dc ad(@LNAME977)                                               02-DCCCA
000021F0                                    3423+         ds 0d                                                          02-DCCCA
000021F0 00000000000021B8                   3424+         dc ad($eye0077)                                                02-DCCCA
000021F8 0000000000000000                   3425+         dc ad(0)                                                       02-DCCCA
00002200                                    3426+         ds    0d                                                       01-DCCPR
00002200                                    3427+ut_high_sigfig ds 0d                                                    01-DCCPR
00002200                                    3428+@REGION_977_1 ds 0h                                                     01-DCCPR
00002200 EBEC D008 0024          00000008   3429+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002206 E3E0 D088 0004          00000088   3430+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000220C E3C0 D090 0004          00000090   3431+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002212 B904 002E                          3432+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002216 E3B0 C018 0004          00000018   3433+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000221C A7EB 0120               00000120   3434+         aghi  14,288              increase by frame size               01-DCCPR
00002220 E3E0 C020 0021          00000020   3435+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002226 4720 B020               00000020   3436+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000222A                                    3437+@PER_977 ds    0h                                                       01-DCCPR
0000222A EBDE 2080 0024          00000080   3438+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002230 E3C0 2090 0024          00000090   3439+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002236 B904 00D2                          3440+         lgr   13,2                set real frame pointer               01-DCCPR
0000223A B904 00CF                          3441+         lgr   12,15               set base reg                         01-DCCPR
                        00002200            3442+         using @REGION_977_1,12                                         01-DCCPR
                                            3443          DCCPRV REG=5      ; Get PRV from DVT
0000223E E350 B008 0004          00000008   3444+         LG 5,8(0,11)                                                   01-DCCPR
                                            3445 * ******* End of Prologue
                                            3446 * *
                                            3447 * ***           rd_hdr_histogram_t *hdr;
                                            3448 * ***           const int64_t input[] = {
                                            3449 * ***                   459876, 669187, 711612, 816326, 931423,
00002244 C0FF 0007 0464                     3450          LLILF 15,X'00070464' ; 459876
0000224A E3F0 D0A8 0024          000000A8   3451          STG   15,168(0,13)
00002250 C01F 000A 3603                     3452          LLILF 1,X'000A3603' ; 669187
00002256 E310 D0B0 0024          000000B0   3453          STG   1,176(0,13)
0000225C C01F 000A DBBC                     3454          LLILF 1,X'000ADBBC' ; 711612
00002262 E310 D0B8 0024          000000B8   3455          STG   1,184(0,13)
00002268 C01F 000C 74C6                     3456          LLILF 1,X'000C74C6' ; 816326
0000226E E310 D0C0 0024          000000C0   3457          STG   1,192(0,13)
00002274 C01F 000E 365F                     3458          LLILF 1,X'000E365F' ; 931423
0000227A E310 D0C8 0024          000000C8   3459          STG   1,200(0,13)
                                            3460 * ***                   1033197, 1131895, 2477317, 3964974, 12718782,
00002280 C01F 000F C3ED                     3461          LLILF 1,X'000FC3ED' ; 1033197
                                                                                                                           Page   72 
  Active Usings: @REGION_977_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002286 E310 D0D0 0024          000000D0   3462          STG   1,208(0,13)
0000228C C01F 0011 4577                     3463          LLILF 1,X'00114577' ; 1131895
00002292 E310 D0D8 0024          000000D8   3464          STG   1,216(0,13)
00002298 C01F 0025 CD05                     3465          LLILF 1,X'0025CD05' ; 2477317
0000229E E310 D0E0 0024          000000E0   3466          STG   1,224(0,13)
000022A4 C01F 003C 802E                     3467          LLILF 1,X'003C802E' ; 3964974
000022AA E310 D0E8 0024          000000E8   3468          STG   1,232(0,13)
000022B0 C01F 00C2 12BE                     3469          LLILF 1,X'00C212BE' ; 12718782
000022B6 E310 D0F0 0024          000000F0   3470          STG   1,240(0,13)
                                            3471 * ***           };
                                            3472 * ***           size_t i;
                                            3473 * ***           int64_t v;
                                            3474 * ***           const int64_t exp = 1048575;
000022BC C04F 000F FFFF                     3475          LLILF 4,X'000FFFFF' ; 1048575
                                            3476 * ***
                                            3477 * ***           hdr = rd_hdr_histogram_new(459876, 12718782, 5);
000022C2 E3F0 D0F8 0024          000000F8   3478          STG   15,248(0,13)
000022C8 E310 D100 0024          00000100   3479          STG   1,256(0,13)
000022CE E548 D108 0005          00000108   3480          MVGHI 264(13),5
000022D4 4110 D0F8               000000F8   3481          LA    1,248(0,13)
000022D8 E3F0 C0F8 0004          000022F8   3482          LG    15,@lit_977_102 ; rd_hdr_histogram_new
000022DE                                    3483 @@gen_label124 DS    0H
000022DE 05EF                               3484          BALR  14,15
000022E0                                    3485 @@gen_label125 DS    0H
000022E0 B904 003F                          3486          LGR   3,15
                                            3487 * ***           for (i = 0 ; i < (sizeof((input)) / sizeof(*(input))) \
                                            3488 * ; i++) {
000022E4 A729 0000               00000000   3489          LGHI  2,0         ; 0
000022E8 47F0 C170               00002370   3490          B     @L103
000022F0                                    3491          DS    0D
000022F0 00000120                           3492 @FRAMESIZE_977 DC F'288'
000022F4 00000000
000022F8 0000000000000488                   3493 @lit_977_102 DC AD(rd_hdr_histogram_new)
00002300 0000000000001EB8                   3494 @lit_977_104 DC AD(rd_hdr_histogram_record)
00002308 0000000000002050                   3495 @lit_977_106 DC AD(rd_hdr_histogram_quantile)
00002310                                    3496          DS 0D
00002310 4232000000000000                   3497 @lit_977_105 DC XL8'4232000000000000'
00002318 0000000000000000                   3498 @lit_977_110 DC AD(fprintf)
00002320 00000000000056F0                   3499 @lit_977_109 DC AD(@DATA)
00002328 00000000000057E8                   3500 @lit_977_108 DC AD(@strings@)
00002330 00000000                           3501 @lit_977_107 DC Q(__stderrp)
00002334 00000000                           3502 @lit_977_115 DC Q(rd_unittest_assert_on_failure)
00002338 0000000000000000                   3503 @lit_977_116 DC AD(__assert)
00002340 0000000000000370                   3504 @lit_977_118 DC AD(rd_hdr_histogram_destroy)
00002348                                    3505 @L102    DS    0H
                                            3506 * ***
                                            3507 * ***                   rd_hdr_histogram_record(hdr, input[i]);
00002348 E330 D0F8 0024          000000F8   3508          STG   3,248(0,13)
0000234E EBF2 0003 000D          00000003   3509          SLLG  15,2,3(0)   ; *0x8
00002354 E3FF D0A8 0004          000000A8   3510          LG    15,168(15,13)
0000235A E3F0 D100 0024          00000100   3511          STG   15,256(0,13)
00002360 4110 D0F8               000000F8   3512          LA    1,248(0,13)
                                                                                                                           Page   73 
  Active Usings: @REGION_977_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002364 E3F0 C100 0004          00002300   3513          LG    15,@lit_977_104 ; rd_hdr_histogram_record
0000236A                                    3514 @@gen_label126 DS    0H
0000236A 05EF                               3515          BALR  14,15
0000236C                                    3516 @@gen_label127 DS    0H
                                            3517 * ***           }
0000236C A72B 0001               00000001   3518          AGHI  2,1
00002370                                    3519 @L103    DS    0H
00002370 C22E 0000 000A                     3520          CLGFI 2,X'0000000A'
00002376 4740 C148               00002348   3521          BL    @L102
                                            3522 * ***
                                            3523 * ***           v = rd_hdr_histogram_quantile(hdr, 50);
0000237A E330 D0F8 0024          000000F8   3524          STG   3,248(0,13)
00002380 68F0 C110               00002310   3525          LD    15,@lit_977_105
00002384 60F0 D100               00000100   3526          STD   15,256(0,13)
00002388 4110 D0F8               000000F8   3527          LA    1,248(0,13)
0000238C E3F0 C108 0004          00002308   3528          LG    15,@lit_977_106 ; rd_hdr_histogram_quantile
00002392                                    3529 @@gen_label129 DS    0H
00002392 05EF                               3530          BALR  14,15
00002394                                    3531 @@gen_label130 DS    0H
00002394 B904 002F                          3532          LGR   2,15
                                            3533 * ***           do { if (!(v == exp)) { fprintf(__stderrp, "\033[31mRD\
                                            3534 * UT: FAIL: %s:%d: %s: " "assert failed: " "v == exp" ": ", "C:\\asgka\
                                            3535 * fka\\librdkafka\\src\\rdhdrhistogram.c", 464, __FUNCTION__); fprintf\
                                            3536 * (__stderrp, "Median is %" "lld" ", expected %" "lld", v, exp); fprin\
                                            3537 * tf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((v =\
                                            3538 * = exp) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\
                                            3539 * \\rdhdrhistogram.c", 464, "v == exp")); return 1; } } while (0);
00002398                                    3540 @L106    DS    0H
00002398 B920 0024                          3541          CGR   2,4
0000239C 4780 C290               00002490   3542          BE    @L109
000023A0 E330 C130 0016          00002330   3543          LLGF  3,@lit_977_107 ; __stderrp
000023A6 E3F3 5000 0004          00000000   3544          LG    15,0(3,5)   ; __stderrp
000023AC E3F0 D0F8 0024          000000F8   3545          STG   15,248(0,13)
000023B2 E360 C128 0004          00002328   3546          LG    6,@lit_977_108
000023B8 41F0 6022               00000022   3547          LA    15,34(0,6)
000023BC E3F0 D100 0024          00000100   3548          STG   15,256(0,13)
000023C2 41F0 6058               00000058   3549          LA    15,88(0,6)
000023C6 E3F0 D108 0024          00000108   3550          STG   15,264(0,13)
000023CC E548 D110 01D0          00000110   3551          MVGHI 272(13),464
000023D2 E370 C120 0004          00002320   3552          LG    7,@lit_977_109
000023D8 41F0 7046               00000046   3553          LA    15,70(0,7)
000023DC E3F0 D118 0024          00000118   3554          STG   15,280(0,13)
000023E2 4110 D0F8               000000F8   3555          LA    1,248(0,13)
000023E6 E380 C118 0004          00002318   3556          LG    8,@lit_977_110 ; fprintf
000023EC B904 00F8                          3557          LGR   15,8
000023F0                                    3558 @@gen_label132 DS    0H
000023F0 05EF                               3559          BALR  14,15
000023F2                                    3560 @@gen_label133 DS    0H
000023F2 E3F3 5000 0004          00000000   3561          LG    15,0(3,5)   ; __stderrp
000023F8 E3F0 D0F8 0024          000000F8   3562          STG   15,248(0,13)
000023FE 41F0 6084               00000084   3563          LA    15,132(0,6)
00002402 E3F0 D100 0024          00000100   3564          STG   15,256(0,13)
                                                                                                                           Page   74 
  Active Usings: @REGION_977_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002408 E320 D108 0024          00000108   3565          STG   2,264(0,13)
0000240E E340 D110 0024          00000110   3566          STG   4,272(0,13)
00002414 4110 D0F8               000000F8   3567          LA    1,248(0,13)
00002418 B904 00F8                          3568          LGR   15,8
0000241C                                    3569 @@gen_label134 DS    0H
0000241C 05EF                               3570          BALR  14,15
0000241E                                    3571 @@gen_label135 DS    0H
0000241E E3F3 5000 0004          00000000   3572          LG    15,0(3,5)   ; __stderrp
00002424 E3F0 D0F8 0024          000000F8   3573          STG   15,248(0,13)
0000242A 41F0 60A2               000000A2   3574          LA    15,162(0,6)
0000242E E3F0 D100 0024          00000100   3575          STG   15,256(0,13)
00002434 4110 D0F8               000000F8   3576          LA    1,248(0,13)
00002438 B904 00F8                          3577          LGR   15,8
0000243C                                    3578 @@gen_label136 DS    0H
0000243C 05EF                               3579          BALR  14,15
0000243E                                    3580 @@gen_label137 DS    0H
0000243E E3F0 C134 0016          00002334   3581          LLGF  15,@lit_977_115 ; rd_unittest_assert_on_failure
00002444 41FF 5000               00000000   3582          LA    15,0(15,5)
00002448 9500 F000      00000000 00000000   3583          CLI   0(15),0
0000244C 4780 C288               00002488   3584          BE    @L110
00002450 B920 0024                          3585          CGR   2,4
00002454 4780 C288               00002488   3586          BE    @L110
00002458                                    3587 @L111    DS    0H
00002458 41F0 7046               00000046   3588          LA    15,70(0,7)
0000245C E3F0 D0F8 0024          000000F8   3589          STG   15,248(0,13)
00002462 41F0 6058               00000058   3590          LA    15,88(0,6)
00002466 E3F0 D100 0024          00000100   3591          STG   15,256(0,13)
0000246C E548 D108 01D0          00000108   3592          MVGHI 264(13),464
00002472 41F0 60A8               000000A8   3593          LA    15,168(0,6)
00002476 E3F0 D110 0024          00000110   3594          STG   15,272(0,13)
0000247C 4110 D0F8               000000F8   3595          LA    1,248(0,13)
00002480 E3F0 C138 0004          00002338   3596          LG    15,@lit_977_116 ; __assert
00002486                                    3597 @@gen_label140 DS    0H
00002486 05EF                               3598          BALR  14,15
00002488                                    3599 @@gen_label141 DS    0H
00002488                                    3600 @L112    DS    0H
00002488                                    3601 @L110    DS    0H
00002488 A7F9 0001               00000001   3602          LGHI  15,1        ; 1
0000248C 47F0 C2F4               000024F4   3603          B     @ret_lab_977
00002490                                    3604 @L109    DS    0H
                                            3605 * ***
                                            3606 * ***
                                            3607 * ***           rd_hdr_histogram_destroy(hdr);
00002490 E330 D0F8 0024          000000F8   3608          STG   3,248(0,13)
00002496 4110 D0F8               000000F8   3609          LA    1,248(0,13)
0000249A E3F0 C140 0004          00002340   3610          LG    15,@lit_977_118 ; rd_hdr_histogram_destroy
000024A0                                    3611 @@gen_label142 DS    0H
000024A0 05EF                               3612          BALR  14,15
000024A2                                    3613 @@gen_label143 DS    0H
                                            3614 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                            3615 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 468, \
                                            3616 * __FUNCTION__); return 0; } while (0);
                                                                                                                           Page   75 
  Active Usings: @REGION_977_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000024A2                                    3617 @L113    DS    0H
000024A2 E3F0 C130 0016          00002330   3618          LLGF  15,@lit_977_107 ; __stderrp
000024A8 E3FF 5000 0004          00000000   3619          LG    15,0(15,5)  ; __stderrp
000024AE E3F0 D0F8 0024          000000F8   3620          STG   15,248(0,13)
000024B4 E3F0 C128 0004          00002328   3621          LG    15,@lit_977_108
000024BA 4110 F0B2               000000B2   3622          LA    1,178(0,15)
000024BE E310 D100 0024          00000100   3623          STG   1,256(0,13)
000024C4 41F0 F058               00000058   3624          LA    15,88(0,15)
000024C8 E3F0 D108 0024          00000108   3625          STG   15,264(0,13)
000024CE E548 D110 01D4          00000110   3626          MVGHI 272(13),468
000024D4 E3F0 C120 0004          00002320   3627          LG    15,@lit_977_109
000024DA 41F0 F046               00000046   3628          LA    15,70(0,15)
000024DE E3F0 D118 0024          00000118   3629          STG   15,280(0,13)
000024E4 4110 D0F8               000000F8   3630          LA    1,248(0,13)
000024E8 E3F0 C118 0004          00002318   3631          LG    15,@lit_977_110 ; fprintf
000024EE                                    3632 @@gen_label144 DS    0H
000024EE 05EF                               3633          BALR  14,15
000024F0                                    3634 @@gen_label145 DS    0H
000024F0 A7F9 0000               00000000   3635          LGHI  15,0        ; 0
                                            3636 * ***   }
000024F4                                    3637 @ret_lab_977 DS 0H
                                            3638 * * **** Start of Epilogue
                                            3639          DCCEPIL
000024F4                                    3640+         ds 0h                                                          01-DCCEP
                                            3641+* Epilog
000024F4 D707 D088 D088 00000088 00000088   3642+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000024FA E3D0 D080 0004          00000080   3643+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002500 E3C0 D090 0004          00000090   3644+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002506 E3B0 C018 0004          00000018   3645+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000250C E3C0 B010 0021          00000010   3646+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002512 E3E0 D008 0004          00000008   3647+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002518 EB1C D020 0004          00000020   3648+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000251E 078E                               3649+         bcr 8,14                if same dsab, just return              01-DCCEP
00002520 E3F0 D010 0024          00000010   3650+         stg 15,16(0,13)         save return code                       01-DCCEP
00002526 E300 D018 0024          00000018   3651+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000252C E3F0 D090 0004          00000090   3652+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002532 E3F0 F018 0004          00000018   3653+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002538 47F0 F040               00000040   3654+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            3655+* End of Epilog
                                            3656 * * **** End of Epilogue
                                            3657          DROP  12
                                            3658 *
                                            3659 *   DSECT for automatic variables in "ut_high_sigfig"
                                            3660 *      (FUNCTION #977)
                                            3661 *
00000000                00000000 000000F8   3662 @AUTO#ut_high_sigfig DSECT
00000000                                    3663          DS    XL168
000000A8                                    3664 ut_high_sigfig#exp#0 DS 8XL1 ; exp
000000B0                000000B0 000000A8   3665          ORG   @AUTO#ut_high_sigfig+168
000000A8                                    3666 ut_high_sigfig#v#0 DS 8XL1 ; v
000000B0                000000B0 000000A8   3667          ORG   @AUTO#ut_high_sigfig+168
000000A8                                    3668 ut_high_sigfig#i#0 DS 8XL1 ; i
                                                                                                                           Page   76 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000000B0                000000B0 000000A8   3669          ORG   @AUTO#ut_high_sigfig+168
000000A8                                    3670 ut_high_sigfig#input#0 DS 80XL1 ; input
                                            3671 *
0000253C                00000000 000056F0   3672 @CODE    CSECT
                                            3673 *
                                            3674 *
                                            3675 *
                                            3676 * ....... start of ut_quantile
0000253C                                    3677 @LNAME978 DS   0H
0000253C 0000000B                           3678          DC    X'0000000B'
00002540 A4A36D98A48195A3                   3679          DC    C'ut_quantile'
0000254B 00                                 3680          DC    X'00'
                                            3681 ut_quantile DCCPRLG CINDEX=978,BASER=12,FRAME=320,ENTRY=NO,ARCH=ZARCH,L*
                                                                NAMEADDR=@LNAME978
                                            3682          macro
                                            3683          dccextrn &m
                                            3684          gblc    &$dccext(1000)
                                            3685          gbla    &$dccexti
                                            3686          lcla    &i
                                            3687 &$dccext(&$dccexti+1) setc    '&m'
                                            3688 &i       seta    1
                                            3689 .loop    aif    (&i gt &$dccexti).around
                                            3690          aif    ('&$dccext(&i)' eq '&m').getout
                                            3691 &i       seta    &i+1
                                            3692          ago     .loop
                                            3693 .around  anop
                                            3694 &$dccexti seta &$dccexti+1
                                            3695          extrn  &m
                                            3696 .getout  anop
                                            3697          mend
00002550                                    3698+$eye0081    ds    0d                                                    02-DCCCA
00002550 C4C3C3                             3699+         dc cl3'DCC'                                                    02-DCCCA
00002553 01                                 3700+         dc xl1'01' format one                                          02-DCCCA
00002554 00000000                           3701+         dc a(0)                                                        02-DCCCA
00002558 00000000000025C2                   3702+         dc ad(@PER_978)                                                02-DCCCA
00002560 0000000000000140                   3703+         dc ad(320)                                                     02-DCCCA
00002568 0000000000000000                   3704+         dc ad(0)                                                       02-DCCCA
00002570 0000000000001000                   3705+         dc ad(4096)                                                    02-DCCCA
00002578 20                                 3706+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002579 03                                 3707+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000257A 03                                 3708+         dc al1(3)                                                      02-DCCCA
0000257B 08                                 3709+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000257C 00                                 3710+         dc bl.8'00000000'                                              02-DCCCA
0000257D 000000                             3711+         dc al3(0)                                                      02-DCCCA
00002580 000000000000253C                   3712+         dc ad(@LNAME978)                                               02-DCCCA
00002588                                    3713+         ds 0d                                                          02-DCCCA
00002588 0000000000002550                   3714+         dc ad($eye0081)                                                02-DCCCA
00002590 0000000000000000                   3715+         dc ad(0)                                                       02-DCCCA
00002598                                    3716+         ds    0d                                                       01-DCCPR
00002598                                    3717+ut_quantile ds 0d                                                       01-DCCPR
00002598                                    3718+@REGION_978_1 ds 0h                                                     01-DCCPR
00002598 EBEC D008 0024          00000008   3719+         stmg  14,12,8(13)                         Save regs            01-DCCPR
                                                                                                                           Page   77 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000259E E3E0 D088 0004          00000088   3720+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
000025A4 E3C0 D090 0004          00000090   3721+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
000025AA B904 002E                          3722+         lgr   2,14                copy addr of our savearea            01-DCCPR
000025AE E3B0 C018 0004          00000018   3723+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000025B4 A7EB 0140               00000140   3724+         aghi  14,320              increase by frame size               01-DCCPR
000025B8 E3E0 C020 0021          00000020   3725+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000025BE 4720 B020               00000020   3726+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000025C2                                    3727+@PER_978 ds    0h                                                       01-DCCPR
000025C2 EBDE 2080 0024          00000080   3728+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000025C8 E3C0 2090 0024          00000090   3729+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000025CE B904 00D2                          3730+         lgr   13,2                set real frame pointer               01-DCCPR
000025D2 B904 00CF                          3731+         lgr   12,15               set base reg                         01-DCCPR
                        00002598            3732+         using @REGION_978_1,12                                         01-DCCPR
                                            3733          DCCPRV REG=5      ; Get PRV from DVT
000025D6 E350 B008 0004          00000008   3734+         LG 5,8(0,11)                                                   01-DCCPR
                                            3735 * ******* End of Prologue
                                            3736 * *
                                            3737 * ***           rd_hdr_histogram_t *hdr = rd_hdr_histogram_new(1, 1000\
                                            3738 * 0000, 3);
000025DC E548 D118 0001          00000118   3739          MVGHI 280(13),1
000025E2 C0FF 0098 9680                     3740          LLILF 15,X'00989680' ; 10000000
000025E8 E3F0 D120 0024          00000120   3741          STG   15,288(0,13)
000025EE E548 D128 0003          00000128   3742          MVGHI 296(13),3
000025F4 4110 D118               00000118   3743          LA    1,280(0,13)
000025F8 E3F0 C108 0004          000026A0   3744          LG    15,@lit_978_126 ; rd_hdr_histogram_new
000025FE                                    3745 @@gen_label146 DS    0H
000025FE 05EF                               3746          BALR  14,15
00002600                                    3747 @@gen_label147 DS    0H
00002600 B904 003F                          3748          LGR   3,15
                                            3749 * ***           size_t i;
                                            3750 * ***           const struct {
                                            3751 * ***                   double  q;
                                            3752 * ***                   int64_t v;
                                            3753 * ***           } exp[] = {
                                            3754 * ***                   { 50, 500223 },
00002604 68F0 C140               000026D8   3755          LD    15,@lit_978_127
00002608 60F0 D0A8               000000A8   3756          STD   15,168(0,13)
0000260C C0FF 0007 A1FF                     3757          LLILF 15,X'0007A1FF' ; 500223
00002612 E3F0 D0B0 0024          000000B0   3758          STG   15,176(0,13)
                                            3759 * ***                   { 75, 750079 },
00002618 68F0 C138               000026D0   3760          LD    15,@lit_978_129
0000261C 60F0 D0B8               000000B8   3761          STD   15,184(0,13)
00002620 C0FF 000B 71FF                     3762          LLILF 15,X'000B71FF' ; 750079
00002626 E3F0 D0C0 0024          000000C0   3763          STG   15,192(0,13)
                                            3764 * ***                   { 90, 900095 },
0000262C 68F0 C130               000026C8   3765          LD    15,@lit_978_131
00002630 60F0 D0C8               000000C8   3766          STD   15,200(0,13)
00002634 C0FF 000D BBFF                     3767          LLILF 15,X'000DBBFF' ; 900095
0000263A E3F0 D0D0 0024          000000D0   3768          STG   15,208(0,13)
                                            3769 * ***                   { 95, 950271 },
00002640 68F0 C128               000026C0   3770          LD    15,@lit_978_133
00002644 60F0 D0D8               000000D8   3771          STD   15,216(0,13)
                                                                                                                           Page   78 
  Active Usings: @REGION_978_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002648 C0FF 000E 7FFF                     3772          LLILF 15,X'000E7FFF' ; 950271
0000264E E3F0 D0E0 0024          000000E0   3773          STG   15,224(0,13)
                                            3774 * ***                   { 99, 990207 },
00002654 68F0 C120               000026B8   3775          LD    15,@lit_978_135
00002658 60F0 D0E8               000000E8   3776          STD   15,232(0,13)
0000265C C0FF 000F 1BFF                     3777          LLILF 15,X'000F1BFF' ; 990207
00002662 E3F0 D0F0 0024          000000F0   3778          STG   15,240(0,13)
                                            3779 * ***                   { 99.9, 999423 },
00002668 68F0 C118               000026B0   3780          LD    15,@lit_978_137
0000266C 60F0 D0F8               000000F8   3781          STD   15,248(0,13)
00002670 C0FF 000F 3FFF                     3782          LLILF 15,X'000F3FFF' ; 999423
00002676 E3F0 D100 0024          00000100   3783          STG   15,256(0,13)
                                            3784 * ***                   { 99.99, 999935 },
0000267C 68F0 C110               000026A8   3785          LD    15,@lit_978_139
00002680 60F0 D108               00000108   3786          STD   15,264(0,13)
00002684 C0FF 000F 41FF                     3787          LLILF 15,X'000F41FF' ; 999935
0000268A E3F0 D110 0024          00000110   3788          STG   15,272(0,13)
                                            3789 * ***           };
                                            3790 * ***
                                            3791 * ***           for (i = 0 ; i < 1000000 ; i++) {
00002690 A729 0000               00000000   3792          LGHI  2,0         ; 0
00002694 47F0 C294               0000282C   3793          B     @L117
00002698                                    3794          DS    0D
00002698 00000140                           3795 @FRAMESIZE_978 DC F'320'
0000269C 00000000
000026A0 0000000000000488                   3796 @lit_978_126 DC AD(rd_hdr_histogram_new)
000026A8                                    3797          DS 0D
000026A8 4263FD70A3D70A3D                   3798 @lit_978_139 DC XL8'4263FD70A3D70A3D'
000026B0                                    3799          DS 0D
000026B0 4263E66666666666                   3800 @lit_978_137 DC XL8'4263E66666666666'
000026B8                                    3801          DS 0D
000026B8 4263000000000000                   3802 @lit_978_135 DC XL8'4263000000000000'
000026C0                                    3803          DS 0D
000026C0 425F000000000000                   3804 @lit_978_133 DC XL8'425F000000000000'
000026C8                                    3805          DS 0D
000026C8 425A000000000000                   3806 @lit_978_131 DC XL8'425A000000000000'
000026D0                                    3807          DS 0D
000026D0 424B000000000000                   3808 @lit_978_129 DC XL8'424B000000000000'
000026D8                                    3809          DS 0D
000026D8 4232000000000000                   3810 @lit_978_127 DC XL8'4232000000000000'
000026E0 0000000000001EB8                   3811 @lit_978_142 DC AD(rd_hdr_histogram_record)
000026E8 0000000000000000                   3812 @lit_978_146 DC AD(fprintf)
000026F0 00000000000056F0                   3813 @lit_978_145 DC AD(@DATA)
000026F8 00000000000057E8                   3814 @lit_978_144 DC AD(@strings@)
00002700 00000000                           3815 @lit_978_143 DC Q(__stderrp)
00002704 00000000                           3816 @lit_978_151 DC Q(rd_unittest_assert_on_failure)
00002708 0000000000000000                   3817 @lit_978_152 DC AD(__assert)
00002710 0000000000002050                   3818 @lit_978_155 DC AD(rd_hdr_histogram_quantile)
00002718 0000000000000370                   3819 @lit_978_167 DC AD(rd_hdr_histogram_destroy)
00002720                                    3820 @L116    DS    0H
                                            3821 * ***                   int r = rd_hdr_histogram_record(hdr, (int64_t)\
                                            3822 * i);
                                                                                                                           Page   79 
  Active Usings: @REGION_978_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002720 E330 D118 0024          00000118   3823          STG   3,280(0,13)
00002726 E320 D120 0024          00000120   3824          STG   2,288(0,13)
0000272C 4110 D118               00000118   3825          LA    1,280(0,13)
00002730 E3F0 C148 0004          000026E0   3826          LG    15,@lit_978_142 ; rd_hdr_histogram_record
00002736                                    3827 @@gen_label148 DS    0H
00002736 05EF                               3828          BALR  14,15
00002738                                    3829 @@gen_label149 DS    0H
00002738 184F                               3830          LR    4,15
                                            3831 * ***                   do { if (!(r)) { fprintf(__stderrp, "\033[31mR\
                                            3832 * DUT: FAIL: %s:%d: %s: " "assert failed: " "r" ": ", "C:\\asgkafka\\l\
                                            3833 * ibrdkafka\\src\\rdhdrhistogram.c", 489, __FUNCTION__); fprintf(__std\
                                            3834 * errp, "record(%" "lld" ") failed\n", (int64_t)i); fprintf(__stderrp,\
                                            3835 *  "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r) ? (void)0 : _\
                                            3836 * _assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c",\
                                            3837 *  489, "r")); return 1; } } while (0);
0000273A                                    3838 @L120    DS    0H
0000273A 1244                               3839          LTR   4,4
0000273C 4770 C290               00002828   3840          BNZ   @L123
00002740 E330 C168 0016          00002700   3841          LLGF  3,@lit_978_143 ; __stderrp
00002746 E3F3 5000 0004          00000000   3842          LG    15,0(3,5)   ; __stderrp
0000274C E3F0 D118 0024          00000118   3843          STG   15,280(0,13)
00002752 E360 C160 0004          000026F8   3844          LG    6,@lit_978_144
00002758 41F0 60D2               000000D2   3845          LA    15,210(0,6)
0000275C E3F0 D120 0024          00000120   3846          STG   15,288(0,13)
00002762 41F0 6058               00000058   3847          LA    15,88(0,6)
00002766 E3F0 D128 0024          00000128   3848          STG   15,296(0,13)
0000276C E548 D130 01E9          00000130   3849          MVGHI 304(13),489
00002772 E370 C158 0004          000026F0   3850          LG    7,@lit_978_145
00002778 41F0 7056               00000056   3851          LA    15,86(0,7)
0000277C E3F0 D138 0024          00000138   3852          STG   15,312(0,13)
00002782 4110 D118               00000118   3853          LA    1,280(0,13)
00002786 E380 C150 0004          000026E8   3854          LG    8,@lit_978_146 ; fprintf
0000278C B904 00F8                          3855          LGR   15,8
00002790                                    3856 @@gen_label151 DS    0H
00002790 05EF                               3857          BALR  14,15
00002792                                    3858 @@gen_label152 DS    0H
00002792 E3F3 5000 0004          00000000   3859          LG    15,0(3,5)   ; __stderrp
00002798 E3F0 D118 0024          00000118   3860          STG   15,280(0,13)
0000279E 41F0 6102               00000102   3861          LA    15,258(0,6)
000027A2 E3F0 D120 0024          00000120   3862          STG   15,288(0,13)
000027A8 E320 D128 0024          00000128   3863          STG   2,296(0,13)
000027AE 4110 D118               00000118   3864          LA    1,280(0,13)
000027B2 B904 00F8                          3865          LGR   15,8
000027B6                                    3866 @@gen_label153 DS    0H
000027B6 05EF                               3867          BALR  14,15
000027B8                                    3868 @@gen_label154 DS    0H
000027B8 E3F3 5000 0004          00000000   3869          LG    15,0(3,5)   ; __stderrp
000027BE E3F0 D118 0024          00000118   3870          STG   15,280(0,13)
000027C4 41F0 60A2               000000A2   3871          LA    15,162(0,6)
000027C8 E3F0 D120 0024          00000120   3872          STG   15,288(0,13)
000027CE 4110 D118               00000118   3873          LA    1,280(0,13)
000027D2 B904 00F8                          3874          LGR   15,8
                                                                                                                           Page   80 
  Active Usings: @REGION_978_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000027D6                                    3875 @@gen_label155 DS    0H
000027D6 05EF                               3876          BALR  14,15
000027D8                                    3877 @@gen_label156 DS    0H
000027D8 E3F0 C16C 0016          00002704   3878          LLGF  15,@lit_978_151 ; rd_unittest_assert_on_failure
000027DE 41FF 5000               00000000   3879          LA    15,0(15,5)
000027E2 9500 F000      00000000 00000000   3880          CLI   0(15),0
000027E6 4780 C288               00002820   3881          BE    @L124
000027EA 1244                               3882          LTR   4,4
000027EC 4770 C288               00002820   3883          BNZ   @L124
000027F0                                    3884 @L125    DS    0H
000027F0 41F0 7056               00000056   3885          LA    15,86(0,7)
000027F4 E3F0 D118 0024          00000118   3886          STG   15,280(0,13)
000027FA 41F0 6058               00000058   3887          LA    15,88(0,6)
000027FE E3F0 D120 0024          00000120   3888          STG   15,288(0,13)
00002804 E548 D128 01E9          00000128   3889          MVGHI 296(13),489
0000280A 41F0 6118               00000118   3890          LA    15,280(0,6)
0000280E E3F0 D130 0024          00000130   3891          STG   15,304(0,13)
00002814 4110 D118               00000118   3892          LA    1,280(0,13)
00002818 E3F0 C170 0004          00002708   3893          LG    15,@lit_978_152 ; __assert
0000281E                                    3894 @@gen_label159 DS    0H
0000281E 05EF                               3895          BALR  14,15
00002820                                    3896 @@gen_label160 DS    0H
00002820                                    3897 @L126    DS    0H
00002820                                    3898 @L124    DS    0H
00002820 A7F9 0001               00000001   3899          LGHI  15,1        ; 1
00002824 47F0 C462               000029FA   3900          B     @ret_lab_978
00002828                                    3901 @L123    DS    0H
                                            3902 * ***           }
00002828 A72B 0001               00000001   3903          AGHI  2,1
0000282C                                    3904 @L117    DS    0H
0000282C C22E 000F 4240                     3905          CLGFI 2,X'000F4240'
00002832 4740 C188               00002720   3906          BL    @L116
                                            3907 * ***
                                            3908 * ***           for (i =  0 ; i < (sizeof((exp)) / sizeof(*(exp))) ; i\
                                            3909 * ++) {
00002836 A729 0000               00000000   3910          LGHI  2,0         ; 0
0000283A 47F0 C3F4               0000298C   3911          B     @L128
0000283E                                    3912 @L127    DS    0H
                                            3913 * ***                   int64_t v = rd_hdr_histogram_quantile(hdr, exp\
                                            3914 * [i].q);
0000283E E330 D118 0024          00000118   3915          STG   3,280(0,13)
00002844 EBF2 0004 000D          00000004   3916          SLLG  15,2,4(0)   ; *0x10
0000284A 41FF D0A8               000000A8   3917          LA    15,168(15,13)
0000284E D207 D120 F000 00000120 00000000   3918          MVC   288(8,13),0(15)
00002854 4110 D118               00000118   3919          LA    1,280(0,13)
00002858 E3F0 C178 0004          00002710   3920          LG    15,@lit_978_155 ; rd_hdr_histogram_quantile
0000285E                                    3921 @@gen_label162 DS    0H
0000285E 05EF                               3922          BALR  14,15
00002860                                    3923 @@gen_label163 DS    0H
00002860 B904 004F                          3924          LGR   4,15
                                            3925 * ***                   do { if (!(v == exp[i].v)) { fprintf(__stderrp\
                                            3926 * , "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "v == exp[i].v\
                                                                                                                           Page   81 
  Active Usings: @REGION_978_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            3927 * " ": ", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 494, __FU\
                                            3928 * NCTION__); fprintf(__stderrp, "P%.2f is %" "lld" ", expected %" "lld\
                                            3929 * ", exp[i].q, v, exp[i].v); fprintf(__stderrp, "\033[0m\n"); if (rd_u\
                                            3930 * nittest_assert_on_failure) ((v == exp[i].v) ? (void)0 : __assert(__f\
                                            3931 * unc__, "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 494, "v ==\
                                            3932 *  exp[i].v")); return 1; } } while (0);
00002864                                    3933 @L131    DS    0H
00002864 EBF2 0004 000D          00000004   3934          SLLG  15,2,4(0)   ; *0x10
0000286A E34F D0B0 0020          000000B0   3935          CG    4,176(15,13)
00002870 4780 C3F0               00002988   3936          BE    @L134
00002874 E330 C168 0016          00002700   3937          LLGF  3,@lit_978_143 ; __stderrp
0000287A E3F3 5000 0004          00000000   3938          LG    15,0(3,5)   ; __stderrp
00002880 E3F0 D118 0024          00000118   3939          STG   15,280(0,13)
00002886 E360 C160 0004          000026F8   3940          LG    6,@lit_978_144
0000288C 41F0 611A               0000011A   3941          LA    15,282(0,6)
00002890 E3F0 D120 0024          00000120   3942          STG   15,288(0,13)
00002896 41F0 6058               00000058   3943          LA    15,88(0,6)
0000289A E3F0 D128 0024          00000128   3944          STG   15,296(0,13)
000028A0 E548 D130 01EE          00000130   3945          MVGHI 304(13),494
000028A6 E370 C158 0004          000026F0   3946          LG    7,@lit_978_145
000028AC 41F0 7056               00000056   3947          LA    15,86(0,7)
000028B0 E3F0 D138 0024          00000138   3948          STG   15,312(0,13)
000028B6 4110 D118               00000118   3949          LA    1,280(0,13)
000028BA E380 C150 0004          000026E8   3950          LG    8,@lit_978_146 ; fprintf
000028C0 B904 00F8                          3951          LGR   15,8
000028C4                                    3952 @@gen_label165 DS    0H
000028C4 05EF                               3953          BALR  14,15
000028C6                                    3954 @@gen_label166 DS    0H
000028C6 E3F3 5000 0004          00000000   3955          LG    15,0(3,5)   ; __stderrp
000028CC E3F0 D118 0024          00000118   3956          STG   15,280(0,13)
000028D2 41F0 6156               00000156   3957          LA    15,342(0,6)
000028D6 E3F0 D120 0024          00000120   3958          STG   15,288(0,13)
000028DC EBF2 0004 000D          00000004   3959          SLLG  15,2,4(0)   ; *0x10
000028E2 41FF D0A8               000000A8   3960          LA    15,168(15,13)
000028E6 D207 D128 F000 00000128 00000000   3961          MVC   296(8,13),0(15)
000028EC E340 D130 0024          00000130   3962          STG   4,304(0,13)
000028F2 EBF2 0004 000D          00000004   3963          SLLG  15,2,4(0)   ; *0x10
000028F8 E3FF D0B0 0004          000000B0   3964          LG    15,176(15,13)
000028FE E3F0 D138 0024          00000138   3965          STG   15,312(0,13)
00002904 4110 D118               00000118   3966          LA    1,280(0,13)
00002908 B904 00F8                          3967          LGR   15,8
0000290C                                    3968 @@gen_label167 DS    0H
0000290C 05EF                               3969          BALR  14,15
0000290E                                    3970 @@gen_label168 DS    0H
0000290E E3F3 5000 0004          00000000   3971          LG    15,0(3,5)   ; __stderrp
00002914 E3F0 D118 0024          00000118   3972          STG   15,280(0,13)
0000291A 41F0 60A2               000000A2   3973          LA    15,162(0,6)
0000291E E3F0 D120 0024          00000120   3974          STG   15,288(0,13)
00002924 4110 D118               00000118   3975          LA    1,280(0,13)
00002928 B904 00F8                          3976          LGR   15,8
0000292C                                    3977 @@gen_label169 DS    0H
0000292C 05EF                               3978          BALR  14,15
                                                                                                                           Page   82 
  Active Usings: @REGION_978_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000292E                                    3979 @@gen_label170 DS    0H
0000292E E3F0 C16C 0016          00002704   3980          LLGF  15,@lit_978_151 ; rd_unittest_assert_on_failure
00002934 41FF 5000               00000000   3981          LA    15,0(15,5)
00002938 9500 F000      00000000 00000000   3982          CLI   0(15),0
0000293C 4780 C3E8               00002980   3983          BE    @L135
00002940 EBF2 0004 000D          00000004   3984          SLLG  15,2,4(0)   ; *0x10
00002946 E34F D0B0 0020          000000B0   3985          CG    4,176(15,13)
0000294C 4780 C3E8               00002980   3986          BE    @L135
00002950                                    3987 @L136    DS    0H
00002950 41F0 7056               00000056   3988          LA    15,86(0,7)
00002954 E3F0 D118 0024          00000118   3989          STG   15,280(0,13)
0000295A 41F0 6058               00000058   3990          LA    15,88(0,6)
0000295E E3F0 D120 0024          00000120   3991          STG   15,288(0,13)
00002964 E548 D128 01EE          00000128   3992          MVGHI 296(13),494
0000296A 41F0 6174               00000174   3993          LA    15,372(0,6)
0000296E E3F0 D130 0024          00000130   3994          STG   15,304(0,13)
00002974 4110 D118               00000118   3995          LA    1,280(0,13)
00002978 E3F0 C170 0004          00002708   3996          LG    15,@lit_978_152 ; __assert
0000297E                                    3997 @@gen_label173 DS    0H
0000297E 05EF                               3998          BALR  14,15
00002980                                    3999 @@gen_label174 DS    0H
00002980                                    4000 @L137    DS    0H
00002980                                    4001 @L135    DS    0H
00002980 A7F9 0001               00000001   4002          LGHI  15,1        ; 1
00002984 47F0 C462               000029FA   4003          B     @ret_lab_978
00002988                                    4004 @L134    DS    0H
                                            4005 * ***
                                            4006 * ***
                                            4007 * ***           }
00002988 A72B 0001               00000001   4008          AGHI  2,1
0000298C                                    4009 @L128    DS    0H
0000298C C22E 0000 0007                     4010          CLGFI 2,X'00000007'
00002992 4740 C2A6               0000283E   4011          BL    @L127
                                            4012 * ***
                                            4013 * ***           rd_hdr_histogram_destroy(hdr);
00002996 E330 D118 0024          00000118   4014          STG   3,280(0,13)
0000299C 4110 D118               00000118   4015          LA    1,280(0,13)
000029A0 E3F0 C180 0004          00002718   4016          LG    15,@lit_978_167 ; rd_hdr_histogram_destroy
000029A6                                    4017 @@gen_label176 DS    0H
000029A6 05EF                               4018          BALR  14,15
000029A8                                    4019 @@gen_label177 DS    0H
                                            4020 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                            4021 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 500, \
                                            4022 * __FUNCTION__); return 0; } while (0);
000029A8                                    4023 @L138    DS    0H
000029A8 E3F0 C168 0016          00002700   4024          LLGF  15,@lit_978_143 ; __stderrp
000029AE E3FF 5000 0004          00000000   4025          LG    15,0(15,5)  ; __stderrp
000029B4 E3F0 D118 0024          00000118   4026          STG   15,280(0,13)
000029BA E3F0 C160 0004          000026F8   4027          LG    15,@lit_978_144
000029C0 4110 F0B2               000000B2   4028          LA    1,178(0,15)
000029C4 E310 D120 0024          00000120   4029          STG   1,288(0,13)
000029CA 41F0 F058               00000058   4030          LA    15,88(0,15)
                                                                                                                           Page   83 
  Active Usings: @REGION_978_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000029CE E3F0 D128 0024          00000128   4031          STG   15,296(0,13)
000029D4 E548 D130 01F4          00000130   4032          MVGHI 304(13),500
000029DA E3F0 C158 0004          000026F0   4033          LG    15,@lit_978_145
000029E0 41F0 F056               00000056   4034          LA    15,86(0,15)
000029E4 E3F0 D138 0024          00000138   4035          STG   15,312(0,13)
000029EA 4110 D118               00000118   4036          LA    1,280(0,13)
000029EE E3F0 C150 0004          000026E8   4037          LG    15,@lit_978_146 ; fprintf
000029F4                                    4038 @@gen_label178 DS    0H
000029F4 05EF                               4039          BALR  14,15
000029F6                                    4040 @@gen_label179 DS    0H
000029F6 A7F9 0000               00000000   4041          LGHI  15,0        ; 0
                                            4042 * ***   }
000029FA                                    4043 @ret_lab_978 DS 0H
                                            4044 * * **** Start of Epilogue
                                            4045          DCCEPIL
000029FA                                    4046+         ds 0h                                                          01-DCCEP
                                            4047+* Epilog
000029FA D707 D088 D088 00000088 00000088   4048+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002A00 E3D0 D080 0004          00000080   4049+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002A06 E3C0 D090 0004          00000090   4050+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002A0C E3B0 C018 0004          00000018   4051+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002A12 E3C0 B010 0021          00000010   4052+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002A18 E3E0 D008 0004          00000008   4053+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002A1E EB1C D020 0004          00000020   4054+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002A24 078E                               4055+         bcr 8,14                if same dsab, just return              01-DCCEP
00002A26 E3F0 D010 0024          00000010   4056+         stg 15,16(0,13)         save return code                       01-DCCEP
00002A2C E300 D018 0024          00000018   4057+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002A32 E3F0 D090 0004          00000090   4058+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002A38 E3F0 F018 0004          00000018   4059+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002A3E 47F0 F040               00000040   4060+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4061+* End of Epilog
                                            4062 * * **** End of Epilogue
                                            4063          DROP  12
                                            4064 *
                                            4065 *   DSECT for automatic variables in "ut_quantile"
                                            4066 *      (FUNCTION #978)
                                            4067 *
00000000                00000000 00000118   4068 @AUTO#ut_quantile DSECT
00000000                                    4069          DS    XL168
000000A8                                    4070 ut_quantile#v#4 DS 8XL1    ; v
000000B0                000000B0 000000A8   4071          ORG   @AUTO#ut_quantile+168
000000A8                                    4072 ut_quantile#r#1 DS 1F      ; r
000000AC                000000AC 000000A8   4073          ORG   @AUTO#ut_quantile+168
000000A8                                    4074 ut_quantile#exp#0 DS 112XL1 ; exp
00000118                00000118 000000A8   4075          ORG   @AUTO#ut_quantile+168
000000A8                                    4076 ut_quantile#i#0 DS 8XL1    ; i
                                            4077 *
00002A42                00000000 000056F0   4078 @CODE    CSECT
                                            4079 *
                                            4080 *
                                            4081 *
                                            4082 * ....... start of ut_mean
                                                                                                                           Page   84 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002A42                                    4083 @LNAME979 DS   0H
00002A42 00000007                           4084          DC    X'00000007'
00002A46 A4A36D94858195                     4085          DC    C'ut_mean'
00002A4D 00                                 4086          DC    X'00'
                                            4087 ut_mean  DCCPRLG CINDEX=979,BASER=12,FRAME=224,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME979
                                            4088          macro
                                            4089          dccextrn &m
                                            4090          gblc    &$dccext(1000)
                                            4091          gbla    &$dccexti
                                            4092          lcla    &i
                                            4093 &$dccext(&$dccexti+1) setc    '&m'
                                            4094 &i       seta    1
                                            4095 .loop    aif    (&i gt &$dccexti).around
                                            4096          aif    ('&$dccext(&i)' eq '&m').getout
                                            4097 &i       seta    &i+1
                                            4098          ago     .loop
                                            4099 .around  anop
                                            4100 &$dccexti seta &$dccexti+1
                                            4101          extrn  &m
                                            4102 .getout  anop
                                            4103          mend
00002A50                                    4104+$eye0085    ds    0d                                                    02-DCCCA
00002A50 C4C3C3                             4105+         dc cl3'DCC'                                                    02-DCCCA
00002A53 01                                 4106+         dc xl1'01' format one                                          02-DCCCA
00002A54 00000000                           4107+         dc a(0)                                                        02-DCCCA
00002A58 0000000000002AC2                   4108+         dc ad(@PER_979)                                                02-DCCCA
00002A60 00000000000000E0                   4109+         dc ad(224)                                                     02-DCCCA
00002A68 0000000000000000                   4110+         dc ad(0)                                                       02-DCCCA
00002A70 0000000000001000                   4111+         dc ad(4096)                                                    02-DCCCA
00002A78 20                                 4112+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002A79 03                                 4113+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002A7A 03                                 4114+         dc al1(3)                                                      02-DCCCA
00002A7B 08                                 4115+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002A7C 00                                 4116+         dc bl.8'00000000'                                              02-DCCCA
00002A7D 000000                             4117+         dc al3(0)                                                      02-DCCCA
00002A80 0000000000002A42                   4118+         dc ad(@LNAME979)                                               02-DCCCA
00002A88                                    4119+         ds 0d                                                          02-DCCCA
00002A88 0000000000002A50                   4120+         dc ad($eye0085)                                                02-DCCCA
00002A90 0000000000000000                   4121+         dc ad(0)                                                       02-DCCCA
00002A98                                    4122+         ds    0d                                                       01-DCCPR
00002A98                                    4123+ut_mean  ds    0d                                                       01-DCCPR
00002A98                                    4124+@REGION_979_1 ds 0h                                                     01-DCCPR
00002A98 EBEC D008 0024          00000008   4125+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002A9E E3E0 D088 0004          00000088   4126+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002AA4 E3C0 D090 0004          00000090   4127+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002AAA B904 002E                          4128+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002AAE E3B0 C018 0004          00000018   4129+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002AB4 A7EB 00E0               000000E0   4130+         aghi  14,224              increase by frame size               01-DCCPR
00002AB8 E3E0 C020 0021          00000020   4131+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002ABE 4720 B020               00000020   4132+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002AC2                                    4133+@PER_979 ds    0h                                                       01-DCCPR
                                                                                                                           Page   85 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002AC2 EBDE 2080 0024          00000080   4134+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002AC8 E3C0 2090 0024          00000090   4135+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002ACE B904 00D2                          4136+         lgr   13,2                set real frame pointer               01-DCCPR
00002AD2 B904 00CF                          4137+         lgr   12,15               set base reg                         01-DCCPR
                        00002A98            4138+         using @REGION_979_1,12                                         01-DCCPR
                                            4139          DCCPRV REG=5      ; Get PRV from DVT
00002AD6 E350 B008 0004          00000008   4140+         LG 5,8(0,11)                                                   01-DCCPR
                                            4141 * ******* End of Prologue
                                            4142 * *
                                            4143 * ***           rd_hdr_histogram_t *hdr = rd_hdr_histogram_new(1, 1000\
                                            4144 * 0000, 3);
00002ADC E548 D0B0 0001          000000B0   4145          MVGHI 176(13),1
00002AE2 C0FF 0098 9680                     4146          LLILF 15,X'00989680' ; 10000000
00002AE8 E3F0 D0B8 0024          000000B8   4147          STG   15,184(0,13)
00002AEE E548 D0C0 0003          000000C0   4148          MVGHI 192(13),3
00002AF4 4110 D0B0               000000B0   4149          LA    1,176(0,13)
00002AF8 E3F0 C080 0004          00002B18   4150          LG    15,@lit_979_175 ; rd_hdr_histogram_new
00002AFE                                    4151 @@gen_label180 DS    0H
00002AFE 05EF                               4152          BALR  14,15
00002B00                                    4153 @@gen_label181 DS    0H
00002B00 B904 003F                          4154          LGR   3,15
                                            4155 * ***           size_t i;
                                            4156 * ***           const double exp = 500000.013312;
                                            4157 * ***           double v;
                                            4158 * ***
                                            4159 * ***           for (i = 0 ; i < 1000000 ; i++) {
00002B04 A729 0000               00000000   4160          LGHI  2,0         ; 0
00002B08 47F0 C1EC               00002C84   4161          B     @L142
00002B10                                    4162          DS    0D
00002B10 000000E0                           4163 @FRAMESIZE_979 DC F'224'
00002B14 00000000
00002B18 0000000000000488                   4164 @lit_979_175 DC AD(rd_hdr_histogram_new)
00002B20                                    4165          DS 0D
00002B20 457A12003686A4CA                   4166 @lit_979_176 DC XL8'457A12003686A4CA'
00002B28 0000000000001EB8                   4167 @lit_979_178 DC AD(rd_hdr_histogram_record)
00002B30 0000000000000000                   4168 @lit_979_182 DC AD(fprintf)
00002B38 00000000000056F0                   4169 @lit_979_181 DC AD(@DATA)
00002B40 00000000000057E8                   4170 @lit_979_180 DC AD(@strings@)
00002B48 00000000                           4171 @lit_979_179 DC Q(__stderrp)
00002B4C 00000000                           4172 @lit_979_187 DC Q(rd_unittest_assert_on_failure)
00002B50 0000000000000000                   4173 @lit_979_188 DC AD(__assert)
00002B58 0000000000001D18                   4174 @lit_979_190 DC AD(rd_hdr_histogram_mean)
00002B60 00000000000002D0                   4175 @lit_979_192 DC AD(rd_dbl_eq0)
00002B68                                    4176          DS 0D
00002B68 3B1AD7F29ABCAF48                   4177 @lit_979_191 DC XL8'3B1AD7F29ABCAF48'
00002B70 0000000000000370                   4178 @lit_979_206 DC AD(rd_hdr_histogram_destroy)
00002B78                                    4179 @L141    DS    0H
                                            4180 * ***                   int r = rd_hdr_histogram_record(hdr, (int64_t)\
                                            4181 * i);
00002B78 E330 D0B0 0024          000000B0   4182          STG   3,176(0,13)
00002B7E E320 D0B8 0024          000000B8   4183          STG   2,184(0,13)
00002B84 4110 D0B0               000000B0   4184          LA    1,176(0,13)
                                                                                                                           Page   86 
  Active Usings: @REGION_979_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002B88 E3F0 C090 0004          00002B28   4185          LG    15,@lit_979_178 ; rd_hdr_histogram_record
00002B8E                                    4186 @@gen_label182 DS    0H
00002B8E 05EF                               4187          BALR  14,15
00002B90                                    4188 @@gen_label183 DS    0H
00002B90 184F                               4189          LR    4,15
                                            4190 * ***                   do { if (!(r)) { fprintf(__stderrp, "\033[31mR\
                                            4191 * DUT: FAIL: %s:%d: %s: " "assert failed: " "r" ": ", "C:\\asgkafka\\l\
                                            4192 * ibrdkafka\\src\\rdhdrhistogram.c", 511, __FUNCTION__); fprintf(__std\
                                            4193 * errp, "record(%" "lld" ") failed\n", (int64_t)i); fprintf(__stderrp,\
                                            4194 *  "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r) ? (void)0 : _\
                                            4195 * _assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c",\
                                            4196 *  511, "r")); return 1; } } while (0);
00002B92                                    4197 @L145    DS    0H
00002B92 1244                               4198          LTR   4,4
00002B94 4770 C1E8               00002C80   4199          BNZ   @L148
00002B98 E330 C0B0 0016          00002B48   4200          LLGF  3,@lit_979_179 ; __stderrp
00002B9E E3F3 5000 0004          00000000   4201          LG    15,0(3,5)   ; __stderrp
00002BA4 E3F0 D0B0 0024          000000B0   4202          STG   15,176(0,13)
00002BAA E360 C0A8 0004          00002B40   4203          LG    6,@lit_979_180
00002BB0 41F0 60D2               000000D2   4204          LA    15,210(0,6)
00002BB4 E3F0 D0B8 0024          000000B8   4205          STG   15,184(0,13)
00002BBA 41F0 6058               00000058   4206          LA    15,88(0,6)
00002BBE E3F0 D0C0 0024          000000C0   4207          STG   15,192(0,13)
00002BC4 E548 D0C8 01FF          000000C8   4208          MVGHI 200(13),511
00002BCA E370 C0A0 0004          00002B38   4209          LG    7,@lit_979_181
00002BD0 41F0 7062               00000062   4210          LA    15,98(0,7)
00002BD4 E3F0 D0D0 0024          000000D0   4211          STG   15,208(0,13)
00002BDA 4110 D0B0               000000B0   4212          LA    1,176(0,13)
00002BDE E380 C098 0004          00002B30   4213          LG    8,@lit_979_182 ; fprintf
00002BE4 B904 00F8                          4214          LGR   15,8
00002BE8                                    4215 @@gen_label185 DS    0H
00002BE8 05EF                               4216          BALR  14,15
00002BEA                                    4217 @@gen_label186 DS    0H
00002BEA E3F3 5000 0004          00000000   4218          LG    15,0(3,5)   ; __stderrp
00002BF0 E3F0 D0B0 0024          000000B0   4219          STG   15,176(0,13)
00002BF6 41F0 6102               00000102   4220          LA    15,258(0,6)
00002BFA E3F0 D0B8 0024          000000B8   4221          STG   15,184(0,13)
00002C00 E320 D0C0 0024          000000C0   4222          STG   2,192(0,13)
00002C06 4110 D0B0               000000B0   4223          LA    1,176(0,13)
00002C0A B904 00F8                          4224          LGR   15,8
00002C0E                                    4225 @@gen_label187 DS    0H
00002C0E 05EF                               4226          BALR  14,15
00002C10                                    4227 @@gen_label188 DS    0H
00002C10 E3F3 5000 0004          00000000   4228          LG    15,0(3,5)   ; __stderrp
00002C16 E3F0 D0B0 0024          000000B0   4229          STG   15,176(0,13)
00002C1C 41F0 60A2               000000A2   4230          LA    15,162(0,6)
00002C20 E3F0 D0B8 0024          000000B8   4231          STG   15,184(0,13)
00002C26 4110 D0B0               000000B0   4232          LA    1,176(0,13)
00002C2A B904 00F8                          4233          LGR   15,8
00002C2E                                    4234 @@gen_label189 DS    0H
00002C2E 05EF                               4235          BALR  14,15
00002C30                                    4236 @@gen_label190 DS    0H
                                                                                                                           Page   87 
  Active Usings: @REGION_979_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002C30 E3F0 C0B4 0016          00002B4C   4237          LLGF  15,@lit_979_187 ; rd_unittest_assert_on_failure
00002C36 41FF 5000               00000000   4238          LA    15,0(15,5)
00002C3A 9500 F000      00000000 00000000   4239          CLI   0(15),0
00002C3E 4780 C1E0               00002C78   4240          BE    @L149
00002C42 1244                               4241          LTR   4,4
00002C44 4770 C1E0               00002C78   4242          BNZ   @L149
00002C48                                    4243 @L150    DS    0H
00002C48 41F0 7062               00000062   4244          LA    15,98(0,7)
00002C4C E3F0 D0B0 0024          000000B0   4245          STG   15,176(0,13)
00002C52 41F0 6058               00000058   4246          LA    15,88(0,6)
00002C56 E3F0 D0B8 0024          000000B8   4247          STG   15,184(0,13)
00002C5C E548 D0C0 01FF          000000C0   4248          MVGHI 192(13),511
00002C62 41F0 6118               00000118   4249          LA    15,280(0,6)
00002C66 E3F0 D0C8 0024          000000C8   4250          STG   15,200(0,13)
00002C6C 4110 D0B0               000000B0   4251          LA    1,176(0,13)
00002C70 E3F0 C0B8 0004          00002B50   4252          LG    15,@lit_979_188 ; __assert
00002C76                                    4253 @@gen_label193 DS    0H
00002C76 05EF                               4254          BALR  14,15
00002C78                                    4255 @@gen_label194 DS    0H
00002C78                                    4256 @L151    DS    0H
00002C78                                    4257 @L149    DS    0H
00002C78 A7F9 0001               00000001   4258          LGHI  15,1        ; 1
00002C7C 47F0 C3B2               00002E4A   4259          B     @ret_lab_979
00002C80                                    4260 @L148    DS    0H
                                            4261 * ***           }
00002C80 A72B 0001               00000001   4262          AGHI  2,1
00002C84                                    4263 @L142    DS    0H
00002C84 C22E 000F 4240                     4264          CLGFI 2,X'000F4240'
00002C8A 4740 C0E0               00002B78   4265          BL    @L141
                                            4266 * ***
                                            4267 * ***           v = rd_hdr_histogram_mean(hdr);
00002C8E E330 D0B0 0024          000000B0   4268          STG   3,176(0,13)
00002C94 4110 D0B0               000000B0   4269          LA    1,176(0,13)
00002C98 E3F0 C0C0 0004          00002B58   4270          LG    15,@lit_979_190 ; rd_hdr_histogram_mean
00002C9E                                    4271 @@gen_label196 DS    0H
00002C9E 05EF                               4272          BALR  14,15
00002CA0                                    4273 @@gen_label197 DS    0H
00002CA0 6000 D0D8               000000D8   4274          STD   0,216(0,13) ; spill
                                            4275 * ***           do { if (!(rd_dbl_eq0(v, exp, 0.0000001))) { fprintf(_\
                                            4276 * _stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "rd_db\
                                            4277 * l_eq0(v, exp, 0.0000001)" ": ", "C:\\asgkafka\\librdkafka\\src\\rdhd\
                                            4278 * rhistogram.c", 515, __FUNCTION__); fprintf(__stderrp, "Mean is %f, e\
                                            4279 * xpected %f", v, exp); fprintf(__stderrp, "\033[0m\n"); if (rd_unitte\
                                            4280 * st_assert_on_failure) ((rd_dbl_eq0(v, exp, 0.0000001)) ? (void)0 : _\
                                            4281 * _assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c",\
                                            4282 *  515, "rd_dbl_eq0(v, exp, 0.0000001)")); return 1; } } while (0);
00002CA4                                    4283 @L152    DS    0H
00002CA4 6800 D0D8               000000D8   4284          LD    0,216(0,13) ; spill
00002CA8 6000 D0B0               000000B0   4285          STD   0,176(0,13)
00002CAC 68F0 C088               00002B20   4286          LD    15,@lit_979_176
00002CB0 60F0 D0B8               000000B8   4287          STD   15,184(0,13)
00002CB4 68F0 C0D0               00002B68   4288          LD    15,@lit_979_191
                                                                                                                           Page   88 
  Active Usings: @REGION_979_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002CB8 60F0 D0C0               000000C0   4289          STD   15,192(0,13)
00002CBC 4110 D0B0               000000B0   4290          LA    1,176(0,13)
00002CC0 E320 C0C8 0004          00002B60   4291          LG    2,@lit_979_192 ; rd_dbl_eq0
00002CC6 B904 00F2                          4292          LGR   15,2
00002CCA                                    4293 @@gen_label198 DS    0H
00002CCA 05EF                               4294          BALR  14,15
00002CCC                                    4295 @@gen_label199 DS    0H
00002CCC 12FF                               4296          LTR   15,15
00002CCE 4770 C34E               00002DE6   4297          BNZ   @L155
00002CD2 E330 C0B0 0016          00002B48   4298          LLGF  3,@lit_979_179 ; __stderrp
00002CD8 E3F3 5000 0004          00000000   4299          LG    15,0(3,5)   ; __stderrp
00002CDE E3F0 D0B0 0024          000000B0   4300          STG   15,176(0,13)
00002CE4 E340 C0A8 0004          00002B40   4301          LG    4,@lit_979_180
00002CEA 41F0 4182               00000182   4302          LA    15,386(0,4)
00002CEE E3F0 D0B8 0024          000000B8   4303          STG   15,184(0,13)
00002CF4 41F0 4058               00000058   4304          LA    15,88(0,4)
00002CF8 E3F0 D0C0 0024          000000C0   4305          STG   15,192(0,13)
00002CFE E548 D0C8 0203          000000C8   4306          MVGHI 200(13),515
00002D04 E360 C0A0 0004          00002B38   4307          LG    6,@lit_979_181
00002D0A 41F0 6062               00000062   4308          LA    15,98(0,6)
00002D0E E3F0 D0D0 0024          000000D0   4309          STG   15,208(0,13)
00002D14 4110 D0B0               000000B0   4310          LA    1,176(0,13)
00002D18 E370 C098 0004          00002B30   4311          LG    7,@lit_979_182 ; fprintf
00002D1E B904 00F7                          4312          LGR   15,7
00002D22                                    4313 @@gen_label201 DS    0H
00002D22 05EF                               4314          BALR  14,15
00002D24                                    4315 @@gen_label202 DS    0H
00002D24 E3F3 5000 0004          00000000   4316          LG    15,0(3,5)   ; __stderrp
00002D2A E3F0 D0B0 0024          000000B0   4317          STG   15,176(0,13)
00002D30 41F0 41CE               000001CE   4318          LA    15,462(0,4)
00002D34 E3F0 D0B8 0024          000000B8   4319          STG   15,184(0,13)
00002D3A 6800 D0D8               000000D8   4320          LD    0,216(0,13) ; spill
00002D3E 6000 D0C0               000000C0   4321          STD   0,192(0,13)
00002D42 68F0 C088               00002B20   4322          LD    15,@lit_979_176
00002D46 60F0 D0C8               000000C8   4323          STD   15,200(0,13)
00002D4A 4110 D0B0               000000B0   4324          LA    1,176(0,13)
00002D4E B904 00F7                          4325          LGR   15,7
00002D52                                    4326 @@gen_label203 DS    0H
00002D52 05EF                               4327          BALR  14,15
00002D54                                    4328 @@gen_label204 DS    0H
00002D54 E3F3 5000 0004          00000000   4329          LG    15,0(3,5)   ; __stderrp
00002D5A E3F0 D0B0 0024          000000B0   4330          STG   15,176(0,13)
00002D60 41F0 40A2               000000A2   4331          LA    15,162(0,4)
00002D64 E3F0 D0B8 0024          000000B8   4332          STG   15,184(0,13)
00002D6A 4110 D0B0               000000B0   4333          LA    1,176(0,13)
00002D6E B904 00F7                          4334          LGR   15,7
00002D72                                    4335 @@gen_label205 DS    0H
00002D72 05EF                               4336          BALR  14,15
00002D74                                    4337 @@gen_label206 DS    0H
00002D74 E3F0 C0B4 0016          00002B4C   4338          LLGF  15,@lit_979_187 ; rd_unittest_assert_on_failure
00002D7A 41FF 5000               00000000   4339          LA    15,0(15,5)
00002D7E 9500 F000      00000000 00000000   4340          CLI   0(15),0
                                                                                                                           Page   89 
  Active Usings: @REGION_979_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002D82 4780 C346               00002DDE   4341          BE    @L156
00002D86 6800 D0D8               000000D8   4342          LD    0,216(0,13) ; spill
00002D8A 6000 D0B0               000000B0   4343          STD   0,176(0,13)
00002D8E 68F0 C088               00002B20   4344          LD    15,@lit_979_176
00002D92 60F0 D0B8               000000B8   4345          STD   15,184(0,13)
00002D96 68F0 C0D0               00002B68   4346          LD    15,@lit_979_191
00002D9A 60F0 D0C0               000000C0   4347          STD   15,192(0,13)
00002D9E 4110 D0B0               000000B0   4348          LA    1,176(0,13)
00002DA2 B904 00F2                          4349          LGR   15,2
00002DA6                                    4350 @@gen_label208 DS    0H
00002DA6 05EF                               4351          BALR  14,15
00002DA8                                    4352 @@gen_label209 DS    0H
00002DA8 12FF                               4353          LTR   15,15
00002DAA 4770 C346               00002DDE   4354          BNZ   @L156
00002DAE                                    4355 @L157    DS    0H
00002DAE 41F0 6062               00000062   4356          LA    15,98(0,6)
00002DB2 E3F0 D0B0 0024          000000B0   4357          STG   15,176(0,13)
00002DB8 41F0 4058               00000058   4358          LA    15,88(0,4)
00002DBC E3F0 D0B8 0024          000000B8   4359          STG   15,184(0,13)
00002DC2 E548 D0C0 0203          000000C0   4360          MVGHI 192(13),515
00002DC8 41F0 41E6               000001E6   4361          LA    15,486(0,4)
00002DCC E3F0 D0C8 0024          000000C8   4362          STG   15,200(0,13)
00002DD2 4110 D0B0               000000B0   4363          LA    1,176(0,13)
00002DD6 E3F0 C0B8 0004          00002B50   4364          LG    15,@lit_979_188 ; __assert
00002DDC                                    4365 @@gen_label211 DS    0H
00002DDC 05EF                               4366          BALR  14,15
00002DDE                                    4367 @@gen_label212 DS    0H
00002DDE                                    4368 @L158    DS    0H
00002DDE                                    4369 @L156    DS    0H
00002DDE A7F9 0001               00000001   4370          LGHI  15,1        ; 1
00002DE2 47F0 C3B2               00002E4A   4371          B     @ret_lab_979
00002DE6                                    4372 @L155    DS    0H
                                            4373 * ***
                                            4374 * ***
                                            4375 * ***           rd_hdr_histogram_destroy(hdr);
00002DE6 E330 D0B0 0024          000000B0   4376          STG   3,176(0,13)
00002DEC 4110 D0B0               000000B0   4377          LA    1,176(0,13)
00002DF0 E3F0 C0D8 0004          00002B70   4378          LG    15,@lit_979_206 ; rd_hdr_histogram_destroy
00002DF6                                    4379 @@gen_label213 DS    0H
00002DF6 05EF                               4380          BALR  14,15
00002DF8                                    4381 @@gen_label214 DS    0H
                                            4382 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                            4383 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 519, \
                                            4384 * __FUNCTION__); return 0; } while (0);
00002DF8                                    4385 @L159    DS    0H
00002DF8 E3F0 C0B0 0016          00002B48   4386          LLGF  15,@lit_979_179 ; __stderrp
00002DFE E3FF 5000 0004          00000000   4387          LG    15,0(15,5)  ; __stderrp
00002E04 E3F0 D0B0 0024          000000B0   4388          STG   15,176(0,13)
00002E0A E3F0 C0A8 0004          00002B40   4389          LG    15,@lit_979_180
00002E10 4110 F0B2               000000B2   4390          LA    1,178(0,15)
00002E14 E310 D0B8 0024          000000B8   4391          STG   1,184(0,13)
00002E1A 41F0 F058               00000058   4392          LA    15,88(0,15)
                                                                                                                           Page   90 
  Active Usings: @REGION_979_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002E1E E3F0 D0C0 0024          000000C0   4393          STG   15,192(0,13)
00002E24 E548 D0C8 0207          000000C8   4394          MVGHI 200(13),519
00002E2A E3F0 C0A0 0004          00002B38   4395          LG    15,@lit_979_181
00002E30 41F0 F062               00000062   4396          LA    15,98(0,15)
00002E34 E3F0 D0D0 0024          000000D0   4397          STG   15,208(0,13)
00002E3A 4110 D0B0               000000B0   4398          LA    1,176(0,13)
00002E3E E3F0 C098 0004          00002B30   4399          LG    15,@lit_979_182 ; fprintf
00002E44                                    4400 @@gen_label215 DS    0H
00002E44 05EF                               4401          BALR  14,15
00002E46                                    4402 @@gen_label216 DS    0H
00002E46 A7F9 0000               00000000   4403          LGHI  15,0        ; 0
                                            4404 * ***   }
00002E4A                                    4405 @ret_lab_979 DS 0H
                                            4406 * * **** Start of Epilogue
                                            4407          DCCEPIL
00002E4A                                    4408+         ds 0h                                                          01-DCCEP
                                            4409+* Epilog
00002E4A D707 D088 D088 00000088 00000088   4410+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00002E50 E3D0 D080 0004          00000080   4411+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00002E56 E3C0 D090 0004          00000090   4412+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00002E5C E3B0 C018 0004          00000018   4413+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00002E62 E3C0 B010 0021          00000010   4414+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00002E68 E3E0 D008 0004          00000008   4415+         lg  14,8(0,13)          load up return address                 01-DCCEP
00002E6E EB1C D020 0004          00000020   4416+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00002E74 078E                               4417+         bcr 8,14                if same dsab, just return              01-DCCEP
00002E76 E3F0 D010 0024          00000010   4418+         stg 15,16(0,13)         save return code                       01-DCCEP
00002E7C E300 D018 0024          00000018   4419+         stg 0,24(0,13)          save more return code                  01-DCCEP
00002E82 E3F0 D090 0004          00000090   4420+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00002E88 E3F0 F018 0004          00000018   4421+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00002E8E 47F0 F040               00000040   4422+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4423+* End of Epilog
                                            4424 * * **** End of Epilogue
                                            4425          DROP  12
                                            4426 *
                                            4427 *   DSECT for automatic variables in "ut_mean"
                                            4428 *      (FUNCTION #979)
                                            4429 *
00000000                00000000 000000B0   4430 @AUTO#ut_mean DSECT
00000000                                    4431          DS    XL168
000000A8                                    4432 ut_mean#r#1 DS 1F          ; r
000000AC                000000AC 000000A8   4433          ORG   @AUTO#ut_mean+168
000000A8                                    4434 ut_mean#v#0 DS 1D          ; v
000000B0                000000B0 000000A8   4435          ORG   @AUTO#ut_mean+168
000000A8                                    4436 ut_mean#exp#0 DS 1D        ; exp
000000B0                000000B0 000000A8   4437          ORG   @AUTO#ut_mean+168
000000A8                                    4438 ut_mean#i#0 DS 8XL1        ; i
                                            4439 *
00002E92                00000000 000056F0   4440 @CODE    CSECT
                                            4441 *
                                            4442 *
                                            4443 *
                                            4444 * ....... start of ut_stddev
                                                                                                                           Page   91 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002E92                                    4445 @LNAME980 DS   0H
00002E92 00000009                           4446          DC    X'00000009'
00002E96 A4A36DA2A3848485                   4447          DC    C'ut_stddev'
00002E9F 00                                 4448          DC    X'00'
                                            4449 ut_stddev DCCPRLG CINDEX=980,BASER=12,FRAME=232,ENTRY=NO,ARCH=ZARCH,LNA*
                                                                MEADDR=@LNAME980
                                            4450          macro
                                            4451          dccextrn &m
                                            4452          gblc    &$dccext(1000)
                                            4453          gbla    &$dccexti
                                            4454          lcla    &i
                                            4455 &$dccext(&$dccexti+1) setc    '&m'
                                            4456 &i       seta    1
                                            4457 .loop    aif    (&i gt &$dccexti).around
                                            4458          aif    ('&$dccext(&i)' eq '&m').getout
                                            4459 &i       seta    &i+1
                                            4460          ago     .loop
                                            4461 .around  anop
                                            4462 &$dccexti seta &$dccexti+1
                                            4463          extrn  &m
                                            4464 .getout  anop
                                            4465          mend
00002EA0                                    4466+$eye0089    ds    0d                                                    02-DCCCA
00002EA0 C4C3C3                             4467+         dc cl3'DCC'                                                    02-DCCCA
00002EA3 01                                 4468+         dc xl1'01' format one                                          02-DCCCA
00002EA4 00000000                           4469+         dc a(0)                                                        02-DCCCA
00002EA8 0000000000002F12                   4470+         dc ad(@PER_980)                                                02-DCCCA
00002EB0 00000000000000E8                   4471+         dc ad(232)                                                     02-DCCCA
00002EB8 0000000000000000                   4472+         dc ad(0)                                                       02-DCCCA
00002EC0 0000000000001000                   4473+         dc ad(4096)                                                    02-DCCCA
00002EC8 20                                 4474+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00002EC9 03                                 4475+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00002ECA 03                                 4476+         dc al1(3)                                                      02-DCCCA
00002ECB 08                                 4477+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00002ECC 00                                 4478+         dc bl.8'00000000'                                              02-DCCCA
00002ECD 000000                             4479+         dc al3(0)                                                      02-DCCCA
00002ED0 0000000000002E92                   4480+         dc ad(@LNAME980)                                               02-DCCCA
00002ED8                                    4481+         ds 0d                                                          02-DCCCA
00002ED8 0000000000002EA0                   4482+         dc ad($eye0089)                                                02-DCCCA
00002EE0 0000000000000000                   4483+         dc ad(0)                                                       02-DCCCA
00002EE8                                    4484+         ds    0d                                                       01-DCCPR
00002EE8                                    4485+ut_stddev ds   0d                                                       01-DCCPR
00002EE8                                    4486+@REGION_980_1 ds 0h                                                     01-DCCPR
00002EE8 EBEC D008 0024          00000008   4487+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00002EEE E3E0 D088 0004          00000088   4488+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00002EF4 E3C0 D090 0004          00000090   4489+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00002EFA B904 002E                          4490+         lgr   2,14                copy addr of our savearea            01-DCCPR
00002EFE E3B0 C018 0004          00000018   4491+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00002F04 A7EB 00E8               000000E8   4492+         aghi  14,232              increase by frame size               01-DCCPR
00002F08 E3E0 C020 0021          00000020   4493+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00002F0E 4720 B020               00000020   4494+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00002F12                                    4495+@PER_980 ds    0h                                                       01-DCCPR
                                                                                                                           Page   92 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002F12 EBDE 2080 0024          00000080   4496+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00002F18 E3C0 2090 0024          00000090   4497+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00002F1E B904 00D2                          4498+         lgr   13,2                set real frame pointer               01-DCCPR
00002F22 B904 00CF                          4499+         lgr   12,15               set base reg                         01-DCCPR
                        00002EE8            4500+         using @REGION_980_1,12                                         01-DCCPR
                                            4501          DCCPRV REG=5      ; Get PRV from DVT
00002F26 E350 B008 0004          00000008   4502+         LG 5,8(0,11)                                                   01-DCCPR
                                            4503 * ******* End of Prologue
                                            4504 * *
                                            4505 * ***           rd_hdr_histogram_t *hdr = rd_hdr_histogram_new(1, 1000\
                                            4506 * 0000, 3);
00002F2C E548 D0B0 0001          000000B0   4507          MVGHI 176(13),1
00002F32 C0FF 0098 9680                     4508          LLILF 15,X'00989680' ; 10000000
00002F38 E3F0 D0B8 0024          000000B8   4509          STG   15,184(0,13)
00002F3E E548 D0C0 0003          000000C0   4510          MVGHI 192(13),3
00002F44 4110 D0B0               000000B0   4511          LA    1,176(0,13)
00002F48 E3F0 C080 0004          00002F68   4512          LG    15,@lit_980_217 ; rd_hdr_histogram_new
00002F4E                                    4513 @@gen_label217 DS    0H
00002F4E 05EF                               4514          BALR  14,15
00002F50                                    4515 @@gen_label218 DS    0H
00002F50 B904 003F                          4516          LGR   3,15
                                            4517 * ***           size_t i;
                                            4518 * ***           const double exp = 288675.140368;
                                            4519 * ***           const double epsilon =  0.000001;
                                            4520 * ***           double v;
                                            4521 * ***
                                            4522 * ***           for (i = 0 ; i < 1000000 ; i++) {
00002F54 A729 0000               00000000   4523          LGHI  2,0         ; 0
00002F58 47F0 C1EC               000030D4   4524          B     @L163
00002F60                                    4525          DS    0D
00002F60 000000E8                           4526 @FRAMESIZE_980 DC F'232'
00002F64 00000000
00002F68 0000000000000488                   4527 @lit_980_217 DC AD(rd_hdr_histogram_new)
00002F70                                    4528          DS 0D
00002F70 3C10C6F7A0B5ED8D                   4529 @lit_980_219 DC XL8'3C10C6F7A0B5ED8D'
00002F78                                    4530          DS 0D
00002F78 45467A323EF28416                   4531 @lit_980_218 DC XL8'45467A323EF28416'
00002F80 0000000000001EB8                   4532 @lit_980_221 DC AD(rd_hdr_histogram_record)
00002F88 0000000000000000                   4533 @lit_980_225 DC AD(fprintf)
00002F90 00000000000056F0                   4534 @lit_980_224 DC AD(@DATA)
00002F98 00000000000057E8                   4535 @lit_980_223 DC AD(@strings@)
00002FA0 00000000                           4536 @lit_980_222 DC Q(__stderrp)
00002FA4 00000000                           4537 @lit_980_230 DC Q(rd_unittest_assert_on_failure)
00002FA8 0000000000000000                   4538 @lit_980_231 DC AD(__assert)
00002FB0 0000000000001830                   4539 @lit_980_233 DC AD(rd_hdr_histogram_stddev)
00002FB8 00000000000002D0                   4540 @lit_980_234 DC AD(rd_dbl_eq0)
00002FC0 0000000000000370                   4541 @lit_980_247 DC AD(rd_hdr_histogram_destroy)
00002FC8                                    4542 @L162    DS    0H
                                            4543 * ***                   int r = rd_hdr_histogram_record(hdr, (int64_t)\
                                            4544 * i);
00002FC8 E330 D0B0 0024          000000B0   4545          STG   3,176(0,13)
00002FCE E320 D0B8 0024          000000B8   4546          STG   2,184(0,13)
                                                                                                                           Page   93 
  Active Usings: @REGION_980_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00002FD4 4110 D0B0               000000B0   4547          LA    1,176(0,13)
00002FD8 E3F0 C098 0004          00002F80   4548          LG    15,@lit_980_221 ; rd_hdr_histogram_record
00002FDE                                    4549 @@gen_label219 DS    0H
00002FDE 05EF                               4550          BALR  14,15
00002FE0                                    4551 @@gen_label220 DS    0H
00002FE0 184F                               4552          LR    4,15
                                            4553 * ***                   do { if (!(r)) { fprintf(__stderrp, "\033[31mR\
                                            4554 * DUT: FAIL: %s:%d: %s: " "assert failed: " "r" ": ", "C:\\asgkafka\\l\
                                            4555 * ibrdkafka\\src\\rdhdrhistogram.c", 532, __FUNCTION__); fprintf(__std\
                                            4556 * errp, "record(%" "lld" ") failed\n", (int64_t)i); fprintf(__stderrp,\
                                            4557 *  "\033[0m\n"); if (rd_unittest_assert_on_failure) ((r) ? (void)0 : _\
                                            4558 * _assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c",\
                                            4559 *  532, "r")); return 1; } } while (0);
00002FE2                                    4560 @L166    DS    0H
00002FE2 1244                               4561          LTR   4,4
00002FE4 4770 C1E8               000030D0   4562          BNZ   @L169
00002FE8 E330 C0B8 0016          00002FA0   4563          LLGF  3,@lit_980_222 ; __stderrp
00002FEE E3F3 5000 0004          00000000   4564          LG    15,0(3,5)   ; __stderrp
00002FF4 E3F0 D0B0 0024          000000B0   4565          STG   15,176(0,13)
00002FFA E360 C0B0 0004          00002F98   4566          LG    6,@lit_980_223
00003000 41F0 60D2               000000D2   4567          LA    15,210(0,6)
00003004 E3F0 D0B8 0024          000000B8   4568          STG   15,184(0,13)
0000300A 41F0 6058               00000058   4569          LA    15,88(0,6)
0000300E E3F0 D0C0 0024          000000C0   4570          STG   15,192(0,13)
00003014 E548 D0C8 0214          000000C8   4571          MVGHI 200(13),532
0000301A E370 C0A8 0004          00002F90   4572          LG    7,@lit_980_224
00003020 41F0 706A               0000006A   4573          LA    15,106(0,7)
00003024 E3F0 D0D0 0024          000000D0   4574          STG   15,208(0,13)
0000302A 4110 D0B0               000000B0   4575          LA    1,176(0,13)
0000302E E380 C0A0 0004          00002F88   4576          LG    8,@lit_980_225 ; fprintf
00003034 B904 00F8                          4577          LGR   15,8
00003038                                    4578 @@gen_label222 DS    0H
00003038 05EF                               4579          BALR  14,15
0000303A                                    4580 @@gen_label223 DS    0H
0000303A E3F3 5000 0004          00000000   4581          LG    15,0(3,5)   ; __stderrp
00003040 E3F0 D0B0 0024          000000B0   4582          STG   15,176(0,13)
00003046 41F0 6102               00000102   4583          LA    15,258(0,6)
0000304A E3F0 D0B8 0024          000000B8   4584          STG   15,184(0,13)
00003050 E320 D0C0 0024          000000C0   4585          STG   2,192(0,13)
00003056 4110 D0B0               000000B0   4586          LA    1,176(0,13)
0000305A B904 00F8                          4587          LGR   15,8
0000305E                                    4588 @@gen_label224 DS    0H
0000305E 05EF                               4589          BALR  14,15
00003060                                    4590 @@gen_label225 DS    0H
00003060 E3F3 5000 0004          00000000   4591          LG    15,0(3,5)   ; __stderrp
00003066 E3F0 D0B0 0024          000000B0   4592          STG   15,176(0,13)
0000306C 41F0 60A2               000000A2   4593          LA    15,162(0,6)
00003070 E3F0 D0B8 0024          000000B8   4594          STG   15,184(0,13)
00003076 4110 D0B0               000000B0   4595          LA    1,176(0,13)
0000307A B904 00F8                          4596          LGR   15,8
0000307E                                    4597 @@gen_label226 DS    0H
0000307E 05EF                               4598          BALR  14,15
                                                                                                                           Page   94 
  Active Usings: @REGION_980_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003080                                    4599 @@gen_label227 DS    0H
00003080 E3F0 C0BC 0016          00002FA4   4600          LLGF  15,@lit_980_230 ; rd_unittest_assert_on_failure
00003086 41FF 5000               00000000   4601          LA    15,0(15,5)
0000308A 9500 F000      00000000 00000000   4602          CLI   0(15),0
0000308E 4780 C1E0               000030C8   4603          BE    @L170
00003092 1244                               4604          LTR   4,4
00003094 4770 C1E0               000030C8   4605          BNZ   @L170
00003098                                    4606 @L171    DS    0H
00003098 41F0 706A               0000006A   4607          LA    15,106(0,7)
0000309C E3F0 D0B0 0024          000000B0   4608          STG   15,176(0,13)
000030A2 41F0 6058               00000058   4609          LA    15,88(0,6)
000030A6 E3F0 D0B8 0024          000000B8   4610          STG   15,184(0,13)
000030AC E548 D0C0 0214          000000C0   4611          MVGHI 192(13),532
000030B2 41F0 6118               00000118   4612          LA    15,280(0,6)
000030B6 E3F0 D0C8 0024          000000C8   4613          STG   15,200(0,13)
000030BC 4110 D0B0               000000B0   4614          LA    1,176(0,13)
000030C0 E3F0 C0C0 0004          00002FA8   4615          LG    15,@lit_980_231 ; __assert
000030C6                                    4616 @@gen_label230 DS    0H
000030C6 05EF                               4617          BALR  14,15
000030C8                                    4618 @@gen_label231 DS    0H
000030C8                                    4619 @L172    DS    0H
000030C8                                    4620 @L170    DS    0H
000030C8 A7F9 0001               00000001   4621          LGHI  15,1        ; 1
000030CC 47F0 C3CA               000032B2   4622          B     @ret_lab_980
000030D0                                    4623 @L169    DS    0H
                                            4624 * ***           }
000030D0 A72B 0001               00000001   4625          AGHI  2,1
000030D4                                    4626 @L163    DS    0H
000030D4 C22E 000F 4240                     4627          CLGFI 2,X'000F4240'
000030DA 4740 C0E0               00002FC8   4628          BL    @L162
                                            4629 * ***
                                            4630 * ***           v = rd_hdr_histogram_stddev(hdr);
000030DE E330 D0B0 0024          000000B0   4631          STG   3,176(0,13)
000030E4 4110 D0B0               000000B0   4632          LA    1,176(0,13)
000030E8 E3F0 C0C8 0004          00002FB0   4633          LG    15,@lit_980_233 ; rd_hdr_histogram_stddev
000030EE                                    4634 @@gen_label233 DS    0H
000030EE 05EF                               4635          BALR  14,15
000030F0                                    4636 @@gen_label234 DS    0H
000030F0 6000 D0E0               000000E0   4637          STD   0,224(0,13) ; spill
                                            4638 * ***           do { if (!(rd_dbl_eq0(v, exp, epsilon))) { fprintf(__s\
                                            4639 * tderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "rd_dbl_\
                                            4640 * eq0(v, exp, epsilon)" ": ", "C:\\asgkafka\\librdkafka\\src\\rdhdrhis\
                                            4641 * togram.c", 536, __FUNCTION__); fprintf(__stderrp, "StdDev is %.6f, e\
                                            4642 * xpected %.6f: diff %.6f vs epsilon %.6f", v, exp, __fabs(v - exp), e\
                                            4643 * psilon); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_\
                                            4644 * failure) ((rd_dbl_eq0(v, exp, epsilon)) ? (void)0 : __assert(__func_\
                                            4645 * _, "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 536, "rd_dbl_e\
                                            4646 * q0(v, exp, epsilon)")); return 1; } } while (0);
000030F4                                    4647 @L173    DS    0H
000030F4 6800 D0E0               000000E0   4648          LD    0,224(0,13) ; spill
000030F8 6000 D0B0               000000B0   4649          STD   0,176(0,13)
000030FC 68F0 C090               00002F78   4650          LD    15,@lit_980_218
                                                                                                                           Page   95 
  Active Usings: @REGION_980_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003100 60F0 D0B8               000000B8   4651          STD   15,184(0,13)
00003104 68F0 C088               00002F70   4652          LD    15,@lit_980_219
00003108 60F0 D0C0               000000C0   4653          STD   15,192(0,13)
0000310C 4110 D0B0               000000B0   4654          LA    1,176(0,13)
00003110 E320 C0D0 0004          00002FB8   4655          LG    2,@lit_980_234 ; rd_dbl_eq0
00003116 B904 00F2                          4656          LGR   15,2
0000311A                                    4657 @@gen_label235 DS    0H
0000311A 05EF                               4658          BALR  14,15
0000311C                                    4659 @@gen_label236 DS    0H
0000311C 12FF                               4660          LTR   15,15
0000311E 4770 C366               0000324E   4661          BNZ   @L176
00003122 E330 C0B8 0016          00002FA0   4662          LLGF  3,@lit_980_222 ; __stderrp
00003128 E3F3 5000 0004          00000000   4663          LG    15,0(3,5)   ; __stderrp
0000312E E3F0 D0B0 0024          000000B0   4664          STG   15,176(0,13)
00003134 E340 C0B0 0004          00002F98   4665          LG    4,@lit_980_223
0000313A 41F0 4204               00000204   4666          LA    15,516(0,4)
0000313E E3F0 D0B8 0024          000000B8   4667          STG   15,184(0,13)
00003144 41F0 4058               00000058   4668          LA    15,88(0,4)
00003148 E3F0 D0C0 0024          000000C0   4669          STG   15,192(0,13)
0000314E E548 D0C8 0218          000000C8   4670          MVGHI 200(13),536
00003154 E360 C0A8 0004          00002F90   4671          LG    6,@lit_980_224
0000315A 41F0 606A               0000006A   4672          LA    15,106(0,6)
0000315E E3F0 D0D0 0024          000000D0   4673          STG   15,208(0,13)
00003164 4110 D0B0               000000B0   4674          LA    1,176(0,13)
00003168 E370 C0A0 0004          00002F88   4675          LG    7,@lit_980_225 ; fprintf
0000316E B904 00F7                          4676          LGR   15,7
00003172                                    4677 @@gen_label238 DS    0H
00003172 05EF                               4678          BALR  14,15
00003174                                    4679 @@gen_label239 DS    0H
00003174 68F0 D0E0               000000E0   4680          LD    15,224(0,13) ; spill
00003178 68D0 C090               00002F78   4681          LD    13,@lit_980_218
0000317C 2BFD                               4682          SDR   15,13
0000317E 20FF                               4683          LPDR  15,15
00003180 E3F3 5000 0004          00000000   4684          LG    15,0(3,5)   ; __stderrp
00003186 E3F0 D0B0 0024          000000B0   4685          STG   15,176(0,13)
0000318C 41F0 424E               0000024E   4686          LA    15,590(0,4)
00003190 E3F0 D0B8 0024          000000B8   4687          STG   15,184(0,13)
00003196 6800 D0E0               000000E0   4688          LD    0,224(0,13) ; spill
0000319A 6000 D0C0               000000C0   4689          STD   0,192(0,13)
0000319E 68D0 C090               00002F78   4690          LD    13,@lit_980_218
000031A2 60D0 D0C8               000000C8   4691          STD   13,200(0,13)
000031A6 60F0 D0D0               000000D0   4692          STD   15,208(0,13)
000031AA 68F0 C088               00002F70   4693          LD    15,@lit_980_219
000031AE 60F0 D0D8               000000D8   4694          STD   15,216(0,13)
000031B2 4110 D0B0               000000B0   4695          LA    1,176(0,13)
000031B6 B904 00F7                          4696          LGR   15,7
000031BA                                    4697 @@gen_label240 DS    0H
000031BA 05EF                               4698          BALR  14,15
000031BC                                    4699 @@gen_label241 DS    0H
000031BC E3F3 5000 0004          00000000   4700          LG    15,0(3,5)   ; __stderrp
000031C2 E3F0 D0B0 0024          000000B0   4701          STG   15,176(0,13)
000031C8 41F0 40A2               000000A2   4702          LA    15,162(0,4)
                                                                                                                           Page   96 
  Active Usings: @REGION_980_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000031CC E3F0 D0B8 0024          000000B8   4703          STG   15,184(0,13)
000031D2 4110 D0B0               000000B0   4704          LA    1,176(0,13)
000031D6 B904 00F7                          4705          LGR   15,7
000031DA                                    4706 @@gen_label242 DS    0H
000031DA 05EF                               4707          BALR  14,15
000031DC                                    4708 @@gen_label243 DS    0H
000031DC E3F0 C0BC 0016          00002FA4   4709          LLGF  15,@lit_980_230 ; rd_unittest_assert_on_failure
000031E2 41FF 5000               00000000   4710          LA    15,0(15,5)
000031E6 9500 F000      00000000 00000000   4711          CLI   0(15),0
000031EA 4780 C35E               00003246   4712          BE    @L177
000031EE 6800 D0E0               000000E0   4713          LD    0,224(0,13) ; spill
000031F2 6000 D0B0               000000B0   4714          STD   0,176(0,13)
000031F6 68F0 C090               00002F78   4715          LD    15,@lit_980_218
000031FA 60F0 D0B8               000000B8   4716          STD   15,184(0,13)
000031FE 68F0 C088               00002F70   4717          LD    15,@lit_980_219
00003202 60F0 D0C0               000000C0   4718          STD   15,192(0,13)
00003206 4110 D0B0               000000B0   4719          LA    1,176(0,13)
0000320A B904 00F2                          4720          LGR   15,2
0000320E                                    4721 @@gen_label245 DS    0H
0000320E 05EF                               4722          BALR  14,15
00003210                                    4723 @@gen_label246 DS    0H
00003210 12FF                               4724          LTR   15,15
00003212 4770 C35E               00003246   4725          BNZ   @L177
00003216                                    4726 @L178    DS    0H
00003216 41F0 606A               0000006A   4727          LA    15,106(0,6)
0000321A E3F0 D0B0 0024          000000B0   4728          STG   15,176(0,13)
00003220 41F0 4058               00000058   4729          LA    15,88(0,4)
00003224 E3F0 D0B8 0024          000000B8   4730          STG   15,184(0,13)
0000322A E548 D0C0 0218          000000C0   4731          MVGHI 192(13),536
00003230 41F0 4288               00000288   4732          LA    15,648(0,4)
00003234 E3F0 D0C8 0024          000000C8   4733          STG   15,200(0,13)
0000323A 4110 D0B0               000000B0   4734          LA    1,176(0,13)
0000323E E3F0 C0C0 0004          00002FA8   4735          LG    15,@lit_980_231 ; __assert
00003244                                    4736 @@gen_label248 DS    0H
00003244 05EF                               4737          BALR  14,15
00003246                                    4738 @@gen_label249 DS    0H
00003246                                    4739 @L179    DS    0H
00003246                                    4740 @L177    DS    0H
00003246 A7F9 0001               00000001   4741          LGHI  15,1        ; 1
0000324A 47F0 C3CA               000032B2   4742          B     @ret_lab_980
0000324E                                    4743 @L176    DS    0H
                                            4744 * ***
                                            4745 * ***
                                            4746 * ***
                                            4747 * ***           rd_hdr_histogram_destroy(hdr);
0000324E E330 D0B0 0024          000000B0   4748          STG   3,176(0,13)
00003254 4110 D0B0               000000B0   4749          LA    1,176(0,13)
00003258 E3F0 C0D8 0004          00002FC0   4750          LG    15,@lit_980_247 ; rd_hdr_histogram_destroy
0000325E                                    4751 @@gen_label250 DS    0H
0000325E 05EF                               4752          BALR  14,15
00003260                                    4753 @@gen_label251 DS    0H
                                            4754 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                                                                                                           Page   97 
  Active Usings: @REGION_980_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            4755 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 541, \
                                            4756 * __FUNCTION__); return 0; } while (0);
00003260                                    4757 @L180    DS    0H
00003260 E3F0 C0B8 0016          00002FA0   4758          LLGF  15,@lit_980_222 ; __stderrp
00003266 E3FF 5000 0004          00000000   4759          LG    15,0(15,5)  ; __stderrp
0000326C E3F0 D0B0 0024          000000B0   4760          STG   15,176(0,13)
00003272 E3F0 C0B0 0004          00002F98   4761          LG    15,@lit_980_223
00003278 4110 F0B2               000000B2   4762          LA    1,178(0,15)
0000327C E310 D0B8 0024          000000B8   4763          STG   1,184(0,13)
00003282 41F0 F058               00000058   4764          LA    15,88(0,15)
00003286 E3F0 D0C0 0024          000000C0   4765          STG   15,192(0,13)
0000328C E548 D0C8 021D          000000C8   4766          MVGHI 200(13),541
00003292 E3F0 C0A8 0004          00002F90   4767          LG    15,@lit_980_224
00003298 41F0 F06A               0000006A   4768          LA    15,106(0,15)
0000329C E3F0 D0D0 0024          000000D0   4769          STG   15,208(0,13)
000032A2 4110 D0B0               000000B0   4770          LA    1,176(0,13)
000032A6 E3F0 C0A0 0004          00002F88   4771          LG    15,@lit_980_225 ; fprintf
000032AC                                    4772 @@gen_label252 DS    0H
000032AC 05EF                               4773          BALR  14,15
000032AE                                    4774 @@gen_label253 DS    0H
000032AE A7F9 0000               00000000   4775          LGHI  15,0        ; 0
                                            4776 * ***   }
000032B2                                    4777 @ret_lab_980 DS 0H
                                            4778 * * **** Start of Epilogue
                                            4779          DCCEPIL
000032B2                                    4780+         ds 0h                                                          01-DCCEP
                                            4781+* Epilog
000032B2 D707 D088 D088 00000088 00000088   4782+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000032B8 E3D0 D080 0004          00000080   4783+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000032BE E3C0 D090 0004          00000090   4784+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000032C4 E3B0 C018 0004          00000018   4785+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000032CA E3C0 B010 0021          00000010   4786+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000032D0 E3E0 D008 0004          00000008   4787+         lg  14,8(0,13)          load up return address                 01-DCCEP
000032D6 EB1C D020 0004          00000020   4788+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000032DC 078E                               4789+         bcr 8,14                if same dsab, just return              01-DCCEP
000032DE E3F0 D010 0024          00000010   4790+         stg 15,16(0,13)         save return code                       01-DCCEP
000032E4 E300 D018 0024          00000018   4791+         stg 0,24(0,13)          save more return code                  01-DCCEP
000032EA E3F0 D090 0004          00000090   4792+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000032F0 E3F0 F018 0004          00000018   4793+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000032F6 47F0 F040               00000040   4794+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            4795+* End of Epilog
                                            4796 * * **** End of Epilogue
                                            4797          DROP  12
                                            4798 *
                                            4799 *   DSECT for automatic variables in "ut_stddev"
                                            4800 *      (FUNCTION #980)
                                            4801 *
00000000                00000000 000000B0   4802 @AUTO#ut_stddev DSECT
00000000                                    4803          DS    XL168
000000A8                                    4804 ut_stddev#r#1 DS 1F        ; r
000000AC                000000AC 000000A8   4805          ORG   @AUTO#ut_stddev+168
000000A8                                    4806 ut_stddev#v#0 DS 1D        ; v
                                                                                                                           Page   98 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000000B0                000000B0 000000A8   4807          ORG   @AUTO#ut_stddev+168
000000A8                                    4808 ut_stddev#epsilon#0 DS 1D  ; epsilon
000000B0                000000B0 000000A8   4809          ORG   @AUTO#ut_stddev+168
000000A8                                    4810 ut_stddev#exp#0 DS 1D      ; exp
000000B0                000000B0 000000A8   4811          ORG   @AUTO#ut_stddev+168
000000A8                                    4812 ut_stddev#i#0 DS 8XL1      ; i
                                            4813 *
000032FA                00000000 000056F0   4814 @CODE    CSECT
                                            4815 *
                                            4816 *
                                            4817 *
                                            4818 * ....... start of ut_totalcount
000032FA                                    4819 @LNAME981 DS   0H
000032FA 0000000D                           4820          DC    X'0000000D'
000032FE A4A36DA396A38193                   4821          DC    C'ut_totalcount'
0000330B 00                                 4822          DC    X'00'
                                            4823 ut_totalcount DCCPRLG CINDEX=981,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZARCH*
                                                                ,LNAMEADDR=@LNAME981
                                            4824          macro
                                            4825          dccextrn &m
                                            4826          gblc    &$dccext(1000)
                                            4827          gbla    &$dccexti
                                            4828          lcla    &i
                                            4829 &$dccext(&$dccexti+1) setc    '&m'
                                            4830 &i       seta    1
                                            4831 .loop    aif    (&i gt &$dccexti).around
                                            4832          aif    ('&$dccext(&i)' eq '&m').getout
                                            4833 &i       seta    &i+1
                                            4834          ago     .loop
                                            4835 .around  anop
                                            4836 &$dccexti seta &$dccexti+1
                                            4837          extrn  &m
                                            4838 .getout  anop
                                            4839          mend
00003310                                    4840+$eye0093    ds    0d                                                    02-DCCCA
00003310 C4C3C3                             4841+         dc cl3'DCC'                                                    02-DCCCA
00003313 01                                 4842+         dc xl1'01' format one                                          02-DCCCA
00003314 00000000                           4843+         dc a(0)                                                        02-DCCCA
00003318 0000000000003382                   4844+         dc ad(@PER_981)                                                02-DCCCA
00003320 00000000000000D8                   4845+         dc ad(216)                                                     02-DCCCA
00003328 0000000000000000                   4846+         dc ad(0)                                                       02-DCCCA
00003330 0000000000001000                   4847+         dc ad(4096)                                                    02-DCCCA
00003338 20                                 4848+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003339 03                                 4849+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000333A 03                                 4850+         dc al1(3)                                                      02-DCCCA
0000333B 08                                 4851+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000333C 00                                 4852+         dc bl.8'00000000'                                              02-DCCCA
0000333D 000000                             4853+         dc al3(0)                                                      02-DCCCA
00003340 00000000000032FA                   4854+         dc ad(@LNAME981)                                               02-DCCCA
00003348                                    4855+         ds 0d                                                          02-DCCCA
00003348 0000000000003310                   4856+         dc ad($eye0093)                                                02-DCCCA
00003350 0000000000000000                   4857+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page   99 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003358                                    4858+         ds    0d                                                       01-DCCPR
00003358                                    4859+ut_totalcount ds 0d                                                     01-DCCPR
00003358                                    4860+@REGION_981_1 ds 0h                                                     01-DCCPR
00003358 EBEC D008 0024          00000008   4861+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000335E E3E0 D088 0004          00000088   4862+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003364 E3C0 D090 0004          00000090   4863+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000336A B904 002E                          4864+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000336E E3B0 C018 0004          00000018   4865+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003374 A7EB 00D8               000000D8   4866+         aghi  14,216              increase by frame size               01-DCCPR
00003378 E3E0 C020 0021          00000020   4867+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000337E 4720 B020               00000020   4868+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003382                                    4869+@PER_981 ds    0h                                                       01-DCCPR
00003382 EBDE 2080 0024          00000080   4870+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003388 E3C0 2090 0024          00000090   4871+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000338E B904 00D2                          4872+         lgr   13,2                set real frame pointer               01-DCCPR
00003392 B904 00CF                          4873+         lgr   12,15               set base reg                         01-DCCPR
                        00003358            4874+         using @REGION_981_1,12                                         01-DCCPR
                                            4875          DCCPRV REG=5      ; Get PRV from DVT
00003396 E350 B008 0004          00000008   4876+         LG 5,8(0,11)                                                   01-DCCPR
                                            4877 * ******* End of Prologue
                                            4878 * *
                                            4879 * ***           rd_hdr_histogram_t *hdr = rd_hdr_histogram_new(1, 1000\
                                            4880 * 0000, 3);
0000339C E548 D0B0 0001          000000B0   4881          MVGHI 176(13),1
000033A2 C0FF 0098 9680                     4882          LLILF 15,X'00989680' ; 10000000
000033A8 E3F0 D0B8 0024          000000B8   4883          STG   15,184(0,13)
000033AE E548 D0C0 0003          000000C0   4884          MVGHI 192(13),3
000033B4 4110 D0B0               000000B0   4885          LA    1,176(0,13)
000033B8 E3F0 C080 0004          000033D8   4886          LG    15,@lit_981_262 ; rd_hdr_histogram_new
000033BE                                    4887 @@gen_label254 DS    0H
000033BE 05EF                               4888          BALR  14,15
000033C0                                    4889 @@gen_label255 DS    0H
000033C0 B904 003F                          4890          LGR   3,15
                                            4891 * ***           int64_t i;
                                            4892 * ***
                                            4893 * ***           for (i = 0 ; i < 1000000 ; i++) {
000033C4 A729 0000               00000000   4894          LGHI  2,0         ; 0
000033C8 47F0 C2DE               00003636   4895          B     @L184
000033D0                                    4896          DS    0D
000033D0 000000D8                           4897 @FRAMESIZE_981 DC F'216'
000033D4 00000000
000033D8 0000000000000488                   4898 @lit_981_262 DC AD(rd_hdr_histogram_new)
000033E0 0000000000001EB8                   4899 @lit_981_264 DC AD(rd_hdr_histogram_record)
000033E8 0000000000000000                   4900 @lit_981_268 DC AD(fprintf)
000033F0 00000000000056F0                   4901 @lit_981_267 DC AD(@DATA)
000033F8 00000000000057E8                   4902 @lit_981_266 DC AD(@strings@)
00003400 00000000                           4903 @lit_981_265 DC Q(__stderrp)
00003404 00000000                           4904 @lit_981_273 DC Q(rd_unittest_assert_on_failure)
00003408 0000000000000000                   4905 @lit_981_274 DC AD(__assert)
00003410 0000000000000370                   4906 @lit_981_287 DC AD(rd_hdr_histogram_destroy)
00003418                                    4907 @L183    DS    0H
                                            4908 * ***                   int64_t v;
                                                                                                                           Page  100 
  Active Usings: @REGION_981_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            4909 * ***                   int r = rd_hdr_histogram_record(hdr, i);
00003418 E330 D0B0 0024          000000B0   4910          STG   3,176(0,13)
0000341E E320 D0B8 0024          000000B8   4911          STG   2,184(0,13)
00003424 4110 D0B0               000000B0   4912          LA    1,176(0,13)
00003428 E3F0 C088 0004          000033E0   4913          LG    15,@lit_981_264 ; rd_hdr_histogram_record
0000342E                                    4914 @@gen_label256 DS    0H
0000342E 05EF                               4915          BALR  14,15
00003430                                    4916 @@gen_label257 DS    0H
00003430 184F                               4917          LR    4,15
                                            4918 * ***                   do { if (!(r)) { fprintf(__stderrp, "\033[31mR\
                                            4919 * DUT: FAIL: %s:%d: %s: " "assert failed: " "r" ": ", "C:\\asgkafka\\l\
                                            4920 * ibrdkafka\\src\\rdhdrhistogram.c", 551, __FUNCTION__); fprintf(__std\
                                            4921 * errp, "record(%" "lld" ") failed\n", i); fprintf(__stderrp, "\033[0m\
                                            4922 * \n"); if (rd_unittest_assert_on_failure) ((r) ? (void)0 : __assert(_\
                                            4923 * _func__, "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 551, "r"\
                                            4924 * )); return 1; } } while (0);
00003432                                    4925 @L187    DS    0H
00003432 1244                               4926          LTR   4,4
00003434 4770 C1C8               00003520   4927          BNZ   @L190
00003438 E330 C0A8 0016          00003400   4928          LLGF  3,@lit_981_265 ; __stderrp
0000343E E3F3 5000 0004          00000000   4929          LG    15,0(3,5)   ; __stderrp
00003444 E3F0 D0B0 0024          000000B0   4930          STG   15,176(0,13)
0000344A E360 C0A0 0004          000033F8   4931          LG    6,@lit_981_266
00003450 41F0 60D2               000000D2   4932          LA    15,210(0,6)
00003454 E3F0 D0B8 0024          000000B8   4933          STG   15,184(0,13)
0000345A 41F0 6058               00000058   4934          LA    15,88(0,6)
0000345E E3F0 D0C0 0024          000000C0   4935          STG   15,192(0,13)
00003464 E548 D0C8 0227          000000C8   4936          MVGHI 200(13),551
0000346A E370 C098 0004          000033F0   4937          LG    7,@lit_981_267
00003470 41F0 7074               00000074   4938          LA    15,116(0,7)
00003474 E3F0 D0D0 0024          000000D0   4939          STG   15,208(0,13)
0000347A 4110 D0B0               000000B0   4940          LA    1,176(0,13)
0000347E E380 C090 0004          000033E8   4941          LG    8,@lit_981_268 ; fprintf
00003484 B904 00F8                          4942          LGR   15,8
00003488                                    4943 @@gen_label259 DS    0H
00003488 05EF                               4944          BALR  14,15
0000348A                                    4945 @@gen_label260 DS    0H
0000348A E3F3 5000 0004          00000000   4946          LG    15,0(3,5)   ; __stderrp
00003490 E3F0 D0B0 0024          000000B0   4947          STG   15,176(0,13)
00003496 41F0 6102               00000102   4948          LA    15,258(0,6)
0000349A E3F0 D0B8 0024          000000B8   4949          STG   15,184(0,13)
000034A0 E320 D0C0 0024          000000C0   4950          STG   2,192(0,13)
000034A6 4110 D0B0               000000B0   4951          LA    1,176(0,13)
000034AA B904 00F8                          4952          LGR   15,8
000034AE                                    4953 @@gen_label261 DS    0H
000034AE 05EF                               4954          BALR  14,15
000034B0                                    4955 @@gen_label262 DS    0H
000034B0 E3F3 5000 0004          00000000   4956          LG    15,0(3,5)   ; __stderrp
000034B6 E3F0 D0B0 0024          000000B0   4957          STG   15,176(0,13)
000034BC 41F0 60A2               000000A2   4958          LA    15,162(0,6)
000034C0 E3F0 D0B8 0024          000000B8   4959          STG   15,184(0,13)
000034C6 4110 D0B0               000000B0   4960          LA    1,176(0,13)
                                                                                                                           Page  101 
  Active Usings: @REGION_981_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000034CA B904 00F8                          4961          LGR   15,8
000034CE                                    4962 @@gen_label263 DS    0H
000034CE 05EF                               4963          BALR  14,15
000034D0                                    4964 @@gen_label264 DS    0H
000034D0 E3F0 C0AC 0016          00003404   4965          LLGF  15,@lit_981_273 ; rd_unittest_assert_on_failure
000034D6 41FF 5000               00000000   4966          LA    15,0(15,5)
000034DA 9500 F000      00000000 00000000   4967          CLI   0(15),0
000034DE 4780 C1C0               00003518   4968          BE    @L191
000034E2 1244                               4969          LTR   4,4
000034E4 4770 C1C0               00003518   4970          BNZ   @L191
000034E8                                    4971 @L192    DS    0H
000034E8 41F0 7074               00000074   4972          LA    15,116(0,7)
000034EC E3F0 D0B0 0024          000000B0   4973          STG   15,176(0,13)
000034F2 41F0 6058               00000058   4974          LA    15,88(0,6)
000034F6 E3F0 D0B8 0024          000000B8   4975          STG   15,184(0,13)
000034FC E548 D0C0 0227          000000C0   4976          MVGHI 192(13),551
00003502 41F0 6118               00000118   4977          LA    15,280(0,6)
00003506 E3F0 D0C8 0024          000000C8   4978          STG   15,200(0,13)
0000350C 4110 D0B0               000000B0   4979          LA    1,176(0,13)
00003510 E3F0 C0B0 0004          00003408   4980          LG    15,@lit_981_274 ; __assert
00003516                                    4981 @@gen_label267 DS    0H
00003516 05EF                               4982          BALR  14,15
00003518                                    4983 @@gen_label268 DS    0H
00003518                                    4984 @L193    DS    0H
00003518                                    4985 @L191    DS    0H
00003518 A7F9 0001               00000001   4986          LGHI  15,1        ; 1
0000351C 47F0 C34C               000036A4   4987          B     @ret_lab_981
00003520                                    4988 @L190    DS    0H
                                            4989 * ***
                                            4990 * ***                   v = hdr->totalCount;
00003520 E340 3040 0004          00000040   4991          LG    4,64(0,3)   ; offset of totalCount in rd_hdr_histogram_s
                                            4992 * ***                   do { if (!(v == i+1)) { fprintf(__stderrp, "\0\
                                            4993 * 33[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "v == i+1" ": ", "C\
                                            4994 * :\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 554, __FUNCTION__);\
                                            4995 *  fprintf(__stderrp, "total_count is %" "lld" ", expected %" "lld", v\
                                            4996 * , i+1); fprintf(__stderrp, "\033[0m\n"); if (rd_unittest_assert_on_f\
                                            4997 * ailure) ((v == i+1) ? (void)0 : __assert(__func__, "C:\\asgkafka\\li\
                                            4998 * brdkafka\\src\\rdhdrhistogram.c", 554, "v == i+1")); return 1; } } w\
                                            4999 * hile (0);
00003526                                    5000 @L194    DS    0H
00003526 B904 00F2                          5001          LGR   15,2
0000352A A7FB 0001               00000001   5002          AGHI  15,1
0000352E B920 004F                          5003          CGR   4,15
00003532 4780 C2DA               00003632   5004          BE    @L197
00003536 E330 C0A8 0016          00003400   5005          LLGF  3,@lit_981_265 ; __stderrp
0000353C E3F3 5000 0004          00000000   5006          LG    15,0(3,5)   ; __stderrp
00003542 E3F0 D0B0 0024          000000B0   5007          STG   15,176(0,13)
00003548 E360 C0A0 0004          000033F8   5008          LG    6,@lit_981_266
0000354E 41F0 62A4               000002A4   5009          LA    15,676(0,6)
00003552 E3F0 D0B8 0024          000000B8   5010          STG   15,184(0,13)
00003558 41F0 6058               00000058   5011          LA    15,88(0,6)
0000355C E3F0 D0C0 0024          000000C0   5012          STG   15,192(0,13)
                                                                                                                           Page  102 
  Active Usings: @REGION_981_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003562 E548 D0C8 022A          000000C8   5013          MVGHI 200(13),554
00003568 E370 C098 0004          000033F0   5014          LG    7,@lit_981_267
0000356E 41F0 7074               00000074   5015          LA    15,116(0,7)
00003572 E3F0 D0D0 0024          000000D0   5016          STG   15,208(0,13)
00003578 4110 D0B0               000000B0   5017          LA    1,176(0,13)
0000357C E380 C090 0004          000033E8   5018          LG    8,@lit_981_268 ; fprintf
00003582 B904 00F8                          5019          LGR   15,8
00003586                                    5020 @@gen_label270 DS    0H
00003586 05EF                               5021          BALR  14,15
00003588                                    5022 @@gen_label271 DS    0H
00003588 E3F3 5000 0004          00000000   5023          LG    15,0(3,5)   ; __stderrp
0000358E E3F0 D0B0 0024          000000B0   5024          STG   15,176(0,13)
00003594 41F0 62DA               000002DA   5025          LA    15,730(0,6)
00003598 E3F0 D0B8 0024          000000B8   5026          STG   15,184(0,13)
0000359E E340 D0C0 0024          000000C0   5027          STG   4,192(0,13)
000035A4 B904 00F2                          5028          LGR   15,2
000035A8 A7FB 0001               00000001   5029          AGHI  15,1
000035AC E3F0 D0C8 0024          000000C8   5030          STG   15,200(0,13)
000035B2 4110 D0B0               000000B0   5031          LA    1,176(0,13)
000035B6 B904 00F8                          5032          LGR   15,8
000035BA                                    5033 @@gen_label272 DS    0H
000035BA 05EF                               5034          BALR  14,15
000035BC                                    5035 @@gen_label273 DS    0H
000035BC E3F3 5000 0004          00000000   5036          LG    15,0(3,5)   ; __stderrp
000035C2 E3F0 D0B0 0024          000000B0   5037          STG   15,176(0,13)
000035C8 41F0 60A2               000000A2   5038          LA    15,162(0,6)
000035CC E3F0 D0B8 0024          000000B8   5039          STG   15,184(0,13)
000035D2 4110 D0B0               000000B0   5040          LA    1,176(0,13)
000035D6 B904 00F8                          5041          LGR   15,8
000035DA                                    5042 @@gen_label274 DS    0H
000035DA 05EF                               5043          BALR  14,15
000035DC                                    5044 @@gen_label275 DS    0H
000035DC E3F0 C0AC 0016          00003404   5045          LLGF  15,@lit_981_273 ; rd_unittest_assert_on_failure
000035E2 41FF 5000               00000000   5046          LA    15,0(15,5)
000035E6 9500 F000      00000000 00000000   5047          CLI   0(15),0
000035EA 4780 C2D2               0000362A   5048          BE    @L198
000035EE A72B 0001               00000001   5049          AGHI  2,1
000035F2 B920 0042                          5050          CGR   4,2
000035F6 4780 C2D2               0000362A   5051          BE    @L198
000035FA                                    5052 @L199    DS    0H
000035FA 41F0 7074               00000074   5053          LA    15,116(0,7)
000035FE E3F0 D0B0 0024          000000B0   5054          STG   15,176(0,13)
00003604 41F0 6058               00000058   5055          LA    15,88(0,6)
00003608 E3F0 D0B8 0024          000000B8   5056          STG   15,184(0,13)
0000360E E548 D0C0 022A          000000C0   5057          MVGHI 192(13),554
00003614 41F0 62FE               000002FE   5058          LA    15,766(0,6)
00003618 E3F0 D0C8 0024          000000C8   5059          STG   15,200(0,13)
0000361E 4110 D0B0               000000B0   5060          LA    1,176(0,13)
00003622 E3F0 C0B0 0004          00003408   5061          LG    15,@lit_981_274 ; __assert
00003628                                    5062 @@gen_label278 DS    0H
00003628 05EF                               5063          BALR  14,15
0000362A                                    5064 @@gen_label279 DS    0H
                                                                                                                           Page  103 
  Active Usings: @REGION_981_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000362A                                    5065 @L200    DS    0H
0000362A                                    5066 @L198    DS    0H
0000362A A7F9 0001               00000001   5067          LGHI  15,1        ; 1
0000362E 47F0 C34C               000036A4   5068          B     @ret_lab_981
00003632                                    5069 @L197    DS    0H
                                            5070 * ***
                                            5071 * ***
                                            5072 * ***           }
00003632 A72B 0001               00000001   5073          AGHI  2,1
00003636                                    5074 @L184    DS    0H
00003636 C22C 000F 4240                     5075          CGFI  2,X'000F4240'
0000363C 4740 C0C0               00003418   5076          BL    @L183
                                            5077 * ***
                                            5078 * ***           rd_hdr_histogram_destroy(hdr);
00003640 E330 D0B0 0024          000000B0   5079          STG   3,176(0,13)
00003646 4110 D0B0               000000B0   5080          LA    1,176(0,13)
0000364A E3F0 C0B8 0004          00003410   5081          LG    15,@lit_981_287 ; rd_hdr_histogram_destroy
00003650                                    5082 @@gen_label281 DS    0H
00003650 05EF                               5083          BALR  14,15
00003652                                    5084 @@gen_label282 DS    0H
                                            5085 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                            5086 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 560, \
                                            5087 * __FUNCTION__); return 0; } while (0);
00003652                                    5088 @L201    DS    0H
00003652 E3F0 C0A8 0016          00003400   5089          LLGF  15,@lit_981_265 ; __stderrp
00003658 E3FF 5000 0004          00000000   5090          LG    15,0(15,5)  ; __stderrp
0000365E E3F0 D0B0 0024          000000B0   5091          STG   15,176(0,13)
00003664 E3F0 C0A0 0004          000033F8   5092          LG    15,@lit_981_266
0000366A 4110 F0B2               000000B2   5093          LA    1,178(0,15)
0000366E E310 D0B8 0024          000000B8   5094          STG   1,184(0,13)
00003674 41F0 F058               00000058   5095          LA    15,88(0,15)
00003678 E3F0 D0C0 0024          000000C0   5096          STG   15,192(0,13)
0000367E E548 D0C8 0230          000000C8   5097          MVGHI 200(13),560
00003684 E3F0 C098 0004          000033F0   5098          LG    15,@lit_981_267
0000368A 41F0 F074               00000074   5099          LA    15,116(0,15)
0000368E E3F0 D0D0 0024          000000D0   5100          STG   15,208(0,13)
00003694 4110 D0B0               000000B0   5101          LA    1,176(0,13)
00003698 E3F0 C090 0004          000033E8   5102          LG    15,@lit_981_268 ; fprintf
0000369E                                    5103 @@gen_label283 DS    0H
0000369E 05EF                               5104          BALR  14,15
000036A0                                    5105 @@gen_label284 DS    0H
000036A0 A7F9 0000               00000000   5106          LGHI  15,0        ; 0
                                            5107 * ***   }
000036A4                                    5108 @ret_lab_981 DS 0H
                                            5109 * * **** Start of Epilogue
                                            5110          DCCEPIL
000036A4                                    5111+         ds 0h                                                          01-DCCEP
                                            5112+* Epilog
000036A4 D707 D088 D088 00000088 00000088   5113+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000036AA E3D0 D080 0004          00000080   5114+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000036B0 E3C0 D090 0004          00000090   5115+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000036B6 E3B0 C018 0004          00000018   5116+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
                                                                                                                           Page  104 
  Active Usings: @REGION_981_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000036BC E3C0 B010 0021          00000010   5117+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000036C2 E3E0 D008 0004          00000008   5118+         lg  14,8(0,13)          load up return address                 01-DCCEP
000036C8 EB1C D020 0004          00000020   5119+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000036CE 078E                               5120+         bcr 8,14                if same dsab, just return              01-DCCEP
000036D0 E3F0 D010 0024          00000010   5121+         stg 15,16(0,13)         save return code                       01-DCCEP
000036D6 E300 D018 0024          00000018   5122+         stg 0,24(0,13)          save more return code                  01-DCCEP
000036DC E3F0 D090 0004          00000090   5123+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000036E2 E3F0 F018 0004          00000018   5124+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000036E8 47F0 F040               00000040   5125+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5126+* End of Epilog
                                            5127 * * **** End of Epilogue
                                            5128          DROP  12
                                            5129 *
                                            5130 *   DSECT for automatic variables in "ut_totalcount"
                                            5131 *      (FUNCTION #981)
                                            5132 *
00000000                00000000 000000B0   5133 @AUTO#ut_totalcount DSECT
00000000                                    5134          DS    XL168
000000A8                                    5135 ut_totalcount#r#1 DS 1F    ; r
000000AC                000000AC 000000A8   5136          ORG   @AUTO#ut_totalcount+168
000000A8                                    5137 ut_totalcount#v#1 DS 8XL1  ; v
000000B0                000000B0 000000A8   5138          ORG   @AUTO#ut_totalcount+168
000000A8                                    5139 ut_totalcount#i#0 DS 8XL1  ; i
                                            5140 *
000036EC                00000000 000056F0   5141 @CODE    CSECT
                                            5142 *
                                            5143 *
                                            5144 *
                                            5145 * ....... start of ut_max
000036EC                                    5146 @LNAME982 DS   0H
000036EC 00000006                           5147          DC    X'00000006'
000036F0 A4A36D9481A7                       5148          DC    C'ut_max'
000036F6 00                                 5149          DC    X'00'
                                            5150 ut_max   DCCPRLG CINDEX=982,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME982
                                            5151          macro
                                            5152          dccextrn &m
                                            5153          gblc    &$dccext(1000)
                                            5154          gbla    &$dccexti
                                            5155          lcla    &i
                                            5156 &$dccext(&$dccexti+1) setc    '&m'
                                            5157 &i       seta    1
                                            5158 .loop    aif    (&i gt &$dccexti).around
                                            5159          aif    ('&$dccext(&i)' eq '&m').getout
                                            5160 &i       seta    &i+1
                                            5161          ago     .loop
                                            5162 .around  anop
                                            5163 &$dccexti seta &$dccexti+1
                                            5164          extrn  &m
                                            5165 .getout  anop
                                            5166          mend
000036F8                                    5167+$eye0097    ds    0d                                                    02-DCCCA
                                                                                                                           Page  105 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000036F8 C4C3C3                             5168+         dc cl3'DCC'                                                    02-DCCCA
000036FB 01                                 5169+         dc xl1'01' format one                                          02-DCCCA
000036FC 00000000                           5170+         dc a(0)                                                        02-DCCCA
00003700 000000000000376A                   5171+         dc ad(@PER_982)                                                02-DCCCA
00003708 00000000000000D8                   5172+         dc ad(216)                                                     02-DCCCA
00003710 0000000000000000                   5173+         dc ad(0)                                                       02-DCCCA
00003718 0000000000001000                   5174+         dc ad(4096)                                                    02-DCCCA
00003720 20                                 5175+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003721 03                                 5176+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003722 03                                 5177+         dc al1(3)                                                      02-DCCCA
00003723 08                                 5178+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003724 00                                 5179+         dc bl.8'00000000'                                              02-DCCCA
00003725 000000                             5180+         dc al3(0)                                                      02-DCCCA
00003728 00000000000036EC                   5181+         dc ad(@LNAME982)                                               02-DCCCA
00003730                                    5182+         ds 0d                                                          02-DCCCA
00003730 00000000000036F8                   5183+         dc ad($eye0097)                                                02-DCCCA
00003738 0000000000000000                   5184+         dc ad(0)                                                       02-DCCCA
00003740                                    5185+         ds    0d                                                       01-DCCPR
00003740                                    5186+ut_max   ds    0d                                                       01-DCCPR
00003740                                    5187+@REGION_982_1 ds 0h                                                     01-DCCPR
00003740 EBEC D008 0024          00000008   5188+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003746 E3E0 D088 0004          00000088   5189+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000374C E3C0 D090 0004          00000090   5190+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003752 B904 002E                          5191+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003756 E3B0 C018 0004          00000018   5192+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000375C A7EB 00D8               000000D8   5193+         aghi  14,216              increase by frame size               01-DCCPR
00003760 E3E0 C020 0021          00000020   5194+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003766 4720 B020               00000020   5195+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000376A                                    5196+@PER_982 ds    0h                                                       01-DCCPR
0000376A EBDE 2080 0024          00000080   5197+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003770 E3C0 2090 0024          00000090   5198+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003776 B904 00D2                          5199+         lgr   13,2                set real frame pointer               01-DCCPR
0000377A B904 00CF                          5200+         lgr   12,15               set base reg                         01-DCCPR
                        00003740            5201+         using @REGION_982_1,12                                         01-DCCPR
                                            5202          DCCPRV REG=6      ; Get PRV from DVT
0000377E E360 B008 0004          00000008   5203+         LG 6,8(0,11)                                                   01-DCCPR
                                            5204 * ******* End of Prologue
                                            5205 * *
                                            5206 * ***           rd_hdr_histogram_t *hdr = rd_hdr_histogram_new(1, 1000\
                                            5207 * 0000, 3);
00003784 E548 D0B0 0001          000000B0   5208          MVGHI 176(13),1
0000378A C0FF 0098 9680                     5209          LLILF 15,X'00989680' ; 10000000
00003790 E3F0 D0B8 0024          000000B8   5210          STG   15,184(0,13)
00003796 E548 D0C0 0003          000000C0   5211          MVGHI 192(13),3
0000379C 4110 D0B0               000000B0   5212          LA    1,176(0,13)
000037A0 E3F0 C088 0004          000037C8   5213          LG    15,@lit_982_295 ; rd_hdr_histogram_new
000037A6                                    5214 @@gen_label285 DS    0H
000037A6 05EF                               5215          BALR  14,15
000037A8                                    5216 @@gen_label286 DS    0H
000037A8 B904 003F                          5217          LGR   3,15
                                            5218 * ***           int64_t i, v;
                                            5219 * ***           const int64_t exp = 1000447;
                                                                                                                           Page  106 
  Active Usings: @REGION_982_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000037AC C04F 000F 43FF                     5220          LLILF 4,X'000F43FF' ; 1000447
                                            5221 * ***
                                            5222 * ***           for (i = 0 ; i < 1000000 ; i++) {
000037B2 A729 0000               00000000   5223          LGHI  2,0         ; 0
000037B6 47F0 C1DC               0000391C   5224          B     @L205
000037C0                                    5225          DS    0D
000037C0 000000D8                           5226 @FRAMESIZE_982 DC F'216'
000037C4 00000000
000037C8 0000000000000488                   5227 @lit_982_295 DC AD(rd_hdr_histogram_new)
000037D0 0000000000001EB8                   5228 @lit_982_298 DC AD(rd_hdr_histogram_record)
000037D8 0000000000000000                   5229 @lit_982_302 DC AD(fprintf)
000037E0 00000000000056F0                   5230 @lit_982_301 DC AD(@DATA)
000037E8 00000000000057E8                   5231 @lit_982_300 DC AD(@strings@)
000037F0 00000000                           5232 @lit_982_299 DC Q(__stderrp)
000037F4 00000000                           5233 @lit_982_307 DC Q(rd_unittest_assert_on_failure)
000037F8 0000000000000000                   5234 @lit_982_308 DC AD(__assert)
00003800 0000000000001A20                   5235 @lit_982_310 DC AD(rd_hdr_histogram_max)
00003808 0000000000000370                   5236 @lit_982_322 DC AD(rd_hdr_histogram_destroy)
00003810                                    5237 @L204    DS    0H
                                            5238 * ***                   int r = rd_hdr_histogram_record(hdr, i);
00003810 E330 D0B0 0024          000000B0   5239          STG   3,176(0,13)
00003816 E320 D0B8 0024          000000B8   5240          STG   2,184(0,13)
0000381C 4110 D0B0               000000B0   5241          LA    1,176(0,13)
00003820 E3F0 C090 0004          000037D0   5242          LG    15,@lit_982_298 ; rd_hdr_histogram_record
00003826                                    5243 @@gen_label287 DS    0H
00003826 05EF                               5244          BALR  14,15
00003828                                    5245 @@gen_label288 DS    0H
00003828 185F                               5246          LR    5,15
                                            5247 * ***                   do { if (!(r)) { fprintf(__stderrp, "\033[31mR\
                                            5248 * DUT: FAIL: %s:%d: %s: " "assert failed: " "r" ": ", "C:\\asgkafka\\l\
                                            5249 * ibrdkafka\\src\\rdhdrhistogram.c", 571, __FUNCTION__); fprintf(__std\
                                            5250 * errp, "record(%" "lld" ") failed\n", i); fprintf(__stderrp, "\033[0m\
                                            5251 * \n"); if (rd_unittest_assert_on_failure) ((r) ? (void)0 : __assert(_\
                                            5252 * _func__, "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 571, "r"\
                                            5253 * )); return 1; } } while (0);
0000382A                                    5254 @L208    DS    0H
0000382A 1255                               5255          LTR   5,5
0000382C 4770 C1D8               00003918   5256          BNZ   @L211
00003830 E330 C0B0 0016          000037F0   5257          LLGF  3,@lit_982_299 ; __stderrp
00003836 E3F3 6000 0004          00000000   5258          LG    15,0(3,6)   ; __stderrp
0000383C E3F0 D0B0 0024          000000B0   5259          STG   15,176(0,13)
00003842 E340 C0A8 0004          000037E8   5260          LG    4,@lit_982_300
00003848 41F0 40D2               000000D2   5261          LA    15,210(0,4)
0000384C E3F0 D0B8 0024          000000B8   5262          STG   15,184(0,13)
00003852 41F0 4058               00000058   5263          LA    15,88(0,4)
00003856 E3F0 D0C0 0024          000000C0   5264          STG   15,192(0,13)
0000385C E548 D0C8 023B          000000C8   5265          MVGHI 200(13),571
00003862 E370 C0A0 0004          000037E0   5266          LG    7,@lit_982_301
00003868 41F0 7082               00000082   5267          LA    15,130(0,7)
0000386C E3F0 D0D0 0024          000000D0   5268          STG   15,208(0,13)
00003872 4110 D0B0               000000B0   5269          LA    1,176(0,13)
00003876 E380 C098 0004          000037D8   5270          LG    8,@lit_982_302 ; fprintf
                                                                                                                           Page  107 
  Active Usings: @REGION_982_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000387C B904 00F8                          5271          LGR   15,8
00003880                                    5272 @@gen_label290 DS    0H
00003880 05EF                               5273          BALR  14,15
00003882                                    5274 @@gen_label291 DS    0H
00003882 E3F3 6000 0004          00000000   5275          LG    15,0(3,6)   ; __stderrp
00003888 E3F0 D0B0 0024          000000B0   5276          STG   15,176(0,13)
0000388E 41F0 4102               00000102   5277          LA    15,258(0,4)
00003892 E3F0 D0B8 0024          000000B8   5278          STG   15,184(0,13)
00003898 E320 D0C0 0024          000000C0   5279          STG   2,192(0,13)
0000389E 4110 D0B0               000000B0   5280          LA    1,176(0,13)
000038A2 B904 00F8                          5281          LGR   15,8
000038A6                                    5282 @@gen_label292 DS    0H
000038A6 05EF                               5283          BALR  14,15
000038A8                                    5284 @@gen_label293 DS    0H
000038A8 E3F3 6000 0004          00000000   5285          LG    15,0(3,6)   ; __stderrp
000038AE E3F0 D0B0 0024          000000B0   5286          STG   15,176(0,13)
000038B4 41F0 40A2               000000A2   5287          LA    15,162(0,4)
000038B8 E3F0 D0B8 0024          000000B8   5288          STG   15,184(0,13)
000038BE 4110 D0B0               000000B0   5289          LA    1,176(0,13)
000038C2 B904 00F8                          5290          LGR   15,8
000038C6                                    5291 @@gen_label294 DS    0H
000038C6 05EF                               5292          BALR  14,15
000038C8                                    5293 @@gen_label295 DS    0H
000038C8 E3F0 C0B4 0016          000037F4   5294          LLGF  15,@lit_982_307 ; rd_unittest_assert_on_failure
000038CE 41FF 6000               00000000   5295          LA    15,0(15,6)
000038D2 9500 F000      00000000 00000000   5296          CLI   0(15),0
000038D6 4780 C1D0               00003910   5297          BE    @L212
000038DA 1255                               5298          LTR   5,5
000038DC 4770 C1D0               00003910   5299          BNZ   @L212
000038E0                                    5300 @L213    DS    0H
000038E0 41F0 7082               00000082   5301          LA    15,130(0,7)
000038E4 E3F0 D0B0 0024          000000B0   5302          STG   15,176(0,13)
000038EA 41F0 4058               00000058   5303          LA    15,88(0,4)
000038EE E3F0 D0B8 0024          000000B8   5304          STG   15,184(0,13)
000038F4 E548 D0C0 023B          000000C0   5305          MVGHI 192(13),571
000038FA 41F0 4118               00000118   5306          LA    15,280(0,4)
000038FE E3F0 D0C8 0024          000000C8   5307          STG   15,200(0,13)
00003904 4110 D0B0               000000B0   5308          LA    1,176(0,13)
00003908 E3F0 C0B8 0004          000037F8   5309          LG    15,@lit_982_308 ; __assert
0000390E                                    5310 @@gen_label298 DS    0H
0000390E 05EF                               5311          BALR  14,15
00003910                                    5312 @@gen_label299 DS    0H
00003910                                    5313 @L214    DS    0H
00003910                                    5314 @L212    DS    0H
00003910 A7F9 0001               00000001   5315          LGHI  15,1        ; 1
00003914 47F0 C358               00003A98   5316          B     @ret_lab_982
00003918                                    5317 @L211    DS    0H
                                            5318 * ***           }
00003918 A72B 0001               00000001   5319          AGHI  2,1
0000391C                                    5320 @L205    DS    0H
0000391C C22C 000F 4240                     5321          CGFI  2,X'000F4240'
00003922 4740 C0D0               00003810   5322          BL    @L204
                                                                                                                           Page  108 
  Active Usings: @REGION_982_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5323 * ***
                                            5324 * ***           v = rd_hdr_histogram_max(hdr);
00003926 E330 D0B0 0024          000000B0   5325          STG   3,176(0,13)
0000392C 4110 D0B0               000000B0   5326          LA    1,176(0,13)
00003930 E3F0 C0C0 0004          00003800   5327          LG    15,@lit_982_310 ; rd_hdr_histogram_max
00003936                                    5328 @@gen_label301 DS    0H
00003936 05EF                               5329          BALR  14,15
00003938                                    5330 @@gen_label302 DS    0H
00003938 B904 002F                          5331          LGR   2,15
                                            5332 * ***           do { if (!(v == exp)) { fprintf(__stderrp, "\033[31mRD\
                                            5333 * UT: FAIL: %s:%d: %s: " "assert failed: " "v == exp" ": ", "C:\\asgka\
                                            5334 * fka\\librdkafka\\src\\rdhdrhistogram.c", 575, __FUNCTION__); fprintf\
                                            5335 * (__stderrp, "Max is %" "lld" ", expected %" "lld", v, exp); fprintf(\
                                            5336 * __stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((v == e\
                                            5337 * xp) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\r\
                                            5338 * dhdrhistogram.c", 575, "v == exp")); return 1; } } while (0);
0000393C                                    5339 @L215    DS    0H
0000393C B920 0024                          5340          CGR   2,4
00003940 4780 C2F4               00003A34   5341          BE    @L218
00003944 E330 C0B0 0016          000037F0   5342          LLGF  3,@lit_982_299 ; __stderrp
0000394A E3F3 6000 0004          00000000   5343          LG    15,0(3,6)   ; __stderrp
00003950 E3F0 D0B0 0024          000000B0   5344          STG   15,176(0,13)
00003956 E350 C0A8 0004          000037E8   5345          LG    5,@lit_982_300
0000395C 41F0 5022               00000022   5346          LA    15,34(0,5)
00003960 E3F0 D0B8 0024          000000B8   5347          STG   15,184(0,13)
00003966 41F0 5058               00000058   5348          LA    15,88(0,5)
0000396A E3F0 D0C0 0024          000000C0   5349          STG   15,192(0,13)
00003970 E548 D0C8 023F          000000C8   5350          MVGHI 200(13),575
00003976 E370 C0A0 0004          000037E0   5351          LG    7,@lit_982_301
0000397C 41F0 7082               00000082   5352          LA    15,130(0,7)
00003980 E3F0 D0D0 0024          000000D0   5353          STG   15,208(0,13)
00003986 4110 D0B0               000000B0   5354          LA    1,176(0,13)
0000398A E380 C098 0004          000037D8   5355          LG    8,@lit_982_302 ; fprintf
00003990 B904 00F8                          5356          LGR   15,8
00003994                                    5357 @@gen_label304 DS    0H
00003994 05EF                               5358          BALR  14,15
00003996                                    5359 @@gen_label305 DS    0H
00003996 E3F3 6000 0004          00000000   5360          LG    15,0(3,6)   ; __stderrp
0000399C E3F0 D0B0 0024          000000B0   5361          STG   15,176(0,13)
000039A2 41F0 5308               00000308   5362          LA    15,776(0,5)
000039A6 E3F0 D0B8 0024          000000B8   5363          STG   15,184(0,13)
000039AC E320 D0C0 0024          000000C0   5364          STG   2,192(0,13)
000039B2 E340 D0C8 0024          000000C8   5365          STG   4,200(0,13)
000039B8 4110 D0B0               000000B0   5366          LA    1,176(0,13)
000039BC B904 00F8                          5367          LGR   15,8
000039C0                                    5368 @@gen_label306 DS    0H
000039C0 05EF                               5369          BALR  14,15
000039C2                                    5370 @@gen_label307 DS    0H
000039C2 E3F3 6000 0004          00000000   5371          LG    15,0(3,6)   ; __stderrp
000039C8 E3F0 D0B0 0024          000000B0   5372          STG   15,176(0,13)
000039CE 41F0 50A2               000000A2   5373          LA    15,162(0,5)
000039D2 E3F0 D0B8 0024          000000B8   5374          STG   15,184(0,13)
                                                                                                                           Page  109 
  Active Usings: @REGION_982_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000039D8 4110 D0B0               000000B0   5375          LA    1,176(0,13)
000039DC B904 00F8                          5376          LGR   15,8
000039E0                                    5377 @@gen_label308 DS    0H
000039E0 05EF                               5378          BALR  14,15
000039E2                                    5379 @@gen_label309 DS    0H
000039E2 E3F0 C0B4 0016          000037F4   5380          LLGF  15,@lit_982_307 ; rd_unittest_assert_on_failure
000039E8 41FF 6000               00000000   5381          LA    15,0(15,6)
000039EC 9500 F000      00000000 00000000   5382          CLI   0(15),0
000039F0 4780 C2EC               00003A2C   5383          BE    @L219
000039F4 B920 0024                          5384          CGR   2,4
000039F8 4780 C2EC               00003A2C   5385          BE    @L219
000039FC                                    5386 @L220    DS    0H
000039FC 41F0 7082               00000082   5387          LA    15,130(0,7)
00003A00 E3F0 D0B0 0024          000000B0   5388          STG   15,176(0,13)
00003A06 41F0 5058               00000058   5389          LA    15,88(0,5)
00003A0A E3F0 D0B8 0024          000000B8   5390          STG   15,184(0,13)
00003A10 E548 D0C0 023F          000000C0   5391          MVGHI 192(13),575
00003A16 41F0 50A8               000000A8   5392          LA    15,168(0,5)
00003A1A E3F0 D0C8 0024          000000C8   5393          STG   15,200(0,13)
00003A20 4110 D0B0               000000B0   5394          LA    1,176(0,13)
00003A24 E3F0 C0B8 0004          000037F8   5395          LG    15,@lit_982_308 ; __assert
00003A2A                                    5396 @@gen_label312 DS    0H
00003A2A 05EF                               5397          BALR  14,15
00003A2C                                    5398 @@gen_label313 DS    0H
00003A2C                                    5399 @L221    DS    0H
00003A2C                                    5400 @L219    DS    0H
00003A2C A7F9 0001               00000001   5401          LGHI  15,1        ; 1
00003A30 47F0 C358               00003A98   5402          B     @ret_lab_982
00003A34                                    5403 @L218    DS    0H
                                            5404 * ***
                                            5405 * ***
                                            5406 * ***           rd_hdr_histogram_destroy(hdr);
00003A34 E330 D0B0 0024          000000B0   5407          STG   3,176(0,13)
00003A3A 4110 D0B0               000000B0   5408          LA    1,176(0,13)
00003A3E E3F0 C0C8 0004          00003808   5409          LG    15,@lit_982_322 ; rd_hdr_histogram_destroy
00003A44                                    5410 @@gen_label314 DS    0H
00003A44 05EF                               5411          BALR  14,15
00003A46                                    5412 @@gen_label315 DS    0H
                                            5413 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                            5414 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 579, \
                                            5415 * __FUNCTION__); return 0; } while (0);
00003A46                                    5416 @L222    DS    0H
00003A46 E3F0 C0B0 0016          000037F0   5417          LLGF  15,@lit_982_299 ; __stderrp
00003A4C E3FF 6000 0004          00000000   5418          LG    15,0(15,6)  ; __stderrp
00003A52 E3F0 D0B0 0024          000000B0   5419          STG   15,176(0,13)
00003A58 E3F0 C0A8 0004          000037E8   5420          LG    15,@lit_982_300
00003A5E 4110 F0B2               000000B2   5421          LA    1,178(0,15)
00003A62 E310 D0B8 0024          000000B8   5422          STG   1,184(0,13)
00003A68 41F0 F058               00000058   5423          LA    15,88(0,15)
00003A6C E3F0 D0C0 0024          000000C0   5424          STG   15,192(0,13)
00003A72 E548 D0C8 0243          000000C8   5425          MVGHI 200(13),579
00003A78 E3F0 C0A0 0004          000037E0   5426          LG    15,@lit_982_301
                                                                                                                           Page  110 
  Active Usings: @REGION_982_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003A7E 41F0 F082               00000082   5427          LA    15,130(0,15)
00003A82 E3F0 D0D0 0024          000000D0   5428          STG   15,208(0,13)
00003A88 4110 D0B0               000000B0   5429          LA    1,176(0,13)
00003A8C E3F0 C098 0004          000037D8   5430          LG    15,@lit_982_302 ; fprintf
00003A92                                    5431 @@gen_label316 DS    0H
00003A92 05EF                               5432          BALR  14,15
00003A94                                    5433 @@gen_label317 DS    0H
00003A94 A7F9 0000               00000000   5434          LGHI  15,0        ; 0
                                            5435 * ***   }
00003A98                                    5436 @ret_lab_982 DS 0H
                                            5437 * * **** Start of Epilogue
                                            5438          DCCEPIL
00003A98                                    5439+         ds 0h                                                          01-DCCEP
                                            5440+* Epilog
00003A98 D707 D088 D088 00000088 00000088   5441+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003A9E E3D0 D080 0004          00000080   5442+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003AA4 E3C0 D090 0004          00000090   5443+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003AAA E3B0 C018 0004          00000018   5444+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003AB0 E3C0 B010 0021          00000010   5445+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003AB6 E3E0 D008 0004          00000008   5446+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003ABC EB1C D020 0004          00000020   5447+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003AC2 078E                               5448+         bcr 8,14                if same dsab, just return              01-DCCEP
00003AC4 E3F0 D010 0024          00000010   5449+         stg 15,16(0,13)         save return code                       01-DCCEP
00003ACA E300 D018 0024          00000018   5450+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003AD0 E3F0 D090 0004          00000090   5451+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003AD6 E3F0 F018 0004          00000018   5452+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003ADC 47F0 F040               00000040   5453+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5454+* End of Epilog
                                            5455 * * **** End of Epilogue
                                            5456          DROP  12
                                            5457 *
                                            5458 *   DSECT for automatic variables in "ut_max"
                                            5459 *      (FUNCTION #982)
                                            5460 *
00000000                00000000 000000B0   5461 @AUTO#ut_max DSECT
00000000                                    5462          DS    XL168
000000A8                                    5463 ut_max#r#1 DS  1F          ; r
000000AC                000000AC 000000A8   5464          ORG   @AUTO#ut_max+168
000000A8                                    5465 ut_max#exp#0 DS 8XL1       ; exp
000000B0                000000B0 000000A8   5466          ORG   @AUTO#ut_max+168
000000A8                                    5467 ut_max#v#0 DS  8XL1        ; v
000000B0                000000B0 000000A8   5468          ORG   @AUTO#ut_max+168
000000A8                                    5469 ut_max#i#0 DS  8XL1        ; i
                                            5470 *
00003AE0                00000000 000056F0   5471 @CODE    CSECT
                                            5472 *
                                            5473 *
                                            5474 *
                                            5475 * ....... start of ut_min
00003AE0                                    5476 @LNAME983 DS   0H
00003AE0 00000006                           5477          DC    X'00000006'
00003AE4 A4A36D948995                       5478          DC    C'ut_min'
                                                                                                                           Page  111 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003AEA 00                                 5479          DC    X'00'
                                            5480 ut_min   DCCPRLG CINDEX=983,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME983
                                            5481          macro
                                            5482          dccextrn &m
                                            5483          gblc    &$dccext(1000)
                                            5484          gbla    &$dccexti
                                            5485          lcla    &i
                                            5486 &$dccext(&$dccexti+1) setc    '&m'
                                            5487 &i       seta    1
                                            5488 .loop    aif    (&i gt &$dccexti).around
                                            5489          aif    ('&$dccext(&i)' eq '&m').getout
                                            5490 &i       seta    &i+1
                                            5491          ago     .loop
                                            5492 .around  anop
                                            5493 &$dccexti seta &$dccexti+1
                                            5494          extrn  &m
                                            5495 .getout  anop
                                            5496          mend
00003AF0                                    5497+$eye0101    ds    0d                                                    02-DCCCA
00003AF0 C4C3C3                             5498+         dc cl3'DCC'                                                    02-DCCCA
00003AF3 01                                 5499+         dc xl1'01' format one                                          02-DCCCA
00003AF4 00000000                           5500+         dc a(0)                                                        02-DCCCA
00003AF8 0000000000003B62                   5501+         dc ad(@PER_983)                                                02-DCCCA
00003B00 00000000000000D8                   5502+         dc ad(216)                                                     02-DCCCA
00003B08 0000000000000000                   5503+         dc ad(0)                                                       02-DCCCA
00003B10 0000000000001000                   5504+         dc ad(4096)                                                    02-DCCCA
00003B18 20                                 5505+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003B19 03                                 5506+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003B1A 03                                 5507+         dc al1(3)                                                      02-DCCCA
00003B1B 08                                 5508+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003B1C 00                                 5509+         dc bl.8'00000000'                                              02-DCCCA
00003B1D 000000                             5510+         dc al3(0)                                                      02-DCCCA
00003B20 0000000000003AE0                   5511+         dc ad(@LNAME983)                                               02-DCCCA
00003B28                                    5512+         ds 0d                                                          02-DCCCA
00003B28 0000000000003AF0                   5513+         dc ad($eye0101)                                                02-DCCCA
00003B30 0000000000000000                   5514+         dc ad(0)                                                       02-DCCCA
00003B38                                    5515+         ds    0d                                                       01-DCCPR
00003B38                                    5516+ut_min   ds    0d                                                       01-DCCPR
00003B38                                    5517+@REGION_983_1 ds 0h                                                     01-DCCPR
00003B38 EBEC D008 0024          00000008   5518+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003B3E E3E0 D088 0004          00000088   5519+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003B44 E3C0 D090 0004          00000090   5520+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003B4A B904 002E                          5521+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003B4E E3B0 C018 0004          00000018   5522+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003B54 A7EB 00D8               000000D8   5523+         aghi  14,216              increase by frame size               01-DCCPR
00003B58 E3E0 C020 0021          00000020   5524+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003B5E 4720 B020               00000020   5525+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003B62                                    5526+@PER_983 ds    0h                                                       01-DCCPR
00003B62 EBDE 2080 0024          00000080   5527+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003B68 E3C0 2090 0024          00000090   5528+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003B6E B904 00D2                          5529+         lgr   13,2                set real frame pointer               01-DCCPR
                                                                                                                           Page  112 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003B72 B904 00CF                          5530+         lgr   12,15               set base reg                         01-DCCPR
                        00003B38            5531+         using @REGION_983_1,12                                         01-DCCPR
                                            5532          DCCPRV REG=6      ; Get PRV from DVT
00003B76 E360 B008 0004          00000008   5533+         LG 6,8(0,11)                                                   01-DCCPR
                                            5534 * ******* End of Prologue
                                            5535 * *
                                            5536 * ***           rd_hdr_histogram_t *hdr = rd_hdr_histogram_new(1, 1000\
                                            5537 * 0000, 3);
00003B7C E548 D0B0 0001          000000B0   5538          MVGHI 176(13),1
00003B82 C0FF 0098 9680                     5539          LLILF 15,X'00989680' ; 10000000
00003B88 E3F0 D0B8 0024          000000B8   5540          STG   15,184(0,13)
00003B8E E548 D0C0 0003          000000C0   5541          MVGHI 192(13),3
00003B94 4110 D0B0               000000B0   5542          LA    1,176(0,13)
00003B98 E3F0 C080 0004          00003BB8   5543          LG    15,@lit_983_330 ; rd_hdr_histogram_new
00003B9E                                    5544 @@gen_label318 DS    0H
00003B9E 05EF                               5545          BALR  14,15
00003BA0                                    5546 @@gen_label319 DS    0H
00003BA0 B904 003F                          5547          LGR   3,15
                                            5548 * ***           int64_t i, v;
                                            5549 * ***           const int64_t exp = 0;
00003BA4 A749 0000               00000000   5550          LGHI  4,0         ; 0
                                            5551 * ***
                                            5552 * ***           for (i = 0 ; i < 1000000 ; i++) {
00003BA8 B904 0024                          5553          LGR   2,4         ; i
00003BAC 47F0 C1D4               00003D0C   5554          B     @L226
00003BB0                                    5555          DS    0D
00003BB0 000000D8                           5556 @FRAMESIZE_983 DC F'216'
00003BB4 00000000
00003BB8 0000000000000488                   5557 @lit_983_330 DC AD(rd_hdr_histogram_new)
00003BC0 0000000000001EB8                   5558 @lit_983_333 DC AD(rd_hdr_histogram_record)
00003BC8 0000000000000000                   5559 @lit_983_337 DC AD(fprintf)
00003BD0 00000000000056F0                   5560 @lit_983_336 DC AD(@DATA)
00003BD8 00000000000057E8                   5561 @lit_983_335 DC AD(@strings@)
00003BE0 00000000                           5562 @lit_983_334 DC Q(__stderrp)
00003BE4 00000000                           5563 @lit_983_342 DC Q(rd_unittest_assert_on_failure)
00003BE8 0000000000000000                   5564 @lit_983_343 DC AD(__assert)
00003BF0 0000000000001B98                   5565 @lit_983_345 DC AD(rd_hdr_histogram_min)
00003BF8 0000000000000370                   5566 @lit_983_357 DC AD(rd_hdr_histogram_destroy)
00003C00                                    5567 @L225    DS    0H
                                            5568 * ***                   int r = rd_hdr_histogram_record(hdr, i);
00003C00 E330 D0B0 0024          000000B0   5569          STG   3,176(0,13)
00003C06 E320 D0B8 0024          000000B8   5570          STG   2,184(0,13)
00003C0C 4110 D0B0               000000B0   5571          LA    1,176(0,13)
00003C10 E3F0 C088 0004          00003BC0   5572          LG    15,@lit_983_333 ; rd_hdr_histogram_record
00003C16                                    5573 @@gen_label320 DS    0H
00003C16 05EF                               5574          BALR  14,15
00003C18                                    5575 @@gen_label321 DS    0H
00003C18 185F                               5576          LR    5,15
                                            5577 * ***                   do { if (!(r)) { fprintf(__stderrp, "\033[31mR\
                                            5578 * DUT: FAIL: %s:%d: %s: " "assert failed: " "r" ": ", "C:\\asgkafka\\l\
                                            5579 * ibrdkafka\\src\\rdhdrhistogram.c", 589, __FUNCTION__); fprintf(__std\
                                            5580 * errp, "record(%" "lld" ") failed\n", i); fprintf(__stderrp, "\033[0m\
                                                                                                                           Page  113 
  Active Usings: @REGION_983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5581 * \n"); if (rd_unittest_assert_on_failure) ((r) ? (void)0 : __assert(_\
                                            5582 * _func__, "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 589, "r"\
                                            5583 * )); return 1; } } while (0);
00003C1A                                    5584 @L229    DS    0H
00003C1A 1255                               5585          LTR   5,5
00003C1C 4770 C1D0               00003D08   5586          BNZ   @L232
00003C20 E330 C0A8 0016          00003BE0   5587          LLGF  3,@lit_983_334 ; __stderrp
00003C26 E3F3 6000 0004          00000000   5588          LG    15,0(3,6)   ; __stderrp
00003C2C E3F0 D0B0 0024          000000B0   5589          STG   15,176(0,13)
00003C32 E340 C0A0 0004          00003BD8   5590          LG    4,@lit_983_335
00003C38 41F0 40D2               000000D2   5591          LA    15,210(0,4)
00003C3C E3F0 D0B8 0024          000000B8   5592          STG   15,184(0,13)
00003C42 41F0 4058               00000058   5593          LA    15,88(0,4)
00003C46 E3F0 D0C0 0024          000000C0   5594          STG   15,192(0,13)
00003C4C E548 D0C8 024D          000000C8   5595          MVGHI 200(13),589
00003C52 E370 C098 0004          00003BD0   5596          LG    7,@lit_983_336
00003C58 41F0 708A               0000008A   5597          LA    15,138(0,7)
00003C5C E3F0 D0D0 0024          000000D0   5598          STG   15,208(0,13)
00003C62 4110 D0B0               000000B0   5599          LA    1,176(0,13)
00003C66 E380 C090 0004          00003BC8   5600          LG    8,@lit_983_337 ; fprintf
00003C6C B904 00F8                          5601          LGR   15,8
00003C70                                    5602 @@gen_label323 DS    0H
00003C70 05EF                               5603          BALR  14,15
00003C72                                    5604 @@gen_label324 DS    0H
00003C72 E3F3 6000 0004          00000000   5605          LG    15,0(3,6)   ; __stderrp
00003C78 E3F0 D0B0 0024          000000B0   5606          STG   15,176(0,13)
00003C7E 41F0 4102               00000102   5607          LA    15,258(0,4)
00003C82 E3F0 D0B8 0024          000000B8   5608          STG   15,184(0,13)
00003C88 E320 D0C0 0024          000000C0   5609          STG   2,192(0,13)
00003C8E 4110 D0B0               000000B0   5610          LA    1,176(0,13)
00003C92 B904 00F8                          5611          LGR   15,8
00003C96                                    5612 @@gen_label325 DS    0H
00003C96 05EF                               5613          BALR  14,15
00003C98                                    5614 @@gen_label326 DS    0H
00003C98 E3F3 6000 0004          00000000   5615          LG    15,0(3,6)   ; __stderrp
00003C9E E3F0 D0B0 0024          000000B0   5616          STG   15,176(0,13)
00003CA4 41F0 40A2               000000A2   5617          LA    15,162(0,4)
00003CA8 E3F0 D0B8 0024          000000B8   5618          STG   15,184(0,13)
00003CAE 4110 D0B0               000000B0   5619          LA    1,176(0,13)
00003CB2 B904 00F8                          5620          LGR   15,8
00003CB6                                    5621 @@gen_label327 DS    0H
00003CB6 05EF                               5622          BALR  14,15
00003CB8                                    5623 @@gen_label328 DS    0H
00003CB8 E3F0 C0AC 0016          00003BE4   5624          LLGF  15,@lit_983_342 ; rd_unittest_assert_on_failure
00003CBE 41FF 6000               00000000   5625          LA    15,0(15,6)
00003CC2 9500 F000      00000000 00000000   5626          CLI   0(15),0
00003CC6 4780 C1C8               00003D00   5627          BE    @L233
00003CCA 1255                               5628          LTR   5,5
00003CCC 4770 C1C8               00003D00   5629          BNZ   @L233
00003CD0                                    5630 @L234    DS    0H
00003CD0 41F0 708A               0000008A   5631          LA    15,138(0,7)
00003CD4 E3F0 D0B0 0024          000000B0   5632          STG   15,176(0,13)
                                                                                                                           Page  114 
  Active Usings: @REGION_983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003CDA 41F0 4058               00000058   5633          LA    15,88(0,4)
00003CDE E3F0 D0B8 0024          000000B8   5634          STG   15,184(0,13)
00003CE4 E548 D0C0 024D          000000C0   5635          MVGHI 192(13),589
00003CEA 41F0 4118               00000118   5636          LA    15,280(0,4)
00003CEE E3F0 D0C8 0024          000000C8   5637          STG   15,200(0,13)
00003CF4 4110 D0B0               000000B0   5638          LA    1,176(0,13)
00003CF8 E3F0 C0B0 0004          00003BE8   5639          LG    15,@lit_983_343 ; __assert
00003CFE                                    5640 @@gen_label331 DS    0H
00003CFE 05EF                               5641          BALR  14,15
00003D00                                    5642 @@gen_label332 DS    0H
00003D00                                    5643 @L235    DS    0H
00003D00                                    5644 @L233    DS    0H
00003D00 A7F9 0001               00000001   5645          LGHI  15,1        ; 1
00003D04 47F0 C350               00003E88   5646          B     @ret_lab_983
00003D08                                    5647 @L232    DS    0H
                                            5648 * ***           }
00003D08 A72B 0001               00000001   5649          AGHI  2,1
00003D0C                                    5650 @L226    DS    0H
00003D0C C22C 000F 4240                     5651          CGFI  2,X'000F4240'
00003D12 4740 C0C8               00003C00   5652          BL    @L225
                                            5653 * ***
                                            5654 * ***           v = rd_hdr_histogram_min(hdr);
00003D16 E330 D0B0 0024          000000B0   5655          STG   3,176(0,13)
00003D1C 4110 D0B0               000000B0   5656          LA    1,176(0,13)
00003D20 E3F0 C0B8 0004          00003BF0   5657          LG    15,@lit_983_345 ; rd_hdr_histogram_min
00003D26                                    5658 @@gen_label334 DS    0H
00003D26 05EF                               5659          BALR  14,15
00003D28                                    5660 @@gen_label335 DS    0H
00003D28 B904 002F                          5661          LGR   2,15
                                            5662 * ***           do { if (!(v == exp)) { fprintf(__stderrp, "\033[31mRD\
                                            5663 * UT: FAIL: %s:%d: %s: " "assert failed: " "v == exp" ": ", "C:\\asgka\
                                            5664 * fka\\librdkafka\\src\\rdhdrhistogram.c", 593, __FUNCTION__); fprintf\
                                            5665 * (__stderrp, "Min is %" "lld" ", expected %" "lld", v, exp); fprintf(\
                                            5666 * __stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((v == e\
                                            5667 * xp) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\r\
                                            5668 * dhdrhistogram.c", 593, "v == exp")); return 1; } } while (0);
00003D2C                                    5669 @L236    DS    0H
00003D2C B920 0024                          5670          CGR   2,4
00003D30 4780 C2EC               00003E24   5671          BE    @L239
00003D34 E330 C0A8 0016          00003BE0   5672          LLGF  3,@lit_983_334 ; __stderrp
00003D3A E3F3 6000 0004          00000000   5673          LG    15,0(3,6)   ; __stderrp
00003D40 E3F0 D0B0 0024          000000B0   5674          STG   15,176(0,13)
00003D46 E350 C0A0 0004          00003BD8   5675          LG    5,@lit_983_335
00003D4C 41F0 5022               00000022   5676          LA    15,34(0,5)
00003D50 E3F0 D0B8 0024          000000B8   5677          STG   15,184(0,13)
00003D56 41F0 5058               00000058   5678          LA    15,88(0,5)
00003D5A E3F0 D0C0 0024          000000C0   5679          STG   15,192(0,13)
00003D60 E548 D0C8 0251          000000C8   5680          MVGHI 200(13),593
00003D66 E370 C098 0004          00003BD0   5681          LG    7,@lit_983_336
00003D6C 41F0 708A               0000008A   5682          LA    15,138(0,7)
00003D70 E3F0 D0D0 0024          000000D0   5683          STG   15,208(0,13)
00003D76 4110 D0B0               000000B0   5684          LA    1,176(0,13)
                                                                                                                           Page  115 
  Active Usings: @REGION_983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003D7A E380 C090 0004          00003BC8   5685          LG    8,@lit_983_337 ; fprintf
00003D80 B904 00F8                          5686          LGR   15,8
00003D84                                    5687 @@gen_label337 DS    0H
00003D84 05EF                               5688          BALR  14,15
00003D86                                    5689 @@gen_label338 DS    0H
00003D86 E3F3 6000 0004          00000000   5690          LG    15,0(3,6)   ; __stderrp
00003D8C E3F0 D0B0 0024          000000B0   5691          STG   15,176(0,13)
00003D92 41F0 5324               00000324   5692          LA    15,804(0,5)
00003D96 E3F0 D0B8 0024          000000B8   5693          STG   15,184(0,13)
00003D9C E320 D0C0 0024          000000C0   5694          STG   2,192(0,13)
00003DA2 E340 D0C8 0024          000000C8   5695          STG   4,200(0,13)
00003DA8 4110 D0B0               000000B0   5696          LA    1,176(0,13)
00003DAC B904 00F8                          5697          LGR   15,8
00003DB0                                    5698 @@gen_label339 DS    0H
00003DB0 05EF                               5699          BALR  14,15
00003DB2                                    5700 @@gen_label340 DS    0H
00003DB2 E3F3 6000 0004          00000000   5701          LG    15,0(3,6)   ; __stderrp
00003DB8 E3F0 D0B0 0024          000000B0   5702          STG   15,176(0,13)
00003DBE 41F0 50A2               000000A2   5703          LA    15,162(0,5)
00003DC2 E3F0 D0B8 0024          000000B8   5704          STG   15,184(0,13)
00003DC8 4110 D0B0               000000B0   5705          LA    1,176(0,13)
00003DCC B904 00F8                          5706          LGR   15,8
00003DD0                                    5707 @@gen_label341 DS    0H
00003DD0 05EF                               5708          BALR  14,15
00003DD2                                    5709 @@gen_label342 DS    0H
00003DD2 E3F0 C0AC 0016          00003BE4   5710          LLGF  15,@lit_983_342 ; rd_unittest_assert_on_failure
00003DD8 41FF 6000               00000000   5711          LA    15,0(15,6)
00003DDC 9500 F000      00000000 00000000   5712          CLI   0(15),0
00003DE0 4780 C2E4               00003E1C   5713          BE    @L240
00003DE4 B920 0024                          5714          CGR   2,4
00003DE8 4780 C2E4               00003E1C   5715          BE    @L240
00003DEC                                    5716 @L241    DS    0H
00003DEC 41F0 708A               0000008A   5717          LA    15,138(0,7)
00003DF0 E3F0 D0B0 0024          000000B0   5718          STG   15,176(0,13)
00003DF6 41F0 5058               00000058   5719          LA    15,88(0,5)
00003DFA E3F0 D0B8 0024          000000B8   5720          STG   15,184(0,13)
00003E00 E548 D0C0 0251          000000C0   5721          MVGHI 192(13),593
00003E06 41F0 50A8               000000A8   5722          LA    15,168(0,5)
00003E0A E3F0 D0C8 0024          000000C8   5723          STG   15,200(0,13)
00003E10 4110 D0B0               000000B0   5724          LA    1,176(0,13)
00003E14 E3F0 C0B0 0004          00003BE8   5725          LG    15,@lit_983_343 ; __assert
00003E1A                                    5726 @@gen_label345 DS    0H
00003E1A 05EF                               5727          BALR  14,15
00003E1C                                    5728 @@gen_label346 DS    0H
00003E1C                                    5729 @L242    DS    0H
00003E1C                                    5730 @L240    DS    0H
00003E1C A7F9 0001               00000001   5731          LGHI  15,1        ; 1
00003E20 47F0 C350               00003E88   5732          B     @ret_lab_983
00003E24                                    5733 @L239    DS    0H
                                            5734 * ***
                                            5735 * ***
                                            5736 * ***           rd_hdr_histogram_destroy(hdr);
                                                                                                                           Page  116 
  Active Usings: @REGION_983_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003E24 E330 D0B0 0024          000000B0   5737          STG   3,176(0,13)
00003E2A 4110 D0B0               000000B0   5738          LA    1,176(0,13)
00003E2E E3F0 C0C0 0004          00003BF8   5739          LG    15,@lit_983_357 ; rd_hdr_histogram_destroy
00003E34                                    5740 @@gen_label347 DS    0H
00003E34 05EF                               5741          BALR  14,15
00003E36                                    5742 @@gen_label348 DS    0H
                                            5743 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                            5744 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 597, \
                                            5745 * __FUNCTION__); return 0; } while (0);
00003E36                                    5746 @L243    DS    0H
00003E36 E3F0 C0A8 0016          00003BE0   5747          LLGF  15,@lit_983_334 ; __stderrp
00003E3C E3FF 6000 0004          00000000   5748          LG    15,0(15,6)  ; __stderrp
00003E42 E3F0 D0B0 0024          000000B0   5749          STG   15,176(0,13)
00003E48 E3F0 C0A0 0004          00003BD8   5750          LG    15,@lit_983_335
00003E4E 4110 F0B2               000000B2   5751          LA    1,178(0,15)
00003E52 E310 D0B8 0024          000000B8   5752          STG   1,184(0,13)
00003E58 41F0 F058               00000058   5753          LA    15,88(0,15)
00003E5C E3F0 D0C0 0024          000000C0   5754          STG   15,192(0,13)
00003E62 E548 D0C8 0255          000000C8   5755          MVGHI 200(13),597
00003E68 E3F0 C098 0004          00003BD0   5756          LG    15,@lit_983_336
00003E6E 41F0 F08A               0000008A   5757          LA    15,138(0,15)
00003E72 E3F0 D0D0 0024          000000D0   5758          STG   15,208(0,13)
00003E78 4110 D0B0               000000B0   5759          LA    1,176(0,13)
00003E7C E3F0 C090 0004          00003BC8   5760          LG    15,@lit_983_337 ; fprintf
00003E82                                    5761 @@gen_label349 DS    0H
00003E82 05EF                               5762          BALR  14,15
00003E84                                    5763 @@gen_label350 DS    0H
00003E84 A7F9 0000               00000000   5764          LGHI  15,0        ; 0
                                            5765 * ***   }
00003E88                                    5766 @ret_lab_983 DS 0H
                                            5767 * * **** Start of Epilogue
                                            5768          DCCEPIL
00003E88                                    5769+         ds 0h                                                          01-DCCEP
                                            5770+* Epilog
00003E88 D707 D088 D088 00000088 00000088   5771+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00003E8E E3D0 D080 0004          00000080   5772+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00003E94 E3C0 D090 0004          00000090   5773+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00003E9A E3B0 C018 0004          00000018   5774+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00003EA0 E3C0 B010 0021          00000010   5775+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00003EA6 E3E0 D008 0004          00000008   5776+         lg  14,8(0,13)          load up return address                 01-DCCEP
00003EAC EB1C D020 0004          00000020   5777+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00003EB2 078E                               5778+         bcr 8,14                if same dsab, just return              01-DCCEP
00003EB4 E3F0 D010 0024          00000010   5779+         stg 15,16(0,13)         save return code                       01-DCCEP
00003EBA E300 D018 0024          00000018   5780+         stg 0,24(0,13)          save more return code                  01-DCCEP
00003EC0 E3F0 D090 0004          00000090   5781+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00003EC6 E3F0 F018 0004          00000018   5782+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00003ECC 47F0 F040               00000040   5783+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            5784+* End of Epilog
                                            5785 * * **** End of Epilogue
                                            5786          DROP  12
                                            5787 *
                                            5788 *   DSECT for automatic variables in "ut_min"
                                                                                                                           Page  117 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            5789 *      (FUNCTION #983)
                                            5790 *
00000000                00000000 000000B0   5791 @AUTO#ut_min DSECT
00000000                                    5792          DS    XL168
000000A8                                    5793 ut_min#r#1 DS  1F          ; r
000000AC                000000AC 000000A8   5794          ORG   @AUTO#ut_min+168
000000A8                                    5795 ut_min#exp#0 DS 8XL1       ; exp
000000B0                000000B0 000000A8   5796          ORG   @AUTO#ut_min+168
000000A8                                    5797 ut_min#v#0 DS  8XL1        ; v
000000B0                000000B0 000000A8   5798          ORG   @AUTO#ut_min+168
000000A8                                    5799 ut_min#i#0 DS  8XL1        ; i
                                            5800 *
00003ED0                00000000 000056F0   5801 @CODE    CSECT
                                            5802 *
                                            5803 *
                                            5804 *
                                            5805 * ....... start of ut_reset
00003ED0                                    5806 @LNAME984 DS   0H
00003ED0 00000008                           5807          DC    X'00000008'
00003ED4 A4A36D9985A285A3                   5808          DC    C'ut_reset'
00003EDC 00                                 5809          DC    X'00'
                                            5810 ut_reset DCCPRLG CINDEX=984,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME984
                                            5811          macro
                                            5812          dccextrn &m
                                            5813          gblc    &$dccext(1000)
                                            5814          gbla    &$dccexti
                                            5815          lcla    &i
                                            5816 &$dccext(&$dccexti+1) setc    '&m'
                                            5817 &i       seta    1
                                            5818 .loop    aif    (&i gt &$dccexti).around
                                            5819          aif    ('&$dccext(&i)' eq '&m').getout
                                            5820 &i       seta    &i+1
                                            5821          ago     .loop
                                            5822 .around  anop
                                            5823 &$dccexti seta &$dccexti+1
                                            5824          extrn  &m
                                            5825 .getout  anop
                                            5826          mend
00003EE0                                    5827+$eye0105    ds    0d                                                    02-DCCCA
00003EE0 C4C3C3                             5828+         dc cl3'DCC'                                                    02-DCCCA
00003EE3 01                                 5829+         dc xl1'01' format one                                          02-DCCCA
00003EE4 00000000                           5830+         dc a(0)                                                        02-DCCCA
00003EE8 0000000000003F52                   5831+         dc ad(@PER_984)                                                02-DCCCA
00003EF0 00000000000000D8                   5832+         dc ad(216)                                                     02-DCCCA
00003EF8 0000000000000000                   5833+         dc ad(0)                                                       02-DCCCA
00003F00 0000000000001000                   5834+         dc ad(4096)                                                    02-DCCCA
00003F08 20                                 5835+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00003F09 03                                 5836+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00003F0A 03                                 5837+         dc al1(3)                                                      02-DCCCA
00003F0B 08                                 5838+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00003F0C 00                                 5839+         dc bl.8'00000000'                                              02-DCCCA
                                                                                                                           Page  118 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003F0D 000000                             5840+         dc al3(0)                                                      02-DCCCA
00003F10 0000000000003ED0                   5841+         dc ad(@LNAME984)                                               02-DCCCA
00003F18                                    5842+         ds 0d                                                          02-DCCCA
00003F18 0000000000003EE0                   5843+         dc ad($eye0105)                                                02-DCCCA
00003F20 0000000000000000                   5844+         dc ad(0)                                                       02-DCCCA
00003F28                                    5845+         ds    0d                                                       01-DCCPR
00003F28                                    5846+ut_reset ds    0d                                                       01-DCCPR
00003F28                                    5847+@REGION_984_1 ds 0h                                                     01-DCCPR
00003F28 EBEC D008 0024          00000008   5848+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00003F2E E3E0 D088 0004          00000088   5849+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00003F34 E3C0 D090 0004          00000090   5850+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00003F3A B904 002E                          5851+         lgr   2,14                copy addr of our savearea            01-DCCPR
00003F3E E3B0 C018 0004          00000018   5852+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00003F44 A7EB 00D8               000000D8   5853+         aghi  14,216              increase by frame size               01-DCCPR
00003F48 E3E0 C020 0021          00000020   5854+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00003F4E 4720 B020               00000020   5855+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00003F52                                    5856+@PER_984 ds    0h                                                       01-DCCPR
00003F52 EBDE 2080 0024          00000080   5857+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00003F58 E3C0 2090 0024          00000090   5858+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00003F5E B904 00D2                          5859+         lgr   13,2                set real frame pointer               01-DCCPR
00003F62 B904 00CF                          5860+         lgr   12,15               set base reg                         01-DCCPR
                        00003F28            5861+         using @REGION_984_1,12                                         01-DCCPR
                                            5862          DCCPRV REG=6      ; Get PRV from DVT
00003F66 E360 B008 0004          00000008   5863+         LG 6,8(0,11)                                                   01-DCCPR
                                            5864 * ******* End of Prologue
                                            5865 * *
                                            5866 * ***           rd_hdr_histogram_t *hdr = rd_hdr_histogram_new(1, 1000\
                                            5867 * 0000, 3);
00003F6C E548 D0B0 0001          000000B0   5868          MVGHI 176(13),1
00003F72 C0FF 0098 9680                     5869          LLILF 15,X'00989680' ; 10000000
00003F78 E3F0 D0B8 0024          000000B8   5870          STG   15,184(0,13)
00003F7E E548 D0C0 0003          000000C0   5871          MVGHI 192(13),3
00003F84 4110 D0B0               000000B0   5872          LA    1,176(0,13)
00003F88 E3F0 C080 0004          00003FA8   5873          LG    15,@lit_984_365 ; rd_hdr_histogram_new
00003F8E                                    5874 @@gen_label351 DS    0H
00003F8E 05EF                               5875          BALR  14,15
00003F90                                    5876 @@gen_label352 DS    0H
00003F90 B904 003F                          5877          LGR   3,15
                                            5878 * ***           int64_t i, v;
                                            5879 * ***           const int64_t exp = 0;
00003F94 A749 0000               00000000   5880          LGHI  4,0         ; 0
                                            5881 * ***
                                            5882 * ***           for (i = 0 ; i < 1000000 ; i++) {
00003F98 B904 0024                          5883          LGR   2,4         ; i
00003F9C 47F0 C1DC               00004104   5884          B     @L247
00003FA0                                    5885          DS    0D
00003FA0 000000D8                           5886 @FRAMESIZE_984 DC F'216'
00003FA4 00000000
00003FA8 0000000000000488                   5887 @lit_984_365 DC AD(rd_hdr_histogram_new)
00003FB0 0000000000001EB8                   5888 @lit_984_368 DC AD(rd_hdr_histogram_record)
00003FB8 0000000000000000                   5889 @lit_984_372 DC AD(fprintf)
00003FC0 00000000000056F0                   5890 @lit_984_371 DC AD(@DATA)
                                                                                                                           Page  119 
  Active Usings: @REGION_984_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00003FC8 00000000000057E8                   5891 @lit_984_370 DC AD(@strings@)
00003FD0 00000000                           5892 @lit_984_369 DC Q(__stderrp)
00003FD4 00000000                           5893 @lit_984_377 DC Q(rd_unittest_assert_on_failure)
00003FD8 0000000000000000                   5894 @lit_984_378 DC AD(__assert)
00003FE0 00000000000007A0                   5895 @lit_984_380 DC AD(rd_hdr_histogram_reset)
00003FE8 0000000000001A20                   5896 @lit_984_381 DC AD(rd_hdr_histogram_max)
00003FF0 0000000000000370                   5897 @lit_984_393 DC AD(rd_hdr_histogram_destroy)
00003FF8                                    5898 @L246    DS    0H
                                            5899 * ***                   int r = rd_hdr_histogram_record(hdr, i);
00003FF8 E330 D0B0 0024          000000B0   5900          STG   3,176(0,13)
00003FFE E320 D0B8 0024          000000B8   5901          STG   2,184(0,13)
00004004 4110 D0B0               000000B0   5902          LA    1,176(0,13)
00004008 E3F0 C088 0004          00003FB0   5903          LG    15,@lit_984_368 ; rd_hdr_histogram_record
0000400E                                    5904 @@gen_label353 DS    0H
0000400E 05EF                               5905          BALR  14,15
00004010                                    5906 @@gen_label354 DS    0H
00004010 185F                               5907          LR    5,15
                                            5908 * ***                   do { if (!(r)) { fprintf(__stderrp, "\033[31mR\
                                            5909 * DUT: FAIL: %s:%d: %s: " "assert failed: " "r" ": ", "C:\\asgkafka\\l\
                                            5910 * ibrdkafka\\src\\rdhdrhistogram.c", 607, __FUNCTION__); fprintf(__std\
                                            5911 * errp, "record(%" "lld" ") failed\n", i); fprintf(__stderrp, "\033[0m\
                                            5912 * \n"); if (rd_unittest_assert_on_failure) ((r) ? (void)0 : __assert(_\
                                            5913 * _func__, "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 607, "r"\
                                            5914 * )); return 1; } } while (0);
00004012                                    5915 @L250    DS    0H
00004012 1255                               5916          LTR   5,5
00004014 4770 C1D8               00004100   5917          BNZ   @L253
00004018 E330 C0A8 0016          00003FD0   5918          LLGF  3,@lit_984_369 ; __stderrp
0000401E E3F3 6000 0004          00000000   5919          LG    15,0(3,6)   ; __stderrp
00004024 E3F0 D0B0 0024          000000B0   5920          STG   15,176(0,13)
0000402A E340 C0A0 0004          00003FC8   5921          LG    4,@lit_984_370
00004030 41F0 40D2               000000D2   5922          LA    15,210(0,4)
00004034 E3F0 D0B8 0024          000000B8   5923          STG   15,184(0,13)
0000403A 41F0 4058               00000058   5924          LA    15,88(0,4)
0000403E E3F0 D0C0 0024          000000C0   5925          STG   15,192(0,13)
00004044 E548 D0C8 025F          000000C8   5926          MVGHI 200(13),607
0000404A E370 C098 0004          00003FC0   5927          LG    7,@lit_984_371
00004050 41F0 7092               00000092   5928          LA    15,146(0,7)
00004054 E3F0 D0D0 0024          000000D0   5929          STG   15,208(0,13)
0000405A 4110 D0B0               000000B0   5930          LA    1,176(0,13)
0000405E E380 C090 0004          00003FB8   5931          LG    8,@lit_984_372 ; fprintf
00004064 B904 00F8                          5932          LGR   15,8
00004068                                    5933 @@gen_label356 DS    0H
00004068 05EF                               5934          BALR  14,15
0000406A                                    5935 @@gen_label357 DS    0H
0000406A E3F3 6000 0004          00000000   5936          LG    15,0(3,6)   ; __stderrp
00004070 E3F0 D0B0 0024          000000B0   5937          STG   15,176(0,13)
00004076 41F0 4102               00000102   5938          LA    15,258(0,4)
0000407A E3F0 D0B8 0024          000000B8   5939          STG   15,184(0,13)
00004080 E320 D0C0 0024          000000C0   5940          STG   2,192(0,13)
00004086 4110 D0B0               000000B0   5941          LA    1,176(0,13)
0000408A B904 00F8                          5942          LGR   15,8
                                                                                                                           Page  120 
  Active Usings: @REGION_984_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000408E                                    5943 @@gen_label358 DS    0H
0000408E 05EF                               5944          BALR  14,15
00004090                                    5945 @@gen_label359 DS    0H
00004090 E3F3 6000 0004          00000000   5946          LG    15,0(3,6)   ; __stderrp
00004096 E3F0 D0B0 0024          000000B0   5947          STG   15,176(0,13)
0000409C 41F0 40A2               000000A2   5948          LA    15,162(0,4)
000040A0 E3F0 D0B8 0024          000000B8   5949          STG   15,184(0,13)
000040A6 4110 D0B0               000000B0   5950          LA    1,176(0,13)
000040AA B904 00F8                          5951          LGR   15,8
000040AE                                    5952 @@gen_label360 DS    0H
000040AE 05EF                               5953          BALR  14,15
000040B0                                    5954 @@gen_label361 DS    0H
000040B0 E3F0 C0AC 0016          00003FD4   5955          LLGF  15,@lit_984_377 ; rd_unittest_assert_on_failure
000040B6 41FF 6000               00000000   5956          LA    15,0(15,6)
000040BA 9500 F000      00000000 00000000   5957          CLI   0(15),0
000040BE 4780 C1D0               000040F8   5958          BE    @L254
000040C2 1255                               5959          LTR   5,5
000040C4 4770 C1D0               000040F8   5960          BNZ   @L254
000040C8                                    5961 @L255    DS    0H
000040C8 41F0 7092               00000092   5962          LA    15,146(0,7)
000040CC E3F0 D0B0 0024          000000B0   5963          STG   15,176(0,13)
000040D2 41F0 4058               00000058   5964          LA    15,88(0,4)
000040D6 E3F0 D0B8 0024          000000B8   5965          STG   15,184(0,13)
000040DC E548 D0C0 025F          000000C0   5966          MVGHI 192(13),607
000040E2 41F0 4118               00000118   5967          LA    15,280(0,4)
000040E6 E3F0 D0C8 0024          000000C8   5968          STG   15,200(0,13)
000040EC 4110 D0B0               000000B0   5969          LA    1,176(0,13)
000040F0 E3F0 C0B0 0004          00003FD8   5970          LG    15,@lit_984_378 ; __assert
000040F6                                    5971 @@gen_label364 DS    0H
000040F6 05EF                               5972          BALR  14,15
000040F8                                    5973 @@gen_label365 DS    0H
000040F8                                    5974 @L256    DS    0H
000040F8                                    5975 @L254    DS    0H
000040F8 A7F9 0001               00000001   5976          LGHI  15,1        ; 1
000040FC 47F0 C36A               00004292   5977          B     @ret_lab_984
00004100                                    5978 @L253    DS    0H
                                            5979 * ***           }
00004100 A72B 0001               00000001   5980          AGHI  2,1
00004104                                    5981 @L247    DS    0H
00004104 C22C 000F 4240                     5982          CGFI  2,X'000F4240'
0000410A 4740 C0D0               00003FF8   5983          BL    @L246
                                            5984 * ***
                                            5985 * ***           rd_hdr_histogram_reset(hdr);
0000410E E330 D0B0 0024          000000B0   5986          STG   3,176(0,13)
00004114 4110 D0B0               000000B0   5987          LA    1,176(0,13)
00004118 E3F0 C0B8 0004          00003FE0   5988          LG    15,@lit_984_380 ; rd_hdr_histogram_reset
0000411E                                    5989 @@gen_label367 DS    0H
0000411E 05EF                               5990          BALR  14,15
00004120                                    5991 @@gen_label368 DS    0H
                                            5992 * ***
                                            5993 * ***           v = rd_hdr_histogram_max(hdr);
00004120 E330 D0B0 0024          000000B0   5994          STG   3,176(0,13)
                                                                                                                           Page  121 
  Active Usings: @REGION_984_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004126 4110 D0B0               000000B0   5995          LA    1,176(0,13)
0000412A E3F0 C0C0 0004          00003FE8   5996          LG    15,@lit_984_381 ; rd_hdr_histogram_max
00004130                                    5997 @@gen_label369 DS    0H
00004130 05EF                               5998          BALR  14,15
00004132                                    5999 @@gen_label370 DS    0H
00004132 B904 002F                          6000          LGR   2,15
                                            6001 * ***           do { if (!(v == exp)) { fprintf(__stderrp, "\033[31mRD\
                                            6002 * UT: FAIL: %s:%d: %s: " "assert failed: " "v == exp" ": ", "C:\\asgka\
                                            6003 * fka\\librdkafka\\src\\rdhdrhistogram.c", 613, __FUNCTION__); fprintf\
                                            6004 * (__stderrp, "Max is %" "lld" ", expected %" "lld", v, exp); fprintf(\
                                            6005 * __stderrp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((v == e\
                                            6006 * xp) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\r\
                                            6007 * dhdrhistogram.c", 613, "v == exp")); return 1; } } while (0);
00004136                                    6008 @L257    DS    0H
00004136 B920 0024                          6009          CGR   2,4
0000413A 4780 C306               0000422E   6010          BE    @L260
0000413E E330 C0A8 0016          00003FD0   6011          LLGF  3,@lit_984_369 ; __stderrp
00004144 E3F3 6000 0004          00000000   6012          LG    15,0(3,6)   ; __stderrp
0000414A E3F0 D0B0 0024          000000B0   6013          STG   15,176(0,13)
00004150 E350 C0A0 0004          00003FC8   6014          LG    5,@lit_984_370
00004156 41F0 5022               00000022   6015          LA    15,34(0,5)
0000415A E3F0 D0B8 0024          000000B8   6016          STG   15,184(0,13)
00004160 41F0 5058               00000058   6017          LA    15,88(0,5)
00004164 E3F0 D0C0 0024          000000C0   6018          STG   15,192(0,13)
0000416A E548 D0C8 0265          000000C8   6019          MVGHI 200(13),613
00004170 E370 C098 0004          00003FC0   6020          LG    7,@lit_984_371
00004176 41F0 7092               00000092   6021          LA    15,146(0,7)
0000417A E3F0 D0D0 0024          000000D0   6022          STG   15,208(0,13)
00004180 4110 D0B0               000000B0   6023          LA    1,176(0,13)
00004184 E380 C090 0004          00003FB8   6024          LG    8,@lit_984_372 ; fprintf
0000418A B904 00F8                          6025          LGR   15,8
0000418E                                    6026 @@gen_label372 DS    0H
0000418E 05EF                               6027          BALR  14,15
00004190                                    6028 @@gen_label373 DS    0H
00004190 E3F3 6000 0004          00000000   6029          LG    15,0(3,6)   ; __stderrp
00004196 E3F0 D0B0 0024          000000B0   6030          STG   15,176(0,13)
0000419C 41F0 5308               00000308   6031          LA    15,776(0,5)
000041A0 E3F0 D0B8 0024          000000B8   6032          STG   15,184(0,13)
000041A6 E320 D0C0 0024          000000C0   6033          STG   2,192(0,13)
000041AC E340 D0C8 0024          000000C8   6034          STG   4,200(0,13)
000041B2 4110 D0B0               000000B0   6035          LA    1,176(0,13)
000041B6 B904 00F8                          6036          LGR   15,8
000041BA                                    6037 @@gen_label374 DS    0H
000041BA 05EF                               6038          BALR  14,15
000041BC                                    6039 @@gen_label375 DS    0H
000041BC E3F3 6000 0004          00000000   6040          LG    15,0(3,6)   ; __stderrp
000041C2 E3F0 D0B0 0024          000000B0   6041          STG   15,176(0,13)
000041C8 41F0 50A2               000000A2   6042          LA    15,162(0,5)
000041CC E3F0 D0B8 0024          000000B8   6043          STG   15,184(0,13)
000041D2 4110 D0B0               000000B0   6044          LA    1,176(0,13)
000041D6 B904 00F8                          6045          LGR   15,8
000041DA                                    6046 @@gen_label376 DS    0H
                                                                                                                           Page  122 
  Active Usings: @REGION_984_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000041DA 05EF                               6047          BALR  14,15
000041DC                                    6048 @@gen_label377 DS    0H
000041DC E3F0 C0AC 0016          00003FD4   6049          LLGF  15,@lit_984_377 ; rd_unittest_assert_on_failure
000041E2 41FF 6000               00000000   6050          LA    15,0(15,6)
000041E6 9500 F000      00000000 00000000   6051          CLI   0(15),0
000041EA 4780 C2FE               00004226   6052          BE    @L261
000041EE B920 0024                          6053          CGR   2,4
000041F2 4780 C2FE               00004226   6054          BE    @L261
000041F6                                    6055 @L262    DS    0H
000041F6 41F0 7092               00000092   6056          LA    15,146(0,7)
000041FA E3F0 D0B0 0024          000000B0   6057          STG   15,176(0,13)
00004200 41F0 5058               00000058   6058          LA    15,88(0,5)
00004204 E3F0 D0B8 0024          000000B8   6059          STG   15,184(0,13)
0000420A E548 D0C0 0265          000000C0   6060          MVGHI 192(13),613
00004210 41F0 50A8               000000A8   6061          LA    15,168(0,5)
00004214 E3F0 D0C8 0024          000000C8   6062          STG   15,200(0,13)
0000421A 4110 D0B0               000000B0   6063          LA    1,176(0,13)
0000421E E3F0 C0B0 0004          00003FD8   6064          LG    15,@lit_984_378 ; __assert
00004224                                    6065 @@gen_label380 DS    0H
00004224 05EF                               6066          BALR  14,15
00004226                                    6067 @@gen_label381 DS    0H
00004226                                    6068 @L263    DS    0H
00004226                                    6069 @L261    DS    0H
00004226 A7F9 0001               00000001   6070          LGHI  15,1        ; 1
0000422A 47F0 C36A               00004292   6071          B     @ret_lab_984
0000422E                                    6072 @L260    DS    0H
                                            6073 * ***
                                            6074 * ***
                                            6075 * ***           rd_hdr_histogram_destroy(hdr);
0000422E E330 D0B0 0024          000000B0   6076          STG   3,176(0,13)
00004234 4110 D0B0               000000B0   6077          LA    1,176(0,13)
00004238 E3F0 C0C8 0004          00003FF0   6078          LG    15,@lit_984_393 ; rd_hdr_histogram_destroy
0000423E                                    6079 @@gen_label382 DS    0H
0000423E 05EF                               6080          BALR  14,15
00004240                                    6081 @@gen_label383 DS    0H
                                            6082 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                            6083 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 617, \
                                            6084 * __FUNCTION__); return 0; } while (0);
00004240                                    6085 @L264    DS    0H
00004240 E3F0 C0A8 0016          00003FD0   6086          LLGF  15,@lit_984_369 ; __stderrp
00004246 E3FF 6000 0004          00000000   6087          LG    15,0(15,6)  ; __stderrp
0000424C E3F0 D0B0 0024          000000B0   6088          STG   15,176(0,13)
00004252 E3F0 C0A0 0004          00003FC8   6089          LG    15,@lit_984_370
00004258 4110 F0B2               000000B2   6090          LA    1,178(0,15)
0000425C E310 D0B8 0024          000000B8   6091          STG   1,184(0,13)
00004262 41F0 F058               00000058   6092          LA    15,88(0,15)
00004266 E3F0 D0C0 0024          000000C0   6093          STG   15,192(0,13)
0000426C E548 D0C8 0269          000000C8   6094          MVGHI 200(13),617
00004272 E3F0 C098 0004          00003FC0   6095          LG    15,@lit_984_371
00004278 41F0 F092               00000092   6096          LA    15,146(0,15)
0000427C E3F0 D0D0 0024          000000D0   6097          STG   15,208(0,13)
00004282 4110 D0B0               000000B0   6098          LA    1,176(0,13)
                                                                                                                           Page  123 
  Active Usings: @REGION_984_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004286 E3F0 C090 0004          00003FB8   6099          LG    15,@lit_984_372 ; fprintf
0000428C                                    6100 @@gen_label384 DS    0H
0000428C 05EF                               6101          BALR  14,15
0000428E                                    6102 @@gen_label385 DS    0H
0000428E A7F9 0000               00000000   6103          LGHI  15,0        ; 0
                                            6104 * ***   }
00004292                                    6105 @ret_lab_984 DS 0H
                                            6106 * * **** Start of Epilogue
                                            6107          DCCEPIL
00004292                                    6108+         ds 0h                                                          01-DCCEP
                                            6109+* Epilog
00004292 D707 D088 D088 00000088 00000088   6110+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004298 E3D0 D080 0004          00000080   6111+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000429E E3C0 D090 0004          00000090   6112+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000042A4 E3B0 C018 0004          00000018   6113+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000042AA E3C0 B010 0021          00000010   6114+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000042B0 E3E0 D008 0004          00000008   6115+         lg  14,8(0,13)          load up return address                 01-DCCEP
000042B6 EB1C D020 0004          00000020   6116+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000042BC 078E                               6117+         bcr 8,14                if same dsab, just return              01-DCCEP
000042BE E3F0 D010 0024          00000010   6118+         stg 15,16(0,13)         save return code                       01-DCCEP
000042C4 E300 D018 0024          00000018   6119+         stg 0,24(0,13)          save more return code                  01-DCCEP
000042CA E3F0 D090 0004          00000090   6120+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000042D0 E3F0 F018 0004          00000018   6121+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000042D6 47F0 F040               00000040   6122+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6123+* End of Epilog
                                            6124 * * **** End of Epilogue
                                            6125          DROP  12
                                            6126 *
                                            6127 *   DSECT for automatic variables in "ut_reset"
                                            6128 *      (FUNCTION #984)
                                            6129 *
00000000                00000000 000000B0   6130 @AUTO#ut_reset DSECT
00000000                                    6131          DS    XL168
000000A8                                    6132 ut_reset#r#1 DS 1F         ; r
000000AC                000000AC 000000A8   6133          ORG   @AUTO#ut_reset+168
000000A8                                    6134 ut_reset#exp#0 DS 8XL1     ; exp
000000B0                000000B0 000000A8   6135          ORG   @AUTO#ut_reset+168
000000A8                                    6136 ut_reset#v#0 DS 8XL1       ; v
000000B0                000000B0 000000A8   6137          ORG   @AUTO#ut_reset+168
000000A8                                    6138 ut_reset#i#0 DS 8XL1       ; i
                                            6139 *
000042DA                00000000 000056F0   6140 @CODE    CSECT
                                            6141 *
                                            6142 *
                                            6143 *
                                            6144 * ....... start of ut_nan
000042DA                                    6145 @LNAME985 DS   0H
000042DA 00000006                           6146          DC    X'00000006'
000042DE A4A36D958195                       6147          DC    C'ut_nan'
000042E4 00                                 6148          DC    X'00'
                                            6149 ut_nan   DCCPRLG CINDEX=985,BASER=12,FRAME=224,ENTRY=NO,ARCH=ZARCH,LNAM*
                                                                EADDR=@LNAME985
                                                                                                                           Page  124 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            6150          macro
                                            6151          dccextrn &m
                                            6152          gblc    &$dccext(1000)
                                            6153          gbla    &$dccexti
                                            6154          lcla    &i
                                            6155 &$dccext(&$dccexti+1) setc    '&m'
                                            6156 &i       seta    1
                                            6157 .loop    aif    (&i gt &$dccexti).around
                                            6158          aif    ('&$dccext(&i)' eq '&m').getout
                                            6159 &i       seta    &i+1
                                            6160          ago     .loop
                                            6161 .around  anop
                                            6162 &$dccexti seta &$dccexti+1
                                            6163          extrn  &m
                                            6164 .getout  anop
                                            6165          mend
000042E8                                    6166+$eye0109    ds    0d                                                    02-DCCCA
000042E8 C4C3C3                             6167+         dc cl3'DCC'                                                    02-DCCCA
000042EB 01                                 6168+         dc xl1'01' format one                                          02-DCCCA
000042EC 00000000                           6169+         dc a(0)                                                        02-DCCCA
000042F0 000000000000435A                   6170+         dc ad(@PER_985)                                                02-DCCCA
000042F8 00000000000000E0                   6171+         dc ad(224)                                                     02-DCCCA
00004300 0000000000000000                   6172+         dc ad(0)                                                       02-DCCCA
00004308 0000000000001000                   6173+         dc ad(4096)                                                    02-DCCCA
00004310 20                                 6174+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004311 03                                 6175+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004312 03                                 6176+         dc al1(3)                                                      02-DCCCA
00004313 08                                 6177+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004314 00                                 6178+         dc bl.8'00000000'                                              02-DCCCA
00004315 000000                             6179+         dc al3(0)                                                      02-DCCCA
00004318 00000000000042DA                   6180+         dc ad(@LNAME985)                                               02-DCCCA
00004320                                    6181+         ds 0d                                                          02-DCCCA
00004320 00000000000042E8                   6182+         dc ad($eye0109)                                                02-DCCCA
00004328 0000000000000000                   6183+         dc ad(0)                                                       02-DCCCA
00004330                                    6184+         ds    0d                                                       01-DCCPR
00004330                                    6185+ut_nan   ds    0d                                                       01-DCCPR
00004330                                    6186+@REGION_985_1 ds 0h                                                     01-DCCPR
00004330 EBEC D008 0024          00000008   6187+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004336 E3E0 D088 0004          00000088   6188+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000433C E3C0 D090 0004          00000090   6189+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004342 B904 002E                          6190+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004346 E3B0 C018 0004          00000018   6191+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000434C A7EB 00E0               000000E0   6192+         aghi  14,224              increase by frame size               01-DCCPR
00004350 E3E0 C020 0021          00000020   6193+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004356 4720 B020               00000020   6194+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000435A                                    6195+@PER_985 ds    0h                                                       01-DCCPR
0000435A EBDE 2080 0024          00000080   6196+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004360 E3C0 2090 0024          00000090   6197+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004366 B904 00D2                          6198+         lgr   13,2                set real frame pointer               01-DCCPR
0000436A B904 00CF                          6199+         lgr   12,15               set base reg                         01-DCCPR
                        00004330            6200+         using @REGION_985_1,12                                         01-DCCPR
                                            6201          DCCPRV REG=3      ; Get PRV from DVT
                                                                                                                           Page  125 
  Active Usings: @REGION_985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000436E E330 B008 0004          00000008   6202+         LG 3,8(0,11)                                                   01-DCCPR
                                            6203 * ******* End of Prologue
                                            6204 * *
                                            6205 * ***           rd_hdr_histogram_t *hdr = rd_hdr_histogram_new(1, 1000\
                                            6206 * 00, 3);
00004374 E548 D0B0 0001          000000B0   6207          MVGHI 176(13),1
0000437A C0FF 0001 86A0                     6208          LLILF 15,X'000186A0' ; 100000
00004380 E3F0 D0B8 0024          000000B8   6209          STG   15,184(0,13)
00004386 E548 D0C0 0003          000000C0   6210          MVGHI 192(13),3
0000438C 4110 D0B0               000000B0   6211          LA    1,176(0,13)
00004390 E3F0 C188 0004          000044B8   6212          LG    15,@lit_985_401 ; rd_hdr_histogram_new
00004396                                    6213 @@gen_label386 DS    0H
00004396 05EF                               6214          BALR  14,15
00004398                                    6215 @@gen_label387 DS    0H
00004398 B904 002F                          6216          LGR   2,15
                                            6217 * ***           double v;
                                            6218 * ***
                                            6219 * ***           v = rd_hdr_histogram_mean(hdr);
0000439C E320 D0B0 0024          000000B0   6220          STG   2,176(0,13)
000043A2 4110 D0B0               000000B0   6221          LA    1,176(0,13)
000043A6 E3F0 C190 0004          000044C0   6222          LG    15,@lit_985_402 ; rd_hdr_histogram_mean
000043AC                                    6223 @@gen_label388 DS    0H
000043AC 05EF                               6224          BALR  14,15
000043AE                                    6225 @@gen_label389 DS    0H
000043AE 6000 D0D8               000000D8   6226          STD   0,216(0,13) ; spill
                                            6227 * ***           do { if (!(!((0) ? (((sizeof (v) == sizeof (float)) ? \
                                            6228 * __builtin_isnand32(v) : (sizeof (v) == sizeof (double)) ? __builtin_\
                                            6229 * isnand64(v) : __builtin_isnand128(v))) : (((sizeof (v) == sizeof (fl\
                                            6230 * oat)) ? __builtin_isnanf(v) : (sizeof (v) == sizeof (double)) ? __bu\
                                            6231 * iltin_isnan(v) : __builtin_isnanl(v)))))) { fprintf(__stderrp, "\033\
                                            6232 * [31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "!isnan(v)" ": ", "C:\
                                            6233 * \\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 626, __FUNCTION__); \
                                            6234 * fprintf(__stderrp, "Mean is %f, expected NaN", v); fprintf(__stderrp\
                                            6235 * , "\033[0m\n"); if (rd_unittest_assert_on_failure) ((!((0) ? (((size\
                                            6236 * of (v) == sizeof (float)) ? __builtin_isnand32(v) : (sizeof (v) == s\
                                            6237 * izeof (double)) ? __builtin_isnand64(v) : __builtin_isnand128(v))) :\
                                            6238 *  (((sizeof (v) == sizeof (float)) ? __builtin_isnanf(v) : (sizeof (v\
                                            6239 * ) == sizeof (double)) ? __builtin_isnan(v) : __builtin_isnanl(v)))))\
                                            6240 *  ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdhd\
                                            6241 * rhistogram.c", 626, "!((0) ? (((sizeof (v) == sizeof (float)) ? __bu\
                                            6242 * iltin_isnand32(v) : (sizeof (v) == sizeof (double)) ? __builtin_isna\
                                            6243 * nd64(v) : __builtin_isnand128(v))) : (((sizeof (v) == sizeof (float)\
                                            6244 * ) ? __builtin_isnanf(v) : (sizeof (v) == sizeof (double)) ? __builti\
                                            6245 * n_isnan(v) : __builtin_isnanl(v))))")); return 1; } } while (0);
000043B2                                    6246 @L267    DS    0H
000043B2 A7F8 0000               00000000   6247          LHI   15,0
000043B6 12FF                               6248          LTR   15,15
000043B8 4780 C1D0               00004500   6249          BZ    @L270
000043BC E320 C1B0 0016          000044E0   6250          LLGF  2,@lit_985_403 ; __stderrp
000043C2 E3F2 3000 0004          00000000   6251          LG    15,0(2,3)   ; __stderrp
000043C8 E3F0 D0B0 0024          000000B0   6252          STG   15,176(0,13)
000043CE E340 C1A8 0004          000044D8   6253          LG    4,@lit_985_404
                                                                                                                           Page  126 
  Active Usings: @REGION_985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000043D4 41F0 4340               00000340   6254          LA    15,832(0,4)
000043D8 E3F0 D0B8 0024          000000B8   6255          STG   15,184(0,13)
000043DE 41F0 4058               00000058   6256          LA    15,88(0,4)
000043E2 E3F0 D0C0 0024          000000C0   6257          STG   15,192(0,13)
000043E8 E548 D0C8 0272          000000C8   6258          MVGHI 200(13),626
000043EE E350 C1A0 0004          000044D0   6259          LG    5,@lit_985_405
000043F4 41F0 509C               0000009C   6260          LA    15,156(0,5)
000043F8 E3F0 D0D0 0024          000000D0   6261          STG   15,208(0,13)
000043FE 4110 D0B0               000000B0   6262          LA    1,176(0,13)
00004402 E360 C198 0004          000044C8   6263          LG    6,@lit_985_406 ; fprintf
00004408 B904 00F6                          6264          LGR   15,6
0000440C                                    6265 @@gen_label391 DS    0H
0000440C 05EF                               6266          BALR  14,15
0000440E                                    6267 @@gen_label392 DS    0H
0000440E E3F2 3000 0004          00000000   6268          LG    15,0(2,3)   ; __stderrp
00004414 E3F0 D0B0 0024          000000B0   6269          STG   15,176(0,13)
0000441A 41F0 4378               00000378   6270          LA    15,888(0,4)
0000441E E3F0 D0B8 0024          000000B8   6271          STG   15,184(0,13)
00004424 6800 D0D8               000000D8   6272          LD    0,216(0,13) ; spill
00004428 6000 D0C0               000000C0   6273          STD   0,192(0,13)
0000442C 4110 D0B0               000000B0   6274          LA    1,176(0,13)
00004430 B904 00F6                          6275          LGR   15,6
00004434                                    6276 @@gen_label393 DS    0H
00004434 05EF                               6277          BALR  14,15
00004436                                    6278 @@gen_label394 DS    0H
00004436 E3F2 3000 0004          00000000   6279          LG    15,0(2,3)   ; __stderrp
0000443C E3F0 D0B0 0024          000000B0   6280          STG   15,176(0,13)
00004442 41F0 40A2               000000A2   6281          LA    15,162(0,4)
00004446 E3F0 D0B8 0024          000000B8   6282          STG   15,184(0,13)
0000444C 4110 D0B0               000000B0   6283          LA    1,176(0,13)
00004450 B904 00F6                          6284          LGR   15,6
00004454                                    6285 @@gen_label395 DS    0H
00004454 05EF                               6286          BALR  14,15
00004456                                    6287 @@gen_label396 DS    0H
00004456 E3F0 C1B4 0016          000044E4   6288          LLGF  15,@lit_985_411 ; rd_unittest_assert_on_failure
0000445C 41FF 3000               00000000   6289          LA    15,0(15,3)
00004460 9500 F000      00000000 00000000   6290          CLI   0(15),0
00004464 4780 C172               000044A2   6291          BE    @L271
00004468 A7F8 0000               00000000   6292          LHI   15,0
0000446C 12FF                               6293          LTR   15,15
0000446E 4780 C172               000044A2   6294          BZ    @L271
00004472                                    6295 @L272    DS    0H
00004472 41F0 509C               0000009C   6296          LA    15,156(0,5)
00004476 E3F0 D0B0 0024          000000B0   6297          STG   15,176(0,13)
0000447C 41F0 4058               00000058   6298          LA    15,88(0,4)
00004480 E3F0 D0B8 0024          000000B8   6299          STG   15,184(0,13)
00004486 E548 D0C0 0272          000000C0   6300          MVGHI 192(13),626
0000448C 41F0 4392               00000392   6301          LA    15,914(0,4)
00004490 E3F0 D0C8 0024          000000C8   6302          STG   15,200(0,13)
00004496 4110 D0B0               000000B0   6303          LA    1,176(0,13)
0000449A E3F0 C1B8 0004          000044E8   6304          LG    15,@lit_985_412 ; __assert
000044A0                                    6305 @@gen_label399 DS    0H
                                                                                                                           Page  127 
  Active Usings: @REGION_985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000044A0 05EF                               6306          BALR  14,15
000044A2                                    6307 @@gen_label400 DS    0H
000044A2                                    6308 @L273    DS    0H
000044A2                                    6309 @L271    DS    0H
000044A2 A7F9 0001               00000001   6310          LGHI  15,1        ; 1
000044A6 47F0 C342               00004672   6311          B     @ret_lab_985
000044B0                                    6312          DS    0D
000044B0 000000E0                           6313 @FRAMESIZE_985 DC F'224'
000044B4 00000000
000044B8 0000000000000488                   6314 @lit_985_401 DC AD(rd_hdr_histogram_new)
000044C0 0000000000001D18                   6315 @lit_985_402 DC AD(rd_hdr_histogram_mean)
000044C8 0000000000000000                   6316 @lit_985_406 DC AD(fprintf)
000044D0 00000000000056F0                   6317 @lit_985_405 DC AD(@DATA)
000044D8 00000000000057E8                   6318 @lit_985_404 DC AD(@strings@)
000044E0 00000000                           6319 @lit_985_403 DC Q(__stderrp)
000044E4 00000000                           6320 @lit_985_411 DC Q(rd_unittest_assert_on_failure)
000044E8 0000000000000000                   6321 @lit_985_412 DC AD(__assert)
000044F0 0000000000001830                   6322 @lit_985_414 DC AD(rd_hdr_histogram_stddev)
000044F8 0000000000000370                   6323 @lit_985_426 DC AD(rd_hdr_histogram_destroy)
00004500                                    6324 @L270    DS    0H
                                            6325 * ***           v = rd_hdr_histogram_stddev(hdr);
00004500 E320 D0B0 0024          000000B0   6326          STG   2,176(0,13)
00004506 4110 D0B0               000000B0   6327          LA    1,176(0,13)
0000450A E3F0 C1C0 0004          000044F0   6328          LG    15,@lit_985_414 ; rd_hdr_histogram_stddev
00004510                                    6329 @@gen_label401 DS    0H
00004510 05EF                               6330          BALR  14,15
00004512                                    6331 @@gen_label402 DS    0H
00004512 6000 D0D8               000000D8   6332          STD   0,216(0,13) ; spill
                                            6333 * ***           do { if (!(!((0) ? (((sizeof (v) == sizeof (float)) ? \
                                            6334 * __builtin_isnand32(v) : (sizeof (v) == sizeof (double)) ? __builtin_\
                                            6335 * isnand64(v) : __builtin_isnand128(v))) : (((sizeof (v) == sizeof (fl\
                                            6336 * oat)) ? __builtin_isnanf(v) : (sizeof (v) == sizeof (double)) ? __bu\
                                            6337 * iltin_isnan(v) : __builtin_isnanl(v)))))) { fprintf(__stderrp, "\033\
                                            6338 * [31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "!isnan(v)" ": ", "C:\
                                            6339 * \\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 628, __FUNCTION__); \
                                            6340 * fprintf(__stderrp, "StdDev is %f, expected NaN", v); fprintf(__stder\
                                            6341 * rp, "\033[0m\n"); if (rd_unittest_assert_on_failure) ((!((0) ? (((si\
                                            6342 * zeof (v) == sizeof (float)) ? __builtin_isnand32(v) : (sizeof (v) ==\
                                            6343 *  sizeof (double)) ? __builtin_isnand64(v) : __builtin_isnand128(v)))\
                                            6344 *  : (((sizeof (v) == sizeof (float)) ? __builtin_isnanf(v) : (sizeof \
                                            6345 * (v) == sizeof (double)) ? __builtin_isnan(v) : __builtin_isnanl(v)))\
                                            6346 * )) ? (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rd\
                                            6347 * hdrhistogram.c", 628, "!((0) ? (((sizeof (v) == sizeof (float)) ? __\
                                            6348 * builtin_isnand32(v) : (sizeof (v) == sizeof (double)) ? __builtin_is\
                                            6349 * nand64(v) : __builtin_isnand128(v))) : (((sizeof (v) == sizeof (floa\
                                            6350 * t)) ? __builtin_isnanf(v) : (sizeof (v) == sizeof (double)) ? __buil\
                                            6351 * tin_isnan(v) : __builtin_isnanl(v))))")); return 1; } } while (0);
00004516                                    6352 @L274    DS    0H
00004516 A7F8 0000               00000000   6353          LHI   15,0
0000451A 12FF                               6354          LTR   15,15
0000451C 4780 C2DE               0000460E   6355          BZ    @L277
00004520 E320 C1B0 0016          000044E0   6356          LLGF  2,@lit_985_403 ; __stderrp
                                                                                                                           Page  128 
  Active Usings: @REGION_985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004526 E3F2 3000 0004          00000000   6357          LG    15,0(2,3)   ; __stderrp
0000452C E3F0 D0B0 0024          000000B0   6358          STG   15,176(0,13)
00004532 E340 C1A8 0004          000044D8   6359          LG    4,@lit_985_404
00004538 41F0 4340               00000340   6360          LA    15,832(0,4)
0000453C E3F0 D0B8 0024          000000B8   6361          STG   15,184(0,13)
00004542 41F0 4058               00000058   6362          LA    15,88(0,4)
00004546 E3F0 D0C0 0024          000000C0   6363          STG   15,192(0,13)
0000454C E548 D0C8 0274          000000C8   6364          MVGHI 200(13),628
00004552 E350 C1A0 0004          000044D0   6365          LG    5,@lit_985_405
00004558 41F0 509C               0000009C   6366          LA    15,156(0,5)
0000455C E3F0 D0D0 0024          000000D0   6367          STG   15,208(0,13)
00004562 4110 D0B0               000000B0   6368          LA    1,176(0,13)
00004566 E360 C198 0004          000044C8   6369          LG    6,@lit_985_406 ; fprintf
0000456C B904 00F6                          6370          LGR   15,6
00004570                                    6371 @@gen_label404 DS    0H
00004570 05EF                               6372          BALR  14,15
00004572                                    6373 @@gen_label405 DS    0H
00004572 E3F2 3000 0004          00000000   6374          LG    15,0(2,3)   ; __stderrp
00004578 E3F0 D0B0 0024          000000B0   6375          STG   15,176(0,13)
0000457E 41F0 44B2               000004B2   6376          LA    15,1202(0,4)
00004582 E3F0 D0B8 0024          000000B8   6377          STG   15,184(0,13)
00004588 6800 D0D8               000000D8   6378          LD    0,216(0,13) ; spill
0000458C 6000 D0C0               000000C0   6379          STD   0,192(0,13)
00004590 4110 D0B0               000000B0   6380          LA    1,176(0,13)
00004594 B904 00F6                          6381          LGR   15,6
00004598                                    6382 @@gen_label406 DS    0H
00004598 05EF                               6383          BALR  14,15
0000459A                                    6384 @@gen_label407 DS    0H
0000459A E3F2 3000 0004          00000000   6385          LG    15,0(2,3)   ; __stderrp
000045A0 E3F0 D0B0 0024          000000B0   6386          STG   15,176(0,13)
000045A6 41F0 40A2               000000A2   6387          LA    15,162(0,4)
000045AA E3F0 D0B8 0024          000000B8   6388          STG   15,184(0,13)
000045B0 4110 D0B0               000000B0   6389          LA    1,176(0,13)
000045B4 B904 00F6                          6390          LGR   15,6
000045B8                                    6391 @@gen_label408 DS    0H
000045B8 05EF                               6392          BALR  14,15
000045BA                                    6393 @@gen_label409 DS    0H
000045BA E3F0 C1B4 0016          000044E4   6394          LLGF  15,@lit_985_411 ; rd_unittest_assert_on_failure
000045C0 41FF 3000               00000000   6395          LA    15,0(15,3)
000045C4 9500 F000      00000000 00000000   6396          CLI   0(15),0
000045C8 4780 C2D6               00004606   6397          BE    @L278
000045CC A7F8 0000               00000000   6398          LHI   15,0
000045D0 12FF                               6399          LTR   15,15
000045D2 4780 C2D6               00004606   6400          BZ    @L278
000045D6                                    6401 @L279    DS    0H
000045D6 41F0 509C               0000009C   6402          LA    15,156(0,5)
000045DA E3F0 D0B0 0024          000000B0   6403          STG   15,176(0,13)
000045E0 41F0 4058               00000058   6404          LA    15,88(0,4)
000045E4 E3F0 D0B8 0024          000000B8   6405          STG   15,184(0,13)
000045EA E548 D0C0 0274          000000C0   6406          MVGHI 192(13),628
000045F0 41F0 4392               00000392   6407          LA    15,914(0,4)
000045F4 E3F0 D0C8 0024          000000C8   6408          STG   15,200(0,13)
                                                                                                                           Page  129 
  Active Usings: @REGION_985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000045FA 4110 D0B0               000000B0   6409          LA    1,176(0,13)
000045FE E3F0 C1B8 0004          000044E8   6410          LG    15,@lit_985_412 ; __assert
00004604                                    6411 @@gen_label412 DS    0H
00004604 05EF                               6412          BALR  14,15
00004606                                    6413 @@gen_label413 DS    0H
00004606                                    6414 @L280    DS    0H
00004606                                    6415 @L278    DS    0H
00004606 A7F9 0001               00000001   6416          LGHI  15,1        ; 1
0000460A 47F0 C342               00004672   6417          B     @ret_lab_985
0000460E                                    6418 @L277    DS    0H
                                            6419 * ***
                                            6420 * ***           rd_hdr_histogram_destroy(hdr);
0000460E E320 D0B0 0024          000000B0   6421          STG   2,176(0,13)
00004614 4110 D0B0               000000B0   6422          LA    1,176(0,13)
00004618 E3F0 C1C8 0004          000044F8   6423          LG    15,@lit_985_426 ; rd_hdr_histogram_destroy
0000461E                                    6424 @@gen_label414 DS    0H
0000461E 05EF                               6425          BALR  14,15
00004620                                    6426 @@gen_label415 DS    0H
                                            6427 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                            6428 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 631, \
                                            6429 * __FUNCTION__); return 0; } while (0);
00004620                                    6430 @L281    DS    0H
00004620 E3F0 C1B0 0016          000044E0   6431          LLGF  15,@lit_985_403 ; __stderrp
00004626 E3FF 3000 0004          00000000   6432          LG    15,0(15,3)  ; __stderrp
0000462C E3F0 D0B0 0024          000000B0   6433          STG   15,176(0,13)
00004632 E3F0 C1A8 0004          000044D8   6434          LG    15,@lit_985_404
00004638 4110 F0B2               000000B2   6435          LA    1,178(0,15)
0000463C E310 D0B8 0024          000000B8   6436          STG   1,184(0,13)
00004642 41F0 F058               00000058   6437          LA    15,88(0,15)
00004646 E3F0 D0C0 0024          000000C0   6438          STG   15,192(0,13)
0000464C E548 D0C8 0277          000000C8   6439          MVGHI 200(13),631
00004652 E3F0 C1A0 0004          000044D0   6440          LG    15,@lit_985_405
00004658 41F0 F09C               0000009C   6441          LA    15,156(0,15)
0000465C E3F0 D0D0 0024          000000D0   6442          STG   15,208(0,13)
00004662 4110 D0B0               000000B0   6443          LA    1,176(0,13)
00004666 E3F0 C198 0004          000044C8   6444          LG    15,@lit_985_406 ; fprintf
0000466C                                    6445 @@gen_label416 DS    0H
0000466C 05EF                               6446          BALR  14,15
0000466E                                    6447 @@gen_label417 DS    0H
0000466E A7F9 0000               00000000   6448          LGHI  15,0        ; 0
                                            6449 * ***   }
00004672                                    6450 @ret_lab_985 DS 0H
                                            6451 * * **** Start of Epilogue
                                            6452          DCCEPIL
00004672                                    6453+         ds 0h                                                          01-DCCEP
                                            6454+* Epilog
00004672 D707 D088 D088 00000088 00000088   6455+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004678 E3D0 D080 0004          00000080   6456+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
0000467E E3C0 D090 0004          00000090   6457+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004684 E3B0 C018 0004          00000018   6458+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
0000468A E3C0 B010 0021          00000010   6459+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004690 E3E0 D008 0004          00000008   6460+         lg  14,8(0,13)          load up return address                 01-DCCEP
                                                                                                                           Page  130 
  Active Usings: @REGION_985_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004696 EB1C D020 0004          00000020   6461+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
0000469C 078E                               6462+         bcr 8,14                if same dsab, just return              01-DCCEP
0000469E E3F0 D010 0024          00000010   6463+         stg 15,16(0,13)         save return code                       01-DCCEP
000046A4 E300 D018 0024          00000018   6464+         stg 0,24(0,13)          save more return code                  01-DCCEP
000046AA E3F0 D090 0004          00000090   6465+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
000046B0 E3F0 F018 0004          00000018   6466+         lg  15,24(0,15)         load dvt address                       01-DCCEP
000046B6 47F0 F040               00000040   6467+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6468+* End of Epilog
                                            6469 * * **** End of Epilogue
                                            6470          DROP  12
                                            6471 *
                                            6472 *   DSECT for automatic variables in "ut_nan"
                                            6473 *      (FUNCTION #985)
                                            6474 *
00000000                00000000 000000B0   6475 @AUTO#ut_nan DSECT
00000000                                    6476          DS    XL168
000000A8                                    6477 ut_nan#v#0 DS  1D          ; v
                                            6478 *
000046BA                00000000 000056F0   6479 @CODE    CSECT
                                            6480 *
                                            6481 *
                                            6482 *
                                            6483 * ....... start of ut_sigfigs
000046BA                                    6484 @LNAME986 DS   0H
000046BA 0000000A                           6485          DC    X'0000000A'
000046BE A4A36DA289878689                   6486          DC    C'ut_sigfigs'
000046C8 00                                 6487          DC    X'00'
                                            6488 ut_sigfigs DCCPRLG CINDEX=986,BASER=12,FRAME=216,ENTRY=NO,ARCH=ZARCH,LN*
                                                                AMEADDR=@LNAME986
                                            6489          macro
                                            6490          dccextrn &m
                                            6491          gblc    &$dccext(1000)
                                            6492          gbla    &$dccexti
                                            6493          lcla    &i
                                            6494 &$dccext(&$dccexti+1) setc    '&m'
                                            6495 &i       seta    1
                                            6496 .loop    aif    (&i gt &$dccexti).around
                                            6497          aif    ('&$dccext(&i)' eq '&m').getout
                                            6498 &i       seta    &i+1
                                            6499          ago     .loop
                                            6500 .around  anop
                                            6501 &$dccexti seta &$dccexti+1
                                            6502          extrn  &m
                                            6503 .getout  anop
                                            6504          mend
000046D0                                    6505+$eye0113    ds    0d                                                    02-DCCCA
000046D0 C4C3C3                             6506+         dc cl3'DCC'                                                    02-DCCCA
000046D3 01                                 6507+         dc xl1'01' format one                                          02-DCCCA
000046D4 00000000                           6508+         dc a(0)                                                        02-DCCCA
000046D8 0000000000004742                   6509+         dc ad(@PER_986)                                                02-DCCCA
000046E0 00000000000000D8                   6510+         dc ad(216)                                                     02-DCCCA
000046E8 0000000000000000                   6511+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  131 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000046F0 0000000000001000                   6512+         dc ad(4096)                                                    02-DCCCA
000046F8 20                                 6513+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000046F9 03                                 6514+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000046FA 03                                 6515+         dc al1(3)                                                      02-DCCCA
000046FB 08                                 6516+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000046FC 00                                 6517+         dc bl.8'00000000'                                              02-DCCCA
000046FD 000000                             6518+         dc al3(0)                                                      02-DCCCA
00004700 00000000000046BA                   6519+         dc ad(@LNAME986)                                               02-DCCCA
00004708                                    6520+         ds 0d                                                          02-DCCCA
00004708 00000000000046D0                   6521+         dc ad($eye0113)                                                02-DCCCA
00004710 0000000000000000                   6522+         dc ad(0)                                                       02-DCCCA
00004718                                    6523+         ds    0d                                                       01-DCCPR
00004718                                    6524+ut_sigfigs ds  0d                                                       01-DCCPR
00004718                                    6525+@REGION_986_1 ds 0h                                                     01-DCCPR
00004718 EBEC D008 0024          00000008   6526+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000471E E3E0 D088 0004          00000088   6527+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004724 E3C0 D090 0004          00000090   6528+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000472A B904 002E                          6529+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000472E E3B0 C018 0004          00000018   6530+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004734 A7EB 00D8               000000D8   6531+         aghi  14,216              increase by frame size               01-DCCPR
00004738 E3E0 C020 0021          00000020   6532+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
0000473E 4720 B020               00000020   6533+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004742                                    6534+@PER_986 ds    0h                                                       01-DCCPR
00004742 EBDE 2080 0024          00000080   6535+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004748 E3C0 2090 0024          00000090   6536+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
0000474E B904 00D2                          6537+         lgr   13,2                set real frame pointer               01-DCCPR
00004752 B904 00CF                          6538+         lgr   12,15               set base reg                         01-DCCPR
                        00004718            6539+         using @REGION_986_1,12                                         01-DCCPR
                                            6540          DCCPRV REG=4      ; Get PRV from DVT
00004756 E340 B008 0004          00000008   6541+         LG 4,8(0,11)                                                   01-DCCPR
                                            6542 * ******* End of Prologue
                                            6543 * *
                                            6544 * ***           int sigfigs;
                                            6545 * ***
                                            6546 * ***           for (sigfigs = 1 ; sigfigs <= 5 ; sigfigs++) {
0000475C A728 0001               00000001   6547          LHI   2,1         ; 1
00004760 47F0 C1DA               000048F2   6548          B     @L285
00004768                                    6549          DS    0D
00004768 000000D8                           6550 @FRAMESIZE_986 DC F'216'
0000476C 00000000
00004770 0000000000000488                   6551 @lit_986_434 DC AD(rd_hdr_histogram_new)
00004778 0000000000000000                   6552 @lit_986_438 DC AD(fprintf)
00004780 00000000000056F0                   6553 @lit_986_437 DC AD(@DATA)
00004788 00000000000057E8                   6554 @lit_986_436 DC AD(@strings@)
00004790 00000000                           6555 @lit_986_435 DC Q(__stderrp)
00004794 00000000                           6556 @lit_986_443 DC Q(rd_unittest_assert_on_failure)
00004798 0000000000000000                   6557 @lit_986_444 DC AD(__assert)
000047A0 0000000000000370                   6558 @lit_986_446 DC AD(rd_hdr_histogram_destroy)
000047A8                                    6559 @L284    DS    0H
                                            6560 * ***                   rd_hdr_histogram_t *hdr = rd_hdr_histogram_new\
                                            6561 * (1, 10, sigfigs);
000047A8 E548 D0B0 0001          000000B0   6562          MVGHI 176(13),1
                                                                                                                           Page  132 
  Active Usings: @REGION_986_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000047AE E548 D0B8 000A          000000B8   6563          MVGHI 184(13),10
000047B4 B914 00F2                          6564          LGFR  15,2
000047B8 E3F0 D0C0 0024          000000C0   6565          STG   15,192(0,13)
000047BE 4110 D0B0               000000B0   6566          LA    1,176(0,13)
000047C2 E3F0 C058 0004          00004770   6567          LG    15,@lit_986_434 ; rd_hdr_histogram_new
000047C8                                    6568 @@gen_label418 DS    0H
000047C8 05EF                               6569          BALR  14,15
000047CA                                    6570 @@gen_label419 DS    0H
000047CA B904 003F                          6571          LGR   3,15
                                            6572 * ***                   do { if (!(hdr->significantFigures == sigfigs)\
                                            6573 * ) { fprintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert fai\
                                            6574 * led: " "hdr->significantFigures == sigfigs" ": ", "C:\\asgkafka\\lib\
                                            6575 * rdkafka\\src\\rdhdrhistogram.c", 640, __FUNCTION__); fprintf(__stder\
                                            6576 * rp, "Significant figures is %" "lld" ", expected %d", hdr->significa\
                                            6577 * ntFigures, sigfigs); fprintf(__stderrp, "\033[0m\n"); if (rd_unittes\
                                            6578 * t_assert_on_failure) ((hdr->significantFigures == sigfigs) ? (void)0\
                                            6579 *  : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram\
                                            6580 * .c", 640, "hdr->significantFigures == sigfigs")); return 1; } } whil\
                                            6581 * e (0);
000047CE                                    6582 @L288    DS    0H
000047CE E3F0 3018 0004          00000018   6583          LG    15,24(0,3)  ; offset of significantFigures in rd_hdr_his*
                                                                togram_s
000047D4 B930 00F2                          6584          CGFR  15,2
000047D8 4780 C1C4               000048DC   6585          BE    @L291
000047DC E350 C078 0016          00004790   6586          LLGF  5,@lit_986_435 ; __stderrp
000047E2 E3F5 4000 0004          00000000   6587          LG    15,0(5,4)   ; __stderrp
000047E8 E3F0 D0B0 0024          000000B0   6588          STG   15,176(0,13)
000047EE E360 C070 0004          00004788   6589          LG    6,@lit_986_436
000047F4 41F0 64CE               000004CE   6590          LA    15,1230(0,6)
000047F8 E3F0 D0B8 0024          000000B8   6591          STG   15,184(0,13)
000047FE 41F0 6058               00000058   6592          LA    15,88(0,6)
00004802 E3F0 D0C0 0024          000000C0   6593          STG   15,192(0,13)
00004808 E548 D0C8 0280          000000C8   6594          MVGHI 200(13),640
0000480E E370 C068 0004          00004780   6595          LG    7,@lit_986_437
00004814 41F0 70A4               000000A4   6596          LA    15,164(0,7)
00004818 E3F0 D0D0 0024          000000D0   6597          STG   15,208(0,13)
0000481E 4110 D0B0               000000B0   6598          LA    1,176(0,13)
00004822 E380 C060 0004          00004778   6599          LG    8,@lit_986_438 ; fprintf
00004828 B904 00F8                          6600          LGR   15,8
0000482C                                    6601 @@gen_label421 DS    0H
0000482C 05EF                               6602          BALR  14,15
0000482E                                    6603 @@gen_label422 DS    0H
0000482E E3F5 4000 0004          00000000   6604          LG    15,0(5,4)   ; __stderrp
00004834 E3F0 D0B0 0024          000000B0   6605          STG   15,176(0,13)
0000483A 41F0 651E               0000051E   6606          LA    15,1310(0,6)
0000483E E3F0 D0B8 0024          000000B8   6607          STG   15,184(0,13)
00004844 E3F0 3018 0004          00000018   6608          LG    15,24(0,3)
0000484A E3F0 D0C0 0024          000000C0   6609          STG   15,192(0,13)
00004850 B914 00F2                          6610          LGFR  15,2
00004854 E3F0 D0C8 0024          000000C8   6611          STG   15,200(0,13)
0000485A 4110 D0B0               000000B0   6612          LA    1,176(0,13)
0000485E B904 00F8                          6613          LGR   15,8
                                                                                                                           Page  133 
  Active Usings: @REGION_986_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004862                                    6614 @@gen_label423 DS    0H
00004862 05EF                               6615          BALR  14,15
00004864                                    6616 @@gen_label424 DS    0H
00004864 E3F5 4000 0004          00000000   6617          LG    15,0(5,4)   ; __stderrp
0000486A E3F0 D0B0 0024          000000B0   6618          STG   15,176(0,13)
00004870 41F0 60A2               000000A2   6619          LA    15,162(0,6)
00004874 E3F0 D0B8 0024          000000B8   6620          STG   15,184(0,13)
0000487A 4110 D0B0               000000B0   6621          LA    1,176(0,13)
0000487E B904 00F8                          6622          LGR   15,8
00004882                                    6623 @@gen_label425 DS    0H
00004882 05EF                               6624          BALR  14,15
00004884                                    6625 @@gen_label426 DS    0H
00004884 E3F0 C07C 0016          00004794   6626          LLGF  15,@lit_986_443 ; rd_unittest_assert_on_failure
0000488A 41FF 4000               00000000   6627          LA    15,0(15,4)
0000488E 9500 F000      00000000 00000000   6628          CLI   0(15),0
00004892 4780 C1BC               000048D4   6629          BE    @L292
00004896 E3F0 3018 0004          00000018   6630          LG    15,24(0,3)  ; offset of significantFigures in rd_hdr_his*
                                                                togram_s
0000489C B930 00F2                          6631          CGFR  15,2
000048A0 4780 C1BC               000048D4   6632          BE    @L292
000048A4                                    6633 @L293    DS    0H
000048A4 41F0 70A4               000000A4   6634          LA    15,164(0,7)
000048A8 E3F0 D0B0 0024          000000B0   6635          STG   15,176(0,13)
000048AE 41F0 6058               00000058   6636          LA    15,88(0,6)
000048B2 E3F0 D0B8 0024          000000B8   6637          STG   15,184(0,13)
000048B8 E548 D0C0 0280          000000C0   6638          MVGHI 192(13),640
000048BE 41F0 6548               00000548   6639          LA    15,1352(0,6)
000048C2 E3F0 D0C8 0024          000000C8   6640          STG   15,200(0,13)
000048C8 4110 D0B0               000000B0   6641          LA    1,176(0,13)
000048CC E3F0 C080 0004          00004798   6642          LG    15,@lit_986_444 ; __assert
000048D2                                    6643 @@gen_label429 DS    0H
000048D2 05EF                               6644          BALR  14,15
000048D4                                    6645 @@gen_label430 DS    0H
000048D4                                    6646 @L294    DS    0H
000048D4                                    6647 @L292    DS    0H
000048D4 A7F9 0001               00000001   6648          LGHI  15,1        ; 1
000048D8 47F0 C234               0000494C   6649          B     @ret_lab_986
000048DC                                    6650 @L291    DS    0H
                                            6651 * ***
                                            6652 * ***
                                            6653 * ***                   rd_hdr_histogram_destroy(hdr);
000048DC E330 D0B0 0024          000000B0   6654          STG   3,176(0,13)
000048E2 4110 D0B0               000000B0   6655          LA    1,176(0,13)
000048E6 E3F0 C088 0004          000047A0   6656          LG    15,@lit_986_446 ; rd_hdr_histogram_destroy
000048EC                                    6657 @@gen_label431 DS    0H
000048EC 05EF                               6658          BALR  14,15
000048EE                                    6659 @@gen_label432 DS    0H
                                            6660 * ***           }
000048EE A72A 0001               00000001   6661          AHI   2,1
000048F2                                    6662 @L285    DS    0H
000048F2 A72E 0005               00000005   6663          CHI   2,5
000048F6 47D0 C090               000047A8   6664          BNH   @L284
                                                                                                                           Page  134 
  Active Usings: @REGION_986_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            6665 * ***
                                            6666 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                            6667 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 646, \
                                            6668 * __FUNCTION__); return 0; } while (0);
000048FA                                    6669 @L295    DS    0H
000048FA E3F0 C078 0016          00004790   6670          LLGF  15,@lit_986_435 ; __stderrp
00004900 E3FF 4000 0004          00000000   6671          LG    15,0(15,4)  ; __stderrp
00004906 E3F0 D0B0 0024          000000B0   6672          STG   15,176(0,13)
0000490C E3F0 C070 0004          00004788   6673          LG    15,@lit_986_436
00004912 4110 F0B2               000000B2   6674          LA    1,178(0,15)
00004916 E310 D0B8 0024          000000B8   6675          STG   1,184(0,13)
0000491C 41F0 F058               00000058   6676          LA    15,88(0,15)
00004920 E3F0 D0C0 0024          000000C0   6677          STG   15,192(0,13)
00004926 E548 D0C8 0286          000000C8   6678          MVGHI 200(13),646
0000492C E3F0 C068 0004          00004780   6679          LG    15,@lit_986_437
00004932 41F0 F0A4               000000A4   6680          LA    15,164(0,15)
00004936 E3F0 D0D0 0024          000000D0   6681          STG   15,208(0,13)
0000493C 4110 D0B0               000000B0   6682          LA    1,176(0,13)
00004940 E3F0 C060 0004          00004778   6683          LG    15,@lit_986_438 ; fprintf
00004946                                    6684 @@gen_label434 DS    0H
00004946 05EF                               6685          BALR  14,15
00004948                                    6686 @@gen_label435 DS    0H
00004948 A7F9 0000               00000000   6687          LGHI  15,0        ; 0
                                            6688 * ***   }
0000494C                                    6689 @ret_lab_986 DS 0H
                                            6690 * * **** Start of Epilogue
                                            6691          DCCEPIL
0000494C                                    6692+         ds 0h                                                          01-DCCEP
                                            6693+* Epilog
0000494C D707 D088 D088 00000088 00000088   6694+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004952 E3D0 D080 0004          00000080   6695+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004958 E3C0 D090 0004          00000090   6696+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000495E E3B0 C018 0004          00000018   6697+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004964 E3C0 B010 0021          00000010   6698+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
0000496A E3E0 D008 0004          00000008   6699+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004970 EB1C D020 0004          00000020   6700+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004976 078E                               6701+         bcr 8,14                if same dsab, just return              01-DCCEP
00004978 E3F0 D010 0024          00000010   6702+         stg 15,16(0,13)         save return code                       01-DCCEP
0000497E E300 D018 0024          00000018   6703+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004984 E3F0 D090 0004          00000090   6704+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
0000498A E3F0 F018 0004          00000018   6705+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004990 47F0 F040               00000040   6706+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            6707+* End of Epilog
                                            6708 * * **** End of Epilogue
                                            6709          DROP  12
                                            6710 *
                                            6711 *   DSECT for automatic variables in "ut_sigfigs"
                                            6712 *      (FUNCTION #986)
                                            6713 *
00000000                00000000 000000AC   6714 @AUTO#ut_sigfigs DSECT
00000000                                    6715          DS    XL168
000000A8                                    6716 ut_sigfigs#sigfigs#0 DS 1F ; sigfigs
                                                                                                                           Page  135 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            6717 *
00004994                00000000 000056F0   6718 @CODE    CSECT
                                            6719 *
                                            6720 *
                                            6721 *
                                            6722 * ....... start of ut_minmax_trackable
00004994                                    6723 @LNAME987 DS   0H
00004994 00000013                           6724          DC    X'00000013'
00004998 A4A36D9489959481                   6725          DC    C'ut_minmax_trackable'
000049AB 00                                 6726          DC    X'00'
                                            6727 ut_minmax_trackable DCCPRLG CINDEX=987,BASER=12,FRAME=216,ENTRY=NO,ARCH*
                                                                =ZARCH,LNAMEADDR=@LNAME987
                                            6728          macro
                                            6729          dccextrn &m
                                            6730          gblc    &$dccext(1000)
                                            6731          gbla    &$dccexti
                                            6732          lcla    &i
                                            6733 &$dccext(&$dccexti+1) setc    '&m'
                                            6734 &i       seta    1
                                            6735 .loop    aif    (&i gt &$dccexti).around
                                            6736          aif    ('&$dccext(&i)' eq '&m').getout
                                            6737 &i       seta    &i+1
                                            6738          ago     .loop
                                            6739 .around  anop
                                            6740 &$dccexti seta &$dccexti+1
                                            6741          extrn  &m
                                            6742 .getout  anop
                                            6743          mend
000049B0                                    6744+$eye0117    ds    0d                                                    02-DCCCA
000049B0 C4C3C3                             6745+         dc cl3'DCC'                                                    02-DCCCA
000049B3 01                                 6746+         dc xl1'01' format one                                          02-DCCCA
000049B4 00000000                           6747+         dc a(0)                                                        02-DCCCA
000049B8 0000000000004A22                   6748+         dc ad(@PER_987)                                                02-DCCCA
000049C0 00000000000000D8                   6749+         dc ad(216)                                                     02-DCCCA
000049C8 0000000000000000                   6750+         dc ad(0)                                                       02-DCCCA
000049D0 0000000000001000                   6751+         dc ad(4096)                                                    02-DCCCA
000049D8 20                                 6752+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
000049D9 03                                 6753+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
000049DA 03                                 6754+         dc al1(3)                                                      02-DCCCA
000049DB 08                                 6755+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
000049DC 00                                 6756+         dc bl.8'00000000'                                              02-DCCCA
000049DD 000000                             6757+         dc al3(0)                                                      02-DCCCA
000049E0 0000000000004994                   6758+         dc ad(@LNAME987)                                               02-DCCCA
000049E8                                    6759+         ds 0d                                                          02-DCCCA
000049E8 00000000000049B0                   6760+         dc ad($eye0117)                                                02-DCCCA
000049F0 0000000000000000                   6761+         dc ad(0)                                                       02-DCCCA
000049F8                                    6762+         ds    0d                                                       01-DCCPR
000049F8                                    6763+ut_minmax_trackable ds 0d                                               01-DCCPR
000049F8                                    6764+@REGION_987_1 ds 0h                                                     01-DCCPR
000049F8 EBEC D008 0024          00000008   6765+         stmg  14,12,8(13)                         Save regs            01-DCCPR
000049FE E3E0 D088 0004          00000088   6766+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004A04 E3C0 D090 0004          00000090   6767+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
                                                                                                                           Page  136 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004A0A B904 002E                          6768+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004A0E E3B0 C018 0004          00000018   6769+         lg    11,24(0,12)         get dvt address                      01-DCCPR
00004A14 A7EB 00D8               000000D8   6770+         aghi  14,216              increase by frame size               01-DCCPR
00004A18 E3E0 C020 0021          00000020   6771+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004A1E 4720 B020               00000020   6772+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004A22                                    6773+@PER_987 ds    0h                                                       01-DCCPR
00004A22 EBDE 2080 0024          00000080   6774+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004A28 E3C0 2090 0024          00000090   6775+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004A2E B904 00D2                          6776+         lgr   13,2                set real frame pointer               01-DCCPR
00004A32 B904 00CF                          6777+         lgr   12,15               set base reg                         01-DCCPR
                        000049F8            6778+         using @REGION_987_1,12                                         01-DCCPR
                                            6779          DCCPRV REG=5      ; Get PRV from DVT
00004A36 E350 B008 0004          00000008   6780+         LG 5,8(0,11)                                                   01-DCCPR
                                            6781 * ******* End of Prologue
                                            6782 * *
                                            6783 * ***           const int64_t minval = 2;
00004A3C A729 0002               00000002   6784          LGHI  2,2         ; 2
                                            6785 * ***           const int64_t maxval = 11;
00004A40 A739 000B               0000000B   6786          LGHI  3,11        ; 11
                                            6787 * ***           rd_hdr_histogram_t *hdr = rd_hdr_histogram_new(minval,\
                                            6788 *  maxval, 3);
00004A44 EB23 D0B0 0024          000000B0   6789          STMG  2,3,176(13)
00004A4A E548 D0C0 0003          000000C0   6790          MVGHI 192(13),3
00004A50 4110 D0B0               000000B0   6791          LA    1,176(0,13)
00004A54 E3F0 C178 0004          00004B70   6792          LG    15,@lit_987_455 ; rd_hdr_histogram_new
00004A5A                                    6793 @@gen_label436 DS    0H
00004A5A 05EF                               6794          BALR  14,15
00004A5C                                    6795 @@gen_label437 DS    0H
00004A5C B904 004F                          6796          LGR   4,15
                                            6797 * ***
                                            6798 * ***           do { if (!(hdr->lowestTrackableValue == minval)) { fpr\
                                            6799 * intf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " \
                                            6800 * "hdr->lowestTrackableValue == minval" ": ", "C:\\asgkafka\\librdkafk\
                                            6801 * a\\src\\rdhdrhistogram.c", 654, __FUNCTION__); fprintf(__stderrp, "l\
                                            6802 * owestTrackableValue is %" "lld" ", expected %" "lld", hdr->lowestTra\
                                            6803 * ckableValue, minval); fprintf(__stderrp, "\033[0m\n"); if (rd_unitte\
                                            6804 * st_assert_on_failure) ((hdr->lowestTrackableValue == minval) ? (void\
                                            6805 * )0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogr\
                                            6806 * am.c", 654, "hdr->lowestTrackableValue == minval")); return 1; } } w\
                                            6807 * hile (0);
00004A60                                    6808 @L298    DS    0H
00004A60 E320 4000 0020          00000000   6809          CG    2,0(0,4)
00004A66 4780 C1B0               00004BA8   6810          BE    @L301
00004A6A E330 C198 0016          00004B90   6811          LLGF  3,@lit_987_456 ; __stderrp
00004A70 E3F3 5000 0004          00000000   6812          LG    15,0(3,5)   ; __stderrp
00004A76 E3F0 D0B0 0024          000000B0   6813          STG   15,176(0,13)
00004A7C E360 C190 0004          00004B88   6814          LG    6,@lit_987_457
00004A82 41F0 656C               0000056C   6815          LA    15,1388(0,6)
00004A86 E3F0 D0B8 0024          000000B8   6816          STG   15,184(0,13)
00004A8C 41F0 6058               00000058   6817          LA    15,88(0,6)
00004A90 E3F0 D0C0 0024          000000C0   6818          STG   15,192(0,13)
00004A96 E548 D0C8 028E          000000C8   6819          MVGHI 200(13),654
                                                                                                                           Page  137 
  Active Usings: @REGION_987_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004A9C E370 C188 0004          00004B80   6820          LG    7,@lit_987_458
00004AA2 41F0 70B0               000000B0   6821          LA    15,176(0,7)
00004AA6 E3F0 D0D0 0024          000000D0   6822          STG   15,208(0,13)
00004AAC 4110 D0B0               000000B0   6823          LA    1,176(0,13)
00004AB0 E380 C180 0004          00004B78   6824          LG    8,@lit_987_459 ; fprintf
00004AB6 B904 00F8                          6825          LGR   15,8
00004ABA                                    6826 @@gen_label439 DS    0H
00004ABA 05EF                               6827          BALR  14,15
00004ABC                                    6828 @@gen_label440 DS    0H
00004ABC E3F3 5000 0004          00000000   6829          LG    15,0(3,5)   ; __stderrp
00004AC2 E3F0 D0B0 0024          000000B0   6830          STG   15,176(0,13)
00004AC8 41F0 65BE               000005BE   6831          LA    15,1470(0,6)
00004ACC E3F0 D0B8 0024          000000B8   6832          STG   15,184(0,13)
00004AD2 E3F0 4000 0004          00000000   6833          LG    15,0(0,4)
00004AD8 E3F0 D0C0 0024          000000C0   6834          STG   15,192(0,13)
00004ADE E320 D0C8 0024          000000C8   6835          STG   2,200(0,13)
00004AE4 4110 D0B0               000000B0   6836          LA    1,176(0,13)
00004AE8 B904 00F8                          6837          LGR   15,8
00004AEC                                    6838 @@gen_label441 DS    0H
00004AEC 05EF                               6839          BALR  14,15
00004AEE                                    6840 @@gen_label442 DS    0H
00004AEE E3F3 5000 0004          00000000   6841          LG    15,0(3,5)   ; __stderrp
00004AF4 E3F0 D0B0 0024          000000B0   6842          STG   15,176(0,13)
00004AFA 41F0 60A2               000000A2   6843          LA    15,162(0,6)
00004AFE E3F0 D0B8 0024          000000B8   6844          STG   15,184(0,13)
00004B04 4110 D0B0               000000B0   6845          LA    1,176(0,13)
00004B08 B904 00F8                          6846          LGR   15,8
00004B0C                                    6847 @@gen_label443 DS    0H
00004B0C 05EF                               6848          BALR  14,15
00004B0E                                    6849 @@gen_label444 DS    0H
00004B0E E3F0 C19C 0016          00004B94   6850          LLGF  15,@lit_987_464 ; rd_unittest_assert_on_failure
00004B14 41FF 5000               00000000   6851          LA    15,0(15,5)
00004B18 9500 F000      00000000 00000000   6852          CLI   0(15),0
00004B1C 4780 C162               00004B5A   6853          BE    @L302
00004B20 E320 4000 0020          00000000   6854          CG    2,0(0,4)
00004B26 4780 C162               00004B5A   6855          BE    @L302
00004B2A                                    6856 @L303    DS    0H
00004B2A 41F0 70B0               000000B0   6857          LA    15,176(0,7)
00004B2E E3F0 D0B0 0024          000000B0   6858          STG   15,176(0,13)
00004B34 41F0 6058               00000058   6859          LA    15,88(0,6)
00004B38 E3F0 D0B8 0024          000000B8   6860          STG   15,184(0,13)
00004B3E E548 D0C0 028E          000000C0   6861          MVGHI 192(13),654
00004B44 41F0 65EA               000005EA   6862          LA    15,1514(0,6)
00004B48 E3F0 D0C8 0024          000000C8   6863          STG   15,200(0,13)
00004B4E 4110 D0B0               000000B0   6864          LA    1,176(0,13)
00004B52 E3F0 C1A0 0004          00004B98   6865          LG    15,@lit_987_465 ; __assert
00004B58                                    6866 @@gen_label447 DS    0H
00004B58 05EF                               6867          BALR  14,15
00004B5A                                    6868 @@gen_label448 DS    0H
00004B5A                                    6869 @L304    DS    0H
00004B5A                                    6870 @L302    DS    0H
00004B5A A7F9 0001               00000001   6871          LGHI  15,1        ; 1
                                                                                                                           Page  138 
  Active Usings: @REGION_987_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004B5E 47F0 C316               00004D0E   6872          B     @ret_lab_987
00004B68                                    6873          DS    0D
00004B68 000000D8                           6874 @FRAMESIZE_987 DC F'216'
00004B6C 00000000
00004B70 0000000000000488                   6875 @lit_987_455 DC AD(rd_hdr_histogram_new)
00004B78 0000000000000000                   6876 @lit_987_459 DC AD(fprintf)
00004B80 00000000000056F0                   6877 @lit_987_458 DC AD(@DATA)
00004B88 00000000000057E8                   6878 @lit_987_457 DC AD(@strings@)
00004B90 00000000                           6879 @lit_987_456 DC Q(__stderrp)
00004B94 00000000                           6880 @lit_987_464 DC Q(rd_unittest_assert_on_failure)
00004B98 0000000000000000                   6881 @lit_987_465 DC AD(__assert)
00004BA0 0000000000000370                   6882 @lit_987_478 DC AD(rd_hdr_histogram_destroy)
00004BA8                                    6883 @L301    DS    0H
                                            6884 * ***
                                            6885 * ***
                                            6886 * ***           do { if (!(hdr->highestTrackableValue == maxval)) { fp\
                                            6887 * rintf(__stderrp, "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: "\
                                            6888 *  "hdr->highestTrackableValue == maxval" ": ", "C:\\asgkafka\\librdka\
                                            6889 * fka\\src\\rdhdrhistogram.c", 657, __FUNCTION__); fprintf(__stderrp, \
                                            6890 * "highestTrackableValue is %" "lld" ", expected %" "lld", hdr->highes\
                                            6891 * tTrackableValue, maxval); fprintf(__stderrp, "\033[0m\n"); if (rd_un\
                                            6892 * ittest_assert_on_failure) ((hdr->highestTrackableValue == maxval) ? \
                                            6893 * (void)0 : __assert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdhdrhi\
                                            6894 * stogram.c", 657, "hdr->highestTrackableValue == maxval")); return 1;\
                                            6895 *  } } while (0);
00004BA8                                    6896 @L305    DS    0H
00004BA8 E330 4008 0020          00000008   6897          CG    3,8(0,4)
00004BAE 4780 C2B2               00004CAA   6898          BE    @L308
00004BB2 E320 C198 0016          00004B90   6899          LLGF  2,@lit_987_456 ; __stderrp
00004BB8 E3F2 5000 0004          00000000   6900          LG    15,0(2,5)   ; __stderrp
00004BBE E3F0 D0B0 0024          000000B0   6901          STG   15,176(0,13)
00004BC4 E360 C190 0004          00004B88   6902          LG    6,@lit_987_457
00004BCA 41F0 660E               0000060E   6903          LA    15,1550(0,6)
00004BCE E3F0 D0B8 0024          000000B8   6904          STG   15,184(0,13)
00004BD4 41F0 6058               00000058   6905          LA    15,88(0,6)
00004BD8 E3F0 D0C0 0024          000000C0   6906          STG   15,192(0,13)
00004BDE E548 D0C8 0291          000000C8   6907          MVGHI 200(13),657
00004BE4 E370 C188 0004          00004B80   6908          LG    7,@lit_987_458
00004BEA 41F0 70B0               000000B0   6909          LA    15,176(0,7)
00004BEE E3F0 D0D0 0024          000000D0   6910          STG   15,208(0,13)
00004BF4 4110 D0B0               000000B0   6911          LA    1,176(0,13)
00004BF8 E380 C180 0004          00004B78   6912          LG    8,@lit_987_459 ; fprintf
00004BFE B904 00F8                          6913          LGR   15,8
00004C02                                    6914 @@gen_label450 DS    0H
00004C02 05EF                               6915          BALR  14,15
00004C04                                    6916 @@gen_label451 DS    0H
00004C04 E3F2 5000 0004          00000000   6917          LG    15,0(2,5)   ; __stderrp
00004C0A E3F0 D0B0 0024          000000B0   6918          STG   15,176(0,13)
00004C10 41F0 6660               00000660   6919          LA    15,1632(0,6)
00004C14 E3F0 D0B8 0024          000000B8   6920          STG   15,184(0,13)
00004C1A E3F0 4008 0004          00000008   6921          LG    15,8(0,4)
00004C20 E3F0 D0C0 0024          000000C0   6922          STG   15,192(0,13)
                                                                                                                           Page  139 
  Active Usings: @REGION_987_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004C26 E330 D0C8 0024          000000C8   6923          STG   3,200(0,13)
00004C2C 4110 D0B0               000000B0   6924          LA    1,176(0,13)
00004C30 B904 00F8                          6925          LGR   15,8
00004C34                                    6926 @@gen_label452 DS    0H
00004C34 05EF                               6927          BALR  14,15
00004C36                                    6928 @@gen_label453 DS    0H
00004C36 E3F2 5000 0004          00000000   6929          LG    15,0(2,5)   ; __stderrp
00004C3C E3F0 D0B0 0024          000000B0   6930          STG   15,176(0,13)
00004C42 41F0 60A2               000000A2   6931          LA    15,162(0,6)
00004C46 E3F0 D0B8 0024          000000B8   6932          STG   15,184(0,13)
00004C4C 4110 D0B0               000000B0   6933          LA    1,176(0,13)
00004C50 B904 00F8                          6934          LGR   15,8
00004C54                                    6935 @@gen_label454 DS    0H
00004C54 05EF                               6936          BALR  14,15
00004C56                                    6937 @@gen_label455 DS    0H
00004C56 E3F0 C19C 0016          00004B94   6938          LLGF  15,@lit_987_464 ; rd_unittest_assert_on_failure
00004C5C 41FF 5000               00000000   6939          LA    15,0(15,5)
00004C60 9500 F000      00000000 00000000   6940          CLI   0(15),0
00004C64 4780 C2AA               00004CA2   6941          BE    @L309
00004C68 E330 4008 0020          00000008   6942          CG    3,8(0,4)
00004C6E 4780 C2AA               00004CA2   6943          BE    @L309
00004C72                                    6944 @L310    DS    0H
00004C72 41F0 70B0               000000B0   6945          LA    15,176(0,7)
00004C76 E3F0 D0B0 0024          000000B0   6946          STG   15,176(0,13)
00004C7C 41F0 6058               00000058   6947          LA    15,88(0,6)
00004C80 E3F0 D0B8 0024          000000B8   6948          STG   15,184(0,13)
00004C86 E548 D0C0 0291          000000C0   6949          MVGHI 192(13),657
00004C8C 41F0 668E               0000068E   6950          LA    15,1678(0,6)
00004C90 E3F0 D0C8 0024          000000C8   6951          STG   15,200(0,13)
00004C96 4110 D0B0               000000B0   6952          LA    1,176(0,13)
00004C9A E3F0 C1A0 0004          00004B98   6953          LG    15,@lit_987_465 ; __assert
00004CA0                                    6954 @@gen_label458 DS    0H
00004CA0 05EF                               6955          BALR  14,15
00004CA2                                    6956 @@gen_label459 DS    0H
00004CA2                                    6957 @L311    DS    0H
00004CA2                                    6958 @L309    DS    0H
00004CA2 A7F9 0001               00000001   6959          LGHI  15,1        ; 1
00004CA6 47F0 C316               00004D0E   6960          B     @ret_lab_987
00004CAA                                    6961 @L308    DS    0H
                                            6962 * ***
                                            6963 * ***
                                            6964 * ***
                                            6965 * ***           rd_hdr_histogram_destroy(hdr);
00004CAA E340 D0B0 0024          000000B0   6966          STG   4,176(0,13)
00004CB0 4110 D0B0               000000B0   6967          LA    1,176(0,13)
00004CB4 E3F0 C1A8 0004          00004BA0   6968          LG    15,@lit_987_478 ; rd_hdr_histogram_destroy
00004CBA                                    6969 @@gen_label460 DS    0H
00004CBA 05EF                               6970          BALR  14,15
00004CBC                                    6971 @@gen_label461 DS    0H
                                            6972 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                            6973 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 662, \
                                            6974 * __FUNCTION__); return 0; } while (0);
                                                                                                                           Page  140 
  Active Usings: @REGION_987_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004CBC                                    6975 @L312    DS    0H
00004CBC E3F0 C198 0016          00004B90   6976          LLGF  15,@lit_987_456 ; __stderrp
00004CC2 E3FF 5000 0004          00000000   6977          LG    15,0(15,5)  ; __stderrp
00004CC8 E3F0 D0B0 0024          000000B0   6978          STG   15,176(0,13)
00004CCE E3F0 C190 0004          00004B88   6979          LG    15,@lit_987_457
00004CD4 4110 F0B2               000000B2   6980          LA    1,178(0,15)
00004CD8 E310 D0B8 0024          000000B8   6981          STG   1,184(0,13)
00004CDE 41F0 F058               00000058   6982          LA    15,88(0,15)
00004CE2 E3F0 D0C0 0024          000000C0   6983          STG   15,192(0,13)
00004CE8 E548 D0C8 0296          000000C8   6984          MVGHI 200(13),662
00004CEE E3F0 C188 0004          00004B80   6985          LG    15,@lit_987_458
00004CF4 41F0 F0B0               000000B0   6986          LA    15,176(0,15)
00004CF8 E3F0 D0D0 0024          000000D0   6987          STG   15,208(0,13)
00004CFE 4110 D0B0               000000B0   6988          LA    1,176(0,13)
00004D02 E3F0 C180 0004          00004B78   6989          LG    15,@lit_987_459 ; fprintf
00004D08                                    6990 @@gen_label462 DS    0H
00004D08 05EF                               6991          BALR  14,15
00004D0A                                    6992 @@gen_label463 DS    0H
00004D0A A7F9 0000               00000000   6993          LGHI  15,0        ; 0
                                            6994 * ***   }
00004D0E                                    6995 @ret_lab_987 DS 0H
                                            6996 * * **** Start of Epilogue
                                            6997          DCCEPIL
00004D0E                                    6998+         ds 0h                                                          01-DCCEP
                                            6999+* Epilog
00004D0E D707 D088 D088 00000088 00000088   7000+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004D14 E3D0 D080 0004          00000080   7001+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004D1A E3C0 D090 0004          00000090   7002+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004D20 E3B0 C018 0004          00000018   7003+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004D26 E3C0 B010 0021          00000010   7004+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00004D2C E3E0 D008 0004          00000008   7005+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004D32 EB1C D020 0004          00000020   7006+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004D38 078E                               7007+         bcr 8,14                if same dsab, just return              01-DCCEP
00004D3A E3F0 D010 0024          00000010   7008+         stg 15,16(0,13)         save return code                       01-DCCEP
00004D40 E300 D018 0024          00000018   7009+         stg 0,24(0,13)          save more return code                  01-DCCEP
00004D46 E3F0 D090 0004          00000090   7010+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00004D4C E3F0 F018 0004          00000018   7011+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00004D52 47F0 F040               00000040   7012+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7013+* End of Epilog
                                            7014 * * **** End of Epilogue
                                            7015          DROP  12
                                            7016 *
                                            7017 *   DSECT for automatic variables in "ut_minmax_trackable"
                                            7018 *      (FUNCTION #987)
                                            7019 *
00000000                00000000 000000B0   7020 @AUTO#ut_minmax_trackable DSECT
00000000                                    7021          DS    XL168
000000A8                                    7022 ut_minmax_trackable#maxval#0 DS 8XL1 ; maxval
000000B0                000000B0 000000A8   7023          ORG   @AUTO#ut_minmax_trackable+168
000000A8                                    7024 ut_minmax_trackable#minval#0 DS 8XL1 ; minval
                                            7025 *
00004D56                00000000 000056F0   7026 @CODE    CSECT
                                                                                                                           Page  141 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            7027 *
                                            7028 *
                                            7029 *
                                            7030 * ....... start of ut_unitmagnitude_overflow
00004D56                                    7031 @LNAME988 DS   0H
00004D56 00000019                           7032          DC    X'00000019'
00004D5A A4A36DA49589A394                   7033          DC    C'ut_unitmagnitude_overflow'
00004D73 00                                 7034          DC    X'00'
                                            7035 ut_unitmagnitude_overflow DCCPRLG CINDEX=988,BASER=12,FRAME=216,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME988
                                            7036          macro
                                            7037          dccextrn &m
                                            7038          gblc    &$dccext(1000)
                                            7039          gbla    &$dccexti
                                            7040          lcla    &i
                                            7041 &$dccext(&$dccexti+1) setc    '&m'
                                            7042 &i       seta    1
                                            7043 .loop    aif    (&i gt &$dccexti).around
                                            7044          aif    ('&$dccext(&i)' eq '&m').getout
                                            7045 &i       seta    &i+1
                                            7046          ago     .loop
                                            7047 .around  anop
                                            7048 &$dccexti seta &$dccexti+1
                                            7049          extrn  &m
                                            7050 .getout  anop
                                            7051          mend
00004D78                                    7052+$eye0121    ds    0d                                                    02-DCCCA
00004D78 C4C3C3                             7053+         dc cl3'DCC'                                                    02-DCCCA
00004D7B 01                                 7054+         dc xl1'01' format one                                          02-DCCCA
00004D7C 00000000                           7055+         dc a(0)                                                        02-DCCCA
00004D80 0000000000004DEA                   7056+         dc ad(@PER_988)                                                02-DCCCA
00004D88 00000000000000D8                   7057+         dc ad(216)                                                     02-DCCCA
00004D90 0000000000000000                   7058+         dc ad(0)                                                       02-DCCCA
00004D98 0000000000001000                   7059+         dc ad(4096)                                                    02-DCCCA
00004DA0 20                                 7060+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00004DA1 03                                 7061+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00004DA2 03                                 7062+         dc al1(3)                                                      02-DCCCA
00004DA3 08                                 7063+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00004DA4 00                                 7064+         dc bl.8'00000000'                                              02-DCCCA
00004DA5 000000                             7065+         dc al3(0)                                                      02-DCCCA
00004DA8 0000000000004D56                   7066+         dc ad(@LNAME988)                                               02-DCCCA
00004DB0                                    7067+         ds 0d                                                          02-DCCCA
00004DB0 0000000000004D78                   7068+         dc ad($eye0121)                                                02-DCCCA
00004DB8 0000000000000000                   7069+         dc ad(0)                                                       02-DCCCA
00004DC0                                    7070+         ds    0d                                                       01-DCCPR
00004DC0                                    7071+ut_unitmagnitude_overflow ds 0d                                         01-DCCPR
00004DC0                                    7072+@REGION_988_1 ds 0h                                                     01-DCCPR
00004DC0 EBEC D008 0024          00000008   7073+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00004DC6 E3E0 D088 0004          00000088   7074+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00004DCC E3C0 D090 0004          00000090   7075+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00004DD2 B904 002E                          7076+         lgr   2,14                copy addr of our savearea            01-DCCPR
00004DD6 E3B0 C018 0004          00000018   7077+         lg    11,24(0,12)         get dvt address                      01-DCCPR
                                                                                                                           Page  142 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004DDC A7EB 00D8               000000D8   7078+         aghi  14,216              increase by frame size               01-DCCPR
00004DE0 E3E0 C020 0021          00000020   7079+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00004DE6 4720 B020               00000020   7080+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
00004DEA                                    7081+@PER_988 ds    0h                                                       01-DCCPR
00004DEA EBDE 2080 0024          00000080   7082+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
00004DF0 E3C0 2090 0024          00000090   7083+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
00004DF6 B904 00D2                          7084+         lgr   13,2                set real frame pointer               01-DCCPR
00004DFA B904 00CF                          7085+         lgr   12,15               set base reg                         01-DCCPR
                        00004DC0            7086+         using @REGION_988_1,12                                         01-DCCPR
                                            7087          DCCPRV REG=4      ; Get PRV from DVT
00004DFE E340 B008 0004          00000008   7088+         LG 4,8(0,11)                                                   01-DCCPR
                                            7089 * ******* End of Prologue
                                            7090 * *
                                            7091 * ***           rd_hdr_histogram_t *hdr = rd_hdr_histogram_new(0, 200,\
                                            7092 *  4);
00004E04 D707 D0B0 D0B0 000000B0 000000B0   7093          XC    176(8,13),176(13)
00004E0A E548 D0B8 00C8          000000B8   7094          MVGHI 184(13),200
00004E10 E548 D0C0 0004          000000C0   7095          MVGHI 192(13),4
00004E16 4110 D0B0               000000B0   7096          LA    1,176(0,13)
00004E1A E3F0 C170 0004          00004F30   7097          LG    15,@lit_988_485 ; rd_hdr_histogram_new
00004E20                                    7098 @@gen_label464 DS    0H
00004E20 05EF                               7099          BALR  14,15
00004E22                                    7100 @@gen_label465 DS    0H
00004E22 B904 002F                          7101          LGR   2,15
                                            7102 * ***           int r = rd_hdr_histogram_record(hdr, 11);
00004E26 E320 D0B0 0024          000000B0   7103          STG   2,176(0,13)
00004E2C E548 D0B8 000B          000000B8   7104          MVGHI 184(13),11
00004E32 4110 D0B0               000000B0   7105          LA    1,176(0,13)
00004E36 E3F0 C178 0004          00004F38   7106          LG    15,@lit_988_486 ; rd_hdr_histogram_record
00004E3C                                    7107 @@gen_label466 DS    0H
00004E3C 05EF                               7108          BALR  14,15
00004E3E                                    7109 @@gen_label467 DS    0H
00004E3E 183F                               7110          LR    3,15
                                            7111 * ***           do { if (!(r)) { fprintf(__stderrp, "\033[31mRDUT: FAI\
                                            7112 * L: %s:%d: %s: " "assert failed: " "r" ": ", "C:\\asgkafka\\librdkafk\
                                            7113 * a\\src\\rdhdrhistogram.c", 669, __FUNCTION__); fprintf(__stderrp, "r\
                                            7114 * ecord(11) failed\n"); fprintf(__stderrp, "\033[0m\n"); if (rd_unitte\
                                            7115 * st_assert_on_failure) ((r) ? (void)0 : __assert(__func__, "C:\\asgka\
                                            7116 * fka\\librdkafka\\src\\rdhdrhistogram.c", 669, "r")); return 1; } } w\
                                            7117 * hile (0);
00004E40                                    7118 @L315    DS    0H
00004E40 1233                               7119          LTR   3,3
00004E42 4770 C1B0               00004F70   7120          BNZ   @L318
00004E46 E320 C198 0016          00004F58   7121          LLGF  2,@lit_988_487 ; __stderrp
00004E4C E3F2 4000 0004          00000000   7122          LG    15,0(2,4)   ; __stderrp
00004E52 E3F0 D0B0 0024          000000B0   7123          STG   15,176(0,13)
00004E58 E350 C190 0004          00004F50   7124          LG    5,@lit_988_488
00004E5E 41F0 50D2               000000D2   7125          LA    15,210(0,5)
00004E62 E3F0 D0B8 0024          000000B8   7126          STG   15,184(0,13)
00004E68 41F0 5058               00000058   7127          LA    15,88(0,5)
00004E6C E3F0 D0C0 0024          000000C0   7128          STG   15,192(0,13)
00004E72 E548 D0C8 029D          000000C8   7129          MVGHI 200(13),669
                                                                                                                           Page  143 
  Active Usings: @REGION_988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004E78 E360 C188 0004          00004F48   7130          LG    6,@lit_988_489
00004E7E 41F0 60C4               000000C4   7131          LA    15,196(0,6)
00004E82 E3F0 D0D0 0024          000000D0   7132          STG   15,208(0,13)
00004E88 4110 D0B0               000000B0   7133          LA    1,176(0,13)
00004E8C E370 C180 0004          00004F40   7134          LG    7,@lit_988_490 ; fprintf
00004E92 B904 00F7                          7135          LGR   15,7
00004E96                                    7136 @@gen_label469 DS    0H
00004E96 05EF                               7137          BALR  14,15
00004E98                                    7138 @@gen_label470 DS    0H
00004E98 E3F2 4000 0004          00000000   7139          LG    15,0(2,4)   ; __stderrp
00004E9E E3F0 D0B0 0024          000000B0   7140          STG   15,176(0,13)
00004EA4 41F0 56B4               000006B4   7141          LA    15,1716(0,5)
00004EA8 E3F0 D0B8 0024          000000B8   7142          STG   15,184(0,13)
00004EAE 4110 D0B0               000000B0   7143          LA    1,176(0,13)
00004EB2 B904 00F7                          7144          LGR   15,7
00004EB6                                    7145 @@gen_label471 DS    0H
00004EB6 05EF                               7146          BALR  14,15
00004EB8                                    7147 @@gen_label472 DS    0H
00004EB8 E3F2 4000 0004          00000000   7148          LG    15,0(2,4)   ; __stderrp
00004EBE E3F0 D0B0 0024          000000B0   7149          STG   15,176(0,13)
00004EC4 41F0 50A2               000000A2   7150          LA    15,162(0,5)
00004EC8 E3F0 D0B8 0024          000000B8   7151          STG   15,184(0,13)
00004ECE 4110 D0B0               000000B0   7152          LA    1,176(0,13)
00004ED2 B904 00F7                          7153          LGR   15,7
00004ED6                                    7154 @@gen_label473 DS    0H
00004ED6 05EF                               7155          BALR  14,15
00004ED8                                    7156 @@gen_label474 DS    0H
00004ED8 E3F0 C19C 0016          00004F5C   7157          LLGF  15,@lit_988_495 ; rd_unittest_assert_on_failure
00004EDE 41FF 4000               00000000   7158          LA    15,0(15,4)
00004EE2 9500 F000      00000000 00000000   7159          CLI   0(15),0
00004EE6 4780 C160               00004F20   7160          BE    @L319
00004EEA 1233                               7161          LTR   3,3
00004EEC 4770 C160               00004F20   7162          BNZ   @L319
00004EF0                                    7163 @L320    DS    0H
00004EF0 41F0 60C4               000000C4   7164          LA    15,196(0,6)
00004EF4 E3F0 D0B0 0024          000000B0   7165          STG   15,176(0,13)
00004EFA 41F0 5058               00000058   7166          LA    15,88(0,5)
00004EFE E3F0 D0B8 0024          000000B8   7167          STG   15,184(0,13)
00004F04 E548 D0C0 029D          000000C0   7168          MVGHI 192(13),669
00004F0A 41F0 5118               00000118   7169          LA    15,280(0,5)
00004F0E E3F0 D0C8 0024          000000C8   7170          STG   15,200(0,13)
00004F14 4110 D0B0               000000B0   7171          LA    1,176(0,13)
00004F18 E3F0 C1A0 0004          00004F60   7172          LG    15,@lit_988_496 ; __assert
00004F1E                                    7173 @@gen_label477 DS    0H
00004F1E 05EF                               7174          BALR  14,15
00004F20                                    7175 @@gen_label478 DS    0H
00004F20                                    7176 @L321    DS    0H
00004F20                                    7177 @L319    DS    0H
00004F20 A7F9 0001               00000001   7178          LGHI  15,1        ; 1
00004F24 47F0 C214               00004FD4   7179          B     @ret_lab_988
00004F28                                    7180          DS    0D
00004F28 000000D8                           7181 @FRAMESIZE_988 DC F'216'
                                                                                                                           Page  144 
  Active Usings: @REGION_988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004F2C 00000000
00004F30 0000000000000488                   7182 @lit_988_485 DC AD(rd_hdr_histogram_new)
00004F38 0000000000001EB8                   7183 @lit_988_486 DC AD(rd_hdr_histogram_record)
00004F40 0000000000000000                   7184 @lit_988_490 DC AD(fprintf)
00004F48 00000000000056F0                   7185 @lit_988_489 DC AD(@DATA)
00004F50 00000000000057E8                   7186 @lit_988_488 DC AD(@strings@)
00004F58 00000000                           7187 @lit_988_487 DC Q(__stderrp)
00004F5C 00000000                           7188 @lit_988_495 DC Q(rd_unittest_assert_on_failure)
00004F60 0000000000000000                   7189 @lit_988_496 DC AD(__assert)
00004F68 0000000000000370                   7190 @lit_988_498 DC AD(rd_hdr_histogram_destroy)
00004F70                                    7191 @L318    DS    0H
                                            7192 * ***
                                            7193 * ***           rd_hdr_histogram_destroy(hdr);
00004F70 E320 D0B0 0024          000000B0   7194          STG   2,176(0,13)
00004F76 4110 D0B0               000000B0   7195          LA    1,176(0,13)
00004F7A E3F0 C1A8 0004          00004F68   7196          LG    15,@lit_988_498 ; rd_hdr_histogram_destroy
00004F80                                    7197 @@gen_label479 DS    0H
00004F80 05EF                               7198          BALR  14,15
00004F82                                    7199 @@gen_label480 DS    0H
                                            7200 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                            7201 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 672, \
                                            7202 * __FUNCTION__); return 0; } while (0);
00004F82                                    7203 @L322    DS    0H
00004F82 E3F0 C198 0016          00004F58   7204          LLGF  15,@lit_988_487 ; __stderrp
00004F88 E3FF 4000 0004          00000000   7205          LG    15,0(15,4)  ; __stderrp
00004F8E E3F0 D0B0 0024          000000B0   7206          STG   15,176(0,13)
00004F94 E3F0 C190 0004          00004F50   7207          LG    15,@lit_988_488
00004F9A 4110 F0B2               000000B2   7208          LA    1,178(0,15)
00004F9E E310 D0B8 0024          000000B8   7209          STG   1,184(0,13)
00004FA4 41F0 F058               00000058   7210          LA    15,88(0,15)
00004FA8 E3F0 D0C0 0024          000000C0   7211          STG   15,192(0,13)
00004FAE E548 D0C8 02A0          000000C8   7212          MVGHI 200(13),672
00004FB4 E3F0 C188 0004          00004F48   7213          LG    15,@lit_988_489
00004FBA 41F0 F0C4               000000C4   7214          LA    15,196(0,15)
00004FBE E3F0 D0D0 0024          000000D0   7215          STG   15,208(0,13)
00004FC4 4110 D0B0               000000B0   7216          LA    1,176(0,13)
00004FC8 E3F0 C180 0004          00004F40   7217          LG    15,@lit_988_490 ; fprintf
00004FCE                                    7218 @@gen_label481 DS    0H
00004FCE 05EF                               7219          BALR  14,15
00004FD0                                    7220 @@gen_label482 DS    0H
00004FD0 A7F9 0000               00000000   7221          LGHI  15,0        ; 0
                                            7222 * ***   }
00004FD4                                    7223 @ret_lab_988 DS 0H
                                            7224 * * **** Start of Epilogue
                                            7225          DCCEPIL
00004FD4                                    7226+         ds 0h                                                          01-DCCEP
                                            7227+* Epilog
00004FD4 D707 D088 D088 00000088 00000088   7228+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
00004FDA E3D0 D080 0004          00000080   7229+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00004FE0 E3C0 D090 0004          00000090   7230+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
00004FE6 E3B0 C018 0004          00000018   7231+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00004FEC E3C0 B010 0021          00000010   7232+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
                                                                                                                           Page  145 
  Active Usings: @REGION_988_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00004FF2 E3E0 D008 0004          00000008   7233+         lg  14,8(0,13)          load up return address                 01-DCCEP
00004FF8 EB1C D020 0004          00000020   7234+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00004FFE 078E                               7235+         bcr 8,14                if same dsab, just return              01-DCCEP
00005000 E3F0 D010 0024          00000010   7236+         stg 15,16(0,13)         save return code                       01-DCCEP
00005006 E300 D018 0024          00000018   7237+         stg 0,24(0,13)          save more return code                  01-DCCEP
0000500C E3F0 D090 0004          00000090   7238+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005012 E3F0 F018 0004          00000018   7239+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005018 47F0 F040               00000040   7240+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7241+* End of Epilog
                                            7242 * * **** End of Epilogue
                                            7243          DROP  12
                                            7244 *
                                            7245 *   DSECT for automatic variables in "ut_unitmagnitude_overflow"
                                            7246 *      (FUNCTION #988)
                                            7247 *
00000000                00000000 000000AC   7248 @AUTO#ut_unitmagnitude_overflow DSECT
00000000                                    7249          DS    XL168
000000A8                                    7250 ut_unitmagnitude_overflow#r#0 DS 1F ; r
                                            7251 *
0000501C                00000000 000056F0   7252 @CODE    CSECT
                                            7253 *
                                            7254 *
                                            7255 *
                                            7256 * ....... start of ut_subbucketmask_overflow
0000501C                                    7257 @LNAME989 DS   0H
0000501C 00000019                           7258          DC    X'00000019'
00005020 A4A36DA2A48282A4                   7259          DC    C'ut_subbucketmask_overflow'
00005039 00                                 7260          DC    X'00'
                                            7261 ut_subbucketmask_overflow DCCPRLG CINDEX=989,BASER=12,FRAME=296,ENTRY=N*
                                                                O,ARCH=ZARCH,LNAMEADDR=@LNAME989
                                            7262          macro
                                            7263          dccextrn &m
                                            7264          gblc    &$dccext(1000)
                                            7265          gbla    &$dccexti
                                            7266          lcla    &i
                                            7267 &$dccext(&$dccexti+1) setc    '&m'
                                            7268 &i       seta    1
                                            7269 .loop    aif    (&i gt &$dccexti).around
                                            7270          aif    ('&$dccext(&i)' eq '&m').getout
                                            7271 &i       seta    &i+1
                                            7272          ago     .loop
                                            7273 .around  anop
                                            7274 &$dccexti seta &$dccexti+1
                                            7275          extrn  &m
                                            7276 .getout  anop
                                            7277          mend
00005040                                    7278+$eye0125    ds    0d                                                    02-DCCCA
00005040 C4C3C3                             7279+         dc cl3'DCC'                                                    02-DCCCA
00005043 01                                 7280+         dc xl1'01' format one                                          02-DCCCA
00005044 00000000                           7281+         dc a(0)                                                        02-DCCCA
00005048 00000000000050B2                   7282+         dc ad(@PER_989)                                                02-DCCCA
00005050 0000000000000128                   7283+         dc ad(296)                                                     02-DCCCA
                                                                                                                           Page  146 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005058 0000000000000000                   7284+         dc ad(0)                                                       02-DCCCA
00005060 0000000000001000                   7285+         dc ad(4096)                                                    02-DCCCA
00005068 20                                 7286+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005069 03                                 7287+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
0000506A 03                                 7288+         dc al1(3)                                                      02-DCCCA
0000506B 08                                 7289+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
0000506C 00                                 7290+         dc bl.8'00000000'                                              02-DCCCA
0000506D 000000                             7291+         dc al3(0)                                                      02-DCCCA
00005070 000000000000501C                   7292+         dc ad(@LNAME989)                                               02-DCCCA
00005078                                    7293+         ds 0d                                                          02-DCCCA
00005078 0000000000005040                   7294+         dc ad($eye0125)                                                02-DCCCA
00005080 0000000000000000                   7295+         dc ad(0)                                                       02-DCCCA
00005088                                    7296+         ds    0d                                                       01-DCCPR
00005088                                    7297+ut_subbucketmask_overflow ds 0d                                         01-DCCPR
00005088                                    7298+@REGION_989_1 ds 0h                                                     01-DCCPR
00005088 EBEC D008 0024          00000008   7299+         stmg  14,12,8(13)                         Save regs            01-DCCPR
0000508E E3E0 D088 0004          00000088   7300+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
00005094 E3C0 D090 0004          00000090   7301+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
0000509A B904 002E                          7302+         lgr   2,14                copy addr of our savearea            01-DCCPR
0000509E E3B0 C018 0004          00000018   7303+         lg    11,24(0,12)         get dvt address                      01-DCCPR
000050A4 A7EB 0128               00000128   7304+         aghi  14,296              increase by frame size               01-DCCPR
000050A8 E3E0 C020 0021          00000020   7305+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
000050AE 4720 B020               00000020   7306+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
000050B2                                    7307+@PER_989 ds    0h                                                       01-DCCPR
000050B2 EBDE 2080 0024          00000080   7308+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000050B8 E3C0 2090 0024          00000090   7309+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000050BE B904 00D2                          7310+         lgr   13,2                set real frame pointer               01-DCCPR
000050C2 B904 00CF                          7311+         lgr   12,15               set base reg                         01-DCCPR
                        00005088            7312+         using @REGION_989_1,12                                         01-DCCPR
                                            7313          DCCPRV REG=5      ; Get PRV from DVT
000050C6 E350 B008 0004          00000008   7314+         LG 5,8(0,11)                                                   01-DCCPR
                                            7315 * ******* End of Prologue
                                            7316 * *
                                            7317 * ***           rd_hdr_histogram_t *hdr;
                                            7318 * ***           const int64_t input[] = { (int64_t)1e8, (int64_t)2e7, \
                                            7319 * (int64_t)3e7 };
000050CC C0FF 05F5 E100                     7320          LLILF 15,X'05F5E100' ; 100000000
000050D2 E3F0 D0A8 0024          000000A8   7321          STG   15,168(0,13)
000050D8 C01F 0131 2D00                     7322          LLILF 1,X'01312D00' ; 20000000
000050DE E310 D0B0 0024          000000B0   7323          STG   1,176(0,13)
000050E4 C02F 01C9 C380                     7324          LLILF 2,X'01C9C380' ; 30000000
000050EA E320 D0B8 0024          000000B8   7325          STG   2,184(0,13)
                                            7326 * ***           const struct {
                                            7327 * ***                   double  q;
                                            7328 * ***                   int64_t v;
                                            7329 * ***           } exp[] = {
                                            7330 * ***                   { 50,    33554431 },
000050F0 68F0 C100               00005188   7331          LD    15,@lit_989_508
000050F4 60F0 D0C0               000000C0   7332          STD   15,192(0,13)
000050F8 C02F 01FF FFFF                     7333          LLILF 2,X'01FFFFFF' ; 33554431
000050FE E320 D0C8 0024          000000C8   7334          STG   2,200(0,13)
                                            7335 * ***                   { 83.33, 33554431 },
                                                                                                                           Page  147 
  Active Usings: @REGION_989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005104 68F0 C0F8               00005180   7336          LD    15,@lit_989_510
00005108 60F0 D0D0               000000D0   7337          STD   15,208(0,13)
0000510C E320 D0D8 0024          000000D8   7338          STG   2,216(0,13)
                                            7339 * ***                   { 83.34, 100663295 },
00005112 68F0 C0F0               00005178   7340          LD    15,@lit_989_512
00005116 60F0 D0E0               000000E0   7341          STD   15,224(0,13)
0000511A C02F 05FF FFFF                     7342          LLILF 2,X'05FFFFFF' ; 100663295
00005120 E320 D0E8 0024          000000E8   7343          STG   2,232(0,13)
                                            7344 * ***                   { 99,    100663295 },
00005126 68F0 C0E8               00005170   7345          LD    15,@lit_989_514
0000512A 60F0 D0F0               000000F0   7346          STD   15,240(0,13)
0000512E E320 D0F8 0024          000000F8   7347          STG   2,248(0,13)
                                            7348 * ***           };
                                            7349 * ***           size_t i;
                                            7350 * ***
                                            7351 * ***           hdr = rd_hdr_histogram_new((int64_t)2e7, (int64_t)1e8,\
                                            7352 *  5);
00005134 E310 D100 0024          00000100   7353          STG   1,256(0,13)
0000513A E3F0 D108 0024          00000108   7354          STG   15,264(0,13)
00005140 E548 D110 0005          00000110   7355          MVGHI 272(13),5
00005146 4110 D100               00000100   7356          LA    1,256(0,13)
0000514A E3F0 C0E0 0004          00005168   7357          LG    15,@lit_989_518 ; rd_hdr_histogram_new
00005150                                    7358 @@gen_label483 DS    0H
00005150 05EF                               7359          BALR  14,15
00005152                                    7360 @@gen_label484 DS    0H
00005152 B904 003F                          7361          LGR   3,15
                                            7362 * ***
                                            7363 * ***           for (i = 0 ; i < (sizeof((input)) / sizeof(*(input))) \
                                            7364 * ; i++) {
00005156 A729 0000               00000000   7365          LGHI  2,0         ; 0
0000515A 47F0 C26C               000052F4   7366          B     @L326
00005160                                    7367          DS    0D
00005160 00000128                           7368 @FRAMESIZE_989 DC F'296'
00005164 00000000
00005168 0000000000000488                   7369 @lit_989_518 DC AD(rd_hdr_histogram_new)
00005170                                    7370          DS 0D
00005170 4263000000000000                   7371 @lit_989_514 DC XL8'4263000000000000'
00005178                                    7372          DS 0D
00005178 4253570A3D70A3D7                   7373 @lit_989_512 DC XL8'4253570A3D70A3D7'
00005180                                    7374          DS 0D
00005180 4253547AE147AE14                   7375 @lit_989_510 DC XL8'4253547AE147AE14'
00005188                                    7376          DS 0D
00005188 4232000000000000                   7377 @lit_989_508 DC XL8'4232000000000000'
00005190 0000000000001EB8                   7378 @lit_989_520 DC AD(rd_hdr_histogram_record)
00005198 0000000000000000                   7379 @lit_989_524 DC AD(fprintf)
000051A0 00000000000056F0                   7380 @lit_989_523 DC AD(@DATA)
000051A8 00000000000057E8                   7381 @lit_989_522 DC AD(@strings@)
000051B0 00000000                           7382 @lit_989_521 DC Q(__stderrp)
000051B4 00000000                           7383 @lit_989_529 DC Q(rd_unittest_assert_on_failure)
000051B8 0000000000000000                   7384 @lit_989_530 DC AD(__assert)
000051C0 0000000000002050                   7385 @lit_989_533 DC AD(rd_hdr_histogram_quantile)
000051C8 0000000000000370                   7386 @lit_989_545 DC AD(rd_hdr_histogram_destroy)
                                                                                                                           Page  148 
  Active Usings: @REGION_989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000051D0                                    7387 @L325    DS    0H
                                            7388 * ***
                                            7389 * ***                   int r = rd_hdr_histogram_record(hdr, input[i])\
                                            7390 * ;
000051D0 E330 D100 0024          00000100   7391          STG   3,256(0,13)
000051D6 EBF2 0003 000D          00000003   7392          SLLG  15,2,3(0)   ; *0x8
000051DC E3FF D0A8 0004          000000A8   7393          LG    15,168(15,13)
000051E2 E3F0 D108 0024          00000108   7394          STG   15,264(0,13)
000051E8 4110 D100               00000100   7395          LA    1,256(0,13)
000051EC E3F0 C108 0004          00005190   7396          LG    15,@lit_989_520 ; rd_hdr_histogram_record
000051F2                                    7397 @@gen_label485 DS    0H
000051F2 05EF                               7398          BALR  14,15
000051F4                                    7399 @@gen_label486 DS    0H
000051F4 184F                               7400          LR    4,15
                                            7401 * ***                   do { if (!(r)) { fprintf(__stderrp, "\033[31mR\
                                            7402 * DUT: FAIL: %s:%d: %s: " "assert failed: " "r" ": ", "C:\\asgkafka\\l\
                                            7403 * ibrdkafka\\src\\rdhdrhistogram.c", 694, __FUNCTION__); fprintf(__std\
                                            7404 * errp, "record(%" "lld" ") failed\n", input[i]); fprintf(__stderrp, "\
                                            7405 * \033[0m\n"); if (rd_unittest_assert_on_failure) ((r) ? (void)0 : __a\
                                            7406 * ssert(__func__, "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 6\
                                            7407 * 94, "r")); return 1; } } while (0);
000051F6                                    7408 @L329    DS    0H
000051F6 1244                               7409          LTR   4,4
000051F8 4770 C268               000052F0   7410          BNZ   @L332
000051FC E330 C128 0016          000051B0   7411          LLGF  3,@lit_989_521 ; __stderrp
00005202 E3F3 5000 0004          00000000   7412          LG    15,0(3,5)   ; __stderrp
00005208 E3F0 D100 0024          00000100   7413          STG   15,256(0,13)
0000520E E360 C120 0004          000051A8   7414          LG    6,@lit_989_522
00005214 41F0 60D2               000000D2   7415          LA    15,210(0,6)
00005218 E3F0 D108 0024          00000108   7416          STG   15,264(0,13)
0000521E 41F0 6058               00000058   7417          LA    15,88(0,6)
00005222 E3F0 D110 0024          00000110   7418          STG   15,272(0,13)
00005228 E548 D118 02B6          00000118   7419          MVGHI 280(13),694
0000522E E370 C118 0004          000051A0   7420          LG    7,@lit_989_523
00005234 41F0 70DE               000000DE   7421          LA    15,222(0,7)
00005238 E3F0 D120 0024          00000120   7422          STG   15,288(0,13)
0000523E 4110 D100               00000100   7423          LA    1,256(0,13)
00005242 E380 C110 0004          00005198   7424          LG    8,@lit_989_524 ; fprintf
00005248 B904 00F8                          7425          LGR   15,8
0000524C                                    7426 @@gen_label488 DS    0H
0000524C 05EF                               7427          BALR  14,15
0000524E                                    7428 @@gen_label489 DS    0H
0000524E E3F3 5000 0004          00000000   7429          LG    15,0(3,5)   ; __stderrp
00005254 E3F0 D100 0024          00000100   7430          STG   15,256(0,13)
0000525A 41F0 6102               00000102   7431          LA    15,258(0,6)
0000525E E3F0 D108 0024          00000108   7432          STG   15,264(0,13)
00005264 EBF2 0003 000D          00000003   7433          SLLG  15,2,3(0)   ; *0x8
0000526A E3FF D0A8 0004          000000A8   7434          LG    15,168(15,13)
00005270 E3F0 D110 0024          00000110   7435          STG   15,272(0,13)
00005276 4110 D100               00000100   7436          LA    1,256(0,13)
0000527A B904 00F8                          7437          LGR   15,8
0000527E                                    7438 @@gen_label490 DS    0H
                                                                                                                           Page  149 
  Active Usings: @REGION_989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000527E 05EF                               7439          BALR  14,15
00005280                                    7440 @@gen_label491 DS    0H
00005280 E3F3 5000 0004          00000000   7441          LG    15,0(3,5)   ; __stderrp
00005286 E3F0 D100 0024          00000100   7442          STG   15,256(0,13)
0000528C 41F0 60A2               000000A2   7443          LA    15,162(0,6)
00005290 E3F0 D108 0024          00000108   7444          STG   15,264(0,13)
00005296 4110 D100               00000100   7445          LA    1,256(0,13)
0000529A B904 00F8                          7446          LGR   15,8
0000529E                                    7447 @@gen_label492 DS    0H
0000529E 05EF                               7448          BALR  14,15
000052A0                                    7449 @@gen_label493 DS    0H
000052A0 E3F0 C12C 0016          000051B4   7450          LLGF  15,@lit_989_529 ; rd_unittest_assert_on_failure
000052A6 41FF 5000               00000000   7451          LA    15,0(15,5)
000052AA 9500 F000      00000000 00000000   7452          CLI   0(15),0
000052AE 4780 C260               000052E8   7453          BE    @L333
000052B2 1244                               7454          LTR   4,4
000052B4 4770 C260               000052E8   7455          BNZ   @L333
000052B8                                    7456 @L334    DS    0H
000052B8 41F0 70DE               000000DE   7457          LA    15,222(0,7)
000052BC E3F0 D100 0024          00000100   7458          STG   15,256(0,13)
000052C2 41F0 6058               00000058   7459          LA    15,88(0,6)
000052C6 E3F0 D108 0024          00000108   7460          STG   15,264(0,13)
000052CC E548 D110 02B6          00000110   7461          MVGHI 272(13),694
000052D2 41F0 6118               00000118   7462          LA    15,280(0,6)
000052D6 E3F0 D118 0024          00000118   7463          STG   15,280(0,13)
000052DC 4110 D100               00000100   7464          LA    1,256(0,13)
000052E0 E3F0 C130 0004          000051B8   7465          LG    15,@lit_989_530 ; __assert
000052E6                                    7466 @@gen_label496 DS    0H
000052E6 05EF                               7467          BALR  14,15
000052E8                                    7468 @@gen_label497 DS    0H
000052E8                                    7469 @L335    DS    0H
000052E8                                    7470 @L333    DS    0H
000052E8 A7F9 0001               00000001   7471          LGHI  15,1        ; 1
000052EC 47F0 C43A               000054C2   7472          B     @ret_lab_989
000052F0                                    7473 @L332    DS    0H
                                            7474 * ***           }
000052F0 A72B 0001               00000001   7475          AGHI  2,1
000052F4                                    7476 @L326    DS    0H
000052F4 C22E 0000 0003                     7477          CLGFI 2,X'00000003'
000052FA 4740 C148               000051D0   7478          BL    @L325
                                            7479 * ***
                                            7480 * ***           for (i =  0 ; i < (sizeof((exp)) / sizeof(*(exp))) ; i\
                                            7481 * ++) {
000052FE A729 0000               00000000   7482          LGHI  2,0         ; 0
00005302 47F0 C3CC               00005454   7483          B     @L337
00005306                                    7484 @L336    DS    0H
                                            7485 * ***                   int64_t v = rd_hdr_histogram_quantile(hdr, exp\
                                            7486 * [i].q);
00005306 E330 D100 0024          00000100   7487          STG   3,256(0,13)
0000530C EBF2 0004 000D          00000004   7488          SLLG  15,2,4(0)   ; *0x10
00005312 41FF D0C0               000000C0   7489          LA    15,192(15,13)
00005316 D207 D108 F000 00000108 00000000   7490          MVC   264(8,13),0(15)
                                                                                                                           Page  150 
  Active Usings: @REGION_989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
0000531C 4110 D100               00000100   7491          LA    1,256(0,13)
00005320 E3F0 C138 0004          000051C0   7492          LG    15,@lit_989_533 ; rd_hdr_histogram_quantile
00005326                                    7493 @@gen_label499 DS    0H
00005326 05EF                               7494          BALR  14,15
00005328                                    7495 @@gen_label500 DS    0H
00005328 B904 004F                          7496          LGR   4,15
                                            7497 * ***                   do { if (!(v == exp[i].v)) { fprintf(__stderrp\
                                            7498 * , "\033[31mRDUT: FAIL: %s:%d: %s: " "assert failed: " "v == exp[i].v\
                                            7499 * " ": ", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 699, __FU\
                                            7500 * NCTION__); fprintf(__stderrp, "P%.2f is %" "lld" ", expected %" "lld\
                                            7501 * ", exp[i].q, v, exp[i].v); fprintf(__stderrp, "\033[0m\n"); if (rd_u\
                                            7502 * nittest_assert_on_failure) ((v == exp[i].v) ? (void)0 : __assert(__f\
                                            7503 * unc__, "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 699, "v ==\
                                            7504 *  exp[i].v")); return 1; } } while (0);
0000532C                                    7505 @L340    DS    0H
0000532C EBF2 0004 000D          00000004   7506          SLLG  15,2,4(0)   ; *0x10
00005332 E34F D0C8 0020          000000C8   7507          CG    4,200(15,13)
00005338 4780 C3C8               00005450   7508          BE    @L343
0000533C E330 C128 0016          000051B0   7509          LLGF  3,@lit_989_521 ; __stderrp
00005342 E3F3 5000 0004          00000000   7510          LG    15,0(3,5)   ; __stderrp
00005348 E3F0 D100 0024          00000100   7511          STG   15,256(0,13)
0000534E E360 C120 0004          000051A8   7512          LG    6,@lit_989_522
00005354 41F0 611A               0000011A   7513          LA    15,282(0,6)
00005358 E3F0 D108 0024          00000108   7514          STG   15,264(0,13)
0000535E 41F0 6058               00000058   7515          LA    15,88(0,6)
00005362 E3F0 D110 0024          00000110   7516          STG   15,272(0,13)
00005368 E548 D118 02BB          00000118   7517          MVGHI 280(13),699
0000536E E370 C118 0004          000051A0   7518          LG    7,@lit_989_523
00005374 41F0 70DE               000000DE   7519          LA    15,222(0,7)
00005378 E3F0 D120 0024          00000120   7520          STG   15,288(0,13)
0000537E 4110 D100               00000100   7521          LA    1,256(0,13)
00005382 E380 C110 0004          00005198   7522          LG    8,@lit_989_524 ; fprintf
00005388 B904 00F8                          7523          LGR   15,8
0000538C                                    7524 @@gen_label502 DS    0H
0000538C 05EF                               7525          BALR  14,15
0000538E                                    7526 @@gen_label503 DS    0H
0000538E E3F3 5000 0004          00000000   7527          LG    15,0(3,5)   ; __stderrp
00005394 E3F0 D100 0024          00000100   7528          STG   15,256(0,13)
0000539A 41F0 6156               00000156   7529          LA    15,342(0,6)
0000539E E3F0 D108 0024          00000108   7530          STG   15,264(0,13)
000053A4 EBF2 0004 000D          00000004   7531          SLLG  15,2,4(0)   ; *0x10
000053AA 41FF D0C0               000000C0   7532          LA    15,192(15,13)
000053AE D207 D110 F000 00000110 00000000   7533          MVC   272(8,13),0(15)
000053B4 E340 D118 0024          00000118   7534          STG   4,280(0,13)
000053BA EBF2 0004 000D          00000004   7535          SLLG  15,2,4(0)   ; *0x10
000053C0 E3FF D0C8 0004          000000C8   7536          LG    15,200(15,13)
000053C6 E3F0 D120 0024          00000120   7537          STG   15,288(0,13)
000053CC 4110 D100               00000100   7538          LA    1,256(0,13)
000053D0 B904 00F8                          7539          LGR   15,8
000053D4                                    7540 @@gen_label504 DS    0H
000053D4 05EF                               7541          BALR  14,15
000053D6                                    7542 @@gen_label505 DS    0H
                                                                                                                           Page  151 
  Active Usings: @REGION_989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000053D6 E3F3 5000 0004          00000000   7543          LG    15,0(3,5)   ; __stderrp
000053DC E3F0 D100 0024          00000100   7544          STG   15,256(0,13)
000053E2 41F0 60A2               000000A2   7545          LA    15,162(0,6)
000053E6 E3F0 D108 0024          00000108   7546          STG   15,264(0,13)
000053EC 4110 D100               00000100   7547          LA    1,256(0,13)
000053F0 B904 00F8                          7548          LGR   15,8
000053F4                                    7549 @@gen_label506 DS    0H
000053F4 05EF                               7550          BALR  14,15
000053F6                                    7551 @@gen_label507 DS    0H
000053F6 E3F0 C12C 0016          000051B4   7552          LLGF  15,@lit_989_529 ; rd_unittest_assert_on_failure
000053FC 41FF 5000               00000000   7553          LA    15,0(15,5)
00005400 9500 F000      00000000 00000000   7554          CLI   0(15),0
00005404 4780 C3C0               00005448   7555          BE    @L344
00005408 EBF2 0004 000D          00000004   7556          SLLG  15,2,4(0)   ; *0x10
0000540E E34F D0C8 0020          000000C8   7557          CG    4,200(15,13)
00005414 4780 C3C0               00005448   7558          BE    @L344
00005418                                    7559 @L345    DS    0H
00005418 41F0 70DE               000000DE   7560          LA    15,222(0,7)
0000541C E3F0 D100 0024          00000100   7561          STG   15,256(0,13)
00005422 41F0 6058               00000058   7562          LA    15,88(0,6)
00005426 E3F0 D108 0024          00000108   7563          STG   15,264(0,13)
0000542C E548 D110 02BB          00000110   7564          MVGHI 272(13),699
00005432 41F0 6174               00000174   7565          LA    15,372(0,6)
00005436 E3F0 D118 0024          00000118   7566          STG   15,280(0,13)
0000543C 4110 D100               00000100   7567          LA    1,256(0,13)
00005440 E3F0 C130 0004          000051B8   7568          LG    15,@lit_989_530 ; __assert
00005446                                    7569 @@gen_label510 DS    0H
00005446 05EF                               7570          BALR  14,15
00005448                                    7571 @@gen_label511 DS    0H
00005448                                    7572 @L346    DS    0H
00005448                                    7573 @L344    DS    0H
00005448 A7F9 0001               00000001   7574          LGHI  15,1        ; 1
0000544C 47F0 C43A               000054C2   7575          B     @ret_lab_989
00005450                                    7576 @L343    DS    0H
                                            7577 * ***
                                            7578 * ***
                                            7579 * ***           }
00005450 A72B 0001               00000001   7580          AGHI  2,1
00005454                                    7581 @L337    DS    0H
00005454 C22E 0000 0004                     7582          CLGFI 2,X'00000004'
0000545A 4740 C27E               00005306   7583          BL    @L336
                                            7584 * ***
                                            7585 * ***           rd_hdr_histogram_destroy(hdr);
0000545E E330 D100 0024          00000100   7586          STG   3,256(0,13)
00005464 4110 D100               00000100   7587          LA    1,256(0,13)
00005468 E3F0 C140 0004          000051C8   7588          LG    15,@lit_989_545 ; rd_hdr_histogram_destroy
0000546E                                    7589 @@gen_label513 DS    0H
0000546E 05EF                               7590          BALR  14,15
00005470                                    7591 @@gen_label514 DS    0H
                                            7592 * ***           do { fprintf(__stderrp, "\033[32mRDUT: PASS: %s:%d: %s\
                                            7593 * \033[0m\n", "C:\\asgkafka\\librdkafka\\src\\rdhdrhistogram.c", 705, \
                                            7594 * __FUNCTION__); return 0; } while (0);
                                                                                                                           Page  152 
  Active Usings: @REGION_989_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005470                                    7595 @L347    DS    0H
00005470 E3F0 C128 0016          000051B0   7596          LLGF  15,@lit_989_521 ; __stderrp
00005476 E3FF 5000 0004          00000000   7597          LG    15,0(15,5)  ; __stderrp
0000547C E3F0 D100 0024          00000100   7598          STG   15,256(0,13)
00005482 E3F0 C120 0004          000051A8   7599          LG    15,@lit_989_522
00005488 4110 F0B2               000000B2   7600          LA    1,178(0,15)
0000548C E310 D108 0024          00000108   7601          STG   1,264(0,13)
00005492 41F0 F058               00000058   7602          LA    15,88(0,15)
00005496 E3F0 D110 0024          00000110   7603          STG   15,272(0,13)
0000549C E548 D118 02C1          00000118   7604          MVGHI 280(13),705
000054A2 E3F0 C118 0004          000051A0   7605          LG    15,@lit_989_523
000054A8 41F0 F0DE               000000DE   7606          LA    15,222(0,15)
000054AC E3F0 D120 0024          00000120   7607          STG   15,288(0,13)
000054B2 4110 D100               00000100   7608          LA    1,256(0,13)
000054B6 E3F0 C110 0004          00005198   7609          LG    15,@lit_989_524 ; fprintf
000054BC                                    7610 @@gen_label515 DS    0H
000054BC 05EF                               7611          BALR  14,15
000054BE                                    7612 @@gen_label516 DS    0H
000054BE A7F9 0000               00000000   7613          LGHI  15,0        ; 0
                                            7614 * ***   }
000054C2                                    7615 @ret_lab_989 DS 0H
                                            7616 * * **** Start of Epilogue
                                            7617          DCCEPIL
000054C2                                    7618+         ds 0h                                                          01-DCCEP
                                            7619+* Epilog
000054C2 D707 D088 D088 00000088 00000088   7620+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
000054C8 E3D0 D080 0004          00000080   7621+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
000054CE E3C0 D090 0004          00000090   7622+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
000054D4 E3B0 C018 0004          00000018   7623+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
000054DA E3C0 B010 0021          00000010   7624+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
000054E0 E3E0 D008 0004          00000008   7625+         lg  14,8(0,13)          load up return address                 01-DCCEP
000054E6 EB1C D020 0004          00000020   7626+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
000054EC 078E                               7627+         bcr 8,14                if same dsab, just return              01-DCCEP
000054EE E3F0 D010 0024          00000010   7628+         stg 15,16(0,13)         save return code                       01-DCCEP
000054F4 E300 D018 0024          00000018   7629+         stg 0,24(0,13)          save more return code                  01-DCCEP
000054FA E3F0 D090 0004          00000090   7630+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005500 E3F0 F018 0004          00000018   7631+         lg  15,24(0,15)         load dvt address                       01-DCCEP
00005506 47F0 F040               00000040   7632+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7633+* End of Epilog
                                            7634 * * **** End of Epilogue
                                            7635          DROP  12
                                            7636 *
                                            7637 *   DSECT for automatic variables in "ut_subbucketmask_overflow"
                                            7638 *      (FUNCTION #989)
                                            7639 *
00000000                00000000 00000100   7640 @AUTO#ut_subbucketmask_overflow DSECT
00000000                                    7641          DS    XL168
000000A8                                    7642 ut_subbucketmask_overflow#v#4 DS 8XL1 ; v
000000B0                000000B0 000000A8   7643          ORG   @AUTO#ut_subbucketmask_overflow+168
000000A8                                    7644 ut_subbucketmask_overflow#r#1 DS 1F ; r
000000AC                000000AC 000000A8   7645          ORG   @AUTO#ut_subbucketmask_overflow+168
000000A8                                    7646 ut_subbucketmask_overflow#i#0 DS 8XL1 ; i
                                                                                                                           Page  153 
  Active Usings: None
D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000000B0                000000B0 000000A8   7647          ORG   @AUTO#ut_subbucketmask_overflow+168
000000A8                                    7648 ut_subbucketmask_overflow#input#0 DS 24XL1 ; input
000000C0                000000C0 000000C0   7649          ORG   @AUTO#ut_subbucketmask_overflow+192
000000C0                                    7650 ut_subbucketmask_overflow#exp#0 DS 64XL1 ; exp
                                            7651 *
0000550A                00000000 000056F0   7652 @CODE    CSECT
                                            7653 *
                                            7654 *
                                            7655 *
                                            7656 * ....... start of unittest_rdhdrhistogram
                                            7657 unittest_rdhdrhistogram ALIAS X'A49589A3A385A2A36D99848884998889A2A3968*
                                                                7998194'
0000550A                                    7658 @LNAME961 DS   0H
0000550A 00000017                           7659          DC    X'00000017'
0000550E A49589A3A385A2A3                   7660          DC    C'unittest_rdhdrhistogram'
00005525 00                                 7661          DC    X'00'
                                            7662 unittest_rdhdrhistogram DCCPRLG CINDEX=961,BASER=12,FRAME=176,ENTRY=YES*
                                                                ,ARCH=ZARCH,LNAMEADDR=@LNAME961
                                            7663          macro
                                            7664          dccextrn &m
                                            7665          gblc    &$dccext(1000)
                                            7666          gbla    &$dccexti
                                            7667          lcla    &i
                                            7668 &$dccext(&$dccexti+1) setc    '&m'
                                            7669 &i       seta    1
                                            7670 .loop    aif    (&i gt &$dccexti).around
                                            7671          aif    ('&$dccext(&i)' eq '&m').getout
                                            7672 &i       seta    &i+1
                                            7673          ago     .loop
                                            7674 .around  anop
                                            7675 &$dccexti seta &$dccexti+1
                                            7676          extrn  &m
                                            7677 .getout  anop
                                            7678          mend
00005528                                    7679+$eye0129    ds    0d                                                    02-DCCCA
00005528 C4C3C3                             7680+         dc cl3'DCC'                                                    02-DCCCA
0000552B 01                                 7681+         dc xl1'01' format one                                          02-DCCCA
0000552C 00000000                           7682+         dc a(0)                                                        02-DCCCA
00005530 000000000000559A                   7683+         dc ad(@PER_961)                                                02-DCCCA
00005538 00000000000000B0                   7684+         dc ad(176)                                                     02-DCCCA
00005540 0000000000000000                   7685+         dc ad(0)                                                       02-DCCCA
00005548 0000000000001000                   7686+         dc ad(4096)                                                    02-DCCCA
00005550 20                                 7687+         dc bl.4'0010',bl.2'00',bl.2'00'                                02-DCCCA
00005551 03                                 7688+         dc bl.3'000',bl.1'0',bl.4'0011'                                02-DCCCA
00005552 03                                 7689+         dc al1(3)                                                      02-DCCCA
00005553 08                                 7690+         dc al.4(0000),bl.4'1000'                                       02-DCCCA
00005554 00                                 7691+         dc bl.8'00000000'                                              02-DCCCA
00005555 000000                             7692+         dc al3(0)                                                      02-DCCCA
00005558 000000000000550A                   7693+         dc ad(@LNAME961)                                               02-DCCCA
00005560                                    7694+         ds 0d                                                          02-DCCCA
00005560 0000000000005528                   7695+         dc ad($eye0129)                                                02-DCCCA
00005568 0000000000000000                   7696+         dc ad(0)                                                       02-DCCCA
                                                                                                                           Page  154 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005570                                    7697+         ds    0d                                                       01-DCCPR
                                            7698+         entry unittest_rdhdrhistogram                                  01-DCCPR
00005570                                    7699+unittest_rdhdrhistogram ds 0d                                           01-DCCPR
00005570                                    7700+@REGION_961_1 ds 0h                                                     01-DCCPR
00005570 EBEC D008 0024          00000008   7701+         stmg  14,12,8(13)                         Save regs            01-DCCPR
00005576 E3E0 D088 0004          00000088   7702+         lg    14,17*8(0,13)       addr of next savearea                01-DCCPR
0000557C E3C0 D090 0004          00000090   7703+         lg    12,18*8(0,13)       addr of DSAB                         01-DCCPR
00005582 B904 002E                          7704+         lgr   2,14                copy addr of our savearea            01-DCCPR
00005586 E3B0 C018 0004          00000018   7705+         lg    11,24(0,12)         get dvt address                      01-DCCPR
0000558C A7EB 00B0               000000B0   7706+         aghi  14,176              increase by frame size               01-DCCPR
00005590 E3E0 C020 0021          00000020   7707+         clg   14,32(0,12)  Will this DSAB hold this stack frame?       01-DCCPR
00005596 4720 B020               00000020   7708+         bc    2,32(0,11)          goto prolog expansion                01-DCCPR
0000559A                                    7709+@PER_961 ds    0h                                                       01-DCCPR
0000559A EBDE 2080 0024          00000080   7710+         stmg  13,14,16*8(2)       back/forwards sa                     01-DCCPR
000055A0 E3C0 2090 0024          00000090   7711+         stg   12,18*8(0,2)        dsab sa                              01-DCCPR
000055A6 B904 00D2                          7712+         lgr   13,2                set real frame pointer               01-DCCPR
000055AA B904 00CF                          7713+         lgr   12,15               set base reg                         01-DCCPR
                        00005570            7714+         using @REGION_961_1,12                                         01-DCCPR
                                            7715 * ******* End of Prologue
                                            7716 * *
                                            7717 * ***           int fails = 0;
000055AE A728 0000               00000000   7718          LHI   2,0         ; 0
                                            7719 * ***
                                            7720 * ***           fails += ut_high_sigfig();
000055B2 E3F0 C118 0004          00005688   7721          LG    15,@lit_961_553 ; ut_high_sigfig
000055B8                                    7722 @@gen_label517 DS    0H
000055B8 05EF                               7723          BALR  14,15
000055BA                                    7724 @@gen_label518 DS    0H
000055BA 1A2F                               7725          AR    2,15
                                            7726 * ***           fails += ut_quantile();
000055BC E3F0 C120 0004          00005690   7727          LG    15,@lit_961_554 ; ut_quantile
000055C2                                    7728 @@gen_label519 DS    0H
000055C2 05EF                               7729          BALR  14,15
000055C4                                    7730 @@gen_label520 DS    0H
000055C4 1A2F                               7731          AR    2,15
                                            7732 * ***           fails += ut_mean();
000055C6 E3F0 C128 0004          00005698   7733          LG    15,@lit_961_555 ; ut_mean
000055CC                                    7734 @@gen_label521 DS    0H
000055CC 05EF                               7735          BALR  14,15
000055CE                                    7736 @@gen_label522 DS    0H
000055CE 1A2F                               7737          AR    2,15
                                            7738 * ***           fails += ut_stddev();
000055D0 E3F0 C130 0004          000056A0   7739          LG    15,@lit_961_556 ; ut_stddev
000055D6                                    7740 @@gen_label523 DS    0H
000055D6 05EF                               7741          BALR  14,15
000055D8                                    7742 @@gen_label524 DS    0H
000055D8 1A2F                               7743          AR    2,15
                                            7744 * ***           fails += ut_totalcount();
000055DA E3F0 C138 0004          000056A8   7745          LG    15,@lit_961_557 ; ut_totalcount
000055E0                                    7746 @@gen_label525 DS    0H
000055E0 05EF                               7747          BALR  14,15
000055E2                                    7748 @@gen_label526 DS    0H
                                                                                                                           Page  155 
  Active Usings: @REGION_961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
000055E2 1A2F                               7749          AR    2,15
                                            7750 * ***           fails += ut_max();
000055E4 E3F0 C140 0004          000056B0   7751          LG    15,@lit_961_558 ; ut_max
000055EA                                    7752 @@gen_label527 DS    0H
000055EA 05EF                               7753          BALR  14,15
000055EC                                    7754 @@gen_label528 DS    0H
000055EC 1A2F                               7755          AR    2,15
                                            7756 * ***           fails += ut_min();
000055EE E3F0 C148 0004          000056B8   7757          LG    15,@lit_961_559 ; ut_min
000055F4                                    7758 @@gen_label529 DS    0H
000055F4 05EF                               7759          BALR  14,15
000055F6                                    7760 @@gen_label530 DS    0H
000055F6 1A2F                               7761          AR    2,15
                                            7762 * ***           fails += ut_reset();
000055F8 E3F0 C150 0004          000056C0   7763          LG    15,@lit_961_560 ; ut_reset
000055FE                                    7764 @@gen_label531 DS    0H
000055FE 05EF                               7765          BALR  14,15
00005600                                    7766 @@gen_label532 DS    0H
00005600 1A2F                               7767          AR    2,15
                                            7768 * ***           fails += ut_nan();
00005602 E3F0 C158 0004          000056C8   7769          LG    15,@lit_961_561 ; ut_nan
00005608                                    7770 @@gen_label533 DS    0H
00005608 05EF                               7771          BALR  14,15
0000560A                                    7772 @@gen_label534 DS    0H
0000560A 1A2F                               7773          AR    2,15
                                            7774 * ***           fails += ut_sigfigs();
0000560C E3F0 C160 0004          000056D0   7775          LG    15,@lit_961_562 ; ut_sigfigs
00005612                                    7776 @@gen_label535 DS    0H
00005612 05EF                               7777          BALR  14,15
00005614                                    7778 @@gen_label536 DS    0H
00005614 1A2F                               7779          AR    2,15
                                            7780 * ***           fails += ut_minmax_trackable();
00005616 E3F0 C168 0004          000056D8   7781          LG    15,@lit_961_563 ; ut_minmax_trackable
0000561C                                    7782 @@gen_label537 DS    0H
0000561C 05EF                               7783          BALR  14,15
0000561E                                    7784 @@gen_label538 DS    0H
0000561E 1A2F                               7785          AR    2,15
                                            7786 * ***           fails += ut_unitmagnitude_overflow();
00005620 E3F0 C170 0004          000056E0   7787          LG    15,@lit_961_564 ; ut_unitmagnitude_overflow
00005626                                    7788 @@gen_label539 DS    0H
00005626 05EF                               7789          BALR  14,15
00005628                                    7790 @@gen_label540 DS    0H
00005628 1A2F                               7791          AR    2,15
                                            7792 * ***           fails += ut_subbucketmask_overflow();
0000562A E3F0 C178 0004          000056E8   7793          LG    15,@lit_961_565 ; ut_subbucketmask_overflow
00005630                                    7794 @@gen_label541 DS    0H
00005630 05EF                               7795          BALR  14,15
00005632                                    7796 @@gen_label542 DS    0H
00005632 1A2F                               7797          AR    2,15
                                            7798 * ***
                                            7799 * ***           return fails;
00005634 B914 00F2                          7800          LGFR  15,2
                                                                                                                           Page  156 
  Active Usings: @REGION_961_1,R12  
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            7801 * ***   }
                                            7802 * * **** Start of Epilogue
                                            7803          DCCEPIL
00005638                                    7804+         ds 0h                                                          01-DCCEP
                                            7805+* Epilog
00005638 D707 D088 D088 00000088 00000088   7806+         xc  17*8(8,13),17*8(13)             clear next DSA             01-DCCEP
0000563E E3D0 D080 0004          00000080   7807+         lg  13,16*8(0,13)       get the prev DSA                       01-DCCEP
00005644 E3C0 D090 0004          00000090   7808+         lg  12,18*8(0,13)       get the DSAB ptr                       01-DCCEP
0000564A E3B0 C018 0004          00000018   7809+         lg  11,24(0,12)         fetch dvt                              01-DCCEP
00005650 E3C0 B010 0021          00000010   7810+         clg 12,16(0,11)         does the dsab change?                  01-DCCEP
00005656 E3E0 D008 0004          00000008   7811+         lg  14,8(0,13)          load up return address                 01-DCCEP
0000565C EB1C D020 0004          00000020   7812+         lmg 1,12,32(13)         load rest of regs                      01-DCCEP
00005662 078E                               7813+         bcr 8,14                if same dsab, just return              01-DCCEP
00005664 E3F0 D010 0024          00000010   7814+         stg 15,16(0,13)         save return code                       01-DCCEP
0000566A E300 D018 0024          00000018   7815+         stg 0,24(0,13)          save more return code                  01-DCCEP
00005670 E3F0 D090 0004          00000090   7816+         lg  15,18*8(0,13)       load dsab address                      01-DCCEP
00005676 E3F0 F018 0004          00000018   7817+         lg  15,24(0,15)         load dvt address                       01-DCCEP
0000567C 47F0 F040               00000040   7818+         bc  15,64(0,15)         branch to contraction                  01-DCCEP
                                            7819+* End of Epilog
                                            7820 * * **** End of Epilogue
00005680                                    7821          DS    0D
00005680 000000B0                           7822 @FRAMESIZE_961 DC F'176'
00005684 00000000
00005688 0000000000002200                   7823 @lit_961_553 DC AD(ut_high_sigfig)
00005690 0000000000002598                   7824 @lit_961_554 DC AD(ut_quantile)
00005698 0000000000002A98                   7825 @lit_961_555 DC AD(ut_mean)
000056A0 0000000000002EE8                   7826 @lit_961_556 DC AD(ut_stddev)
000056A8 0000000000003358                   7827 @lit_961_557 DC AD(ut_totalcount)
000056B0 0000000000003740                   7828 @lit_961_558 DC AD(ut_max)
000056B8 0000000000003B38                   7829 @lit_961_559 DC AD(ut_min)
000056C0 0000000000003F28                   7830 @lit_961_560 DC AD(ut_reset)
000056C8 0000000000004330                   7831 @lit_961_561 DC AD(ut_nan)
000056D0 0000000000004718                   7832 @lit_961_562 DC AD(ut_sigfigs)
000056D8 00000000000049F8                   7833 @lit_961_563 DC AD(ut_minmax_trackable)
000056E0 0000000000004DC0                   7834 @lit_961_564 DC AD(ut_unitmagnitude_overflow)
000056E8 0000000000005088                   7835 @lit_961_565 DC AD(ut_subbucketmask_overflow)
                                            7836          DROP  12
                                            7837 *
                                            7838 *   DSECT for automatic variables in "unittest_rdhdrhistogram"
                                            7839 *      (FUNCTION #961)
                                            7840 *
00000000                00000000 000000AC   7841 @AUTO#unittest_rdhdrhistogram DSECT
00000000                                    7842          DS    XL168
000000A8                                    7843 unittest_rdhdrhistogram#fails#0 DS 1F ; fails
                                            7844 *
000056F0                00000000 000056F0   7845 @CODE    CSECT
                                            7846 @@STATIC ALIAS X'7C99848884998889A2A3968799819450'
                                            7847 @@STATIC DXD   64D
                                            7848 *
                                            7849 *  Non-Re-Entrant Data Section
                                            7850 *
000056F0                000056F0 000007C0   7851 @DATA    CSECT
                                                                                                                           Page  157 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                            7852 @DATA    RMODE ANY
                                            7853 @DATA    AMODE ANY
000056F0 99846D8381939396                   7854 @@T349   DC    X'99846D838193939683'               rd.calloc
000056F9 00                                 7855          DC    1X'00'
000056FA 99846D9481939396                   7856 @@T34D   DC    X'99846D948193939683'               rd.malloc
00005703 00                                 7857          DC    1X'00'
00005704 99846D9985819393                   7858 @@T352   DC    X'99846D99858193939683'             rd.realloc
0000570E 0000                               7859          DC    2X'00'
00005710 99846DA2A39984A4                   7860 @@T358   DC    X'99846DA2A39984A497'               rd.strdup
00005719 00                                 7861          DC    1X'00'
0000571A 99846DA2A3999584                   7862 @@T35D   DC    X'99846DA2A3999584A497'             rd.strndup
00005724 0000                               7863          DC    2X'00'
00005726 99846D9985868395                   7864 @@T365   DC    X'99846D9985868395A36DA2A482F0'     rd.refcnt.sub0
00005734 0000                               7865          DC    2X'00'
00005736 A4A36D888987886D                   7866 @@T49F   DC    X'A4A36D888987886DA28987868987'     ut.high.sigfig
00005744 0000                               7867          DC    2X'00'
00005746 A4A36D98A48195A3                   7868 @@T4A5   DC    X'A4A36D98A48195A3899385'           ut.quantile
00005751 00                                 7869          DC    1X'00'
00005752 A4A36D94858195                     7870 @@T4AD   DC    X'A4A36D94858195'                   ut.mean
00005759 00                                 7871          DC    1X'00'
0000575A A4A36DA2A3848485                   7872 @@T4B5   DC    X'A4A36DA2A3848485A5'               ut.stddev
00005763 00                                 7873          DC    1X'00'
00005764 A4A36DA396A38193                   7874 @@T4BB   DC    X'A4A36DA396A381938396A495A3'       ut.totalcount
00005771 00                                 7875          DC    1X'00'
00005772 A4A36D9481A7                       7876 @@T4C2   DC    X'A4A36D9481A7'                     ut.max
00005778 0000                               7877          DC    2X'00'
0000577A A4A36D948995                       7878 @@T4C9   DC    X'A4A36D948995'                     ut.min
00005780 0000                               7879          DC    2X'00'
00005782 A4A36D9985A285A3                   7880 @@T4D0   DC    X'A4A36D9985A285A3'                 ut.reset
0000578A 0000                               7881          DC    2X'00'
0000578C A4A36D958195                       7882 @@T4D4   DC    X'A4A36D958195'                     ut.nan
00005792 0000                               7883          DC    2X'00'
00005794 A4A36DA289878689                   7884 @@T4D8   DC    X'A4A36DA28987868987A2'             ut.sigfigs
0000579E 0000                               7885          DC    2X'00'
000057A0 A4A36D9489959481                   7886 @@T4DD   DC    X'A4A36D9489959481A76DA39981839281' ut.minmax.tracka
000057B0 829385                             7887          DC    X'829385'                           ble
000057B3 00                                 7888          DC    1X'00'
000057B4 A4A36DA49589A394                   7889 @@T4E1   DC    X'A4A36DA49589A39481879589A3A48485' ut.unitmagnitude
000057C4 6D96A58599869396                   7890          DC    X'6D96A58599869396A6'               .overflow
000057CD 00                                 7891          DC    1X'00'
000057CE A4A36DA2A48282A4                   7892 @@T4E8   DC    X'A4A36DA2A48282A4839285A39481A292' ut.subbucketmask
000057DE 6D96A58599869396                   7893          DC    X'6D96A58599869396A6'               .overflow
000057E7 00                                 7894          DC    1X'00'
000057E8                                    7895 @strings@ DS   0H
000057E8 C37AE081A2879281                   7896          DC    X'C37AE081A2879281869281E093898299' C..asgkafka.libr
000057F8 849281869281E0A2                   7897          DC    X'849281869281E0A29983E099844B8800' dkafka.src.rd.h.
00005808 97001BADF3F194D9                   7898          DC    X'97001BADF3F194D9C4E4E37A40C6C1C9' p...31mRDUT..FAI
00005818 D37A406CA27A6C84                   7899          DC    X'D37A406CA27A6C847A406CA27A4081A2' L...s..d...s..as
00005828 A28599A340868189                   7900          DC    X'A28599A3408681899385847A40A5407E' sert.failed..v..
00005838 7E4085A7977A4000                   7901          DC    X'7E4085A7977A4000C37AE081A2879281' ..exp...C..asgka
00005848 869281E093898299                   7902          DC    X'869281E093898299849281869281E0A2' fka.librdkafka.s
00005858 9983E09984888499                   7903          DC    X'9983E099848884998889A2A396879981' rc.rdhdrhistogra
                                                                                                                           Page  158 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005868 944B8300D4858489                   7904          DC    X'944B8300D485848981954089A2406C93' m.c.Median.is..l
00005878 93846B4085A79785                   7905          DC    X'93846B4085A7978583A38584406C9393' ld..expected..ll
00005888 84001BADF0941500                   7906          DC    X'84001BADF0941500A5407E7E4085A797' d...0m..v....exp
00005898 00001BADF3F294D9                   7907          DC    X'00001BADF3F294D9C4E4E37A40D7C1E2' ....32mRDUT..PAS
000058A8 E27A406CA27A6C84                   7908          DC    X'E27A406CA27A6C847A406CA21BADF094' S...s..d...s..0m
000058B8 15001BADF3F194D9                   7909          DC    X'15001BADF3F194D9C4E4E37A40C6C1C9' ....31mRDUT..FAI
000058C8 D37A406CA27A6C84                   7910          DC    X'D37A406CA27A6C847A406CA27A4081A2' L...s..d...s..as
000058D8 A28599A340868189                   7911          DC    X'A28599A3408681899385847A40997A40' sert.failed..r..
000058E8 0000998583969984                   7912          DC    X'00009985839699844D6C9393845D4086' ..record..lld..f
000058F8 8189938584150000                   7913          DC    X'818993858415000099001BADF3F194D9' ailed...r...31mR
00005908 C4E4E37A40C6C1C9                   7914          DC    X'C4E4E37A40C6C1C9D37A406CA27A6C84' DUT..FAIL...s..d
00005918 7A406CA27A4081A2                   7915          DC    X'7A406CA27A4081A2A28599A340868189' ...s..assert.fai
00005928 9385847A40A5407E                   7916          DC    X'9385847A40A5407E7E4085A797AD89BD' led..v....exp.i.
00005938 4BA57A400000D76C                   7917          DC    X'4BA57A400000D76C4BF2864089A2406C' .v....P..2f.is..
00005948 9393846B4085A797                   7918          DC    X'9393846B4085A7978583A38584406C93' lld..expected..l
00005958 93840000A5407E7E                   7919          DC    X'93840000A5407E7E4085A797AD89BD4B' ld..v....exp.i..
00005968 A5001BADF3F194D9                   7920          DC    X'A5001BADF3F194D9C4E4E37A40C6C1C9' v...31mRDUT..FAI
00005978 D37A406CA27A6C84                   7921          DC    X'D37A406CA27A6C847A406CA27A4081A2' L...s..d...s..as
00005988 A28599A340868189                   7922          DC    X'A28599A3408681899385847A4099846D' sert.failed..rd.
00005998 8482936D8598F04D                   7923          DC    X'8482936D8598F04DA56B4085A7976B40' dbl.eq0.v..exp..
000059A8 F04BF0F0F0F0F0F0                   7924          DC    X'F04BF0F0F0F0F0F0F15D7A400000D485' 0.0000001.....Me
000059B8 81954089A2406C86                   7925          DC    X'81954089A2406C866B4085A7978583A3' an.is..f..expect
000059C8 8584406C86009984                   7926          DC    X'8584406C860099846D8482936D8598F0' ed..f.rd.dbl.eq0
000059D8 4DA56B4085A7976B                   7927          DC    X'4DA56B4085A7976B40F04BF0F0F0F0F0' .v..exp..0.00000
000059E8 F0F15D001BADF3F1                   7928          DC    X'F0F15D001BADF3F194D9C4E4E37A40C6' 01....31mRDUT..F
000059F8 C1C9D37A406CA27A                   7929          DC    X'C1C9D37A406CA27A6C847A406CA27A40' AIL...s..d...s..
00005A08 81A2A28599A34086                   7930          DC    X'81A2A28599A3408681899385847A4099' assert.failed..r
00005A18 846D8482936D8598                   7931          DC    X'846D8482936D8598F04DA56B4085A797' d.dbl.eq0.v..exp
00005A28 6B408597A2899396                   7932          DC    X'6B408597A2899396955D7A400000E2A3' ..epsilon.....St
00005A38 84C485A54089A240                   7933          DC    X'84C485A54089A2406C4BF6866B4085A7' dDev.is...6f..ex
00005A48 978583A38584406C                   7934          DC    X'978583A38584406C4BF6867A40848986' pected...6f..dif
00005A58 86406C4BF68640A5                   7935          DC    X'86406C4BF68640A5A2408597A2899396' f...6f.vs.epsilo
00005A68 95406C4BF6860000                   7936          DC    X'95406C4BF686000099846D8482936D85' n...6f..rd.dbl.e
00005A78 98F04DA56B4085A7                   7937          DC    X'98F04DA56B4085A7976B408597A28993' q0.v..exp..epsil
00005A88 96955D001BADF3F1                   7938          DC    X'96955D001BADF3F194D9C4E4E37A40C6' on....31mRDUT..F
00005A98 C1C9D37A406CA27A                   7939          DC    X'C1C9D37A406CA27A6C847A406CA27A40' AIL...s..d...s..
00005AA8 81A2A28599A34086                   7940          DC    X'81A2A28599A3408681899385847A40A5' assert.failed..v
00005AB8 407E7E40894EF17A                   7941          DC    X'407E7E40894EF17A4000A396A381936D' ....i.1...total.
00005AC8 8396A495A34089A2                   7942          DC    X'8396A495A34089A2406C9393846B4085' count.is..lld..e
00005AD8 A7978583A3858440                   7943          DC    X'A7978583A38584406C9393840000A540' xpected..lld..v.
00005AE8 7E7E40894EF10000                   7944          DC    X'7E7E40894EF10000D481A74089A2406C' ...i.1..Max.is..
00005AF8 9393846B4085A797                   7945          DC    X'9393846B4085A7978583A38584406C93' lld..expected..l
00005B08 93840000D4899540                   7946          DC    X'93840000D489954089A2406C9393846B' ld..Min.is..lld.
00005B18 4085A7978583A385                   7947          DC    X'4085A7978583A38584406C9393840000' .expected..lld..
00005B28 1BADF3F194D9C4E4                   7948          DC    X'1BADF3F194D9C4E4E37A40C6C1C9D37A' ..31mRDUT..FAIL.
00005B38 406CA27A6C847A40                   7949          DC    X'406CA27A6C847A406CA27A4081A2A285' ..s..d...s..asse
00005B48 99A3408681899385                   7950          DC    X'99A3408681899385847A405A89A29581' rt.failed...isna
00005B58 954DA55D7A400000                   7951          DC    X'954DA55D7A400000D48581954089A240' n.v.....Mean.is.
00005B68 6C866B4085A79785                   7952          DC    X'6C866B4085A7978583A3858440D581D5' .f..expected.NaN
00005B78 00005A4D4DF05D40                   7953          DC    X'00005A4D4DF05D406F404D4D4DA289A9' .....0.......siz
00005B88 859686404DA55D40                   7954          DC    X'859686404DA55D407E7E40A289A98596' eof..v.....sizeo
00005B98 86404D86939681A3                   7955          DC    X'86404D86939681A35D5D406F406D6D82' f..float.......b
                                                                                                                           Page  159 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00005BA8 A48993A389956D89                   7956          DC    X'A48993A389956D89A295819584F3F24D' uiltin.isnand32.
00005BB8 A55D407A404DA289                   7957          DC    X'A55D407A404DA289A9859686404DA55D' v.....sizeof..v.
00005BC8 407E7E40A289A985                   7958          DC    X'407E7E40A289A9859686404D8496A482' ....sizeof..doub
00005BD8 93855D5D406F406D                   7959          DC    X'93855D5D406F406D6D82A48993A38995' le.......builtin
00005BE8 6D89A295819584F6                   7960          DC    X'6D89A295819584F6F44DA55D407A406D' .isnand64.v.....
00005BF8 6D82A48993A38995                   7961          DC    X'6D82A48993A389956D89A295819584F1' .builtin.isnand1
00005C08 F2F84DA55D5D5D40                   7962          DC    X'F2F84DA55D5D5D407A404D4D4DA289A9' 28.v.........siz
00005C18 859686404DA55D40                   7963          DC    X'859686404DA55D407E7E40A289A98596' eof..v.....sizeo
00005C28 86404D86939681A3                   7964          DC    X'86404D86939681A35D5D406F406D6D82' f..float.......b
00005C38 A48993A389956D89                   7965          DC    X'A48993A389956D89A2958195864DA55D' uiltin.isnanf.v.
00005C48 407A404DA289A985                   7966          DC    X'407A404DA289A9859686404DA55D407E' ....sizeof..v...
00005C58 7E40A289A9859686                   7967          DC    X'7E40A289A9859686404D8496A4829385' ..sizeof..double
00005C68 5D5D406F406D6D82                   7968          DC    X'5D5D406F406D6D82A48993A389956D89' .......builtin.i
00005C78 A29581954DA55D40                   7969          DC    X'A29581954DA55D407A406D6D82A48993' snan.v......buil
00005C88 A389956D89A29581                   7970          DC    X'A389956D89A2958195934DA55D5D5D5D' tin.isnanl.v....
00005C98 0000E2A384C485A5                   7971          DC    X'0000E2A384C485A54089A2406C866B40' ..StdDev.is..f..
00005CA8 85A7978583A38584                   7972          DC    X'85A7978583A3858440D581D500001BAD' expected.NaN....
00005CB8 F3F194D9C4E4E37A                   7973          DC    X'F3F194D9C4E4E37A40C6C1C9D37A406C' 31mRDUT..FAIL...
00005CC8 A27A6C847A406CA2                   7974          DC    X'A27A6C847A406CA27A4081A2A28599A3' s..d...s..assert
00005CD8 408681899385847A                   7975          DC    X'408681899385847A40888499606EA289' .failed..hdr..si
00005CE8 8795898689838195                   7976          DC    X'8795898689838195A3C68987A49985A2' gnificantFigures
00005CF8 407E7E40A2898786                   7977          DC    X'407E7E40A28987868987A27A4000E289' ....sigfigs...Si
00005D08 8795898689838195                   7978          DC    X'8795898689838195A340868987A49985' gnificant.figure
00005D18 A24089A2406C9393                   7979          DC    X'A24089A2406C9393846B4085A7978583' s.is..lld..expec
00005D28 A38584406C840000                   7980          DC    X'A38584406C840000888499606EA28987' ted..d..hdr..sig
00005D38 95898689838195A3                   7981          DC    X'95898689838195A3C68987A49985A240' nificantFigures.
00005D48 7E7E40A289878689                   7982          DC    X'7E7E40A28987868987A200001BADF3F1' ...sigfigs....31
00005D58 94D9C4E4E37A40C6                   7983          DC    X'94D9C4E4E37A40C6C1C9D37A406CA27A' mRDUT..FAIL...s.
00005D68 6C847A406CA27A40                   7984          DC    X'6C847A406CA27A4081A2A28599A34086' .d...s..assert.f
00005D78 81899385847A4088                   7985          DC    X'81899385847A40888499606E9396A685' ailed..hdr..lowe
00005D88 A2A3E39981839281                   7986          DC    X'A2A3E39981839281829385E58193A485' stTrackableValue
00005D98 407E7E40948995A5                   7987          DC    X'407E7E40948995A581937A4000009396' ....minval....lo
00005DA8 A685A2A3E3998183                   7988          DC    X'A685A2A3E39981839281829385E58193' westTrackableVal
00005DB8 A4854089A2406C93                   7989          DC    X'A4854089A2406C9393846B4085A79785' ue.is..lld..expe
00005DC8 83A38584406C9393                   7990          DC    X'83A38584406C93938400888499606E93' cted..lld.hdr..l
00005DD8 96A685A2A3E39981                   7991          DC    X'96A685A2A3E39981839281829385E581' owestTrackableVa
00005DE8 93A485407E7E4094                   7992          DC    X'93A485407E7E40948995A58193001BAD' lue....minval...
00005DF8 F3F194D9C4E4E37A                   7993          DC    X'F3F194D9C4E4E37A40C6C1C9D37A406C' 31mRDUT..FAIL...
00005E08 A27A6C847A406CA2                   7994          DC    X'A27A6C847A406CA27A4081A2A28599A3' s..d...s..assert
00005E18 408681899385847A                   7995          DC    X'408681899385847A40888499606E8889' .failed..hdr..hi
00005E28 878885A2A3E39981                   7996          DC    X'878885A2A3E39981839281829385E581' ghestTrackableVa
00005E38 93A485407E7E4094                   7997          DC    X'93A485407E7E409481A7A581937A4000' lue....maxval...
00005E48 8889878885A2A3E3                   7998          DC    X'8889878885A2A3E39981839281829385' highestTrackable
00005E58 E58193A4854089A2                   7999          DC    X'E58193A4854089A2406C9393846B4085' Value.is..lld..e
00005E68 A7978583A3858440                   8000          DC    X'A7978583A38584406C93938400008884' xpected..lld..hd
00005E78 99606E8889878885                   8001          DC    X'99606E8889878885A2A3E39981839281' r..highestTracka
00005E88 829385E58193A485                   8002          DC    X'829385E58193A485407E7E409481A7A5' bleValue....maxv
00005E98 8193000099858396                   8003          DC    X'819300009985839699844DF1F15D4086' al..record.11..f
00005EA8 8189938584150000                   8004          DC    X'8189938584150000'                 ailed...
                                            8005 @E__stderrp ALIAS C'@@STDERP'
                                            8006          EXTRN @E__stderrp
                                            8007 @Erd_unittest_assert_on_failure ALIAS X'99846DA49589A3A385A2A36D81A2A28*
                                                                                                                           Page  160 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
                                                                599A36D96956D86818993A49985'
                                            8008          EXTRN @Erd_unittest_assert_on_failure
                                            8009 *
                                            8010 *
                                            8011 *   Re-entrant Data Initialization Section
                                            8012 *
                                            8013 @@INIT@  ALIAS C'rdhdrhistogram:'
00005EB0                00005EB0 00000230   8014 @@INIT@  CSECT
                                            8015 @@INIT@  AMODE ANY
                                            8016 @@INIT@  RMODE ANY
00005EB0 05                                 8017          DC    XL1'5'
00005EB1 000000                             8018          DC    AL3(0)
00005EB4 00000120                           8019          DC    AL4(288)
00005EB8 00000000                           8020          DC    4X'00'
00005EBC 00000000                           8021          DC    Q(@@STATIC)
00005EC0 00000000                           8022          DC    X'00000000'
00005EC4 00000001                           8023          DC    X'00000001'
00005EC8 00000000                           8024          DC    X'00000000'
00005ECC 000000FF                           8025          DC    X'000000FF'
00005ED0 0102039C09867F97                   8026          DC    X'0102039C09867F978D8E0B0C0D0E0F10' .....f.p........
00005EE0 1112139D85088718                   8027          DC    X'1112139D8508871819928F1C1D1E1F80' ....e.g..k......
00005EF0 818283840A171B88                   8028          DC    X'818283840A171B88898A8B8C05060790' abcd...hi.......
00005F00 9116939495960498                   8029          DC    X'9116939495960498999A9B14159E1A20' j.lmno.qr.......
00005F10 A0E2E4E0E1E3E5E7                   8030          DC    X'A0E2E4E0E1E3E5E7F1A22E3C282B7C26' .SU..TVX1s......
00005F20 E9EAEBE8EDEEEFEC                   8031          DC    X'E9EAEBE8EDEEEFECDF21242A293B5E2D' Z..Y............
00005F30 2FC2C4C0C1C3C5C7                   8032          DC    X'2FC2C4C0C1C3C5C7D1A62C255F3E3FF8' .BD.ACEGJw.....8
00005F40 C9CACBC8CDCECFCC                   8033          DC    X'C9CACBC8CDCECFCC603A2340273D22D8' I..H...........Q
00005F50 6162636465666768                   8034          DC    X'616263646566676869ABBBF0FDFEB1B0' ...........0....
00005F60 6A6B6C6D6E6F7071                   8035          DC    X'6A6B6C6D6E6F707172AABAE6B8C6A4B5' ...........W.Fu.
00005F70 7E73747576777879                   8036          DC    X'7E737475767778797AA1BFD05BDEAEAC' ................
00005F80 A3A5B7A9A7B6BCBD                   8037          DC    X'A3A5B7A9A7B6BCBDBEDDA8AF5DB4D77B' tv.zx.....y...P.
00005F90 4142434445464748                   8038          DC    X'414243444546474849ADF4F6F2F3F57D' ..........46235.
00005FA0 4A4B4C4D4E4F5051                   8039          DC    X'4A4B4C4D4E4F505152B9FBFCF9FAFF5C' ............9...
00005FB0 F753545556575859                   8040          DC    X'F7535455565758595AB2D4D6D2D3D530' 7.........MOKLN.
00005FC0 3132333435363738                   8041          DC    X'313233343536373839B3DBDCD9DA9F40' ............R...
                                            8042 *
00005FD0 05                                 8043          DC    XL1'5'
00005FD1 000000                             8044          DC    AL3(0)
00005FD4 000001E0                           8045          DC    AL4(480)
00005FD8 00000000                           8046          DC    4X'00'
00005FDC 00000000                           8047          DC    Q(@@STATIC)
00005FE0 00000000                           8048          DC    X'00000000'
00005FE4 00000101                           8049          DC    X'00000101'
00005FE8 00000000                           8050          DC    X'00000000'
00005FEC 000000A0                           8051          DC    X'000000A0'
00005FF0 010203372D2E2F16                   8052          DC    X'010203372D2E2F1605150B0C0D0E0F10' ................
00006000 1112133C3D322618                   8053          DC    X'1112133C3D322618193F271C1D1E1F40' ................
00006010 5A7F7B5B6C507D4D                   8054          DC    X'5A7F7B5B6C507D4D5D5C4E6B604B61F0' ...............0
00006020 F1F2F3F4F5F6F7F8                   8055          DC    X'F1F2F3F4F5F6F7F8F97A5E4C7E6E6F7C' 123456789.......
00006030 C1C2C3C4C5C6C7C8                   8056          DC    X'C1C2C3C4C5C6C7C8C9D1D2D3D4D5D6D7' ABCDEFGHIJKLMNOP
00006040 D8D9E2E3E4E5E6E7                   8057          DC    X'D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D79' QRSTUVWXYZ......
00006050 8182838485868788                   8058          DC    X'81828384858687888991929394959697' abcdefghijklmnop
                                                                                                                           Page  161 
  Active Usings: None
  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                                    DASM V1.95.14 2021/04/29 12:42 
00006060 9899A2A3A4A5A6A7                   8059          DC    X'9899A2A3A4A5A6A7A8A9C04FD0A10720' qrstuvwxyz......
00006070 2122232425061728                   8060          DC    X'2122232425061728292A2B2C090A1B30' ................
00006080 311A333435360838                   8061          DC    X'311A333435360838393A3B04143EFF80' ................
                                            8062 *
00006090 05                                 8063          DC    XL1'5'
00006091 000000                             8064          DC    AL3(0)
00006094 00000208                           8065          DC    AL4(520)
00006098 00000000                           8066          DC    4X'00'
0000609C 00000000                           8067          DC    Q(@@STATIC)
000060A0 00000000                           8068          DC    X'00000000'
000060A4 000001C0                           8069          DC    X'000001C0'
000060A8 00000000                           8070          DC    X'00000000'
000060AC 00000001                           8071          DC    X'00000001'
000060B0 8A40404040404040                   8072          DC    X'8A40404040404040'                 ........
                                            8073 *
000060B8 05                                 8074          DC    XL1'5'
000060B9 000000                             8075          DC    AL3(0)
000060BC 00000000                           8076          DC    AL4(0)
000060C0 00000000                           8077          DC    4X'00'
000060C4 00000000                           8078          DC    Q(@@STATIC)
000060C8 00000000                           8079          DC    X'00000000'
000060CC 000001E0                           8080          DC    X'000001E0'
000060D0 00000000                           8081          DC    X'00000000'
000060D4 00000001                           8082          DC    X'00000001'
000060D8 8B40404040404040                   8083          DC    X'8B40404040404040'                 ........
                                            8084 *
                                            8085          END
                                                 Relocation Dictionary                                                     Page  162 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000002 00000018   A 4      +
 00000002 00000002 00000040   A 4      +
 00000002 00000002 00000048   A 4      +
 00000002 0000000C 00000150   A 4      +
 00000002 0000000A 00000158   A 4      +
 00000002 0000000F 00000160   A 4      +
 00000002 0000000F 00000168   A 4      +
 00000002 00000002 00000188   A 4      +
 00000002 00000002 000001B0   A 4      +
 00000002 00000002 000001B8   A 4      +
 00000002 0000000D 00000270   A 4      +
 00000002 00000002 000002B8   A 4      +
 00000002 00000002 000002C0   A 4      +
 00000002 00000002 00000330   A 4      +
 00000002 00000002 00000358   A 4      +
 00000002 00000002 00000360   A 4      +
 00000002 00000002 00000418   A 4      +
 00000002 00000002 00000448   A 4      +
 00000002 00000002 00000470   A 4      +
 00000002 00000002 00000478   A 4      +
 00000002 00000005 000004F8   A 4      +
 00000002 00000009 00000508   A 4      +
 00000002 00000007 00000518   A 4      +
 00000002 00000008 00000520   A 4      +
 00000002 00000002 00000530   A 4      +
 00000002 00000002 00000788   A 4      +
 00000002 00000002 00000790   A 4      +
 00000002 00000002 00000840   A 4      +
 00000002 00000002 00000848   A 4      +
 00000002 00000002 000008B8   A 4      +
 00000002 00000002 000008E0   A 4      +
 00000002 00000002 000008E8   A 4      +
 00000002 00000002 000009D0   A 4      +
 00000002 00000002 00000A18   A 4      +
 00000002 00000002 00000A20   A 4      +
 00000002 00000002 00000AD8   A 4      +
 00000002 00000002 00000B00   A 4      +
 00000002 00000002 00000B08   A 4      +
 00000002 00000002 00000BE0   A 4      +
 00000002 00000002 00000C38   A 4      +
 00000002 00000002 00000C40   A 4      +
 00000002 00000002 00000CD0   A 4      +
 00000002 00000002 00000CD8   A 4      +
 00000002 00000002 00000D48   A 4      +
 00000002 00000002 00000D70   A 4      +
 00000002 00000002 00000D78   A 4      +
 00000002 00000002 00000E88   A 4      +
 00000002 00000002 00000E90   A 4      +
 00000002 00000002 00000EC8   A 4      +
 00000002 00000002 00000EF0   A 4      +
 00000002 00000002 00000EF8   A 4      +
 00000002 00000002 00001010   A 4      +
 00000002 00000002 00001018   A 4      +
                                                 Relocation Dictionary                                                     Page  163 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000002 00001020   A 4      +
 00000002 00000002 00001058   A 4      +
 00000002 00000002 00001080   A 4      +
 00000002 00000002 00001088   A 4      +
 00000002 00000002 00001180   A 4      +
 00000002 00000002 00001188   A 4      +
 00000002 00000002 000011C0   A 4      +
 00000002 00000002 000011E8   A 4      +
 00000002 00000002 000011F0   A 4      +
 00000002 00000002 000012B8   A 4      +
 00000002 00000002 000012F0   A 4      +
 00000002 00000002 00001318   A 4      +
 00000002 00000002 00001320   A 4      +
 00000002 00000002 00001420   A 4      +
 00000002 00000002 00001428   A 4      +
 00000002 00000002 00001458   A 4      +
 00000002 00000002 00001480   A 4      +
 00000002 00000002 00001488   A 4      +
 00000002 00000002 000015A8   A 4      +
 00000002 00000002 000015B0   A 4      +
 00000002 00000002 000015B8   A 4      +
 00000002 00000002 000015E0   A 4      +
 00000002 00000002 00001608   A 4      +
 00000002 00000002 00001610   A 4      +
 00000002 00000002 00001690   A 4      +
 00000002 00000002 00001698   A 4      +
 00000002 00000002 000016A0   A 4      +
 00000002 00000002 000017F0   A 4      +
 00000002 00000002 00001818   A 4      +
 00000002 00000002 00001820   A 4      +
 00000002 00000002 000018B0   A 4      +
 00000002 00000002 000018B8   A 4      +
 00000002 00000002 000018C0   A 4      +
 00000002 00000006 000018C8   A 4      +
 00000002 00000002 000019E0   A 4      +
 00000002 00000002 00001A08   A 4      +
 00000002 00000002 00001A10   A 4      +
 00000002 00000002 00001A90   A 4      +
 00000002 00000002 00001A98   A 4      +
 00000002 00000002 00001B58   A 4      +
 00000002 00000002 00001B80   A 4      +
 00000002 00000002 00001B88   A 4      +
 00000002 00000002 00001C08   A 4      +
 00000002 00000002 00001C10   A 4      +
 00000002 00000002 00001CD8   A 4      +
 00000002 00000002 00001D00   A 4      +
 00000002 00000002 00001D08   A 4      +
 00000002 00000002 00001D98   A 4      +
 00000002 00000002 00001DA0   A 4      +
 00000002 00000002 00001E78   A 4      +
 00000002 00000002 00001EA0   A 4      +
 00000002 00000002 00001EA8   A 4      +
 00000002 00000002 00001F60   A 4      +
                                                 Relocation Dictionary                                                     Page  164 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000002 00002010   A 4      +
 00000002 00000002 00002038   A 4      +
 00000002 00000002 00002040   A 4      +
 00000002 00000002 000020F8   A 4      +
 00000002 00000002 00002100   A 4      +
 00000002 00000002 000021C0   A 4      +
 00000002 00000002 000021E8   A 4      +
 00000002 00000002 000021F0   A 4      +
 00000002 00000002 000022F8   A 4      +
 00000002 00000002 00002300   A 4      +
 00000002 00000002 00002308   A 4      +
 00000002 00000003 00002318   A 4      +
 00000002 0000000F 00002320   A 4      +
 00000002 0000000F 00002328   A 4      +
 00000002 0000000B 00002330   Q 4      +
 00000002 00000004 00002334   Q 4      +
 00000002 0000000A 00002338   A 4      +
 00000002 00000002 00002340   A 4      +
 00000002 00000002 00002558   A 4      +
 00000002 00000002 00002580   A 4      +
 00000002 00000002 00002588   A 4      +
 00000002 00000002 000026A0   A 4      +
 00000002 00000002 000026E0   A 4      +
 00000002 00000003 000026E8   A 4      +
 00000002 0000000F 000026F0   A 4      +
 00000002 0000000F 000026F8   A 4      +
 00000002 0000000B 00002700   Q 4      +
 00000002 00000004 00002704   Q 4      +
 00000002 0000000A 00002708   A 4      +
 00000002 00000002 00002710   A 4      +
 00000002 00000002 00002718   A 4      +
 00000002 00000002 00002A58   A 4      +
 00000002 00000002 00002A80   A 4      +
 00000002 00000002 00002A88   A 4      +
 00000002 00000002 00002B18   A 4      +
 00000002 00000002 00002B28   A 4      +
 00000002 00000003 00002B30   A 4      +
 00000002 0000000F 00002B38   A 4      +
 00000002 0000000F 00002B40   A 4      +
 00000002 0000000B 00002B48   Q 4      +
 00000002 00000004 00002B4C   Q 4      +
 00000002 0000000A 00002B50   A 4      +
 00000002 00000002 00002B58   A 4      +
 00000002 00000002 00002B60   A 4      +
 00000002 00000002 00002B70   A 4      +
 00000002 00000002 00002EA8   A 4      +
 00000002 00000002 00002ED0   A 4      +
 00000002 00000002 00002ED8   A 4      +
 00000002 00000002 00002F68   A 4      +
 00000002 00000002 00002F80   A 4      +
 00000002 00000003 00002F88   A 4      +
 00000002 0000000F 00002F90   A 4      +
 00000002 0000000F 00002F98   A 4      +
                                                 Relocation Dictionary                                                     Page  165 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 0000000B 00002FA0   Q 4      +
 00000002 00000004 00002FA4   Q 4      +
 00000002 0000000A 00002FA8   A 4      +
 00000002 00000002 00002FB0   A 4      +
 00000002 00000002 00002FB8   A 4      +
 00000002 00000002 00002FC0   A 4      +
 00000002 00000002 00003318   A 4      +
 00000002 00000002 00003340   A 4      +
 00000002 00000002 00003348   A 4      +
 00000002 00000002 000033D8   A 4      +
 00000002 00000002 000033E0   A 4      +
 00000002 00000003 000033E8   A 4      +
 00000002 0000000F 000033F0   A 4      +
 00000002 0000000F 000033F8   A 4      +
 00000002 0000000B 00003400   Q 4      +
 00000002 00000004 00003404   Q 4      +
 00000002 0000000A 00003408   A 4      +
 00000002 00000002 00003410   A 4      +
 00000002 00000002 00003700   A 4      +
 00000002 00000002 00003728   A 4      +
 00000002 00000002 00003730   A 4      +
 00000002 00000002 000037C8   A 4      +
 00000002 00000002 000037D0   A 4      +
 00000002 00000003 000037D8   A 4      +
 00000002 0000000F 000037E0   A 4      +
 00000002 0000000F 000037E8   A 4      +
 00000002 0000000B 000037F0   Q 4      +
 00000002 00000004 000037F4   Q 4      +
 00000002 0000000A 000037F8   A 4      +
 00000002 00000002 00003800   A 4      +
 00000002 00000002 00003808   A 4      +
 00000002 00000002 00003AF8   A 4      +
 00000002 00000002 00003B20   A 4      +
 00000002 00000002 00003B28   A 4      +
 00000002 00000002 00003BB8   A 4      +
 00000002 00000002 00003BC0   A 4      +
 00000002 00000003 00003BC8   A 4      +
 00000002 0000000F 00003BD0   A 4      +
 00000002 0000000F 00003BD8   A 4      +
 00000002 0000000B 00003BE0   Q 4      +
 00000002 00000004 00003BE4   Q 4      +
 00000002 0000000A 00003BE8   A 4      +
 00000002 00000002 00003BF0   A 4      +
 00000002 00000002 00003BF8   A 4      +
 00000002 00000002 00003EE8   A 4      +
 00000002 00000002 00003F10   A 4      +
 00000002 00000002 00003F18   A 4      +
 00000002 00000002 00003FA8   A 4      +
 00000002 00000002 00003FB0   A 4      +
 00000002 00000003 00003FB8   A 4      +
 00000002 0000000F 00003FC0   A 4      +
 00000002 0000000F 00003FC8   A 4      +
 00000002 0000000B 00003FD0   Q 4      +
                                                 Relocation Dictionary                                                     Page  166 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000004 00003FD4   Q 4      +
 00000002 0000000A 00003FD8   A 4      +
 00000002 00000002 00003FE0   A 4      +
 00000002 00000002 00003FE8   A 4      +
 00000002 00000002 00003FF0   A 4      +
 00000002 00000002 000042F0   A 4      +
 00000002 00000002 00004318   A 4      +
 00000002 00000002 00004320   A 4      +
 00000002 00000002 000044B8   A 4      +
 00000002 00000002 000044C0   A 4      +
 00000002 00000003 000044C8   A 4      +
 00000002 0000000F 000044D0   A 4      +
 00000002 0000000F 000044D8   A 4      +
 00000002 0000000B 000044E0   Q 4      +
 00000002 00000004 000044E4   Q 4      +
 00000002 0000000A 000044E8   A 4      +
 00000002 00000002 000044F0   A 4      +
 00000002 00000002 000044F8   A 4      +
 00000002 00000002 000046D8   A 4      +
 00000002 00000002 00004700   A 4      +
 00000002 00000002 00004708   A 4      +
 00000002 00000002 00004770   A 4      +
 00000002 00000003 00004778   A 4      +
 00000002 0000000F 00004780   A 4      +
 00000002 0000000F 00004788   A 4      +
 00000002 0000000B 00004790   Q 4      +
 00000002 00000004 00004794   Q 4      +
 00000002 0000000A 00004798   A 4      +
 00000002 00000002 000047A0   A 4      +
 00000002 00000002 000049B8   A 4      +
 00000002 00000002 000049E0   A 4      +
 00000002 00000002 000049E8   A 4      +
 00000002 00000002 00004B70   A 4      +
 00000002 00000003 00004B78   A 4      +
 00000002 0000000F 00004B80   A 4      +
 00000002 0000000F 00004B88   A 4      +
 00000002 0000000B 00004B90   Q 4      +
 00000002 00000004 00004B94   Q 4      +
 00000002 0000000A 00004B98   A 4      +
 00000002 00000002 00004BA0   A 4      +
 00000002 00000002 00004D80   A 4      +
 00000002 00000002 00004DA8   A 4      +
 00000002 00000002 00004DB0   A 4      +
 00000002 00000002 00004F30   A 4      +
 00000002 00000002 00004F38   A 4      +
 00000002 00000003 00004F40   A 4      +
 00000002 0000000F 00004F48   A 4      +
 00000002 0000000F 00004F50   A 4      +
 00000002 0000000B 00004F58   Q 4      +
 00000002 00000004 00004F5C   Q 4      +
 00000002 0000000A 00004F60   A 4      +
 00000002 00000002 00004F68   A 4      +
 00000002 00000002 00005048   A 4      +
                                                 Relocation Dictionary                                                     Page  167 
  Pos.Id   Rel.Id   Address  Type   Action                                                            DASM V1.95.14 2021/04/29 12:42 
 00000002 00000002 00005070   A 4      +
 00000002 00000002 00005078   A 4      +
 00000002 00000002 00005168   A 4      +
 00000002 00000002 00005190   A 4      +
 00000002 00000003 00005198   A 4      +
 00000002 0000000F 000051A0   A 4      +
 00000002 0000000F 000051A8   A 4      +
 00000002 0000000B 000051B0   Q 4      +
 00000002 00000004 000051B4   Q 4      +
 00000002 0000000A 000051B8   A 4      +
 00000002 00000002 000051C0   A 4      +
 00000002 00000002 000051C8   A 4      +
 00000002 00000002 00005530   A 4      +
 00000002 00000002 00005558   A 4      +
 00000002 00000002 00005560   A 4      +
 00000002 00000002 00005688   A 4      +
 00000002 00000002 00005690   A 4      +
 00000002 00000002 00005698   A 4      +
 00000002 00000002 000056A0   A 4      +
 00000002 00000002 000056A8   A 4      +
 00000002 00000002 000056B0   A 4      +
 00000002 00000002 000056B8   A 4      +
 00000002 00000002 000056C0   A 4      +
 00000002 00000002 000056C8   A 4      +
 00000002 00000002 000056D0   A 4      +
 00000002 00000002 000056D8   A 4      +
 00000002 00000002 000056E0   A 4      +
 00000002 00000002 000056E8   A 4      +
 00000012 0000000E 00005EBC   Q 4      +
 00000012 0000000E 00005FDC   Q 4      +
 00000012 0000000E 0000609C   Q 4      +
 00000012 0000000E 000060C4   Q 4      +
                                                 DSECT Cross Reference                                                     Page  168 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:42 
@AUTO#bit$Len
         000000B0  FFFFFFF7  01207
@AUTO#rd_calloc
         000000A8  FFFFFFFF  00164
@AUTO#rd_dbl_eq0
         000000A8  FFFFFFFD  00350
@AUTO#rd_free
         000000A8  FFFFFFFE  00267
@AUTO#rd_hdr_counts$Index
         000000AC  FFFFFFF9  00975
@AUTO#rd_hdr_counts$Index$For
         000000AC  FFFFFFEE  02225
@AUTO#rd_hdr_get$Bucket$Index
         000000B0  FFFFFFF6  01321
@AUTO#rd_hdr_get$Count$At$Index
         000000A8  FFFFFFF8  01089
@AUTO#rd_hdr_get$Sub$Bucket$Idx
         000000A8  FFFFFFF5  01398
@AUTO#rd_hdr_highest$Equivalent$Value
         000000A8  FFFFFFF0  01971
@AUTO#rd_hdr_histogram_destroy
         000000A8  FFFFFFFC  00455
@AUTO#rd_hdr_histogram_max
         000000D8  FFFFFFEB  02750
@AUTO#rd_hdr_histogram_mean
         000000E8  FFFFFFE9  03055
@AUTO#rd_hdr_histogram_min
         000000D8  FFFFFFEA  02897
@AUTO#rd_hdr_histogram_new
         000000C0  FFFFFFFB  00779
@AUTO#rd_hdr_histogram_quantile
         000000E8  FFFFFFE7  03374
@AUTO#rd_hdr_histogram_record
         000000AC  FFFFFFE8  03207
@AUTO#rd_hdr_histogram_reset
         000000AC  FFFFFFFA  00892
@AUTO#rd_hdr_histogram_stddev
         000000E8  FFFFFFEC  02604
@AUTO#rd_hdr_iter_next
         000000A8  FFFFFFED  02414
@AUTO#rd_hdr_lowest$Equivalent$Value
         000000AC  FFFFFFF2  01744
@AUTO#rd_hdr_median$Equivalent$Value
         000000A8  FFFFFFEF  02092
@AUTO#rd_hdr_next$Non$Equivalent$Value
         000000A8  FFFFFFF1  01866
@AUTO#rd_hdr_size$Of$Equivalent$Value$Range
         000000AC  FFFFFFF3  01607
@AUTO#rd_hdr_value$From$Index
         000000A8  FFFFFFF4  01473
@AUTO#unittest_rdhdrhistogram
         000000AC  FFFFFFD9  07841
@AUTO#ut_high_sigfig
                                                 DSECT Cross Reference                                                     Page  169 
DSECT     LENGTH    ID   DEFN                                                                         DASM V1.95.14 2021/04/29 12:42 
         000000F8  FFFFFFE6  03662
@AUTO#ut_max
         000000B0  FFFFFFE1  05461
@AUTO#ut_mean
         000000B0  FFFFFFE4  04430
@AUTO#ut_min
         000000B0  FFFFFFE0  05791
@AUTO#ut_minmax_trackable
         000000B0  FFFFFFDC  07020
@AUTO#ut_nan
         000000B0  FFFFFFDE  06475
@AUTO#ut_quantile
         00000118  FFFFFFE5  04068
@AUTO#ut_reset
         000000B0  FFFFFFDF  06130
@AUTO#ut_sigfigs
         000000AC  FFFFFFDD  06714
@AUTO#ut_stddev
         000000B0  FFFFFFE3  04802
@AUTO#ut_subbucketmask_overflow
         00000100  FFFFFFDA  07640
@AUTO#ut_totalcount
         000000B0  FFFFFFE2  05133
@AUTO#ut_unitmagnitude_overflow
         000000AC  FFFFFFDB  07248
                                          Macro and Copy Code Source Summary                                               Page  170 
Source                                                    Members                                     DASM V1.95.14 2021/04/29 12:42 

C:\DIGNUS\MACLIB                                          DCCCATR  DCCEPIL  DCCPRLG  DCCPRV   dccextrn
                                                      Using Map                                                            Page  171 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 
  Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text
          Count      Id           Type          Value    Range     Id        Disp    Stmt
    99  00000096  00000002 USING  ORDINARY    00000058 00001000 00000002  12 00110    126 @REGION_751_1,12
   159  00000170  00000002 DROP                                           12              12
   227  00000206  00000002 USING  ORDINARY    000001C8 00001000 00000002  12 000A8    234 @REGION_754_1,12
   262  00000278  00000002 DROP                                           12              12
   319  000002DA  00000002 USING  ORDINARY    000002D0 00001000 00000002  12 00028    329 @REGION_963_1,12
   345  0000030A  00000002 DROP                                           12              12
   415  000003AE  00000002 USING  ORDINARY    00000370 00001000 00000002  12 000A8    422 @REGION_952_1,12
   450  00000420  00000002 DROP                                           12              12
   520  000004C6  00000002 USING  ORDINARY    00000488 00001000 00000002  12 00266    710 @REGION_953_1,12
   774  00000736  00000002 DROP                                           12              12
   854  000007AA  00000002 USING  ORDINARY    000007A0 00001000 00000002  12 0003C    874 @REGION_954_1,12
   887  000007F2  00000002 DROP                                           12              12
  1041  00000936  00000002 USING  ORDINARY    000008F8 00001000 00000002  12 000D8   1054 @REGION_965_1,12
  1084  000009D8  00000002 DROP                                           12              12
  1141  00000A3A  00000002 USING  ORDINARY    00000A30 00001000 00000002  12 0006E   1185 @REGION_966_1,12
  1202  00000AB0  00000002 DROP                                           12              12
  1271  00000B56  00000002 USING  ORDINARY    00000B18 00001000 00000002  12 000C8   1280 @REGION_967_1,12
  1316  00000BE8  00000002 DROP                                           12              12
  1537  00000DC6  00000002 USING  ORDINARY    00000D88 00001000 00000002  12 00108   1567 @REGION_970_1,12
  1601  00000E98  00000002 DROP                                           12              12
  1675  00000F46  00000002 USING  ORDINARY    00000F08 00001000 00000002  12 00118   1710 @REGION_971_1,12
  1739  00001028  00000002 DROP                                           12              12
  1810  000010D6  00000002 USING  ORDINARY    00001098 00001000 00000002  12 000F0   1831 @REGION_972_1,12
  1861  00001190  00000002 DROP                                           12              12
  1929  0000123E  00000002 USING  ORDINARY    00001200 00001000 00000002  12 000B8   1938 @REGION_973_1,12
  1966  000012C0  00000002 DROP                                           12              12
  2034  0000136E  00000002 USING  ORDINARY    00001330 00001000 00000002  12 000F8   2056 @REGION_974_1,12
  2087  00001430  00000002 DROP                                           12              12
  2155  000014D6  00000002 USING  ORDINARY    00001498 00001000 00000002  12 00120   2190 @REGION_975_1,12
  2220  000015C0  00000002 DROP                                           12              12
  2291  0000165E  00000002 USING  ORDINARY    00001620 00001000 00000002  12 0015E   2380 @REGION_976_1,12
  2409  000017C6  00000002 DROP                                           12              12
  2479  0000186E  00000002 USING  ORDINARY    00001830 00001000 00000002  12 00140   2574 @REGION_956_1,12
  2599  000019B8  00000002 DROP                                           12              12
  2676  00001A5E  00000002 USING  ORDINARY    00001A20 00001000 00000002  12 00090   2721 @REGION_958_1,12
  2745  00001B32  00000002 DROP                                           12              12
  2818  00001BD6  00000002 USING  ORDINARY    00001B98 00001000 00000002  12 000B8   2868 @REGION_959_1,12
  2892  00001CB6  00000002 DROP                                           12              12
  2965  00001D56  00000002 USING  ORDINARY    00001D18 00001000 00000002  12 000F2   3023 @REGION_957_1,12
  3050  00001E52  00000002 DROP                                           12              12
  3123  00001EF6  00000002 USING  ORDINARY    00001EB8 00001000 00000002  12 000E4   3160 @REGION_955_1,12
  3202  00001FE4  00000002 DROP                                           12              12
  3273  0000208E  00000002 USING  ORDINARY    00002050 00001000 00000002  12 00108   3344 @REGION_960_1,12
  3369  000021A0  00000002 DROP                                           12              12
  3442  0000223E  00000002 USING  ORDINARY    00002200 00001000 00000002  12 002F4   3631 @REGION_977_1,12
  3657  0000253C  00000002 DROP                                           12              12
  3732  000025D6  00000002 USING  ORDINARY    00002598 00001000 00000002  12 00462   4037 @REGION_978_1,12
  4063  00002A42  00000002 DROP                                           12              12
  4138  00002AD6  00000002 USING  ORDINARY    00002A98 00001000 00000002  12 003B2   4399 @REGION_979_1,12
  4425  00002E92  00000002 DROP                                           12              12
  4500  00002F26  00000002 USING  ORDINARY    00002EE8 00001000 00000002  12 003CA   4771 @REGION_980_1,12
                                                      Using Map                                                            Page  172 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 
  4797  000032FA  00000002 DROP                                           12              12
  4874  00003396  00000002 USING  ORDINARY    00003358 00001000 00000002  12 0034C   5102 @REGION_981_1,12
  5128  000036EC  00000002 DROP                                           12              12
  5201  0000377E  00000002 USING  ORDINARY    00003740 00001000 00000002  12 00358   5430 @REGION_982_1,12
  5456  00003AE0  00000002 DROP                                           12              12
  5531  00003B76  00000002 USING  ORDINARY    00003B38 00001000 00000002  12 00350   5760 @REGION_983_1,12
  5786  00003ED0  00000002 DROP                                           12              12
  5861  00003F66  00000002 USING  ORDINARY    00003F28 00001000 00000002  12 0036A   6099 @REGION_984_1,12
  6125  000042DA  00000002 DROP                                           12              12
  6200  0000436E  00000002 USING  ORDINARY    00004330 00001000 00000002  12 00342   6444 @REGION_985_1,12
  6470  000046BA  00000002 DROP                                           12              12
  6539  00004756  00000002 USING  ORDINARY    00004718 00001000 00000002  12 00234   6683 @REGION_986_1,12
  6709  00004994  00000002 DROP                                           12              12
  6778  00004A36  00000002 USING  ORDINARY    000049F8 00001000 00000002  12 00316   6989 @REGION_987_1,12
  7015  00004D56  00000002 DROP                                           12              12
  7086  00004DFE  00000002 USING  ORDINARY    00004DC0 00001000 00000002  12 00214   7217 @REGION_988_1,12
  7243  0000501C  00000002 DROP                                           12              12
  7312  000050C6  00000002 USING  ORDINARY    00005088 00001000 00000002  12 0043A   7609 @REGION_989_1,12
  7635  0000550A  00000002 DROP                                           12              12
  7714  000055AE  00000002 USING  ORDINARY    00005570 00001000 00000002  12 00178   7793 @REGION_961_1,12
  7836  000056F0  00000002 DROP                                           12              12
                                   Diagnostic Cross Reference and Assembler Summary                                        Page  173 
                                                                                                      DASM V1.95.14 2021/04/29 12:42 
      No Statements Flagged in this Assembly
DASM Dignus Systems/ASM, VERSION 1.95.14
SYSTEM: Windows 6.2                JOBNAME: (NOJOB)     STEPNAME: (NOSTEP)   PROCSTEP: (NOPROC)
Datasets Used for this Assembly
 Con  DDname   Dataset Name
  P1  RDHDRHISTOGRAM ..\asg\asm\rdhdrhistogram.asm
  L2  DCCPRLG  C:\DIGNUS\MACLIB\dccprlg
  L3  DCCCATR  C:\DIGNUS\MACLIB\dcccatr
  L4  DCCEPIL  C:\DIGNUS\MACLIB\dccepil
  L5  DCCPRV   C:\DIGNUS\MACLIB\dccprv

Assembly Start Time: 12.42.42 Stop Time: 12.42.43 Processor Time: 00.00.00.0640
Return Code 000
